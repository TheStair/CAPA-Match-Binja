{
  "address": "0xb1e10",
  "rules": [
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "link function at runtime on Linux",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "contain loop",
    "PEB access/684066f105bd43c0a5be1ea6f2b60301",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "push    r14 {__saved_r14}",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0x48",
    "mov     dword [rbp-0x54 {var_5c}], esi",
    "mov     qword [rbp-0x60 {var_68}], rdx",
    "test    rdi, rdi",
    "je      0xb235b",
    "add     rsp, 0x48",
    "mov     eax, 0x1",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "mov     r14, rdi",
    "mov     esi, 0x2f",
    "mov     rdi, rdx",
    "call    strchr",
    "test    rax, rax",
    "jne     0xb20d0",
    "mov     rdi, qword [rbp-0x60 {var_68}]",
    "mov     esi, 0x1",
    "call    dlopen",
    "mov     qword [rbp-0x38 {var_40_1}], rax",
    "test    rax, rax",
    "jne     0xb1eb8",
    "lea     rdi, [rel data_12006f]  {\"BASH_LOADABLES_PATH\"}",
    "call    find_variable",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xb20d0",
    "mov     rax, r14",
    "xor     ebx, ebx  {0x0}",
    "nop     dword [rax]",
    "test    byte [rbp-0x54 {var_5c}], 0x8",
    "je      0xb236f",
    "call    get_variable_value",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0xb20d0",
    "mov     rax, qword [rax]",
    "add     ebx, 0x1",
    "test    rax, rax",
    "jne     0xb1ec0",
    "movsxd  rbx, ebx",
    "shl     rbx, 0x3",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     qword [rbp-0x70 {var_78_1}], rax",
    "test    rax, rax",
    "je      0xb24a1",
    "mov     rdi, qword [rbp-0x60 {var_68}]",
    "call    ansic_shouldquote",
    "test    eax, eax",
    "jne     0xb23ad",
    "mov     eax, 0x7f",
    "jmp     0xb20bf",
    "mov     rdi, qword [rbp-0x60 {var_68}]",
    "xor     ecx, ecx  {0x0}",
    "mov     edx, 0x24",
    "call    sub_a9860",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xb20d0",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "xor     r9d, r9d  {0x0}",
    "xor     r8d, r8d  {0x0}",
    "mov     dword [rbp-0x58 {var_60_1}], r8d  {0x0}",
    "mov     dword [rbp-0x64 {var_6c_1}], r9d  {0x0}",
    "jmp     0xb1f30",
    "mov     r14, qword [rbp-0x60 {var_68}]",
    "cmp     byte [r14], 0x0",
    "je      0xb2431",
    "call    dlerror",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133d50]  {\"cannot open shared object %s: %s\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x60 {var_68}]",
    "mov     rdx, rbx",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "jmp     0xb20f5",
    "add     rsp, 0x48",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "mov     rdi, rax",
    "mov     esi, 0x1",
    "call    dlopen",
    "mov     rdi, rbx",
    "mov     r15, rax",
    "mov     qword [rbp-0x38 {var_40_1}], rax",
    "call    free",
    "test    r15, r15",
    "je      0xb20d0",
    "mov     rax, qword [r14+0x8]",
    "mov     r13, qword [rax]",
    "mov     rdi, r13",
    "call    strlen",
    "lea     ecx, [rax+0x8]",
    "mov     rbx, rax",
    "movsxd  r15, ecx",
    "mov     rdi, r15",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xb240a",
    "call    dlerror",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133d50]  {\"cannot open shared object %s: %s\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rdx, rbx",
    "xor     esi, esi  {0x0}",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "jmp     0xb23fc",
    "xor     esi, esi  {0x0}",
    "mov     rdi, r14",
    "call    sub_d80c0",
    "mov     r15, rax",
    "mov     qword [rbp-0x38 {var_40_1}], rax",
    "call    dlerror",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133d50]  {\"cannot open shared object %s: %s\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rdx, rbx",
    "mov     rsi, r15",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "cmp     r14, r15",
    "je      0xb20f5",
    "nop     dword [rax]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdx, r15",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    fatal_error",
    "{ Does not return }",
    "lea     rdx, [rbx+0x1]",
    "mov     rcx, r15",
    "movsxd  rbx, ebx",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "call    __memcpy_chk",
    "cmp     r15, rbx",
    "mov     rcx, r15",
    "mov     edx, 0x8",
    "cmovb   rcx, rbx",
    "lea     rdi, [r12+rbx]",
    "lea     rsi, [rel data_1212e1]  {\"_struct\"}",
    "sub     rcx, rbx",
    "call    __memcpy_chk",
    "mov     esi, 0x1",
    "mov     rdi, r13",
    "call    builtin_address_internal",
    "mov     rdi, qword [rbp-0x38 {var_40_1}]",
    "mov     rsi, r12",
    "mov     qword [rbp-0x50 {var_58_1}], rax",
    "call    dlsym",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xb2100",
    "mov     rdi, qword [rbp-0x38 {var_40_1}]",
    "call    free",
    "jmp     0xb20f5",
    "mov     rdi, qword [rbp-0x60 {var_68}]",
    "call    ansic_shouldquote",
    "test    eax, eax",
    "jne     0xb21b0",
    "lea     rdx, [rbx+0xf]",
    "mov     rdi, r12",
    "mov     rsi, rdx",
    "mov     qword [rbp-0x40 {var_48_1}], rdx",
    "call    realloc",
    "mov     rdx, qword [rbp-0x40 {var_48_1}]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0xb245d",
    "mov     r13, qword [rbp-0x60 {var_68}]",
    "cmp     byte [r13], 0x0",
    "je      0xb2210",
    "call    dlerror",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133d78]  {\"cannot find %s in shared object \u2026\"}",
    "xor     edi, edi  {0x0}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rdx, qword [rbp-0x60 {var_68}]",
    "mov     rcx, rbx",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "mov     r15, rdx",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "mov     edx, 0x5",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdx, r15",
    "lea     rsi, [rel data_11f045]  {\"xrealloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    fatal_error",
    "{ Does not return }",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "mov     qword [rbp-0x40 {var_48_2}], rdx",
    "call    __strcpy_chk",
    "mov     rdx, qword [rbp-0x40 {var_48_2}]",
    "lea     rdi, [r12+rbx]",
    "lea     rsi, [rel data_1212e9]  {\"_builtin_load\"}",
    "cmp     rbx, rdx",
    "cmovae  rdx, rbx",
    "mov     rcx, rdx",
    "mov     edx, 0xe",
    "sub     rcx, rbx",
    "call    __memcpy_chk",
    "mov     rdi, qword [rbp-0x38 {var_40_1}]",
    "mov     rsi, r12",
    "call    dlsym",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0xb2048",
    "call    dlerror",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133d78]  {\"cannot find %s in shared object \u2026\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rcx, rbx",
    "xor     edx, edx  {0x0}",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "jmp     0xb21ff",
    "xor     esi, esi  {0x0}",
    "mov     rdi, r13",
    "call    sub_d80c0",
    "mov     r15, rax",
    "call    dlerror",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133d78]  {\"cannot find %s in shared object \u2026\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rcx, rbx",
    "mov     rdx, r15",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "cmp     r13, r15",
    "je      0xb2140",
    "mov     r14, qword [r14]",
    "test    r14, r14",
    "je      0xb209a",
    "mov     rdi, r12",
    "call    free",
    "mov     eax, dword [r15+0x10]",
    "and     eax, 0xfffffffb",
    "mov     edx, eax",
    "or      edx, 0x8",
    "test    byte [rbp-0x54 {var_5c}], 0x4",
    "cmovne  eax, edx",
    "mov     dword [r15+0x10], eax",
    "mov     rax, qword [rbp-0x38 {var_40_1}]",
    "mov     qword [r15+0x28], rax",
    "mov     rax, qword [rbp-0x50 {var_58_1}]",
    "test    rax, rax",
    "jne     0xb1f00",
    "mov     rax, qword [rbp-0x50 {var_58_1}]",
    "test    rax, rax",
    "je      0xb203b",
    "mov     rdi, r15",
    "call    free",
    "jmp     0xb2140",
    "mov     rdi, r12",
    "call    free",
    "jmp     0xb1f24",
    "mov     r8d, dword [rbp-0x58 {var_60_1}]",
    "mov     r9d, dword [rbp-0x64 {var_6c_1}]",
    "or      r9d, r8d",
    "je      0xb2349",
    "movdqu  xmm0, xmmword [r15]",
    "add     dword [rbp-0x64 {var_6c_1}], 0x1",
    "movups  xmmword [rax], xmm0",
    "movdqu  xmm1, xmmword [r15+0x10]",
    "movups  xmmword [rax+0x10], xmm1",
    "movdqu  xmm2, xmmword [r15+0x20]",
    "movaps  xmmword [rbp-0x50 {var_58_1}], xmm2",
    "movups  xmmword [rax+0x20], xmm2",
    "movsxd  rax, dword [rbp-0x58 {var_60_1}]",
    "mov     rbx, qword [rbp-0x70 {var_78_1}]",
    "mov     r14, qword [r14]",
    "mov     qword [rbx+rax*8], r15",
    "lea     eax, [rax+0x1]",
    "mov     dword [rbp-0x58 {var_60_1}], eax",
    "test    r14, r14",
    "jne     0xb1f30",
    "mov     rdi, r13",
    "call    rcx",
    "test    eax, eax",
    "je      0xb2185",
    "test    byte [rax+0x10], 0x4",
    "je      0xb2150",
    "mov     rdi, qword [rbp-0x70 {var_78_1}]",
    "call    free",
    "mov     rdi, qword [rbp-0x38 {var_40_1}]",
    "call    dlclose",
    "test    r8d, r8d",
    "jne     0xb2240",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133dc8]  {\"load function for %s returns fai\u2026\"}",
    "call    dcgettext",
    "xor     edx, edx  {0x0}",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "jmp     0xb2140",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133da0]  {\"%s: dynamic builtin already load\u2026\"}",
    "mov     qword [rbp-0x40 {var_48_3}], rcx",
    "call    dcgettext",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_warning",
    "mov     rcx, qword [rbp-0x40 {var_48_3}]",
    "mov     rdi, r13",
    "call    rcx",
    "test    eax, eax",
    "jne     0xb2048",
    "lea     r12, [rel num_shell_builtins]",
    "mov     ebx, r8d",
    "mov     dword [rbp-0x38 {var_40_1}], r8d",
    "add     ebx, dword [r12]  {num_shell_builtins}",
    "lea     r13d, [rbx+rbx*2+0x3]",
    "shl     r13d, 0x4",
    "movsxd  r13, r13d",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r8d, dword [rbp-0x38 {var_40_1}]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0xb2487",
    "mov     rdi, qword [rbp-0x70 {var_78_1}]",
    "call    free",
    "xor     eax, eax  {0x0}",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  rax, dword [r12]  {num_shell_builtins}",
    "mov     rdi, r15",
    "mov     dword [rbp-0x38 {var_40_1}], r8d",
    "lea     rax, [rax+rax*2]",
    "shl     rax, 0x4",
    "mov     r14, rax",
    "lea     rax, [rel shell_builtins]",
    "mov     rdx, r14",
    "mov     r13, qword [rax]  {shell_builtins}",
    "mov     rsi, r13",
    "call    memcpy",
    "movsxd  r8, dword [rbp-0x38 {var_40_1}]",
    "test    r8d, r8d",
    "jle     0xb22ea",
    "movsxd  r14, ebx",
    "lea     rax, [r14+r14*2]",
    "shl     rax, 0x4",
    "add     rax, r15",
    "cmp     r13, qword [rel data_157ea0]",
    "mov     qword [rax], 0x0",
    "mov     qword [rax+0x8], 0x0",
    "mov     dword [rax+0x10], 0x0",
    "je      0xb231f",
    "mov     rsi, qword [rbp-0x70 {var_78_1}]",
    "lea     rax, [r15+r14]",
    "mov     rdx, rsi",
    "lea     rdi, [rsi+r8*8]",
    "nop     dword [rax]",
    "mov     edx, 0x30",
    "mov     rsi, r14",
    "mov     rdi, r15",
    "mov     dword [r12], ebx  {num_shell_builtins}",
    "lea     rax, [rel shell_builtins]",
    "lea     rcx, [rel sub_a6f70]",
    "mov     qword [rax], r15  {shell_builtins}",
    "call    qsort",
    "jmp     0xb20b4",
    "mov     rdi, r13",
    "call    free",
    "mov     rcx, qword [rdx]",
    "add     rdx, 0x8",
    "add     rax, 0x30",
    "movdqu  xmm4, xmmword [rcx]",
    "movups  xmmword [rax-0x30], xmm4",
    "movdqu  xmm5, xmmword [rcx+0x10]",
    "movups  xmmword [rax-0x20], xmm5",
    "movdqu  xmm6, xmmword [rcx+0x20]",
    "movups  xmmword [rax-0x10], xmm6",
    "cmp     rdx, rdi",
    "jne     0xb22c0"
  ],
  "high level IL": [
    "if (arg1 != 0)",
    "int64_t* i_3 = arg1",
    "int16_t* var_40_1",
    "if (strchr(arg3, 0x2f) != 0)",
    "label_b20d9:",
    "int16_t* rax_21 = dlopen(arg3, 1)",
    "var_40_1 = rax_21",
    "if (rax_21 == 0)",
    "if ((arg2 & 8) == 0)",
    "if (ansic_shouldquote(arg3) == 0)",
    "dlerror()",
    "builtin_error(dcgettext(nullptr, \"cannot open shared object %s: %s\", 5), 0)",
    "if (*arg3 == 0)",
    "dlerror()",
    "builtin_error(dcgettext(nullptr, \"cannot open shared object %s: %s\", 5), 0)",
    "free(var_40_1)",
    "int16_t* rax_44 = sub_d80c0(arg3, nullptr)",
    "dlerror()",
    "builtin_error(dcgettext(nullptr, \"cannot open shared object %s: %s\", 5), 0)",
    "if (arg3 != rax_44)",
    "free(rax_44)",
    "return 0x7f",
    "struct Elf64_Header* rax_2 = find_variable(\"BASH_LOADABLES_PATH\")",
    "if (rax_2 == 0)",
    "goto label_b20d9",
    "int64_t* rax_3 = get_variable_value(rax_2)",
    "if (rax_3 == 0)",
    "goto label_b20d9",
    "char* rax_4 = sub_a9860(arg3, rax_3, 0x24, nullptr)",
    "if (rax_4 == 0)",
    "goto label_b20d9",
    "int16_t* rax_5 = dlopen(rax_4, 1)",
    "var_40_1 = rax_5",
    "free(rax_4)",
    "if (rax_5 == 0)",
    "goto label_b20d9",
    "int64_t* i = i_3",
    "int32_t rbx_2 = 0",
    "i = *i",
    "rbx_2 += 1",
    "do while (i != 0)",
    "int64_t* i_2 = malloc(sx.q(rbx_2) << 3)",
    "if (i_2 == 0)",
    "sub_a7f00()",
    "noreturn",
    "int32_t var_60_1 = 0",
    "int32_t var_6c_1 = 0",
    "while (true)",
    "char* r13_1 = *i_3[1]",
    "uint64_t rax_7 = strlen(r13_1)",
    "int64_t bytes = sx.q((rax_7 + 8).d)",
    "char* oldmem = malloc(bytes)",
    "if (oldmem == 0)",
    "fatal_error(dcgettext(nullptr, \"%s: cannot allocate %lu bytes\", 5), 0)",
    "noreturn",
    "int64_t bytes_2 = sx.q(rax_7.d)",
    "__memcpy_chk(oldmem, r13_1, rax_7 + 1, bytes)",
    "int64_t bytes_1 = bytes",
    "if (bytes u< bytes_2)",
    "bytes_1 = bytes_2",
    "__memcpy_chk(&oldmem[bytes_2], \"_struct\", 8, bytes_1 - bytes_2)",
    "int64_t rax_8 = builtin_address_internal(r13_1, 1)",
    "int16_t* rax_9 = dlsym(var_40_1, oldmem)",
    "if (rax_9 == 0)",
    "if (ansic_shouldquote(arg3) == 0)",
    "dlerror()",
    "builtin_error(dcgettext(nullptr, \"cannot find %s in shared object \u2026\", 5), 0)",
    "if (*arg3 == 0)",
    "dlerror()",
    "builtin_error(dcgettext(nullptr, \"cannot find %s in shared object \u2026\", 5), 0)",
    "free(rax_9)",
    "int16_t* r15_2 = sub_d80c0(arg3, nullptr)",
    "dlerror()",
    "builtin_error(dcgettext(nullptr, \"cannot find %s in shared object \u2026\", 5), 0)",
    "if (arg3 != r15_2)",
    "free(r15_2)",
    "free(oldmem)",
    "char* rax_10 = realloc(oldmem, bytes_2 + 0xf)",
    "if (rax_10 == 0)",
    "fatal_error(dcgettext(nullptr, \"%s: cannot allocate %lu bytes\", 5), 0)",
    "noreturn",
    "__strcpy_chk(rax_10, r13_1, bytes_2 + 0xf)",
    "int64_t bytes_3 = bytes_2 + 0xf",
    "if (bytes_2 u>= bytes_3)",
    "bytes_3 = bytes_2",
    "__memcpy_chk(&rax_10[bytes_2], \"_builtin_load\", 0xe, bytes_3 - bytes_2)",
    "int64_t rax_11 = dlsym(var_40_1, rax_10)",
    "if (rax_11 == 0)",
    "label_b204b:",
    "free(rax_10)",
    "int32_t rax_15 = *(rax_9 + 0x10) & 0xfffffffb",
    "if ((arg2 & 4) != 0)",
    "rax_15 |= 8",
    "*(rax_9 + 0x10) = rax_15",
    "*(rax_9 + 0x28) = var_40_1",
    "if (rax_8 != 0)",
    "var_6c_1 += 1",
    "*rax_8 = *rax_9",
    "*(rax_8 + 0x10) = *(rax_9 + 0x10)",
    "int128_t zmm2_1 = *(rax_9 + 0x20)",
    "int64_t var_58_1",
    "var_58_1.o = zmm2_1",
    "*(rax_8 + 0x20) = zmm2_1",
    "int64_t rax_18 = sx.q(var_60_1)",
    "i_3 = *i_3",
    "i_2[rax_18] = rax_9",
    "var_60_1 = (rax_18 + 1).d",
    "if (i_3 == 0)",
    "break",
    "continue",
    "if (rax_8 == 0 || (*(rax_8 + 0x10) & 4) != 0)",
    "if (rax_11(r13_1) != 0)",
    "goto label_b204b",
    "builtin_error(dcgettext(nullptr, \"load function for %s returns fai\u2026\", 5), 0)",
    "free(rax_10)",
    "builtin_warning(dcgettext(nullptr, \"%s: dynamic builtin already load\u2026\", 5), 0)",
    "if (rax_11(r13_1) != 0)",
    "goto label_b204b",
    "builtin_error(dcgettext(nullptr, \"load function for %s returns fai\u2026\", 5), 0)",
    "free(rax_10)",
    "i_3 = *i_3",
    "if (i_3 == 0)",
    "break",
    "if ((var_6c_1 | var_60_1) != 0)",
    "if (var_60_1 != 0)",
    "var_40_1.d = var_60_1",
    "uint64_t rbx_11 = zx.q(var_60_1 + num_shell_builtins)",
    "uint64_t b = malloc(sx.q((rbx_11 * 3 + 3).d << 4))",
    "if (b == 0)",
    "sub_a7f00()",
    "noreturn",
    "var_40_1.d = var_40_1.d",
    "int64_t rax_35 = sx.q(num_shell_builtins) * 0x30",
    "uint64_t shell_builtins_1 = shell_builtins",
    "memcpy(b, shell_builtins_1, rax_35)",
    "int64_t r8_3 = sx.q(var_40_1.d)",
    "if (r8_3.d s> 0)",
    "void* rax_36 = b + rax_35",
    "int64_t* i_1 = i_2",
    "int128_t* rcx_11 = *i_1",
    "i_1 = &i_1[1]",
    "rax_36 += 0x30",
    "*(rax_36 - 0x30) = *rcx_11",
    "*(rax_36 - 0x20) = rcx_11[1]",
    "*(rax_36 - 0x10) = rcx_11[2]",
    "do while (i_1 != &i_2[r8_3])",
    "int64_t n = sx.q(rbx_11.d)",
    "__builtin_memset(n * 0x30 + b, 0, 0x14)",
    "if (shell_builtins_1 != &static_shell_builtins)",
    "free(shell_builtins_1)",
    "num_shell_builtins = rbx_11.d",
    "shell_builtins = b",
    "qsort(b, n, 0x30, sub_a6f70)",
    "free(i_2)",
    "return 0",
    "free(i_2)",
    "dlclose(var_40_1)",
    "return 1"
  ]
}
{
  "address": "0xdf690",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     rax, [rel rl_pending_input]",
    "cmp     dword [rax], 0xffffffff",
    "je      0xdf740",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel rl_readline_state]",
    "xor     ebx, ebx",
    "and     qword [rax], 0xfffffffffffdffff",
    "jmp     0xdf724",
    "call    rl_set_prompt",
    "call    rl_initialize",
    "lea     rax, [rel rl_prep_term_function]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xdf6d1",
    "mov     rax, rbx",
    "mov     rbx, qword [rbp-0x8]",
    "leave   ",
    "retn    ",
    "call    rl_set_signals",
    "call    readline_internal_setup",
    "lea     rbx, [rel rl_done]",
    "mov     ecx, dword [rbx]",
    "test    ecx, ecx",
    "jne     0xdf730",
    "lea     rdx, [rel _rl_meta_flag]",
    "mov     edi, dword [rdx]",
    "call    rax",
    "mov     eax, 0x1",
    "jmp     0xdf6fb",
    "nop     dword [rax+rax]",
    "lea     rdx, [rel rl_eof_found]",
    "mov     edi, eax",
    "mov     dword [rdx], eax",
    "call    readline_internal_teardown",
    "mov     rbx, rax",
    "lea     rax, [rel rl_deprep_term_function]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xdf71f",
    "call    readline_internal_char",
    "mov     edx, dword [rbx]",
    "test    edx, edx",
    "je      0xdf6f0",
    "call    rl_clear_signals",
    "call    rax"
  ]
}
{
  "address": "0x325f0",
  "rules": [
    "create or open file",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "query environment variable",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using djb2/8952edc10f1448bdba19a64c9f144796",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "terminate process",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "read file on Linux",
    "delay execution",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "hash data using jshash/a755d430eadb46a9b4c9d318a1fcf472",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "check if file exists/9e9f210df85141fd87185852507ad125/0fcfdde5a12c4c95b0c37ee23bca2635",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "get current user on Linux",
    "get file attributes",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {var_8}",
    "mov     rbp, rsp {var_8}",
    "push    r15 {var_10}",
    "push    r14 {var_18}",
    "push    r13 {var_20}",
    "push    r12 {var_28}",
    "push    rbx {var_30}",
    "sub     rsp, 0x198",
    "mov     dword [rbp-0x13c {subshell_argc_1}], edi",
    "lea     rdi, [rel top_level]",
    "mov     qword [rbp-0x138 {subshell_argv_1}], rsi",
    "xor     esi, esi  {0x0}",
    "mov     qword [rbp-0x160 {subshell_envp_1}], rdx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38 {var_40}], rax",
    "xor     eax, eax  {0x0}",
    "call    __sigsetjmp",
    "endbr64 ",
    "test    eax, eax",
    "jne     0x32bee",
    "mov     edi, 0x2",
    "call    exit",
    "{ Does not return }",
    "call    xtrace_init",
    "call    check_dev_tty",
    "lea     rbx, [rel debugging_login_shell]",
    "jmp     0x32662",
    "cmp     dword [rbx], 0x0",
    "jne     0x32658  {debugging_login_shell}",
    "mov     edi, 0x3",
    "call    sleep",
    "call    set_default_locale",
    "call    getuid",
    "mov     r12d, eax",
    "lea     rax, [rel current_user]",
    "cmp     r12d, dword [rax]",
    "je      0x326ce  {current_user}",
    "lea     rbx, [rel current_user]",
    "mov     dword [rbx], r12d  {current_user}",
    "call    getgid",
    "mov     dword [rbx+0x8], eax  {data_1584a8}",
    "call    geteuid",
    "mov     dword [rbx+0x4], eax  {data_1584a4}",
    "call    getegid",
    "mov     ecx, dword [rbx+0x4]  {data_1584a4}",
    "mov     edx, 0x1",
    "mov     dword [rbx+0xc], eax  {data_1584ac}",
    "cmp     dword [rbx], ecx",
    "jne     0x32704  {current_user}",
    "mov     rdi, qword [rax+0x10]  {data_1584b0}",
    "test    rdi, rdi",
    "je      0x3268e",
    "lea     rdi, [rel data_11f1ed]  {\"POSIXLY_CORRECT\"}",
    "mov     dword [rel data_161730], edx",
    "call    getenv",
    "test    rax, rax",
    "je      0x3382c",
    "xor     edx, edx  {0x0}",
    "cmp     dword [rbx+0x8], eax",
    "setne   dl  {data_1584a8}",
    "lea     rax, [rel current_user]",
    "mov     rdi, qword [rax+0x18]  {data_1584b8}",
    "test    rdi, rdi",
    "je      0x326a3",
    "call    free",
    "lea     rdi, [rel data_11f1fd]  {\"POSIX_PEDANTIC\"}",
    "call    getenv",
    "test    rax, rax",
    "jne     0x3271f",
    "lea     rax, [rel posixly_correct]",
    "mov     dword [rax], 0x1  {posixly_correct}",
    "lea     rax, [rel current_user]",
    "mov     rdi, qword [rax+0x20]  {data_1584c0}",
    "test    rdi, rdi",
    "je      0x326b8",
    "call    free",
    "jmp     0x3272c",
    "mov     dword [rbp-0x128 {subshell_argc_2}], 0x1",
    "mov     edx, dword [rbp-0x13c {subshell_argc_1}]",
    "xor     r11d, r11d  {0x0}",
    "mov     eax, dword [rbp-0x128 {var_130}]  {0x1}",
    "mov     dword [rel data_161728], r11d  {0x0}",
    "cmp     eax, edx",
    "jle     0x327a8",
    "lea     rax, [rel subshell_argc]",
    "xor     ebx, ebx  {0x0}",
    "mov     dword [rel data_16172c], ebx  {0x0}",
    "mov     eax, dword [rax]  {subshell_argc}",
    "mov     dword [rbp-0x13c {subshell_argc_1}], eax",
    "lea     rax, [rel subshell_argv]",
    "mov     rax, qword [rax]  {subshell_argv}",
    "mov     qword [rbp-0x138 {subshell_argv_1}], rax",
    "lea     rax, [rel subshell_envp]",
    "mov     rax, qword [rax]  {subshell_envp}",
    "mov     qword [rbp-0x160 {subshell_envp_1}], rax",
    "lea     rax, [rel current_user]",
    "xor     r13d, r13d  {0x0}",
    "pxor    xmm0, xmm0",
    "mov     qword [rax+0x20], r13  {0x0}  {data_1584c0}",
    "movaps  xmmword [rax+0x10], xmm0  {data_1584b0}",
    "call    free",
    "lea     rdi, [rel subshell_top_level]",
    "mov     esi, 0x1",
    "call    __sigsetjmp",
    "endbr64 ",
    "test    eax, eax",
    "je      0x3277e",
    "lea     rax, [rel shell_script_filename]",
    "xor     ecx, ecx  {0x0}",
    "xor     esi, esi  {0x0}",
    "xor     edi, edi  {0x0}",
    "xor     r8d, r8d  {0x0}",
    "xor     r10d, r10d  {0x0}",
    "lea     rdx, [rel shell_initialized]",
    "xor     r9d, r9d  {0x0}",
    "mov     qword [rax], rcx  {0x0}  {shell_script_filename}",
    "lea     rax, [rel command_execution_string]",
    "cmp     dword [rdx], 0x0",
    "mov     dword [rbp-0x124 {var_12c_1}], edi  {0x0}",
    "mov     qword [rax], rsi  {0x0}  {command_execution_string}",
    "lea     rax, [rel read_from_stdin]",
    "mov     dword [rel data_161718], r9d  {0x0}",
    "mov     dword [rax], edi  {0x0}  {read_from_stdin}",
    "lea     rax, [rel want_pending_command]",
    "mov     dword [rax], r8d  {0x0}  {want_pending_command}",
    "mov     rax, qword [rel stdin]",
    "mov     rax, qword [rax]",
    "mov     qword [rel data_161720], rax",
    "lea     rax, [rel default_buffered_input]",
    "mov     dword [rax], 0xffffffff  {default_buffered_input}  {0xffffffff}",
    "lea     rax, [rel login_shell]",
    "mov     dword [rax], r10d  {0x0}  {login_shell}",
    "lea     rax, [rel shell_name]",
    "mov     rax, qword [rax]  {shell_name}",
    "jne     0x32832",
    "mov     dword [rbp-0x128 {subshell_argc_2}], edx",
    "cmp     byte [rax], 0x2d",
    "jne     0x32845",
    "test    rax, rax",
    "je      0x3299a",
    "lea     rax, [rel primary_prompt]",
    "xor     edx, edx  {0x0}",
    "xor     esi, esi  {0x0}",
    "xor     r8d, r8d  {0x0}",
    "lea     rdi, [rel data_11f20c]  {\"\\s-\\v\\$ \"}",
    "xor     r9d, r9d  {0x0}",
    "xor     r10d, r10d  {0x0}",
    "xor     r11d, r11d  {0x0}",
    "mov     qword [rax], rdi  {data_11f20c, \"\\s-\\v\\$ \"}  {primary_prompt}",
    "lea     rax, [rel secondary_prompt]",
    "xor     edi, edi  {0x0}",
    "xor     ebx, ebx  {0x0}",
    "lea     rcx, [rel data_11f215]",
    "xor     r12d, r12d  {0x0}",
    "xor     r13d, r13d  {0x0}",
    "xor     r14d, r14d  {0x0}",
    "mov     qword [rax], rcx  {data_11f215}  {secondary_prompt}",
    "xor     ecx, ecx  {0x0}",
    "xor     r15d, r15d  {0x0}",
    "lea     rax, [rel current_command_number]",
    "mov     dword [rel data_161710], edi  {0x0}",
    "mov     dword [rax], 0x1  {current_command_number}",
    "lea     rax, [rel executing]",
    "mov     dword [rel data_1616e8], edi  {0x0}",
    "mov     dword [rax], edx  {0x0}  {executing}",
    "lea     rax, [rel interactive]",
    "mov     dword [rel data_1616f8], 0x1",
    "mov     dword [rax], ecx  {0x0}  {interactive}",
    "lea     rax, [rel last_command_exit_value]",
    "mov     dword [rel data_1616fc], 0x1",
    "mov     dword [rax], esi  {0x0}  {last_command_exit_value}",
    "lea     rax, [rel line_number]",
    "mov     dword [rax], edi  {0x0}  {line_number}",
    "lea     rax, [rel interactive_shell]",
    "xor     edi, edi  {0x0}",
    "mov     dword [rax], r8d  {0x0}  {interactive_shell}",
    "lea     rax, [rel forced_interactive]",
    "mov     dword [rax], r9d  {0x0}  {forced_interactive}",
    "lea     rax, [rel running_in_background]",
    "mov     dword [rax], r10d  {0x0}  {running_in_background}",
    "lea     rax, [rel subshell_environment]",
    "mov     dword [rax], r11d  {0x0}  {subshell_environment}",
    "lea     rax, [rel expaliases_flag]",
    "mov     dword [rax], ebx  {0x0}  {expaliases_flag}",
    "lea     rax, [rel expand_aliases]",
    "mov     dword [rax], r12d  {0x0}  {expand_aliases}",
    "lea     rax, [rel bash_argv_initialized]",
    "mov     dword [rax], r13d  {0x0}  {bash_argv_initialized}",
    "lea     rax, [rel enable_history_list]",
    "mov     dword [rax], r14d  {0x0}  {enable_history_list}",
    "call    bash_history_reinit",
    "lea     rax, [rel restricted]",
    "mov     dword [rax], r15d  {0x0}  {restricted}",
    "lea     rax, [rel data_11f218]  {\"~/.bashrc\"}",
    "mov     qword [rel data_1596e0], rax  {data_11f218, \"~/.bashrc\"}",
    "lea     rax, [rel shell_variables]",
    "mov     rdi, qword [rax]  {shell_variables}",
    "call    delete_all_contexts",
    "lea     rax, [rel shell_functions]",
    "mov     rdi, qword [rax]  {shell_functions}",
    "call    delete_all_variables",
    "call    reinit_special_variables",
    "lea     rax, [rel bash_readline_initialized]",
    "xor     edx, edx  {0x0}",
    "xor     esi, esi  {0x0}",
    "lea     rdi, [rel top_level]",
    "mov     dword [rel data_161728], 0x1",
    "mov     dword [rax], edx  {0x0}  {bash_readline_initialized}",
    "call    __sigsetjmp",
    "endbr64 ",
    "test    eax, eax",
    "jne     0x32bee",
    "lea     rdx, [rel shell_name]",
    "add     rax, 0x1",
    "mov     qword [rdx], rax  {shell_name}",
    "lea     rax, [rel shell_environment]",
    "mov     rdi, qword [rbp-0x160 {subshell_envp_1}]",
    "mov     qword [rax], rdi  {shell_environment}",
    "mov     rax, qword [rbp-0x138 {subshell_argv_1}]",
    "mov     rbx, qword [rax]",
    "test    rbx, rbx",
    "je      0x32ca5",
    "lea     rbx, [rel data_11f014[5]]  {\"bash\"}",
    "jmp     0x329ec",
    "mov     rdi, rbx",
    "call    base_pathname",
    "lea     rdx, [rel shell_name]",
    "mov     qword [rdx], rax  {shell_name}",
    "cmp     byte [rbx], 0x2d",
    "je      0x33207",
    "lea     rax, [rel shell_name]",
    "mov     qword [rax], rbx  {shell_name}",
    "lea     rax, [rel dollar_vars]",
    "mov     rdi, qword [rax]  {dollar_vars}",
    "test    rdi, rdi",
    "je      0x32a0a",
    "cmp     byte [rax], 0x2d",
    "jne     0x33213",
    "lea     rax, [rel shell_name]",
    "mov     rax, qword [rax]  {shell_name}",
    "cmp     byte [rax], 0x73",
    "je      0x32cb1",
    "lea     rbx, [rel shell_name]",
    "mov     r12, qword [rbx]  {shell_name}",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rdi, [rax+0x1]",
    "call    xmalloc",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "call    strcpy",
    "lea     rdx, [rel dollar_vars]",
    "mov     qword [rdx], rax  {dollar_vars}",
    "mov     rax, qword [rbx]  {shell_name}",
    "test    rax, rax",
    "je      0x32c8f",
    "call    free",
    "lea     rax, [rel login_shell]",
    "mov     dword [rax], 0x1  {login_shell}",
    "jmp     0x329d9",
    "add     rax, 0x1",
    "mov     qword [rdx], rax  {shell_name}",
    "movzx   edx, byte [rax+0x1]",
    "cmp     dl, 0x68",
    "je      0x33233",
    "lea     rax, [rel shell_name]",
    "lea     rdi, [rel data_11f014[5]]  {\"bash\"}",
    "mov     qword [rax], rdi  {data_11f014[5], \"bash\"}  {shell_name}",
    "jmp     0x32a5a",
    "movzx   edx, byte [rax]",
    "test    dl, dl",
    "je      0x32c8f",
    "cmp     byte [rax+0x2], 0x0",
    "jne     0x329ec",
    "cmp     dl, 0x75",
    "jne     0x329ec",
    "lea     rbx, [rel shellstart]",
    "xor     esi, esi  {0x0}",
    "mov     rdi, rbx  {shellstart}",
    "call    gettimeofday",
    "mov     rdx, qword [rbx]  {shellstart}",
    "lea     rax, [rel shell_start_time]",
    "mov     ecx, dword [rbp-0x128 {subshell_argc_2}]",
    "mov     qword [rax], rdx  {shell_start_time}",
    "cmp     dword [rbp-0x13c {subshell_argc_1}], ecx",
    "je      0x32b92",
    "cmp     dl, 0x2d",
    "je      0x32c85",
    "add     dword [rel data_161700], 0x1",
    "jmp     0x329ec",
    "cmp     byte [rax+0x2], 0x0",
    "jne     0x329ec",
    "cmp     dword [rel data_161714], 0x0",
    "mov     dword [rbp-0x128 {var_130_1}], ecx",
    "jne     0x331ee",
    "nop     word [rax+rax]",
    "cmp     byte [rax+0x1], 0x0",
    "jne     0x32a5a",
    "add     dword [rel data_1616f4], 0x1",
    "jmp     0x329ec",
    "mov     rax, qword [rel stdout]",
    "mov     esi, 0x1",
    "mov     rdi, qword [rax]",
    "call    sub_36770",
    "jmp     0x32bc3",
    "mov     eax, dword [rel data_161710]",
    "mov     dword [rbp-0x17c {var_184_1}], eax",
    "test    eax, eax",
    "je      0x32cdd",
    "cmp     byte [rsi], 0x2d",
    "jne     0x32b92",
    "xor     edi, edi  {0x0}",
    "call    exit",
    "{ Does not return }",
    "lea     rax, [rel verbose_flag]",
    "mov     r15d, dword [rbp-0x128 {var_130_1}]",
    "lea     rbx, [rel jump_table_135058]",
    "mov     edx, dword [rax]  {verbose_flag}",
    "lea     rax, [rel echo_input_at_read]",
    "mov     r13d, r15d",
    "mov     dword [rax], edx  {echo_input_at_read}",
    "lea     rax, [rel shell_name]",
    "mov     rdx, qword [rax]  {shell_name}",
    "lea     rax, [rel this_command_name]",
    "mov     qword [rax], rdx  {this_command_name}",
    "mov     edi, 0x1",
    "call    show_shell_version",
    "movzx   r15d, byte [rsi+0x1]",
    "mov     r13, rsi",
    "xor     edx, edx  {0x0}",
    "cmp     r15b, 0x2d",
    "je      0x32c59",
    "lea     rax, [rel login_shell]",
    "cmp     dword [rel data_161718], 0x0",
    "mov     dword [rbp-0x128 {subshell_argc_7}], r13d",
    "mov     edx, dword [rax]  {login_shell}",
    "je      0x33015",
    "mov     rdi, qword [rbp-0x138 {subshell_argv_1}]",
    "movsxd  rax, r13d",
    "mov     rdx, qword [rdi+rax*8]",
    "test    rdx, rdx",
    "je      0x32ff8",
    "movzx   eax, byte [rsi+0x2]",
    "test    al, al",
    "je      0x32ad3",
    "lea     rbx, [rel data_155e80]",
    "mov     dword [rbp-0x140 {var_148_1}], ecx",
    "mov     eax, 0x64",
    "xor     r14d, r14d  {0x0}",
    "mov     rcx, rbx",
    "mov     dword [rbp-0x14c {var_154_1}], edx",
    "mov     ebx, r15d",
    "lea     r12, [rel data_11f8c1[3]]  {\"debug\"}",
    "mov     qword [rbp-0x148 {var_150_1}], rsi",
    "add     r13, 0x1",
    "mov     r15, rcx  {data_155e80}",
    "jmp     0x32b29",
    "lea     rax, [rel login_shell]",
    "cmp     dword [rax], 0x0",
    "setne   al  {login_shell}",
    "movzx   eax, al",
    "mov     dword [rel data_1612e8], eax",
    "lea     rax, [rel dump_po_strings]",
    "cmp     dword [rax], 0x0",
    "lea     rax, [rel dump_translatable_strings]",
    "je      0x33225",
    "not     edx",
    "mov     dword [rax], edx  {login_shell}",
    "movzx   esi, byte [rdx]",
    "lea     eax, [rsi-0x2b]",
    "test    al, 0xfd",
    "jne     0x32ff8",
    "lea     r13, [rsi+0x1]",
    "mov     r15d, eax",
    "mov     edx, 0x1",
    "jmp     0x32ad3",
    "cmp     bl, al",
    "jne     0x32b10",
    "cmp     dword [rax], 0x0",
    "je      0x33055  {dump_translatable_strings}",
    "mov     dword [rax], 0x1  {dump_translatable_strings}",
    "movzx   eax, byte [rdx+0x1]",
    "add     r13d, 0x1",
    "cmp     sil, 0x2d",
    "je      0x32fb7",
    "mov     r12, qword [r15]",
    "add     r15, 0x20",
    "add     r14d, 0x1",
    "test    r12, r12",
    "je      0x32c00",
    "mov     rsi, r12",
    "mov     rdi, r13",
    "call    strcmp",
    "test    eax, eax",
    "jne     0x32b10",
    "cmp     dword [rel data_161730], 0x0",
    "je      0x3306e  {data_161730}",
    "jmp     0x33048",
    "lea     rax, [rel want_pending_command]",
    "cmp     dword [rax], 0x0",
    "je      0x330ae  {want_pending_command}",
    "lea     rax, [rel privileged_mode]",
    "cmp     dword [rax], 0x0",
    "je      0x336ab  {privileged_mode}",
    "test    al, al",
    "je      0x32ff8",
    "movsx   r12d, al",
    "test    r12d, r12d",
    "je      0x32d14",
    "mov     edx, dword [rbp-0x14c {var_154_1}]",
    "mov     r8, qword [rbp-0x148 {var_150_1}]",
    "mov     ecx, dword [rbp-0x140 {var_148_1}]",
    "test    edx, edx",
    "je      0x32b92",
    "movzx   eax, byte [r12]",
    "movsxd  r9, r14d",
    "lea     rax, [rel data_155e60]",
    "mov     ecx, dword [rbp-0x140 {var_148_1}]",
    "shl     r9, 0x5",
    "add     rax, r9",
    "cmp     dword [rax+0x8], 0x1",
    "je      0x32c76",
    "lea     rax, [rel read_but_dont_execute]",
    "mov     dword [rax], 0x1  {read_but_dont_execute}",
    "lea     rax, [rel this_command_name]",
    "xor     r15d, r15d  {0x0}",
    "mov     qword [rax], r15  {0x0}  {this_command_name}",
    "lea     rax, [rel forced_interactive]",
    "cmp     dword [rax], 0x0",
    "jne     0x335fb  {forced_interactive}",
    "movsxd  rax, dword [rbp-0x128 {subshell_argc_7}]",
    "mov     rcx, qword [rbp-0x138 {subshell_argv_1}]",
    "lea     rdx, [rel command_execution_string]",
    "mov     rax, qword [rcx+rax*8]",
    "mov     qword [rdx], rax  {command_execution_string}",
    "test    rax, rax",
    "je      0x32bca",
    "call    disable_priv_mode",
    "jmp     0x3306e",
    "cmp     al, 0x2d",
    "je      0x32ff2",
    "cmp     dword [rbp-0x13c {subshell_argc_1}], r13d",
    "je      0x32ff8",
    "mov     r8d, 0x2b",
    "mov     edx, 0x5",
    "xor     edi, edi  {0x0}",
    "lea     rsi, [rel data_11f222]  {\"%s: invalid option\"}",
    "mov     qword [rbp-0x198 {var_1a0_1}], r8",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x198 {var_1a0_1}]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    report_error",
    "mov     rax, qword [rel stderr]",
    "xor     esi, esi  {0x0}",
    "mov     rdi, qword [rax]",
    "call    sub_36770",
    "jmp     0x32bee",
    "mov     rax, qword [rax+0x10]",
    "mov     dword [rax], 0x1",
    "jmp     0x32b83",
    "mov     rdx, qword [rbp-0x138 {subshell_argv_1}]",
    "mov     rdi, qword [rbp-0x158 {var_160_1}]",
    "add     ecx, 0x1",
    "mov     rdx, qword [rdx+rdi+0x8]",
    "test    rdx, rdx",
    "je      0x33b62",
    "lea     rax, [rel expaliases_flag]",
    "mov     dword [rax], 0x1  {expaliases_flag}",
    "lea     rax, [rel expand_aliases]",
    "mov     dword [rax], 0x1  {expand_aliases}",
    "lea     rax, [rel interactive]",
    "mov     dword [rax], 0x1  {interactive}",
    "lea     rax, [rel startup_state]",
    "mov     dword [rax], 0x1  {startup_state}",
    "lea     rax, [rel interactive_shell]",
    "mov     dword [rax], 0x1  {interactive_shell}",
    "lea     rax, [rel enable_history_list]",
    "cmp     dword [rax], 0xffffffff",
    "jne     0x3364e  {enable_history_list}",
    "lea     rax, [rel command_execution_string]",
    "cmp     qword [rax], 0x0",
    "je      0x3358f  {command_execution_string}",
    "lea     rsi, [rel data_123628]  {\"%s: option requires an argument\"}",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "call    dcgettext",
    "lea     rsi, [rel data_11f261]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    report_error",
    "mov     eax, dword [rbp-0x128 {subshell_argc_7}]",
    "add     eax, 0x1",
    "mov     dword [rbp-0x128 {subshell_argc_7}], eax",
    "cmp     byte [rdx+0x2], 0x0",
    "jne     0x32fbf",
    "movsx   r12d, al",
    "mov     r8d, 0x2d",
    "jmp     0x32d67",
    "{Case 0x1-0xa, 0xc-0x1e, 0x20-0x27, 0x29-0x2a, 0x2c-0x2e}",
    "mov     esi, r14d",
    "mov     edi, r15d",
    "call    change_flag",
    "cmp     eax, 0xffffffff",
    "je      0x3429c",
    "movzx   eax, al",
    "movsxd  rax, dword [rbx+rax*4]",
    "add     rax, rbx",
    "jmp     rax",
    "add     ecx, 0x1",
    "cmp     dword [rbp-0x13c {subshell_argc_1}], ecx",
    "jne     0x32a90",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_123628]  {\"%s: option requires an argument\"}",
    "call    dcgettext",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    report_error",
    "jmp     0x32bee",
    "mov     rax, qword [rax+0x18]",
    "mov     qword [rax], rdx",
    "lea     rax, [rel enable_history_list]",
    "mov     edx, dword [rax]  {enable_history_list}",
    "lea     rax, [rel remember_on_history]",
    "mov     dword [rax], edx  {remember_on_history}",
    "lea     rax, [rel history_expansion]",
    "mov     edx, dword [rax]  {history_expansion}",
    "lea     rax, [rel histexp_flag]",
    "mov     dword [rax], edx  {histexp_flag}",
    "lea     rax, [rel login_shell]",
    "cmp     dword [rax], 0x0",
    "je      0x330fd  {login_shell}",
    "mov     dword [rax], 0x1  {enable_history_list}",
    "lea     rax, [rel wordexp_only]",
    "cmp     dword [rax], 0x0",
    "jne     0x330dc  {wordexp_only}",
    "call    sub_35e60",
    "lea     rax, [rel login_shell]",
    "cmp     dword [rax], 0x0",
    "je      0x330fd  {login_shell}",
    "xor     ecx, ecx  {0x0}",
    "cmp     r8d, 0x2d",
    "lea     r15, [rdx+0x2]",
    "mov     r14d, r8d",
    "setne   cl",
    "mov     rdx, r15",
    "mov     r15d, r12d",
    "mov     dword [rbp-0x150 {var_158_1}], ecx",
    "mov     r12, rdx",
    "nop     word [rax+rax]",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f24c]  {\"%c%c: invalid option\"}",
    "mov     dword [rbp-0x19c {var_1a4_1}], r14d",
    "call    dcgettext",
    "mov     esi, dword [rbp-0x19c {var_1a4_1}]",
    "mov     edx, r15d",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    report_error",
    "mov     rax, qword [rel stderr]",
    "xor     esi, esi  {0x0}",
    "mov     rdi, qword [rax]",
    "call    sub_36770",
    "jmp     0x32bee",
    "nop     dword [rax]",
    "{Case 0x2f}",
    "lea     rax, [rel read_from_stdin]",
    "mov     dword [rax], 0x1  {read_from_stdin}",
    "jmp     0x32dc0",
    "{Case 0x28}",
    "mov     dword [rel data_161718], 0x1",
    "jmp     0x32dc0",
    "{Case 0x1f}",
    "lea     rax, [rel want_pending_command]",
    "mov     dword [rax], 0x1  {want_pending_command}",
    "jmp     0x32dc0",
    "{Case 0xb}",
    "mov     rcx, qword [rbp-0x138 {subshell_argv_1}]",
    "movsxd  rax, r13d",
    "mov     r8, qword [rcx+rax*8]",
    "test    r8, r8",
    "je      0x32eb0",
    "{Case 0x0}",
    "lea     rax, [rel dump_translatable_strings]",
    "mov     dword [rax], 0x1  {dump_translatable_strings}",
    "jmp     0x32dc0",
    "{Case 0x2b}",
    "mov     rcx, qword [rbp-0x138 {subshell_argv_1}]",
    "movsxd  rax, r13d",
    "mov     rsi, qword [rcx+rax*8]",
    "test    rsi, rsi",
    "je      0x32f45",
    "mov     rdx, qword [rbp-0x138 {subshell_argv_1}]",
    "movsxd  rax, ecx",
    "lea     rdi, [rax*8]",
    "mov     rsi, qword [rdx+rax*8]",
    "mov     qword [rbp-0x158 {var_160_1}], rdi",
    "test    rsi, rsi",
    "je      0x32b92",
    "lea     rax, [rel posixly_correct]",
    "cmp     dword [rax], 0x0",
    "jne     0x336b5  {posixly_correct}",
    "mov     r12d, 0x3",
    "mov     eax, dword [rbp-0x128 {subshell_argc_7}]",
    "mov     ecx, dword [rbp-0x13c {subshell_argc_1}]",
    "cmp     eax, ecx",
    "je      0x335bf",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x0",
    "jne     0x33682  {interactive_shell}",
    "sub     eax, 0x44",
    "cmp     al, 0x2f",
    "ja      0x32da8",
    "jmp     0x32d14",
    "movsx   r15d, byte [r12]",
    "add     r12, 0x1",
    "mov     eax, r15d",
    "test    r15d, r15d",
    "jne     0x32d90",
    "lea     r15, [rel data_156088]",
    "lea     rdx, [rel data_11f1dc]  {\"autocd\"}",
    "jmp     0x32efa",
    "mov     ecx, dword [rel data_1616f0]",
    "mov     eax, dword [rel data_1616ec]",
    "mov     rdi, qword [rel data_161708]",
    "cmp     ecx, eax",
    "jge     0x32f6b",
    "lea     r15, [rel enable_history_list]",
    "mov     esi, dword [rbp-0x150 {var_158_1}]",
    "xor     eax, eax  {0x0}",
    "or      edi, 0xffffffff  {0xffffffff}",
    "mov     dword [r15], eax  {0x0}  {enable_history_list}",
    "call    list_minus_o_opts",
    "mov     dword [r15], 0xffffffff  {enable_history_list}  {0xffffffff}",
    "jmp     0x32dc0",
    "mov     edi, r14d",
    "call    set_minus_o_option",
    "test    eax, eax",
    "je      0x32e60",
    "lea     r12, [rel data_11f1ed]",
    "xor     edx, edx  {0x0}",
    "lea     rsi, [rel data_122244[0xc]]  {\"y\"}",
    "mov     rdi, r12  {data_11f1ed, \"POSIXLY_CORRECT\"}",
    "call    bind_variable",
    "mov     rdi, r12  {data_11f1ed, \"POSIXLY_CORRECT\"}",
    "call    sv_strict_posix",
    "jmp     0x3310d",
    "xor     r12d, r12d  {0x0}",
    "cmp     qword [rel data_161708], 0x0",
    "jne     0x3315b  {data_161708}",
    "mov     edi, r12d",
    "mov     edx, 0x1",
    "mov     esi, 0x2",
    "xor     eax, eax  {0x0}",
    "call    fcntl",
    "add     r12d, 0x1",
    "cmp     r12d, 0x14",
    "jne     0x33688",
    "jmp     0x330fd",
    "mov     rax, qword [rel stdin]",
    "mov     rdi, qword [rax]",
    "call    fileno",
    "mov     edi, eax",
    "call    isatty",
    "test    eax, eax",
    "je      0x330dc",
    "lea     rax, [rel read_from_stdin]",
    "cmp     dword [rax], 0x0",
    "je      0x330dc  {read_from_stdin}",
    "mov     rax, qword [r15]",
    "mov     eax, dword [rax]",
    "cmp     r14d, 0x2d",
    "jne     0x32ec0",
    "add     eax, 0x8",
    "movsxd  r15, eax",
    "mov     dword [rel data_1616ec], eax",
    "shl     r15, 0x4",
    "test    rdi, rdi",
    "je      0x32fce",
    "movsxd  rax, ecx",
    "add     ecx, 0x1",
    "shl     rax, 0x4",
    "add     rax, qword [rel data_161708]",
    "mov     dword [rel data_1616f0], ecx",
    "mov     qword [rax], r8",
    "mov     dword [rax+0x8], r14d",
    "add     r13d, 0x1",
    "jmp     0x32dc0",
    "jmp     0x32bee",
    "cmp     dword [rel data_1616f0], r12d",
    "mov     rdi, qword [rel data_161708]",
    "jle     0x33249",
    "jmp     0x33269",
    "mov     rax, qword [rel stderr]",
    "mov     rdi, qword [rax]",
    "call    fileno",
    "mov     edi, eax",
    "call    isatty",
    "test    eax, eax",
    "je      0x330dc",
    "test    eax, eax",
    "lea     rdi, [rel data_11f1e6]",
    "lea     rax, [rel data_11f1e3]",
    "mov     rcx, rdx",
    "cmove   rax, rdi  {data_11f1e6}",
    "lea     rsi, [rel data_11f235]  {\"shopt %s %s\\n\"}",
    "mov     edi, 0x2",
    "add     r15, 0x18",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "mov     rdx, qword [r15-0x8]",
    "test    rdx, rdx",
    "je      0x32f39",
    "test    eax, eax",
    "lea     rcx, [rel data_122c8a[0x12]]  {\"on\"}",
    "mov     edi, 0x2",
    "lea     rax, [rel data_11f1e9]",
    "lea     rsi, [rel data_11f242]  {\"%-15s\\t%s\\n\"}",
    "cmove   rcx, rax  {data_11f1e9}",
    "xor     eax, eax  {0x0}",
    "add     r15, 0x18",
    "call    __printf_chk",
    "mov     rdx, qword [r15-0x8]",
    "test    rdx, rdx",
    "jne     0x32efa",
    "mov     rdi, r15",
    "mov     dword [rbp-0x170 {var_178_1}], ecx",
    "mov     qword [rbp-0x178 {var_180_1}], r8",
    "call    malloc",
    "mov     ecx, dword [rbp-0x170 {var_178_1}]",
    "mov     r8, qword [rbp-0x178 {var_180_1}]",
    "jmp     0x32fa2",
    "mov     rsi, r15",
    "mov     dword [rbp-0x16c {var_174_1}], ecx",
    "mov     qword [rbp-0x168 {var_170_1}], r8",
    "call    realloc",
    "mov     r8, qword [rbp-0x168 {var_170_1}]",
    "mov     ecx, dword [rbp-0x16c {var_174_1}]",
    "call    free",
    "xor     r11d, r11d  {0x0}",
    "xor     r10d, r10d  {0x0}",
    "mov     qword [rel data_161708], r10  {0x0}",
    "mov     dword [rel data_1616ec], r11d  {0x0}",
    "mov     dword [rel data_1616f0], r11d  {0x0}",
    "mov     rax, r12",
    "xor     r13d, r13d  {0x0}",
    "shl     rax, 0x4",
    "add     rax, rdi",
    "mov     rbx, qword [rax]",
    "cmp     dword [rax+0x8], 0x2d",
    "sete    r13b",
    "mov     rdi, rbx",
    "call    make_bare_word",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "call    make_word_flags",
    "lea     rdx, [rel wlcache]",
    "mov     r14, rax",
    "mov     eax, dword [rdx+0xc]  {data_1612fc}",
    "test    eax, eax",
    "jg      0x3311f",
    "call    sub_365c0",
    "call    set_default_lang",
    "call    set_default_locale_vars",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x0",
    "jne     0x338d4  {interactive_shell}",
    "xor     edi, edi  {0x0}",
    "call    sh_chkwrite",
    "jmp     0x32dc0",
    "test    rax, rax",
    "je      0x34275",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdx, r15",
    "lea     rsi, [rel data_11f045]  {\"xrealloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    fatal_error",
    "{ Does not return }",
    "mov     qword [rel data_161708], rax",
    "jmp     0x32e42",
    "lea     rdi, [rel data_1206c6[3]]  {\"TERM\"}",
    "call    get_string_value",
    "lea     rdi, [rel data_11f264[7]]  {\"EMACS\"}",
    "mov     r13, rax",
    "call    get_string_value",
    "lea     rdi, [rel data_11f264]  {\"INSIDE_EMACS\"}",
    "mov     r14, rax",
    "call    get_string_value",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x33a34",
    "mov     eax, dword [rbp-0x128 {subshell_argc_7}]",
    "lea     rdi, [rel top_level]",
    "mov     esi, 0x1",
    "mov     dword [rbp-0x12c {var_134}], eax",
    "lea     rax, [rel exit_immediately_on_error]",
    "mov     eax, dword [rax]  {exit_immediately_on_error}",
    "mov     dword [rbp-0x180 {var_188}], eax",
    "call    __sigsetjmp",
    "endbr64 ",
    "test    eax, eax",
    "je      0x332fd",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]  {wlcache}",
    "mov     dword [rdx+0xc], eax  {data_1612fc}",
    "cdqe    ",
    "mov     rbx, qword [rcx+rax*8]",
    "mov     edi, 0x10",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x3312e",
    "test    r14, r14",
    "je      0x33a5d",
    "lea     rsi, [rel data_11f271]  {\",term:\"}",
    "xor     r12d, r12d  {0x0}",
    "call    strstr",
    "test    rax, rax",
    "setne   r12b",
    "mov     eax, dword [rbp-0x12c {var_134}]",
    "mov     dword [rbp-0x128 {var_130_2}], eax",
    "lea     rax, [rel interactive_shell]",
    "mov     ebx, dword [rax]  {interactive_shell}",
    "test    ebx, ebx",
    "jne     0x33576",
    "lea     edx, [rax-0x3]",
    "cmp     edx, 0x1",
    "jbe     0x33568",
    "mov     qword [rbx+0x8], r14",
    "xor     r14d, r14d  {0x0}",
    "mov     edi, r13d",
    "mov     rsi, rbx",
    "mov     qword [rbx], r14  {0x0}",
    "add     r12, 0x1",
    "call    sub_11a4d0",
    "mov     rdi, rbx",
    "mov     r13d, eax",
    "call    dispose_words",
    "test    r13d, r13d",
    "jne     0x32bee",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     edx, 0x10",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    fatal_error",
    "{ Does not return }",
    "cmp     byte [r13], 0x65",
    "mov     r12d, dword [rbp-0x17c {var_184_1}]",
    "jne     0x33a02",
    "lea     rsi, [rel data_11f278]  {\" (term:\"}",
    "mov     rdi, r14",
    "mov     r12d, 0x1",
    "call    strstr",
    "test    rax, rax",
    "jne     0x33920",
    "mov     r15d, 0x1",
    "lea     rax, [rel no_line_editing]",
    "mov     r14d, dword [rax]  {no_line_editing}",
    "mov     esi, 0x2d",
    "mov     edi, 0x69",
    "mov     ebx, 0x1",
    "call    change_flag",
    "jmp     0x33332",
    "lea     rdi, [rel data_11f28b]",
    "call    unbind_variable",
    "lea     rdi, [rel data_11f28f]",
    "call    unbind_variable",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edi, dword [rax]  {last_command_exit_value}",
    "call    exit_shell",
    "{ Does not return }",
    "cmp     eax, 0x6",
    "je      0x33568",
    "cmp     byte [r13], 0x65",
    "je      0x33a7a",
    "mov     r12d, dword [rbp-0x17c {var_184_1}]",
    "mov     r15d, r12d",
    "jmp     0x339d2",
    "cmp     byte [r13], 0x65",
    "je      0x339cc",
    "cmp     byte [r14], 0x74",
    "je      0x33ac1",
    "cmp     byte [r13], 0x64",
    "jne     0x33959",
    "mov     eax, dword [rbp-0x17c {var_184_1}]",
    "or      r14d, eax",
    "lea     rax, [rel no_line_editing]",
    "mov     dword [rax], r14d  {no_line_editing}",
    "lea     rax, [rel running_under_emacs]",
    "mov     dword [rax], 0x1  {running_under_emacs}",
    "test    r12d, r12d",
    "je      0x33985",
    "lea     rsi, [rel data_11f286]  {\"dumb\"}",
    "mov     rdi, r13",
    "call    strcmp",
    "test    eax, eax",
    "sete    al",
    "movzx   eax, al",
    "mov     dword [rbp-0x17c {var_184_1}], eax",
    "lea     rax, [rel interactive]",
    "mov     dword [rax], ebx  {interactive}",
    "lea     rax, [rel shell_name]",
    "mov     rdi, qword [rax]  {shell_name}",
    "call    shell_is_restricted",
    "lea     rdx, [rel restricted_shell]",
    "xor     r9d, r9d  {0x0}",
    "mov     dword [rdx], eax  {restricted_shell}",
    "lea     rax, [rel restricted]",
    "mov     ebx, dword [rax]  {restricted}",
    "mov     dword [rax], r9d  {0x0}  {restricted}",
    "lea     rax, [rel wordexp_only]",
    "cmp     dword [rax], 0x0",
    "jne     0x3339f  {wordexp_only}",
    "mov     eax, dword [rbp-0x124 {var_12c_1}]",
    "or      eax, dword [rel data_161730]",
    "jne     0x334dc",
    "lea     rax, [rel command_execution_string]",
    "cmp     qword [rax], 0x0",
    "je      0x336da  {command_execution_string}",
    "lea     rax, [rel interactive_shell]",
    "mov     edi, dword [rax]  {interactive_shell}",
    "call    set_job_control",
    "lea     rax, [rel exit_immediately_on_error]",
    "mov     edx, dword [rbp-0x180 {var_188}]",
    "add     dword [rax], edx  {exit_immediately_on_error}",
    "mov     eax, dword [rbp-0x124 {var_12c}]",
    "add     eax, 0x1",
    "mov     dword [rbp-0x124 {var_12c_1}], eax  {0x1}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f280]  {\"emacs\"}",
    "mov     rdi, r13",
    "xor     r14d, r14d  {0x0}",
    "call    strncmp",
    "test    eax, eax",
    "lea     rax, [rel running_under_emacs]",
    "sete    r14b",
    "mov     dword [rax], r14d  {running_under_emacs}",
    "test    r12d, r12d",
    "je      0x339b7",
    "lea     rax, [rel running_under_emacs]",
    "xor     edx, edx  {0x0}",
    "mov     dword [rax], edx  {0x0}  {running_under_emacs}",
    "test    r12d, r12d",
    "je      0x33288",
    "lea     rsi, [rel data_11f280]  {\"emacs\"}",
    "mov     rdi, r13",
    "xor     r14d, r14d  {0x0}",
    "call    strcmp",
    "mov     edx, eax",
    "lea     rax, [rel no_line_editing]",
    "test    edx, edx",
    "sete    r14b",
    "or      r14d, dword [rax]  {no_line_editing}",
    "mov     dword [rax], r14d  {no_line_editing}",
    "test    r15d, r15d",
    "jne     0x33935",
    "lea     rsi, [rel data_12152a]",
    "mov     rdi, r14",
    "call    strcmp",
    "mov     r12d, eax",
    "test    eax, eax",
    "je      0x33920",
    "lea     rax, [rel gnu_error_format]",
    "mov     dword [rax], 0x1  {gnu_error_format}",
    "jmp     0x33288",
    "cmp     byte [r13], 0x65",
    "je      0x33997",
    "cmp     dword [rel data_161700], 0x0",
    "jne     0x33722  {data_161700}",
    "lea     rax, [rel exit_immediately_on_error]",
    "xor     r8d, r8d  {0x0}",
    "mov     edx, dword [rax]  {exit_immediately_on_error}",
    "mov     dword [rax], r8d  {0x0}  {exit_immediately_on_error}",
    "lea     rax, [rel shell_script_filename]",
    "mov     dword [rbp-0x180 {var_188_1}], edx",
    "mov     r12, qword [rax]  {shell_script_filename}",
    "test    r12, r12",
    "je      0x3341f",
    "mov     eax, dword [rbp-0x128 {var_130_2}]",
    "mov     ecx, dword [rbp-0x13c {subshell_argc_1}]",
    "cmp     eax, ecx",
    "je      0x336fa",
    "mov     esi, dword [rbp-0x128 {var_130_2}]",
    "mov     edx, dword [rbp-0x13c {subshell_argc_1}]",
    "xor     ecx, ecx  {0x0}",
    "mov     rdi, qword [rbp-0x138 {subshell_argv_1}]",
    "call    sub_36280",
    "mov     dword [rbp-0x128 {var_130_3}], eax",
    "lea     rax, [rel running_under_emacs]",
    "add     r14d, r12d",
    "mov     dword [rax], r14d  {running_under_emacs}",
    "je      0x33288",
    "cmp     byte [r13], 0x65",
    "mov     r12d, dword [rbp-0x17c {var_184_1}]",
    "jne     0x339b7",
    "cmp     byte [r13], 0x65",
    "jne     0x33288",
    "jmp     0x33a5d",
    "mov     r14d, r12d",
    "lea     r12, [rel data_11f1ed]",
    "xor     edx, edx  {0x0}",
    "lea     rsi, [rel data_122244[0xc]]  {\"y\"}",
    "mov     rdi, r12  {data_11f1ed, \"POSIXLY_CORRECT\"}",
    "call    bind_variable",
    "mov     rdi, r12  {data_11f1ed, \"POSIXLY_CORRECT\"}",
    "call    sv_strict_posix",
    "jmp     0x334e9",
    "lea     rax, [rel restricted]",
    "xor     edx, edx  {0x0}",
    "or      ebx, dword [rax]  {restricted}",
    "setne   dl",
    "cmp     dword [rel data_161728], 0x0",
    "mov     dword [rax], edx  {restricted}",
    "jne     0x33511",
    "lea     rax, [rel interactive_shell]",
    "mov     r12d, dword [rax]  {interactive_shell}",
    "test    r12d, r12d",
    "je      0x33775",
    "lea     rax, [rel dollar_vars]",
    "mov     rax, qword [rax]  {dollar_vars}",
    "mov     qword [rbp-0x188 {dollar_vars_1}], rax",
    "lea     rax, [rel exec_argv0]",
    "mov     r13, qword [rax]  {exec_argv0}",
    "test    r13, r13",
    "je      0x33846",
    "mov     esi, dword [rbp-0x128 {var_130_2}]",
    "mov     edx, dword [rbp-0x13c {subshell_argc_1}]",
    "mov     ecx, 0x1",
    "mov     rdi, qword [rbp-0x138 {subshell_argv_1}]",
    "call    sub_36280",
    "mov     dword [rbp-0x128 {var_130_4}], eax",
    "jmp     0x3339f",
    "lea     rax, [rel read_from_stdin]",
    "cmp     dword [rax], 0x0",
    "je      0x33867  {read_from_stdin}",
    "jmp     0x33985",
    "jmp     0x3399a",
    "mov     r14d, dword [rbp-0x17c {var_184_1}]",
    "jmp     0x3399a",
    "call    cmd_init",
    "call    uwp_init",
    "lea     rax, [rel command_execution_string]",
    "mov     r15, qword [rax]  {command_execution_string}",
    "test    r15, r15",
    "je      0x33add",
    "lea     rax, [rel shell_name]",
    "mov     rdi, qword [rax]  {shell_name}",
    "call    maybe_make_restricted",
    "lea     rdx, [rel login_shell]",
    "mov     eax, dword [rel data_1616fc]",
    "or      eax, dword [rdx]  {login_shell}",
    "or      eax, dword [rel data_161700]",
    "jne     0x337ce",
    "xor     edi, edi  {0x0}",
    "call    set_job_control",
    "mov     r12d, eax",
    "lea     rax, [rel login_shell]",
    "mov     edx, dword [rax]  {login_shell}",
    "test    edx, edx",
    "jne     0x33747",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rdi, [rax+0x1]",
    "call    xmalloc",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "call    strcpy",
    "jmp     0x33415",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rdi, [rax+0x1]",
    "call    xmalloc",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "call    strcpy",
    "movsxd  rax, dword [rbp-0x128 {var_130_2}]",
    "mov     rdi, qword [rbp-0x138 {subshell_argv_1}]",
    "mov     ecx, 0x1",
    "lea     edx, [rax+0x1]",
    "mov     dword [rbp-0x128 {var_130_5}], edx",
    "mov     rdx, qword [rdi+rax*8]",
    "lea     rax, [rel shell_script_filename]",
    "mov     esi, dword [rbp-0x128 {var_130_5}]",
    "mov     qword [rax], rdx  {shell_script_filename}",
    "mov     edx, dword [rbp-0x13c {subshell_argc_1}]",
    "call    sub_36280",
    "mov     dword [rbp-0x128 {var_130_6}], eax",
    "jmp     0x3339f",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f1be]  {\"eterm\"}",
    "mov     rdi, r13",
    "xor     r12d, r12d  {0x0}",
    "call    strncmp",
    "test    eax, eax",
    "sete    r12b",
    "lea     rax, [rel shell_script_filename]",
    "mov     r13, qword [rax]  {shell_script_filename}",
    "test    r13, r13",
    "je      0x33f70",
    "lea     rax, [rel startup_state]",
    "mov     dword [rax], 0x2  {startup_state}",
    "lea     rax, [rel debugging_mode]",
    "cmp     dword [rax], 0x0",
    "je      0x3354c  {debugging_mode}",
    "lea     rax, [rel login_shell]",
    "cmp     dword [rax], 0x0",
    "jne     0x33747  {login_shell}",
    "lea     rax, [rel command_execution_string]",
    "cmp     qword [rax], 0x0",
    "je      0x337de  {command_execution_string}",
    "lea     rax, [rel posixly_correct]",
    "cmp     dword [rax], 0x0",
    "jne     0x340ad  {posixly_correct}",
    "lea     rcx, [rel interactive_shell]",
    "lea     rax, [rel posixly_correct]",
    "cmp     dword [rcx], 0x0",
    "mov     eax, dword [rax]  {posixly_correct}",
    "je      0x340fa",
    "lea     rdx, [rel dollar_vars]",
    "mov     qword [rdx], rax  {dollar_vars}",
    "mov     rax, qword [rel stdin]",
    "mov     rdi, qword [rax]",
    "lea     rax, [rel interactive]",
    "cmp     dword [rax], 0x0",
    "je      0x342eb  {interactive}",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rdi, [rax+0x1]",
    "call    xmalloc",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "call    strcpy",
    "xor     esi, esi  {0x0}",
    "mov     qword [rbp-0x190 {var_198_1}], rax",
    "mov     rdi, rax",
    "mov     rbx, rax",
    "xor     eax, eax  {0x0}",
    "call    open",
    "mov     r12d, eax",
    "test    eax, eax",
    "jns     0x33be2",
    "lea     rax, [rel executing]",
    "mov     dword [rax], 0x1  {executing}",
    "lea     rax, [rel command_execution_string]",
    "mov     rdi, qword [rax]  {command_execution_string}",
    "call    sub_11e260",
    "call    sub_364d0",
    "lea     rax, [rel posixly_correct]",
    "mov     eax, dword [rax]  {posixly_correct}",
    "lea     rdi, [rel data_11f293]  {\"SSH_CLIENT\"}",
    "call    find_variable",
    "test    rax, rax",
    "je      0x341fa",
    "lea     rax, [rel interactive_shell]",
    "mov     edx, dword [rax]  {interactive_shell}",
    "test    edx, edx",
    "je      0x340fa",
    "add     dword [rel data_1616fc], 0x1",
    "cmp     dword [rel data_1616f8], 0x0",
    "je      0x341ca  {data_1616f8}",
    "lea     rax, [rel posixly_correct]",
    "cmp     dword [rel data_1616f4], 0x0",
    "mov     eax, dword [rax]  {posixly_correct}",
    "je      0x337e7",
    "test    eax, eax",
    "jne     0x340ba",
    "call    fileno",
    "lea     rdx, [rel default_buffered_input]",
    "mov     dword [rdx], eax  {default_buffered_input}",
    "lea     rax, [rel read_from_stdin]",
    "mov     dword [rax], 0x1  {read_from_stdin}",
    "jmp     0x33dec",
    "mov     eax, dword [rbp-0x12c {var_134}]",
    "mov     edx, dword [rbp-0x13c {subshell_argc_1}]",
    "cmp     eax, edx",
    "jne     0x33fa7",
    "lea     rax, [rel dollar_vars]",
    "mov     rdi, qword [rax]  {dollar_vars}",
    "call    free",
    "lea     rax, [rel exec_argv0]",
    "mov     r14, qword [rax]  {exec_argv0}",
    "test    r14, r14",
    "je      0x3430b",
    "call    __errno_location",
    "cmp     dword [rax], 0x2",
    "mov     r14, rax",
    "je      0x33b87",
    "lea     rax, [rel shell_script_filename]",
    "cmp     qword [rax], 0x0",
    "je      0x334cd  {shell_script_filename}",
    "mov     eax, dword [rel data_16172c]",
    "lea     edx, [rax+0x1]",
    "mov     dword [rel data_16172c], edx",
    "test    eax, eax",
    "jne     0x334a5",
    "lea     rdi, [rel data_11f29e]  {\"SSH2_CLIENT\"}",
    "call    find_variable",
    "test    rax, rax",
    "jne     0x337ae",
    "lea     rax, [rel shell_level]",
    "cmp     dword [rax], 0x1",
    "jle     0x338ad  {shell_level}",
    "lea     rax, [rel privileged_mode]",
    "cmp     dword [rax], 0x0",
    "jne     0x3349d  {privileged_mode}",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f2bb]  {\"/etc/profile\"}",
    "call    maybe_execute_file",
    "cmp     dword [rel data_161700], 0x0",
    "mov     esi, 0x1",
    "je      0x34232",
    "mov     edx, 0x1",
    "jmp     0x3344d",
    "lea     rdx, [rel privileged_mode]",
    "or      eax, dword [rel data_161700]",
    "or      eax, dword [rdx]  {privileged_mode}",
    "jne     0x334a5",
    "lea     rcx, [rel login_shell]",
    "cmp     dword [rcx], 0x0",
    "je      0x337e7  {login_shell}",
    "lea     rax, [rel login_shell]",
    "cmp     dword [rax], 0x0",
    "je      0x33483  {login_shell}",
    "lea     rax, [rel interactive]",
    "cmp     dword [rax], 0x0",
    "jne     0x33fa7  {interactive}",
    "mov     rax, qword [rel stdin]",
    "mov     rdi, qword [rax]",
    "call    fileno",
    "mov     edi, eax",
    "call    sh_unset_nodelay_mode",
    "jmp     0x33e0a",
    "lea     rax, [rel read_from_stdin]",
    "mov     dword [rax], 0x1  {read_from_stdin}",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rdi, [rax+0x1]",
    "call    xmalloc",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "call    strcpy",
    "jmp     0x33c20",
    "mov     rdi, r14",
    "call    strlen",
    "lea     rdi, [rax+0x1]",
    "call    xmalloc",
    "mov     rsi, r14",
    "mov     rdi, rax",
    "call    strcpy",
    "mov     rdi, rbx",
    "call    absolute_program",
    "test    eax, eax",
    "jne     0x33b3a",
    "mov     rdx, qword [rbp-0x190 {var_198_1}]",
    "lea     rax, [rel exit_immediately_on_error]",
    "mov     ecx, dword [rbp-0x180 {var_188_1}]",
    "add     dword [rax], ecx  {exit_immediately_on_error}",
    "lea     r12, [rel dollar_vars]",
    "mov     rdi, qword [r12]  {dollar_vars}",
    "call    free",
    "mov     rax, qword [rbp-0x188 {dollar_vars_1}]",
    "mov     qword [r12], rax  {dollar_vars}",
    "lea     rdi, [rel data_11f06c]  {\"BASH_ENV\"}",
    "call    get_string_value",
    "mov     rdi, rax",
    "call    sub_36050",
    "jmp     0x334a5",
    "mov     rax, qword [rel stdin]",
    "mov     rdi, qword [rax]",
    "call    fileno",
    "mov     edi, eax",
    "call    isnetconn",
    "test    eax, eax",
    "jne     0x337ae",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f2aa]  {\"/etc/bash.bashrc\"}",
    "call    maybe_execute_file",
    "mov     rdi, qword [rel data_1596e0]",
    "mov     esi, 0x1",
    "call    maybe_execute_file",
    "jmp     0x334a5",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x0",
    "jne     0x33432  {interactive_shell}",
    "mov     edi, r12d",
    "call    set_job_control",
    "mov     eax, dword [rel data_16172c]",
    "lea     edx, [rax+0x1]",
    "mov     dword [rel data_16172c], edx",
    "test    eax, eax",
    "jne     0x3349d",
    "lea     rdi, [rel data_11f2d3]  {\"~/.bash_profile\"}",
    "call    maybe_execute_file",
    "test    eax, eax",
    "jne     0x3376b",
    "lea     rdi, [rel data_11f2c8]  {\"~/.profile\"}",
    "call    maybe_execute_file",
    "jmp     0x3376b",
    "test    eax, eax",
    "jne     0x3349d",
    "cmp     dword [rel data_161700], 0x0",
    "jne     0x340ba  {data_161700}",
    "and     dl, 0x1",
    "je      0x34154",
    "lea     rax, [rel default_buffered_input]",
    "mov     edi, dword [rax]  {default_buffered_input}",
    "call    sh_unset_nodelay_mode",
    "lea     rax, [rel interactive]",
    "cmp     dword [rax], 0x0",
    "jne     0x33eae  {interactive}",
    "lea     r13, [rel exec_argv0]",
    "lea     rdx, [rel dollar_vars]",
    "mov     rdi, qword [r13]  {exec_argv0}",
    "mov     qword [rdx], rax  {dollar_vars}",
    "test    rdi, rdi",
    "je      0x33c45",
    "mov     rdi, rbx",
    "call    file_isdir",
    "test    eax, eax",
    "jne     0x34334",
    "call    free",
    "xor     edi, edi  {0x0}",
    "mov     qword [r13], rdi  {0x0}  {exec_argv0}",
    "mov     rdi, r13",
    "call    find_path_file",
    "test    rax, rax",
    "mov     qword [rbp-0x1b0 {var_1b8_1}], rax",
    "je      0x342df",
    "jmp     0x337be",
    "lea     rdi, [rel data_11f06c[5]]  {\"ENV\"}",
    "call    get_string_value",
    "mov     rdi, rax",
    "call    sub_36050",
    "jmp     0x3349d",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f2e3]  {\"~/.bash_login\"}",
    "call    maybe_execute_file",
    "test    eax, eax",
    "jne     0x3376b",
    "jmp     0x3346e",
    "cmp     dword [rel data_1616fc], 0x0",
    "je      0x3412d  {data_1616fc}",
    "add     dword [rel data_1616fc], 0x1",
    "cmp     dword [rel data_1616f8], 0x0",
    "jne     0x33483  {data_1616f8}",
    "lea     rax, [rel no_line_editing]",
    "cmp     dword [rax], 0x0",
    "je      0x33f09  {no_line_editing}",
    "lea     rax, [rel dollar_vars]",
    "mov     rsi, qword [rax]  {dollar_vars}",
    "lea     rax, [rel default_buffered_input]",
    "mov     edi, dword [rax]  {default_buffered_input}",
    "call    with_input_from_buffered_stream",
    "call    __errno_location",
    "mov     rdi, rbx",
    "mov     dword [rax], 0x15",
    "call    file_error",
    "jmp     0x33f4f",
    "lea     rdi, [rel data_11f2f1]  {\"FUNCNAME\"}",
    "call    find_variable",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x33c77",
    "mov     dword [r14], 0x2",
    "jmp     0x33b3a",
    "mov     rdi, rbx",
    "call    free",
    "mov     rdx, qword [rbp-0x1b0 {var_1b8_1}]",
    "xor     esi, esi  {0x0}",
    "xor     eax, eax  {0x0}",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x1a8 {var_1b0_1}], rdx",
    "call    open",
    "mov     rdx, qword [rbp-0x1a8 {var_1b0_1}]",
    "mov     r12d, eax",
    "mov     rbx, rdx",
    "test    eax, eax",
    "js      0x33b41",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f2c8]  {\"~/.profile\"}",
    "call    maybe_execute_file",
    "jmp     0x3376b",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f2aa]  {\"/etc/bash.bashrc\"}",
    "call    maybe_execute_file",
    "mov     rdi, qword [rel data_1596e0]",
    "mov     esi, 0x1",
    "call    maybe_execute_file",
    "jmp     0x3349d",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f2bb]  {\"/etc/profile\"}",
    "call    maybe_execute_file",
    "cmp     dword [rel data_161700], 0x0",
    "jne     0x341b4  {data_161700}",
    "call    with_input_from_stdin",
    "jmp     0x33e32",
    "lea     rax, [rel dollar_vars]",
    "mov     rdi, qword [rel data_161720]",
    "mov     rsi, qword [rax]  {dollar_vars}",
    "call    with_input_from_stream",
    "jmp     0x33e32",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x0",
    "jne     0x33fc2  {interactive_shell}",
    "mov     eax, dword [rbp-0x124 {var_12c_1}]",
    "or      eax, dword [rel data_161730]",
    "jne     0x33e6d",
    "call    end_job_control",
    "lea     rdi, [rel data_11f2fa]  {\"BASH_SOURCE\"}",
    "call    find_variable",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x33c99",
    "test    byte [rax+0x28 {Elf64_Header::section_header_offset.b}], 0x4",
    "je      0x3432c",
    "mov     ebx, dword [r14]",
    "mov     rdi, rdx",
    "call    file_error",
    "call    end_job_control",
    "xor     edi, edi  {0x0}",
    "cmp     ebx, 0x2",
    "sete    dil",
    "add     edi, 0x7e",
    "call    exit",
    "{ Does not return }",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f2c8]  {\"~/.profile\"}",
    "call    maybe_execute_file",
    "jmp     0x33483",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f2d3]  {\"~/.bash_profile\"}",
    "call    maybe_execute_file",
    "test    eax, eax",
    "jne     0x33483",
    "lea     rax, [rel debugging_mode]",
    "cmp     dword [rax], 0x0",
    "je      0x33e6d  {debugging_mode}",
    "call    reset_mail_timer",
    "call    init_mail_dates",
    "call    bash_initialize_history",
    "lea     rax, [rel shell_initialized]",
    "lea     rdx, [rel history_lines_this_session]",
    "mov     eax, dword [rax]  {shell_initialized}",
    "or      eax, dword [rdx]  {history_lines_this_session}",
    "je      0x340a3",
    "lea     rbx, [rel pretty_print_mode]",
    "lea     rax, [rel shell_initialized]",
    "cmp     dword [rbx], 0x0",
    "mov     dword [rax], 0x1  {shell_initialized}",
    "je      0x33ef6",
    "lea     rax, [rel reading_shell_script]",
    "cmp     dword [rax], 0x0",
    "jne     0x33e68  {reading_shell_script}",
    "lea     rdi, [rel data_11f306]  {\"BASH_LINENO\"}",
    "mov     qword [rbp-0x1b8 {var_1c0_1}], rcx",
    "call    find_variable",
    "mov     rcx, qword [rbp-0x1b8 {var_1c0_1}]",
    "test    rax, rax",
    "mov     r13, rax",
    "je      0x33cc9",
    "test    byte [rax+0x28 {Elf64_Header::section_header_offset.b}], 0x4",
    "je      0x3434c",
    "mov     r14, r15",
    "jmp     0x33c77",
    "mov     r14, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f2e3]  {\"~/.bash_login\"}",
    "call    maybe_execute_file",
    "test    eax, eax",
    "jne     0x33483",
    "call    load_history",
    "jmp     0x33fe9",
    "call    get_tty_state",
    "jmp     0x33e7d",
    "call    reader_loop",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edi, dword [rax]  {last_command_exit_value}",
    "call    exit_shell",
    "{ Does not return }",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x0",
    "jne     0x33ed5  {interactive_shell}",
    "call    sub_364d0",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x0",
    "jne     0x33fc2  {interactive_shell}",
    "mov     rdx, rbx",
    "mov     esi, 0x1",
    "mov     rdi, rcx",
    "call    array_rshift",
    "test    r13, r13",
    "je      0x33d06",
    "test    byte [rax+0x28], 0x4",
    "je      0x3400f",
    "mov     rcx, r15",
    "jmp     0x33c99",
    "mov     rcx, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_123668]  {\"pretty-printing mode ignored in \u2026\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    internal_warning",
    "xor     ecx, ecx  {0x0}",
    "mov     dword [rbx], ecx  {0x0}  {pretty_print_mode}",
    "call    pretty_print_loop",
    "mov     edi, eax",
    "call    exit_shell",
    "{ Does not return }",
    "lea     rdx, [rel data_11f312]  {\"main\"}",
    "mov     esi, 0x1",
    "mov     rdi, r14",
    "call    array_rshift",
    "mov     edi, r12d",
    "call    isatty",
    "mov     r13d, eax",
    "test    eax, eax",
    "jne     0x33d7d",
    "call    executing_line_number",
    "movsxd  rdi, eax",
    "call    itos",
    "mov     rdi, r13",
    "mov     esi, 0x1",
    "mov     r15, rax",
    "mov     rdx, rax",
    "call    array_rshift",
    "mov     rdi, r15",
    "call    free",
    "mov     r13, r15",
    "jmp     0x33cc9",
    "mov     r13, qword [rax+0x8]",
    "or      edx, 0xffffffff  {0xffffffff}",
    "mov     edi, r12d",
    "mov     esi, 0x1",
    "call    move_to_high_fd",
    "mov     edx, 0x1",
    "mov     esi, 0x2",
    "lea     r14, [rel default_buffered_input]",
    "mov     edi, eax",
    "mov     r12d, eax",
    "mov     dword [r14], eax  {default_buffered_input}",
    "xor     eax, eax  {0x0}",
    "call    fcntl",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x0",
    "je      0x33dc2  {interactive_shell}",
    "xor     esi, esi  {0x0}",
    "mov     edx, 0x1",
    "mov     edi, r12d",
    "call    lseek",
    "add     rax, 0x1",
    "je      0x33d7d",
    "lea     rax, [rel forced_interactive]",
    "cmp     dword [rax], 0x0",
    "je      0x33dd7  {forced_interactive}",
    "test    r13d, r13d",
    "jne     0x33ff3",
    "lea     r14, [rbp-0x120 {buf}]",
    "mov     edx, 0x50",
    "mov     edi, r12d",
    "mov     rsi, r14 {buf}",
    "call    read",
    "mov     esi, eax",
    "test    eax, eax",
    "js      0x33f13",
    "mov     rdi, rbx",
    "call    free",
    "lea     rax, [rel reading_shell_script]",
    "mov     dword [rax], 0x1  {reading_shell_script}",
    "test    r13d, r13d",
    "je      0x34041",
    "xor     esi, esi  {0x0}",
    "mov     edi, r12d",
    "call    dup2",
    "mov     edi, r12d",
    "call    close",
    "xor     esi, esi  {0x0}",
    "mov     dword [r14], esi  {0x0}  {default_buffered_input}",
    "jmp     0x33dd7",
    "call    __errno_location",
    "lea     rsi, [rbp-0xd0 {var_d8}]",
    "mov     edi, r12d",
    "mov     r14d, dword [rax]",
    "mov     r13, rax",
    "call    fstat",
    "test    eax, eax",
    "jne     0x33f43",
    "je      0x33d71",
    "lea     rax, [rel enable_history_list]",
    "cmp     dword [rax], 0xffffffff",
    "jne     0x34053  {enable_history_list}",
    "mov     dword [r13], r14d",
    "mov     rdi, rbx",
    "call    file_error",
    "mov     eax, dword [rbp-0xb8 {var_c0}]",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "je      0x33f5e",
    "xor     edx, edx  {0x0}",
    "xor     esi, esi  {0x0}",
    "mov     edi, r12d",
    "call    lseek",
    "mov     rdi, r14 {buf}",
    "call    check_binary_file",
    "test    eax, eax",
    "jne     0x34017",
    "call    sub_35e60",
    "lea     rax, [rel startup_state]",
    "mov     dword [rax], 0x1  {startup_state}",
    "lea     rax, [rel interactive_shell]",
    "mov     dword [rax], 0x1  {interactive_shell}",
    "lea     rax, [rel expaliases_flag]",
    "mov     dword [rax], 0x1  {expaliases_flag}",
    "lea     rax, [rel expand_aliases]",
    "mov     dword [rax], 0x1  {expand_aliases}",
    "lea     rax, [rel enable_history_list]",
    "mov     edx, dword [rax]  {enable_history_list}",
    "lea     rax, [rel remember_on_history]",
    "mov     dword [rax], edx  {remember_on_history}",
    "jmp     0x33dd7",
    "mov     dword [rax], 0x1  {enable_history_list}",
    "mov     dword [r13], 0x15",
    "mov     rdi, rbx",
    "call    file_error",
    "jmp     0x33f4f",
    "mov     edx, 0x5",
    "xor     edi, edi  {0x0}",
    "lea     rsi, [rel data_123648]  {\"%s: cannot execute binary file\"}",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    internal_error",
    "call    end_job_control",
    "jmp     0x33f54",
    "mov     edi, 0x7e",
    "call    exit",
    "{ Does not return }"
  ]
}
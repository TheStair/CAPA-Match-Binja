{
  "address": "0x112090",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     rax, [rel _rl_last_command_was_kill]",
    "mov     rbx, qword [rel data_16a4b8]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x112180",
    "test    rbx, rbx",
    "je      0x112230",
    "test    rbx, rbx",
    "je      0x112230",
    "mov     dword [rel data_16a984], 0x1",
    "mov     edi, 0x10",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x1122c2",
    "mov     r12d, dword [rel data_16a984]",
    "cmp     r12d, 0xa",
    "je      0x1121f8",
    "mov     eax, dword [rel data_16a984]",
    "lea     r12d, [rax-0x1]",
    "movsxd  r15, r12d",
    "lea     rbx, [rbx+r15*8]",
    "mov     rcx, qword [rbx]",
    "test    rcx, rcx",
    "je      0x1121d9",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_16a4b8], rbx",
    "xor     r12d, r12d",
    "mov     qword [rbx], 0x0",
    "jmp     0x1121d9",
    "mov     rdi, qword [rbx]",
    "test    rdi, rdi",
    "je      0x11220c",
    "lea     r14d, [r12+0x2]",
    "lea     eax, [r12+0x1]",
    "mov     rdi, rbx",
    "movsxd  r14, r14d",
    "mov     dword [rel data_16a984], eax",
    "shl     r14, 0x3",
    "mov     rsi, r14",
    "call    realloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x112291",
    "mov     qword [rbx], r13",
    "lea     rax, [rel rl_editing_mode]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x1121d9",
    "lea     rsi, [rbx+0x8]",
    "mov     edx, 0x50",
    "mov     rdi, rbx",
    "mov     r14d, 0x48",
    "call    memmove",
    "mov     r12d, 0x9",
    "jmp     0x1121cf",
    "call    free",
    "mov     rbx, qword [rel data_16a4b8]",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_16a4b8], rbx",
    "sub     r14, 0x10",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x40], rcx",
    "mov     r14d, esi",
    "call    strlen",
    "mov     rdi, r13",
    "mov     rbx, rax",
    "call    strlen",
    "lea     rax, [rbx+rax+0x1]",
    "mov     rdi, rax",
    "mov     qword [rbp-0x38], rax",
    "call    malloc",
    "mov     rcx, qword [rbp-0x40]",
    "test    rax, rax",
    "mov     rbx, rax",
    "je      0x1122a7",
    "add     rbx, r14",
    "mov     qword [rbx], 0x0",
    "mov     rsi, qword [rbp-0x38]",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "test    r14d, r14d",
    "je      0x112268",
    "mov     r14, qword [rbp-0x38]",
    "mov     rsi, r13",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x40], rcx",
    "mov     rdx, r14",
    "call    __strcpy_chk",
    "mov     rcx, qword [rbp-0x40]",
    "mov     rdx, r14",
    "mov     qword [rbp-0x38], rcx",
    "mov     rsi, rcx",
    "jmp     0x112157",
    "mov     r14, qword [rbp-0x38]",
    "mov     rsi, rcx",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x38], rcx",
    "mov     rdx, r14",
    "call    __strcpy_chk",
    "mov     rdx, r14",
    "mov     rsi, r13",
    "mov     rdi, rbx",
    "call    __strcat_chk",
    "mov     rdi, qword [rbp-0x38]",
    "call    free",
    "mov     rdi, r13",
    "call    free",
    "mov     rax, qword [rel data_16a4b8]",
    "mov     qword [rax+r15*8], rbx",
    "jmp     0x1121dc",
    "mov     dword [rel data_16a4b4], r12d",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    "
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x44cd0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using RC4 KSA/89b7ba675fcb4f4eac2317f83c0a9436",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x18",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "test    rdi, rdi",
    "je      0x44d04",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x44e45",
    "call    strlen",
    "mov     r12, rax",
    "test    eax, eax",
    "jne     0x44d28",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x18",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "lea     rdi, [rel data_11fae3]  {\"PROMPT_DIRTRIM\"}",
    "call    find_variable",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x44d04",
    "call    get_variable_value",
    "test    rax, rax",
    "je      0x44d04",
    "cmp     byte [rax], 0x0",
    "je      0x44d04",
    "lea     rsi, [rbp-0x30]",
    "mov     rdi, rax",
    "call    legal_number",
    "test    eax, eax",
    "je      0x44d04",
    "mov     rdi, qword [rbp-0x30]",
    "test    rdi, rdi",
    "jle     0x44d04",
    "movzx   eax, byte [rbx]",
    "mov     r13, rbx",
    "cmp     al, 0x7e",
    "je      0x44e28",
    "mov     edx, eax",
    "add     r13, 0x1",
    "movzx   eax, byte [r13]",
    "cmp     dl, 0x2f",
    "je      0x44d72",
    "test    al, al",
    "je      0x44d04",
    "test    al, al",
    "jne     0x44e28",
    "mov     rdx, r13",
    "xor     ecx, ecx",
    "nop     dword [rax+rax]",
    "jmp     0x44d04",
    "cmp     al, 0x2f",
    "sete    al",
    "add     rdx, 0x1",
    "movzx   eax, al",
    "add     ecx, eax",
    "movzx   eax, byte [rdx]",
    "test    al, al",
    "jne     0x44d80",
    "movsxd  rcx, ecx",
    "cmp     rdi, rcx",
    "jg      0x44d04",
    "movsxd  r12, r12d",
    "xor     eax, eax",
    "add     r12, rbx",
    "cmp     byte [r12], 0x2f",
    "mov     rsi, r12",
    "setne   al",
    "sub     rsi, rax",
    "cmp     r13, rsi",
    "jb      0x44dcd",
    "cmp     byte [rsi], 0x2f",
    "jne     0x44dc0",
    "jmp     0x44de0",
    "sub     rsi, 0x1",
    "cmp     r13, rsi",
    "je      0x44d04",
    "sub     rdi, 0x1",
    "jne     0x44dc0",
    "cmp     r13, rsi",
    "je      0x44d04",
    "mov     qword [rbp-0x30], 0x0",
    "mov     rax, rsi",
    "sub     rax, r13",
    "cmp     eax, 0x3",
    "jle     0x44d04",
    "mov     eax, 0x2e2e",
    "sub     r12, rsi",
    "mov     byte [r13+0x2], 0x2e",
    "lea     rdi, [r13+0x3]",
    "mov     word [r13], ax",
    "movsxd  r12, r12d",
    "mov     rdx, r12",
    "call    memmove",
    "mov     byte [r13+r12+0x3], 0x0",
    "jmp     0x44d04"
  ]
}
{
  "address": "0xa79e0",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "contain loop",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "lea     rax, [rel num_shell_builtins]",
    "mov     qword [rbp-0x40], rdi",
    "mov     dword [rbp-0x44], esi",
    "mov     r15d, dword [rax]",
    "sub     r15d, 0x1",
    "js      0xa7a71",
    "xor     r14d, r14d",
    "lea     rax, [rel shell_builtins]",
    "movsx   r12d, byte [rdi]",
    "xor     r13d, r13d",
    "mov     r8, qword [rax]",
    "jmp     0xa7a29",
    "lea     eax, [r15+r13]",
    "mov     ebx, eax",
    "shr     ebx, 0x1f",
    "add     ebx, eax",
    "sar     ebx, 0x1",
    "movsxd  rax, ebx",
    "lea     r14, [rax+rax*2]",
    "shl     r14, 0x4",
    "add     r14, r8",
    "mov     rdi, qword [r14]",
    "movsx   eax, byte [rdi]",
    "sub     eax, r12d",
    "jne     0xa7a64",
    "test    eax, eax",
    "jg      0xa7a20",
    "mov     rsi, qword [rbp-0x40]",
    "mov     qword [rbp-0x38], r8",
    "call    strcmp",
    "mov     r8, qword [rbp-0x38]",
    "test    eax, eax",
    "je      0xa7a90",
    "lea     r15d, [rbx-0x1]",
    "cmp     r15d, r13d",
    "jl      0xa7a71",
    "lea     r13d, [rbx+0x1]",
    "cmp     r15d, r13d",
    "jge     0xa7a29",
    "cmp     qword [r14+0x8], 0x0",
    "je      0xa7a71",
    "mov     eax, dword [r14+0x10]",
    "test    al, 0x2",
    "jne     0xa7a71",
    "and     eax, 0x1",
    "or      eax, dword [rbp-0x44]",
    "mov     eax, 0x0",
    "cmove   r14, rax",
    "jmp     0xa7a74",
    "add     rsp, 0x28",
    "mov     rax, r14",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    "
  ]
}
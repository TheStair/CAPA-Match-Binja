{
  "address": "0xe3dd0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "test    edi, edi",
    "je      0xe3f54",
    "xor     eax, eax",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12d, edi",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     rbx, [rel rl_point]",
    "lea     r14, [rel rl_end]",
    "nop     ",
    "add     rsp, 0x8",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     r13, [rel rl_line_buffer]",
    "movsxd  rax, edx",
    "mov     rsi, qword [r13]",
    "movzx   eax, byte [rsi+rax]",
    "cmp     al, 0x20",
    "je      0xe3eb0",
    "cmp     dword [r14], edx",
    "jle     0xe3ee7",
    "cmp     al, 0x9",
    "jne     0xe3e59",
    "sub     r12d, 0x1",
    "jne     0xe3e00",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xe3ecd",
    "cmp     edx, ecx",
    "jge     0xe3f30",
    "jmp     0xe3edf",
    "mov     ecx, dword [r14]",
    "mov     edx, dword [rbx]",
    "lea     eax, [rcx-0x1]",
    "cmp     eax, edx",
    "jle     0xe3ef1",
    "mov     eax, dword [rbx]",
    "lea     edx, [rax+0x1]",
    "mov     dword [rbx], edx",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xe3f08",
    "movsxd  rax, dword [rbx]",
    "mov     rcx, qword [r13]",
    "mov     rdx, rax",
    "movzx   eax, byte [rcx+rax]",
    "jmp     0xe3edf",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xe3e38",
    "cmp     al, 0x20",
    "je      0xe3eb0",
    "cmp     al, 0x9",
    "je      0xe3eb0",
    "mov     r15d, dword [rbx]",
    "mov     edi, 0x1",
    "call    _rl_forward_char_internal",
    "mov     edx, dword [r14]",
    "mov     dword [rbx], eax",
    "cmp     eax, r15d",
    "je      0xe3f50",
    "mov     eax, dword [rbx]",
    "lea     edx, [rax+0x1]",
    "mov     dword [rbx], edx",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xe3e38",
    "mov     dword [rbx], edx",
    "jmp     0xe3ed4",
    "cmp     eax, edx",
    "jg      0xe3f50",
    "cmp     al, 0x9",
    "je      0xe3edf",
    "mov     r15d, dword [rbx]",
    "mov     edi, 0x1",
    "call    _rl_forward_char_internal",
    "mov     edx, dword [r14]",
    "mov     dword [rbx], eax",
    "cmp     eax, r15d",
    "je      0xe3f40",
    "mov     rcx, qword [r13]",
    "movsxd  rax, edx",
    "movzx   eax, byte [rcx+rax]",
    "mov     edx, eax",
    "jmp     0xe3ed4",
    "mov     ecx, dword [r14]",
    "mov     dword [rbx], edx",
    "jmp     0xe3e3f",
    "cmp     eax, edx",
    "jg      0xe3f40",
    "mov     rcx, qword [r13]",
    "movsxd  rax, edx",
    "movzx   eax, byte [rcx+rax]",
    "cmp     al, 0x20",
    "je      0xe3eb0",
    "mov     rcx, qword [r13]",
    "mov     edx, eax",
    "movsxd  rax, edx",
    "movzx   eax, byte [rcx+rax]",
    "cmp     al, 0x20",
    "jne     0xe3e4e",
    "nop     dword [rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
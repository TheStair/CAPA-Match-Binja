{
  "address": "0xb9230",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "test    rdi, rdi",
    "je      0xb925e",
    "lea     rax, [rel job_control]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xb9310",
    "mov     rax, qword [rdi+0x8]",
    "test    rax, rax",
    "je      0xb925e",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_12112a[4]]  {\"no job control\"}",
    "xor     edi, edi",
    "mov     r12d, 0x1",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "add     rsp, 0x8",
    "mov     eax, r12d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "lea     r12, [rel loptend]",
    "lea     rax, [rel lcurrent]",
    "lea     rsi, [rel data_122e02]",
    "mov     rdi, rbx",
    "mov     qword [rel data_168d30], 0x0",
    "mov     qword [r12], 0x0",
    "mov     qword [rax], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xb92e0",
    "mov     rdi, qword [rax]",
    "cmp     byte [rdi], 0x2d",
    "je      0xb9348",
    "mov     rbx, qword [r12]",
    "mov     r13d, 0x1",
    "xor     r12d, r12d",
    "nop     dword [rax]",
    "cmp     eax, 0xffffff9d",
    "je      0xb9360",
    "lea     rsi, [rel 0x1210f5]  {\"--help\"}",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xb925e",
    "add     rsp, 0x8",
    "mov     eax, r12d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0xb92f0",
    "call    builtin_help",
    "jmp     0xb92c3",
    "call    builtin_usage",
    "nop     dword [rax]",
    "xor     esi, esi",
    "mov     rdi, rbx",
    "call    sub_b8ef0",
    "cmp     eax, 0x1",
    "cmove   r12d, r13d",
    "test    rbx, rbx",
    "je      0xb92c9",
    "jmp     0xb92c9",
    "mov     r12d, 0x102"
  ]
}
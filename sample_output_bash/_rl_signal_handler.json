{
  "address": "0x102620",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "hide graphical window from taskbar/3804d9f76e4f47c8b3a7ed608bc3a556",
    "get current PID on Linux",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x110",
    "lea     r12, [rel rl_readline_state]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "lea     rax, [rel _rl_caught_signal]",
    "mov     dword [rax], 0x0",
    "mov     rax, qword [r12]",
    "or      ah, 0x80",
    "cmp     edi, 0x1c",
    "je      0x102890",
    "mov     qword [r12], rax",
    "call    rl_resize_terminal",
    "lea     rax, [rel rl_signal_event_hook]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x102734",
    "lea     r13, [rel _rl_sigcleanup]",
    "mov     qword [r12], rax",
    "mov     ebx, edi",
    "mov     rax, qword [r13]",
    "test    rax, rax",
    "je      0x102698",
    "{Case 0x0, 0x4-0xd, 0x10-0x13}",
    "and     qword [r12], 0xffffffffffff7fff",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x1028cc",
    "call    rax",
    "jmp     0x102734",
    "lea     r13, [rbp-0x130]",
    "mov     rdi, r13",
    "call    sigemptyset",
    "xor     esi, esi",
    "xor     edi, edi",
    "mov     rdx, r13",
    "call    sigprocmask",
    "cmp     ebx, 0x16",
    "ja      0x102734",
    "lea     r14, [rel _rl_sigcleanarg]",
    "mov     rsi, qword [r14]",
    "call    rax",
    "mov     qword [r13], 0x0",
    "mov     qword [r14], 0x0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x110",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "lea     rdx, [rel jump_table_138b4c]",
    "mov     eax, ebx",
    "movsxd  rax, dword [rdx+rax*4]",
    "add     rax, rdx",
    "jmp     rax",
    "{Case 0x1, 0x3, 0xe-0xf}",
    "mov     edi, ebx",
    "call    rl_echo_signal_char",
    "call    _rl_clean_up_for_exit",
    "lea     rax, [rel rl_deprep_term_function]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x1026ed",
    "{Case 0x2}",
    "lea     rax, [rel rl_completion_found_quote]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel rl_completion_quote_character]",
    "mov     dword [rax], 0x0",
    "call    rl_free_undo_list",
    "lea     rax, [rel history_offset]",
    "lea     rdx, [rel history_length]",
    "movsxd  rax, dword [rax]",
    "cmp     eax, dword [rdx]",
    "je      0x1027b1",
    "{Case 0x14-0x16}",
    "mov     esi, 0x16",
    "mov     rdi, r13",
    "lea     r14, [rbp-0xb0]",
    "call    sigaddset",
    "mov     rdx, r14",
    "mov     rsi, r13",
    "xor     edi, edi",
    "call    sigprocmask",
    "mov     edi, ebx",
    "call    rl_echo_signal_char",
    "call    _rl_clean_up_for_exit",
    "lea     rax, [rel rl_deprep_term_function]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x102858",
    "lea     rax, [rel rl_pending_input]",
    "and     qword [r12], 0xfffffffffffdffff",
    "mov     dword [rax], 0x0",
    "call    rl_clear_signals",
    "call    rax",
    "call    _rl_kill_kbd_macro",
    "lea     rax, [rel rl_prompt]",
    "mov     rdx, qword [rax]",
    "lea     rax, [rel rl_display_prompt]",
    "mov     qword [rax], rdx",
    "mov     eax, dword [rel data_16a4b0]",
    "test    eax, eax",
    "jne     0x1028b8",
    "mov     rdx, qword [rel data_1688b8]",
    "test    rdx, rdx",
    "je      0x1027b1",
    "lea     rax, [rel rl_pending_input]",
    "and     qword [r12], 0xfffffffffffdffff",
    "mov     dword [rax], 0x0",
    "call    rl_clear_signals",
    "xor     edx, edx",
    "mov     rsi, r14",
    "mov     edi, 0x1",
    "call    sigprocmask",
    "jmp     0x102707",
    "call    rax",
    "call    rl_set_signals",
    "lea     rdx, [rel _rl_meta_flag]",
    "mov     edi, dword [rdx]",
    "call    rax",
    "call    rl_restore_prompt",
    "mov     dword [rel data_16a4b0], 0x0",
    "jmp     0x1027d8",
    "lea     rax, [rel rl_redisplay_function]",
    "call    qword [rax]",
    "lea     rax, [rel rl_arg_sign]",
    "mov     dword [rax], 0x1",
    "lea     rax, [rel rl_numeric_arg]",
    "mov     dword [rax], 0x1",
    "lea     rax, [rel rl_explicit_arg]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel _rl_argcxt]",
    "mov     dword [rax], 0x0",
    "call    rl_callback_sigcleanup",
    "mov     rax, qword [rdx+rax*8]",
    "test    rax, rax",
    "je      0x1027b1",
    "call    getpid",
    "mov     esi, ebx",
    "mov     edi, eax",
    "call    kill",
    "lea     rax, [rel rl_prep_term_function]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x10272f",
    "mov     qword [rax+0x10], 0x0"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
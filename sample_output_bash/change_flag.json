{
  "address": "0x65340",
  "rules": [
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "contain loop",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     rax, [rel restricted]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "je      0x65366",
    "lea     r8, [rel shell_flags]",
    "xor     ecx, ecx",
    "mov     eax, 0x61",
    "lea     rdx, [r8+0x10]",
    "jmp     0x6538e",
    "cmp     edi, 0x72",
    "jne     0x65366",
    "cmp     edi, eax",
    "jne     0x65380",
    "cmp     esi, 0x2b",
    "je      0x653d0",
    "movsx   eax, byte [rdx]",
    "add     rdx, 0x10",
    "add     ecx, 0x1",
    "test    al, al",
    "je      0x653d0",
    "movsxd  rcx, ecx",
    "shl     rcx, 0x4",
    "mov     rax, qword [r8+rcx+0x8]",
    "test    rax, rax",
    "je      0x653d0",
    "mov     ebx, 0xffffffff",
    "lea     edx, [rsi-0x2b]",
    "and     edx, 0xfffffffd",
    "jne     0x653d0",
    "xor     edx, edx",
    "cmp     esi, 0x2d",
    "mov     ebx, dword [rax]",
    "sete    dl",
    "sub     edi, 0x48",
    "mov     dword [rax], edx",
    "cmp     edi, 0x2e",
    "ja      0x653d5",
    "{Case 0x1-0x1c, 0x1e-0x24, 0x27, 0x29, 0x2b-0x2d}",
    "mov     eax, ebx",
    "mov     rbx, qword [rbp-0x8]",
    "leave   ",
    "retn    ",
    "lea     rcx, [rel jump_table_13696c]",
    "movsxd  rax, dword [rcx+rdi*4]",
    "add     rax, rcx",
    "jmp     rax",
    "{Case 0x2e}",
    "lea     rax, [rel verbose_flag]",
    "mov     edx, dword [rax]",
    "lea     rax, [rel echo_input_at_read]",
    "mov     dword [rax], edx",
    "mov     eax, ebx",
    "mov     rbx, qword [rbp-0x8]",
    "leave   ",
    "retn    ",
    "{Case 0x0}",
    "lea     rax, [rel histexp_flag]",
    "mov     edx, dword [rax]",
    "lea     rax, [rel history_expansion]",
    "mov     dword [rax], edx",
    "cmp     esi, 0x2d",
    "jne     0x653d5",
    "{Case 0x1d}",
    "lea     rax, [rel builtin_ignoring_errexit]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x653d5",
    "{Case 0x25}",
    "mov     edi, edx",
    "call    set_job_control",
    "mov     eax, ebx",
    "mov     rbx, qword [rbp-0x8]",
    "leave   ",
    "retn    ",
    "{Case 0x26}",
    "lea     rax, [rel interactive_shell]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x653d5",
    "{Case 0x28}",
    "cmp     esi, 0x2b",
    "jne     0x653d5",
    "{Case 0x2a}",
    "cmp     esi, 0x2d",
    "jne     0x653d5",
    "call    bash_initialize_history",
    "jmp     0x653d5",
    "lea     rax, [rel errexit_flag]",
    "mov     edx, dword [rax]",
    "lea     rax, [rel exit_immediately_on_error]",
    "mov     dword [rax], edx",
    "jmp     0x653d5",
    "lea     rax, [rel read_but_dont_execute]",
    "mov     dword [rax], 0x0",
    "jmp     0x653d5",
    "call    disable_priv_mode",
    "jmp     0x653d5",
    "lea     rax, [rel shell_initialized]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x653d5",
    "lea     rax, [rel shell_name]",
    "mov     rdi, qword [rax]",
    "call    maybe_make_restricted",
    "jmp     0x653d5"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
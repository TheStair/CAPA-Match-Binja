{
  "address": "0x65340",
  "rules": [
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     rax, [rel restricted]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "je      0x65366",
    "lea     r8, [rel shell_flags]",
    "xor     ecx, ecx",
    "mov     eax, 0x61",
    "lea     rdx, [r8+0x10]",
    "jmp     0x6538e",
    "cmp     edi, 0x72",
    "jne     0x65366",
    "cmp     edi, eax",
    "jne     0x65380",
    "cmp     esi, 0x2b",
    "je      0x653d0",
    "movsx   eax, byte [rdx]",
    "add     rdx, 0x10",
    "add     ecx, 0x1",
    "test    al, al",
    "je      0x653d0",
    "movsxd  rcx, ecx",
    "shl     rcx, 0x4",
    "mov     rax, qword [r8+rcx+0x8]",
    "test    rax, rax",
    "je      0x653d0",
    "mov     ebx, 0xffffffff",
    "lea     edx, [rsi-0x2b]",
    "and     edx, 0xfffffffd",
    "jne     0x653d0",
    "xor     edx, edx",
    "cmp     esi, 0x2d",
    "mov     ebx, dword [rax]",
    "sete    dl",
    "sub     edi, 0x48",
    "mov     dword [rax], edx",
    "cmp     edi, 0x2e",
    "ja      0x653d5",
    "{Case 0x1-0x1c, 0x1e-0x24, 0x27, 0x29, 0x2b-0x2d}",
    "mov     eax, ebx",
    "mov     rbx, qword [rbp-0x8]",
    "leave   ",
    "retn    ",
    "lea     rcx, [rel jump_table_13696c]",
    "movsxd  rax, dword [rcx+rdi*4]",
    "add     rax, rcx",
    "jmp     rax",
    "{Case 0x2e}",
    "lea     rax, [rel verbose_flag]",
    "mov     edx, dword [rax]",
    "lea     rax, [rel echo_input_at_read]",
    "mov     dword [rax], edx",
    "mov     eax, ebx",
    "mov     rbx, qword [rbp-0x8]",
    "leave   ",
    "retn    ",
    "{Case 0x0}",
    "lea     rax, [rel histexp_flag]",
    "mov     edx, dword [rax]",
    "lea     rax, [rel history_expansion]",
    "mov     dword [rax], edx",
    "cmp     esi, 0x2d",
    "jne     0x653d5",
    "{Case 0x1d}",
    "lea     rax, [rel builtin_ignoring_errexit]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x653d5",
    "{Case 0x25}",
    "mov     edi, edx",
    "call    set_job_control",
    "mov     eax, ebx",
    "mov     rbx, qword [rbp-0x8]",
    "leave   ",
    "retn    ",
    "{Case 0x26}",
    "lea     rax, [rel interactive_shell]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x653d5",
    "{Case 0x28}",
    "cmp     esi, 0x2b",
    "jne     0x653d5",
    "{Case 0x2a}",
    "cmp     esi, 0x2d",
    "jne     0x653d5",
    "call    bash_initialize_history",
    "jmp     0x653d5",
    "lea     rax, [rel errexit_flag]",
    "mov     edx, dword [rax]",
    "lea     rax, [rel exit_immediately_on_error]",
    "mov     dword [rax], edx",
    "jmp     0x653d5",
    "lea     rax, [rel read_but_dont_execute]",
    "mov     dword [rax], 0x0",
    "jmp     0x653d5",
    "call    disable_priv_mode",
    "jmp     0x653d5",
    "lea     rax, [rel shell_initialized]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x653d5",
    "lea     rax, [rel shell_name]",
    "mov     rdi, qword [rax]",
    "call    maybe_make_restricted",
    "jmp     0x653d5"
  ]
}
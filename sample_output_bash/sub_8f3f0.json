{
  "address": "0x8f3f0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     edi, 0x1",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     r12, [rel pipeline_pgrp]",
    "mov     ecx, dword [r12]",
    "mov     dword [r12], 0x0",
    "mov     dword [rbp-0x38], ecx",
    "call    save_pipeline",
    "lea     rax, [rel already_making_children]",
    "mov     edi, 0x41",
    "lea     r14, [rel echo_input_at_read]",
    "lea     rbx, [rel pgrp_pipe]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel suppress_debug_trap_verbose]",
    "mov     edx, dword [r14]",
    "mov     r15, qword [rbx]",
    "mov     qword [rbx], 0xffffffffffffffff",
    "mov     esi, dword [rax]",
    "xor     eax, eax",
    "mov     dword [rbp-0x34], edx",
    "test    esi, esi",
    "lea     rsi, [rel data_120a96]  {\"debug trap\"}",
    "cmove   eax, edx",
    "mov     dword [r14], eax",
    "call    sub_8e640",
    "mov     edx, dword [rbp-0x34]",
    "mov     ecx, dword [rbp-0x38]",
    "mov     edi, 0x1",
    "mov     r13d, eax",
    "mov     dword [r14], edx",
    "mov     dword [r12], ecx",
    "call    restore_pipeline",
    "mov     edi, dword [rbx]",
    "test    edi, edi",
    "js      0x8f499",
    "mov     edi, dword [rbx+0x4]",
    "test    edi, edi",
    "js      0x8f4a5",
    "call    close",
    "mov     edi, dword [r12]",
    "mov     qword [rbx], r15",
    "test    edi, edi",
    "jle     0x8f4bc",
    "call    close",
    "mov     ecx, dword [rel data_160908]",
    "test    ecx, ecx",
    "jne     0x8f4cb",
    "lea     rax, [rel subshell_environment]",
    "test    byte [rax], 0x11",
    "je      0x8f4f0",
    "lea     rax, [rel debugging_mode]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x8f4de",
    "call    sub_6ad40",
    "mov     esi, 0x1",
    "call    give_terminal_to",
    "jmp     0x8f4bc",
    "add     rsp, 0x18",
    "mov     eax, r13d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     r13d, 0x2",
    "je      0x8f500",
    "lea     rax, [rel return_catch_flag]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x8f4de",
    "lea     rax, [rel return_catch_value]",
    "lea     rdi, [rel return_catch]",
    "mov     esi, 0x1",
    "mov     dword [rax], 0x2",
    "call    __longjmp_chk",
    "{ Does not return }"
  ]
}
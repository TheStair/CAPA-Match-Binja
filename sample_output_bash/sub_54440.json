{
  "address": "0x54440",
  "rules": [
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rdi",
    "xor     edi, edi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "call    get_directory_stack",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x54548",
    "xor     r13d, r13d",
    "jmp     0x544ee",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x5454d",
    "mov     rbx, qword [r14+0x8]",
    "test    rbx, rbx",
    "je      0x54527",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movdqa  xmm0, xmmword [rel data_136770]",
    "mov     qword [r13+0x18], 0x0",
    "mov     edi, 0x20",
    "movups  xmmword [r13], xmm0",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x54565",
    "mov     rdi, r15",
    "call    dispose_words",
    "mov     qword [r14+0x8], r13",
    "add     rsp, 0x8",
    "mov     rax, r14",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, rbx",
    "call    array_flush",
    "mov     r12, qword [rbx+0x10]",
    "test    r12, r12",
    "je      0x5451f",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbx], 0xffffffffffffffff",
    "xor     r12d, r12d",
    "mov     qword [rbx+0x8], 0x0",
    "mov     qword [rbx+0x10], rbx",
    "mov     qword [rbx+0x18], rbx",
    "mov     qword [r13+0x10], rbx",
    "mov     rbx, r15",
    "nop     dword [rax]",
    "mov     rdi, rbx",
    "call    free",
    "mov     rdi, qword [r12+0x8]",
    "test    rdi, rdi",
    "je      0x54517",
    "mov     rax, qword [rbx+0x8]",
    "mov     rsi, r12",
    "mov     rdi, r13",
    "add     r12, 0x1",
    "mov     rdx, qword [rax]",
    "call    array_insert",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0x544d0",
    "mov     rdi, r12",
    "call    free",
    "call    free"
  ]
}
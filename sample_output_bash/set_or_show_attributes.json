{
  "address": "0xc38a0",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "contain loop",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "xor     r15d, r15d",
    "push    r14",
    "xor     r14d, r14d",
    "push    r13",
    "mov     r13d, esi",
    "push    r12",
    "lea     r12, [rel data_121856]  {\"aAfnp\"}",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x68",
    "mov     dword [rbp-0x5c], edx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel loptend]",
    "mov     dword [rbp-0x54], 0x0",
    "mov     qword [rel data_168d30], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     dword [rbp-0x58], 0x0",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel loptend]",
    "mov     r12, qword [rax]",
    "test    r12, r12",
    "je      0xc3d80",
    "cmp     eax, 0x66",
    "je      0xc3bb8",
    "mov     eax, r13d",
    "and     eax, 0x8",
    "or      eax, dword [rbp-0x54]",
    "je      0xc3efe",
    "mov     r10d, r13d",
    "and     r10d, 0x2",
    "test    r13b, 0x1",
    "je      0xc39dd",
    "mov     dword [rbp-0x54], 0x1",
    "jmp     0xc3917",
    "jg      0xc3978",
    "call    all_shell_variables",
    "mov     r12, rax",
    "jmp     0xc3de5",
    "xor     edi, edi",
    "call    map_over_funcs",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xc3f0b",
    "mov     r11d, dword [rbp-0x58]",
    "test    r11d, r11d",
    "jne     0xc3bd8",
    "lea     rdx, [rel array_needs_making]",
    "mov     dword [rdx], 0x1",
    "mov     rsi, r12",
    "mov     rdi, rbx",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xc39b0",
    "cmp     eax, 0x6e",
    "je      0xc3bc8",
    "cmp     eax, 0x41",
    "je      0xc3ba8",
    "test    r13b, 0x4",
    "jne     0xc3ee7",
    "cmp     r13d, 0x8",
    "jne     0xc3de1",
    "cmp     qword [rax], 0x0",
    "je      0xc3f3a",
    "mov     edx, r13d",
    "and     edx, 0xfffffffd",
    "test    r10d, r10d",
    "cmovne  r13d, edx",
    "xor     edx, edx",
    "xor     r10d, r10d",
    "jmp     0xc39f0",
    "test    r10d, r10d",
    "setne   dl",
    "mov     dword [rbp-0x58], 0x1",
    "jmp     0xc3917",
    "cmp     eax, 0x70",
    "je      0xc3917",
    "mov     r15d, 0x1",
    "jmp     0xc3917",
    "cmp     eax, 0x61",
    "je      0xc3990",
    "mov     eax, r13d",
    "add     r14d, 0x1",
    "and     eax, 0xfffffffb",
    "cmp     r13d, 0x4",
    "cmovne  r13d, eax",
    "jmp     0xc3e07",
    "test    r13b, 0x40",
    "je      0xc3e07",
    "and     r13d, 0xfffffff7",
    "xor     eax, eax",
    "jmp     0xc3953",
    "xor     esi, esi",
    "jmp     0xc3dc7",
    "mov     eax, 0x1",
    "nop     dword [rax]",
    "cmp     dl, 0x1",
    "mov     edx, r14d",
    "mov     dword [rbp-0x5c], 0x0",
    "sbb     r9d, r9d",
    "and     edx, 0x1",
    "mov     dword [rbp-0x80], 0x0",
    "add     r9d, 0x3",
    "cmp     dl, 0x1",
    "mov     dword [rbp-0x84], r10d",
    "sbb     esi, esi",
    "or      r14d, r15d",
    "mov     dword [rbp-0x88], r9d",
    "and     esi, 0xffffffe0",
    "mov     dword [rbp-0x60], r14d",
    "add     esi, 0x61",
    "mov     byte [rbp-0x89], sil",
    "jmp     0xc3a6b",
    "mov     rax, qword [r12+0x8]",
    "mov     r10d, dword [rbp-0x54]",
    "mov     rbx, qword [rax]",
    "test    r10d, r10d",
    "jne     0xc3bf0",
    "call    builtin_usage",
    "jmp     0xc394e",
    "mov     rsi, r12",
    "mov     rdi, rbx",
    "mov     r14d, 0x1",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "jne     0xc392b",
    "cmp     eax, 0xffffff9d",
    "jne     0xc3986",
    "test    r12, r12",
    "je      0xc3f15",
    "mov     eax, r13d",
    "add     r15d, 0x1",
    "and     eax, 0xffffffbf",
    "cmp     r13d, 0x40",
    "cmovne  r13d, eax",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xc3f41",
    "lea     rcx, [rel sub_5acd0]",
    "mov     edx, 0x8",
    "mov     rdi, r12",
    "call    qsort",
    "cmp     r13d, 0x8",
    "je      0xc3e10",
    "mov     rsi, rax",
    "add     rax, 0x1",
    "cmp     qword [r12+rax*8-0x8], 0x0",
    "jne     0xc3db8",
    "lea     rax, [rel shell_functions]",
    "xor     edx, edx",
    "mov     rdi, rbx",
    "mov     r14, qword [rax]",
    "mov     rsi, r14",
    "call    hash_search",
    "test    rax, rax",
    "je      0xc3d70",
    "xor     esi, esi",
    "mov     rdi, rbx",
    "call    assignment",
    "test    eax, eax",
    "je      0xc3a40",
    "mov     eax, 0x102",
    "nop     word [rax+rax]",
    "call    builtin_help",
    "mov     rdi, qword [r12]",
    "lea     rbx, [r12+0x8]",
    "test    rdi, rdi",
    "je      0xc3ed2",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x68",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     edx, 0x5",
    "lea     rsi, [rel 0x12185c]  {\"%s: not a function\"}",
    "jmp     0xc3d1c",
    "mov     qword [rel data_1619d8], r14",
    "mov     r14, qword [rax+0x10]",
    "test    r14, r14",
    "je      0xc3d70",
    "mov     rdi, rbx",
    "call    legal_identifier",
    "test    eax, eax",
    "je      0xc3d10",
    "cdqe    ",
    "lea     r14, [rbx+rax]",
    "lea     r15, [rbx+rax-0x1]",
    "mov     byte [r14], 0x0",
    "cmp     byte [r15], 0x2b",
    "je      0xc3c90",
    "xor     eax, eax",
    "mov     rax, rbx",
    "mov     ebx, r15d",
    "mov     r15d, r14d",
    "mov     r14, rax",
    "jmp     0xc3e8e",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "add     dword [rbp-0x80], 0x1",
    "jmp     0xc3a5e",
    "test    r13b, 0x1",
    "je      0xc3c50",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "mov     edx, dword [rbp-0x58]",
    "mov     esi, r13d",
    "mov     rdi, rbx",
    "call    set_var_attribute",
    "mov     byte [r15], 0x0",
    "mov     rdi, rbx",
    "call    legal_identifier",
    "test    eax, eax",
    "je      0xc3d40",
    "mov     rdi, rbx",
    "call    legal_identifier",
    "test    eax, eax",
    "je      0xc3d40",
    "mov     eax, dword [rdi+0x28]",
    "test    r15d, r15d",
    "je      0xc3e30",
    "mov     r12, qword [r12]",
    "test    r12, r12",
    "je      0xc3cc0",
    "mov     r8d, dword [rbp-0x58]",
    "test    r8d, r8d",
    "jne     0xc3c37",
    "mov     r9d, dword [rbp-0x58]",
    "test    r9d, r9d",
    "je      0xc3eaf",
    "mov     ecx, dword [rbp-0x5c]",
    "mov     eax, 0x104",
    "test    ecx, ecx",
    "jne     0xc3953",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "add     dword [rbp-0x5c], 0x1",
    "jmp     0xc3a5e",
    "movzx   eax, word [rel data_136ab0]  {\"+=-g \"}",
    "mov     ecx, 0x1",
    "mov     word [r15], ax",
    "jmp     0xc3abd",
    "mov     byte [r14], 0x3d",
    "xor     ecx, ecx",
    "test    ebx, ebx",
    "je      0xc3e38",
    "test    al, 0x4",
    "jne     0xc3e30",
    "mov     eax, r13d",
    "not     eax",
    "and     eax, dword [r14+0x28]",
    "mov     eax, dword [r14+0x28]",
    "or      eax, r13d",
    "jmp     0xc3c40",
    "mov     esi, 0x2f",
    "mov     rdi, rbx",
    "call    strchr",
    "test    rax, rax",
    "je      0xc3f1c",
    "mov     edx, dword [rbp-0x80]",
    "xor     eax, eax",
    "test    edx, edx",
    "setne   al",
    "jmp     0xc3953",
    "mov     edi, dword [rbp-0x60]",
    "test    edi, edi",
    "je      0xc3ce0",
    "xor     esi, esi",
    "lea     rdi, [rbp-0x50]",
    "mov     dword [rbp-0x68], ecx",
    "mov     dword [rbp-0x48], 0x4",
    "mov     qword [rbp-0x50], rbx",
    "call    sub_754b0",
    "mov     ecx, dword [rbp-0x68]",
    "cmp     eax, 0x1",
    "adc     dword [rbp-0x5c], 0x0",
    "jmp     0xc3b80",
    "movzx   eax, word [rel data_136ab0[2]]  {\"-g \"}",
    "mov     esi, dword [rbp-0x84]",
    "mov     r8, qword [r12]",
    "mov     qword [r12], 0x0",
    "mov     word [rbp-0x40], ax",
    "test    esi, esi",
    "je      0xc3aed",
    "mov     edx, eax",
    "not     edx",
    "and     dh, 0x90",
    "je      0xc3e82",
    "test    al, 0x40",
    "je      0xc3e82",
    "mov     rdi, qword [r14]",
    "add     r14, 0x8",
    "test    rdi, rdi",
    "je      0xc3ed2",
    "mov     dword [r14+0x28], eax",
    "jmp     0xc3a5e",
    "mov     esi, 0x3d",
    "mov     rdi, rbx",
    "call    mbschr",
    "test    rax, rax",
    "jne     0xc3ec1",
    "mov     edx, 0x5",
    "lea     rsi, [rel 0x12186f]  {\"%s: cannot export\"}",
    "jmp     0xc3d1c",
    "mov     byte [r14], 0x0",
    "test    ecx, ecx",
    "jne     0xc3c68",
    "movsxd  rdx, dword [rbp-0x88]",
    "mov     eax, edx",
    "test    r13b, 0x1",
    "je      0xc3b04",
    "mov     byte [rbp-0x3e], 0x72",
    "mov     rdi, qword [r14]",
    "add     r14, 0x8",
    "test    rdi, rdi",
    "je      0xc3ed2",
    "test    r13d, eax",
    "je      0xc3e82",
    "mov     eax, dword [rdi+0x28]",
    "test    al, 0x4",
    "jne     0xc3e30",
    "jmp     0xc3c59",
    "mov     byte [r15], 0x0",
    "mov     edx, dword [rbp-0x58]",
    "mov     esi, r13d",
    "mov     rdi, rbx",
    "call    set_var_attribute",
    "movzx   eax, word [rel data_136ab0]  {\"+=-g \"}",
    "mov     word [r15], ax",
    "jmp     0xc3a5e",
    "mov     edx, dword [rbp-0x58]",
    "mov     esi, r13d",
    "mov     rdi, rbx",
    "call    set_var_attribute",
    "mov     byte [r14], 0x3d",
    "jmp     0xc3a5e",
    "movsxd  rdx, eax",
    "lea     rsi, [rbp-0x40]",
    "mov     dword [rbp-0x7c], ecx",
    "add     eax, 0x1",
    "movzx   ecx, byte [rbp-0x89]",
    "mov     rdi, rsi",
    "cdqe    ",
    "mov     qword [rbp-0x78], r8",
    "mov     qword [rbp-0x68], rsi",
    "mov     byte [rbp+rdx-0x40], cl",
    "mov     byte [rbp+rax-0x40], 0x0",
    "call    make_bare_word",
    "mov     rsi, qword [rbp-0x68]",
    "mov     rdi, rax",
    "call    make_word_flags",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "mov     qword [rbp-0x70], rax",
    "call    make_word_list",
    "xor     esi, esi",
    "mov     rdi, rax",
    "mov     qword [rbp-0x68], rax",
    "call    sub_b2ee0",
    "mov     r8, qword [rbp-0x78]",
    "mov     rdi, qword [rbp-0x70]",
    "cmp     eax, 0x1",
    "sbb     dword [rbp-0x5c], 0xffffffff",
    "mov     qword [r12], r8",
    "call    dispose_word",
    "mov     rdi, qword [rbp-0x68]",
    "call    free",
    "mov     ecx, dword [rbp-0x7c]",
    "mov     byte [rbp+rdx-0x40], 0x78",
    "lea     eax, [rdx+0x1]",
    "lea     rax, [rel this_shell_builtin]",
    "mov     edx, dword [rbp-0x5c]",
    "mov     rax, qword [rax]",
    "cmp     rax, qword [rel data_157e48]",
    "sete    sil",
    "cmp     rax, qword [rel data_157e78]",
    "sete    al",
    "or      esi, eax",
    "movzx   esi, sil",
    "call    show_var_attributes",
    "xor     edi, edi",
    "call    sh_chkwrite",
    "test    eax, eax",
    "jne     0xc3f33",
    "jmp     0xc3e9a",
    "mov     eax, 0x1",
    "jmp     0xc3ed4",
    "mov     rdi, r12",
    "mov     dword [rbp-0x54], eax",
    "call    free",
    "mov     eax, dword [rbp-0x54]",
    "jmp     0xc3953"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
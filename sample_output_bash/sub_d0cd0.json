{
  "address": "0xd0cd0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "push    rbp {__saved_rbp}",
    "xor     eax, eax  {0x0}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "push    r14 {__saved_r14}",
    "lea     r14, [rel data_121bc8]",
    "push    r13 {__saved_r13}",
    "mov     r13, rdi",
    "mov     edi, 0x2",
    "push    r12 {__saved_r12}",
    "mov     r12, rsi",
    "lea     rsi, [rel data_121bbe]  {\"complete \"}",
    "push    rbx {__saved_rbx}",
    "lea     rbx, [rel data_1551c0]",
    "sub     rsp, 0x8",
    "call    __printf_chk",
    "mov     r15, qword [r12+0x10]",
    "lea     rdx, [rel data_121bb2]  {\"bashdefault\"}",
    "jmp     0xd0d2d",
    "mov     rax, r15",
    "and     rax, qword [rbx+0x8]",
    "je      0xd0d20",
    "mov     rdx, qword [rbx+0x10]",
    "add     rbx, 0x10",
    "test    rdx, rdx",
    "je      0xd0d51",
    "mov     rsi, r14  {data_121bc8, \"-o %s \"}",
    "mov     edi, 0x2",
    "xor     eax, eax  {0x0}",
    "add     rbx, 0x10",
    "call    __printf_chk",
    "mov     rdx, qword [rbx]",
    "test    rdx, rdx",
    "jne     0xd0d2d",
    "mov     r15, qword [r12+0x8]",
    "lea     rbx, [rel data_155260]",
    "lea     r14, [rel data_121bcf]",
    "jmp     0xd0d7a",
    "mov     edx, dword [rbx+0x10]",
    "test    edx, edx",
    "je      0xd0d70",
    "add     rbx, 0x18",
    "cmp     qword [rbx], 0x0",
    "je      0xd0da8",
    "mov     rax, r15",
    "and     rax, qword [rbx+0x8]",
    "je      0xd0d70",
    "lea     rdx, [rel data_11fa38]  {\"alias\"}",
    "lea     rbx, [rel data_155260]",
    "lea     r14, [rel data_121bd4]",
    "jmp     0xd0dcd",
    "xor     eax, eax  {0x0}",
    "mov     rsi, r14  {data_121bcf, \"-%c \"}",
    "mov     edi, 0x2",
    "add     rbx, 0x18",
    "call    __printf_chk",
    "cmp     qword [rbx], 0x0",
    "jne     0xd0d7a",
    "mov     eax, dword [rbx+0x10]",
    "test    eax, eax",
    "jne     0xd0dc0",
    "nop     dword [rax+rax]",
    "mov     rdx, qword [rbx+0x18]",
    "add     rbx, 0x18",
    "test    rdx, rdx",
    "je      0xd0e00",
    "mov     rax, r15",
    "and     rax, qword [rbx+0x8]",
    "je      0xd0dc0",
    "mov     r14, qword [r12+0x18]",
    "test    r14, r14",
    "je      0xd0e3f",
    "mov     rsi, r14  {data_121bd4, \"-A %s \"}",
    "mov     edi, 0x2",
    "xor     eax, eax  {0x0}",
    "add     rbx, 0x18",
    "call    __printf_chk",
    "mov     rdx, qword [rbx]",
    "test    rdx, rdx",
    "jne     0xd0dcd",
    "mov     r14, qword [r12+0x20]",
    "test    r14, r14",
    "je      0xd0e7e",
    "mov     rdi, r14",
    "call    sh_single_quote",
    "lea     rdx, [rel data_121bdb]",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_121bde]  {\"%s %s \"}",
    "mov     rbx, rax",
    "mov     rcx, rax",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "cmp     r14, rbx",
    "je      0xd0e3f",
    "nop     dword [rax+rax]",
    "mov     r14, qword [r12+0x28]",
    "test    r14, r14",
    "je      0xd0ebd",
    "mov     rdi, r14",
    "call    sh_single_quote",
    "lea     rdx, [rel data_121be5]",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_121bde]  {\"%s %s \"}",
    "mov     rbx, rax",
    "mov     rcx, rax",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "cmp     r14, rbx",
    "je      0xd0e7e",
    "mov     rdi, rbx",
    "call    free",
    "mov     r14, qword [r12+0x30]",
    "test    r14, r14",
    "je      0xd0efc",
    "mov     rdi, r14",
    "call    sh_single_quote",
    "lea     rdx, [rel data_121be8]",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_121bde]  {\"%s %s \"}",
    "mov     rbx, rax",
    "mov     rcx, rax",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "cmp     r14, rbx",
    "je      0xd0ebd",
    "mov     rdi, rbx",
    "call    free",
    "mov     r14, qword [r12+0x50]",
    "test    r14, r14",
    "je      0xd0f3b",
    "mov     rdi, r14",
    "call    sh_single_quote",
    "lea     rdx, [rel data_121760]",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_121bde]  {\"%s %s \"}",
    "mov     rbx, rax",
    "mov     rcx, rax",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "cmp     r14, rbx",
    "je      0xd0efc",
    "mov     rdi, rbx",
    "call    free",
    "mov     r14, qword [r12+0x40]",
    "test    r14, r14",
    "je      0xd0f7a",
    "mov     rdi, r14",
    "call    sh_single_quote",
    "lea     rdx, [rel data_121beb]",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_121bde]  {\"%s %s \"}",
    "mov     rbx, rax",
    "mov     rcx, rax",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "cmp     r14, rbx",
    "je      0xd0f3b",
    "mov     rdi, rbx",
    "call    free",
    "mov     rbx, qword [r12+0x38]",
    "mov     rdi, rbx",
    "call    sh_contains_shell_metas",
    "test    rbx, rbx",
    "je      0xd0fab",
    "mov     rdi, r14",
    "call    sh_single_quote",
    "lea     rdx, [rel data_121bee]",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_121bde]  {\"%s %s \"}",
    "mov     rbx, rax",
    "mov     rcx, rax",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "cmp     r14, rbx",
    "je      0xd0f7a",
    "mov     rdi, rbx",
    "call    free",
    "mov     rdi, r13",
    "call    sub_d0ba0",
    "mov     edi, 0xa",
    "call    putchar",
    "add     rsp, 0x8",
    "xor     eax, eax  {0x0}",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "test    eax, eax",
    "jne     0xd0fd0",
    "mov     rdi, rbx",
    "call    free",
    "mov     rdi, rbx",
    "call    sh_single_quote",
    "lea     rdx, [rel data_121bf1]",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_121bde]  {\"%s %s \"}",
    "mov     r12, rax",
    "mov     rcx, rax",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "cmp     rbx, r12",
    "je      0xd0fab",
    "mov     rcx, rbx",
    "lea     rdx, [rel data_121bf1]",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_121bde]  {\"%s %s \"}",
    "call    __printf_chk",
    "mov     rdi, r12",
    "call    free",
    "jmp     0xd0fab"
  ]
}
{
  "address": "0xe6090",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x58",
    "lea     r13, [rel rl_point]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rel rl_end]",
    "mov     eax, dword [rax]",
    "cmp     dword [r13], eax",
    "jl      0xe60f0",
    "mov     ebx, edi",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xe610e",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xe6506",
    "test    ebx, ebx",
    "je      0xe60ca",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0xe6240",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x58",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "xor     r14d, r14d",
    "jmp     0xe6191",
    "lea     r15, [rel rl_line_buffer]",
    "lea     rax, [rbp-0x58]",
    "mov     esi, dword [r13]",
    "mov     qword [rbp-0x58], 0x0",
    "mov     rdx, rax",
    "mov     qword [rbp-0x68], rax",
    "mov     rdi, qword [r15]",
    "call    _rl_adjust_point",
    "test    eax, eax",
    "setg    al",
    "movzx   eax, al",
    "sub     ebx, eax",
    "je      0xe60ca",
    "lea     rax, [rel rl_end]",
    "mov     r12d, dword [r13]",
    "cmp     r12d, dword [rax]",
    "jge     0xe60ca",
    "lea     rax, [rbp-0x5c]",
    "mov     qword [rbp-0x70], rax",
    "jmp     0xe63a9",
    "call    __ctype_b_loc",
    "lea     r15, [rel rl_line_buffer]",
    "mov     rcx, rax",
    "movsxd  rax, r12d",
    "mov     rdx, qword [r15]",
    "movzx   edx, byte [rdx+rax]",
    "mov     rax, qword [rcx]",
    "movzx   eax, word [rax+rdx*2]",
    "mov     qword [rbp-0x68], rdx",
    "test    ah, 0x1",
    "jne     0xe6120",
    "lea     rax, [rel rl_end]",
    "movsxd  rsi, dword [r13]",
    "mov     edx, dword [rax]",
    "cmp     edx, esi",
    "jle     0xe60ca",
    "call    __ctype_tolower_loc",
    "mov     rdx, qword [rbp-0x68]",
    "mov     rax, qword [rax]",
    "mov     r14d, dword [rax+rdx*4]",
    "test    r14d, r14d",
    "je      0xe61f0",
    "test    ah, 0x2",
    "je      0xe6200",
    "sub     edx, esi",
    "mov     rcx, qword [rbp-0x68]",
    "mov     rdi, qword [rbp-0x70]",
    "add     rsi, qword [r15]",
    "movsxd  rdx, edx",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0xe6288",
    "xor     esi, esi",
    "mov     edi, 0x1",
    "call    rl_forward_char",
    "jmp     0xe6188",
    "call    rl_begin_undo_group",
    "mov     esi, r14d",
    "mov     edi, 0x1",
    "call    rl_vi_delete",
    "mov     eax, dword [r13]",
    "cmp     eax, r12d",
    "jge     0xe615b",
    "mov     esi, r14d",
    "mov     edi, 0x1",
    "call    rl_forward_char",
    "jmp     0xe6188",
    "call    __ctype_toupper_loc",
    "mov     rdx, qword [rbp-0x68]",
    "mov     rax, qword [rax]",
    "mov     r14d, dword [rax+rdx*4]",
    "test    r14d, r14d",
    "jne     0xe6139",
    "movsxd  rax, dword [r13]",
    "mov     rdx, qword [r15]",
    "movsx   r12d, byte [rdx+rax]",
    "mov     dword [rbp-0x5c], r12d",
    "test    rax, rax",
    "je      0xe6430",
    "sub     ebx, 0x1",
    "je      0xe60ca",
    "mov     esi, r14d",
    "mov     edi, 0x1",
    "call    _rl_insert_char",
    "call    rl_end_undo_group",
    "mov     eax, dword [r13]",
    "test    eax, eax",
    "je      0xe6188",
    "add     eax, 0x1",
    "mov     dword [r13], eax",
    "call    iswlower",
    "test    eax, eax",
    "je      0xe6415",
    "call    towlower",
    "mov     dword [rbp-0x5c], eax",
    "test    eax, eax",
    "je      0xe6415",
    "mov     dword [rbp-0x5c], 0x0",
    "xor     r12d, r12d",
    "jmp     0xe6298",
    "mov     r12d, dword [rbp-0x5c]",
    "mov     edi, r12d",
    "call    iswupper",
    "mov     edi, r12d",
    "test    eax, eax",
    "jne     0xe62ab",
    "lea     rcx, [rel rl_end]",
    "cmp     eax, dword [rcx]",
    "je      0xe6218",
    "xor     esi, esi",
    "mov     edi, 0x1",
    "call    rl_forward_char",
    "jmp     0xe63a0",
    "mov     edi, r12d",
    "call    towupper",
    "mov     dword [rbp-0x5c], eax",
    "test    eax, eax",
    "jne     0xe62bb",
    "mov     esi, dword [r13]",
    "lea     rcx, [rbp-0x50]",
    "mov     rdx, qword [rbp-0x68]",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x80], rcx",
    "mov     dword [rbp-0x74], esi",
    "mov     esi, eax",
    "call    wcrtomb",
    "test    eax, eax",
    "js      0xe62e3",
    "mov     edi, r12d",
    "call    iswupper",
    "mov     edi, r12d",
    "test    eax, eax",
    "je      0xe63f9",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xe6234",
    "nop     dword [rax]",
    "sub     ebx, 0x1",
    "je      0xe60ca",
    "mov     edi, 0x20",
    "call    malloc",
    "test    rax, rax",
    "je      0xe650b",
    "cdqe    ",
    "mov     byte [rbp+rax-0x50], 0x0",
    "sub     dword [r13], 0x1",
    "jmp     0xe6188",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xe6471",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     edx, 0x20",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "lea     r14, [rel rl_undo_list]",
    "mov     dword [rax+0x18], 0x2",
    "xor     esi, esi",
    "mov     edi, 0x1",
    "mov     qword [rax+0x8], 0x0",
    "lea     r12, [rel _rl_undo_group_level]",
    "mov     rcx, qword [r14]",
    "mov     qword [rax+0x10], 0x0",
    "add     dword [r12], 0x1",
    "mov     qword [rax], rcx",
    "mov     qword [r14], rax",
    "call    rl_vi_delete",
    "mov     eax, dword [r13]",
    "cmp     dword [rbp-0x74], eax",
    "jg      0xe6440",
    "mov     esi, dword [r13]",
    "mov     rdi, qword [r15]",
    "mov     edx, 0x1",
    "call    _rl_find_prev_mbchar_internal",
    "mov     dword [r13], eax",
    "jmp     0xe6188",
    "lea     rcx, [rel rl_end]",
    "cmp     eax, dword [rcx]",
    "jge     0xe6342",
    "mov     rdi, qword [rbp-0x80]",
    "call    rl_insert_text",
    "mov     edi, 0x20",
    "call    malloc",
    "test    rax, rax",
    "je      0xe650b",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xe6467",
    "mov     rcx, qword [r14]",
    "mov     dword [rax+0x18], 0x3",
    "mov     qword [rax+0x8], 0x0",
    "mov     qword [rax+0x10], 0x0",
    "mov     qword [rax], rcx",
    "mov     qword [r14], rax",
    "mov     eax, dword [r13]",
    "sub     dword [r12], 0x1",
    "test    eax, eax",
    "je      0xe63a0",
    "add     dword [r13], 0x1",
    "jmp     0xe6342",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0xe64ad",
    "lea     rcx, [rel rl_end]",
    "cmp     eax, dword [rcx]",
    "je      0xe648b",
    "mov     eax, dword [r13]",
    "mov     edi, 0x1",
    "mov     dword [rbp-0x74], eax",
    "call    _rl_forward_char_internal",
    "mov     dword [r13], eax",
    "cmp     dword [rbp-0x74], eax",
    "je      0xe64fb",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xe64a3",
    "nop     word [rax+rax]",
    "lea     rax, [rel rl_end]",
    "mov     ecx, dword [rax]",
    "jmp     0xe64d8",
    "lea     rdi, [rel rl_end]",
    "mov     ecx, dword [rdi]",
    "cmp     eax, ecx",
    "jle     0xe6342",
    "sub     dword [r13], 0x1",
    "jmp     0xe63a0",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0xe64e1",
    "mov     dword [r13], ecx",
    "jmp     0xe6342",
    "mov     esi, dword [r13]",
    "mov     rdi, qword [r15]",
    "mov     edx, 0x1",
    "call    _rl_find_prev_mbchar_internal",
    "mov     dword [r13], eax",
    "jmp     0xe63a0"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
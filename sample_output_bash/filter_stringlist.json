{
  "address": "0xa8350",
  "rules": [
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "hash data using djb2/9bc6b91561f04ebca409510ba6653174",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "hash data using jshash/495bfd597bd14a45826758e92f604bf6",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "contain loop",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x18",
    "test    rdi, rdi",
    "je      0xa837c",
    "add     rsp, 0x18",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     qword [rdi], 0x0",
    "je      0xa837c",
    "mov     r8d, dword [rdi+0xc]",
    "test    r8d, r8d",
    "jne     0xa8390",
    "mov     r12, rsi",
    "test    rsi, rsi",
    "je      0xa8513",
    "jmp     0x32308",
    "mov     rax, rsi",
    "jmp     0xa83b5",
    "movzx   eax, byte [0x0]",
    "ud2     ",
    "{ Does not return }",
    "movzx   ecx, byte [rax]",
    "test    cl, cl",
    "je      0xa83d0",
    "mov     qword [rbp-0x40], r12",
    "cmp     cl, 0x5c",
    "jne     0xa83a8",
    "lea     rax, [rel extended_glob]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0xa84db",
    "mov     edi, dword [rbx+0x8]",
    "and     r13d, 0x1",
    "xor     r14d, r14d",
    "call    strlist_create",
    "mov     esi, dword [rbx+0xc]",
    "mov     r15, rax",
    "test    esi, esi",
    "jg      0xa8422",
    "cmp     cl, 0x26",
    "je      0xa84f8",
    "add     rax, 0x1",
    "jmp     0xa83b1",
    "mov     rax, qword [rbp-0x40]",
    "mov     r13d, 0x1",
    "add     rax, 0x1",
    "mov     qword [rbp-0x38], rax",
    "jmp     0xa83e8",
    "mov     rax, qword [rbp-0x40]",
    "cmp     byte [rax+0x1], 0x28",
    "je      0xa83e8",
    "mov     rax, qword [rbx]",
    "xor     edx, edx",
    "mov     rax, qword [rax+r14*8]",
    "test    rax, rax",
    "je      0xa8473",
    "jmp     0xa8494",
    "mov     ecx, 0x1",
    "mov     esi, 0x26",
    "mov     rdi, r12",
    "call    strcreplace",
    "mov     qword [rbp-0x40], rax",
    "jmp     0xa83d4",
    "add     rax, 0x1",
    "cmp     r13b, dl",
    "jne     0xa8410",
    "lea     rdx, [rel match_ignore_case]",
    "lea     rsi, [rel extended_glob]",
    "mov     rdi, qword [rbp-0x38]",
    "mov     edx, dword [rdx]",
    "mov     ecx, dword [rsi]",
    "test    edx, edx",
    "setne   dl",
    "xor     esi, esi",
    "movzx   edx, dl",
    "shl     edx, 0x4",
    "test    ecx, ecx",
    "setne   sil",
    "shl     esi, 0x5",
    "or      edx, esi",
    "mov     rsi, rax",
    "call    xstrmatch",
    "cmp     eax, 0x1",
    "mov     rax, qword [rbx]",
    "setne   dl",
    "mov     rax, qword [rax+r14*8]",
    "mov     rax, qword [r15]",
    "movsxd  rdx, dword [r15+0xc]",
    "mov     qword [rax+rdx*8], 0x0",
    "mov     rax, qword [rbp-0x40]",
    "cmp     r12, rax",
    "je      0xa84b5",
    "mov     rax, qword [rbp-0x40]",
    "xor     r13d, r13d",
    "cmp     byte [rax], 0x21",
    "mov     qword [rbp-0x38], rax",
    "je      0xa84c0",
    "mov     rdi, rax",
    "add     r14, 0x1",
    "call    free",
    "cmp     dword [rbx+0xc], r14d",
    "jle     0xa8494",
    "movsxd  rdx, dword [r15+0xc]",
    "mov     rsi, qword [r15]",
    "add     r14, 0x1",
    "lea     edi, [rdx+0x1]",
    "mov     dword [r15+0xc], edi",
    "mov     qword [rsi+rdx*8], rax",
    "cmp     dword [rbx+0xc], r14d",
    "jg      0xa8422",
    "mov     rbx, r15",
    "jmp     0xa837c",
    "mov     rdi, qword [rbp-0x40]",
    "call    free"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
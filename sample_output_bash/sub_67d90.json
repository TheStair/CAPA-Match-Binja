{
  "address": "0x67d90",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "encrypt data using Curve25519/71854cb5ec3d414da844548a1a695b22",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "write file on Linux",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "test    rdi, rdi",
    "je      0x68510",
    "retn     {__return_addr}",
    "push    rbp {__saved_rbp}",
    "mov     rax, rdi",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {var_10}",
    "push    r14 {var_18}",
    "push    r13 {__saved_r13}",
    "mov     r13, rdi",
    "push    r12 {__saved_r12}",
    "mov     r12, rcx",
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0x38",
    "nop     dword [rax+rax]",
    "mov     rcx, rax",
    "mov     rax, qword [rax]",
    "cmp     rax, r13",
    "jne     0x67db8",
    "movsxd  rax, esi",
    "mov     rbx, r13",
    "mov     qword [rbp-0x40 {var_48}], rcx",
    "shl     rax, 0x3",
    "mov     dword [rbp-0x58 {var_60}], esi",
    "mov     qword [rbp-0x50 {var_58}], rax",
    "mov     eax, edx",
    "or      eax, esi",
    "mov     dword [rbp-0x34 {var_3c}], edx",
    "mov     dword [rbp-0x54 {var_5c}], eax",
    "mov     eax, esi",
    "not     eax",
    "shr     eax, 0x1f",
    "mov     dword [rbp-0x38 {var_40}], eax",
    "cmp     rbx, r13",
    "je      0x67fb9",
    "mov     eax, dword [rbp-0x34 {var_3c}]",
    "test    eax, eax",
    "jne     0x67e1c",
    "nop     dword [rax]",
    "movsxd  rcx, dword [rbx+0x8]",
    "lea     rdx, [rel data_1204b7]  {\"%5ld\"}",
    "mov     rdi, r12",
    "xor     eax, eax  {0x0}",
    "mov     esi, 0x2",
    "call    __fprintf_chk",
    "mov     rsi, r12",
    "mov     edi, 0x20",
    "call    fputc",
    "mov     r15d, dword [rbp-0x54 {var_5c}]",
    "test    r15d, r15d",
    "js      0x680de",
    "mov     rsi, r12",
    "mov     edi, 0x20",
    "call    fputc",
    "mov     eax, dword [rbp-0x58 {var_60}]",
    "test    eax, eax",
    "jns     0x681c0",
    "mov     edx, 0x2",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_1204b4]",
    "call    fwrite",
    "mov     rsi, r12",
    "mov     edi, 0x20",
    "call    fputc",
    "mov     eax, dword [rbp-0x54 {var_5c}]",
    "test    eax, eax",
    "jns     0x681c0",
    "mov     edx, 0x5",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_1204ae]  {\"     \"}",
    "call    fwrite",
    "mov     edi, dword [rbp-0x34 {var_3c}]",
    "test    edi, edi",
    "setne   r14b",
    "cmp     rbx, r13",
    "je      0x67f77",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1204f8]  {\"Done\"}",
    "xor     edi, edi  {0x0}",
    "mov     r15, rbx",
    "call    dcgettext",
    "mov     rcx, qword [rbp-0x50 {var_58}]",
    "mov     qword [rel data_168560], rax",
    "lea     rax, [rel jobs]",
    "mov     rax, qword [rax]  {jobs}",
    "mov     rax, qword [rax+rcx]",
    "mov     eax, dword [rax+0x14]",
    "cmp     eax, 0x2",
    "je      0x67e90",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1204f8]  {\"Done\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rcx, qword [rbp-0x50 {var_58}]",
    "mov     qword [rel data_168560], rax",
    "lea     rax, [rel jobs]",
    "mov     rax, qword [rax]  {jobs}",
    "mov     rax, qword [rax+rcx]",
    "mov     eax, dword [rax+0x14]",
    "cmp     eax, 0x2",
    "je      0x682c0",
    "mov     rdi, qword [rbx+0x18]",
    "xor     r14d, r14d  {0x0}",
    "test    rdi, rdi",
    "jne     0x67f80",
    "xor     r14d, r14d  {0x0}",
    "jmp     0x67f77",
    "mov     rdi, qword [rbx+0x18]",
    "test    rdi, rdi",
    "je      0x67f88",
    "test    r14b, r14b",
    "jne     0x67f58",
    "mov     eax, dword [r15+0xc]",
    "cmp     al, 0x7f",
    "je      0x68040",
    "cmp     eax, 0x1",
    "je      0x68205",
    "lea     rax, [rel posixly_correct]",
    "mov     r14d, dword [rax]  {posixly_correct}",
    "test    r14d, r14d",
    "jne     0x68360",
    "mov     r15, qword [rbp-0x40 {var_48}]",
    "cmp     eax, 0x1",
    "jne     0x67e90",
    "mov     rsi, r12",
    "call    fputs",
    "mov     rax, qword [rbp-0x40 {var_48}]",
    "cmp     rbx, rax",
    "sete    r15b",
    "test    r15b, r15b",
    "je      0x67fa8",
    "mov     rax, qword [rbp-0x40 {var_48}]",
    "cmp     rbx, rax",
    "movzx   eax, byte [rbp-0x38 {var_40}]",
    "sete    r15b",
    "and     al, r15b",
    "mov     byte [rbp-0x48 {var_50}], al",
    "jne     0x68140",
    "mov     rcx, r12",
    "mov     edx, 0x2",
    "mov     esi, 0x1",
    "mov     r14d, 0x1",
    "lea     rdi, [rel data_11fc99]",
    "call    fwrite",
    "jmp     0x67f77",
    "movzx   eax, ah",
    "mov     r14d, eax",
    "mov     r14d, eax",
    "and     r14d, 0x7f",
    "lea     edx, [r14+0x1]",
    "cmp     dl, 0x1",
    "jg      0x68046",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1204e6]  {\"Running\"}",
    "call    dcgettext",
    "mov     qword [rel data_168560], rax",
    "mov     rdi, rax",
    "cmp     rbx, r13",
    "jne     0x67f2e",
    "mov     rax, qword [rbp-0x40 {var_48}]",
    "mov     eax, dword [rax+0xc]",
    "cmp     al, 0x7f",
    "jne     0x682d3",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1204bc]  {\"Stopped\"}",
    "call    dcgettext",
    "mov     qword [rel data_168560], rax",
    "mov     rdi, rax",
    "cmp     rbx, r13",
    "jne     0x6812e",
    "call    sub_5f5c0",
    "lea     r15, [rel jobs]",
    "mov     rdx, qword [rbp-0x50 {var_58}]",
    "mov     r14, rax",
    "mov     rax, qword [r15]  {jobs}",
    "mov     rax, qword [rax+rdx]",
    "cmp     dword [rax+0x14], 0x1",
    "je      0x68248",
    "test    r15b, r15b",
    "jne     0x68000",
    "test    r14b, r14b",
    "jne     0x68000",
    "nop     dword [rax+rax]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1204ee]  {\"Signal %d\"}",
    "call    dcgettext",
    "mov     r9d, r14d",
    "mov     ecx, 0x40",
    "lea     r14, [rel data_168520]",
    "mov     r8, rax",
    "mov     rdi, r14  {data_168520}",
    "mov     edx, 0x2",
    "mov     esi, 0x40",
    "xor     eax, eax  {0x0}",
    "call    __snprintf_chk",
    "mov     rdi, r14  {data_168520}",
    "jmp     0x6805a",
    "mov     qword [rel data_168560], rdi",
    "mov     edi, r14d",
    "call    strsignal",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x684d0",
    "test    r14d, r14d",
    "jne     0x68470",
    "mov     r8d, dword [rbp-0x34 {var_3c}]",
    "test    r8d, r8d",
    "je      0x6812e",
    "test    rdi, rdi",
    "jne     0x68081",
    "lea     r14, [rel data_168520]",
    "movzx   eax, ah",
    "mov     qword [rel data_168560], r14  {data_168520}",
    "cmp     eax, 0x43",
    "jg      0x68511",
    "mov     r15, qword [rbp-0x40 {var_48}]",
    "test    rdi, rdi",
    "je      0x68234",
    "test    byte [rax+0x18], 0x1",
    "jne     0x68164",
    "mov     r15, qword [rax]",
    "mov     rdi, r14",
    "mov     rsi, r15",
    "call    strcmp",
    "test    eax, eax",
    "jne     0x68280",
    "lea     rax, [rel asynchronous_notification]",
    "mov     esi, dword [rax]  {asynchronous_notification}",
    "test    esi, esi",
    "je      0x6801e",
    "mov     rbx, qword [rbx]",
    "cmp     rbx, r13",
    "jne     0x67df8",
    "mov     rsi, r12",
    "mov     edi, 0xa",
    "call    fputc",
    "test    r15b, r15b",
    "je      0x67fad",
    "lea     rax, [rel interactive]",
    "mov     edx, dword [rax]  {interactive}",
    "test    edx, edx",
    "jne     0x68310",
    "mov     rsi, r12",
    "mov     qword [rbp-0x48 {var_50}], rdi",
    "call    fputs",
    "mov     rdi, qword [rbp-0x48 {var_50}]",
    "mov     ecx, 0x16",
    "cmp     byte [rdi], 0x0",
    "je      0x680aa",
    "mov     r9d, dword [rbp-0x34 {var_3c}]",
    "test    r9d, r9d",
    "je      0x6812e",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_12050e]  {\"Unknown status\"}",
    "call    dcgettext",
    "mov     qword [rel data_168560], rax",
    "mov     rdi, rax",
    "jmp     0x67f25",
    "lea     r14, [rel data_168520]",
    "movzx   ecx, ah",
    "mov     qword [rel data_168560], r14  {data_168520}",
    "test    ah, 0xff",
    "je      0x68498",
    "mov     eax, dword [r13+0x10]",
    "cmp     dword [r15+0x10], eax",
    "je      0x68450",
    "mov     r10d, dword [rbp-0x34 {var_3c}]",
    "test    r10d, r10d",
    "setne   r14b",
    "jmp     0x67f77",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1204c4]  {\"invalid signal number\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     r15, rax",
    "jmp     0x6839f",
    "lea     rdx, [rel signal_names]",
    "cdqe    ",
    "mov     r15, qword [rdx+rax*8]",
    "test    r15, r15",
    "je      0x68511",
    "jmp     0x68081",
    "mov     edx, 0x2",
    "mov     rcx, r12",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_120530]",
    "call    fwrite",
    "mov     rax, qword [r15]  {jobs}",
    "mov     rdx, qword [rbp-0x50 {var_58}]",
    "mov     rax, qword [rax+rdx]",
    "jmp     0x68164",
    "mov     rdi, r15",
    "call    polite_directory_format",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120533]  {\"  (wd: %s)\"}",
    "mov     r15, rax",
    "call    dcgettext",
    "mov     rcx, r15",
    "mov     esi, 0x2",
    "mov     rdi, r12",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    __fprintf_chk",
    "jmp     0x6817a",
    "lea     rax, [rel asynchronous_notification]",
    "mov     eax, dword [rax]  {asynchronous_notification}",
    "test    eax, eax",
    "je      0x68198",
    "mov     eax, dword [rbp-0x34 {var_3c}]",
    "mov     rcx, r12",
    "test    eax, eax",
    "je      0x68100",
    "jmp     0x681a5",
    "mov     byte [rbp-0x48 {var_50}], r15b",
    "lea     r8, [rel data_122e02]",
    "lea     rdx, [rel data_12051d]",
    "mov     rdi, r12",
    "xor     eax, eax  {0x0}",
    "mov     esi, 0x2",
    "call    __fprintf_chk",
    "mov     eax, dword [r15+0xc]",
    "cmp     al, 0x7f",
    "je      0x680de",
    "cmp     byte [rdi+0x1], 0x0",
    "mov     ecx, 0x17",
    "jne     0x68330",
    "mov     eax, dword [r13+0x10]",
    "cmp     dword [r15+0x10], eax",
    "je      0x68430",
    "cmp     rbx, r13",
    "je      0x6822b",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1204f8]  {\"Done\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdi, r14  {data_168520}",
    "mov     edx, 0x3f",
    "mov     rsi, rax",
    "call    strncpy",
    "mov     byte [rel data_16855f], 0x0",
    "mov     rdi, r14  {data_168520}",
    "jmp     0x68061",
    "lea     rax, [rel posixly_correct]",
    "mov     dword [rbp-0x48 {var_50}], ecx",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1204fd]  {\"Done(%d)\"}",
    "mov     r11d, dword [rax]  {posixly_correct}",
    "test    r11d, r11d",
    "je      0x683f0",
    "mov     eax, dword [r13+0xc]",
    "cmp     dword [r15+0xc], eax",
    "jne     0x67f49",
    "test    rdi, rdi",
    "jne     0x68081",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1204da]  {\"Stopped(%s)\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdi, r14  {data_168520}",
    "mov     r9, r15",
    "mov     edx, 0x2",
    "mov     r8, rax",
    "mov     rcx, 0xffffffffffffffff",
    "mov     esi, 0x40",
    "xor     eax, eax  {0x0}",
    "call    __snprintf_chk",
    "mov     rdi, qword [rel data_168560]",
    "cmp     rbx, r13",
    "jne     0x6812e",
    "mov     rsi, r12",
    "mov     edi, 0xa",
    "call    fputc",
    "lea     rax, [rel interactive]",
    "mov     ecx, dword [rax]  {interactive}",
    "test    ecx, ecx",
    "jne     0x68314",
    "add     rsp, 0x38",
    "mov     rdi, r12",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {var_18}",
    "pop     r15 {var_10}",
    "pop     rbp {__saved_rbp}",
    "jmp     fflush",
    "cmp     eax, 0xffff",
    "je      0x680de",
    "cmp     byte [rdi+0x2], 0x0",
    "mov     ecx, 0x16",
    "je      0x680aa",
    "mov     eax, dword [r13+0xc]",
    "mov     ecx, 0x16",
    "cmp     dword [r15+0xc], eax",
    "je      0x680aa",
    "cmp     rbx, r13",
    "je      0x68081",
    "lea     rsi, [rel data_120506]  {\"Exit %d\"}",
    "jmp     0x67ef5",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     r9d, dword [rbp-0x48 {var_50}]",
    "mov     rdi, r14  {data_168520}",
    "mov     rcx, 0xffffffffffffffff",
    "mov     r8, rax",
    "mov     edx, 0x2",
    "mov     esi, 0x40",
    "xor     eax, eax  {0x0}",
    "call    __snprintf_chk",
    "mov     rdi, qword [rel data_168560]",
    "mov     ecx, 0x16",
    "jmp     0x680aa",
    "nop     word [rax+rax]",
    "jmp     0x682f9",
    "mov     rsi, r12",
    "mov     edi, 0xd",
    "call    putc",
    "movzx   r15d, byte [rbp-0x48 {var_50}]",
    "jmp     0x6801e",
    "test    al, 0x80",
    "jne     0x68400",
    "mov     dword [rbp-0x48 {var_50}], ecx  {0x16}",
    "call    strlen",
    "mov     edx, 0x18",
    "mov     ecx, 0x16",
    "sub     edx, eax",
    "test    eax, eax",
    "cmovne  ecx, edx",
    "jmp     0x680aa",
    "jmp     0x68081",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120521]  {\"(core dumped) \"}",
    "call    dcgettext",
    "mov     esi, 0x2",
    "mov     rdi, r12",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    __fprintf_chk",
    "jmp     0x680de"
  ]
}
{
  "address": "0x778e0",
  "rules": [
    "hash data using djb2/9bc6b91561f04ebca409510ba6653174",
    "hash data using jshash/495bfd597bd14a45826758e92f604bf6",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "contain loop",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x58",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    rdi, rdi",
    "je      0x77b50",
    "xor     r12d, r12d",
    "jmp     0x77b23",
    "cmp     byte [rdi], 0x0",
    "mov     rbx, rdi",
    "je      0x77922",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x77db2",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x77db7",
    "mov     r12, rsi",
    "test    rsi, rsi",
    "je      0x77922",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x58",
    "mov     rax, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x77db2",
    "cmp     byte [rsi], 0x0",
    "jne     0x77978",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     r13d, edx",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x77b58",
    "mov     rsi, r12",
    "mov     edx, r13d",
    "mov     rdi, rbx",
    "call    sub_77510",
    "mov     r12, rax",
    "cmp     rbx, rax",
    "jne     0x77b23",
    "xor     eax, eax",
    "lea     rdi, [rbp-0x58]",
    "mov     rsi, r12",
    "call    sub_d4050",
    "cmp     rax, 0xffffffffffffffff",
    "je      0x77b09",
    "mov     rdi, rax",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x77df6",
    "mov     rsi, r12",
    "mov     edx, r13d",
    "mov     rdi, rbx",
    "call    sub_77510",
    "mov     r12, rax",
    "cmp     rbx, rax",
    "je      0x77d80",
    "lea     rdi, [rbp-0x50]",
    "mov     rsi, rbx",
    "xor     eax, eax",
    "call    sub_d4050",
    "mov     r14, rax",
    "cmp     rax, 0xffffffffffffffff",
    "je      0x77b00",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x77db2",
    "mov     rdi, rax",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x77dcd",
    "mov     rdi, qword [rbp-0x58]",
    "call    free",
    "mov     rax, qword [rbp-0x58]",
    "mov     r15, qword [rbp-0x50]",
    "mov     qword [rbp-0x68], rax",
    "cmp     r13d, 0x3",
    "je      0x77c70",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "jmp     0x7795b",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rdx, rbx",
    "mov     rdi, r13",
    "mov     r12, r13",
    "call    __strcpy_chk",
    "jmp     0x77b23",
    "cmp     qword [rbp-0x68], 0x0",
    "lea     r12, [rel extended_glob]",
    "mov     r13, r15",
    "sete    byte [rbp-0x78]",
    "xor     r9d, r9d",
    "jmp     0x77ca0",
    "cmp     r13d, 0x4",
    "je      0x77d00",
    "add     rsp, 0x58",
    "mov     rdi, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "mov     eax, dword [r12]",
    "test    r13, r13",
    "je      0x77c90",
    "test    r14d, r14d",
    "js      0x77c51",
    "cmp     r13d, 0x2",
    "je      0x77bb0",
    "lea     rax, [r9+0x1]",
    "add     r13, 0x4",
    "cmp     r9, r14",
    "je      0x77c48",
    "cmp     byte [rbp-0x78], 0x0",
    "jne     0x77c90",
    "mov     qword [rbp-0x48], r15",
    "nop     dword [rax]",
    "cmp     qword [rbp-0x68], 0x0",
    "movsxd  rax, r14d",
    "lea     r12, [rel extended_glob]",
    "sete    byte [rbp-0x70]",
    "shl     rax, 0x2",
    "lea     rdx, [r15+rax-0x4]",
    "lea     r13, [r15+rax]",
    "mov     eax, r14d",
    "shl     rax, 0x2",
    "sub     rdx, rax",
    "mov     r14, rdx",
    "jmp     0x77d4d",
    "test    r15, r15",
    "lea     r12, [rel extended_glob]",
    "mov     r13, r15",
    "sete    r10b",
    "cmp     qword [rbp-0x68], 0x0",
    "sete    al",
    "xor     ecx, ecx",
    "or      r10d, eax",
    "jmp     0x77be4",
    "test    r14d, r14d",
    "js      0x77c51",
    "mov     rdi, qword [rbp-0x50]",
    "jmp     0x77a90",
    "mov     r9, rax",
    "xor     edx, edx",
    "test    eax, eax",
    "mov     rdi, qword [rbp-0x68]",
    "mov     rsi, r13",
    "setne   dl",
    "mov     qword [rbp-0x70], r9",
    "shl     edx, 0x5",
    "call    internal_wstrmatch",
    "mov     r9, qword [rbp-0x70]",
    "cmp     eax, 0x1",
    "je      0x77c90",
    "mov     eax, dword [r12]",
    "test    r13, r13",
    "je      0x77d40",
    "mov     r9d, dword [r13]",
    "mov     dword [r13], 0x0",
    "mov     eax, dword [r12]",
    "test    r10b, r10b",
    "jne     0x77bd0",
    "test    rax, rax",
    "lea     r12, [rel extended_glob]",
    "sete    cl",
    "test    r15, r15",
    "sete    al",
    "or      ecx, eax",
    "movsxd  rax, r14d",
    "mov     r14d, r14d",
    "shl     rax, 0x2",
    "shl     r14, 0x2",
    "lea     r9, [r15+rax-0x4]",
    "lea     r13, [r15+rax]",
    "sub     r9, r14",
    "jmp     0x77a39",
    "mov     qword [rbp-0x48], r15",
    "cmp     r15, rdi",
    "je      0x77c58",
    "mov     r12d, dword [r13]",
    "mov     dword [r13], 0x0",
    "mov     rdi, r15",
    "call    wcsdup",
    "mov     dword [r13], r12d",
    "mov     rdi, qword [rbp-0x50]",
    "mov     r15, rax",
    "jmp     0x77a90",
    "sub     r13, 0x4",
    "cmp     r14, r13",
    "je      0x77c48",
    "cmp     byte [rbp-0x70], 0x0",
    "jne     0x77d40",
    "mov     dword [r13], r9d",
    "lea     rax, [rcx+0x1]",
    "add     r13, 0x4",
    "cmp     r14, rcx",
    "je      0x77c48",
    "xor     edx, edx",
    "test    eax, eax",
    "mov     rdi, qword [rbp-0x68]",
    "mov     rsi, r15",
    "setne   dl",
    "mov     dword [rbp-0x7c], r9d",
    "shl     edx, 0x5",
    "mov     qword [rbp-0x78], rcx",
    "mov     byte [rbp-0x70], r10b",
    "call    internal_wstrmatch",
    "movzx   r10d, byte [rbp-0x70]",
    "mov     rcx, qword [rbp-0x78]",
    "cmp     eax, 0x1",
    "mov     r9d, dword [rbp-0x7c]",
    "je      0x77bd0",
    "mov     r14d, dword [r13]",
    "mov     dword [r13], 0x0",
    "mov     eax, dword [r12]",
    "test    cl, cl",
    "jne     0x77a28",
    "mov     rdi, r15",
    "call    free",
    "mov     rdi, qword [rbp-0x58]",
    "call    free",
    "jmp     0x77922",
    "call    free",
    "mov     rdi, qword [rbp-0x58]",
    "call    free",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rbx, rax",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x77de0",
    "xor     edx, edx",
    "test    eax, eax",
    "mov     rdi, qword [rbp-0x68]",
    "mov     rsi, r13",
    "setne   dl",
    "shl     edx, 0x5",
    "call    internal_wstrmatch",
    "cmp     eax, 0x1",
    "je      0x77d40",
    "mov     rcx, rax",
    "mov     dword [r13], r9d",
    "mov     rdi, r13",
    "call    wcsdup",
    "mov     rdi, qword [rbp-0x50]",
    "mov     r15, rax",
    "jmp     0x77a90",
    "mov     dword [r13], r14d",
    "sub     r13, 0x4",
    "cmp     r13, r9",
    "je      0x77c48",
    "xor     edx, edx",
    "test    eax, eax",
    "mov     rdi, qword [rbp-0x68]",
    "mov     rsi, r15",
    "setne   dl",
    "mov     qword [rbp-0x78], r9",
    "shl     edx, 0x5",
    "mov     byte [rbp-0x70], cl",
    "call    internal_wstrmatch",
    "movzx   ecx, byte [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "cmp     eax, 0x1",
    "je      0x77a28",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, r12",
    "lea     rcx, [rbp-0x40]",
    "lea     rsi, [rbp-0x48]",
    "mov     rdx, rbx",
    "mov     qword [rbp-0x40], 0x0",
    "call    wcsrtombs",
    "mov     rdi, r15",
    "mov     byte [r12+rax], 0x0",
    "call    free",
    "jmp     0x77b23",
    "jmp     0x77cd2",
    "mov     dword [r13], r14d",
    "mov     rdi, r13",
    "call    wcsdup",
    "mov     rdi, qword [rbp-0x50]",
    "mov     r15, rax",
    "nop     word [rax+rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xabb00",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "test    edi, edi",
    "jle     0xabbf6",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "lea     r12d, [rdi-0x1]",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     r13, [rel dollar_vars]",
    "lea     r14, [rel rest_of_args]",
    "lea     rax, [r13+0x10]",
    "mov     qword [rbp-0x38], rax",
    "jmp     0xabba3",
    "mov     rdi, qword [r13+0x8]",
    "test    rdi, rdi",
    "je      0xabbb1",
    "mov     rsi, qword [rbp-0x38]",
    "mov     edx, 0x40",
    "lea     rdi, [r13+0x8]",
    "call    memmove",
    "mov     rbx, qword [r14]",
    "test    rbx, rbx",
    "jne     0xabb40",
    "call    free",
    "mov     rax, qword [rbx+0x8]",
    "mov     rsi, qword [rax]",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x40], rsi",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rsi, qword [rbp-0x40]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0xabbf7",
    "lea     rax, [rel posparam_count]",
    "mov     qword [r13+0x48], 0x0",
    "sub     dword [rax], 0x1",
    "sub     r12d, 0x1",
    "jae     0xabba3",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "call    dcgettext",
    "mov     rdx, r15",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     rcx, r15",
    "mov     rdx, r15",
    "call    __memcpy_chk",
    "mov     rdi, rbx",
    "mov     qword [r13+0x48], rax",
    "mov     rax, qword [rbx]",
    "mov     qword [r14], rax",
    "mov     qword [rbx], 0x0",
    "call    dispose_words",
    "lea     rax, [rel posparam_count]",
    "sub     dword [rax], 0x1",
    "sub     r12d, 0x1",
    "jb      0xabbe7",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    "
  ]
}
{
  "address": "0x9c1f0",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12d, edx",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x18",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel history_expansion_inhibited]",
    "mov     r14d, dword [rax]",
    "test    r14d, r14d",
    "jne     0x9c236",
    "test    r12d, r12d",
    "je      0x9c248",
    "lea     rax, [rel history_expansion]",
    "mov     r13d, dword [rax]",
    "test    r13d, r13d",
    "jne     0x9c280",
    "mov     rax, rbx",
    "lea     rax, [rel remember_on_history]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x9c270",
    "movzx   edx, byte [rdi]",
    "test    dl, dl",
    "je      0x9c236",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     byte [rbx], 0x0",
    "je      0x9c248",
    "lea     rax, [rel history_expansion_char]",
    "mov     r13d, esi",
    "movzx   ecx, byte [rax]",
    "lea     rax, [rel history_subst_char]",
    "movzx   esi, byte [rax]",
    "mov     rax, rdi",
    "jmp     0x9c2bd",
    "mov     rdi, rbx",
    "call    maybe_add_history",
    "jmp     0x9c248",
    "cmp     cl, dl",
    "jne     0x9c2a8",
    "cmp     sil, dl",
    "je      0x9c2c1",
    "lea     rax, [rel history_length]",
    "mov     r15d, dword [rax]",
    "test    r15d, r15d",
    "jle     0x9c310",
    "movzx   edx, byte [rax+0x1]",
    "add     rax, 0x1",
    "test    dl, dl",
    "je      0x9c236",
    "lea     rsi, [rbp-0x40]",
    "mov     rdi, rbx",
    "call    history_expand",
    "mov     r14d, eax",
    "lea     rax, [rel history_length]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "js      0x9c360",
    "lea     rax, [rel command_oriented_history]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0x9c310",
    "mov     rdi, qword [rbp-0x40]",
    "test    r14d, r14d",
    "je      0x9c3c0",
    "lea     rax, [rel command_oriented_history]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "je      0x9c360",
    "lea     rax, [rel current_command_first_line_saved]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "je      0x9c310",
    "mov     rbx, rdi",
    "jmp     0x9c236",
    "test    r13d, r13d",
    "je      0x9c3d0",
    "lea     rax, [rel current_command_first_line_saved]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x9c360",
    "lea     rax, [rel current_command_line_count]",
    "cmp     dword [rax], 0x1",
    "jle     0x9c310",
    "test    r14d, r14d",
    "js      0x9c481",
    "test    r14d, r14d",
    "js      0x9c426",
    "lea     rax, [rel current_command_line_count]",
    "cmp     dword [rax], 0x1",
    "jle     0x9c360",
    "lea     rcx, [rel history_length]",
    "lea     eax, [r15-0x1]",
    "mov     dword [rcx], eax",
    "nop     word [rax+rax]",
    "cmp     r14d, 0x2",
    "jne     0x9c43b",
    "cmp     r14d, 0x2",
    "je      0x9c487",
    "mov     rsi, rdi",
    "xor     eax, eax",
    "lea     rdi, [rel data_1217ad[6]]  {\"%s\"}",
    "call    internal_error",
    "mov     rdi, qword [rbp-0x40]",
    "lea     rbx, [rel hist_verify]",
    "mov     eax, dword [rbx]",
    "test    eax, eax",
    "je      0x9c3ee",
    "lea     rax, [rel history_length]",
    "mov     dword [rax], r15d",
    "call    free",
    "lea     rax, [rel history_reediting]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x9c3b5",
    "lea     rax, [rel rl_dispatching]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x9c3b0",
    "lea     rax, [rel hist_verify]",
    "mov     eax, dword [rax]",
    "jmp     0x9c390",
    "xor     eax, eax",
    "jmp     0x9c24b",
    "lea     rax, [rel rl_done]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x9c3b5",
    "mov     rax, qword [rel stderr]",
    "mov     rcx, rdi",
    "mov     esi, 0x2",
    "lea     rdx, [rel data_1212aa[4]]  {\"%s\\n\"}",
    "mov     rax, qword [rax]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "mov     rdi, qword [rbp-0x40]",
    "cmp     r14d, 0x2",
    "je      0x9c487",
    "cmp     r14d, 0x2",
    "je      0x9c3ee",
    "call    free",
    "cmp     byte [rdi], 0x0",
    "je      0x9c3b0",
    "mov     rdx, rdi",
    "test    eax, eax",
    "je      0x9c3c0",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x9c4b6",
    "lea     rax, [rel bash_input]",
    "cmp     dword [rax], 0x1",
    "jne     0x9c3b5",
    "mov     eax, dword [rbx]",
    "mov     rdi, qword [rbp-0x40]",
    "jmp     0x9c390",
    "nop     word [rax+rax]",
    "call    maybe_add_history",
    "mov     rdi, qword [rbp-0x40]",
    "call    free",
    "xor     eax, eax",
    "jmp     0x9c24b",
    "cmp     r14d, 0x1",
    "jne     0x9c3c0",
    "mov     rdi, rbx",
    "call    bash_re_edit",
    "xor     eax, eax",
    "jmp     0x9c24b",
    "lea     rax, [rel bash_input]",
    "cmp     dword [rax], 0x1",
    "je      0x9c4bb",
    "call    bash_re_edit",
    "mov     rdx, qword [rbp-0x40]",
    "jmp     0x9c3ad",
    "mov     rdi, rdx"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
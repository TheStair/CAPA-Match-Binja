{
  "address": "0xe0d70",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     dword [rbp-0x44], esi",
    "mov     r14, qword [rdi]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    r14, r14",
    "je      0xe1008",
    "xor     eax, eax",
    "jmp     0xe0e59",
    "lea     rax, [rel rl_ignore_completion_duplicates]",
    "mov     r12, rdi",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0xe0e80",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xe108a",
    "mov     r15, qword [r14]",
    "test    r15, r15",
    "je      0xe0eaf",
    "lea     rax, [rel rl_ignore_some_completions_function]",
    "mov     rcx, qword [rax]",
    "test    rcx, rcx",
    "je      0xe0e50",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r15",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xe10a5",
    "xor     eax, eax",
    "nop     word [rax+rax]",
    "mov     qword [r12], r14",
    "mov     eax, 0x1",
    "mov     eax, dword [rbp-0x44]",
    "test    eax, eax",
    "je      0xe0e50",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r15",
    "mov     rdx, rbx",
    "mov     rdi, r13",
    "call    __strcpy_chk",
    "mov     rsi, qword [r14+0x8]",
    "mov     qword [rbp-0x58], r13",
    "test    rsi, rsi",
    "je      0xe1040",
    "mov     rsi, rax",
    "add     rax, 0x1",
    "cmp     qword [r14+rax*8], 0x0",
    "jne     0xe0e90",
    "lea     rax, [rel rl_sort_completion_matches]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xe1010",
    "cmp     qword [r14+0x8], 0x0",
    "je      0xe1030",
    "mov     ebx, 0x18",
    "jmp     0xe0f46",
    "lea     rax, [rbp-0x39]",
    "mov     r15, r14",
    "xor     ebx, ebx",
    "mov     qword [rbp-0x50], rax",
    "jmp     0xe0f10",
    "lea     rcx, [rel _rl_qsort_string_compare]",
    "movsxd  rsi, esi",
    "lea     rdi, [r14+0x8]",
    "mov     edx, 0x8",
    "call    qsort",
    "mov     r15, qword [r14]",
    "jmp     0xe0eaf",
    "mov     ebx, 0x1",
    "jmp     0xe0df9",
    "mov     eax, 0x2",
    "nop     dword [rax]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xe108f",
    "mov     r13, qword [r15]",
    "mov     rdi, r13",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xe0f00",
    "mov     rdi, r14",
    "call    rcx",
    "mov     r13, qword [r14]",
    "test    r13, r13",
    "je      0xe0ff8",
    "mov     rdx, rax",
    "add     rax, 0x1",
    "cmp     qword [r14+rax*8-0x8], 0x0",
    "jne     0xe0de8",
    "mov     ebx, edx",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [r14+0x8]",
    "test    rax, rax",
    "je      0xe1050",
    "mov     rsi, qword [r15+0x10]",
    "add     r15, 0x8",
    "add     ebx, 0x1",
    "test    rsi, rsi",
    "je      0xe0f3c",
    "mov     rdi, r13",
    "add     r15, 0x8",
    "call    free",
    "mov     rax, qword [rbp-0x50]",
    "mov     qword [r15-0x8], rax",
    "mov     rsi, qword [r15+0x8]",
    "test    rsi, rsi",
    "jne     0xe0f10",
    "mov     rdi, r14",
    "call    free",
    "mov     qword [r12], 0x0",
    "mov     rcx, qword [r14+0x8]",
    "lea     rdx, [r14+0x10]",
    "mov     eax, 0x1",
    "test    rcx, rcx",
    "je      0xe0e50",
    "mov     qword [r15+0x8], 0x0",
    "mov     rdi, qword [r14]",
    "test    rdi, rdi",
    "je      0xe106e",
    "lea     rdx, [r14+0x10]",
    "mov     ebx, 0x1",
    "lea     rsi, [rbp-0x39]",
    "nop     dword [rax]",
    "add     ebx, 0x3",
    "movsxd  rbx, ebx",
    "shl     rbx, 0x3",
    "nop     dword [rax]",
    "mov     rax, qword [rbp-0x58]",
    "mov     qword [r15], rax",
    "jmp     0xe0fbc",
    "lea     rax, [rbp-0x39]",
    "cmp     rdi, rax",
    "je      0xe106e",
    "mov     rax, qword [rdx]",
    "add     rdx, 0x8",
    "test    rax, rax",
    "jne     0xe0f78",
    "movsxd  rcx, ebx",
    "add     ebx, 0x1",
    "mov     qword [r15+rcx*8], rax",
    "add     rdx, 0x8",
    "mov     esi, eax",
    "add     eax, 0x1",
    "cmp     qword [rdx-0x8], 0x0",
    "jne     0xe0e20",
    "cmp     eax, ebx",
    "jge     0xe0e50",
    "mov     rdi, r14",
    "mov     r14, r15",
    "call    free",
    "jmp     0xe0db7",
    "call    free",
    "cmp     rax, rsi",
    "je      0xe0f87",
    "movsxd  rax, ebx",
    "mov     qword [r15+rax*8], 0x0",
    "mov     rdi, qword [r14]",
    "test    rdi, rdi",
    "je      0xe0fb0",
    "cmp     esi, 0x1",
    "je      0xe107a",
    "mov     rax, qword [rbp-0x58]",
    "mov     qword [r15], rax",
    "cmp     ebx, 0x2",
    "je      0xe0fd0",
    "cmp     rdi, rsi",
    "je      0xe0fb0",
    "mov     qword [r14], rcx",
    "mov     qword [r14+0x8], 0x0",
    "jmp     0xe0e48",
    "mov     rdx, r13",
    "mov     rdi, r14",
    "call    sub_ebd10",
    "mov     rbx, qword [r15+0x8]",
    "mov     rdi, rax",
    "mov     rsi, rbx",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xe0fbc",
    "call    free",
    "mov     rdi, r13",
    "call    free",
    "mov     rdi, rbx",
    "call    free",
    "mov     qword [r15+0x8], 0x0",
    "jmp     0xe0fbc"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
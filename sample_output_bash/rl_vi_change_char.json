{
  "address": "0xe82d0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "mov     r12d, edi",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "lea     rax, [rel _rl_vi_redoing]",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "jne     0xe8400",
    "lea     rdi, [rbp-0x40]",
    "mov     edx, 0x10",
    "lea     rsi, [rel data_16a600]",
    "call    strncpy",
    "mov     byte [rbp-0x30], 0x0",
    "movzx   ebx, byte [rel data_16a600]",
    "jmp     0xe8372",
    "lea     rax, [rel rl_readline_state]",
    "mov     rax, qword [rax]",
    "test    eax, 0x80000",
    "jne     0xe83a0",
    "cmp     ebx, 0x1b",
    "je      0xe8470",
    "mov     edi, 0xc",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xe847f",
    "call    _rl_bracketed_read_key",
    "mov     ebx, eax",
    "test    eax, eax",
    "js      0xe8470",
    "mov     ebx, 0xffffffff",
    "jmp     0xe83dd",
    "cmp     ebx, 0x3",
    "je      0xe8470",
    "mov     esi, 0xc",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel _rl_callback_data]",
    "lea     rcx, [rel sub_e81b0]",
    "mov     dword [r13], r12d",
    "mov     qword [r13+0x4], 0x0",
    "mov     qword [rax], r13",
    "lea     rax, [rel _rl_callback_func]",
    "mov     qword [rax], rcx",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xe8342",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xe847a",
    "call    rl_begin_undo_group",
    "mov     esi, ebx",
    "lea     rdx, [rbp-0x40]",
    "mov     edi, r12d",
    "call    sub_e6640",
    "mov     ebx, eax",
    "jmp     0xe83dd",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "mov     byte [rbp-0x40], bl",
    "mov     byte [rbp-0x30], 0x0",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0xe8448",
    "mov     byte [rel data_16a600], bl",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xe8428",
    "mov     edi, ebx",
    "lea     rsi, [rbp-0x40]",
    "mov     edx, 0x10",
    "call    _rl_read_mbstring",
    "mov     byte [rbp-0x30], 0x0",
    "mov     ebx, eax",
    "test    eax, eax",
    "jns     0xe8349",
    "lea     rsi, [rbp-0x40]",
    "mov     edx, 0x10",
    "lea     rdi, [rel data_16a600]",
    "call    strncpy",
    "jmp     0xe836b",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xe8365",
    "nop     word [rax+rax]",
    "mov     byte [rel data_16a610], 0x0"
  ]
}
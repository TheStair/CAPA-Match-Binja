{
  "address": "0xa1050",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rsi",
    "push    rbx",
    "xor     ebx, ebx",
    "sub     rsp, 0x38",
    "mov     qword [rbp-0x50], rdi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    strlen",
    "mov     r13, rax",
    "test    r12, r12",
    "je      0xa1093",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xa13b3",
    "xor     esi, esi",
    "mov     rdi, r12",
    "call    sub_9ca20",
    "mov     rbx, rax",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r14",
    "mov     rsi, rbx",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "lea     rax, [rel rl_directory_rewrite_hook]",
    "mov     qword [rbp-0x40], r15",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xa10e2",
    "lea     rax, [rel rl_directory_completion_hook]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xa10ff",
    "lea     rdi, [rbp-0x40]",
    "call    rax",
    "test    eax, eax",
    "jne     0xa1220",
    "lea     rax, [rel rl_completion_found_quote]",
    "mov     rdi, qword [rbp-0x40]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xa11f0",
    "lea     rdi, [rbp-0x40]",
    "call    rax",
    "test    eax, eax",
    "jne     0xa1220",
    "mov     rdi, rbx",
    "call    free",
    "mov     r15, qword [rbp-0x40]",
    "jmp     0xa111c",
    "lea     rax, [rel rl_completion_quote_character]",
    "mov     esi, dword [rax]",
    "call    sub_9ca20",
    "mov     rdi, rbx",
    "mov     r15, rax",
    "call    free",
    "mov     rdi, qword [rbp-0x40]",
    "call    free",
    "jmp     0xa111c",
    "call    free",
    "mov     r15, rbx",
    "mov     rdi, r15",
    "call    strlen",
    "xor     esi, esi",
    "mov     rdi, r12",
    "mov     qword [rbp-0x48], rax",
    "call    bash_tilde_expand",
    "mov     rdi, rax",
    "mov     rbx, rax",
    "call    strlen",
    "cmp     byte [r12], 0x7e",
    "mov     r14, rax",
    "jne     0xa1150",
    "mov     rdi, rbx",
    "call    free",
    "mov     eax, r13d",
    "sub     eax, r14d",
    "add     eax, 0x1",
    "test    eax, eax",
    "jle     0xa1238",
    "cmp     byte [rbx], 0x7e",
    "je      0xa1298",
    "mov     rdi, r15",
    "call    free",
    "mov     rdi, qword [rbp-0x50]",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xa13df",
    "mov     rcx, qword [rbp-0x48]",
    "lea     r12d, [rax+rcx+0x2]",
    "movsxd  r12, r12d",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xa13c9",
    "mov     rsi, rbx",
    "mov     rdi, r12",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xa1150",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa13ae",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, r15",
    "mov     rdi, r13",
    "movsxd  r14, r14d",
    "call    __strcpy_chk",
    "movsxd  rbx, dword [rbp-0x48]",
    "mov     rdx, r12",
    "mov     rsi, qword [rbp-0x50]",
    "cmp     r12, rbx",
    "lea     rdi, [r13+rbx]",
    "cmovb   rdx, rbx",
    "add     rsi, r14",
    "sub     rdx, rbx",
    "call    __strcpy_chk",
    "mov     rdi, r15",
    "call    free",
    "mov     rdi, qword [rbp-0x50]",
    "mov     esi, 0x2f",
    "call    strchr",
    "mov     r9, rax",
    "test    rax, rax",
    "je      0xa1360",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "mov     rsi, qword [rbp-0x50]",
    "add     rsp, 0x38",
    "mov     rdx, rbx",
    "mov     rdi, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "add     rsp, 0x38",
    "mov     rax, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     eax, [r14+0x2]",
    "movsxd  r14, eax",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xa1429",
    "movzx   ecx, byte [rax]",
    "mov     eax, r14d",
    "mov     byte [rbp-0x50], cl",
    "test    cl, cl",
    "je      0xa1300",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r14",
    "mov     rsi, r12",
    "mov     rdi, r13",
    "call    __strcpy_chk",
    "jmp     0xa1342",
    "add     eax, 0x2",
    "mov     qword [rbp-0x58], r9",
    "cdqe    ",
    "mov     rdi, rax",
    "mov     qword [rbp-0x48], rax",
    "call    malloc",
    "mov     r9, qword [rbp-0x58]",
    "test    rax, rax",
    "mov     r13, rax",
    "je      0xa13f5",
    "cmp     byte [r9+0x1], 0x0",
    "lea     eax, [r14+0x1]",
    "je      0xa1300",
    "mov     rdi, r15",
    "call    free",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0xa11c4",
    "mov     rsi, qword [rbp-0x48]",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x50], r9",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, qword [rbp-0x48]",
    "mov     rsi, r12",
    "mov     rdi, r13",
    "mov     qword [rbp-0x58], r9",
    "call    __strcpy_chk",
    "mov     r9, qword [rbp-0x58]",
    "cmp     byte [rbp-0x50], 0x0",
    "jne     0xa138b",
    "cmp     byte [r9+0x2], 0x0",
    "lea     eax, [r14+0x2]",
    "je      0xa1300",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa13ae",
    "mov     rax, qword [rbp-0x48]",
    "movsxd  r14, r14d",
    "mov     rsi, r9",
    "lea     rdi, [r13+r14]",
    "cmp     r14, rax",
    "mov     rdx, rax",
    "cmovae  rdx, r14",
    "sub     rdx, r14",
    "call    __strcpy_chk",
    "jmp     0xa1342",
    "mov     rdi, r9",
    "mov     qword [rbp-0x48], r9",
    "call    strlen",
    "mov     r9, qword [rbp-0x48]",
    "add     eax, r14d",
    "nop     dword [rax+rax]"
  ]
}
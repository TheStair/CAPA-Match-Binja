{
  "address": "0xeb170",
  "rules": [
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "contain loop",
    "get password database entry on Linux",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "test    esi, esi",
    "jne     0xeb210",
    "call    getpwent",
    "mov     qword [rel data_16a908], rax",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xeb2c8",
    "mov     rdi, qword [rel data_16a920]",
    "test    rdi, rdi",
    "je      0xeb19b",
    "call    endpwent",
    "xor     r14d, r14d",
    "pop     rbx",
    "pop     r12",
    "mov     rax, r14",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "movsxd  rdx, dword [rel data_16a910]",
    "test    edx, edx",
    "je      0xeb2c0",
    "movsx   eax, byte [r13]",
    "cmp     eax, 0x7e",
    "mov     dword [rel data_16a918], eax",
    "sete    r14b",
    "sete    al",
    "movzx   r14d, r14b",
    "movzx   eax, al",
    "add     r14, r13",
    "mov     dword [rel data_16a914], eax",
    "mov     rdi, r14",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xeb2f9",
    "call    free",
    "mov     r12, qword [rbx {passwd::pw_name}]",
    "jmp     0xeb256",
    "mov     r12, qword [rbx {passwd::pw_name}]",
    "mov     rdi, qword [rel data_16a920]",
    "movzx   eax, byte [r12]",
    "cmp     byte [rdi], al",
    "jne     0xeb210",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r14",
    "mov     rdi, r12",
    "call    __strcpy_chk",
    "mov     rdi, r12",
    "mov     qword [rel data_16a920], r12",
    "call    strlen",
    "mov     dword [rel data_16a910], eax",
    "call    setpwent",
    "nop     dword [rax+rax]",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r12, [rax+0x2]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xeb2dc",
    "mov     rsi, r12",
    "call    strncmp",
    "test    eax, eax",
    "jne     0xeb210",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  rdi, dword [rel data_16a914]",
    "movzx   eax, byte [r13]",
    "mov     rdx, r12",
    "cmp     r12, rdi",
    "mov     byte [r14], al",
    "mov     rsi, qword [rbx {passwd::pw_name}]",
    "cmovb   rdx, rdi",
    "sub     rdx, rdi",
    "add     rdi, r14",
    "call    __strcpy_chk",
    "cmp     dword [rel data_16a918], 0x7e",
    "jne     0xeb2af",
    "pop     rbx",
    "mov     rax, r14",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "lea     rax, [rel rl_filename_completion_desired]",
    "mov     dword [rax], 0x1"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x1111d0",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "write file on Linux",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "movsxd  rax, edi",
    "xor     edi, edi",
    "mov     rbp, rsp",
    "push    r15",
    "lea     r15, [rax+rax*2]",
    "push    r14",
    "shl     r15, 0x4",
    "push    r13",
    "mov     r13, rax",
    "push    r12",
    "mov     r12, rsi",
    "push    rbx",
    "mov     ebx, edx",
    "mov     edx, 0x5",
    "sub     rsp, 0x28",
    "lea     r14, [rel shell_builtins]",
    "mov     dword [rbp-0x34], ecx",
    "mov     rax, qword [r14]",
    "mov     rsi, qword [rax+r15+0x20]",
    "call    dcgettext",
    "lea     edx, [rbx-0x2]",
    "lea     rdi, [r12+0x1]",
    "mov     rsi, rax",
    "mov     rax, qword [r14]",
    "movsxd  rdx, edx",
    "mov     qword [rbp-0x40], rdi",
    "mov     eax, dword [rax+r15+0x10]",
    "and     eax, 0x1",
    "cmp     eax, 0x1",
    "sbb     eax, eax",
    "and     eax, 0xa",
    "add     eax, 0x20",
    "mov     byte [r12], al",
    "call    strncpy",
    "movzx   edx, word [rel data_136ab8[8]]  {\">\"}",
    "movsxd  rax, ebx",
    "lea     rsi, [rel data_1217ad[6]]  {\"%s\"}",
    "mov     qword [rbp-0x48], rax",
    "mov     edi, 0x2",
    "mov     word [r12+rax-0x2], dx",
    "mov     rdx, r12",
    "xor     eax, eax",
    "call    __printf_chk",
    "lea     rax, [rel num_shell_builtins]",
    "lea     edx, [r13+r13]",
    "mov     eax, dword [rax]",
    "cmp     edx, eax",
    "jge     0x111340",
    "add     rsp, 0x28",
    "mov     edi, 0xa",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     putchar",
    "mov     ecx, dword [rbp-0x34]",
    "add     ecx, r13d",
    "mov     dword [rbp-0x34], ecx",
    "cmp     eax, ecx",
    "jle     0x111340",
    "mov     rdi, r12",
    "call    strlen",
    "mov     r15d, eax",
    "cmp     ebx, eax",
    "jle     0x1112c7",
    "movsxd  rax, dword [rbp-0x34]",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     r13, [rax+rax*2]",
    "mov     rax, qword [r14]",
    "shl     r13, 0x4",
    "mov     rsi, qword [rax+r13+0x20]",
    "call    dcgettext",
    "mov     rdi, qword [rbp-0x40]",
    "mov     rsi, rax",
    "mov     rax, qword [r14]",
    "mov     eax, dword [rax+r13+0x10]",
    "and     eax, 0x1",
    "cmp     eax, 0x1",
    "sbb     edx, edx",
    "and     edx, 0xa",
    "add     edx, 0x20",
    "mov     byte [r12], dl",
    "lea     edx, [rbx-0x3]",
    "movsxd  rdx, edx",
    "call    strncpy",
    "mov     rax, qword [rbp-0x48]",
    "movzx   ebx, word [rel data_136ab8[8]]  {\">\"}",
    "mov     rdi, r12",
    "mov     word [r12+rax-0x3], bx",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     puts",
    "mov     r13, qword [rel stdout]",
    "nop     ",
    "mov     rsi, qword [r13]",
    "mov     edi, 0x20",
    "add     r15d, 0x1",
    "call    putc",
    "cmp     ebx, r15d",
    "jne     0x1112b0"
  ]
}
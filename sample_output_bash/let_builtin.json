{
  "address": "0xbd210",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x20",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x18], rax",
    "xor     eax, eax",
    "test    rdi, rdi",
    "je      0xbd2e8",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_12034f]  {\"expression expected\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xbd273",
    "mov     rax, qword [rdi+0x8]",
    "mov     rbx, rdi",
    "mov     rdi, qword [rax]",
    "cmp     byte [rdi], 0x2d",
    "je      0xbd2a8",
    "mov     eax, 0x1",
    "lea     rsi, [rel 0x1210f5]  {\"--help\"}",
    "mov     qword [rbp-0x28], rdi",
    "call    strcmp",
    "mov     rdi, qword [rbp-0x28]",
    "test    eax, eax",
    "je      0xbd30a",
    "lea     r12, [rbp-0x1c]",
    "jmp     0xbd25f",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x20",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "call    builtin_help",
    "mov     eax, 0x102",
    "jmp     0xbd278",
    "cmp     byte [rdi+0x1], 0x2d",
    "jne     0xbd246",
    "mov     rdx, r12",
    "mov     esi, 0x1",
    "call    evalexp",
    "mov     edx, dword [rbp-0x1c]",
    "test    edx, edx",
    "jne     0xbd250",
    "mov     rdx, qword [rbp-0x18]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xbd319",
    "cmp     byte [rdi+0x2], 0x0",
    "jne     0xbd246",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "je      0xbd298",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "je      0xbd2e8",
    "test    rax, rax",
    "sete    al",
    "movzx   eax, al",
    "jmp     0xbd278",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "jmp     0xbd246"
  ]
}
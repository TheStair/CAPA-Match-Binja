{
  "address": "0x1104c0",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "push    rbp",
    "movsxd  rdx, edx",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "lea     r13, [rsi+rdx]",
    "push    r12",
    "mov     r12, rdi",
    "mov     rdi, r13",
    "push    rbx",
    "sub     rsp, 0x18",
    "call    strlen",
    "mov     rbx, rax",
    "test    r12, r12",
    "je      0x110548",
    "add     ebx, 0x1",
    "movsxd  rbx, ebx",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x110581",
    "cmp     byte [r12], 0x0",
    "je      0x110548",
    "mov     rdx, rbx",
    "xor     ecx, ecx",
    "mov     r15, rax",
    "mov     rdi, r12",
    "call    strlen",
    "lea     edx, [rbx+rax+0x1]",
    "mov     dword [rbp-0x3c], eax",
    "movsxd  rdx, edx",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x38], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x38]",
    "mov     ecx, dword [rbp-0x3c]",
    "test    rax, rax",
    "mov     r14, rax",
    "je      0x110586",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x3c], ecx",
    "mov     qword [rbp-0x38], rdx",
    "xor     r14d, r14d",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  r15, ecx",
    "cmp     rdx, r15",
    "mov     rbx, r15",
    "cmovae  rbx, rdx",
    "sub     rbx, r15",
    "add     r15, r14",
    "test    ecx, ecx",
    "je      0x110561",
    "mov     rdx, rbx",
    "mov     rsi, r13",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "add     rsp, 0x18",
    "mov     rax, r14",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rsi, r12",
    "mov     rdi, r14",
    "call    __strcpy_chk",
    "jmp     0x110561"
  ]
}
{
  "address": "0xc59d0",
  "rules": [
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "log keystrokes via raw input data/4762f396f48d4e318a08125296476d20",
    "check for kernel debugger via shared user data structure/47a8170337e74f7ca5a6c64253eb43bf",
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using djb2/8952edc10f1448bdba19a64c9f144796",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "hash data using jshash/a755d430eadb46a9b4c9d318a1fcf472",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "push    r14 {__saved_r14}",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "mov     rbx, rdi",
    "sub     rsp, 0x68",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38 {var_40}], rax",
    "xor     eax, eax  {0x0}",
    "cmp     byte [rel data_168f20], 0x0",
    "jne     0xc5a48  {data_168f20}",
    "mov     r12d, dword [rel data_168f00]",
    "test    r12d, r12d",
    "je      0xc5b90",
    "mov     r13d, 0x5361",
    "mov     byte [rel data_168f22], 0x48",
    "lea     rcx, [rel data_154f20]",
    "lea     rax, [rel data_168f23]",
    "mov     word [rel data_168f20], r13w  {0x5361}",
    "mov     edx, 0x52",
    "nop     dword [rax+rax]",
    "mov     dword [rel data_168f00], 0x10",
    "mov     edi, 0x100",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xc6286",
    "lea     rax, [rel loptend]",
    "xor     r13d, r13d  {0x0}",
    "xor     r15d, r15d  {0x0}",
    "mov     dword [rel data_168ef0], 0x0",
    "mov     qword [rel data_168d30], 0x0",
    "lea     r12, [rel data_168f20]",
    "mov     qword [rax], 0x0  {loptend}",
    "lea     rax, [rel lcurrent]",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rax], 0x0  {lcurrent}",
    "add     rcx, 0x20",
    "mov     byte [rax], dl",
    "add     rax, 0x2",
    "mov     edx, dword [rcx-0x20]",
    "mov     byte [rax-0x1], 0x3b",
    "test    edx, edx",
    "jg      0xc5a30",
    "mov     byte [rax], 0x0",
    "mov     esi, 0x100",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_168ef8], r12",
    "jmp     0xc5a58",
    "lea     rax, [rel loptend]",
    "mov     rdi, qword [rax]  {loptend}",
    "test    r13d, r13d",
    "jne     0xc6039",
    "cmp     edx, 0x48",
    "je      0xc5b80",
    "test    r15d, r15d",
    "mov     eax, 0x2",
    "lea     r13, [rbp-0x50 {rlimits}]",
    "cmove   r15d, eax  {0x2}",
    "lea     rax, [rbp-0x58 {rlimits_5}]",
    "lea     r12, [rel data_154f10]",
    "xor     ebx, ebx  {0x0}",
    "mov     qword [rbp-0x68 {var_70_2}], rax {rlimits_5}",
    "lea     r14, [rel data_12197f]",
    "jmp     0xc608f",
    "movsxd  r14, dword [rel data_168ef0]",
    "mov     eax, r14d",
    "test    r14d, r14d",
    "je      0xc5e6a",
    "or      r15d, 0x1",
    "jmp     0xc5aa0",
    "jg      0xc5b00",
    "mov     rsi, qword [rbp-0x68 {var_70_2}]",
    "mov     rdx, r13 {rlimits}",
    "mov     edi, ebx",
    "call    sub_bc500",
    "test    eax, eax",
    "je      0xc6068",
    "mov     rdx, qword [rel data_168ef8]",
    "mov     dword [rdx], 0x66",
    "test    rdi, rdi",
    "je      0xc6201",
    "jle     0xc6233",
    "mov     rsi, r12  {data_168f20}",
    "mov     rdi, rbx",
    "call    internal_getopt",
    "mov     edx, eax",
    "cmp     eax, 0xffffffff",
    "je      0xc5c10",
    "cmp     edx, 0x53",
    "je      0xc5b60",
    "cmp     edx, 0xffffff9d",
    "je      0xc5b70",
    "test    r15b, 0x2",
    "je      0xc60c8",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "cmp     edi, 0x16",
    "je      0xc607e",
    "mov     dword [rel data_168ef0], 0x1",
    "mov     r14d, 0x1",
    "mov     qword [rdx+0x8], 0x0",
    "jmp     0xc5c43",
    "mov     rax, qword [rdi+0x8]",
    "mov     r14d, 0x1",
    "mov     rdi, qword [rdi]",
    "mov     dword [rel data_168ef0], 0x1",
    "mov     rax, qword [rax]",
    "mov     qword [rdx+0x8], rax",
    "jmp     0xc5c43",
    "test    rdi, rdi",
    "jne     0xc5c8a",
    "mov     rdx, qword [rel data_168ef8]",
    "or      r15d, 0x2",
    "jmp     0xc5aa0",
    "cmp     edx, 0x61",
    "jne     0xc5b10",
    "call    builtin_help",
    "jmp     0xc5ad4",
    "cmp     edx, 0x3f",
    "jne     0xc5b10",
    "mov     rsi, qword [rbp-0x50 {rlimits}]",
    "jmp     0xc6072",
    "mov     rsi, qword [rbp-0x58 {rlimits_5}]",
    "mov     r11d, dword [r12+0x10]",
    "add     r12, 0x20",
    "add     ebx, 0x1",
    "test    r11d, r11d",
    "jle     0xc60ce",
    "call    strerror",
    "mov     rsi, qword [r12]",
    "mov     rdi, r14  {data_12197f, \"%s: cannot get limit: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "jmp     0xc607e",
    "mov     rcx, rdx",
    "xor     esi, esi  {0x0}",
    "nop     dword [rax+rax]",
    "mov     rcx, qword [rdi+0x8]",
    "test    rcx, rcx",
    "je      0xc5cae",
    "jmp     0xc5ada",
    "cmp     ebx, eax",
    "jne     0xc5c60",
    "mov     r8d, dword [rel data_168ef0]",
    "mov     eax, dword [rel data_168f00]",
    "mov     rcx, qword [rel data_168ef8]",
    "cmp     r8d, eax",
    "jge     0xc5bc0",
    "add     r13d, 0x1",
    "jmp     0xc5aa0",
    "mov     r13d, 0x102",
    "call    builtin_usage",
    "mov     edx, 0x1",
    "mov     edi, ebx",
    "call    sub_bc5b0",
    "mov     rax, qword [rbp-0x38 {var_40}]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xc6256",
    "mov     rdx, qword [rel data_168ef8]",
    "mov     r14d, eax",
    "test    eax, eax",
    "jle     0xc5ada",
    "mov     rdx, qword [rel data_168ef8]",
    "shl     r14, 0x4",
    "lea     rdx, [rdx+r14-0x10]",
    "cmp     qword [rdx+0x8], 0x0",
    "je      0xc6227",
    "mov     rax, qword [rbp-0x38 {var_40}]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xc6256",
    "mov     eax, dword [r8]",
    "add     r8, 0x20",
    "test    eax, eax",
    "jle     0xc6100",
    "add     esi, 0x1",
    "add     rcx, 0x10",
    "cmp     esi, r14d",
    "jl      0xc5c50",
    "add     eax, eax",
    "mov     dword [rbp-0x70 {var_78}], edx",
    "movsxd  r14, eax",
    "mov     dword [rel data_168f00], eax",
    "mov     dword [rbp-0x68 {var_70}], r8d",
    "shl     r14, 0x4",
    "test    rcx, rcx",
    "je      0xc6022",
    "movsxd  rax, r8d",
    "add     r8d, 0x1",
    "shl     rax, 0x4",
    "mov     dword [rel data_168ef0], r8d",
    "add     rcx, rax",
    "lea     rax, [rel list_optarg]",
    "mov     dword [rcx], edx",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rcx+0x8], rax",
    "jmp     0xc5aa0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x68",
    "mov     eax, r13d",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "add     rsp, 0x68",
    "xor     edi, edi  {0x0}",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "jmp     sh_chkwrite",
    "test    r15d, r15d",
    "mov     eax, 0x2",
    "mov     dword [rbp-0x90 {var_98_1}], r13d",
    "sete    cl",
    "test    cl, cl",
    "cmove   eax, r15d",
    "and     eax, 0x2",
    "test    cl, cl",
    "mov     dword [rbp-0x8c {var_94_1}], eax",
    "mov     eax, 0x3",
    "cmove   eax, r15d",
    "xor     r12d, r12d  {0x0}",
    "mov     edi, eax",
    "and     eax, 0x1",
    "and     edi, 0x2",
    "mov     dword [rbp-0x88 {var_90_1}], eax",
    "lea     rax, [rbp-0x58 {rlimits_5}]",
    "mov     dword [rbp-0x84 {var_8c_1}], edi",
    "mov     qword [rbp-0x68 {var_70_1}], rax {rlimits_5}",
    "lea     rax, [rbp-0x60 {rlimits_4}]",
    "mov     qword [rbp-0x70 {var_78}], rax {rlimits_4}",
    "mov     rax, rdx",
    "nop     word [rax+rax]",
    "mov     rcx, qword [rcx]",
    "mov     qword [rdx+0x8], rcx",
    "jmp     0xc5cae",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121998]  {\"`%c': bad command\"}",
    "call    dcgettext",
    "mov     esi, ebx",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "jmp     0xc5ad4",
    "mov     ebx, dword [rcx]",
    "lea     r8, [rel data_154f20]",
    "mov     eax, 0x52",
    "jmp     0xc5c6f",
    "test    rdi, rdi",
    "je      0xc5cc0",
    "mov     rdi, r14",
    "call    malloc",
    "mov     edx, dword [rbp-0x70 {var_78}]",
    "mov     r8d, dword [rbp-0x68 {var_70}]",
    "mov     rcx, rax",
    "jmp     0xc5bf4",
    "mov     rdi, rcx",
    "mov     rsi, r14",
    "call    realloc",
    "mov     r8d, dword [rbp-0x68 {var_70}]",
    "mov     edx, dword [rbp-0x70 {var_78}]",
    "mov     rcx, rax",
    "cmp     esi, eax",
    "jne     0xc5d40",
    "mov     eax, dword [rel data_168ef0]",
    "test    rcx, rcx",
    "je      0xc625b",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax  {0x0}",
    "mov     qword [rbp-0x70 {var_78}], rcx",
    "mov     dword [rbp-0x68 {var_70}], edx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_168ef8], rcx",
    "jmp     0xc5b2d",
    "mov     eax, dword [rdx]",
    "add     rdx, 0x20",
    "add     ebx, 0x1",
    "test    eax, eax",
    "jle     0xc5ef8",
    "test    r15d, r15d",
    "jne     0xc5ea8",
    "mov     ebx, 0xffffffff",
    "jmp     0xc5d55",
    "mov     rdx, qword [rbp-0x68 {var_70_1}]",
    "mov     rsi, qword [rbp-0x70 {var_78}]",
    "mov     edi, ebx",
    "call    sub_bc500",
    "test    eax, eax",
    "js      0xc5fbc",
    "test    r13, r13",
    "je      0xc6006",
    "call    __errno_location",
    "movsxd  rbx, ebx",
    "mov     edi, dword [rax]",
    "shl     rbx, 0x5",
    "call    strerror",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_12197f]  {\"%s: cannot get limit: %s\"}",
    "mov     r12, rax",
    "lea     rax, [rel data_154f00]",
    "mov     rbx, qword [rax+rbx+0x10]",
    "test    r13, r13",
    "jne     0xc5d7e",
    "mov     rdx, qword [rbp-0x68 {var_70_1}]",
    "mov     rsi, qword [rbp-0x70 {var_78}]",
    "mov     edi, ebx",
    "call    sub_bc500",
    "test    eax, eax",
    "js      0xc5fbc",
    "mov     rdx, qword [rbp-0x68 {var_70_1}]",
    "mov     rsi, qword [rbp-0x70 {var_78}]",
    "mov     edi, ebx",
    "call    sub_bc500",
    "test    eax, eax",
    "js      0xc5fbc",
    "mov     r13d, 0x1",
    "jmp     0xc5ada",
    "movzx   eax, byte [r13]",
    "cmp     al, 0x68",
    "je      0xc5f70",
    "mov     r10d, dword [rbp-0x8c {var_94_1}]",
    "test    r10d, r10d",
    "jne     0xc6019",
    "mov     rsi, qword [rbp-0x60 {rlimits_4}]",
    "jmp     0xc5edc",
    "lea     rsi, [rel data_1219aa]  {\"hard\"}",
    "mov     rdi, r13",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xc5f30",
    "cmp     al, 0x73",
    "je      0xc5f96",
    "mov     rsi, qword [rbp-0x58 {rlimits_5}]",
    "xor     edx, edx  {0x0}",
    "cmp     r14d, 0x1",
    "mov     edi, ebx",
    "setg    dl",
    "call    sub_bc5b0",
    "jmp     0xc5e4a",
    "mov     rdi, r13",
    "call    sh_invalidnum",
    "mov     rdx, qword [rbp-0x58 {rlimits_5}]",
    "lea     r14, [rel data_154f00]",
    "movsxd  rbx, ebx",
    "jmp     0xc5dc3",
    "lea     rsi, [rel data_1219af]  {\"soft\"}",
    "mov     rdi, r13",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xc5f30",
    "cmp     al, 0x75",
    "jne     0xc6184",
    "mov     r14d, dword [rel data_168ef0]",
    "add     r12, 0x1",
    "cmp     r14d, r12d",
    "jle     0xc6178",
    "mov     rax, rbx",
    "shl     rax, 0x5",
    "mov     r13d, dword [r14+rax+0x4]",
    "cmp     r13d, 0xff",
    "jg      0xc6241",
    "mov     rdx, qword [rbp-0x60 {rlimits_4}]",
    "lea     r14, [rel data_154f00]",
    "movsxd  rbx, ebx",
    "jmp     0xc5dc3",
    "test    al, al",
    "jne     0xc5f02",
    "lea     rsi, [rel data_121686]  {\"unlimited\"}",
    "mov     rdi, r13",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xc5f30",
    "mov     r13d, dword [rbp-0x90 {var_98_1}]",
    "jmp     0xc5ada",
    "mov     rax, qword [rel data_168ef8]",
    "jmp     0xc5d20",
    "call    __errno_location",
    "mov     edi, 0x16",
    "mov     dword [rax], 0x16",
    "jmp     0xc6156",
    "lea     rsi, [rbp-0x50 {rlimits}]",
    "mov     edi, r13d",
    "mov     qword [rbp-0x80 {var_88_1}], rdx",
    "mov     qword [rbp-0x78 {var_80_1}], rsi {rlimits}",
    "call    getrlimit",
    "mov     rsi, qword [rbp-0x78 {var_80_1}]",
    "mov     rdx, qword [rbp-0x80 {var_88_1}]",
    "test    eax, eax",
    "js      0xc614f",
    "mov     rdx, r13",
    "jmp     0xc5f20",
    "nop     dword [rax]",
    "mov     rdx, 0xffffffffffffffff",
    "lea     r14, [rel data_154f00]",
    "movsxd  rbx, ebx",
    "mov     rdx, r12",
    "xor     ebx, ebx  {0x0}",
    "shl     rdx, 0x4",
    "add     rax, rdx",
    "lea     rdx, [rel data_154f20]",
    "mov     r13, qword [rax+0x8]",
    "mov     esi, dword [rax]",
    "mov     eax, 0x52",
    "jmp     0xc5d51",
    "call    strerror",
    "shl     rbx, 0x5",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1219b4]  {\"%s: cannot modify limit: %s\"}",
    "mov     rbx, qword [r14+rbx+0x10]",
    "mov     r12, rax",
    "jmp     0xc5fea",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "lea     rax, [rel current_user]",
    "mov     r9d, dword [rax+0x4]  {data_1584a4}",
    "test    r9d, r9d",
    "je      0xc5e1a",
    "sub     eax, 0x30",
    "cmp     al, 0x9",
    "jbe     0xc5f10",
    "mul     rsi",
    "mov     rdx, rax",
    "jno     0xc5dc3",
    "lea     rdx, [rel posixly_correct]",
    "cmp     dword [rdx], 0x1  {posixly_correct}",
    "sbb     rsi, rsi",
    "and     esi, 0x200",
    "add     rsi, 0x200",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "jmp     0xc5f38",
    "mov     ecx, dword [rbp-0x84 {var_8c_1}]",
    "test    ecx, ecx",
    "je      0xc5f60",
    "cmp     rdx, 0xffffffffffffffff",
    "je      0xc6124",
    "movzx   eax, byte [rdx+0x1]",
    "add     rdx, 0x1",
    "test    al, al",
    "je      0xc6190",
    "nop     word [rax+rax]",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f532[1]]  {\"limit\"}",
    "mov     qword [rbp-0x68 {var_70_3}], r13",
    "call    dcgettext",
    "mov     rdi, qword [rbp-0x68 {var_70_3}]",
    "mov     rsi, rax",
    "call    sh_erange",
    "jmp     0xc5f38",
    "mov     qword [rbp-0x48 {rlimits_1}], rdx",
    "jmp     0xc5e3a",
    "mov     eax, dword [rbp-0x88 {var_90_1}]",
    "mov     qword [rbp-0x50 {rlimits}], rdx",
    "test    eax, eax",
    "jne     0xc5f60",
    "mov     r8d, dword [rbp-0x88 {var_90_1}]",
    "test    r8d, r8d",
    "jne     0xc5f43",
    "mov     rdi, r13",
    "movsxd  rbx, ebx",
    "lea     r14, [rel data_154f00]",
    "call    string_to_rlimtype",
    "mov     rdx, rbx",
    "shl     rdx, 0x5",
    "movsxd  rsi, dword [r14+rdx+0x8]",
    "cmp     esi, 0xfffffffe",
    "jne     0xc61cd",
    "mov     edi, r13d",
    "call    setrlimit",
    "test    eax, eax",
    "js      0xc614f",
    "mov     edi, dword [rbp-0x84 {var_8c_1}]",
    "test    edi, edi",
    "je      0xc5f55",
    "mov     rax, qword [rbp-0x48 {rlimits_1}]",
    "cmp     rax, qword [rbp-0x50 {rlimits}]",
    "jae     0xc621e",
    "mov     rdx, 0xffffffffffffffff",
    "nop     dword [rax]",
    "mov     qword [rbp-0x50 {rlimits}], 0xffffffffffffffff",
    "mov     qword [rbp-0x50 {rlimits}], rax",
    "jmp     0xc5e3a",
    "mov     qword [rbp-0x50 {rlimits}], 0xffffffffffffffff",
    "jmp     0xc5e3a"
  ]
}
{
  "address": "0x67080",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x110",
    "lea     r12, [rel js]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "mov     eax, dword [r12+0x1c]",
    "test    eax, eax",
    "jne     0x670e0",
    "lea     r14, [rbp-0xb0]",
    "mov     r13d, edi",
    "lea     rbx, [rbp-0x130]",
    "mov     rdi, r14",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, r14",
    "call    sigaddset",
    "mov     rdi, rbx",
    "call    sigemptyset",
    "mov     rdx, rbx",
    "mov     rsi, r14",
    "xor     edi, edi",
    "call    sigprocmask",
    "movsxd  rdx, dword [r12+0x1c]",
    "test    r13d, r13d",
    "jne     0x67268",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x6732d",
    "test    edx, edx",
    "jle     0x67248",
    "test    edx, edx",
    "jle     0x672ec",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x110",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "xor     edx, edx",
    "mov     rsi, rbx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "jmp     0x670b5",
    "lea     rax, [rel interactive_shell]",
    "mov     r9d, dword [rax]",
    "lea     rax, [rel jobs]",
    "mov     rax, qword [rax]",
    "lea     rdi, [rax+rdx*8]",
    "jmp     0x67299",
    "cmp     qword [r12], 0x0",
    "jns     0x67248",
    "lea     r8, [rel jobs]",
    "xor     r13d, r13d",
    "mov     rax, qword [r8]",
    "lea     rdi, [rax+rdx*8]",
    "jmp     0x67151",
    "mov     rdx, qword [rax]",
    "test    rdx, rdx",
    "je      0x67290",
    "xor     r13d, r13d",
    "xor     r14d, r14d",
    "nop     dword [rax]",
    "mov     rdx, qword [rax]",
    "test    rdx, rdx",
    "je      0x67148",
    "add     rax, 0x8",
    "cmp     rdi, rax",
    "je      0x67248",
    "cmp     dword [rdx+0x14], 0x4",
    "jne     0x67290",
    "movsxd  rax, dword [r12+0x1c]",
    "test    eax, eax",
    "jle     0x67248",
    "add     rax, 0x8",
    "cmp     rax, rdi",
    "je      0x67190",
    "cmp     dword [rdx+0x14], 0x4",
    "jne     0x67148",
    "test    r9d, r9d",
    "je      0x672b8",
    "lea     r8, [rel jobs]",
    "jmp     0x671ae",
    "mov     r9, qword [r12]",
    "movsxd  r14, r13d",
    "test    r9, r9",
    "js      0x67300",
    "mov     rsi, qword [rdx+0x8]",
    "xor     ecx, ecx",
    "mov     rdx, rsi",
    "nop     dword [rax+rax]",
    "mov     r8, qword [rdx+0x8]",
    "mov     rcx, r8",
    "jmp     0x672cb",
    "or      dword [rdx+0x18], 0x2",
    "jmp     0x67290",
    "lea     rdx, [rel interactive_shell]",
    "mov     r10d, dword [rdx]",
    "mov     rdx, qword [r8]",
    "lea     r8, [rdx+rax*8]",
    "jmp     0x671d1",
    "xor     edi, edi",
    "call    set_maxchild",
    "mov     r9, qword [r12]",
    "cmp     r14, r9",
    "jle     0x67248",
    "cmp     r9, r14",
    "jge     0x67248",
    "mov     rdx, qword [rdx]",
    "add     ecx, 0x1",
    "cmp     rsi, rdx",
    "jne     0x67170",
    "add     rax, 0x8",
    "add     r13d, ecx",
    "cmp     rax, rdi",
    "jne     0x67151",
    "test    rcx, rcx",
    "je      0x320a0",
    "mov     rsi, qword [rdx]",
    "test    rsi, rsi",
    "je      0x671c8",
    "movsxd  rax, dword [r12+0x1c]",
    "nop     word [rax+rax]",
    "mov     eax, dword [0x8]",
    "ud2     ",
    "{ Does not return }",
    "mov     rsi, qword [rcx]",
    "cmp     r8, rsi",
    "jne     0x672c8",
    "add     rdx, 0x8",
    "cmp     r8, rdx",
    "je      0x67248",
    "cmp     dword [rsi+0x14], 0x4",
    "jne     0x671c8",
    "mov     rcx, rsi",
    "lea     rsi, [rel last_asynchronous_pid]",
    "mov     esi, dword [rsi]",
    "cmp     esi, dword [rcx+0x8]",
    "jne     0x672ac",
    "mov     rdi, qword [rsi+0x8]",
    "mov     rax, rdi",
    "test    r10d, r10d",
    "je      0x671f3",
    "jmp     0x67290",
    "test    rax, rax",
    "je      0x320a9",
    "jmp     0x67260",
    "mov     eax, dword [0x8]",
    "ud2     ",
    "{ Does not return }",
    "mov     rcx, qword [rax]",
    "cmp     rdi, rcx",
    "jne     0x671f0",
    "xor     ecx, ecx",
    "jmp     0x67220",
    "mov     rax, rcx",
    "lea     rcx, [rel last_asynchronous_pid]",
    "mov     ecx, dword [rcx]",
    "cmp     ecx, dword [rax+0x8]",
    "je      0x671c8",
    "mov     rax, qword [rax]",
    "add     ecx, 0x1",
    "cmp     rax, rdi",
    "jne     0x67220",
    "mov     rax, rdi",
    "xor     ecx, ecx",
    "nop     word [rax+rax]",
    "sub     r13d, ecx",
    "movsxd  rax, r13d",
    "cmp     r9, rax",
    "jge     0x67248",
    "add     rdx, 0x8",
    "or      dword [rsi+0x18], 0x2",
    "cmp     r8, rdx",
    "jne     0x671d1",
    "nop     dword [rax+rax]"
  ]
}
{
  "address": "0x702f0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "contain loop",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     r8, rdi",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rsi",
    "push    r14",
    "mov     r14d, edx",
    "push    r13",
    "and     r14d, 0x800",
    "push    r12",
    "mov     r12d, r14d",
    "push    rbx",
    "sub     rsp, 0x78",
    "mov     dword [rbp-0x84], edx",
    "movsxd  rbx, dword [rsi]",
    "add     rdi, rbx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x58], r8",
    "mov     qword [rbp-0x40], 0x0",
    "call    strlen",
    "lea     rdi, [rbx+rax]",
    "lea     rbx, [rax+0x1]",
    "mov     qword [rbp-0x80], rdi",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r8, qword [rbp-0x58]",
    "test    rax, rax",
    "mov     r14, rax",
    "je      0x7082b",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  r11, dword [r15]",
    "lea     rsi, [r8+r11]",
    "mov     r13, r11",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x7075c",
    "mov     byte [r14], 0x0",
    "jmp     0x703f0",
    "mov     dword [rbp-0x58], 0x0",
    "mov     r10, r14",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "mov     qword [rbp-0x60], r15",
    "xor     ebx, ebx",
    "mov     r14d, r11d",
    "mov     r15d, r12d",
    "nop     dword [rax+rax]",
    "mov     dword [r15], r13d",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x70826",
    "test    r15d, r15d",
    "jne     0x706f8",
    "cmp     cl, 0x5c",
    "je      0x70538",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x78",
    "mov     rax, r14",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     edi, dword [rbp-0x58]",
    "test    edi, edi",
    "je      0x70432",
    "cmp     cl, 0x22",
    "je      0x706e8",
    "add     r14d, 0x1",
    "mov     edx, 0x1",
    "movsxd  r11, r14d",
    "lea     rsi, [r8+r11]",
    "jmp     0x70463",
    "test    r9d, r9d",
    "jne     0x70488",
    "mov     byte [r12], 0x5c",
    "add     ebx, 0x1",
    "movsxd  r13, ebx",
    "lea     rdx, [rel sh_syntaxtab]",
    "movzx   eax, cl",
    "test    byte [rdx+rax*4], 0x40",
    "je      0x7043d",
    "test    r15d, r15d",
    "je      0x7043d",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "jne     0x703a0",
    "xor     r9d, r9d",
    "cmp     cl, 0x60",
    "mov     byte [r12], cl",
    "setne   r9b",
    "add     ebx, 0x1",
    "add     r14d, 0x1",
    "movsxd  r11, r14d",
    "movsxd  r12, ebx",
    "lea     rsi, [r8+r11]",
    "add     r12, r10",
    "jmp     0x70463",
    "cmp     cl, 0x60",
    "je      0x70720",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "movsxd  r11, r14d",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "jne     0x704e7",
    "add     r14d, 0x1",
    "add     ebx, 0x1",
    "mov     byte [r10+r13], cl",
    "xor     edx, edx",
    "movsxd  r11, r14d",
    "movsxd  r12, ebx",
    "lea     rsi, [r8+r11]",
    "add     r12, r10",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jg      0x704b0",
    "jmp     0x70432",
    "nop     dword [rax]",
    "movsxd  r13, ebx",
    "lea     r12, [r10+r13]",
    "test    edx, edx",
    "jne     0x70420",
    "mov     r15, qword [rbp-0x60]",
    "mov     r13d, r14d",
    "mov     r14, r10",
    "add     ebx, 0x1",
    "add     r14d, 0x1",
    "mov     byte [r12], 0x60",
    "mov     r9d, 0x1",
    "movsxd  r11, r14d",
    "movsxd  r12, ebx",
    "lea     rsi, [r8+r11]",
    "add     r12, r10",
    "jmp     0x70463",
    "cmp     cl, 0x24",
    "je      0x70550",
    "mov     r12d, 0x1",
    "nop     dword [rax]",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x70670",
    "lea     rax, [r8+r11+0x1]",
    "mov     qword [rbp-0x68], rax",
    "movzx   eax, byte [rax]",
    "cmp     al, 0x28",
    "je      0x70568",
    "cmp     cl, 0x22",
    "jne     0x7043d",
    "mov     rdx, qword [rbp-0x80]",
    "movsxd  r11, r14d",
    "mov     rax, qword [rbp-0x40]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     qword [rbp-0x90], r8",
    "sub     rdx, r11",
    "mov     qword [rbp-0x78], r10",
    "mov     dword [rbp-0x70], r9d",
    "mov     qword [rbp-0x68], r11",
    "mov     qword [rbp-0x98], rax",
    "call    mbrtowc",
    "mov     edx, 0x1",
    "mov     r11, qword [rbp-0x68]",
    "mov     r9d, dword [rbp-0x70]",
    "test    rax, rax",
    "mov     r10, qword [rbp-0x78]",
    "mov     r8, qword [rbp-0x90]",
    "cmovne  rdx, rax",
    "cmp     rax, 0xfffffffffffffffd",
    "mov     r12, rdx",
    "jbe     0x704f0",
    "movsxd  r11, r14d",
    "test    cl, cl",
    "js      0x70670",
    "lea     edi, [r14+0x2]",
    "mov     qword [rbp-0xa0], r10",
    "mov     dword [rbp-0x70], edi",
    "mov     dword [rbp-0x44], edi",
    "mov     qword [rbp-0x98], r11",
    "mov     dword [rbp-0x90], r9d",
    "cmp     al, 0x28",
    "je      0x7076e",
    "cmp     al, 0x7b",
    "jne     0x7043d",
    "test    r15d, r15d",
    "jne     0x70748",
    "lea     rsi, [r8+r11]",
    "mov     rdx, r12",
    "lea     rdi, [r10+r13]",
    "mov     dword [rbp-0x78], r9d",
    "mov     qword [rbp-0x70], r10",
    "add     r14d, r12d",
    "add     ebx, r12d",
    "mov     qword [rbp-0x68], r8",
    "movsxd  r12, ebx",
    "call    memcpy",
    "mov     r8, qword [rbp-0x68]",
    "mov     r10, qword [rbp-0x70]",
    "movsxd  r11, r14d",
    "mov     r9d, dword [rbp-0x78]",
    "xor     edx, edx",
    "lea     rsi, [r8+r11]",
    "add     r12, r10",
    "jmp     0x70463",
    "mov     rax, qword [rbp-0x98]",
    "mov     r12d, 0x1",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x704f0",
    "mov     edx, dword [rbp-0x84]",
    "mov     rdi, r8",
    "lea     rsi, [rbp-0x44]",
    "mov     qword [rbp-0x78], r8",
    "and     edx, 0x400",
    "call    extract_command_subst",
    "mov     r8, qword [rbp-0x78]",
    "mov     r9d, dword [rbp-0x90]",
    "mov     r11, qword [rbp-0x98]",
    "mov     r10, qword [rbp-0xa0]",
    "mov     rdi, rax",
    "jmp     0x705c2",
    "mov     rdi, r8",
    "lea     rsi, [rbp-0x44]",
    "xor     ecx, ecx",
    "mov     edx, 0x1",
    "mov     qword [rbp-0x78], r8",
    "call    sub_6daa0",
    "mov     r10, qword [rbp-0xa0]",
    "mov     r11, qword [rbp-0x98]",
    "mov     r9d, dword [rbp-0x90]",
    "mov     r8, qword [rbp-0x78]",
    "mov     rdi, rax",
    "add     r14d, 0x1",
    "xor     dword [rbp-0x58], 0x1",
    "movsxd  r11, r14d",
    "lea     rsi, [r8+r11]",
    "jmp     0x70463",
    "mov     byte [r12], 0x0",
    "mov     r13d, r14d",
    "mov     r15, qword [rbp-0x60]",
    "mov     r14, r10",
    "add     r13d, 0x1",
    "mov     rdx, qword [rbp-0x68]",
    "lea     eax, [rbx+0x1]",
    "mov     byte [r12], 0x24",
    "cdqe    ",
    "movzx   edx, byte [rdx]",
    "mov     byte [r10+rax], dl",
    "mov     edx, 0x1",
    "test    rdi, rdi",
    "je      0x707ee",
    "lea     rax, [rel no_longjmp_on_fatal_error]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x32127",
    "movzx   ecx, byte [rdi]",
    "test    cl, cl",
    "je      0x7081e",
    "movzx   eax, byte [0x0]",
    "ud2     ",
    "{ Does not return }",
    "lea     rdi, [r8+r11+0x2]",
    "xor     edx, edx",
    "jmp     0x705e5",
    "add     ebx, 0x2",
    "jmp     0x70615",
    "lea     eax, [rbx+0x3]",
    "mov     rsi, rdi",
    "cdqe    ",
    "sub     rsi, r13",
    "nop     dword [rax+rax]",
    "movsxd  r11, dword [rbp-0x44]",
    "movsxd  r12, ebx",
    "add     r14d, 0x1",
    "add     r12, r10",
    "lea     rsi, [r8+r11]",
    "mov     rax, r11",
    "movzx   ecx, byte [rsi]",
    "mov     byte [r12], cl",
    "cmp     r11d, r14d",
    "jle     0x70765",
    "mov     byte [r10+rax-0x1], cl",
    "mov     rbx, rax",
    "add     rax, 0x1",
    "movzx   ecx, byte [rsi+rax-0x3]",
    "test    cl, cl",
    "jne     0x70600",
    "mov     r14d, dword [rbp-0x70]",
    "jmp     0x7064f",
    "test    cl, cl",
    "je      0x7080b",
    "movsxd  r11, r14d",
    "lea     rsi, [r8+r11]",
    "test    edx, edx",
    "jne     0x707ae",
    "test    edx, edx",
    "jne     0x707ab",
    "add     ebx, 0x1",
    "lea     r14d, [r11+0x1]",
    "movsxd  r12, ebx",
    "add     r12, r10",
    "mov     qword [rbp-0x98], r8",
    "mov     qword [rbp-0x90], r10",
    "mov     qword [rbp-0x78], rsi",
    "mov     qword [rbp-0x70], r11",
    "mov     dword [rbp-0x68], r9d",
    "call    free",
    "mov     r9d, dword [rbp-0x68]",
    "mov     r11, qword [rbp-0x70]",
    "xor     edx, edx",
    "mov     rsi, qword [rbp-0x78]",
    "mov     r10, qword [rbp-0x90]",
    "mov     r8, qword [rbp-0x98]",
    "jmp     0x70463",
    "xor     r9d, r9d",
    "jmp     0x70463",
    "mov     r14d, eax",
    "mov     r15, qword [rbp-0x60]",
    "mov     r14, r10",
    "mov     r13d, r11d",
    "jmp     0x70478",
    "mov     byte [r12], 0x0",
    "jmp     0x703f0"
  ]
}
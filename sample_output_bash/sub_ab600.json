{
  "address": "0xab600",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "contain loop",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "lea     rax, [rel aliases]",
    "mov     qword [rbp-0x50], rdi",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xab748",
    "mov     rax, qword [rbp-0x50]",
    "mov     qword [rax+0x10], 0x0",
    "add     rsp, 0x28",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     eax, dword [rax+0xc]",
    "test    eax, eax",
    "je      0xab748",
    "call    sub_91440",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xab748",
    "xor     r14d, r14d",
    "cmp     qword [r15], 0x0",
    "mov     eax, 0x8",
    "je      0xab765",
    "mov     edi, 0x1",
    "call    strlist_create",
    "mov     qword [rbp-0x38], rax",
    "mov     rax, qword [rax]",
    "jmp     0xab705",
    "nop     word [rax+rax]",
    "mov     qword [rax], 0x0",
    "mov     rdx, qword [rbp-0x50]",
    "movd    xmm1, r14d",
    "mov     rdi, r15",
    "mov     rax, qword [rbp-0x38]",
    "pshufd  xmm0, xmm1, 0xe0",
    "movq    qword [rax+0x8], xmm0",
    "mov     qword [rdx+0x10], rax",
    "call    free",
    "add     rsp, 0x28",
    "mov     eax, 0x1",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r10, rax",
    "mov     r13d, r14d",
    "lea     rax, [rax+0x8]",
    "add     r14d, 0x1",
    "cmp     qword [r15+r10], 0x0",
    "jne     0xab660",
    "lea     edi, [r13+0x2]",
    "add     r13d, 0x1",
    "mov     qword [rbp-0x48], r10",
    "xor     r12d, r12d",
    "call    strlist_create",
    "movsxd  r13, r13d",
    "mov     r10, qword [rbp-0x48]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [r13*8]",
    "mov     qword [rbp-0x40], rax",
    "mov     rax, qword [rbp-0x38]",
    "mov     rax, qword [rax]",
    "mov     qword [rax+r12], rbx",
    "add     r12, 0x8",
    "cmp     qword [rbp-0x40], r12",
    "jne     0xab6a0",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x48], r10",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r10, qword [rbp-0x48]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0xab778",
    "mov     rax, qword [r15+r12]",
    "mov     rbx, qword [rax]",
    "test    rbx, rbx",
    "je      0xab6ed",
    "add     rax, r10",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "call    dcgettext",
    "mov     rdx, r13",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     rsi, rbx",
    "mov     rcx, r13",
    "mov     rdx, r13",
    "mov     qword [rbp-0x48], r10",
    "call    __memcpy_chk",
    "mov     r10, qword [rbp-0x48]",
    "mov     rbx, rax"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
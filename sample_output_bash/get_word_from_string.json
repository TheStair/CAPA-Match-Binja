{
  "address": "0x72320",
  "rules": [
    "hash data using murmur3/9fd798ad644d45268aaff0d2aba3b296/af60147b5efb49279ab0229b6297e392",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using RC4 KSA/89b7ba675fcb4f4eac2317f83c0a9436",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x148",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    rdi, rdi",
    "je      0x72798",
    "xor     r15d, r15d",
    "jmp     0x72619",
    "mov     r12, qword [rdi]",
    "mov     r13, rdi",
    "test    r12, r12",
    "je      0x72798",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x72860",
    "movsx   rbx, byte [r12]",
    "test    bl, bl",
    "je      0x72798",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x148",
    "mov     rax, r15",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r15, rsi",
    "mov     r9, rdx",
    "test    rsi, rsi",
    "je      0x723e0",
    "lea     rdx, [rbp-0x140]",
    "mov     ecx, 0x20",
    "mov     rax, rsi",
    "xor     r8d, r8d",
    "mov     rdi, rdx",
    "rep stosq qword [rdi]",
    "jmp     0x72412",
    "movzx   edx, byte [rsi]",
    "cmp     dl, 0x20",
    "je      0x72698",
    "lea     eax, [rbx-0x9]",
    "cmp     al, 0x1",
    "setbe   r14b",
    "cmp     bl, 0x20",
    "sete    al",
    "or      r14b, al",
    "je      0x727a0",
    "cmp     byte [rsi+0x1], 0x9",
    "je      0x727b0",
    "lea     rsi, [rbp-0x140]",
    "mov     ecx, 0x20",
    "xor     eax, eax",
    "xor     r8d, r8d",
    "mov     rdi, rsi",
    "rep stosq qword [rdi]",
    "test    dl, dl",
    "je      0x72445",
    "movzx   eax, byte [r12]",
    "mov     r14d, 0x1",
    "jmp     0x724a1",
    "cmp     byte [rbp+rbx-0x140], 0x0",
    "jne     0x72400",
    "cmp     byte [rsi+0x2], 0xa",
    "jne     0x726a2",
    "lea     rsi, [rbp-0x140]",
    "mov     ecx, 0x20",
    "xor     eax, eax",
    "mov     rdi, rsi",
    "rep stosq qword [rdi]",
    "jmp     0x723a2",
    "mov     qword [rbp-0x160], r9",
    "mov     dword [rbp-0x158], r8d",
    "call    __ctype_b_loc",
    "mov     r8d, dword [rbp-0x158]",
    "mov     r9, qword [rbp-0x160]",
    "mov     rdx, qword [rax]",
    "jmp     0x7248f",
    "xor     r10d, r10d",
    "test    al, al",
    "je      0x72788",
    "movsx   rbx, byte [r12+0x1]",
    "add     r12, 0x1",
    "test    bl, bl",
    "je      0x72788",
    "movzx   eax, byte [r12]",
    "jmp     0x724a1",
    "cmp     byte [rsi+0x3], 0x0",
    "lea     rsi, [rbp-0x140]",
    "mov     ecx, 0x20",
    "mov     rdi, rsi",
    "sete    r10b",
    "rep stosq qword [rdi]",
    "jmp     0x723a5",
    "movzx   eax, bl",
    "test    byte [rdx+rax*2+0x1], 0x20",
    "jne     0x72470",
    "cmp     dl, 0x1",
    "jne     0x723b0",
    "mov     qword [r13], r12",
    "test    r9, r9",
    "je      0x72798",
    "mov     dword [rbp-0x14c], 0x0",
    "cmp     byte [r12+0x1], 0x0",
    "mov     ebx, 0x1",
    "je      0x724d1",
    "mov     rsi, r15",
    "xor     r8d, r8d",
    "jmp     0x723d0",
    "movzx   ebx, bl",
    "cmp     byte [rbp+rbx-0x140], 0x0",
    "je      0x72499",
    "movzx   eax, byte [r12]",
    "xor     r14d, r14d",
    "mov     eax, r8d",
    "or      eax, 0x20",
    "cmp     dl, 0x7f",
    "cmove   r8d, eax",
    "or      r8d, 0x10",
    "jmp     0x723bd",
    "mov     qword [r9], r12",
    "nop     dword [rax]",
    "mov     rcx, r15",
    "mov     rsi, rbx",
    "mov     rdi, r12",
    "mov     qword [rbp-0x158], r9",
    "lea     rdx, [rbp-0x14c]",
    "call    sub_6d5e0",
    "movsxd  rdi, dword [rbp-0x14c]",
    "mov     r9, qword [rbp-0x158]",
    "mov     r15, rax",
    "mov     r10, rdi",
    "lea     rsi, [r12+rdi]",
    "test    r9, r9",
    "je      0x7250d",
    "cmp     byte [r12+0x2], 0x0",
    "mov     ebx, 0x2",
    "jne     0x72668",
    "movzx   ebx, byte [r12+0x1]",
    "add     r12, 0x1",
    "test    bl, bl",
    "je      0x72788",
    "test    r10b, r10b",
    "jne     0x72412",
    "add     rsi, 0x1",
    "mov     byte [rbp+rdx-0x140], 0x1",
    "movzx   edx, byte [rsi]",
    "test    dl, dl",
    "je      0x72440",
    "movzx   edx, byte [rsi]",
    "test    dl, dl",
    "je      0x72615",
    "mov     qword [r9], rsi",
    "mov     rdi, r12",
    "mov     qword [rbp-0x160], r9",
    "mov     dword [rbp-0x158], r8d",
    "call    strlen",
    "mov     r9, qword [rbp-0x160]",
    "mov     r8d, dword [rbp-0x158]",
    "mov     rbx, rax",
    "jmp     0x724d1",
    "mov     qword [r13], rsi",
    "test    r14b, r14b",
    "jne     0x72648",
    "lea     eax, [rdx-0x9]",
    "cmp     al, 0x1",
    "setbe   r8b",
    "cmp     dl, 0x20",
    "sete    al",
    "or      r8d, eax",
    "movzx   r8d, r8b",
    "jmp     0x7256e",
    "mov     qword [rbp-0x170], rsi",
    "mov     byte [rbp-0x161], dl",
    "mov     qword [rbp-0x160], rdi",
    "mov     dword [rbp-0x158], r10d",
    "call    __ctype_b_loc",
    "movzx   edx, byte [rbp-0x161]",
    "mov     rsi, qword [rbp-0x170]",
    "mov     rax, qword [rax]",
    "mov     rdi, qword [rbp-0x160]",
    "mov     r10d, dword [rbp-0x158]",
    "movzx   r8d, word [rax+rdx*2]",
    "shr     r8w, 0xd",
    "and     r8d, 0x1",
    "lea     rdx, [rel locale_mb_cur_max]",
    "lea     eax, [r10+0x1]",
    "mov     qword [rbp-0x148], 0x0",
    "cmp     dword [rdx], 0x1",
    "jle     0x725ac",
    "movsxd  rsi, eax",
    "mov     dword [rbp-0x14c], eax",
    "add     rsi, r12",
    "movzx   edx, byte [rsi]",
    "test    dl, dl",
    "je      0x72615",
    "movzx   ecx, byte [rsi]",
    "lea     rdx, [rel is_basic_table]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x727d9",
    "lea     ebx, [rax+0x1]",
    "movsxd  rbx, ebx",
    "jmp     0x725e4",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x72817",
    "add     eax, r10d",
    "lea     eax, [rdx-0x9]",
    "cmp     al, 0x1",
    "jbe     0x725f0",
    "sub     rbx, rdi",
    "lea     rcx, [rbp-0x148]",
    "xor     edi, edi",
    "mov     dword [rbp-0x160], r8d",
    "mov     rdx, rbx",
    "mov     dword [rbp-0x158], r10d",
    "call    mbrtowc",
    "mov     r10d, dword [rbp-0x158]",
    "mov     r8d, dword [rbp-0x160]",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0x727f5",
    "test    cl, cl",
    "js      0x72817",
    "movsx   rax, dl",
    "cmp     byte [rbp+rax-0x140], 0x0",
    "jne     0x725d0",
    "cmp     dl, 0x20",
    "jne     0x725fe",
    "lea     eax, [r10+0x1]",
    "jmp     0x725ac",
    "test    rax, rax",
    "je      0x727f5",
    "mov     eax, 0x1",
    "jne     0x725a9",
    "mov     dword [rbp-0x14c], ebx",
    "add     rbx, 0x1",
    "movzx   edx, byte [r12+rbx-0x1]",
    "test    dl, dl",
    "je      0x7260b",
    "and     r8d, 0x1",
    "test    r8b, r8b",
    "jne     0x726c0",
    "jmp     0x725a9",
    "movsxd  rsi, dword [rbp-0x14c]",
    "add     rsi, r12",
    "movzx   eax, dl",
    "cmp     byte [rbp+rax-0x140], 0x0",
    "je      0x7260b",
    "test    r14b, r14b",
    "jne     0x727fe",
    "lea     eax, [rdx-0x9]",
    "cmp     al, 0x1",
    "jbe     0x7260b",
    "mov     byte [rbp-0x158], dl",
    "call    __ctype_b_loc",
    "mov     rcx, rax",
    "movzx   eax, byte [rbp-0x158]",
    "mov     rdx, qword [rcx]",
    "test    byte [rdx+rax*2+0x1], 0x20",
    "jne     0x7260b",
    "cmp     dl, 0x20",
    "je      0x7260b",
    "movsxd  rsi, ebx",
    "mov     dword [rbp-0x14c], ebx",
    "add     rsi, r12",
    "movzx   edx, byte [rsi]",
    "test    dl, dl",
    "je      0x72615",
    "jmp     0x726fd",
    "add     ebx, 0x1",
    "movsxd  rbx, ebx",
    "jmp     0x72759",
    "test    r14b, r14b",
    "jne     0x72720",
    "lea     eax, [rdx-0x9]",
    "cmp     al, 0x1",
    "jbe     0x72730",
    "mov     byte [rbp-0x158], dl",
    "call    __ctype_b_loc",
    "mov     rcx, rax",
    "movzx   eax, byte [rbp-0x158]",
    "mov     rcx, qword [rcx]",
    "mov     rdx, rax",
    "test    byte [rcx+rax*2+0x1], 0x20",
    "jne     0x72730",
    "cmp     byte [rbp+rdx-0x140], 0x0",
    "je      0x7260b",
    "cmp     dl, 0x20",
    "jne     0x7260b",
    "jmp     0x7260b",
    "lea     rax, [rbx+0x1]",
    "mov     dword [rbp-0x14c], ebx",
    "movzx   edx, byte [r12+rax-0x1]",
    "test    dl, dl",
    "je      0x72857",
    "lea     rsi, [r12+rbx]",
    "jmp     0x72615",
    "mov     rbx, rax"
  ]
}
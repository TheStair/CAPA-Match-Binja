{
  "address": "0x111b20",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "mov     r12, qword [rdi]",
    "test    r12, r12",
    "je      0x111c18",
    "mov     edi, 0x8",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "jne     0x111bf5",
    "xor     eax, eax",
    "nop     word [rax+rax]",
    "mov     qword [r13], 0x0",
    "add     rsp, 0x8",
    "mov     rdi, r14",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     free",
    "mov     ebx, 0x8",
    "mov     rdx, rax",
    "add     rax, 0x1",
    "cmp     qword [r13+rax*8], 0x0",
    "jne     0x111b50",
    "lea     ebx, [rdx+0x2]",
    "movsxd  rbx, ebx",
    "shl     rbx, 0x3",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x111c2f",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rbx, r13",
    "xor     r15d, r15d",
    "jmp     0x111ba3",
    "mov     rdi, r12",
    "call    sub_8de00",
    "test    eax, eax",
    "jne     0x111b88",
    "mov     rdx, qword [rbx]",
    "mov     r12, qword [rbx+0x8]",
    "movsxd  rax, r15d",
    "add     rbx, 0x8",
    "add     r15d, 0x1",
    "mov     qword [r14+rax*8], rdx",
    "test    r12, r12",
    "je      0x111bc3",
    "mov     rdi, qword [rbx]",
    "add     rbx, 0x8",
    "call    free",
    "mov     r12, qword [rbx]",
    "test    r12, r12",
    "jne     0x111ba3",
    "movsxd  rax, r15d",
    "mov     qword [r14+rax*8], 0x0",
    "test    r15d, r15d",
    "je      0x111bf5",
    "mov     rdx, qword [r14]",
    "xor     eax, eax",
    "test    rdx, rdx",
    "je      0x111bf5",
    "nop     dword [rax]",
    "mov     qword [r13+rax], rdx",
    "add     rax, 0x8",
    "mov     rdx, qword [r14+rax]",
    "test    rdx, rdx",
    "jne     0x111be0",
    "add     r13, rax"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
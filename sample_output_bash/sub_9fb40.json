{
  "address": "0x9fb40",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], 0x0",
    "test    edi, edi",
    "js      0xa0072",
    "neg     edi",
    "call    sub_a0090",
    "jmp     0x9fc70",
    "lea     r12, [rel rl_end]",
    "lea     rax, [rel rl_point]",
    "movsxd  r9, dword [r12]",
    "mov     r15d, dword [rax]",
    "mov     rax, r9",
    "je      0x9fc64",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xa007e",
    "lea     rax, [rel rl_point]",
    "mov     dword [rax], r15d",
    "lea     rbx, [rbp-0x40]",
    "mov     qword [rbp-0x50], r9",
    "lea     r14d, [rdi-0x1]",
    "mov     qword [rbp-0x48], rbx",
    "nop     word [rax+rax]",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     r13, [rel rl_line_buffer]",
    "mov     esi, r15d",
    "mov     rdi, qword [r13]",
    "call    char_is_quoted",
    "mov     rdi, qword [r13]",
    "movsxd  rsi, r15d",
    "test    r15d, r15d",
    "jle     0x9fcc8",
    "mov     edx, dword [r12]",
    "movzx   eax, byte [rdi+rsi]",
    "cmp     edx, r15d",
    "jg      0x9fd2a",
    "test    eax, eax",
    "je      0x9fcc8",
    "lea     rax, [rdi+rsi]",
    "movzx   ecx, byte [rax]",
    "test    cl, cl",
    "je      0xa0058",
    "jmp     0x9fd70",
    "cmp     byte [rdi+rsi-0x1], 0x5c",
    "je      0x9fcc8",
    "lea     rax, [rel rl_point]",
    "mov     dword [rax], edx",
    "call    rl_ding",
    "jmp     0x9fc6e",
    "lea     rbx, [rel sh_syntaxtab]",
    "movzx   r8d, cl",
    "test    dword [rbx+r8*4], 0x2001",
    "je      0x9fea8",
    "cmp     edx, r15d",
    "je      0xa0058",
    "mov     dword [rbp-0x58], r14d",
    "lea     rbx, [rel locale_mb_cur_max]",
    "mov     r14d, r15d",
    "jmp     0x9fc3f",
    "xor     eax, eax",
    "cmp     r15d, edx",
    "je      0xa0058",
    "cmp     cl, 0x27",
    "je      0x9fdb0",
    "test    al, al",
    "je      0xa0058",
    "cmp     dword [rbx], 0x1",
    "jg      0x9fc00",
    "test    cl, cl",
    "je      0xa0058",
    "lea     esi, [r15+0x1]",
    "mov     ecx, 0x1",
    "lea     rdx, [rel data_120c73[4]]  {\"'\"}",
    "call    skip_to_delim",
    "mov     rdi, qword [r13]",
    "mov     r15d, eax",
    "jmp     0x9fd60",
    "cmp     cl, 0x5c",
    "jne     0x9fce0",
    "mov     edx, dword [r12]",
    "mov     rsi, qword [r13]",
    "movsxd  rdx, r14d",
    "lea     rdi, [rel is_basic_table]",
    "add     rsi, rdx",
    "movzx   ecx, byte [rsi]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x9fc98",
    "add     r14d, 0x1",
    "mov     edx, dword [r12]",
    "cmp     r15d, edx",
    "jl      0x9ff25",
    "mov     edx, dword [r12]",
    "cmp     edx, r15d",
    "jg      0x9fda0",
    "cmp     cl, 0x22",
    "je      0x9fdd0",
    "add     r15d, 0x1",
    "mov     eax, r14d",
    "sub     r14d, 0x1",
    "test    eax, eax",
    "je      0x9fc64",
    "nop     ",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x9fe70",
    "add     r14d, eax",
    "mov     rdi, qword [r13]",
    "mov     esi, r14d",
    "call    char_is_quoted",
    "test    eax, eax",
    "je      0x9fc4e",
    "mov     r15d, r14d",
    "mov     r14d, dword [rbp-0x58]",
    "mov     eax, r14d",
    "sub     r14d, 0x1",
    "test    eax, eax",
    "jne     0x9ff71",
    "movzx   eax, cl",
    "test    dword [rbx+rax*4], 0x2001",
    "jne     0x9ff48",
    "jmp     0x9fd85",
    "add     r15d, 0x1",
    "jmp     0x9fd1e",
    "movsxd  rax, r15d",
    "movzx   eax, byte [rdi+rax]",
    "lea     esi, [r15+0x1]",
    "mov     ecx, 0x1",
    "lea     rdx, [rel data_120b80]",
    "call    skip_to_delim",
    "mov     rdi, qword [r13]",
    "mov     r15d, eax",
    "jmp     0x9fd60",
    "lea     rdx, [rel locale_mb_cur_max]",
    "cmp     dword [rdx], 0x1",
    "jle     0x9fe08",
    "mov     eax, dword [r12]",
    "jmp     0x9fba8",
    "mov     rax, qword [rbp-0x50]",
    "mov     rcx, qword [rbp-0x48]",
    "xor     edi, edi",
    "mov     r15, qword [rbp-0x40]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0xa0040",
    "test    cl, cl",
    "js      0x9fe70",
    "cmp     edx, r15d",
    "je      0x9fd90",
    "cmp     cl, 0x27",
    "je      0x9ff90",
    "cmp     edx, r15d",
    "jne     0x9ff62",
    "movsxd  rsi, r15d",
    "cmp     r15d, edx",
    "jge     0x9fea0",
    "add     r15d, 0x1",
    "jmp     0x9fd1a",
    "mov     edx, ecx",
    "lea     r8, [rel is_basic_table]",
    "shr     dl, 0x5",
    "and     edx, 0x7",
    "mov     edx, dword [r8+rdx*4]",
    "shr     edx, cl",
    "and     edx, 0x1",
    "je      0x9fe18",
    "cmp     r15d, eax",
    "je      0x9fc64",
    "test    rax, rax",
    "jne     0x9fc26",
    "mov     qword [rbp-0x40], r15",
    "add     r14d, 0x1",
    "jmp     0x9fc29",
    "mov     eax, 0x1",
    "jne     0x9fc26",
    "lea     rax, [rel rl_point]",
    "mov     dword [rax], edx",
    "jmp     0x9fc6e",
    "mov     rcx, qword [r13]",
    "movsxd  rax, r15d",
    "cmp     byte [rcx+rax], 0x0",
    "je      0x9fd90",
    "lea     esi, [r15+0x1]",
    "mov     ecx, 0x1",
    "lea     rdx, [rel data_120c73[4]]  {\"'\"}",
    "call    skip_to_delim",
    "mov     r15d, eax",
    "jmp     0x9ff3f",
    "cmp     cl, 0x5c",
    "jne     0x9fed0",
    "movzx   ecx, byte [rdi+rsi]",
    "nop     dword [rax]",
    "mov     edx, dword [r12]",
    "lea     rdx, [rel locale_utf8locale]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "je      0x9fe32",
    "add     r15d, edx",
    "add     r14d, 0x1",
    "jmp     0x9fc48",
    "cmp     dword [r12], r14d",
    "jle     0x9fc4e",
    "add     r14d, 0x1",
    "jmp     0x9fc48",
    "mov     edx, dword [r12]",
    "cmp     edx, r15d",
    "jg      0x9ff80",
    "cmp     cl, 0x22",
    "je      0x9ffb0",
    "add     r15d, 0x1",
    "mov     rdi, qword [rbp-0x40]",
    "mov     rdx, qword [rbp-0x50]",
    "mov     rcx, qword [rbp-0x48]",
    "sub     rdx, rsi",
    "mov     qword [rbp-0x58], rdi",
    "mov     rsi, rax",
    "xor     edi, edi",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x9fdf8",
    "mov     edx, 0x1",
    "test    cl, cl",
    "jns     0x9fd17",
    "cmp     dword [r12], r14d",
    "jg      0x9fc2f",
    "add     r15d, 0x1",
    "jmp     0x9ff0d",
    "lea     esi, [r15+0x1]",
    "mov     ecx, 0x1",
    "lea     rdx, [rel data_120b80]",
    "call    skip_to_delim",
    "mov     r15d, eax",
    "jmp     0x9ff3f",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jle     0x9ffe0",
    "mov     rdi, qword [r13]",
    "test    rax, rax",
    "jne     0xa006b",
    "mov     rdi, qword [rbp-0x58]",
    "add     r15d, 0x1",
    "mov     qword [rbp-0x40], rdi",
    "mov     rdi, qword [r13]",
    "jmp     0x9fd1a",
    "cmp     r15d, edx",
    "jge     0x9ff48",
    "add     r15d, 0x1",
    "jmp     0x9ff09",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x9fff0",
    "mov     edx, eax",
    "jmp     0x9fd17",
    "nop     dword [rax]",
    "mov     rdi, qword [r13]",
    "movsxd  rsi, r15d",
    "movzx   ecx, byte [rdi+rsi]",
    "test    cl, cl",
    "je      0x9fd90",
    "mov     edx, dword [r12]",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xa000a",
    "add     r15d, eax",
    "mov     rdx, qword [rbp-0x50]",
    "mov     rax, qword [rbp-0x40]",
    "mov     rcx, qword [rbp-0x48]",
    "sub     rdx, rsi",
    "add     rsi, rdi",
    "xor     edi, edi",
    "mov     qword [rbp-0x58], rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x9ffd0",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x9ff06",
    "test    rax, rax",
    "jne     0x9ff06",
    "mov     rax, qword [rbp-0x58]",
    "add     r15d, 0x1",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x9ff09",
    "nop     dword [rax]"
  ]
}
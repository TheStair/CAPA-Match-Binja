{
  "address": "0x36d30",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "write file on Linux",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14d, edi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     rax, [rel prompt_string_pointer]",
    "lea     rdx, [rel ps2_prompt]",
    "mov     qword [rax], rdx",
    "lea     rax, [rel interactive]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0x36d7d",
    "lea     r12, [rel terminating_signal]",
    "xor     r13d, r13d",
    "xor     r15d, r15d",
    "nop     word [rax+rax]",
    "lea     rbx, [rel bash_input]",
    "mov     eax, dword [rbx]",
    "sub     eax, 0x1",
    "cmp     eax, 0x1",
    "jbe     0x3703f",
    "mov     r8d, dword [rel data_161100]",
    "mov     edi, dword [r12]",
    "test    r8d, r8d",
    "jne     0x36d98",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x36ee0",
    "lea     rax, [rel pushed_string_list]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x37086",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0x36da9",
    "lea     rbx, [rel bash_input]",
    "call    qword [rbx+0x18]",
    "mov     edx, eax",
    "test    eax, eax",
    "je      0x36d90",
    "call    sub_44ac0",
    "lea     rax, [rel no_line_editing]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "je      0x36d7d",
    "cmp     qword [rax+0x18], 0x0",
    "je      0x37086",
    "mov     eax, dword [r12]",
    "test    eax, eax",
    "jne     0x36dff",
    "cmp     eax, 0xffffffff",
    "je      0x36ef0",
    "lea     rax, [rel interactive]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "je      0x36d7d",
    "lea     rax, [rel no_line_editing]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x370bf",
    "lea     rax, [rel interactive]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x36f06",
    "mov     esi, dword [rel data_1616d0]",
    "lea     r8d, [r15+0x2]",
    "cmp     r8d, esi",
    "jge     0x36e18",
    "mov     eax, dword [rbx]",
    "sub     eax, 0x1",
    "cmp     eax, 0x1",
    "ja      0x36d7d",
    "mov     rbx, qword [rel stderr]",
    "mov     rdi, qword [rel data_160948]",
    "mov     rsi, qword [rbx]",
    "call    fputs",
    "mov     rdi, qword [rbx]",
    "call    fflush",
    "jmp     0x36d7d",
    "jmp     0x36d7d",
    "test    r15d, r15d",
    "je      0x37038",
    "cmp     dword [rbx], 0x2",
    "je      0x37020",
    "mov     eax, r15d",
    "mov     rdi, qword [rel data_1616c8]",
    "mov     dword [rbp-0x40], r8d",
    "sub     eax, esi",
    "mov     dword [rbp-0x3c], edx",
    "add     eax, 0x2",
    "and     eax, 0xffffff80",
    "lea     eax, [rsi+rax+0x80]",
    "mov     dword [rel data_1616d0], eax",
    "movsxd  r9, eax",
    "test    rdi, rdi",
    "je      0x36fe8",
    "test    r13d, r13d",
    "je      0x36e7a",
    "xor     esi, esi",
    "jmp     0x36f89",
    "mov     edx, 0xa",
    "jmp     0x36dc2",
    "mov     rax, qword [rel stdin]",
    "mov     rdi, qword [rax]",
    "call    clearerr",
    "test    r15d, r15d",
    "jne     0x36f0f",
    "mov     rdi, r9",
    "mov     qword [rbp-0x38], r9",
    "call    malloc",
    "mov     r8d, dword [rbp-0x40]",
    "mov     edx, dword [rbp-0x3c]",
    "mov     r9, qword [rbp-0x38]",
    "jmp     0x36e61",
    "mov     rsi, r9",
    "mov     qword [rbp-0x38], r9",
    "call    realloc",
    "mov     r9, qword [rbp-0x38]",
    "mov     edx, dword [rbp-0x3c]",
    "mov     r8d, dword [rbp-0x40]",
    "cmp     edx, 0x5c",
    "jne     0x36f20",
    "mov     rsi, qword [rel data_1616c8]",
    "movsxd  rax, r15d",
    "add     r15d, 0x1",
    "mov     byte [rsi+rax], dl",
    "cmp     edx, 0xa",
    "je      0x36f58",
    "add     rsp, 0x18",
    "mov     rax, rsi",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    rax, rax",
    "je      0x370e2",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "mov     qword [rbp-0x38], r9",
    "call    dcgettext",
    "mov     rdx, qword [rbp-0x38]",
    "lea     rsi, [rel data_11f045]  {\"xrealloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     qword [rel data_1616c8], rax",
    "test    r13d, r13d",
    "jne     0x36dda",
    "mov     rsi, qword [rel data_1616c8]",
    "movsxd  rax, r15d",
    "lea     edi, [r15+0x1]",
    "mov     ecx, edx",
    "add     rax, rsi",
    "test    r14d, r14d",
    "je      0x36f4a",
    "test    r14d, r14d",
    "je      0x36f20",
    "movsxd  rax, r15d",
    "mov     byte [rsi+rax], 0x0",
    "test    rsi, rsi",
    "je      0x37038",
    "mov     eax, dword [r12]",
    "xor     r13d, r13d",
    "test    eax, eax",
    "je      0x36d98",
    "mov     byte [rax], cl",
    "mov     r15d, edi",
    "cmp     edx, 0xa",
    "jne     0x36df4",
    "cmp     edx, 0x1",
    "je      0x37008",
    "mov     eax, dword [r12]",
    "test    eax, eax",
    "jne     0x36fa0",
    "lea     rax, [rel remember_on_history]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x36f89",
    "movsxd  rdi, edi",
    "mov     byte [rax], 0x1",
    "mov     r15d, r8d",
    "mov     byte [rsi+rdi], cl",
    "jmp     0x36d90",
    "cmp     edx, 0x7f",
    "je      0x37008",
    "mov     ecx, dword [rel data_161100]",
    "mov     edi, dword [r12]",
    "test    ecx, ecx",
    "je      0x36e0f",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x36fc3",
    "lea     rax, [rel parser_state]",
    "mov     eax, dword [rax]",
    "test    eax, 0x20000",
    "jne     0x37067",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x36ea9",
    "call    throw_to_top_level",
    "call    qword [rbx+0x18]",
    "mov     edi, eax",
    "cmp     eax, 0xa",
    "jne     0x36eb7",
    "call    qword [rbx+0x18]",
    "mov     edi, eax",
    "cmp     eax, 0xa",
    "je      0x36fd6",
    "lea     rax, [rel current_command_line_count]",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x38], rsi",
    "add     dword [rax], 0x1",
    "call    maybe_add_history",
    "mov     rsi, qword [rbp-0x38]",
    "jmp     0x36f89",
    "call    qword [rbx+0x20]",
    "mov     rdx, qword [rel data_1616c8]",
    "movsxd  rax, r15d",
    "mov     r13d, 0x1",
    "add     r15d, 0x1",
    "mov     byte [rdx+rax], 0x5c",
    "jmp     0x36d90",
    "lea     rax, [rel line_number]",
    "add     dword [rax], 0x1",
    "jmp     0x36d90"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
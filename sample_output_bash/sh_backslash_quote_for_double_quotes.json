{
  "address": "0xd7c50",
  "rules": [
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/4f0637c1ae9b445ca3ec93a4b4e0bb6d",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/2602c80a9b3846b9ae92e2e83b13e866",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/af1fc90a7adf4a2ea648cfac1c599984",
    "contain loop",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/bee29d5f30484915bb6e92fdf1038d2c",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/9710d9ee76a4466b954966f2a98c40ba",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x28",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], 0x0",
    "call    strlen",
    "mov     r12, rax",
    "add     rax, rbx",
    "lea     r12, [r12+r12+0x1]",
    "mov     qword [rbp-0x48], rax",
    "call    __ctype_get_mb_cur_max",
    "mov     rdi, r12",
    "mov     r14d, eax",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xd7e3b",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movzx   ecx, byte [rbx]",
    "mov     rax, r15",
    "test    cl, cl",
    "je      0xd7de0",
    "mov     byte [rax], 0x0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xd7e36",
    "lea     r8, [rel locale_utf8locale]",
    "lea     r13, [rel sh_syntaxtab]",
    "jmp     0xd7d14",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "mov     rax, r15",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "movzx   edx, cl",
    "mov     esi, dword [r8]",
    "lea     r12, [rax+0x1]",
    "test    byte [r13+rdx*4], 0x40",
    "jne     0xd7cd0",
    "cmp     cl, 0xa",
    "je      0xd7e08",
    "cmp     cl, 0x1",
    "je      0xd7d34",
    "mov     r12, rax",
    "jmp     0xd7cdc",
    "mov     byte [rax], 0x5c",
    "mov     byte [rax], 0x1",
    "test    esi, esi",
    "jne     0xd7cf8",
    "cmp     cl, 0x7f",
    "jne     0xd7e08",
    "test    esi, esi",
    "je      0xd7d3b",
    "cmp     r14d, 0x1",
    "jle     0xd7cf8",
    "test    cl, cl",
    "jns     0xd7cf8",
    "mov     rdx, rbx",
    "mov     byte [r12], cl",
    "lea     rax, [r12+0x1]",
    "add     rbx, 0x1",
    "movzx   ecx, byte [rdx+0x1]",
    "test    cl, cl",
    "je      0xd7de0",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "jne     0xd7cf8",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jg      0xd7e10",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jle     0xd7cf8",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "mov     ecx, 0x1",
    "test    al, 0x1",
    "jne     0xd7da1",
    "nop     dword [rax]",
    "mov     rdx, qword [rbp-0x48]",
    "mov     rax, qword [rbp-0x40]",
    "lea     rcx, [rbp-0x40]",
    "xor     edi, edi",
    "mov     rsi, rbx",
    "sub     rdx, rbx",
    "mov     qword [rbp-0x50], rax",
    "call    mbrtowc",
    "mov     ecx, 0x1",
    "test    rax, rax",
    "cmovne  rcx, rax",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0xd7da1",
    "mov     rdx, rcx",
    "mov     rsi, rbx",
    "mov     rdi, r12",
    "mov     qword [rbp-0x50], rcx",
    "call    memcpy",
    "mov     rcx, qword [rbp-0x50]",
    "lea     r8, [rel locale_utf8locale]",
    "lea     rdx, [rbx+rcx-0x1]",
    "lea     rax, [r12+rcx]",
    "add     rbx, rcx",
    "movzx   ecx, byte [rdx+0x1]",
    "test    cl, cl",
    "jne     0xd7d14",
    "jmp     0xd7d65",
    "mov     rax, qword [rbp-0x50]",
    "mov     ecx, 0x1",
    "mov     qword [rbp-0x40], rax",
    "nop     word [rax+rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x75c40",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "xor     r13d, r13d",
    "push    r12",
    "mov     r12d, esi",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x38",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], 0x0",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x75c8b",
    "movzx   ecx, byte [rbx]",
    "test    cl, cl",
    "je      0x75e6a",
    "mov     rdi, rbx",
    "call    strlen",
    "mov     r13, rax",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x75f48",
    "mov     rsi, rbx",
    "xor     r15d, r15d",
    "xor     r14d, r14d",
    "xor     edx, edx",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x75f43",
    "movsx   r15d, cl",
    "jmp     0x75db0",
    "jg      0x75d90",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jle     0x75e40",
    "cmp     cl, 0x7e",
    "je      0x75cd0",
    "cmp     cl, 0x1",
    "je      0x75cd0",
    "add     r14d, 0x1",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "jne     0x75df7",
    "mov     rdi, rbx",
    "mov     dword [rbp-0x48], 0x101000",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x75f5e",
    "cmp     cl, 0x7f",
    "je      0x75db0",
    "test    cl, cl",
    "jle     0x75db0",
    "cmp     cl, 0x27",
    "je      0x75ed8",
    "test    r15d, r15d",
    "je      0x75e6a",
    "add     r14d, eax",
    "jmp     0x75e44",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x75ee8",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, rbx",
    "mov     rdx, r13",
    "mov     rdi, r14",
    "call    __strcpy_chk",
    "xor     r8d, r8d",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "lea     rdi, [rbp-0x50]",
    "mov     esi, r12d",
    "mov     qword [rbp-0x50], r14",
    "call    sub_83630",
    "mov     rbx, rax",
    "lea     rax, [rel data_1619a0]",
    "cmp     rbx, rax",
    "lea     rax, [rel data_1619b0]",
    "je      0x75f1f",
    "cmp     cl, 0x5c",
    "je      0x75ed8",
    "cmp     cl, 0x22",
    "je      0x75ed8",
    "test    r12d, 0x100",
    "jne     0x75ec0",
    "movsxd  rdx, r14d",
    "lea     rsi, [rbx+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "jne     0x75ca1",
    "mov     rax, qword [rbp-0x40]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     qword [rbp-0x58], rax",
    "mov     rax, r13",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x75e38",
    "mov     eax, 0x1",
    "test    cl, cl",
    "js      0x75ee8",
    "xor     edx, edx",
    "xor     edi, edi",
    "cmp     rbx, rax",
    "mov     qword [rbp-0x50], rdx",
    "sete    dil",
    "lea     rdx, [rel last_command_exit_value]",
    "add     edi, 0x1",
    "mov     dword [rdx], 0x1",
    "call    sub_85e80",
    "{ Does not return }",
    "cmp     rbx, rax",
    "je      0x75f1f",
    "cmp     cl, 0x60",
    "je      0x75cd0",
    "cmp     cl, 0x24",
    "jne     0x75db0",
    "mov     rdi, rbx",
    "mov     esi, r12d",
    "call    string_quote_removal",
    "mov     rbx, rax",
    "jmp     0x75e10",
    "test    r12b, 0x3",
    "je      0x75ec0",
    "test    rax, rax",
    "jne     0x75df7",
    "mov     rax, qword [rbp-0x58]",
    "add     r14d, 0x1",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x75e44",
    "test    rbx, rbx",
    "je      0x75e00",
    "nop     ",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x75f43",
    "nop     dword [rax]",
    "xor     ebx, ebx",
    "mov     rdi, rbx",
    "call    sub_83470",
    "mov     rdi, rbx",
    "mov     r12, rax",
    "call    dispose_words",
    "test    r12, r12",
    "je      0x75e00",
    "add     rsp, 0x38",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "call    free",
    "mov     rdi, r12",
    "call    dequote_list",
    "mov     rdi, r12",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "call    string_list_internal",
    "mov     rdi, r12",
    "mov     rbx, rax",
    "call    dispose_words",
    "jmp     0x75e02",
    "mov     rdi, qword [rbp-0x50]",
    "test    rdi, rdi",
    "je      0x75e10"
  ]
}
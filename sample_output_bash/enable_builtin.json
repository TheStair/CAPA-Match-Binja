{
  "address": "0xb4d60",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "link function at runtime on Linux",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "PEB access/fd0dc33357ac4dfab7ffc937f75726c6",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {var_10}",
    "push    r14 {__saved_r14}",
    "lea     r14, [rel data_12132b]",
    "push    r13 {__saved_r13}",
    "lea     r13, [rel jump_table_13726c]",
    "push    r12 {__saved_r12}",
    "mov     r12, rdi",
    "push    rbx {__saved_rbx}",
    "xor     ebx, ebx  {0x0}",
    "sub     rsp, 0x38",
    "lea     rax, [rel loptend]",
    "mov     qword [rel data_168d30], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rax], 0x0  {loptend}",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rax], 0x0  {lcurrent}",
    "lea     r12, [rel restricted]",
    "lea     rax, [rel loptend]",
    "mov     edi, dword [r12]  {restricted}",
    "mov     r14, qword [rax]  {loptend}",
    "test    edi, edi",
    "je      0xb4f30",
    "cmp     eax, 0xffffff9d",
    "je      0xb4f20",
    "test    r14, r14",
    "jne     0xb5018",
    "test    bl, 0x6",
    "jne     0xb5105",
    "call    builtin_help",
    "jmp     0xb4ded",
    "sub     eax, 0x61",
    "cmp     eax, 0x12",
    "ja      0xb4de8",
    "test    bl, 0x10",
    "jne     0xb4f39",
    "mov     r12d, 0x3",
    "test    bl, 0x1",
    "je      0xb5068",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121073]  {\"restricted\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "mov     edx, 0x1",
    "jmp     0xb4df2",
    "test    r14, r14",
    "je      0xb4f39",
    "mov     edx, 0x102",
    "{Case 0x1-0x2, 0x4, 0x6-0xc, 0xe, 0x10-0x11}",
    "call    builtin_usage",
    "movsxd  rax, dword [r13+rax*4]",
    "add     rax, r13",
    "jmp     rax",
    "mov     edx, ebx",
    "and     edx, 0x4",
    "je      0xb5160",
    "xor     r12d, r12d  {0x0}",
    "test    bl, 0x8",
    "setne   r12b",
    "add     r12d, 0x1",
    "jmp     0xb4f48",
    "lea     r13, [rel num_shell_builtins]",
    "mov     eax, r12d",
    "or      eax, 0x4",
    "and     ebx, 0x20",
    "mov     esi, dword [r13]  {num_shell_builtins}",
    "cmovne  r12d, eax",
    "test    esi, esi",
    "jle     0xb5000",
    "add     rsp, 0x38",
    "mov     eax, edx",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {var_10}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "test    bl, 0x10",
    "jne     0xb4f39",
    "{Case 0x12}",
    "mov     rsi, r14  {data_12132b, \"adnpsf:\"}",
    "mov     rdi, r12",
    "or      ebx, 0x20",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "jne     0xb4dc9",
    "{Case 0xf}",
    "or      ebx, 0x10",
    "jmp     0xb4db9",
    "{Case 0xd}",
    "or      ebx, 0x8",
    "jmp     0xb4db9",
    "{Case 0x5}",
    "lea     rax, [rel list_optarg]",
    "or      ebx, 0x4",
    "mov     r15, qword [rax]  {list_optarg}",
    "jmp     0xb4db9",
    "{Case 0x3}",
    "or      ebx, 0x2",
    "jmp     0xb4db9",
    "{Case 0x0}",
    "or      ebx, 0x1",
    "jmp     0xb4db9",
    "test    bl, 0x2",
    "je      0xb4e58",
    "xor     esi, esi  {0x0}",
    "test    bl, 0x8",
    "mov     rdx, r15",
    "mov     rdi, r14",
    "setne   sil",
    "add     esi, 0x1",
    "mov     eax, esi",
    "or      eax, 0x4",
    "and     ebx, 0x20",
    "cmovne  esi, eax",
    "call    sub_b1e10",
    "xor     edx, edx  {0x0}",
    "test    eax, eax",
    "lea     rax, [rel it_builtins]",
    "setne   dl",
    "or      dword [rax], 0x2  {it_builtins}",
    "jmp     0xb4df2",
    "add     rsp, 0x38",
    "xor     edi, edi  {0x0}",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {var_10}",
    "pop     rbp {__saved_rbp}",
    "jmp     sh_chkwrite",
    "mov     r15d, r12d",
    "lea     r14, [rel shell_builtins]",
    "xor     ebx, ebx  {0x0}",
    "and     r15d, 0x4",
    "jmp     0xb4f9a",
    "mov     eax, ebx",
    "xor     edx, edx  {0x0}",
    "and     ebx, 0x8",
    "sar     eax, 0x3",
    "mov     dword [rbp-0x38 {var_40_1}], edx  {0x0}",
    "and     eax, 0x4",
    "or      eax, 0x9",
    "mov     dword [rbp-0x40 {var_48_1}], eax",
    "jmp     0xb4e96",
    "nop     dword [rax+rax]",
    "mov     rsi, r14  {data_12132b, \"adnpsf:\"}",
    "mov     rdi, r12",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xb4e20",
    "mov     dword [rbp-0x54 {var_5c_1}], edx",
    "nop     dword [rax]",
    "lea     rax, [rbx+rbx*2]",
    "shl     rax, 0x4",
    "add     rax, qword [r14]  {shell_builtins}",
    "cmp     qword [rax+0x8], 0x0",
    "je      0xb4f90",
    "mov     rax, qword [r14+0x8]",
    "mov     esi, 0x1",
    "mov     r13, qword [rax]",
    "mov     rdi, r13",
    "call    builtin_address_internal",
    "test    rax, rax",
    "je      0xb509b",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x40 {var_48}]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "mov     r12d, dword [rax+0x10]",
    "and     r12d, 0x4",
    "jne     0xb5356",
    "add     rbx, 0x1",
    "cmp     dword [r13], ebx",
    "jle     0xb5000  {num_shell_builtins}",
    "mov     edx, dword [rax+0x10]",
    "test    dl, 0x2",
    "jne     0xb4f90",
    "mov     r15, qword [r14]",
    "mov     qword [r14], 0x0",
    "mov     rdx, r13",
    "mov     rdi, r14",
    "mov     esi, dword [rbp-0x40 {var_48_1}]",
    "call    sub_b1e10",
    "mov     qword [r14], r15",
    "test    eax, eax",
    "lea     rax, [rel it_builtins]",
    "je      0xb50fa",
    "mov     edx, dword [rax+0x10]",
    "test    ebx, ebx",
    "jne     0xb4e70",
    "mov     r14, qword [r14]",
    "test    r14, r14",
    "jne     0xb5170",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_12134c]  {\"%s: not dynamically loaded\"}",
    "lea     r15, [rel num_shell_builtins]",
    "mov     r13, qword [rax+0x28]",
    "movsxd  rdx, dword [r15]  {num_shell_builtins}",
    "test    edx, edx",
    "jle     0xb51f4",
    "test    r15d, r15d",
    "je      0xb4f80",
    "or      dword [rax], 0x2  {it_builtins}",
    "mov     r14, r15",
    "jmp     0xb4e8d",
    "or      dword [rax], 0x2  {it_builtins}",
    "mov     rax, qword [r14+0x8]",
    "mov     edx, 0x5",
    "xor     edi, edi  {0x0}",
    "lea     rsi, [rel data_121057]  {\"%s: not a shell builtin\"}",
    "mov     r14, r15",
    "mov     r13, qword [rax]",
    "call    dcgettext",
    "mov     rdi, rax",
    "mov     rsi, r13",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "mov     dword [rbp-0x38 {var_40_1}], 0x1",
    "jmp     0xb4e8d",
    "and     edx, 0xfffffffe",
    "mov     ecx, dword [r12]  {restricted}",
    "test    ecx, ecx",
    "je      0xb4ecb",
    "mov     rax, qword [r14+0x8]",
    "mov     esi, 0x1",
    "mov     rax, qword [rax]",
    "mov     rdi, rax",
    "mov     qword [rbp-0x40 {var_48}], rax",
    "call    builtin_address_internal",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121057]  {\"%s: not a shell builtin\"}",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xb5362",
    "lea     rax, [rel it_builtins]",
    "mov     edx, dword [rbp-0x54 {var_5c_1}]",
    "or      dword [rax], 0x2  {it_builtins}",
    "jmp     0xb4df2",
    "mov     rdi, qword [rbp-0x40 {var_48}]",
    "call    strlen",
    "movsxd  r10, eax",
    "lea     rcx, [r10+0x11]",
    "mov     qword [rbp-0x50 {var_58_1}], r10",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x48 {var_50_1}], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x48 {var_50_1}]",
    "mov     r10, qword [rbp-0x50 {var_58_1}]",
    "test    rax, rax",
    "mov     qword [rbp-0x38 {var_40}], rax",
    "je      0xb5402",
    "lea     rax, [rel shell_builtins]",
    "lea     rcx, [rdx+rdx*2]",
    "shl     rcx, 0x4",
    "mov     rax, qword [rax]  {shell_builtins}",
    "add     rax, 0x28",
    "add     rcx, rax",
    "nop     dword [rax]",
    "test    r12b, 0x1",
    "jne     0xb4fd0",
    "test    dl, 0x8",
    "je      0xb4f90",
    "test    r14, r14",
    "je      0xb512c",
    "mov     edx, dword [rbp-0x38 {var_40_1}]",
    "jmp     0xb4df2",
    "or      edx, 0x1",
    "jmp     0xb4e73",
    "test    dl, 0x1",
    "je      0xb5134",
    "mov     rsi, rcx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, qword [rbp-0x40 {var_48}]",
    "mov     rdi, qword [rbp-0x38 {var_40}]",
    "mov     rdx, rcx",
    "mov     qword [rbp-0x50 {var_58_2}], r10",
    "mov     qword [rbp-0x48 {var_50_2}], rcx",
    "call    __strcpy_chk",
    "mov     r10, qword [rbp-0x50 {var_58_2}]",
    "mov     rcx, qword [rbp-0x48 {var_50_2}]",
    "lea     rsi, [rel data_121367]  {\"_builtin_unload\"}",
    "mov     rax, qword [rbp-0x38 {var_40}]",
    "mov     edx, 0x10",
    "cmp     r10, rcx",
    "cmovae  rcx, r10",
    "lea     rdi, [rax+r10]",
    "sub     rcx, r10",
    "call    __memcpy_chk",
    "mov     rsi, qword [rbp-0x38 {var_40}]",
    "mov     rdi, r13",
    "call    dlsym",
    "test    rax, rax",
    "je      0xb5283",
    "xor     edx, edx  {0x0}",
    "cmp     r13, qword [rax]",
    "sete    dl",
    "add     rax, 0x30",
    "add     r12d, edx",
    "cmp     rax, rcx",
    "jne     0xb51e0",
    "and     edx, 0x1",
    "jne     0xb5080",
    "and     edx, 0x1",
    "je      0xb4fdf",
    "test    r12b, 0x1",
    "jne     0xb4fd0",
    "mov     dword [rax+0x10], edx",
    "lea     rax, [rel it_enabled]",
    "mov     r14, qword [r14]",
    "or      dword [rax], 0x2  {it_enabled}",
    "lea     rax, [rel it_disabled]",
    "or      dword [rax], 0x2  {it_disabled}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121073]  {\"restricted\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "mov     dword [rbp-0x38 {var_40_1}], 0x1",
    "mov     r14, qword [r14]",
    "jmp     0xb4e8d",
    "mov     rdi, qword [rbp-0x38 {var_40}]",
    "call    free",
    "cmp     r12d, 0x1",
    "je      0xb5380",
    "mov     rdi, qword [rbp-0x40 {var_48}]",
    "call    rax",
    "mov     rdx, qword [rax]",
    "lea     rsi, [rel data_121333]  {\"enable %s\\n\"}",
    "mov     edi, 0x2",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "jmp     0xb4f90",
    "test    r12b, 0x2",
    "je      0xb4f90",
    "mov     rdx, qword [rax]",
    "lea     rsi, [rel data_12133e]  {\"enable -n %s\\n\"}",
    "mov     edi, 0x2",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "jmp     0xb4f90",
    "nop     dword [rax+rax]",
    "test    r12b, 0x2",
    "je      0xb4f90",
    "mov     rdi, r13",
    "call    dlclose",
    "test    eax, eax",
    "je      0xb5296",
    "lea     rax, [rel shell_builtins]",
    "mov     rcx, rbx",
    "mov     r12, qword [rax]  {shell_builtins}",
    "mov     qword [rbp-0x38 {var_40}], rax  {shell_builtins}",
    "mov     rax, 0xaaaaaaaaaaaaaaab",
    "sub     rcx, r12",
    "sar     rcx, 0x4",
    "imul    rcx, rax",
    "mov     eax, dword [r15]  {num_shell_builtins}",
    "lea     ebx, [rax+rax*2]",
    "shl     ebx, 0x4",
    "mov     qword [rbp-0x40 {var_48}], rcx",
    "movsxd  rbx, ebx",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x40 {var_48}]",
    "test    rax, rax",
    "mov     r13, rax",
    "je      0xb53e1",
    "jmp     0xb4f86",
    "call    dlerror",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121377]  {\"%s: cannot delete: %s\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x40 {var_48}]",
    "mov     rdx, rbx",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "jmp     0xb5377",
    "xor     eax, eax  {0x0}",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  rax, ecx",
    "lea     r9, [rax+rax*2]",
    "shl     r9, 0x4",
    "test    ecx, ecx",
    "jne     0xb53be",
    "mov     dword [rbp-0x54 {var_5c_1}], 0x1",
    "jmp     0xb5338",
    "mov     rdx, r9",
    "mov     rsi, r12",
    "mov     rdi, r13",
    "mov     qword [rbp-0x48 {var_50_3}], rcx",
    "mov     qword [rbp-0x40 {var_48}], r9",
    "call    memcpy",
    "mov     rcx, qword [rbp-0x48 {var_50_3}]",
    "mov     r9, qword [rbp-0x40 {var_48}]",
    "jmp     0xb52f7",
    "mov     ebx, dword [r15]  {num_shell_builtins}",
    "lea     rdi, [r13+r9]",
    "lea     rsi, [r12+r9+0x30]",
    "mov     eax, ebx",
    "sub     eax, ecx",
    "cdqe    ",
    "lea     rdx, [rax+rax*2]",
    "shl     rdx, 0x4",
    "call    memcpy",
    "cmp     r12, qword [rel data_157ea0]",
    "je      0xb532b  {data_157ea0}",
    "mov     rax, qword [rbp-0x38 {var_40}]  {shell_builtins}",
    "sub     ebx, 0x1",
    "mov     dword [r15], ebx  {num_shell_builtins}",
    "mov     qword [rax], r13  {shell_builtins}",
    "mov     rdi, r12",
    "call    free",
    "mov     ebx, dword [r15]  {num_shell_builtins}"
  ]
}
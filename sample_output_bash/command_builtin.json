{
  "address": "0xadf40",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "parse credit card information/1d34306844204a12acb9dfcb62369fd8",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "xor     r15d, r15d",
    "push    r14",
    "xor     r14d, r14d",
    "push    r13",
    "push    r12",
    "lea     r12, [rel data_12107e]",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x18",
    "lea     r13, [rel loptend]",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rel data_168d30], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [r13], 0x0",
    "mov     qword [rax], 0x0",
    "mov     r13, qword [r13]",
    "test    r13, r13",
    "je      0xae1af",
    "cmp     eax, 0x70",
    "je      0xae000",
    "xor     eax, eax",
    "jmp     0xadfda",
    "test    r15d, r15d",
    "jne     0xae0e0",
    "mov     r15d, 0x100",
    "jmp     0xadf97",
    "jg      0xadfc0",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rax, [rel restricted]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xae1e0",
    "test    r14d, r14d",
    "jne     0xae140",
    "mov     rsi, r12",
    "mov     rdi, rbx",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xae010",
    "cmp     eax, 0x76",
    "jne     0xadfd0",
    "cmp     eax, 0xffffff9d",
    "je      0xadff0",
    "mov     edx, 0x5",
    "lea     rsi, [rel 0x12106f]  {\"%s: restricted\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "lea     rsi, [rel data_11f753]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     eax, 0x1",
    "jmp     0xadfda",
    "test    r14d, r14d",
    "jne     0xae140",
    "or      r15d, r14d",
    "cmp     r14d, 0x4",
    "setne   r12b",
    "xor     ebx, ebx",
    "nop     dword [rax]",
    "lea     r12, [rel data_121082]  {\"command_builtin\"}",
    "mov     rdi, r12",
    "call    begin_unwind_frame",
    "call    make_bare_simple_command",
    "mov     rdi, r13",
    "mov     rbx, rax",
    "mov     r14, qword [rax+0x18]",
    "call    copy_word_list",
    "mov     rdx, qword [rbx+0x18]",
    "mov     ecx, 0x830",
    "mov     qword [r14+0x8], rax",
    "mov     eax, dword [rbx+0x4]",
    "mov     qword [rdx+0x10], 0x0",
    "call    builtin_usage",
    "mov     r14d, 0x4",
    "jmp     0xadf97",
    "call    builtin_help",
    "jmp     0xadfd5",
    "cmp     eax, 0x56",
    "jne     0xadfd0",
    "lea     r12, [rel data_121082]  {\"command_builtin\"}",
    "mov     rdi, r12",
    "call    begin_unwind_frame",
    "call    make_bare_simple_command",
    "mov     rdi, r13",
    "mov     rbx, rax",
    "mov     r14, qword [rax+0x18]",
    "call    copy_word_list",
    "mov     rdx, qword [rbx+0x18]",
    "mov     ecx, 0x4830",
    "mov     qword [r14+0x8], rax",
    "mov     eax, dword [rbx+0x4]",
    "mov     qword [rdx+0x10], 0x0",
    "jmp     0xae06a",
    "mov     r13, qword [r13]",
    "add     ebx, r14d",
    "test    r13, r13",
    "jne     0xae150",
    "test    r12b, r12b",
    "je      0xae197",
    "mov     edi, 0x20",
    "call    malloc",
    "test    rax, rax",
    "jne     0xae092",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "mov     eax, 0x102",
    "mov     r14d, 0x82",
    "jmp     0xadf97",
    "or      eax, ecx",
    "mov     dword [rbx+0x4], eax",
    "or      dword [rdx], ecx",
    "lea     rdx, [rel uwcache]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0xae1b6",
    "mov     rax, qword [r13+0x8]",
    "mov     esi, r15d",
    "mov     rdi, qword [rax]",
    "call    describe_command",
    "mov     r14d, eax",
    "test    eax, eax",
    "jne     0xae197",
    "xor     eax, eax",
    "test    ebx, ebx",
    "sete    al",
    "jmp     0xadfda",
    "mov     rax, qword [r13+0x8]",
    "lea     rsi, [rel data_11feba]  {\"%s: not found\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x38], rax",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x38]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     rdx, qword [rel data_161a50]",
    "mov     qword [rax+0x10], rbx",
    "mov     rdi, rbx",
    "mov     qword [rax], rdx",
    "lea     rdx, [rel dispose_command]",
    "mov     qword [rel data_161a50], rax",
    "mov     qword [rax+0x8], rdx",
    "call    execute_command",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0xadfda",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, r12",
    "mov     dword [rbp-0x38], eax",
    "call    sub_113ed0",
    "mov     eax, dword [rbp-0x38]",
    "jmp     0xadfda"
  ]
}
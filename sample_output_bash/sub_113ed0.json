{
  "address": "0x113ed0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rdi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "mov     rbx, qword [rel data_161a50]",
    "test    rbx, rbx",
    "je      0x113f84",
    "test    r14, r14",
    "jne     0x114018",
    "lea     r12, [rel uwcache]",
    "mov     r13, qword [rel data_136568]",
    "lea     r15, [rel sub_872f0]",
    "jmp     0x113f24",
    "lea     rsi, [rel data_134a40]  {\"unwind_frame_run: %s: frame not \u2026\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "add     rsp, 0x8",
    "mov     rsi, r14",
    "pop     rbx",
    "mov     rdi, rax",
    "pop     r12",
    "xor     eax, eax",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     internal_warning",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [rbx]",
    "mov     rdx, qword [rbx+0x8]",
    "mov     qword [rel data_161a50], rax",
    "test    rdx, rdx",
    "je      0x113fa0",
    "test    r14, r14",
    "je      0x113f48",
    "mov     rdi, qword [rbx+0x10]",
    "cmp     rdx, r15",
    "je      0x114000",
    "mov     eax, dword [r12+0x8]",
    "cmp     dword [r12+0xc], eax",
    "jge     0x113f10",
    "mov     rdi, qword [rbx+0x10]",
    "movzx   eax, byte [r14]",
    "cmp     byte [rdi], al",
    "jne     0x113f48",
    "movsxd  rdx, dword [rbx+0x18]",
    "lea     rsi, [rbx+0x1c]",
    "call    memcpy",
    "jmp     0x113f48",
    "xor     eax, eax",
    "call    rdx",
    "mov     rdi, rbx",
    "call    free",
    "mov     rbx, qword [rel data_161a50]",
    "test    rbx, rbx",
    "je      0x113f84",
    "mov     qword [rbx], r13",
    "mov     rdx, qword [r12]",
    "mov     qword [rbx+0x8], r13",
    "movsxd  rax, dword [r12+0xc]",
    "mov     qword [rbx+0x10], r13",
    "lea     ecx, [rax+0x1]",
    "mov     qword [rbx+0x18], r13",
    "mov     dword [r12+0xc], ecx",
    "mov     qword [rdx+rax*8], rbx",
    "mov     rbx, qword [rel data_161a50]",
    "test    rbx, rbx",
    "jne     0x113f24",
    "mov     rsi, r14",
    "call    strcmp",
    "test    eax, eax",
    "jne     0x113f48",
    "mov     eax, dword [r12+0x8]",
    "cmp     dword [r12+0xc], eax",
    "jge     0x114046",
    "add     rsp, 0x8",
    "mov     rdi, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     free",
    "mov     rax, qword [rel data_136568]",
    "mov     qword [rbx], rax",
    "mov     rdx, qword [r12]",
    "mov     qword [rbx+0x8], rax",
    "mov     qword [rbx+0x10], rax",
    "mov     qword [rbx+0x18], rax",
    "movsxd  rax, dword [r12+0xc]",
    "lea     ecx, [rax+0x1]",
    "mov     dword [r12+0xc], ecx",
    "mov     qword [rdx+rax*8], rbx",
    "jmp     0x113f8d"
  ]
}
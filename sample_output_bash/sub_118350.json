{
  "address": "0x118350",
  "rules": [
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r12",
    "push    rbx",
    "cmp     byte [rdi], 0x0",
    "je      0x1183a8",
    "xor     r12d, r12d",
    "test    sil, 0x3",
    "mov     eax, 0x8",
    "cmovne  esi, eax",
    "call    sub_111a00",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x1183a8",
    "mov     rax, r12",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "mov     rdi, rbx",
    "mov     esi, 0x1",
    "call    quote_string_for_globbing",
    "mov     rdi, rbx",
    "mov     r12, rax",
    "call    free",
    "mov     rbx, rax",
    "nop     dword [rax]",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "call    remove_quoted_nulls",
    "mov     rax, qword [rbx+0x8]",
    "mov     rbx, qword [rbx]",
    "and     dword [rax+0x8], 0xfffbffff",
    "test    rbx, rbx",
    "jne     0x118380",
    "jmp     0x1183ab",
    "mov     rdi, r12",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "call    string_list_internal",
    "mov     rdi, r12",
    "xor     r12d, r12d",
    "mov     rbx, rax",
    "call    dispose_words",
    "test    rbx, rbx",
    "je      0x1183e5"
  ]
}
{
  "address": "0x76160",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "encrypt data using RC4 KSA/89b7ba675fcb4f4eac2317f83c0a9436",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "encrypt data using RC4 KSA/fecfbd46989040ae9026d918c5fb6c78",
    "contain loop",
    "encrypt data using HC-128/9eb76807ea4d4876a9f0b139536472e4",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x58",
    "mov     dword [rbp-0x5c], esi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x68], rdi",
    "mov     qword [rbp-0x40], 0x0",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     qword [rbp-0x58], rax",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0x68]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x770c2",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsx   edx, byte [r9]",
    "xor     r14d, r14d",
    "mov     r10, r9",
    "xor     r12d, r12d",
    "mov     r8d, r14d",
    "mov     r13d, edx",
    "mov     r14d, edx",
    "test    edx, edx",
    "jne     0x76241",
    "cmp     r13b, 0x24",
    "je      0x762c0",
    "jmp     0x76d00",
    "lea     edx, [r8+0x1]",
    "movsxd  rax, edx",
    "lea     r10, [r9+rax]",
    "movsx   r14d, byte [r10]",
    "mov     r13d, r14d",
    "cmp     r14b, 0x27",
    "je      0x76470",
    "jle     0x761e0",
    "mov     r13, r15",
    "jmp     0x76443",
    "add     r8d, 0x2",
    "cmp     byte [r9+rax+0x1], 0x0",
    "jne     0x76538",
    "cmp     r14d, 0x22",
    "je      0x76470",
    "cmp     r13b, 0x1",
    "je      0x763e0",
    "cmp     r13b, 0x27",
    "je      0x76308",
    "mov     byte [r13], 0x0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x770bd",
    "cmp     r14d, 0x27",
    "je      0x76b98",
    "lea     rax, [r12+0x3]",
    "cmp     rax, rbx",
    "jae     0x76d10",
    "lea     rax, [r12+0x2]",
    "cmp     rax, rbx",
    "jae     0x76988",
    "lea     rdx, [rel locale_mb_cur_max]",
    "mov     eax, dword [rdx]",
    "add     eax, 0x2",
    "cdqe    ",
    "add     rax, r12",
    "cmp     rax, rbx",
    "jae     0x76620",
    "cmp     r13b, 0x22",
    "je      0x76308",
    "lea     r10d, [r8+0x1]",
    "mov     qword [rbp-0x68], r9",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdi, r9",
    "mov     dword [rbp-0x70], r10d",
    "mov     ecx, 0x400",
    "mov     edx, r10d",
    "cmp     r14d, 0x27",
    "je      0x76520",
    "cmp     r13b, 0x5c",
    "jne     0x761f4",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x58",
    "mov     rax, r15",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rsi, qword [rbp-0x58]",
    "mov     edx, r8d",
    "mov     rdi, r9",
    "mov     ecx, 0x400",
    "mov     dword [rbp-0x70], r8d",
    "mov     qword [rbp-0x68], r9",
    "call    sub_674e0",
    "mov     r8d, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x68]",
    "mov     dword [rbp-0x48], eax",
    "mov     r14d, eax",
    "cmp     eax, r8d",
    "jle     0x76c0c",
    "mov     rdi, r9",
    "lea     rsi, [rbp-0x48]",
    "mov     edx, 0x400",
    "mov     dword [rbp-0x48], r8d",
    "mov     dword [rbp-0x70], r8d",
    "mov     qword [rbp-0x68], r9",
    "call    sub_702f0",
    "mov     r14d, dword [rbp-0x48]",
    "mov     r8d, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x68]",
    "mov     r13, rax",
    "cmp     r14d, r8d",
    "jle     0x76a28",
    "mov     rdx, rax",
    "sub     rdx, rbx",
    "add     rbx, 0x10",
    "shr     rdx, 0x4",
    "and     edx, 0x1",
    "cmp     rax, rbx",
    "jb      0x76d41",
    "movsxd  r14, r8d",
    "lea     rax, [r12+0x1]",
    "mov     byte [r15+r12], 0x24",
    "add     r12, 0x2",
    "lea     r10, [r9+r14]",
    "mov     byte [r15+rax], r13b",
    "movsx   r14d, byte [r10]",
    "mov     r13d, r14d",
    "jmp     0x76238",
    "mov     rcx, rax",
    "sub     rcx, rbx",
    "add     rbx, 0x10",
    "shr     rcx, 0x4",
    "and     ecx, 0x1",
    "cmp     rax, rbx",
    "jb      0x769b9",
    "mov     byte [r15+r12], 0x24",
    "mov     r8d, edx",
    "add     r12, 0x1",
    "jmp     0x76238",
    "mov     rcx, rax",
    "sub     rcx, rbx",
    "add     rbx, 0x40",
    "shr     rcx, 0x6",
    "and     ecx, 0x1",
    "cmp     rax, rbx",
    "jb      0x76651",
    "mov     r11d, dword [rbp-0x5c]",
    "mov     r13, r12",
    "test    r11d, r11d",
    "je      0x76416",
    "lea     rdx, [rel locale_mb_cur_max]",
    "mov     esi, dword [rdx]",
    "lea     eax, [rsi+0x1]",
    "cdqe    ",
    "add     rax, r12",
    "cmp     rax, rbx",
    "jae     0x76820",
    "call    sub_674e0",
    "mov     r9, qword [rbp-0x68]",
    "mov     r10d, dword [rbp-0x70]",
    "mov     r8d, eax",
    "jmp     0x7633d",
    "call    sub_6f5f0",
    "mov     r10d, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x68]",
    "mov     r8d, eax",
    "lea     rdx, [rel locale_mb_cur_max]",
    "mov     eax, dword [rdx]",
    "add     eax, 0x2",
    "cdqe    ",
    "add     rax, r12",
    "cmp     rax, rbx",
    "jae     0x76770",
    "movsxd  r10, eax",
    "add     r10, r9",
    "cdqe    ",
    "lea     r10, [r9+rax]",
    "cmp     byte [r10], 0x0",
    "jne     0x76c12",
    "movsxd  r10, r14d",
    "add     r10, r9",
    "movsxd  rax, r14d",
    "lea     r10, [r9+rax]",
    "cmp     byte [r10], 0x0",
    "jne     0x76a2e",
    "mov     qword [rbp-0x70], r9",
    "mov     dword [rbp-0x68], r8d",
    "test    r15, r15",
    "je      0x76f4c",
    "test    rdx, rdx",
    "je      0x76d38",
    "test    r14d, r14d",
    "je      0x770dc",
    "mov     qword [rbp-0x78], r9",
    "mov     qword [rbp-0x70], r10",
    "mov     dword [rbp-0x68], edx",
    "test    r15, r15",
    "je      0x76b77",
    "test    rcx, rcx",
    "je      0x769b0",
    "mov     qword [rbp-0x80], r9",
    "mov     qword [rbp-0x78], r10",
    "mov     dword [rbp-0x70], r8d",
    "mov     qword [rbp-0x68], rdx",
    "test    r15, r15",
    "je      0x76c78",
    "test    rcx, rcx",
    "je      0x76648",
    "movsxd  r14, r8d",
    "lea     rsi, [r9+r14]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x76440",
    "movzx   eax, byte [r10]",
    "add     r8d, 0x1",
    "add     r13, 0x1",
    "mov     byte [r15+r12], al",
    "mov     rcx, rax",
    "sub     rcx, rbx",
    "add     rbx, 0x40",
    "shr     rcx, 0x6",
    "and     ecx, 0x1",
    "cmp     rax, rbx",
    "jb      0x76851",
    "movzx   ecx, byte [r10]",
    "cmp     esi, 0x1",
    "jg      0x764b8",
    "mov     eax, r8d",
    "mov     dword [rbp-0x48], r8d",
    "sub     eax, r10d",
    "lea     r14d, [rax-0x1]",
    "add     eax, 0x2",
    "cdqe    ",
    "mov     dword [rbp-0x44], r14d",
    "add     rax, r12",
    "cmp     rax, rbx",
    "jae     0x766d0",
    "mov     rdx, rax",
    "sub     rdx, rbx",
    "add     rbx, 0x40",
    "shr     rdx, 0x6",
    "and     edx, 0x1",
    "cmp     rax, rbx",
    "jb      0x76701",
    "mov     byte [r15+r12], r13b",
    "lea     r11, [r12+0x1]",
    "test    r14d, r14d",
    "jle     0x763b7",
    "mov     rcx, rax",
    "sub     rcx, rbx",
    "add     rbx, 0x40",
    "shr     rcx, 0x6",
    "and     ecx, 0x1",
    "cmp     rax, rbx",
    "jb      0x767a1",
    "lea     eax, [r8+0x1]",
    "movzx   ecx, byte [r10]",
    "lea     r13, [r12+0x1]",
    "cdqe    ",
    "lea     rsi, [r9+rax]",
    "mov     byte [r15+r12], cl",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x76440",
    "mov     rdi, qword [rbp-0x68]",
    "mov     qword [rbp-0x80], r9",
    "mov     qword [rbp-0x78], r10",
    "mov     dword [rbp-0x70], r8d",
    "call    free",
    "mov     rdi, r13",
    "call    strlen",
    "mov     r8d, dword [rbp-0x70]",
    "mov     r10, qword [rbp-0x78]",
    "mov     dword [rbp-0x44], eax",
    "movsxd  r14, eax",
    "add     eax, 0x1",
    "mov     r9, qword [rbp-0x80]",
    "cdqe    ",
    "add     rax, r12",
    "cmp     rax, rbx",
    "jae     0x76e08",
    "mov     rdi, r9",
    "mov     esi, r8d",
    "lea     edx, [r14-0x1]",
    "mov     qword [rbp-0x78], r10",
    "mov     qword [rbp-0x70], r9",
    "mov     dword [rbp-0x68], r8d",
    "call    substring",
    "mov     r8d, dword [rbp-0x68]",
    "mov     edx, r14d",
    "lea     rcx, [rbp-0x44]",
    "mov     r13, rax",
    "xor     esi, esi",
    "mov     rdi, rax",
    "sub     edx, r8d",
    "sub     edx, 0x1",
    "call    ansiexpand",
    "mov     rdi, r13",
    "mov     qword [rbp-0x68], rax",
    "call    free",
    "mov     rdi, qword [rbp-0x68]",
    "call    sh_single_quote",
    "mov     r9, qword [rbp-0x70]",
    "mov     r10, qword [rbp-0x78]",
    "mov     r8d, r14d",
    "mov     r13, rax",
    "jmp     0x76aac",
    "cmp     byte [r9+rax-0x1], 0x27",
    "je      0x76c12",
    "mov     rdi, qword [rbp-0x68]",
    "xor     edx, edx",
    "mov     esi, ecx",
    "mov     qword [rbp-0x78], r9",
    "mov     qword [rbp-0x70], r10",
    "call    sh_mkdoublequoted",
    "mov     r9, qword [rbp-0x78]",
    "mov     r10, qword [rbp-0x70]",
    "mov     r8d, r14d",
    "mov     r13, rax",
    "mov     edx, dword [rbp-0x80]",
    "sub     edx, 0x1",
    "cmp     edx, ecx",
    "jne     0x76de0",
    "mov     edx, r14d",
    "xor     ecx, ecx",
    "xor     esi, esi",
    "mov     rdi, r13",
    "sub     edx, r8d",
    "lea     r8, [rbp-0x44]",
    "mov     qword [rbp-0x78], r9",
    "mov     qword [rbp-0x70], r10",
    "mov     dword [rbp-0x80], edx",
    "call    locale_expand",
    "mov     rdi, r13",
    "mov     qword [rbp-0x68], rax",
    "call    free",
    "lea     rax, [rel singlequote_translations]",
    "mov     ecx, dword [rbp-0x44]",
    "mov     r10, qword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x76a89",
    "cmp     byte [r9+rax-0x1], 0x22",
    "je      0x76a2e",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0x70]",
    "mov     r8d, dword [rbp-0x68]",
    "mov     r15, rax",
    "jmp     0x76d68",
    "mov     rdi, r15",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r8d, dword [rbp-0x68]",
    "mov     r9, qword [rbp-0x70]",
    "mov     r15, rax",
    "add     rbx, 0x20",
    "cmp     rax, rbx",
    "jae     0x76d38",
    "add     rbx, 0x10",
    "cmp     rax, rbx",
    "jb      0x76d41",
    "lea     r13, [r15+r12]",
    "jmp     0x76443",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0x78]",
    "mov     r10, qword [rbp-0x70]",
    "mov     edx, dword [rbp-0x68]",
    "mov     r15, rax",
    "jmp     0x769e6",
    "mov     rdi, r15",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     edx, dword [rbp-0x68]",
    "mov     r10, qword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "mov     r15, rax",
    "add     rbx, 0x20",
    "cmp     rax, rbx",
    "jae     0x769b0",
    "add     rbx, 0x10",
    "cmp     rax, rbx",
    "jb      0x769b9",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0x80]",
    "mov     r10, qword [rbp-0x78]",
    "mov     r8d, dword [rbp-0x70]",
    "mov     rdx, qword [rbp-0x68]",
    "mov     r15, rax",
    "jmp     0x76688",
    "mov     rdi, r15",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     rdx, qword [rbp-0x68]",
    "mov     r8d, dword [rbp-0x70]",
    "mov     r10, qword [rbp-0x78]",
    "mov     r9, qword [rbp-0x80]",
    "mov     r15, rax",
    "sub     rbx, 0xffffffffffffff80",
    "cmp     rax, rbx",
    "jae     0x76648",
    "add     rbx, 0x40",
    "cmp     rax, rbx",
    "jb      0x76651",
    "add     r13, r15",
    "cmp     dword [rdx], 0x1",
    "jg      0x76900",
    "mov     qword [rbp-0x80], r9",
    "mov     qword [rbp-0x78], r10",
    "mov     dword [rbp-0x70], r8d",
    "mov     qword [rbp-0x68], rdx",
    "test    r15, r15",
    "je      0x76ca0",
    "test    rcx, rcx",
    "je      0x76848",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "je      0x765e0",
    "add     r8d, 0x1",
    "mov     byte [r15+r12], cl",
    "add     r12, 0x1",
    "movsxd  r14, r8d",
    "lea     r10, [r9+r14]",
    "movsx   r14d, byte [r10]",
    "mov     r13d, r14d",
    "nop     dword [rax]",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], r8d",
    "mov     dword [rbp-0x68], r10d",
    "test    r15, r15",
    "je      0x76ce0",
    "test    rdx, rdx",
    "je      0x766f8",
    "movsxd  r14, r8d",
    "cmp     r8d, r10d",
    "lea     r10, [r9+r14]",
    "jle     0x763ce",
    "cmp     rbx, r11",
    "mov     rcx, r11",
    "movsxd  rsi, r10d",
    "movsxd  r14, r14d",
    "cmovae  rcx, rbx",
    "lea     rdi, [r15+r11]",
    "add     rsi, r9",
    "mov     rdx, r14",
    "mov     dword [rbp-0x80], r8d",
    "sub     rcx, r12",
    "mov     dword [rbp-0x78], r10d",
    "sub     rcx, 0x1",
    "mov     qword [rbp-0x70], r9",
    "mov     qword [rbp-0x68], r11",
    "call    __strncpy_chk",
    "mov     r11, qword [rbp-0x68]",
    "mov     r8d, dword [rbp-0x80]",
    "mov     r10d, dword [rbp-0x78]",
    "mov     r9, qword [rbp-0x70]",
    "add     r11, r14",
    "mov     qword [rbp-0x80], r9",
    "mov     qword [rbp-0x78], r10",
    "mov     dword [rbp-0x70], r8d",
    "mov     qword [rbp-0x68], rdx",
    "test    r15, r15",
    "je      0x76cc0",
    "test    rcx, rcx",
    "je      0x76798",
    "cmp     dword [rdx], 0x1",
    "jg      0x768a0",
    "mov     rdx, rax",
    "sub     rdx, rbx",
    "sub     rbx, 0xffffffffffffff80",
    "shr     rdx, 0x7",
    "and     edx, 0x1",
    "cmp     rax, rbx",
    "jb      0x76e3c",
    "cmp     rbx, r12",
    "mov     rdx, r12",
    "lea     rdi, [r15+r12]",
    "mov     rsi, r13",
    "cmovae  rdx, rbx",
    "mov     qword [rbp-0x78], r9",
    "mov     qword [rbp-0x70], r10",
    "sub     rdx, r12",
    "mov     dword [rbp-0x68], r8d",
    "add     r12, r14",
    "call    __strcpy_chk",
    "mov     rdi, r13",
    "call    free",
    "mov     r10, qword [rbp-0x70]",
    "mov     r8d, dword [rbp-0x68]",
    "mov     r9, qword [rbp-0x78]",
    "movsx   r14d, byte [r10]",
    "mov     r13d, r14d",
    "jmp     0x76238",
    "lea     rax, [r12+0x3]",
    "cmp     rax, rbx",
    "jae     0x77008",
    "mov     rdi, qword [rbp-0x68]",
    "mov     qword [rbp-0x78], r9",
    "mov     qword [rbp-0x70], r10",
    "call    sh_single_quote",
    "mov     r10, qword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "mov     r8d, r14d",
    "mov     r13, rax",
    "jmp     0x76aac",
    "test    ecx, ecx",
    "jne     0x76da0",
    "lea     rax, [r12+0x3]",
    "cmp     rax, rbx",
    "jae     0x76f80",
    "test    r15, r15",
    "jne     0x7648e",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x70], r9",
    "mov     dword [rbp-0x68], r8d",
    "call    sub_a7f00",
    "{ Does not return }",
    "nop     dword [rax]",
    "test    r15, r15",
    "jne     0x762f4",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x78], r9",
    "mov     qword [rbp-0x70], r10",
    "mov     dword [rbp-0x68], edx",
    "call    sub_a7f00",
    "{ Does not return }",
    "nop     dword [rax]",
    "test    r15, r15",
    "jne     0x763fa",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x80], r9",
    "mov     qword [rbp-0x78], r10",
    "mov     dword [rbp-0x70], r8d",
    "mov     qword [rbp-0x68], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "nop     dword [rax]",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "jne     0x76931",
    "add     r8d, 0x1",
    "lea     r12, [r13+0x1]",
    "jmp     0x762a6",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0x80]",
    "mov     r10, qword [rbp-0x78]",
    "mov     r8d, dword [rbp-0x70]",
    "mov     rdx, qword [rbp-0x68]",
    "mov     r15, rax",
    "jmp     0x76888",
    "mov     rdi, r15",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     rdx, qword [rbp-0x68]",
    "mov     r8d, dword [rbp-0x70]",
    "mov     r10, qword [rbp-0x78]",
    "mov     r9, qword [rbp-0x80]",
    "mov     r15, rax",
    "sub     rbx, 0xffffffffffffff80",
    "cmp     rax, rbx",
    "jae     0x76848",
    "add     rbx, 0x40",
    "cmp     rax, rbx",
    "jb      0x76851",
    "lea     rax, [rel locale_utf8locale]",
    "mov     r13d, dword [rax]",
    "test    r13d, r13d",
    "je      0x76b38",
    "movsxd  r14, r8d",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0x78]",
    "mov     r8d, dword [rbp-0x70]",
    "mov     r10d, dword [rbp-0x68]",
    "mov     r15, rax",
    "jmp     0x76730",
    "mov     rdi, r15",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r10d, dword [rbp-0x68]",
    "mov     r8d, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "mov     r15, rax",
    "sub     rbx, 0xffffffffffffff80",
    "cmp     rax, rbx",
    "jae     0x766f8",
    "add     rbx, 0x40",
    "cmp     rax, rbx",
    "jb      0x76701",
    "movsx   r14d, byte [r10]",
    "mov     r12, r11",
    "mov     r13d, r14d",
    "jmp     0x76238",
    "cmp     byte [r9+r14-0x1], r13b",
    "je      0x76970",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0x80]",
    "mov     r10, qword [rbp-0x78]",
    "mov     r8d, dword [rbp-0x70]",
    "mov     rdx, qword [rbp-0x68]",
    "mov     r15, rax",
    "jmp     0x767d8",
    "mov     rdi, r15",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     rdx, qword [rbp-0x68]",
    "mov     r8d, dword [rbp-0x70]",
    "mov     r10, qword [rbp-0x78]",
    "mov     r9, qword [rbp-0x80]",
    "mov     r15, rax",
    "sub     rbx, 0xffffffffffffff80",
    "cmp     rax, rbx",
    "jae     0x76798",
    "add     rbx, 0x40",
    "cmp     rax, rbx",
    "jb      0x767a1",
    "mov     edx, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     dl, 0x5",
    "and     edx, 0x7",
    "mov     edx, dword [rdi+rdx*4]",
    "shr     edx, cl",
    "and     edx, 0x1",
    "jne     0x768d4",
    "add     r8d, 0x2",
    "add     r12, 0x2",
    "mov     qword [rbp-0x78], r9",
    "mov     qword [rbp-0x70], r10",
    "mov     dword [rbp-0x68], r8d",
    "test    r15, r15",
    "je      0x76f64",
    "test    rdx, rdx",
    "je      0x76e30",
    "mov     rdx, rax",
    "sub     rdx, rbx",
    "add     rbx, 0x10",
    "shr     rdx, 0x4",
    "and     edx, 0x1",
    "cmp     rax, rbx",
    "jb      0x77035",
    "movsxd  r14, r8d",
    "lea     rax, [r15+r12]",
    "mov     ecx, 0x2724",
    "add     r12, 0x2",
    "lea     r10, [r9+r14]",
    "mov     word [rax], cx",
    "movsx   r14d, byte [r10]",
    "mov     r13d, r14d",
    "jmp     0x76238",
    "mov     rax, qword [rbp-0x68]",
    "movzx   eax, byte [rax]",
    "cmp     byte [r13], al",
    "jne     0x76de0",
    "mov     rdx, rax",
    "sub     rdx, rbx",
    "add     rbx, 0x10",
    "shr     rdx, 0x4",
    "and     edx, 0x1",
    "cmp     rax, rbx",
    "jb      0x76fad",
    "lea     rax, [r15+r12]",
    "mov     edx, 0x2224",
    "mov     rdi, r13",
    "mov     qword [rbp-0x70], r9",
    "mov     word [rax], dx",
    "add     r12, 0x2",
    "mov     dword [rbp-0x68], r8d",
    "call    free",
    "movsxd  r14, dword [rbp-0x68]",
    "mov     r9, qword [rbp-0x70]",
    "lea     r10, [r9+r14]",
    "mov     r8, r14",
    "movsx   r14d, byte [r10]",
    "mov     r13d, r14d",
    "jmp     0x76238",
    "mov     r14d, 0x1",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x76eb0",
    "movsxd  r14, r8d",
    "mov     byte [r15+r13], cl",
    "lea     r10, [r9+r14]",
    "movsx   r14d, byte [r10]",
    "mov     r13d, r14d",
    "jmp     0x76238",
    "test    r15, r15",
    "je      0x770e5",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x80], r9",
    "mov     qword [rbp-0x78], r10",
    "mov     dword [rbp-0x70], r8d",
    "mov     qword [rbp-0x68], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     esi, dword [rdx]",
    "jmp     0x7620e",
    "nop     dword [rax]",
    "mov     rdx, qword [rbp-0x58]",
    "movsxd  r14, r8d",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     rsi, r10",
    "mov     qword [rbp-0x70], r9",
    "mov     r13, qword [rbp-0x40]",
    "sub     rdx, r14",
    "mov     dword [rbp-0x68], r8d",
    "call    mbrtowc",
    "mov     r8d, dword [rbp-0x68]",
    "mov     r9, qword [rbp-0x70]",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x76604",
    "test    cl, cl",
    "js      0x76b38",
    "test    r15, r15",
    "jne     0x76360",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], r8d",
    "mov     dword [rbp-0x68], r10d",
    "call    sub_a7f00",
    "{ Does not return }",
    "nop     dword [rax]",
    "mov     byte [r15+r11], r13b",
    "movsx   r14d, byte [r10]",
    "lea     r12, [r11+0x1]",
    "mov     r13d, r14d",
    "jmp     0x76238",
    "test    r15, r15",
    "jne     0x76273",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x80], r9",
    "mov     qword [rbp-0x78], r10",
    "mov     dword [rbp-0x70], r8d",
    "mov     qword [rbp-0x68], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "nop     dword [rax]",
    "mov     r12d, 0x1",
    "lea     rdx, [rel locale_utf8locale]",
    "mov     r12d, dword [rdx]",
    "test    r12d, r12d",
    "je      0x76efe",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0x78]",
    "mov     r10, qword [rbp-0x70]",
    "mov     r8d, dword [rbp-0x68]",
    "mov     r15, rax",
    "jmp     0x76e6b",
    "mov     rdi, r15",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r8d, dword [rbp-0x68]",
    "mov     r10, qword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "mov     r15, rax",
    "add     rbx, 0x100",
    "cmp     rax, rbx",
    "jae     0x76e30",
    "sub     rbx, 0xffffffffffffff80",
    "cmp     rax, rbx",
    "jb      0x76e3c",
    "mov     qword [rbp-0x70], r9",
    "mov     dword [rbp-0x68], r8d",
    "test    r15, r15",
    "je      0x770a8",
    "test    rdx, rdx",
    "je      0x7702c",
    "mov     rsi, qword [rbp-0x68]",
    "movsxd  rdx, ecx",
    "mov     rdi, r13",
    "mov     qword [rbp-0x80], r9",
    "mov     qword [rbp-0x78], r10",
    "mov     dword [rbp-0x70], ecx",
    "call    strncmp",
    "mov     ecx, dword [rbp-0x70]",
    "mov     r10, qword [rbp-0x78]",
    "test    eax, eax",
    "mov     r9, qword [rbp-0x80]",
    "je      0x76a89",
    "mov     qword [rbp-0x70], r9",
    "mov     dword [rbp-0x68], r8d",
    "test    r15, r15",
    "je      0x77090",
    "test    rdx, rdx",
    "je      0x76fa4",
    "mov     rdx, qword [rbp-0x58]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], r8d",
    "mov     r12, qword [rbp-0x40]",
    "sub     rdx, r14",
    "mov     qword [rbp-0x68], rsi",
    "mov     r14d, 0x1",
    "call    mbrtowc",
    "mov     rsi, qword [rbp-0x68]",
    "mov     r8d, dword [rbp-0x70]",
    "test    rax, rax",
    "mov     r9, qword [rbp-0x78]",
    "cmovne  r14, rax",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x76937",
    "test    cl, cl",
    "js      0x76eb0",
    "test    rax, rax",
    "mov     edx, 0x1",
    "cmovne  rdx, rax",
    "mov     r13, rdx",
    "jmp     0x764dd",
    "mov     qword [rbp-0x40], r13",
    "jmp     0x764d7",
    "setne   al",
    "movsxd  r14, r8d",
    "movzx   eax, al",
    "mov     r9, qword [rbp-0x70]",
    "movsxd  r14, r8d",
    "lea     r10, [r9+r14]",
    "movsx   r14d, byte [r10]",
    "mov     r13d, r14d",
    "jmp     0x76238",
    "mov     rdx, qword [rbp-0x58]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], r8d",
    "mov     r14, qword [rbp-0x40]",
    "mov     r12d, 0x1",
    "sub     rdx, rax",
    "mov     qword [rbp-0x68], rsi",
    "call    mbrtowc",
    "mov     rsi, qword [rbp-0x68]",
    "mov     r8d, dword [rbp-0x70]",
    "test    rax, rax",
    "mov     r9, qword [rbp-0x78]",
    "cmovne  r12, rax",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x768da",
    "test    cl, cl",
    "js      0x76efe",
    "test    r15, r15",
    "jne     0x76aec",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x78], r9",
    "mov     qword [rbp-0x70], r10",
    "mov     dword [rbp-0x68], r8d",
    "call    sub_a7f00",
    "{ Does not return }",
    "nop     dword [rax]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0x70]",
    "mov     r8d, dword [rbp-0x68]",
    "mov     r15, rax",
    "jmp     0x77058",
    "mov     rdi, r15",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r8d, dword [rbp-0x68]",
    "mov     r9, qword [rbp-0x70]",
    "mov     r15, rax",
    "add     rbx, 0x20",
    "cmp     rax, rbx",
    "jae     0x7702c",
    "add     rbx, 0x10",
    "cmp     rax, rbx",
    "jb      0x77035",
    "nop     word [rax+rax]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0x70]",
    "mov     r8d, dword [rbp-0x68]",
    "mov     r15, rax",
    "jmp     0x76fd4",
    "mov     rdi, r15",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r8d, dword [rbp-0x68]",
    "mov     r9, qword [rbp-0x70]",
    "mov     r15, rax",
    "add     rbx, 0x20",
    "cmp     rax, rbx",
    "jae     0x76fa4",
    "add     rbx, 0x10",
    "cmp     rax, rbx",
    "jb      0x76fad",
    "lea     rdi, [r15+r13]",
    "mov     rdx, r14",
    "mov     dword [rbp-0x68], r8d",
    "lea     r12, [r13+r14]",
    "mov     qword [rbp-0x70], r9",
    "call    memcpy",
    "mov     r8d, dword [rbp-0x68]",
    "add     r8d, r14d",
    "mov     qword [rbp-0x40], r12",
    "jmp     0x76931",
    "lea     rsi, [r9+r14]",
    "lea     rdi, [r15+r12]",
    "mov     rdx, r13",
    "mov     dword [rbp-0x70], r8d",
    "mov     qword [rbp-0x68], r9",
    "add     r12, r13",
    "call    memcpy",
    "mov     r8d, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x68]",
    "add     r8d, r13d",
    "movsxd  r14, r8d",
    "lea     r10, [r9+r14]",
    "movsx   r14d, byte [r10]",
    "mov     r13d, r14d",
    "jmp     0x76238",
    "mov     r13d, 0x1",
    "mov     rdx, r12",
    "lea     rdi, [r15+r13]",
    "mov     dword [rbp-0x68], r8d",
    "mov     qword [rbp-0x70], r9",
    "call    memcpy",
    "mov     r8d, dword [rbp-0x68]",
    "lea     r8d, [r8+r12+0x1]",
    "add     r12, r13",
    "jmp     0x76957",
    "mov     qword [rbp-0x40], r14",
    "jmp     0x768d4",
    "test    r15, r15",
    "jne     0x76be9",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x70], r9",
    "mov     dword [rbp-0x68], r8d",
    "call    sub_a7f00",
    "{ Does not return }",
    "test    r15, r15",
    "jne     0x765a2",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x70], r9",
    "mov     dword [rbp-0x68], r8d",
    "call    sub_a7f00",
    "{ Does not return }"
  ]
}
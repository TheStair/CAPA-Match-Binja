{
  "address": "0xbce20",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "mov     eax, esi",
    "mov     esi, dword [rdi+0x28]",
    "mov     rcx, rdx",
    "mov     edx, esi",
    "and     edx, 0x4",
    "test    eax, eax",
    "je      0xbce46",
    "mov     rax, rcx",
    "test    edx, edx",
    "je      0xbce5c",
    "lea     rax, [rel posixly_correct]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xbcf40",
    "test    sil, 0x40",
    "je      0xbce71",
    "mov     byte [rcx], 0x61",
    "mov     esi, dword [rdi+0x28]",
    "lea     rax, [rcx+0x1]",
    "mov     edx, 0x1",
    "mov     rax, rcx",
    "test    edx, edx",
    "je      0xbcf56",
    "test    sil, 0x8",
    "je      0xbce86",
    "add     edx, 0x1",
    "mov     byte [rax], 0x41",
    "mov     esi, dword [rdi+0x28]",
    "movsxd  rax, edx",
    "add     rax, rcx",
    "test    sil, 0x40",
    "je      0xbcf6b",
    "mov     byte [rcx], 0x61",
    "mov     esi, dword [rdi+0x28]",
    "lea     rax, [rcx+0x1]",
    "mov     edx, 0x1",
    "test    sil, 0x10",
    "je      0xbce9b",
    "add     edx, 0x1",
    "mov     byte [rax], 0x66",
    "mov     esi, dword [rdi+0x28]",
    "movsxd  rax, edx",
    "add     rax, rcx",
    "and     esi, 0x8",
    "je      0xbcf33",
    "add     edx, 0x1",
    "mov     byte [rax], 0x41",
    "mov     esi, dword [rdi+0x28]",
    "movsxd  rax, edx",
    "add     rax, rcx",
    "test    esi, 0x800",
    "je      0xbceb2",
    "add     edx, 0x1",
    "mov     byte [rax], 0x69",
    "mov     esi, dword [rdi+0x28]",
    "movsxd  rax, edx",
    "add     rax, rcx",
    "mov     byte [rax], 0x0",
    "mov     eax, edx",
    "retn    ",
    "add     edx, 0x1",
    "mov     byte [rax], 0x66",
    "movsxd  rax, edx",
    "add     rax, rcx",
    "mov     byte [rax], 0x0",
    "mov     eax, edx",
    "retn    ",
    "test    sil, 0x2",
    "je      0xbcec7",
    "add     edx, 0x1",
    "mov     byte [rax], 0x6e",
    "mov     esi, dword [rdi+0x28]",
    "movsxd  rax, edx",
    "add     rax, rcx",
    "test    sil, 0x80",
    "je      0xbcedc",
    "add     edx, 0x1",
    "mov     byte [rax], 0x72",
    "mov     esi, dword [rdi+0x28]",
    "movsxd  rax, edx",
    "add     rax, rcx",
    "test    sil, 0x1",
    "je      0xbcef1",
    "add     edx, 0x1",
    "mov     byte [rax], 0x74",
    "mov     esi, dword [rdi+0x28]",
    "movsxd  rax, edx",
    "add     rax, rcx",
    "test    esi, 0x400",
    "je      0xbcf08",
    "add     edx, 0x1",
    "mov     byte [rax], 0x78",
    "mov     esi, dword [rdi+0x28]",
    "movsxd  rax, edx",
    "add     rax, rcx",
    "test    esi, 0x200",
    "je      0xbcf1f",
    "add     edx, 0x1",
    "mov     byte [rax], 0x63",
    "mov     esi, dword [rdi+0x28]",
    "movsxd  rax, edx",
    "add     rax, rcx",
    "and     esi, 0x100",
    "je      0xbcf33",
    "add     edx, 0x1",
    "mov     byte [rax], 0x6c",
    "mov     esi, dword [rdi+0x28]",
    "movsxd  rax, edx",
    "add     rax, rcx",
    "add     edx, 0x1",
    "mov     byte [rax], 0x75",
    "movsxd  rax, edx",
    "add     rax, rcx"
  ]
}
{
  "address": "0x360a0",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "movzx   r12d, byte [rdi]",
    "cmp     r12b, 0x2f",
    "je      0x36180",
    "cmp     byte [rdi+0x1], 0x0",
    "je      0x36199",
    "mov     esi, 0x2f",
    "call    strrchr",
    "test    rax, rax",
    "je      0x360da",
    "lea     r13, [rel restricted]",
    "mov     r12d, dword [r13]",
    "test    r12d, r12d",
    "jne     0x36123",
    "mov     esi, 0x2f",
    "call    strrchr",
    "test    rax, rax",
    "jne     0x360d1",
    "lea     r13, [rel restricted]",
    "xor     eax, eax",
    "cmp     r12b, 0x2d",
    "sete    al",
    "mov     r12d, dword [r13]",
    "add     rbx, rax",
    "test    r12d, r12d",
    "jne     0x36123",
    "movzx   r12d, byte [rax+0x1]",
    "lea     rbx, [rax+0x1]",
    "lea     rdi, [rel data_121266]  {\"PATH\"}",
    "mov     r12d, 0x1",
    "call    set_var_read_only",
    "lea     rdi, [rel data_1200b3[8]]  {\"SHELL\"}",
    "call    set_var_read_only",
    "lea     rdi, [rel data_11f06c[5]]  {\"ENV\"}",
    "call    set_var_read_only",
    "lea     rdi, [rel data_11f06c]  {\"BASH_ENV\"}",
    "call    set_var_read_only",
    "lea     rdi, [rel data_11f075]  {\"HISTFILE\"}",
    "call    set_var_read_only",
    "mov     dword [r13], 0x1",
    "mov     eax, r12d",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "add     rsp, 0x8",
    "mov     eax, r12d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "cmp     byte [rbx], 0x72",
    "je      0x36110",
    "lea     rsi, [rel data_11f014[4]]  {\"rbash\"}",
    "mov     rdi, rbx",
    "call    strcmp",
    "test    eax, eax",
    "jne     0x360fb",
    "add     rsp, 0x8",
    "mov     eax, r12d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    "
  ]
}
{
  "address": "0x119e90",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rsi",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "mov     rdi, rsi",
    "push    rbx",
    "sub     rsp, 0x48",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    mbsmbchar",
    "test    rax, rax",
    "je      0x11a0c0",
    "mov     rdi, r12",
    "call    mbsmbchar",
    "test    rax, rax",
    "jne     0x119ecb",
    "movzx   eax, byte [r12]",
    "xor     r13d, r13d",
    "sub     eax, 0x21",
    "cmp     al, 0x1f",
    "ja      0x119ef2",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x11a1b0",
    "xor     eax, eax",
    "lea     rdi, [rbp-0x48]",
    "mov     rsi, r12",
    "mov     qword [rbp-0x40], 0x0",
    "mov     qword [rbp-0x48], 0x0",
    "call    sub_d4050",
    "cmp     rax, 0xffffffffffffffff",
    "je      0x11a0a8",
    "mov     edx, 0xc0000601",
    "bt      rdx, rax",
    "jae     0x119ef2",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x48",
    "mov     rsi, r14",
    "mov     rdi, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sub_11a1c0",
    "mov     rsi, r14",
    "mov     rdi, r12",
    "call    sub_11a1c0",
    "mov     r14, qword [rbp-0x48]",
    "mov     r13d, eax",
    "jmp     0x119f5d",
    "test    r14, r14",
    "je      0x11a0a0",
    "xor     r13d, r13d",
    "cmp     byte [r12+0x1], 0x28",
    "sete    r13b",
    "test    r14, r14",
    "jne     0x11a090",
    "mov     qword [rbp-0x40], 0x0",
    "xor     eax, eax",
    "lea     rdi, [rbp-0x40]",
    "mov     rsi, r14",
    "call    sub_d4050",
    "cmp     rax, 0xffffffffffffffff",
    "je      0x11a0a8",
    "mov     rdi, r14",
    "call    free",
    "jmp     0x119f66",
    "mov     rdi, qword [rbp-0x40]",
    "test    rdi, rdi",
    "je      0x119f74",
    "mov     rax, qword [rbp-0x40]",
    "mov     r14, qword [rbp-0x48]",
    "mov     qword [rbp-0x58], rax",
    "test    r13d, r13d",
    "jne     0x119fa0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x11a1b0",
    "call    free",
    "mov     eax, dword [r14]",
    "lea     r15, [r14+0x8]",
    "mov     rdi, r15",
    "mov     dword [rbp-0x64], eax",
    "call    wcslen",
    "lea     rax, [r15+rax*4]",
    "cmp     r15, rax",
    "je      0x11a190",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdi, r14",
    "xor     eax, eax",
    "call    sub_1103d0",
    "mov     r13d, eax",
    "add     rsp, 0x48",
    "mov     eax, r13d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "xor     r13d, r13d",
    "jmp     0x11a090",
    "xor     edx, edx",
    "mov     rsi, rax",
    "mov     rdi, r15",
    "mov     qword [rbp-0x60], rax",
    "call    sub_ca5a0",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x11a190",
    "cmp     qword [rbp-0x60], rax",
    "je      0x11a110",
    "mov     rax, qword [rbp-0x60]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x119fe6",
    "cmp     r15, r12",
    "je      0x11a069",
    "cmp     dword [rax-0x4], 0x29",
    "jne     0x119fe6",
    "mov     r10, r12",
    "nop     dword [rax+rax]",
    "mov     esi, 0x7c",
    "mov     rdi, r15",
    "call    wcschr",
    "test    rax, rax",
    "jne     0x119fe6",
    "mov     r13d, ebx",
    "jmp     0x11a090",
    "mov     eax, dword [rbp-0x64]",
    "cmp     eax, 0x2a",
    "je      0x11a168",
    "mov     r10, r15",
    "jmp     0x11a06c",
    "mov     eax, dword [r15]",
    "mov     r11d, dword [r10-0x4]",
    "xor     edx, edx",
    "sub     eax, 0x21",
    "cmp     eax, 0x1f",
    "ja      0x11a03c",
    "mov     dword [r12-0x4], 0x0",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdi, r15",
    "call    sub_1103d0",
    "mov     dword [r12-0x4], 0x29",
    "mov     r13d, eax",
    "jmp     0x11a090",
    "mov     eax, dword [r12]",
    "test    eax, eax",
    "je      0x11a090",
    "cmp     eax, 0x3f",
    "je      0x11a168",
    "cmp     qword [rbp-0x60], r10",
    "je      0x11a1a0",
    "mov     dword [r10-0x4], edx",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdi, r15",
    "xor     eax, eax",
    "call    sub_1103d0",
    "mov     dword [r10-0x4], r11d",
    "mov     ebx, eax",
    "test    eax, eax",
    "je      0x11a100",
    "mov     ecx, 0xc0000601",
    "bt      rcx, rax",
    "jae     0x11a03c",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdi, r12",
    "xor     eax, eax",
    "call    sub_1103d0",
    "mov     r13d, eax",
    "jmp     0x11a090",
    "nop     dword [rax+rax]",
    "xor     r13d, r13d",
    "jmp     0x119f5d",
    "cmp     r12, r10",
    "je      0x11a06c",
    "cmp     dword [r15+0x4], 0x28",
    "jne     0x11a03a",
    "mov     r15, r10",
    "cmp     r15, r12",
    "jne     0x119ff0",
    "xor     edx, edx",
    "mov     edx, 0x29",
    "cmp     r11d, 0x29",
    "je      0x11a03c",
    "mov     edx, 0x7c",
    "mov     rsi, r12",
    "mov     rdi, r15",
    "call    sub_ca5a0",
    "mov     r10, rax",
    "test    rax, rax",
    "je      0x11a1a8"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
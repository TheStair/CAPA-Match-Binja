{
  "address": "0x101120",
  "rules": [
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "contain loop",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r12",
    "push    rbx",
    "mov     ebx, edi",
    "mov     edi, 0x200",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x101217",
    "mov     esi, 0x200",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     esi, dword [rel data_16a50c]",
    "movsxd  rdx, dword [rel data_16a508]",
    "mov     byte [r12], bl",
    "cmp     esi, edx",
    "je      0x101210",
    "mov     ebx, 0x1",
    "jmp     0x1011c8",
    "lea     rax, [rel _rl_keymap]",
    "lea     rcx, [r12+0x1]",
    "mov     ebx, 0x1",
    "xor     r8d, r8d",
    "lea     r9, [rel data_16abe0]",
    "mov     r10, qword [rax]",
    "nop     word [rax+rax]",
    "mov     byte [r12+rbx], 0x0",
    "mov     rdi, r12",
    "call    rl_insert_text",
    "pop     rbx",
    "mov     rdi, r12",
    "pop     r12",
    "pop     rbp",
    "jmp     free",
    "movsxd  rbx, ebx",
    "mov     dword [rel data_16a508], edx",
    "call    _rl_unget_char",
    "mov     byte [r12+rbx], 0x0",
    "mov     rdi, r12",
    "call    rl_insert_text",
    "pop     rbx",
    "mov     rdi, r12",
    "pop     r12",
    "pop     rbp",
    "jmp     free",
    "lea     r11, [rel rl_insert]",
    "cmp     qword [rax+0x8], r11",
    "jne     0x1011e8",
    "mov     byte [rcx], dil",
    "add     ebx, 0x1",
    "add     rcx, 0x1",
    "cmp     edx, esi",
    "jne     0x101180",
    "lea     eax, [rdx+0x1]",
    "movzx   edi, byte [r9+rdx]",
    "cmp     eax, 0x1ff",
    "cmovg   eax, r8d",
    "movsxd  rdx, eax",
    "movzx   eax, dil",
    "shl     rax, 0x4",
    "add     rax, r10",
    "cmp     byte [rax], 0x0",
    "jne     0x1011e8",
    "mov     dword [rel data_16a508], edx",
    "movsxd  rbx, ebx"
  ]
}
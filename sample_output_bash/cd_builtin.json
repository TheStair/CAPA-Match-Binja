{
  "address": "0xb00b0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "contain loop",
    "check for kernel debugger via shared user data structure/47a8170337e74f7ca5a6c64253eb43bf",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121073]  {\"restricted\"}",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel restricted]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "jne     0xb01d0",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "lea     rax, [rel no_symbolic_links]",
    "mov     r12, rdi",
    "lea     r14, [rel loptend]",
    "mov     dword [rel data_168db0], 0x0",
    "mov     dword [rel data_168dac], 0x0",
    "lea     r13, [rel data_121244]",
    "mov     ebx, dword [rax]",
    "lea     rax, [rel lcurrent]",
    "mov     qword [r14], 0x0",
    "mov     qword [rel data_168d30], 0x0",
    "mov     qword [rax], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xb057f",
    "lea     rax, [rel cdable_vars]",
    "xor     r13d, r13d",
    "mov     r14, qword [r14]",
    "mov     esi, dword [rax]",
    "lea     rax, [rel interactive]",
    "mov     edi, dword [rax]",
    "test    esi, esi",
    "setne   r13b",
    "test    edi, edi",
    "je      0xb0247",
    "cmp     eax, 0x50",
    "je      0xb0200",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     edx, dword [rel data_168db0]",
    "test    edx, edx",
    "je      0xb025f",
    "lea     rax, [rel cdspelling]",
    "mov     ecx, dword [rax]",
    "xor     eax, eax",
    "test    ecx, ecx",
    "setne   al",
    "add     eax, eax",
    "or      r13d, eax",
    "mov     ebx, 0x1",
    "jmp     0xb0149",
    "jg      0xb01b0",
    "test    r14, r14",
    "je      0xb033a",
    "test    ebx, ebx",
    "jne     0xb025f",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xb0210",
    "cmp     eax, 0x65",
    "jne     0xb01f0",
    "cmp     eax, 0xffffff9d",
    "je      0xb0180",
    "lea     rdi, [rel data_11f154]  {\"HOME\"}",
    "call    find_variable",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xb01c1",
    "cmp     qword [r14], 0x0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120b45]  {\"too many arguments\"}",
    "jne     0xb01d0",
    "mov     dword [rel data_168db0], 0x0",
    "call    builtin_usage",
    "jmp     0xb0185",
    "mov     dword [rel data_168db0], 0x1",
    "jmp     0xb0149",
    "call    builtin_help",
    "cmp     eax, 0x4c",
    "jne     0xb01f0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121248]  {\"HOME not set\"}",
    "nop     dword [rax]",
    "call    get_variable_value",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xb01c1",
    "mov     rax, qword [r14+0x8]",
    "mov     r12, qword [rax]",
    "cmp     byte [r12], 0x2d",
    "jne     0xb0298",
    "mov     eax, 0x102",
    "xor     ebx, ebx",
    "jmp     0xb0149",
    "mov     esi, ebx",
    "mov     rdi, rax",
    "call    sub_11a5f0",
    "test    eax, eax",
    "je      0xb0301",
    "mov     rdi, r12",
    "call    absolute_pathname",
    "test    eax, eax",
    "jne     0xb02b5",
    "cmp     byte [r12+0x1], 0x0",
    "je      0xb041b",
    "call    __errno_location",
    "mov     rdi, r12",
    "mov     r13d, dword [rax]",
    "call    ansic_shouldquote",
    "test    eax, eax",
    "jne     0xb03c8",
    "mov     edi, ebx",
    "call    sub_aff40",
    "jmp     0xb018a",
    "mov     esi, ebx",
    "mov     rdi, r12",
    "call    sub_11a5f0",
    "test    eax, eax",
    "jne     0xb0371",
    "lea     rax, [rel privileged_mode]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xb0463",
    "lea     rdi, [rel data_11fb41]  {\"OLDPWD\"}",
    "call    find_variable",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xb0562",
    "test    r12, r12",
    "je      0xb0319",
    "mov     edi, r13d",
    "call    strerror",
    "mov     rsi, r12",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xb01e1",
    "test    r13b, 0x1",
    "jne     0xb037d",
    "lea     rdi, [rel 0x121264]  {\"CDPATH\"}",
    "call    find_variable",
    "test    rax, rax",
    "je      0xb0573",
    "mov     edx, 0x5",
    "lea     rsi, [rel 0x121255]  {\"OLDPWD not set\"}",
    "jmp     0xb01d0",
    "call    get_variable_value",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xb0562",
    "cmp     byte [r12], 0x0",
    "je      0xb0540",
    "mov     eax, 0x1",
    "jmp     0xb018a",
    "mov     rdi, r12",
    "call    find_variable",
    "test    rax, rax",
    "je      0xb02d1",
    "and     r13d, 0x2",
    "je      0xb0301",
    "mov     rax, qword [r14+0x8]",
    "mov     r12, qword [rax]",
    "jmp     0xb02b5",
    "mov     rdi, rax",
    "call    get_variable_value",
    "mov     qword [rbp-0x48], rax",
    "test    rax, rax",
    "mov     rax, qword [r14+0x8]",
    "mov     r12, qword [rax]",
    "je      0xb02b5",
    "mov     esi, ebx",
    "mov     rdi, rax",
    "call    sub_11a5f0",
    "test    eax, eax",
    "je      0xb0301",
    "mov     edi, r13d",
    "xor     ebx, ebx",
    "call    strerror",
    "xor     esi, esi",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xb040e",
    "xor     esi, esi",
    "mov     rdi, r12",
    "call    sub_d80c0",
    "mov     edi, r13d",
    "mov     rbx, rax",
    "call    strerror",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "cmp     rbx, r12",
    "je      0xb01e1",
    "mov     rdi, rax",
    "call    get_variable_value",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xb02d1",
    "mov     rdi, r12",
    "call    dirspell",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xb0301",
    "lea     rax, [rbp-0x3c]",
    "mov     dword [rbp-0x3c], 0x0",
    "mov     qword [rbp-0x50], rax",
    "jmp     0xb04b0",
    "mov     rdi, r12",
    "call    puts",
    "jmp     0xb0371",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0xb01e1",
    "mov     esi, ebx",
    "mov     rdi, rax",
    "call    sub_11a5f0",
    "test    eax, eax",
    "je      0xb02d1",
    "mov     rdi, rax",
    "mov     esi, ebx",
    "call    sub_11a5f0",
    "mov     rdi, r13",
    "test    eax, eax",
    "jne     0xb052e",
    "mov     rsi, qword [rbp-0x50]",
    "mov     rdi, qword [rbp-0x48]",
    "call    extract_colon_unit",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xb02b5",
    "mov     rdi, r14",
    "call    puts",
    "mov     edi, ebx",
    "call    sub_aff40",
    "jmp     0xb018a",
    "call    puts",
    "mov     rdi, r13",
    "call    free",
    "jmp     0xb0371",
    "call    free",
    "movzx   eax, byte [r15]",
    "mov     rsi, r12",
    "mov     edx, 0x1",
    "mov     rdi, r15",
    "mov     byte [rbp-0x51], al",
    "call    sh_makepath",
    "mov     rdi, r15",
    "mov     r14, rax",
    "call    free",
    "mov     esi, ebx",
    "mov     rdi, r14",
    "call    sub_11a5f0",
    "test    eax, eax",
    "je      0xb04a8",
    "mov     rdi, r14",
    "call    free",
    "cmp     byte [rbp-0x51], 0x0",
    "je      0xb051a",
    "mov     rdi, r14",
    "call    free",
    "mov     edi, ebx",
    "call    sub_aff40",
    "jmp     0xb018a",
    "mov     rdi, r14",
    "test    ebx, ebx",
    "jne     0xb0510",
    "test    rdi, rdi",
    "je      0xb051a",
    "lea     rax, [rel the_current_working_directory]",
    "mov     rdi, qword [rax]",
    "call    puts"
  ]
}
{
  "address": "0xcce40",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "write file on Linux",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rsi",
    "push    r14",
    "mov     r14, rdi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     dword [rbp-0x48], edx",
    "movzx   r13d, byte [rdi]",
    "mov     dword [rbp-0x50], ecx",
    "mov     dword [rbp-0x44], r8d",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    rsi, rsi",
    "lea     rax, [rel data_122e02]",
    "cmove   r15, rax",
    "cmp     r13b, 0x25",
    "je      0xcd1c0",
    "movzx   r13d, byte [rdi+0x1]",
    "add     r14, 0x1",
    "jmp     0xcce8c",
    "xor     ebx, ebx",
    "jmp     0xccea5",
    "movsx   r12d, r13b",
    "lea     rdi, [rel 0x121b5b]  {\"#'-+ 0\"}",
    "mov     esi, r12d",
    "call    strchr",
    "test    rax, rax",
    "jne     0xcce90",
    "cmp     r13b, 0x2d",
    "mov     eax, 0x1",
    "cmove   ebx, eax",
    "movzx   r13d, byte [r14+0x1]",
    "add     r14, 0x1",
    "cmp     r13b, 0x2a",
    "je      0xccff0",
    "mov     eax, dword [rbp-0x50]",
    "movzx   r13d, byte [r14+0x1]",
    "add     r14, 0x1",
    "test    eax, eax",
    "jns     0xccf24",
    "lea     eax, [r13-0x30]",
    "mov     dword [rbp-0x50], 0x0",
    "cmp     al, 0x9",
    "ja      0xccf24",
    "cmp     r13b, 0x2e",
    "je      0xcd1f8",
    "neg     eax",
    "mov     dword [rbp-0x50], eax",
    "cmp     r13b, 0x2e",
    "je      0xcd1ec",
    "movzx   r13d, byte [r14+0x1]",
    "sub     r12d, 0x30",
    "lea     rax, [r14+0x1]",
    "movsxd  r12, r12d",
    "lea     ecx, [r13-0x30]",
    "cmp     cl, 0x9",
    "ja      0xccf11",
    "movzx   eax, byte [r14+0x1]",
    "cmp     al, 0x2a",
    "je      0xcd291",
    "mov     eax, dword [rbp-0x48]",
    "mov     dword [rbp-0x44], eax",
    "mov     ebx, 0x1",
    "nop     dword [rax]",
    "mov     edx, dword [rbp-0x48]",
    "mov     r13d, dword [rbp-0x50]",
    "mov     eax, 0x0",
    "sub     r13d, edx",
    "mov     dword [rbp-0x44], edx",
    "cmovs   r13d, eax",
    "nop     dword [rax]",
    "mov     ecx, 0x7fffffff",
    "mov     r14, rax",
    "cmp     r12, rcx",
    "cmovbe  rcx, r12",
    "mov     qword [rbp-0x50], rcx",
    "nop     ",
    "mov     eax, dword [rbp-0x44]",
    "not     eax",
    "shr     eax, 0x1f",
    "jmp     0xcd219",
    "lea     edx, [rax-0x30]",
    "cmp     dl, 0x9",
    "jbe     0xcd238",
    "mov     r12d, dword [rbp-0x44]",
    "mov     ebx, r13d",
    "neg     ebx",
    "test    r12d, r12d",
    "jle     0xcd0e5",
    "test    eax, eax",
    "jle     0xcd2ab",
    "test    ebx, ebx",
    "je      0xcd186",
    "lea     r12, [rel terminating_signal]",
    "add     rax, 0x1",
    "lea     edx, [r13-0x30]",
    "lea     rcx, [r12+r12*4]",
    "movzx   r13d, byte [rax]",
    "movsx   rdx, dl",
    "lea     r12, [rdx+rcx*2]",
    "lea     ecx, [r13-0x30]",
    "cmp     cl, 0x9",
    "jbe     0xccef0",
    "mov     ecx, dword [rbp-0x48]",
    "cmp     dword [rbp-0x44], ecx",
    "jg      0xccf2e",
    "movsx   edx, al",
    "movzx   eax, byte [r14+0x2]",
    "lea     rcx, [r14+0x2]",
    "sub     edx, 0x30",
    "lea     esi, [rax-0x30]",
    "movsxd  rdx, edx",
    "cmp     sil, 0x9",
    "ja      0xcd277",
    "mov     dword [rbp-0x44], 0x0",
    "mov     eax, 0x1",
    "mov     r9d, dword [rbp-0x44]",
    "test    r9d, r9d",
    "jne     0xcd042",
    "lea     rax, [rbp-0x3a]",
    "movzx   r14d, word [rel data_136ab0[4]]  {\" \"}",
    "lea     r12, [rel terminating_signal]",
    "mov     qword [rbp-0x50], rax",
    "jmp     0xccf9c",
    "mov     rax, qword [rel stdout]",
    "mov     rdi, qword [rax]",
    "call    ferror",
    "neg     eax",
    "sbb     eax, eax",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xcd2bd",
    "movzx   r14d, word [rel data_136ab0[4]]  {\" \"}",
    "lea     r12, [rel terminating_signal]",
    "lea     r13, [rbp-0x3a]",
    "jmp     0xcd12a",
    "movsx   edi, byte [r15+r14]",
    "mov     r8d, dword [rel data_169030]",
    "mov     byte [rbp-0x39], 0x0",
    "add     qword [rel data_169010], 0x1",
    "mov     byte [rbp-0x3a], dil",
    "test    r8d, r8d",
    "jne     0xcd058",
    "test    al, al",
    "jne     0xccf34",
    "mov     eax, 0x7fffffff",
    "cmp     rdx, rax",
    "cmova   rdx, rax",
    "mov     eax, dword [rbp-0x44]",
    "cmp     eax, edx",
    "jle     0xcd29e",
    "nop     dword [rax+rax]",
    "jmp     0xcd186",
    "mov     r11d, dword [rel data_169030]",
    "add     qword [rel data_169010], 0x1",
    "mov     word [rbp-0x3a], r14w",
    "test    r11d, r11d",
    "jne     0xccf70",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     ecx, dword [rel data_169030]",
    "add     qword [rel data_169010], 0x1",
    "mov     word [rbp-0x3a], r14w",
    "test    ecx, ecx",
    "jne     0xcd108",
    "mov     rdi, r13",
    "call    sub_111fd0",
    "mov     eax, dword [r12]",
    "test    eax, eax",
    "jne     0xcd0b7",
    "mov     rax, qword [rel stdout]",
    "mov     rsi, qword [rax]",
    "call    putc",
    "mov     eax, dword [r12]",
    "test    eax, eax",
    "je      0xcd068",
    "mov     eax, dword [rbp-0x50]",
    "mov     ecx, dword [rbp-0x44]",
    "mov     r13d, 0x0",
    "sub     eax, ecx",
    "cmovns  r13d, eax",
    "test    ebx, ebx",
    "jne     0xcd030",
    "jmp     0xccf2e",
    "mov     dword [rbp-0x44], edx",
    "mov     eax, 0x1",
    "jmp     0xcd219",
    "cmp     eax, 0x7fffffff",
    "je      0xcd29e",
    "sub     eax, 0x30",
    "lea     rdx, [rdx+rdx*4]",
    "add     rcx, 0x1",
    "movsx   rax, al",
    "lea     rdx, [rax+rdx*2]",
    "movzx   eax, byte [rcx]",
    "lea     esi, [rax-0x30]",
    "cmp     sil, 0x9",
    "jbe     0xcd258",
    "mov     rdi, qword [rbp-0x50]",
    "call    sub_111fd0",
    "mov     eax, dword [r12]",
    "test    eax, eax",
    "jne     0xccfd1",
    "mov     rax, qword [rel stdout]",
    "mov     edi, 0x20",
    "mov     rsi, qword [rax]",
    "call    putc",
    "mov     eax, dword [r12]",
    "test    eax, eax",
    "je      0xccf81",
    "mov     rdi, r13",
    "call    sub_111fd0",
    "mov     eax, dword [r12]",
    "test    eax, eax",
    "jne     0xcd15d",
    "mov     rax, qword [rel stdout]",
    "mov     edi, 0x20",
    "mov     rsi, qword [rax]",
    "call    putc",
    "mov     eax, dword [r12]",
    "test    eax, eax",
    "je      0xcd118",
    "mov     esi, dword [rel data_161100]",
    "mov     edi, dword [r12]",
    "test    esi, esi",
    "je      0xccfe1",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcd0d6",
    "mov     r10d, dword [rel data_161100]",
    "mov     edi, dword [r12]",
    "test    r10d, r10d",
    "jne     0xccf81",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcd1d0",
    "mov     edx, dword [rel data_161100]",
    "mov     edi, dword [r12]",
    "test    edx, edx",
    "je      0xccfe1",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcd17c",
    "call    sub_8e2b0",
    "{ Does not return }",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xcd075",
    "call    throw_to_top_level",
    "add     r14, 0x1",
    "cmp     dword [rbp-0x44], r14d",
    "jg      0xcd07f",
    "add     r14, 0x1",
    "cmp     dword [rbp-0x44], r14d",
    "jle     0xcd0e5",
    "call    throw_to_top_level",
    "sub     r13d, 0x1",
    "jne     0xccf9c",
    "sub     r13d, 0x1",
    "je      0xcd1df",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xcd125",
    "call    throw_to_top_level",
    "add     ebx, 0x1",
    "jne     0xcd12a",
    "add     ebx, 0x1",
    "je      0xcd186",
    "mov     eax, dword [rbp-0x44]",
    "test    eax, eax",
    "jg      0xcd049",
    "xor     r14d, r14d",
    "lea     r13, [rbp-0x3a]",
    "jmp     0xcd07f",
    "jmp     0xcd186"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
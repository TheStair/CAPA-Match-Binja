{
  "address": "0x71fa0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     qword [rbp-0x48], rsi",
    "test    rdi, rdi",
    "je      0x72130",
    "mov     qword [rbp-0x50], 0x0",
    "jmp     0x720bb",
    "mov     rax, qword [rdi+0x8]",
    "mov     r15, qword [rdi]",
    "mov     r12, rdi",
    "mov     rbx, qword [rax]",
    "mov     rdi, rbx",
    "call    strlen",
    "test    r15, r15",
    "je      0x72100",
    "mov     rax, qword [rbp-0x50]",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x72149",
    "mov     rdi, qword [rbp-0x48]",
    "test    rdi, rdi",
    "je      0x71ff2",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "add     rsp, 0x28",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "mov     byte [rbp-0x39], 0x0",
    "xor     r13d, r13d",
    "cmp     byte [rdi], 0x0",
    "jne     0x720d0",
    "mov     rax, qword [rax+0x8]",
    "mov     rdi, qword [rax]",
    "call    strlen",
    "add     rbx, rax",
    "test    r15, r15",
    "jne     0x72000",
    "cmp     byte [rdi+0x1], 0x0",
    "je      0x720f0",
    "lea     rax, [rbx+r13]",
    "cmp     r12, r15",
    "cmovne  rbx, rax",
    "mov     rax, r15",
    "mov     r15, qword [r15]",
    "add     rbx, 0x1",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     qword [rbp-0x50], rax",
    "test    rax, rax",
    "je      0x7215c",
    "mov     byte [rbp-0x39], 0x1",
    "mov     r13d, 0x1",
    "jmp     0x71ff9",
    "cmp     byte [rdi+0x2], 0x0",
    "je      0x7213a",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rbx, qword [rbp-0x50]",
    "mov     r15, r12",
    "jmp     0x72092",
    "mov     rax, r12",
    "xor     ebx, ebx",
    "jmp     0x72011",
    "mov     byte [rbp-0x39], 0x1",
    "mov     r13d, 0x2",
    "jmp     0x71ff9",
    "call    strlen",
    "test    rax, rax",
    "mov     r13, rax",
    "setne   byte [rbp-0x39]",
    "jmp     0x71ff9",
    "cmp     r12, r15",
    "je      0x72062",
    "mov     rax, qword [r15+0x8]",
    "mov     rsi, qword [rax]",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x38], rsi",
    "call    strlen",
    "mov     rsi, qword [rbp-0x38]",
    "mov     rdi, rbx",
    "mov     rdx, rax",
    "mov     r14, rax",
    "call    memcpy",
    "mov     r15, qword [r15]",
    "add     rbx, r14",
    "test    r15, r15",
    "je      0x720b8",
    "cmp     byte [rbp-0x39], 0x0",
    "je      0x72062",
    "mov     byte [rbx], 0x0",
    "cmp     r13, 0x1",
    "jne     0x72050",
    "mov     rsi, qword [rbp-0x48]",
    "mov     rdi, rbx",
    "mov     rdx, r13",
    "add     rbx, r13",
    "call    memcpy",
    "mov     rax, qword [rbp-0x48]",
    "add     rbx, 0x1",
    "movzx   eax, byte [rax]",
    "mov     byte [rbx-0x1], al",
    "jmp     0x72062"
  ]
}
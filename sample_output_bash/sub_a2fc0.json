{
  "address": "0xa2fc0",
  "rules": [
    "encrypt data using RC4 KSA/89b7ba675fcb4f4eac2317f83c0a9436",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     esi, 0x1",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "lea     rcx, [rbp-0x40]",
    "lea     rdx, [rbp-0x3c]",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     rbx, qword [rdi]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     dword [rbp-0x40], 0x0",
    "mov     rdi, rbx",
    "mov     dword [rbp-0x3c], 0x0",
    "call    sub_1138d0",
    "test    eax, eax",
    "je      0xa3029",
    "lea     rax, [rel rl_completion_quote_character]",
    "mov     rdi, rbx",
    "mov     r14d, 0x1",
    "mov     esi, dword [rax]",
    "call    sub_9ca20",
    "mov     r15, rax",
    "movzx   eax, byte [rax]",
    "cmp     byte [rbx], al",
    "jne     0xa305e",
    "mov     esi, 0x1",
    "mov     rdi, rbx",
    "mov     r13d, eax",
    "call    sub_9cf10",
    "test    eax, eax",
    "je      0xa3168",
    "mov     rdi, rbx",
    "call    free",
    "mov     qword [r12], r15",
    "mov     rsi, r15",
    "mov     rdi, rbx",
    "xor     r14d, r14d",
    "call    strcmp",
    "test    eax, eax",
    "setne   r14b",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xa33fb",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa33f6",
    "cmp     byte [r15], 0x2e",
    "jne     0xa308e",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r14",
    "mov     rsi, rbx",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "cmp     byte [r15], 0x0",
    "je      0xa32e8",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "mov     eax, r14d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rdi, [rel data_120c3e]  {\"symlink-hook\"}",
    "call    get_working_directory",
    "mov     rdi, r15",
    "mov     rsi, rax",
    "mov     r13, rax",
    "call    make_absolute",
    "mov     rdi, r13",
    "mov     rbx, rax",
    "call    free",
    "mov     esi, 0x3",
    "mov     rdi, rbx",
    "call    sh_canonpath",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xa3280",
    "cmp     byte [r15+0x1], 0x0",
    "je      0xa313d",
    "mov     rdi, r15",
    "call    free",
    "mov     rdi, rbx",
    "call    free",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xa3411",
    "mov     rdi, r15",
    "mov     edx, 0x8100400",
    "xor     esi, esi",
    "call    sub_8c580",
    "mov     qword [rbp-0x48], rax",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xa32e8",
    "lea     rax, [rel dircomplete_spelling]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0xa3135",
    "mov     rdi, rbx",
    "call    strlen",
    "cdqe    ",
    "cmp     byte [rbx+rax-0x1], 0x2f",
    "je      0xa3230",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r12], rbx",
    "mov     r14d, 0x1",
    "mov     byte [rbx], 0x0",
    "jmp     0xa313d",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "mov     r14d, 0x1",
    "call    string_list_internal",
    "mov     qword [r12], rax",
    "movzx   ecx, byte [rax]",
    "cmp     byte [rbx], cl",
    "jne     0xa31f0",
    "mov     rdi, rbx",
    "call    free",
    "lea     rax, [rel dircomplete_expand]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0xa3135",
    "mov     rdi, r13",
    "call    strlen",
    "mov     rdx, rax",
    "cmp     eax, 0x2",
    "jle     0xa30e1",
    "lea     rax, [rel dircomplete_expand_relpath]",
    "movzx   edx, byte [r15]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xa3220",
    "mov     rdi, rbx",
    "call    free",
    "mov     rdi, r15",
    "call    free",
    "mov     rdi, qword [rbp-0x48]",
    "call    dispose_words",
    "mov     edx, dword [rbp-0x40]",
    "mov     esi, dword [rbp-0x3c]",
    "mov     edi, r13d",
    "mov     r15, qword [r12]",
    "call    sub_9cb20",
    "jmp     0xa306a",
    "mov     rsi, rax",
    "mov     rdi, rbx",
    "xor     r14d, r14d",
    "call    strcmp",
    "test    eax, eax",
    "setne   r14b",
    "mov     rdi, rbx",
    "call    dirspell",
    "test    rax, rax",
    "je      0xa3135",
    "lea     eax, [rax+0x2]",
    "mov     rdi, r13",
    "mov     qword [rbp-0x48], rdx",
    "cdqe    ",
    "mov     rsi, rax",
    "mov     qword [rbp-0x50], rax",
    "call    realloc",
    "mov     rdx, qword [rbp-0x48]",
    "test    rax, rax",
    "mov     r13, rax",
    "je      0xa3429",
    "movzx   ecx, byte [r13]",
    "jmp     0xa310a",
    "lea     eax, [rdx-0x2e]",
    "cmp     al, 0x1",
    "jbe     0xa3129",
    "lea     rax, [rel no_symbolic_links]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "jne     0xa313d",
    "movzx   r13d, byte [rax]",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x48], rax",
    "call    strlen",
    "mov     rcx, qword [rbp-0x48]",
    "test    r13b, r13b",
    "mov     rdx, rax",
    "jne     0xa3346",
    "mov     rsi, qword [rbp-0x50]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  rdx, edx",
    "mov     ecx, 0x2f",
    "mov     word [r13+rdx], cx",
    "jmp     0xa30e1",
    "mov     eax, 0x1",
    "cmp     cl, dl",
    "jne     0xa3126",
    "mov     rdi, r15",
    "call    free",
    "mov     qword [r12], r13",
    "movzx   ecx, byte [r13]",
    "cmp     byte [rbx], cl",
    "je      0xa3320",
    "cmp     byte [rcx+0x1], 0x0",
    "jne     0xa33b8",
    "test    rax, rax",
    "je      0xa337a",
    "or      r14d, eax",
    "mov     rsi, r13",
    "mov     rdi, r15",
    "call    strcmp",
    "test    eax, eax",
    "setne   al",
    "movzx   eax, al",
    "mov     rsi, r13",
    "mov     rdi, rbx",
    "mov     byte [rbp-0x50], dl",
    "mov     byte [rbp-0x48], cl",
    "call    strcmp",
    "movzx   ecx, byte [rbp-0x48]",
    "movzx   edx, byte [rbp-0x50]",
    "test    eax, eax",
    "je      0xa3129",
    "cmp     byte [rcx+0x2], 0x0",
    "jne     0xa33cb",
    "mov     eax, 0x1",
    "cmp     rdx, 0x1",
    "jbe     0xa337a",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x48], rcx",
    "call    free",
    "mov     rdi, qword [rbp-0x48]",
    "mov     esi, 0x3",
    "call    sh_canonpath",
    "mov     rbx, qword [rbp-0x48]",
    "mov     r13, rax",
    "xor     eax, eax",
    "test    r13, r13",
    "setne   al",
    "or      r14d, eax",
    "test    r13, r13",
    "jne     0xa30cc",
    "mov     rdi, rcx",
    "call    free",
    "jmp     0xa3135",
    "jmp     0xa310a",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x48], rcx",
    "mov     qword [rbp-0x50], rax",
    "call    strlen",
    "mov     rdx, qword [rbp-0x50]",
    "mov     rcx, qword [rbp-0x48]",
    "cmp     rax, rdx",
    "jae     0xa337a",
    "mov     eax, 0x2",
    "cmp     rdx, 0x2",
    "ja      0xa3357",
    "cmp     r13b, byte [rbx]",
    "jne     0xa337a",
    "jmp     0xa3135",
    "test    rax, rax",
    "jne     0xa3357",
    "jmp     0xa337a",
    "mov     rsi, rcx",
    "mov     rdx, rax",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x48], rcx",
    "call    strncmp",
    "mov     rcx, qword [rbp-0x48]",
    "test    eax, eax",
    "je      0xa32d8",
    "jmp     0xa32d8"
  ]
}
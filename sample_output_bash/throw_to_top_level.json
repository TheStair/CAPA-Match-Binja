{
  "address": "0x8f630",
  "rules": [
    "write file on Linux",
    "contain loop",
    "hide graphical window from taskbar/3804d9f76e4f47c8b3a7ed608bc3a556",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "lea     rbx, [rel interrupt_state]",
    "mov     r12d, dword [rbx]",
    "test    r12d, r12d",
    "je      0x8f688",
    "mov     edx, dword [rbx]",
    "test    edx, edx",
    "jne     0x8f868",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edx, dword [rax]",
    "cmp     edx, 0x7f",
    "jg      0x8f662",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "lea     rax, [rel last_command_exit_value]",
    "mov     ecx, dword [rax]",
    "cmp     ecx, 0x80",
    "jle     0x8f6a8",
    "mov     eax, dword [rax]",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_158490]",
    "mov     r12d, 0x1",
    "mov     dword [rel data_158490], eax",
    "call    set_pipestatus_array",
    "mov     eax, dword [rbx]",
    "sub     eax, 0x1",
    "mov     dword [rbx], eax",
    "mov     dword [rax], 0x82",
    "lea     rcx, [rel last_command_exit_signal]",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_158490]",
    "lea     r14, [rel data_1611a0]",
    "mov     dword [rcx], edx",
    "mov     edx, dword [rax]",
    "or      dl, 0x80",
    "mov     dword [rax], edx",
    "mov     eax, dword [rax]",
    "mov     dword [rel data_158490], eax",
    "call    set_pipestatus_array",
    "test    byte [rel data_1611a4+4], 0x1",
    "jne     0x8f810",
    "mov     edx, dword [rax]",
    "add     edx, 0xffffff80",
    "lea     rax, [rel pending_traps]",
    "lea     r13, [rel running_trap]",
    "mov     edx, dword [rax+0x8]",
    "test    edx, edx",
    "je      0x8f6ec",
    "lea     r13, [rel running_trap]",
    "lea     rbx, [rel parse_and_execute_level]",
    "mov     eax, dword [rbx]",
    "test    eax, eax",
    "je      0x8f712",
    "mov     edx, dword [r13]",
    "test    edx, edx",
    "jle     0x8f83c",
    "mov     eax, dword [r13]",
    "test    eax, eax",
    "jle     0x8f72c",
    "nop     dword [rax]",
    "lea     rsi, [rel data_120a87]  {\"interrupt trap\"}",
    "mov     edi, 0x2",
    "mov     dword [rax+0x8], 0x0",
    "mov     dword [rel data_168788], 0x0",
    "call    sub_8e640",
    "jmp     0x8f6ec",
    "sub     edx, 0x1",
    "movsxd  rdx, edx",
    "and     dword [r14+rdx*4], 0xffffffcf",
    "lea     rax, [rel shell_pgrp]",
    "xor     esi, esi",
    "mov     edi, dword [rax]",
    "call    give_terminal_to",
    "lea     rsi, [rel top_level_mask]",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "call    reset_parser",
    "lea     rbx, [rel interactive]",
    "mov     r10d, dword [rbx]",
    "test    r10d, r10d",
    "jne     0x8f8c0",
    "sub     eax, 0x1",
    "mov     dword [r13], 0x0",
    "cdqe    ",
    "and     dword [r14+rax*4], 0xffffffcf",
    "mov     edi, 0xffffffff",
    "call    parse_and_execute_cleanup",
    "mov     r11d, dword [rbx]",
    "test    r11d, r11d",
    "jne     0x8f700",
    "call    bashline_reset",
    "jmp     0x8f767",
    "mov     r9d, dword [rel data_161064]",
    "test    r9d, r9d",
    "je      0x8f778",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0x8f789",
    "call    sub_875b0",
    "lea     rax, [rel funcnest]",
    "mov     r8d, dword [rbx]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel breaking]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel continuing]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel loop_level]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel wait_intr_flag]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel return_catch_flag]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel comsub_ignore_return]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel executing_list]",
    "mov     dword [rax], 0x0",
    "test    r8d, r8d",
    "je      0x8f878",
    "xor     edi, edi",
    "call    sub_113ed0",
    "lea     rax, [rel interactive_shell]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x8f8a8",
    "test    r12d, r12d",
    "jne     0x8f8d0",
    "lea     rax, [rel shell_initialized]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x8f885",
    "test    r12d, r12d",
    "je      0x8f897",
    "mov     rax, qword [rel stdout]",
    "mov     rdi, qword [rax]",
    "call    fflush",
    "mov     r12, qword [rel stderr]",
    "mov     edi, 0xa",
    "mov     rsi, qword [r12]",
    "call    fputc",
    "mov     rdi, qword [r12]",
    "call    fflush",
    "mov     edi, dword [rbx]",
    "test    edi, edi",
    "jne     0x8f802",
    "mov     edi, 0x2",
    "call    jump_to_top_level",
    "{ Does not return }",
    "jmp     0x8f802",
    "mov     edi, 0x3",
    "call    jump_to_top_level",
    "{ Does not return }",
    "test    byte [rel data_1611a4+4], 0x1",
    "jne     0x8f802",
    "lea     rax, [rel interactive_shell]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x8f88a",
    "lea     rax, [rel shell_initialized]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x8f88a",
    "jmp     0x8f802"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x619c0",
  "rules": [
    "encrypt data using XXTEA/c3f2a9482f0d43a8bf071fa39e1b4168/c4ca7bfb577a49f4aa924cd71c1d4bfa",
    "encrypt data using TEA/f68c13fdd9924dacbb04fb3766fcc8ea/f4f005346e96448ea67ed2caa193f805",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "decrypt data using TEA/e3455f541322464e87e33d73effdac9c/2f647bab2e344493baea90ef9b7387ed",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "call    find_variable",
    "test    rax, rax",
    "je      0x61a8b",
    "lea     rax, [rel shell_compatibility_level]",
    "mov     dword [rax], 0x34",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "jmp     set_compatibility_opts",
    "mov     r12, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    r12, r12",
    "je      0x61a8b",
    "movzx   r13d, byte [r12]",
    "test    r13b, r13b",
    "je      0x61a8b",
    "call    __ctype_b_loc",
    "movzx   edx, r13b",
    "mov     rax, qword [rax]",
    "test    byte [rax+rdx*2+0x1], 0x8",
    "je      0x61a68",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_132ed0]  {\"%s: %s: compatibility value out \u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "movzx   edx, byte [r12+0x1]",
    "cmp     dl, 0x2e",
    "je      0x61ab0",
    "movzx   esi, byte [r12+0x2]",
    "test    byte [rax+rsi*2+0x1], 0x8",
    "je      0x61a1f",
    "movzx   ecx, dl",
    "test    byte [rax+rcx*2+0x1], 0x8",
    "je      0x61a68",
    "cmp     byte [r12+0x3], 0x0",
    "jne     0x61a1f",
    "cmp     byte [r12+0x2], 0x0",
    "jne     0x61a68",
    "movsx   r13d, r13b",
    "movsx   ecx, sil",
    "lea     eax, [r13+r13*4-0xf0]",
    "lea     eax, [rcx+rax*2-0x30]",
    "jmp     0x61a44",
    "movsx   r13d, r13b",
    "movsx   edx, dl",
    "lea     eax, [r13+r13*4-0xf0]",
    "lea     eax, [rdx+rax*2-0x30]",
    "lea     edx, [rax-0x1f]",
    "cmp     edx, 0x15",
    "ja      0x61a68",
    "lea     rdx, [rel shell_compatibility_level]",
    "mov     dword [rdx], eax",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "jmp     set_compatibility_opts"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
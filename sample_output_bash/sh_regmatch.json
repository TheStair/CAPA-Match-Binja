{
  "address": "0xdb4b0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "log keystrokes via raw input data/4762f396f48d4e318a08125296476d20",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "pxor    xmm0, xmm0",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "lea     r15, [rbp-0x80]",
    "mov     r14, rdi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x88",
    "mov     qword [rbp-0xa0], rdi",
    "mov     rdi, r15",
    "mov     dword [rbp-0x90], edx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rel match_ignore_case]",
    "movaps  xmmword [rbp-0x80], xmm0",
    "movaps  xmmword [rbp-0x70], xmm0",
    "cmp     dword [rax], 0x1",
    "movaps  xmmword [rbp-0x60], xmm0",
    "sbb     edx, edx",
    "movaps  xmmword [rbp-0x50], xmm0",
    "and     edx, 0xfffffffe",
    "add     edx, 0x3",
    "call    regcomp",
    "mov     dword [rbp-0x84], 0x2",
    "test    eax, eax",
    "jne     0xdb708",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xdb74a",
    "mov     rax, qword [rbp-0x50]",
    "lea     rbx, [rax+0x1]",
    "lea     rdi, [rbx*8]",
    "call    malloc",
    "mov     rsi, r14",
    "mov     rdi, r15",
    "mov     r12, rax",
    "xor     eax, eax",
    "test    r12, r12",
    "mov     rcx, r12",
    "cmove   rbx, rax",
    "xor     r8d, r8d",
    "mov     rdx, rbx",
    "lea     rbx, [rel data_121fc7]  {\"BASH_REMATCH\"}",
    "call    regexec",
    "mov     rdi, r14",
    "test    eax, eax",
    "mov     dword [rbp-0x88], eax",
    "setne   al",
    "movzx   eax, al",
    "mov     dword [rbp-0x84], eax",
    "call    strlen",
    "mov     qword [rbp-0xb0], rax",
    "add     eax, 0xb",
    "cdqe    ",
    "mov     rdi, rax",
    "mov     qword [rbp-0xa8], rax",
    "call    malloc",
    "mov     r14, rax",
    "lea     rax, [rel global_variables]",
    "mov     r13, qword [rax]",
    "test    r13, r13",
    "je      0xdb60a",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "mov     eax, dword [rbp-0x84]",
    "add     rsp, 0x88",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, rbx",
    "call    make_new_array_variable",
    "test    rax, rax",
    "je      0xdb6f0",
    "mov     qword [rbp-0x98], r12",
    "jmp     0xdb5cd",
    "mov     rdi, r14",
    "call    free",
    "mov     rdi, r12",
    "call    free",
    "mov     rdi, r15",
    "call    regfree",
    "mov     rcx, qword [rax+0x8]",
    "test    r12, r12",
    "je      0xdb6f0",
    "mov     r12, qword [r13+0x20]",
    "xor     edx, edx",
    "mov     rdi, rbx",
    "mov     rsi, r12",
    "call    hash_search",
    "test    rax, rax",
    "je      0xdb5c0",
    "test    rcx, rcx",
    "je      0xdb6f0",
    "mov     r13, qword [r13+0x18]",
    "test    r13, r13",
    "je      0xdb730",
    "cmp     qword [rax+0x10], 0x0",
    "mov     qword [rel data_1619d8], r12",
    "je      0xdb5c0",
    "test    byte [rbp-0x90], 0x1",
    "je      0xdb6f0",
    "mov     rdi, rbx",
    "mov     r12, qword [rbp-0x98]",
    "call    make_new_array_variable",
    "test    rax, rax",
    "jne     0xdb61b",
    "lea     rax, [rel global_variables]",
    "mov     rdi, rbx",
    "mov     r12, qword [rbp-0x98]",
    "mov     rsi, qword [rax]",
    "call    makunbound",
    "test    r14, r14",
    "je      0xdb6f0",
    "jmp     0xdb6f0",
    "mov     eax, dword [rbp-0x88]",
    "test    eax, eax",
    "jne     0xdb6f0",
    "mov     ebx, dword [rbp-0xb0]",
    "mov     qword [rbp-0x90], rcx",
    "add     ebx, 0xa",
    "movsxd  r13, ebx",
    "xor     ebx, ebx",
    "mov     qword [rbp-0x98], r13",
    "mov     r13, rbx",
    "mov     rbx, r12",
    "mov     r12, qword [rbp-0xa0]",
    "mov     qword [rbp-0xa0], r15",
    "mov     r15, qword [rbp-0xa8]",
    "nop     dword [rax]",
    "mov     rdx, qword [rbp-0x98]",
    "mov     rcx, r15",
    "xor     esi, esi",
    "mov     rdi, r14",
    "call    __memset_chk",
    "movsxd  rsi, dword [rbx+r13*8]",
    "mov     rcx, r15",
    "mov     rdi, r14",
    "mov     edx, dword [rbx+r13*8+0x4]",
    "sub     edx, esi",
    "add     rsi, r12",
    "movsxd  rdx, edx",
    "call    __strncpy_chk",
    "mov     rdi, qword [rbp-0x90]",
    "mov     rsi, r13",
    "mov     rdx, r14",
    "add     r13, 0x1",
    "call    array_insert",
    "cmp     qword [rbp-0x50], r13",
    "jae     0xdb690",
    "mov     r15, qword [rbp-0xa0]",
    "mov     r12, rbx",
    "nop     word [rax+rax]"
  ]
}
{
  "address": "0x75250",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "xor     r14d, r14d",
    "push    r13",
    "mov     r13, rdx",
    "push    r12",
    "mov     r12d, esi",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x28",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], 0x0",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x7529e",
    "movzx   ecx, byte [rbx]",
    "test    cl, cl",
    "je      0x753e9",
    "mov     rdi, rbx",
    "call    strlen",
    "mov     r14, rax",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x75496",
    "mov     rsi, rbx",
    "xor     r15d, r15d",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x75491",
    "cmp     cl, 0x7e",
    "je      0x752dc",
    "test    cl, cl",
    "jle     0x75350",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "mov     esi, r12d",
    "mov     rdi, rbx",
    "xor     r12d, r12d",
    "call    r13",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x7530a",
    "cmp     cl, 0x7f",
    "je      0x75350",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jle     0x753c8",
    "mov     rdi, 0x5000000000000002",
    "mov     eax, 0x1",
    "shl     rax, cl",
    "test    rax, rdi",
    "je      0x75438",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x75491",
    "mov     rdi, rax",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "call    string_list_internal",
    "mov     rdi, rbx",
    "mov     r12, rax",
    "call    dispose_words",
    "cmp     cl, 0x5c",
    "je      0x75458",
    "add     r8d, 0x1",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "jne     0x7538b",
    "mov     rdi, 0x8400000000",
    "test    rax, rdi",
    "jne     0x75458",
    "add     rsp, 0x28",
    "mov     rax, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r15d, 0x1",
    "jmp     0x75350",
    "cmp     cl, 0x60",
    "je      0x752dc",
    "cmp     cl, 0x3e",
    "jg      0x75330",
    "test    r15d, r15d",
    "je      0x753e9",
    "add     r8d, eax",
    "jmp     0x753cc",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x75390",
    "cmp     cl, 0x24",
    "je      0x752dc",
    "nop     dword [rax+rax]",
    "test    r12b, 0x3",
    "je      0x75468",
    "movsxd  rdx, r8d",
    "lea     rsi, [rbx+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "jne     0x752b4",
    "mov     rax, qword [rbp-0x40]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     dword [rbp-0x44], r8d",
    "mov     qword [rbp-0x50], rax",
    "mov     rax, r14",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "mov     r8d, dword [rbp-0x44]",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0x75480",
    "mov     eax, 0x1",
    "test    cl, cl",
    "js      0x75390",
    "jmp     0x75350",
    "mov     esi, r12d",
    "mov     rdi, rbx",
    "call    string_quote_removal",
    "mov     r12, rax",
    "jmp     0x7530a",
    "mov     rax, qword [rbp-0x50]",
    "add     r8d, 0x1",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x753cc",
    "test    rax, rax",
    "jne     0x7538b",
    "nop     dword [rax+rax]"
  ]
}
{
  "address": "0x112760",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "contain loop",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     esi, 0x7e",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x58",
    "call    strchr",
    "mov     rdi, rbx",
    "mov     r12, rax",
    "call    strlen",
    "test    r12, r12",
    "je      0x112b8f",
    "add     eax, 0x1",
    "jmp     0x112799",
    "add     eax, 0x10",
    "movsxd  r14, eax",
    "mov     dword [rbp-0x4c], eax",
    "mov     rdi, r14",
    "call    malloc",
    "mov     qword [rbp-0x38], rax",
    "test    rax, rax",
    "je      0x112b97",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "xor     r15d, r15d",
    "nop     word [rax+rax]",
    "mov     dword [rbp-0x40], r15d",
    "xor     r8d, r8d",
    "mov     ecx, dword [rbp-0x40]",
    "cmp     dword [rbp-0x4c], ecx",
    "jg      0x1128ab",
    "cmp     al, 0x7e",
    "je      0x112a80",
    "mov     rcx, qword [rbp-0x38]",
    "movsxd  r15, r15d",
    "movsxd  rax, r8d",
    "mov     rsi, rbx",
    "cmp     r15, r14",
    "mov     rdx, rax",
    "mov     dword [rbp-0x48], r8d",
    "lea     rdi, [rcx+r15]",
    "mov     rcx, r14",
    "cmovae  rcx, r15",
    "mov     qword [rbp-0x68], rdi",
    "sub     rcx, r15",
    "mov     r15, rax",
    "call    __strncpy_chk",
    "lea     r12, [rbx+r15]",
    "lea     rax, [rel tilde_additional_suffixes]",
    "mov     rdi, r12",
    "mov     qword [rbp-0x60], r12",
    "mov     r15, qword [rax]",
    "call    strlen",
    "mov     r8d, dword [rbp-0x48]",
    "test    eax, eax",
    "jle     0x112b88",
    "mov     eax, dword [rbp-0x4c]",
    "mov     rdi, qword [rbp-0x38]",
    "mov     dword [rbp-0x48], r8d",
    "lea     eax, [rax+r8+0x14]",
    "lea     r14d, [rax+0x1]",
    "mov     dword [rbp-0x4c], eax",
    "movsxd  r14, r14d",
    "test    rdi, rdi",
    "je      0x112b54",
    "mov     r8d, r13d",
    "test    r12, r12",
    "je      0x112b48",
    "xor     ebx, ebx",
    "jmp     0x112a2e",
    "mov     qword [rbp-0x58], r14",
    "xor     ebx, ebx",
    "mov     r13, r12",
    "mov     dword [rbp-0x50], r8d",
    "mov     r12d, ebx",
    "mov     rbx, r15",
    "mov     r15d, eax",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r8d, dword [rbp-0x48]",
    "mov     qword [rbp-0x38], rax",
    "jmp     0x112ac6",
    "mov     rsi, r14",
    "call    realloc",
    "mov     r8d, dword [rbp-0x48]",
    "mov     qword [rbp-0x38], rax",
    "lea     eax, [r15+r13]",
    "mov     dword [rbp-0x40], eax",
    "jmp     0x11289f",
    "test    r13d, r13d",
    "jle     0x112b48",
    "test    r8d, r8d",
    "jne     0x112978",
    "mov     r8d, dword [rbp-0x50]",
    "movsxd  rbx, r12d",
    "mov     r14, qword [rbp-0x58]",
    "or      r8d, ebx",
    "test    rbx, rbx",
    "je      0x11295e",
    "cmp     qword [rbp-0x38], 0x0",
    "jne     0x1128ab",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, r14",
    "lea     rsi, [rel data_11f045]  {\"xrealloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     ecx, dword [rbp-0x40]",
    "cmp     dword [rbp-0x4c], ecx",
    "jle     0x112a93",
    "mov     rcx, qword [r12]",
    "lea     edi, [r13-0x1]",
    "xor     eax, eax",
    "test    rcx, rcx",
    "je      0x112b7a",
    "lea     ecx, [rbx+0x1]",
    "movsxd  rcx, ecx",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x48], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x48]",
    "test    rax, rax",
    "mov     r13, rax",
    "je      0x112bab",
    "mov     r13, qword [rbp-0x68]",
    "mov     rax, qword [rbp-0x38]",
    "mov     byte [r13], 0x0",
    "add     rsp, 0x58",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "add     r12d, 0x1",
    "add     r13, 0x1",
    "cmp     r15d, r12d",
    "jne     0x112918",
    "mov     qword [rbp-0x48], rbx",
    "jmp     0x112952",
    "lea     rdx, [rax+0x1]",
    "cmp     rdi, rax",
    "jne     0x112b77",
    "xor     esi, esi",
    "mov     dword [rbp-0x50], r15d",
    "lea     rdx, [r12+0x8]",
    "mov     qword [rbp-0x68], r14",
    "mov     qword [rbp-0x70], rdi",
    "mov     qword [rbp-0x58], rcx",
    "mov     dword [rbp-0x74], r13d",
    "mov     dword [rbp-0x60], esi",
    "mov     qword [rbp-0x80], r13",
    "mov     qword [rbp-0x48], rdx",
    "mov     rdx, rbx",
    "mov     rbx, rax",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "mov     qword [rbp-0x38], rcx",
    "call    dcgettext",
    "mov     rdx, qword [rbp-0x38]",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     r15, qword [rbp-0x60]",
    "mov     rdx, rbx",
    "mov     rdi, rax",
    "mov     rsi, r15",
    "call    __strncpy_chk",
    "mov     byte [r13+rbx], 0x0",
    "mov     rax, r15",
    "mov     rdi, r13",
    "add     rax, rbx",
    "mov     rbx, rax",
    "call    tilde_expand_word",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x1129d6",
    "cmp     byte [r13], 0x2f",
    "je      0x112a20",
    "mov     r14, qword [rbp-0x58]",
    "movsxd  rbx, r12d",
    "nop     word [rax+rax]",
    "mov     r14, qword [rbx]",
    "test    r14, r14",
    "jne     0x112930",
    "mov     rax, rdx",
    "jmp     0x112b48",
    "mov     rdi, r14",
    "call    strlen",
    "mov     rsi, r14",
    "mov     rdi, r13",
    "mov     rdx, rax",
    "mov     r12, rax",
    "call    strncmp",
    "test    eax, eax",
    "jne     0x112858",
    "mov     rdi, r13",
    "call    strlen",
    "mov     ecx, dword [rbp-0x40]",
    "lea     r15d, [rcx+rax]",
    "mov     ecx, dword [rbp-0x4c]",
    "cmp     r15d, ecx",
    "jge     0x112b00",
    "mov     rdi, r13",
    "mov     r13, r15",
    "call    free",
    "mov     rdi, r14",
    "add     rbx, 0x8",
    "call    strlen",
    "mov     rsi, r14",
    "mov     rdi, r13",
    "mov     rdx, rax",
    "call    strncmp",
    "test    eax, eax",
    "je      0x112a20",
    "mov     rbx, qword [rbp-0x48]",
    "mov     r14, qword [rbx]",
    "add     rbx, 0x8",
    "test    r14, r14",
    "je      0x112a58",
    "mov     esi, dword [rbp-0x60]",
    "mov     rbx, r15",
    "mov     r15d, dword [rbp-0x50]",
    "mov     r14, qword [rbp-0x68]",
    "lea     r8d, [rsi+r12-0x1]",
    "lea     eax, [r15+r8]",
    "mov     dword [rbp-0x40], eax",
    "lea     eax, [rcx+rax+0x14]",
    "mov     rdi, qword [rbp-0x38]",
    "lea     r14d, [rax+0x1]",
    "mov     dword [rbp-0x4c], eax",
    "movsxd  r14, r14d",
    "test    rdi, rdi",
    "je      0x112b69",
    "movsxd  r12, dword [rbp-0x40]",
    "mov     rdx, r14",
    "mov     rax, qword [rbp-0x38]",
    "mov     rsi, r13",
    "cmp     r12, r14",
    "lea     rdi, [rax+r12]",
    "cmovae  rdx, r12",
    "sub     rdx, r12",
    "call    __strcpy_chk",
    "mov     rdi, r13",
    "call    free",
    "jmp     0x1127c0",
    "mov     rbx, qword [rbp-0x40]",
    "mov     rdx, r15",
    "lea     rax, [rbx+0x1]",
    "cmp     qword [rbp-0x70], rbx",
    "je      0x112b30",
    "mov     rdi, r14",
    "call    malloc",
    "mov     qword [rbp-0x38], rax",
    "jmp     0x112b23",
    "mov     rsi, r14",
    "call    realloc",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel tilde_additional_prefixes]",
    "mov     rdi, rbx",
    "mov     r12, qword [rax]",
    "call    strlen",
    "mov     r13, rax",
    "movzx   eax, byte [rbx]",
    "test    al, al",
    "je      0x112a80",
    "mov     r15d, dword [rbp-0x50]",
    "mov     r14, qword [rbp-0x68]",
    "mov     rbx, rdx",
    "mov     r8d, dword [rbp-0x74]",
    "mov     r13, qword [rbp-0x80]",
    "nop     dword [rax+rax]",
    "mov     dword [rbp-0x60], eax",
    "mov     rbx, rax",
    "jmp     0x11283c",
    "cmp     qword [rbp-0x38], 0x0",
    "jne     0x1129f1",
    "jmp     0x112ad1",
    "mov     r15, qword [rbp-0x48]",
    "lea     r13, [rdx+rbx]",
    "mov     r14, qword [rbp-0x58]",
    "mov     qword [rbp-0x40], rbx",
    "mov     rbx, r15",
    "mov     r15, rdx",
    "jmp     0x112868"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
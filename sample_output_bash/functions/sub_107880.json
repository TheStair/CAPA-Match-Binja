{
  "address": "0x107880",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "encrypt data using Curve25519/7d070d905d0942e295bbb2c9df72fc86"
  ],
  "disassembly": [
    "endbr64 ",
    "test    edi, edi",
    "je      0x107a3f",
    "xor     eax, eax",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13d, edi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     rbx, [rel rl_point]",
    "nop     word [rax+rax]",
    "add     rsp, 0x8",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x1078d8",
    "mov     eax, dword [rbx]",
    "lea     r12, [rel rl_line_buffer]",
    "lea     r15d, [rax-0x1]",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x107a20",
    "mov     r15d, dword [rbx]",
    "jmp     0x10794a",
    "lea     rax, [rel _rl_allow_pathname_alphabetic_chars]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0x1079b0",
    "lea     r12, [rel rl_line_buffer]",
    "mov     esi, dword [rbx]",
    "mov     edx, 0x1",
    "mov     rdi, qword [r12]",
    "call    _rl_find_prev_mbchar_internal",
    "mov     r15d, eax",
    "jmp     0x1078e5",
    "test    r15d, r15d",
    "je      0x107994",
    "mov     dword [rbx], r15d",
    "test    r15d, r15d",
    "jle     0x10794a",
    "mov     esi, r14d",
    "lea     rdi, [rel data_122a74]  {\"/-_=~.#$\"}",
    "and     esi, 0x7f",
    "call    strchr",
    "test    rax, rax",
    "je      0x1079b0",
    "mov     rdi, qword [r12]",
    "mov     esi, r15d",
    "call    _rl_char_value",
    "mov     edi, eax",
    "mov     r14d, eax",
    "call    iswalnum",
    "test    eax, eax",
    "jne     0x10792b",
    "sub     r13d, 0x1",
    "jne     0x1078b0",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x107967",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x1079d0",
    "mov     r8d, dword [rbx]",
    "test    r8d, r8d",
    "je      0x10799e",
    "mov     eax, dword [rbx]",
    "lea     r15d, [rax-0x1]",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x1079e0",
    "mov     eax, dword [rbx]",
    "lea     r15d, [rax-0x1]",
    "jmp     0x1078e5",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x107a00",
    "mov     dword [rbx], r15d",
    "lea     rax, [rel _rl_allow_pathname_alphabetic_chars]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x107930",
    "mov     esi, dword [rbx]",
    "mov     rdi, qword [r12]",
    "mov     edx, 0x1",
    "call    _rl_find_prev_mbchar_internal",
    "mov     r15d, eax",
    "jmp     0x10796d",
    "mov     esi, dword [rbx]",
    "mov     rdi, qword [r12]",
    "mov     edx, 0x1",
    "call    _rl_find_prev_mbchar_internal",
    "mov     r15d, eax",
    "jmp     0x1078e5",
    "mov     esi, r14d",
    "lea     rdi, [rel data_122a74]  {\"/-_=~.#$\"}",
    "and     esi, 0x7f",
    "call    strchr",
    "test    rax, rax",
    "je      0x107994",
    "mov     rdi, qword [r12]",
    "mov     esi, r15d",
    "call    _rl_char_value",
    "mov     edi, eax",
    "mov     r14d, eax",
    "call    iswalnum",
    "test    eax, eax",
    "jne     0x107947"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
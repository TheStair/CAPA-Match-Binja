{
  "address": "0xedc00",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "encrypt data using Curve25519/a423aa5d0923438c8eac88d5abe4fcd5",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rdi",
    "push    r13",
    "mov     r13d, esi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "call    strlen",
    "lea     r12, [rax*8]",
    "sub     r12, rax",
    "add     r12, 0x1",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xeddff",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movzx   r15d, byte [r14]",
    "mov     rax, rbx",
    "test    r15b, r15b",
    "je      0xedd08",
    "mov     byte [rax], 0x0",
    "add     rsp, 0x18",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "nop     dword [rax+rax]",
    "mov     byte [rax], 0x5c",
    "lea     rdi, [rax+0x1]",
    "mov     r15d, 0x65",
    "jmp     0xedcf0",
    "cmp     esi, 0x1f",
    "jg      0xedd30",
    "add     r14, 0x1",
    "mov     byte [rdi], r15b",
    "lea     rax, [rdi+0x1]",
    "movzx   r15d, byte [r14]",
    "test    r15b, r15b",
    "jne     0xedc58",
    "cmp     esi, 0x7f",
    "jne     0xedd50",
    "mov     rdi, rax",
    "test    r15b, r15b",
    "js      0xedcf0",
    "movsx   esi, r15b",
    "cmp     r15b, 0x1b",
    "je      0xedd20",
    "cmp     esi, 0x22",
    "sete    r8b",
    "movzx   edx, word [rel data_136ab8[4]]  {\"\\CC->\"}",
    "mov     byte [rax+0x2], 0x2d",
    "lea     rdi, [rax+0x3]",
    "mov     r15d, 0x3f",
    "mov     word [rax], dx",
    "jmp     0xedcf0",
    "mov     byte [rax], 0x5c",
    "test    r13d, r13d",
    "je      0xedc8b",
    "mov     byte [rax], 0x5c",
    "jmp     0xedcf0",
    "test    r8b, r8b",
    "je      0xeddf7",
    "movzx   ecx, word [rel data_136ab8[6]]  {\"C->\"}",
    "lea     r12, [rax+0x3]",
    "or      r15d, 0x40",
    "mov     word [rax+0x1], cx",
    "call    __ctype_b_loc",
    "movsx   rsi, r15b",
    "mov     rdi, qword [rax]",
    "movzx   eax, word [rdi+rsi*2]",
    "test    ah, 0x2",
    "jne     0xedd70",
    "sub     esi, 0x7",
    "cmp     esi, 0x6",
    "jbe     0xeddd0",
    "mov     rdi, rax",
    "jmp     0xedcf0",
    "mov     qword [rbp-0x40], rsi",
    "mov     qword [rbp-0x38], rdi",
    "call    __ctype_toupper_loc",
    "mov     rsi, qword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x38]",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rax+rsi*4]",
    "movzx   r15d, sil",
    "test    byte [rdi+r15*2+0x1], 0x1",
    "je      0xedcd7",
    "test    ah, 0x1",
    "je      0xedde8",
    "lea     r12, [rax+0x1]",
    "lea     rax, [rel data_138b30]  {U\"abtnvfr\"}",
    "mov     esi, dword [rax+rsi*4]",
    "jmp     0xedcd7",
    "lea     rdi, [r12+0x1]",
    "cmp     esi, 0x1b",
    "jne     0xeddbc",
    "call    __ctype_tolower_loc",
    "lea     rsi, [r15*4]",
    "lea     rdi, [r12+0x1]",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rax+rsi]",
    "cmp     esi, 0x1b",
    "je      0xedce5",
    "movsx   esi, r15b",
    "mov     rax, r12",
    "xor     r8d, r8d",
    "jmp     0xedd57",
    "mov     qword [rbp-0x38], rsi",
    "call    __ctype_tolower_loc",
    "mov     rsi, qword [rbp-0x38]",
    "mov     rax, qword [rax]",
    "shl     rsi, 0x2",
    "mov     esi, dword [rax+rsi]",
    "cmp     esi, 0x22",
    "mov     r15d, esi",
    "mov     rax, r12",
    "sete    r8b",
    "jmp     0xedd57",
    "mov     byte [r12], 0x5c",
    "mov     r15d, 0x65",
    "lea     rdi, [rax+0x1]",
    "cmp     esi, 0x5c",
    "je      0xedd69"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x6daa0",
  "rules": [
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/4f0637c1ae9b445ca3ec93a4b4e0bb6d",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/9710d9ee76a4466b954966f2a98c40ba",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "parse credit card information/41cf5f2b4d974ce2a6b6e8507fe67122",
    "allocate or change RW memory/877cb0b79bfa432e8e79b8bd20fa354f",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/bee29d5f30484915bb6e92fdf1038d2c",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/85d53756af1244948e9b515ea3abe5ce",
    "contain loop",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/af1fc90a7adf4a2ea648cfac1c599984",
    "allocate or change RWX memory/86c3cb3db3894fa491c471a42be563f5",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/2602c80a9b3846b9ae92e2e83b13e866"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x88",
    "mov     qword [rbp-0x58], rsi",
    "mov     dword [rbp-0x6c], ecx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     eax, ecx",
    "mov     qword [rbp-0x48], 0x0",
    "and     eax, 0x200",
    "cmp     eax, 0x1",
    "mov     eax, edx",
    "sbb     r14d, r14d",
    "and     r14d, 0xfffffffd",
    "add     r14d, 0x4",
    "and     eax, 0x3",
    "mov     dword [rbp-0x78], eax",
    "je      0x6db03",
    "mov     rax, qword [rbp-0x58]",
    "mov     dword [rel data_1683e0], r14d",
    "movsxd  r15, dword [rax]",
    "lea     rdi, [r13+r15]",
    "mov     rbx, r15",
    "mov     qword [rbp-0x60], rdi",
    "call    strlen",
    "mov     rdi, qword [rbp-0x60]",
    "add     rax, r15",
    "movsx   r12d, byte [rdi]",
    "mov     qword [rbp-0x68], rax",
    "mov     ecx, r12d",
    "test    r12d, r12d",
    "je      0x6dc9b",
    "mov     edi, ecx",
    "test    ch, 0x1",
    "jne     0x6de90",
    "lea     r12, [rel no_longjmp_on_fatal_error]",
    "xor     r9d, r9d",
    "mov     dword [rbp-0x60], r14d",
    "mov     r10d, 0x1",
    "mov     rsi, rdi",
    "mov     r14d, r9d",
    "mov     r14d, 0x40",
    "cmp     edx, 0x2",
    "jne     0x6db03",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1332b8]  {\"bad substitution: no closing `%s\u2026\"}",
    "xor     edi, edi",
    "mov     dword [rax], 0x1",
    "call    dcgettext",
    "mov     rdx, r13",
    "lea     rsi, [rel data_11f5b6]  {\"}\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    report_error",
    "mov     edi, 0x2",
    "call    sub_85e80",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x58]",
    "mov     qword [rbp-0x60], 0x0",
    "mov     dword [rax], ebx",
    "jmp     0x6dde2",
    "lea     r11, [rel locale_mb_cur_max]",
    "cmp     dword [r11], 0x1",
    "jle     0x6dd70",
    "cmp     r12d, 0x1",
    "sete    dl",
    "cmp     r12d, 0x5c",
    "sete    al",
    "or      dl, al",
    "mov     r9d, edx",
    "jne     0x6dd10",
    "and     edi, 0x1",
    "jne     0x6db03",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x6f2ef",
    "add     ebx, 0x1",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "jne     0x6dd08",
    "add     ebx, 0x1",
    "mov     r14d, 0x1",
    "cmp     cl, 0x24",
    "je      0x6dd80",
    "movsxd  rbx, dword [rsi]",
    "mov     qword [rbp-0x40], 0x0",
    "lea     rdi, [r13+rbx]",
    "call    strlen",
    "add     rax, rbx",
    "mov     qword [rbp-0x80], rax",
    "add     rax, 0x1",
    "mov     rdi, rax",
    "mov     qword [rbp-0x78], rax",
    "call    malloc",
    "mov     qword [rbp-0x60], rax",
    "test    rax, rax",
    "je      0x6f403",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x60]",
    "add     rsp, 0x88",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "movsxd  r15, ebx",
    "lea     rsi, [r13+r15]",
    "movsx   r12d, byte [rsi]",
    "mov     ecx, r12d",
    "test    r12d, r12d",
    "jne     0x6db50",
    "add     ebx, eax",
    "jmp     0x6dd73",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6dd40",
    "test    r14d, r14d",
    "jne     0x6dcc8",
    "test    r10d, r10d",
    "setne   al",
    "jmp     0x6dc93",
    "movzx   eax, byte [r13+r15+0x1]",
    "cmp     al, 0x7b",
    "je      0x6e0f8",
    "cmp     r12d, 0x7d",
    "je      0x6ddc0",
    "mov     rsi, qword [rbp-0x78]",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x58]",
    "movsxd  r12, dword [rax]",
    "lea     r10, [r13+r12]",
    "mov     r8, r12",
    "movsx   r11d, byte [r10]",
    "test    r11d, r11d",
    "je      0x6e6b2",
    "xor     r14d, r14d",
    "jmp     0x6dd19",
    "mov     rdx, qword [rbp-0x68]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x48]",
    "mov     dword [rbp-0x80], r10d",
    "mov     r12, qword [rbp-0x48]",
    "sub     rdx, r15",
    "call    mbrtowc",
    "mov     r10d, dword [rbp-0x80]",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0x6e050",
    "mov     eax, 0x1",
    "test    cl, cl",
    "js      0x6dd40",
    "test    al, al",
    "je      0x6ddca",
    "cmp     r10d, 0x1f",
    "jg      0x6e10e",
    "cmp     al, 0x28",
    "jne     0x6de24",
    "sub     r10d, 0x1",
    "jne     0x6e000",
    "cmp     r12d, 0x60",
    "je      0x6dc50",
    "mov     rdi, qword [rbp-0x60]",
    "mov     dword [rbp-0x68], r8d",
    "call    free",
    "lea     rax, [rel no_longjmp_on_fatal_error]",
    "mov     r8d, dword [rbp-0x68]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6f418",
    "mov     rax, qword [rbp-0x78]",
    "xor     r14d, r14d",
    "xor     r9d, r9d",
    "mov     r15, qword [rbp-0x80]",
    "mov     dword [rbp-0x70], 0x1",
    "mov     r8d, r11d",
    "mov     ebx, r12d",
    "mov     qword [rbp-0x88], rax",
    "mov     dword [rbp-0x90], 0x40",
    "mov     dword [rbp-0x68], r14d",
    "mov     r14, r9",
    "mov     qword [rbp-0x48], r12",
    "add     ebx, 0x1",
    "jmp     0x6dd73",
    "test    rax, rax",
    "jne     0x6dd08",
    "mov     qword [rbp-0x60], 0x0",
    "test    byte [rbp-0x6c], 0x1",
    "je      0x6e138",
    "mov     eax, dword [rbp-0x60]",
    "add     r10d, 0x1",
    "add     ebx, 0x2",
    "cmp     eax, 0x40",
    "je      0x6e126",
    "mov     edi, dword [rbp-0x60]",
    "movsxd  rax, r10d",
    "lea     rdx, [rel data_1683e0]",
    "mov     dword [rdx+rax*4], edi",
    "cmp     dword [rbp-0x60], 0x1",
    "sete    al",
    "cmp     r12d, 0x5b",
    "sete    r11b",
    "and     r11b, al",
    "mov     r15d, r11d",
    "je      0x6eb39",
    "mov     edx, dword [rbp-0x6c]",
    "add     ebx, 0x2",
    "lea     rsi, [rbp-0x4c]",
    "mov     rdi, r13",
    "mov     dword [rbp-0x80], r10d",
    "or      edx, 0x1",
    "mov     dword [rbp-0x4c], ebx",
    "call    extract_command_subst",
    "jmp     0x6dc73",
    "mov     eax, dword [rel data_1683e0]",
    "mov     dword [rbp-0x60], eax",
    "cmp     r10d, 0x1f",
    "jg      0x6e01f",
    "mov     ecx, dword [rbp-0x6c]",
    "add     ebx, 0x1",
    "lea     rsi, [rbp-0x4c]",
    "mov     rdi, r13",
    "lea     rdx, [rel data_122e60]",
    "mov     dword [rbp-0x80], r10d",
    "or      ecx, 0x1",
    "mov     dword [rbp-0x4c], ebx",
    "call    sub_6d3a0",
    "and     ecx, 0xfffffffd",
    "cmp     cl, 0x3c",
    "jne     0x6de10",
    "mov     rax, qword [rbp-0x58]",
    "mov     qword [rbp-0x60], 0x0",
    "mov     dword [rax], r8d",
    "jmp     0x6dde2",
    "lea     rdx, [rel locale_mb_cur_max]",
    "mov     esi, dword [rdx]",
    "lea     eax, [rsi+0x1]",
    "cdqe    ",
    "add     rax, r14",
    "cmp     rax, r15",
    "jae     0x6e611",
    "cmp     r11d, 0x1",
    "je      0x6e3f0",
    "nop     dword [rax]",
    "mov     rax, qword [rbp-0x58]",
    "mov     edx, ebx",
    "mov     rdi, r13",
    "mov     esi, dword [rax]",
    "call    substring",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x6dddc",
    "mov     rax, qword [rbp-0x58]",
    "mov     dword [rax], ebx",
    "mov     dword [rbp-0x60], 0x1",
    "jmp     0x6dd19",
    "cmp     eax, 0x4",
    "jne     0x6dd19",
    "cmp     r12d, 0x25",
    "mov     r15d, eax",
    "sete    dl",
    "and     edx, eax",
    "mov     r9d, edx",
    "jmp     0x6dbbc",
    "xor     edx, edx",
    "mov     esi, ebx",
    "mov     rdi, r13",
    "mov     dword [rbp-0x88], r10d",
    "mov     byte [rbp-0x80], r9b",
    "call    sub_111360",
    "mov     rsi, qword [rbp-0x68]",
    "movzx   r9d, byte [rbp-0x80]",
    "movsxd  rdx, eax",
    "mov     dword [rbp-0x4c], eax",
    "mov     r10d, dword [rbp-0x88]",
    "cmp     rdx, rsi",
    "jae     0x6e59c",
    "movsxd  rax, dword [rbp-0x4c]",
    "mov     rsi, qword [rbp-0x68]",
    "mov     r10d, dword [rbp-0x80]",
    "cmp     rax, rsi",
    "mov     rbx, rax",
    "jb      0x6e01f",
    "add     ebx, 0x1",
    "jmp     0x6dd19",
    "movsxd  rax, r10d",
    "lea     rdx, [rel data_1683e0]",
    "mov     eax, dword [rdx+rax*4]",
    "mov     dword [rbp-0x60], eax",
    "test    r10d, r10d",
    "mov     ebx, esi",
    "setne   al",
    "cmp     r12d, 0x22",
    "je      0x6e3c3",
    "cmp     byte [r13+r15+0x1], 0x28",
    "je      0x6e090",
    "mov     rcx, rax",
    "sub     rcx, r15",
    "add     r15, 0x40",
    "shr     rcx, 0x6",
    "and     ecx, 0x1",
    "cmp     rax, r15",
    "jb      0x6e641",
    "movzx   ecx, byte [r10]",
    "cmp     esi, 0x1",
    "jg      0x6e5c5",
    "lea     rax, [r14+0x2]",
    "cmp     rax, r15",
    "jae     0x6e6e8",
    "cmp     r11d, 0x5c",
    "je      0x6e3f0",
    "lea     r11, [rel locale_mb_cur_max]",
    "cmp     dword [r11], 0x1",
    "jle     0x6dc18",
    "test    r10d, r10d",
    "mov     ebx, dword [rbp-0x68]",
    "setne   al",
    "jmp     0x6dc93",
    "xor     r12d, r12d",
    "cmp     byte [r13+rdx], 0x5d",
    "sete    r12b",
    "cmove   ebx, eax",
    "lea     r12d, [r12+r12+0x5b]",
    "jmp     0x6dbbc",
    "mov     rsi, qword [rbp-0x68]",
    "lea     edx, [rbx+0x1]",
    "xor     ecx, ecx",
    "mov     rdi, r13",
    "mov     dword [rbp-0x80], r10d",
    "mov     dword [rbp-0x4c], edx",
    "call    sub_6f5f0",
    "mov     r10d, dword [rbp-0x80]",
    "mov     ebx, eax",
    "jmp     0x6dd19",
    "cmp     r12d, 0x27",
    "je      0x6e158",
    "lea     r12, [rel no_longjmp_on_fatal_error]",
    "add     ebx, 0x2",
    "xor     ecx, ecx",
    "mov     eax, dword [rbp-0x6c]",
    "mov     dword [rbp-0x4c], ebx",
    "movsxd  rbx, ebx",
    "lea     rdx, [rbp-0x4c]",
    "mov     rdi, r13",
    "mov     r15d, dword [r12]",
    "lea     rsi, [r13+rbx]",
    "mov     dword [rbp-0x80], r10d",
    "test    r15d, r15d",
    "setne   cl",
    "shl     ecx, 0x6",
    "or      ecx, eax",
    "or      ecx, 0x1",
    "call    xparse_dolparen",
    "movsxd  rax, dword [rbp-0x4c]",
    "mov     rsi, qword [rbp-0x68]",
    "mov     r10d, dword [rbp-0x80]",
    "cmp     rax, rsi",
    "mov     rbx, rax",
    "jb      0x6e01f",
    "cmp     dword [rbp-0x60], 0x1",
    "sete    r15b",
    "cmp     r12d, 0x25",
    "sete    dl",
    "and     edx, r15d",
    "mov     r9d, edx",
    "mov     rdi, qword [rbp-0x60]",
    "mov     qword [rbp-0x78], rdx",
    "mov     qword [rbp-0x68], r10",
    "test    rdi, rdi",
    "je      0x6eb20",
    "test    rcx, rcx",
    "je      0x6e638",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "je      0x6e760",
    "mov     rax, qword [rbp-0x60]",
    "mov     dword [rbp-0x68], 0x0",
    "add     ebx, 0x1",
    "mov     byte [rax+r14], cl",
    "add     r14, 0x1",
    "mov     rdx, rax",
    "sub     rdx, r15",
    "add     r15, 0x40",
    "shr     rdx, 0x6",
    "and     edx, 0x1",
    "cmp     rax, r15",
    "jb      0x6e719",
    "mov     rax, qword [rbp-0x60]",
    "mov     dword [rbp-0x68], 0x1",
    "add     ebx, 0x1",
    "mov     byte [rax+r14], r8b",
    "add     r14, 0x1",
    "jmp     0x6e2cd",
    "cmp     r11d, 0x24",
    "je      0x6e420",
    "add     ebx, 0x1",
    "movsxd  rdx, ebx",
    "lea     rdi, [rel is_basic_table]",
    "lea     rsi, [r13+rdx]",
    "movzx   ecx, byte [rsi]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "jne     0x6e040",
    "lea     rax, [rel posixly_correct]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0x6e18c",
    "mov     ebx, esi",
    "test    r10d, r10d",
    "jne     0x6dca2",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rdx, qword [rbp-0x78]",
    "mov     r10, qword [rbp-0x68]",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x6e66a",
    "mov     rsi, r15",
    "call    realloc",
    "mov     r10, qword [rbp-0x68]",
    "mov     rdx, qword [rbp-0x78]",
    "mov     qword [rbp-0x60], rax",
    "sub     r15, 0xffffffffffffff80",
    "cmp     rax, r15",
    "jae     0x6e638",
    "add     r15, 0x40",
    "cmp     rax, r15",
    "jb      0x6e641",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6e9e9",
    "mov     edx, 0x1",
    "mov     eax, dword [rbp-0x68]",
    "test    eax, eax",
    "jne     0x6e290",
    "mov     eax, dword [rbp-0x70]",
    "mov     r9, r14",
    "mov     r8d, ebx",
    "test    eax, eax",
    "setne   al",
    "jmp     0x6dfdc",
    "mov     rdi, qword [rbp-0x60]",
    "mov     byte [rbp-0x68], r8b",
    "test    rdi, rdi",
    "je      0x6ed38",
    "test    rdx, rdx",
    "je      0x6e710",
    "movsxd  r12, ebx",
    "lea     r10, [r13+r12]",
    "movsx   r11d, byte [r10]",
    "mov     r8d, r11d",
    "test    r11d, r11d",
    "jne     0x6df30",
    "lea     rcx, [r13+r12+0x1]",
    "movzx   edx, byte [rcx]",
    "cmp     dl, 0x27",
    "je      0x6e538",
    "cmp     r11d, 0x7d",
    "je      0x6e5b0",
    "mov     rsi, qword [rbp-0x58]",
    "mov     eax, ebx",
    "sub     eax, dword [rsi]",
    "cmp     eax, 0x1",
    "jle     0x6e380",
    "cmp     r12d, 0x23",
    "jne     0x6e060",
    "add     ebx, eax",
    "jmp     0x6dc1b",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x6e300",
    "add     ebx, 0x1",
    "mov     qword [rbp-0x40], 0x0",
    "lea     r15, [rbp-0x40]",
    "movsxd  rsi, ebx",
    "mov     dword [rbp-0x4c], ebx",
    "lea     rdi, [r13+rsi]",
    "movzx   ecx, byte [rdi]",
    "cmp     cl, 0x27",
    "je      0x6e216",
    "lea     rax, [rel shell_compatibility_level]",
    "cmp     dword [rax], 0x2a",
    "setg    dl",
    "cmp     dword [rbp-0x60], 0x40",
    "setne   al",
    "test    dl, al",
    "je      0x6e18c",
    "mov     eax, dword [r12]",
    "test    eax, eax",
    "je      0x6f418",
    "jmp     0x6ddca",
    "cmp     qword [rbp-0x60], 0x0",
    "je      0x6f55d",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x78], rdx",
    "mov     qword [rbp-0x68], r10",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbp-0x88], r15",
    "mov     esi, dword [rdx]",
    "mov     qword [rbp-0x78], r15",
    "jmp     0x6e2aa",
    "nop     dword [rax]",
    "mov     rdx, qword [rbp-0x80]",
    "mov     rax, qword [rbp-0x40]",
    "lea     rcx, [rbp-0x40]",
    "mov     rsi, r10",
    "xor     edi, edi",
    "sub     rdx, r12",
    "mov     qword [rbp-0x68], rax",
    "call    mbrtowc",
    "mov     rdx, rax",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x6e77f",
    "test    cl, cl",
    "js      0x6e9e9",
    "test    al, al",
    "jne     0x6e6b2",
    "mov     rdi, r15",
    "call    malloc",
    "movzx   r8d, byte [rbp-0x68]",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x6e73b",
    "mov     rsi, r15",
    "call    realloc",
    "movzx   r8d, byte [rbp-0x68]",
    "mov     qword [rbp-0x60], rax",
    "sub     r15, 0xffffffffffffff80",
    "cmp     rax, r15",
    "jae     0x6e710",
    "add     r15, 0x40",
    "cmp     rax, r15",
    "jb      0x6e719",
    "lea     rax, [rel posixly_correct]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x6e8b3",
    "cmp     dl, 0x22",
    "je      0x6ec78",
    "sub     dword [rbp-0x70], 0x1",
    "jne     0x6e891",
    "cmp     r11d, 0x60",
    "je      0x6e790",
    "cmp     dword [rbp-0x60], 0x1",
    "je      0x6e687",
    "mov     dword [rbp-0x60], 0x40",
    "jmp     0x6dd19",
    "cmp     r12d, 0x2f",
    "jne     0x6e354",
    "test    r15b, r15b",
    "je      0x6e060",
    "test    r9b, r9b",
    "jne     0x6dc33",
    "mov     rax, qword [rbp-0x48]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x48]",
    "mov     byte [rbp-0x80], r9b",
    "mov     dword [rbp-0x88], r10d",
    "mov     qword [rbp-0x90], rax",
    "mov     rax, qword [rbp-0x68]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "movzx   r9d, byte [rbp-0x80]",
    "mov     r10d, dword [rbp-0x88]",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x6e030",
    "test    cl, cl",
    "js      0x6e300",
    "cmp     cl, 0x1",
    "sbb     ebx, 0xffffffff",
    "jmp     0x6dd19",
    "test    cl, cl",
    "je      0x6e216",
    "mov     r9d, dword [rbp-0x78]",
    "test    r9d, r9d",
    "jne     0x6e01f",
    "test    rdx, rdx",
    "mov     eax, 0x1",
    "cmove   rdx, rax",
    "jmp     0x6e5e6",
    "mov     rax, qword [rbp-0x68]",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x6e5e1",
    "setne   dl",
    "movzx   edx, dl",
    "mov     rax, qword [rbp-0x58]",
    "mov     dword [rax], r8d",
    "mov     rax, qword [rbp-0x60]",
    "mov     byte [rax+r9], 0x0",
    "jmp     0x6dde2",
    "cmp     qword [rbp-0x60], 0x0",
    "je      0x6f3b2",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     byte [rbp-0x68], r8b",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbp-0x88], r15",
    "mov     qword [rbp-0x78], r15",
    "jmp     0x6e3fd",
    "nop     dword [rax]",
    "mov     eax, dword [rbp-0x90]",
    "sub     eax, 0x40",
    "and     eax, 0xffffffbf",
    "jne     0x6ee16",
    "lea     rax, [rel extended_quote]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6e8b3",
    "mov     edx, dword [rbp-0x6c]",
    "lea     eax, [rbx+0x2]",
    "lea     rsi, [rbp-0x50]",
    "mov     rdi, r13",
    "mov     dword [rbp-0x50], eax",
    "call    sub_702f0",
    "movsxd  rdx, dword [rbp-0x50]",
    "mov     rsi, qword [rbp-0x80]",
    "mov     r12, rax",
    "mov     rax, rdx",
    "cmp     rdx, rsi",
    "jae     0x6dfce",
    "cmp     dl, 0x7b",
    "je      0x6ed4e",
    "lea     rax, [r14+0x2]",
    "cmp     rax, r15",
    "jae     0x6eeaa",
    "mov     r9, r14",
    "mov     r8d, ebx",
    "jmp     0x6dfe4",
    "mov     ecx, dword [rbp-0x6c]",
    "lea     eax, [rbx+0x1]",
    "lea     rsi, [rbp-0x50]",
    "mov     rdi, r13",
    "lea     rdx, [rel data_122e60]",
    "mov     dword [rbp-0x50], eax",
    "call    sub_6d3a0",
    "movsxd  r12, dword [rbp-0x50]",
    "mov     rsi, qword [rbp-0x80]",
    "mov     qword [rbp-0x98], rax",
    "mov     rax, r12",
    "cmp     r12, rsi",
    "jae     0x6dfce",
    "mov     eax, r8d",
    "lea     r9d, [rbx+0x1]",
    "and     eax, 0xfffffffd",
    "cmp     al, 0x3c",
    "jne     0x6e4d0",
    "mov     esi, r12d",
    "lea     rdi, [rel data_11f111]  {\"#%^,~:-=?+/\"}",
    "mov     dword [rbp-0x80], r10d",
    "call    strchr",
    "mov     r10d, dword [rbp-0x80]",
    "test    rax, rax",
    "mov     eax, 0x2",
    "cmove   eax, dword [rbp-0x60]",
    "mov     dword [rbp-0x60], eax",
    "jmp     0x6dd19",
    "mov     r15d, dword [rbp-0x60]",
    "cmp     r15d, 0x2",
    "jne     0x6dd19",
    "cmp     r12d, 0x5e",
    "jne     0x6e363",
    "test    r15b, r15b",
    "je      0x6e354",
    "test    rax, rax",
    "je      0x6dc18",
    "mov     rax, qword [rbp-0x90]",
    "add     ebx, 0x1",
    "mov     qword [rbp-0x48], rax",
    "jmp     0x6dc1b",
    "mov     eax, 0x1",
    "jne     0x6e040",
    "lea     r11, [rel locale_mb_cur_max]",
    "mov     dword [rbp-0x88], r10d",
    "mov     rdx, rsi",
    "mov     r12, r13",
    "mov     dword [rbp-0x80], r14d",
    "mov     rsi, rdi",
    "mov     r14, r11",
    "mov     rax, qword [rbp-0x60]",
    "lea     rsi, [r13+r12]",
    "mov     qword [rbp-0x68], rdx",
    "lea     rdi, [rax+r14]",
    "call    memcpy",
    "mov     rdx, qword [rbp-0x68]",
    "mov     dword [rbp-0x68], 0x0",
    "add     r14, rdx",
    "add     ebx, edx",
    "jmp     0x6e2cd",
    "lea     rax, [r14+0x3]",
    "cmp     rax, r15",
    "jae     0x6f0db",
    "lea     eax, [rbx+0x2]",
    "mov     edx, 0x1",
    "lea     rsi, [rbp-0x50]",
    "mov     rdi, r13",
    "mov     dword [rbp-0x50], eax",
    "call    sub_6d0a0",
    "movsxd  rdx, dword [rbp-0x50]",
    "mov     rdi, qword [rbp-0x80]",
    "mov     r12, rax",
    "mov     rax, rdx",
    "cmp     rdx, rdi",
    "jae     0x6e588",
    "lea     eax, [rbx+0x2]",
    "lea     rsi, [rbp-0x50]",
    "mov     edx, 0x1",
    "mov     rdi, r13",
    "mov     dword [rbp-0x50], eax",
    "call    sub_6d0a0",
    "movsxd  rdx, dword [rbp-0x50]",
    "mov     rsi, qword [rbp-0x80]",
    "mov     r12, rax",
    "mov     rax, rdx",
    "cmp     rdx, rsi",
    "jb      0x6ef8b",
    "mov     eax, dword [rbp-0x70]",
    "mov     r9, r14",
    "mov     r8d, esi",
    "test    eax, eax",
    "setne   al",
    "lea     rdx, [rel line_number]",
    "sub     eax, ebx",
    "lea     r8, [rbp-0x4c]",
    "xor     esi, esi",
    "mov     rdi, r12",
    "mov     ecx, dword [rdx]",
    "lea     edx, [rax-0x2]",
    "call    locale_expand",
    "mov     rdi, r12",
    "mov     rbx, rax",
    "call    free",
    "lea     rax, [rel singlequote_translations]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "je      0x6f1f2",
    "lea     rax, [r14+0x3]",
    "add     dword [rbp-0x70], 0x1",
    "cmp     rax, r15",
    "jae     0x6efe9",
    "lea     r9d, [rbx+0x1]",
    "cmp     dl, 0x28",
    "je      0x6ed9c",
    "mov     rdx, rax",
    "sub     rdx, r15",
    "add     r15, 0x40",
    "shr     rdx, 0x6",
    "and     edx, 0x1",
    "cmp     rax, r15",
    "jb      0x6eed7",
    "mov     rax, qword [rbp-0x60]",
    "add     ebx, 0x1",
    "mov     byte [rax+r14], 0x7d",
    "add     r14, 0x1",
    "jmp     0x6e2cd",
    "sub     eax, ebx",
    "sub     eax, 0x1",
    "movsxd  rbx, eax",
    "lea     rax, [rbx+r14+0x3]",
    "cmp     rax, r15",
    "jae     0x6f077",
    "cmp     r11d, 0x27",
    "jne     0x6ec62",
    "cmp     byte [r13+r12+0x1], 0x28",
    "je      0x6ea20",
    "mov     esi, r12d",
    "lea     rdi, [rel data_11f111]  {\"#%^,~:-=?+/\"}",
    "mov     dword [rbp-0x80], r10d",
    "call    strchr",
    "mov     r10d, dword [rbp-0x80]",
    "test    rax, rax",
    "mov     eax, 0x4",
    "cmovne  eax, r15d",
    "mov     dword [rbp-0x60], eax",
    "jmp     0x6dd19",
    "cmp     r12d, 0x2c",
    "jne     0x6e380",
    "test    r15b, r15b",
    "jne     0x6dc33",
    "mov     rsi, qword [rbp-0x58]",
    "mov     eax, ebx",
    "sub     eax, dword [rsi]",
    "cmp     eax, 0x1",
    "jle     0x6e380",
    "nop     dword [rax]",
    "nop     dword [rax]",
    "add     ebx, 0x1",
    "jmp     0x6e1f5",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x6e228",
    "mov     rdx, rax",
    "sub     rdx, r15",
    "add     r15, 0x40",
    "shr     rdx, 0x6",
    "and     edx, 0x1",
    "cmp     rax, r15",
    "jb      0x6f108",
    "mov     rax, qword [rbp-0x60]",
    "mov     r12d, 0x2724",
    "add     ebx, 0x2",
    "add     rax, r14",
    "add     r14, 0x2",
    "mov     word [rax], r12w",
    "jmp     0x6e2cd",
    "mov     ebx, dword [rbp-0x70]",
    "mov     r8d, dword [rbp-0x80]",
    "mov     r9, r14",
    "test    ebx, ebx",
    "setne   al",
    "jmp     0x6dfdc",
    "sub     eax, ebx",
    "mov     rdi, r12",
    "lea     rcx, [rbp-0x4c]",
    "xor     esi, esi",
    "lea     edx, [rax-0x2]",
    "call    ansiexpand",
    "mov     rdi, r12",
    "mov     rbx, rax",
    "call    free",
    "sub     eax, ebx",
    "xor     esi, esi",
    "lea     rcx, [rbp-0x4c]",
    "mov     rdi, r12",
    "lea     edx, [rax-0x2]",
    "mov     dword [rbp-0x98], edx",
    "call    ansiexpand",
    "mov     rdi, r12",
    "mov     rbx, rax",
    "call    free",
    "mov     eax, dword [rbp-0x90]",
    "mov     edx, dword [rbp-0x98]",
    "sub     eax, 0x40",
    "and     eax, 0xffffffbf",
    "je      0x6e911",
    "mov     esi, dword [rbp-0x4c]",
    "xor     edx, edx",
    "mov     rdi, rbx",
    "call    sh_mkdoublequoted",
    "mov     r12, rax",
    "jmp     0x6ece9",
    "mov     rdi, rbx",
    "call    sh_single_quote",
    "mov     r12, rax",
    "mov     rsi, rax",
    "lea     rdi, [r15+0x40]",
    "sub     rsi, r15",
    "mov     qword [rbp-0x78], rdi",
    "shr     rsi, 0x6",
    "and     esi, 0x1",
    "cmp     rax, rdi",
    "jb      0x6f027",
    "mov     rsi, qword [rbp-0x60]",
    "lea     rax, [r14+0x1]",
    "add     ebx, 0x2",
    "mov     byte [rsi+r14], 0x24",
    "add     r14, 0x2",
    "mov     byte [rsi+rax], dl",
    "mov     esi, dword [rbp-0x90]",
    "lea     eax, [rsi-0x40]",
    "and     eax, 0xffffffbf",
    "je      0x6ed8d",
    "mov     edx, dword [rbp-0x6c]",
    "lea     eax, [rbx+0x2]",
    "lea     rsi, [rbp-0x50]",
    "mov     rdi, r13",
    "mov     dword [rbp-0x50], eax",
    "call    extract_command_subst",
    "movsxd  r12, dword [rbp-0x50]",
    "mov     rsi, qword [rbp-0x80]",
    "mov     qword [rbp-0x98], rax",
    "mov     rax, r12",
    "cmp     r12, rsi",
    "jae     0x6dfce",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jg      0x6eb4d",
    "mov     rdi, qword [rbp-0x60]",
    "test    rdi, rdi",
    "je      0x6f140",
    "test    rdx, rdx",
    "je      0x6eece",
    "mov     rdx, rax",
    "sub     rdx, r15",
    "add     r15, 0x40",
    "shr     rdx, 0x6",
    "and     edx, 0x1",
    "cmp     rax, r15",
    "jb      0x6f0a4",
    "mov     rax, qword [rbp-0x78]",
    "mov     rdx, qword [rbp-0x88]",
    "cmp     rax, rdx",
    "cmovae  rdx, rax",
    "cmp     r11d, 0x22",
    "je      0x6df95",
    "lea     rax, [rel posixly_correct]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x6e868",
    "lea     rdx, [rel no_longjmp_on_fatal_error]",
    "xor     ecx, ecx",
    "lea     eax, [rbx+0x2]",
    "mov     rdi, r13",
    "mov     dword [rbp-0x50], eax",
    "cdqe    ",
    "mov     esi, dword [rdx]",
    "lea     rdx, [rbp-0x50]",
    "mov     byte [rbp-0xa0], r8b",
    "test    esi, esi",
    "mov     esi, dword [rbp-0x6c]",
    "setne   cl",
    "shl     ecx, 0x6",
    "or      ecx, esi",
    "lea     rsi, [r13+rax]",
    "call    xparse_dolparen",
    "movsxd  r12, dword [rbp-0x50]",
    "mov     rsi, qword [rbp-0x80]",
    "mov     qword [rbp-0x98], rax",
    "movzx   r8d, byte [rbp-0xa0]",
    "cmp     r12, rsi",
    "mov     rax, r12",
    "jae     0x6dfce",
    "cmp     r11d, 0x27",
    "jne     0x6ec62",
    "test    r15b, r15b",
    "je      0x6e380",
    "mov     dword [rbp-0x60], 0x80",
    "jmp     0x6dd19",
    "movsxd  rdx, ebx",
    "lea     rsi, [r12+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x6e208",
    "lea     rax, [rel locale_utf8locale]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "je      0x6e240",
    "add     ebx, eax",
    "mov     rdi, qword [rbp-0x60]",
    "test    rdi, rdi",
    "je      0x6f38b",
    "test    rdx, rdx",
    "je      0x6f0ff",
    "mov     rdx, rax",
    "sub     rdx, r15",
    "add     r15, 0x40",
    "shr     rdx, 0x6",
    "and     edx, 0x1",
    "cmp     rax, r15",
    "jb      0x6f234",
    "mov     rbx, qword [rbp-0x88]",
    "mov     rdx, qword [rbp-0x78]",
    "cmp     rbx, rdx",
    "cmovae  rdx, rbx",
    "mov     rdi, rbx",
    "call    sh_single_quote",
    "mov     rdi, rax",
    "mov     r12, rax",
    "call    strlen",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x98], rax",
    "call    free",
    "lea     rax, [rel extended_quote]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "jne     0x6f1db",
    "mov     rdi, r12",
    "call    strlen",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x98], rax",
    "call    free",
    "mov     rax, qword [rbp-0x98]",
    "add     rax, r14",
    "mov     qword [rbp-0xa0], rax",
    "add     rax, 0x1",
    "cmp     rax, r15",
    "jae     0x6f30a",
    "mov     rdx, rax",
    "sub     rdx, r15",
    "add     r15, 0x40",
    "shr     rdx, 0x6",
    "and     edx, 0x1",
    "cmp     rax, r15",
    "jb      0x6f337",
    "mov     rax, qword [rbp-0x78]",
    "mov     rbx, qword [rbp-0x88]",
    "cmp     rax, rbx",
    "mov     rdx, rbx",
    "cmovae  rdx, rax",
    "jmp     0x6e963",
    "mov     rdi, qword [rbp-0x60]",
    "mov     byte [rbp-0x98], dl",
    "mov     qword [rbp-0x88], rcx",
    "test    rdi, rdi",
    "je      0x6f36b",
    "test    rsi, rsi",
    "je      0x6f016",
    "mov     dword [rbp-0x90], 0x1",
    "jmp     0x6e2cd",
    "cmp     esi, 0x4",
    "jne     0x6e2cd",
    "sub     eax, ebx",
    "sub     eax, 0x2",
    "movsxd  rbx, eax",
    "lea     rax, [r14+rbx+0x4]",
    "cmp     rax, r15",
    "jae     0x6f268",
    "mov     eax, r8d",
    "lea     rdx, [rel is_basic_table]",
    "mov     ecx, r8d",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "je      0x6ee40",
    "mov     rax, qword [rbp-0x60]",
    "mov     ebx, r9d",
    "mov     byte [rax+r14], r8b",
    "add     r14, 0x1",
    "mov     rdi, r15",
    "call    malloc",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x6eef0",
    "mov     rsi, r15",
    "call    realloc",
    "mov     qword [rbp-0x60], rax",
    "sub     r15, 0xffffffffffffff80",
    "cmp     rax, r15",
    "jae     0x6eece",
    "add     r15, 0x40",
    "cmp     rax, r15",
    "jb      0x6eed7",
    "mov     rdi, qword [rbp-0x60]",
    "test    rdi, rdi",
    "je      0x6f2de",
    "test    rdx, rdx",
    "je      0x6f09b",
    "mov     edx, dword [rbp-0x6c]",
    "lea     rsi, [rbp-0x50]",
    "mov     rdi, r13",
    "mov     dword [rbp-0x50], r9d",
    "mov     byte [rbp-0x98], r8b",
    "call    sub_702f0",
    "movzx   r8d, byte [rbp-0x98]",
    "mov     r12, rax",
    "jmp     0x6e450",
    "lea     rsi, [rbp-0x50]",
    "xor     edx, edx",
    "mov     rdi, r13",
    "mov     byte [rbp-0x98], r8b",
    "mov     dword [rbp-0x50], r9d",
    "call    sub_6d0a0",
    "movzx   r8d, byte [rbp-0x98]",
    "mov     r12, rax",
    "jmp     0x6dfba",
    "lea     rax, [rel shell_compatibility_level]",
    "cmp     dword [rax], 0x2a",
    "jle     0x6e868",
    "sub     eax, ebx",
    "sub     eax, 0x2",
    "movsxd  rbx, eax",
    "lea     rax, [r14+rbx+0x4]",
    "cmp     rax, r15",
    "jae     0x6f16e",
    "mov     rdi, qword [rbp-0x58]",
    "mov     eax, ebx",
    "sub     eax, dword [rdi]",
    "cmp     eax, 0x1",
    "jg      0x6dc44",
    "mov     r14d, dword [rbp-0x80]",
    "mov     r10d, dword [rbp-0x88]",
    "mov     r13, r12",
    "cmp     cl, 0x27",
    "jne     0x6e1d0",
    "mov     rax, qword [rbp-0x68]",
    "xor     edi, edi",
    "mov     rcx, r15",
    "mov     r13, qword [rbp-0x40]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x6e270",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x6e1f3",
    "mov     rdi, r15",
    "call    malloc",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x6f121",
    "mov     rsi, r15",
    "call    realloc",
    "mov     qword [rbp-0x60], rax",
    "sub     r15, 0xffffffffffffff80",
    "cmp     rax, r15",
    "jae     0x6f0ff",
    "add     r15, 0x40",
    "cmp     rax, r15",
    "jb      0x6f108",
    "mov     rdi, qword [rbp-0x60]",
    "test    rdi, rdi",
    "je      0x6f5a6",
    "test    rdx, rdx",
    "je      0x6f22b",
    "mov     rdi, rbx",
    "mov     r12, rbx",
    "call    strlen",
    "mov     qword [rbp-0x98], rax",
    "jmp     0x6e933",
    "movsxd  rax, edx",
    "mov     qword [rbp-0x98], rax",
    "jmp     0x6e933",
    "mov     rdi, qword [rbp-0x60]",
    "test    rdi, rdi",
    "je      0x6f482",
    "test    rdx, rdx",
    "je      0x6f32e",
    "lea     rcx, [rdx+r14]",
    "mov     rsi, r12",
    "mov     rax, rcx",
    "sub     rax, rbx",
    "cmp     rax, rdx",
    "cmovb   rax, rdx",
    "sub     rbx, rcx",
    "mov     rdx, qword [rbp-0x98]",
    "lea     rcx, [rax+rbx]",
    "mov     rax, qword [rbp-0x60]",
    "lea     rdi, [rax+r14]",
    "call    __strncpy_chk",
    "mov     rdi, r12",
    "call    free",
    "mov     ebx, dword [rbp-0x50]",
    "mov     r14, qword [rbp-0xa0]",
    "jmp     0x6e2cd",
    "mov     rdi, qword [rbp-0x78]",
    "call    malloc",
    "movzx   edx, byte [rbp-0x98]",
    "mov     rcx, qword [rbp-0x88]",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x6f05c",
    "mov     rsi, qword [rbp-0x78]",
    "call    realloc",
    "mov     rcx, qword [rbp-0x88]",
    "movzx   edx, byte [rbp-0x98]",
    "mov     qword [rbp-0x60], rax",
    "mov     rsi, qword [rbp-0x78]",
    "add     qword [rbp-0x78], 0x40",
    "mov     rsi, qword [rbp-0x78]",
    "cmp     rax, rsi",
    "jb      0x6f027",
    "mov     rdx, rax",
    "sub     rdx, r15",
    "add     r15, 0x40",
    "shr     rdx, 0x6",
    "and     edx, 0x1",
    "cmp     rax, r15",
    "jb      0x6f295",
    "mov     rax, qword [rbp-0x78]",
    "mov     rsi, qword [rbp-0x88]",
    "lea     r8, [r14+0x2]",
    "mov     r9d, 0x2824",
    "mov     rdi, qword [rbp-0x60]",
    "cmp     rax, rsi",
    "mov     rdx, rsi",
    "cmovae  rdx, rax",
    "mov     word [rdi+r14], r9w",
    "lea     rcx, [r8+rdx]",
    "mov     rax, rcx",
    "jmp     0x6eac3",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6ee56",
    "mov     edx, 0x1",
    "cmp     r11d, 0x23",
    "jne     0x6e9b7",
    "test    al, al",
    "je      0x6e9a9",
    "cmp     qword [rbp-0x60], 0x0",
    "je      0x6f456",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbp-0x88], r15",
    "mov     qword [rbp-0x78], r15",
    "jmp     0x6e89e",
    "mov     rdi, r15",
    "call    malloc",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x6f0bd",
    "mov     rsi, r15",
    "call    realloc",
    "mov     qword [rbp-0x60], rax",
    "sub     r15, 0xffffffffffffff80",
    "cmp     rax, r15",
    "jae     0x6f09b",
    "add     r15, 0x40",
    "cmp     rax, r15",
    "jb      0x6f0a4",
    "sub     eax, ebx",
    "sub     eax, 0x2",
    "cdqe    ",
    "mov     qword [rbp-0x98], rax",
    "lea     rax, [r14+rax+0x3]",
    "cmp     rax, r15",
    "jae     0x6ef10",
    "movsxd  r9, dword [rbp-0x50]",
    "mov     rsi, qword [rbp-0x80]",
    "mov     rax, r9",
    "cmp     r9, rsi",
    "jb      0x6ebbb",
    "cmp     dword [rbp-0x90], 0x40",
    "je      0x6e868",
    "mov     rdx, rax",
    "sub     rdx, r15",
    "add     r15, 0x40",
    "shr     rdx, 0x6",
    "and     edx, 0x1",
    "cmp     rax, r15",
    "jb      0x6f19b",
    "mov     rax, qword [rbp-0x78]",
    "mov     rdx, qword [rbp-0x88]",
    "cmp     rax, rdx",
    "cmovae  rdx, rax",
    "nop     ",
    "cmp     dword [r14], 0x1",
    "jle     0x6e280",
    "test    rax, rax",
    "jne     0x6e1f3",
    "mov     qword [rbp-0x40], r13",
    "add     ebx, 0x1",
    "jmp     0x6e1f5",
    "cmp     qword [rbp-0x60], 0x0",
    "je      0x6f39c",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbp-0x88], r15",
    "mov     qword [rbp-0x78], r15",
    "jmp     0x6ee23",
    "mov     rdi, r15",
    "call    malloc",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x6f24d",
    "mov     rsi, r15",
    "call    realloc",
    "mov     qword [rbp-0x60], rax",
    "sub     r15, 0xffffffffffffff80",
    "cmp     rax, r15",
    "jae     0x6f22b",
    "add     r15, 0x40",
    "cmp     rax, r15",
    "jb      0x6f234",
    "mov     rax, qword [rbp-0x98]",
    "add     rax, r14",
    "mov     qword [rbp-0xa0], rax",
    "add     rax, 0x1",
    "cmp     rax, r15",
    "jae     0x6f207",
    "mov     rdi, r15",
    "call    malloc",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x6f350",
    "mov     rsi, r15",
    "call    realloc",
    "mov     qword [rbp-0x60], rax",
    "sub     r15, 0xffffffffffffff80",
    "cmp     rax, r15",
    "jae     0x6f32e",
    "add     r15, 0x40",
    "cmp     rax, r15",
    "jb      0x6f337",
    "cmp     qword [rbp-0x60], 0x0",
    "je      0x6f3d1",
    "mov     r15, qword [rbp-0x78]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x88], rcx",
    "mov     rsi, r15",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r15, qword [rbp-0x78]",
    "mov     qword [rbp-0x88], r15",
    "jmp     0x6ed5f",
    "sub     rsi, 0xffffffffffffff80",
    "cmp     rax, rsi",
    "jae     0x6f01a",
    "mov     qword [rbp-0x78], rsi",
    "mov     rdi, qword [rbp-0x60]",
    "test    rdi, rdi",
    "je      0x6f5df",
    "test    rdx, rdx",
    "je      0x6f28c",
    "sub     rax, rsi",
    "mov     qword [rbp-0xa0], r8",
    "cmp     rax, rdx",
    "cmovb   rax, rdx",
    "sub     rsi, rcx",
    "add     rdi, r8",
    "mov     rdx, rbx",
    "lea     rcx, [rax+rsi]",
    "mov     rsi, qword [rbp-0x98]",
    "call    __strncpy_chk",
    "mov     r8, qword [rbp-0xa0]",
    "movzx   eax, byte [r13+r12]",
    "mov     rdi, qword [rbp-0x60]",
    "add     r8, rbx",
    "mov     byte [rdi+r8], al",
    "mov     rdi, qword [rbp-0x98]",
    "lea     r14, [r8+0x1]",
    "call    free",
    "mov     eax, dword [rbp-0x50]",
    "lea     ebx, [rax+0x1]",
    "jmp     0x6e2cd",
    "mov     rdx, qword [rbp-0x80]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     rsi, r10",
    "mov     dword [rbp-0xa0], r11d",
    "mov     rbx, qword [rbp-0x40]",
    "sub     rdx, r12",
    "mov     dword [rbp-0x98], r9d",
    "call    mbrtowc",
    "mov     edx, 0x1",
    "mov     r9d, dword [rbp-0x98]",
    "mov     r11d, dword [rbp-0xa0]",
    "test    rax, rax",
    "cmovne  rdx, rax",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x6eb72",
    "test    r8b, r8b",
    "jns     0x6eb6d",
    "cmp     dword [rbp-0x90], 0x1",
    "sete    al",
    "cmp     r11d, 0x25",
    "jne     0x6e9a9",
    "cmp     r11d, 0x2f",
    "jne     0x6f493",
    "test    al, al",
    "jne     0x6e48b",
    "mov     dword [rbp-0x90], 0x40",
    "mov     rsi, qword [rbp-0x58]",
    "mov     eax, ebx",
    "sub     eax, dword [rsi]",
    "cmp     eax, 0x1",
    "jg      0x6e2cd",
    "cmp     qword [rbp-0x60], 0x0",
    "je      0x6f5b7",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbp-0x88], r15",
    "mov     rdx, r15",
    "mov     qword [rbp-0x78], r15",
    "jmp     0x6e7ef",
    "mov     rdx, rax",
    "sub     rdx, r15",
    "add     r15, 0x40",
    "shr     rdx, 0x6",
    "and     edx, 0x1",
    "cmp     rax, r15",
    "jb      0x6ef3d",
    "mov     rax, qword [rbp-0x78]",
    "mov     rdx, qword [rbp-0x88]",
    "cmp     rax, rdx",
    "cmovae  rdx, rax",
    "lea     rdx, [rel locale_mb_cur_max]",
    "mov     eax, 0x27",
    "cmp     dword [rdx], 0x1",
    "jle     0x6e51f",
    "mov     rdi, qword [rbp-0x60]",
    "mov     byte [rbp-0x78], r8b",
    "test    rdi, rdi",
    "je      0x6f2f4",
    "test    rdx, rdx",
    "je      0x6f192",
    "nop     dword [rax]",
    "cmp     qword [rbp-0x60], 0x0",
    "je      0x6f590",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbp-0x88], r15",
    "mov     qword [rbp-0x78], r15",
    "jmp     0x6e951",
    "cmp     qword [rbp-0x60], 0x0",
    "je      0x6f46c",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbp-0x88], r15",
    "mov     qword [rbp-0x78], r15",
    "jmp     0x6ed1e",
    "mov     rdi, r15",
    "call    malloc",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x6f2ae",
    "mov     rsi, r15",
    "call    realloc",
    "mov     qword [rbp-0x60], rax",
    "sub     r15, 0xffffffffffffff80",
    "cmp     rax, r15",
    "jae     0x6f28c",
    "add     r15, 0x40",
    "cmp     rax, r15",
    "jb      0x6f295",
    "mov     rax, qword [rbp-0x60]",
    "lea     rsi, [r13+r12]",
    "mov     dword [rbp-0xa4], r11d",
    "mov     dword [rbp-0xa0], r9d",
    "lea     rdi, [rax+r14]",
    "mov     qword [rbp-0x98], rdx",
    "call    memcpy",
    "mov     rdx, qword [rbp-0x98]",
    "mov     r9d, dword [rbp-0xa0]",
    "mov     r11d, dword [rbp-0xa4]",
    "lea     ebx, [r9+rdx-0x1]",
    "add     r14, rdx",
    "jmp     0x6e46f",
    "mov     qword [rbp-0x40], rbx",
    "jmp     0x6eb6d",
    "cmp     r11d, 0x5e",
    "jne     0x6f4a1",
    "test    al, al",
    "je      0x6f493",
    "mov     esi, r11d",
    "lea     rdi, [rel data_11f111]  {\"#%^,~:-=?+/\"}",
    "call    strchr",
    "cmp     rax, 0x1",
    "mov     eax, 0x1",
    "sbb     eax, 0xffffffff",
    "mov     dword [rbp-0x90], eax",
    "jmp     0x6e2cd",
    "lea     r9, [r14+0x1]",
    "mov     rdi, qword [rbp-0x88]",
    "mov     rsi, qword [rbp-0x60]",
    "lea     rcx, [r9+rdx]",
    "mov     qword [rbp-0xa0], r9",
    "mov     rax, rcx",
    "mov     byte [rsi+r14], 0x60",
    "sub     rax, rdi",
    "cmp     rax, rdx",
    "cmovb   rax, rdx",
    "sub     rdi, rcx",
    "mov     rdx, rbx",
    "lea     rcx, [rax+rdi]",
    "lea     rdi, [rsi+r9]",
    "mov     rsi, qword [rbp-0x98]",
    "call    __strncpy_chk",
    "mov     r9, qword [rbp-0xa0]",
    "mov     rsi, qword [rbp-0x60]",
    "movzx   eax, byte [r13+r12]",
    "mov     rdi, qword [rbp-0x98]",
    "add     r9, rbx",
    "mov     byte [rsi+r9], al",
    "lea     r14, [r9+0x1]",
    "call    free",
    "mov     eax, dword [rbp-0x50]",
    "lea     ebx, [rax+0x1]",
    "jmp     0x6e2cd",
    "mov     rdi, qword [rbp-0x60]",
    "mov     byte [rbp-0x88], r8b",
    "mov     qword [rbp-0x78], r9",
    "test    rdi, rdi",
    "je      0x6f151",
    "test    rdx, rdx",
    "je      0x6ef34",
    "mov     rbx, qword [rbp-0x60]",
    "mov     byte [rbx+r14], al",
    "add     r14, 0x1",
    "mov     ebx, r9d",
    "jmp     0x6e2cd",
    "movzx   eax, byte [r13+r12]",
    "mov     rdi, r15",
    "call    malloc",
    "movzx   r8d, byte [rbp-0x78]",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x6f1bd",
    "mov     rsi, r15",
    "call    realloc",
    "movzx   r8d, byte [rbp-0x78]",
    "mov     qword [rbp-0x60], rax",
    "sub     r15, 0xffffffffffffff80",
    "cmp     rax, r15",
    "jae     0x6f192",
    "add     r15, 0x40",
    "cmp     rax, r15",
    "jb      0x6f19b",
    "cmp     qword [rbp-0x60], 0x0",
    "mov     qword [rbp-0x88], r15",
    "mov     qword [rbp-0x78], r15",
    "jne     0x6ede2",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "cmp     r11d, 0x2c",
    "jne     0x6f4af",
    "test    al, al",
    "jne     0x6e48b",
    "mov     dword [rbp-0x90], 0x80",
    "mov     rsi, qword [rbp-0x58]",
    "mov     eax, ebx",
    "sub     eax, dword [rsi]",
    "cmp     eax, 0x1",
    "jg      0x6e2cd",
    "mov     rdi, r15",
    "call    malloc",
    "movzx   r8d, byte [rbp-0x88]",
    "mov     r9, qword [rbp-0x78]",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x6ef6d",
    "mov     rsi, r15",
    "call    realloc",
    "mov     r9, qword [rbp-0x78]",
    "movzx   r8d, byte [rbp-0x88]",
    "mov     qword [rbp-0x60], rax",
    "sub     r15, 0xffffffffffffff80",
    "cmp     rax, r15",
    "jae     0x6ef34",
    "add     r15, 0x40",
    "cmp     rax, r15",
    "jb      0x6ef3d",
    "cmp     qword [rbp-0x60], 0x0",
    "je      0x6f4ef",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     byte [rbp-0xa0], r8b",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbp-0x88], r15",
    "mov     rdx, r15",
    "mov     qword [rbp-0x78], r15",
    "jmp     0x6eaa3",
    "cmp     dword [rbp-0x90], 0x1",
    "je      0x6e4a6",
    "test    al, al",
    "jne     0x6e48b",
    "jmp     0x6e4a6",
    "cmp     qword [rbp-0x60], 0x0",
    "je      0x6f526",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     byte [rbp-0xa0], r8b",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbp-0x88], r15",
    "mov     rdx, r15",
    "mov     qword [rbp-0x78], r15",
    "jmp     0x6ebe9",
    "mov     rdi, qword [rbp-0x60]",
    "mov     rsi, qword [rbp-0x88]",
    "mov     byte [rdi+r14], r8b",
    "lea     r8, [r14+0x2]",
    "mov     byte [rdi+r14+0x1], 0x28",
    "lea     rcx, [r8+rdx]",
    "mov     rax, rcx",
    "cmp     dword [rbp-0x90], 0x2",
    "jne     0x6e2cd",
    "lea     rbx, [r14+0x1]",
    "mov     rdi, qword [rbp-0x88]",
    "mov     rsi, qword [rbp-0x60]",
    "mov     qword [rbp-0xa0], r9",
    "lea     rcx, [rbx+rdx]",
    "mov     rax, rcx",
    "mov     byte [rsi+r14], r8b",
    "mov     r14, qword [rbp-0x98]",
    "sub     rax, rdi",
    "cmp     rax, rdx",
    "cmovb   rax, rdx",
    "sub     rdi, rcx",
    "mov     rdx, r14",
    "lea     rcx, [rax+rdi]",
    "lea     rdi, [rsi+rbx]",
    "mov     rsi, r12",
    "call    __strncpy_chk",
    "mov     rax, r14",
    "mov     rsi, qword [rbp-0x60]",
    "mov     rdi, r12",
    "mov     r9, qword [rbp-0xa0]",
    "add     rax, rbx",
    "mov     rbx, rax",
    "lea     r14, [rax+0x1]",
    "movzx   eax, byte [r13+r9-0x1]",
    "mov     byte [rsi+rbx], al",
    "call    free",
    "mov     ebx, dword [rbp-0x50]",
    "jmp     0x6e2cd",
    "mov     esi, r11d",
    "lea     rdi, [rel data_11f111]  {\"#%^,~:-=?+/\"}",
    "call    strchr",
    "cmp     rax, 0x1",
    "sbb     eax, eax",
    "and     eax, 0x2",
    "add     eax, 0x2",
    "mov     dword [rbp-0x90], eax",
    "jmp     0x6e2cd"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
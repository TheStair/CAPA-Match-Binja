{
  "address": "0xb8ef0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "mov     r14d, esi",
    "push    r13",
    "lea     r13, [rbp-0x130]",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "lea     rbx, [rbp-0xb0]",
    "mov     rdi, rbx",
    "sub     rsp, 0x110",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r13",
    "call    sigemptyset",
    "mov     rsi, rbx",
    "mov     rdx, r13",
    "xor     edi, edi",
    "call    sigprocmask",
    "mov     rdi, r12",
    "call    get_job_spec",
    "mov     ebx, eax",
    "test    eax, eax",
    "js      0xb9030",
    "cmp     eax, 0xfffffffe",
    "je      0xb8fc8",
    "lea     rax, [rel js]",
    "cmp     dword [rax+0x1c], ebx",
    "jle     0xb9038",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "mov     ebx, 0x1",
    "call    sigprocmask",
    "nop     dword [rax]",
    "test    r12, r12",
    "je      0xb90b8",
    "lea     rdx, [rel jobs]",
    "movsxd  rax, ebx",
    "mov     rdx, qword [rdx]",
    "mov     rax, qword [rdx+rax*8]",
    "test    rax, rax",
    "je      0xb9038",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x110",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_12151e]  {\"current\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rbx, rax",
    "jmp     0xb9045",
    "mov     rax, qword [r12+0x8]",
    "mov     rbx, qword [rax]",
    "test    byte [rax+0x18], 0x4",
    "je      0xb9090",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel 0x12111a]  {\"%s: no such job\"}",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xb8fc8",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133fb8]  {\"job %d started without job contr\u2026\"}",
    "call    dcgettext",
    "lea     esi, [rbx+0x1]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xb8fc8",
    "test    r14d, r14d",
    "jne     0xb9008",
    "mov     edi, ebx",
    "mov     esi, 0x1",
    "call    start_job",
    "mov     ebx, eax",
    "test    eax, eax",
    "js      0xb8fc8",
    "lea     r12, [rel last_asynchronous_pid]",
    "mov     eax, dword [rax+0x10]",
    "xor     esi, esi",
    "mov     edi, ebx",
    "mov     r14d, dword [r12]",
    "mov     dword [r12], eax",
    "call    start_job",
    "test    eax, eax",
    "jns     0xb9070",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "jmp     0xb8fdc",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "xor     ebx, ebx",
    "call    sigprocmask",
    "jmp     0xb8fdc",
    "mov     dword [r12], r14d",
    "nop     dword [rax]",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xb90d3"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
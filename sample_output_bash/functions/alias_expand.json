{
  "address": "0x931d0",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x48",
    "call    strlen",
    "lea     ebx, [rax+0x1]",
    "movsxd  rax, ebx",
    "mov     rdi, rax",
    "mov     qword [rbp-0x68], rax",
    "call    malloc",
    "mov     qword [rbp-0x38], rax",
    "test    rax, rax",
    "je      0x938ec",
    "mov     rsi, qword [rbp-0x68]",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, qword [rbp-0x68]",
    "call    malloc",
    "mov     qword [rbp-0x40], rax",
    "test    rax, rax",
    "je      0x93901",
    "mov     rsi, qword [rbp-0x68]",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38]",
    "mov     dword [rbp-0x58], 0x0",
    "xor     r14d, r14d",
    "mov     byte [rax], 0x0",
    "mov     rax, qword [rbp-0x68]",
    "mov     qword [rbp-0x50], rax",
    "mov     eax, 0x1",
    "mov     rdi, qword [rbp-0x40]",
    "call    free",
    "mov     rax, qword [rbp-0x38]",
    "add     rsp, 0x48",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "xor     r13d, r13d",
    "mov     r15d, r14d",
    "mov     r8d, r14d",
    "mov     r14d, ebx",
    "mov     ebx, r13d",
    "xor     r13d, r13d",
    "jmp     0x932d0",
    "cmp     al, 0x20",
    "je      0x935c0",
    "add     r15d, 0x1",
    "movsxd  rdx, r15d",
    "movzx   eax, byte [r12+rdx]",
    "test    al, al",
    "jne     0x93272",
    "xor     ebx, ebx",
    "jmp     0x932d0",
    "cmp     al, 0x9",
    "je      0x935c0",
    "test    r13d, r13d",
    "jne     0x935b8",
    "mov     ebx, r14d",
    "mov     r14d, r8d",
    "cmp     r8d, r15d",
    "je      0x938d0",
    "cmp     al, 0x5c",
    "je      0x93648",
    "mov     r10d, r15d",
    "sub     r10d, r14d",
    "lea     r13d, [r10+0x1]",
    "movzx   edx, byte [r12+rdx+0x1]",
    "test    dl, dl",
    "jne     0x937a0",
    "cmp     al, 0x27",
    "je      0x93558",
    "lea     eax, [r10+0x32]",
    "nop     dword [rax]",
    "mov     rax, qword [rbp-0x50]",
    "movsxd  rdi, r14d",
    "mov     r13, qword [rbp-0x38]",
    "movsxd  rdx, r10d",
    "mov     rsi, qword [rbp-0x48]",
    "mov     dword [rbp-0x60], r10d",
    "cmp     rdi, rax",
    "mov     rcx, rax",
    "cmovae  rcx, rdi",
    "sub     rcx, rdi",
    "add     rdi, r13",
    "call    __strncpy_chk",
    "mov     r10d, dword [rbp-0x60]",
    "movsxd  rax, r15d",
    "mov     esi, dword [rel data_1688fc]",
    "add     rax, r12",
    "lea     r9d, [r10+r14]",
    "mov     qword [rbp-0x48], rax",
    "movsxd  r9, r9d",
    "mov     byte [r13+r9], 0x0",
    "test    esi, esi",
    "je      0x93688",
    "mov     dword [rbp-0x70], r8d",
    "mov     byte [rbp-0x60], dl",
    "call    __ctype_b_loc",
    "movzx   edx, byte [rbp-0x60]",
    "mov     r8d, dword [rbp-0x70]",
    "mov     rax, qword [rax]",
    "test    byte [rax+rdx*2+0x1], 0x4",
    "je      0x93850",
    "mov     ebx, r14d",
    "mov     r10d, r13d",
    "mov     r14d, r8d",
    "cmp     r8d, r15d",
    "jne     0x932ef",
    "add     r15d, 0x1",
    "movsxd  rcx, r15d",
    "movzx   edx, byte [r12+rcx]",
    "test    dl, dl",
    "je      0x932e0",
    "cmp     al, 0x22",
    "je      0x93558",
    "add     ebx, eax",
    "cmp     r13d, ebx",
    "jge     0x93738",
    "movsxd  rax, ebx",
    "mov     rdi, qword [rbp-0x38]",
    "mov     dword [rbp-0x60], r10d",
    "mov     rsi, rax",
    "mov     qword [rbp-0x50], rax",
    "call    realloc",
    "mov     r10d, dword [rbp-0x60]",
    "test    rax, rax",
    "mov     qword [rbp-0x38], rax",
    "jne     0x93319",
    "mov     rax, qword [rbp-0x48]",
    "movsx   esi, byte [rax]",
    "test    sil, sil",
    "jne     0x93818",
    "mov     dword [rbp-0x58], 0x1",
    "movzx   eax, byte [rax]",
    "mov     edx, 0x1",
    "mov     r13d, 0x1",
    "jmp     0x932d0",
    "add     ebx, 0x1",
    "jmp     0x932d0",
    "movsxd  rax, r15d",
    "cmp     byte [r12+rax], 0x0",
    "je      0x938d0",
    "cmp     dl, 0x5c",
    "je      0x93540",
    "test    ebx, ebx",
    "jne     0x932d0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, qword [rbp-0x50]",
    "lea     rsi, [rel data_11f045]  {\"xrealloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "lea     rdi, [rel data_120b6e]  {\"\\r\\n;|&(\"}",
    "call    mbschr",
    "xor     edx, edx",
    "test    rax, rax",
    "mov     rax, qword [rbp-0x48]",
    "setne   dl",
    "or      dword [rbp-0x58], edx",
    "movzx   eax, byte [rax]",
    "jmp     0x9337c",
    "mov     r13, qword [rbp-0x40]",
    "mov     r14d, r15d",
    "xor     edx, edx",
    "jmp     0x93417",
    "mov     r14, qword [rbp-0x48]",
    "mov     r13d, r15d",
    "mov     r13d, 0x1",
    "jmp     0x932f9",
    "add     r15d, 0x1",
    "movsxd  rdx, r15d",
    "cmp     byte [r12+rdx], 0x0",
    "je      0x932e0",
    "cmp     dl, al",
    "jne     0x93558",
    "movsx   esi, al",
    "lea     rdi, [rel data_120b6e]  {\"\\r\\n;|&(\"}",
    "mov     dword [rbp-0x60], r8d",
    "call    mbschr",
    "mov     r8d, dword [rbp-0x60]",
    "test    rax, rax",
    "je      0x93656",
    "mov     dword [rel data_1688fc], edx",
    "test    al, al",
    "je      0x93698",
    "mov     rsi, qword [rbp-0x48]",
    "mov     rdi, qword [rbp-0x40]",
    "mov     rcx, qword [rbp-0x68]",
    "call    __strncpy_chk",
    "mov     byte [r13], 0x0",
    "mov     r13, qword [rbp-0x40]",
    "mov     esi, 0x5c",
    "mov     rdi, r13",
    "call    mbschr",
    "test    rax, rax",
    "je      0x93710",
    "mov     r14d, r13d",
    "jmp     0x936d0",
    "cmp     al, 0x9",
    "je      0x938c0",
    "mov     rdi, qword [rbp-0x38]",
    "mov     dword [rbp-0x60], r10d",
    "call    strlen",
    "mov     r10d, dword [rbp-0x60]",
    "add     r13d, eax",
    "mov     r14, rax",
    "cmp     r13d, ebx",
    "jge     0x93730",
    "nop     word [rax+rax]",
    "cmp     byte [r12+rcx], 0x0",
    "mov     qword [rbp-0x70], rcx",
    "je      0x932e0",
    "add     dword [rel data_1688fc], 0x1",
    "nop     ",
    "mov     rax, qword [rbp-0x40]",
    "cmp     byte [rax], 0x0",
    "je      0x935d0",
    "cmp     byte [r13], 0x0",
    "je      0x935d0",
    "mov     edx, r14d",
    "sub     edx, r15d",
    "jne     0x9340c",
    "movsx   esi, al",
    "lea     rdi, [rel data_120b75]  {\" \\t\\n\\r;|&()\"}",
    "call    mbschr",
    "test    rax, rax",
    "jne     0x938c0",
    "mov     dword [rbp-0x60], r8d",
    "call    __ctype_b_loc",
    "mov     rcx, qword [rbp-0x70]",
    "mov     r8d, dword [rbp-0x60]",
    "mov     rax, qword [rax]",
    "movzx   edx, byte [r12+rcx+0x1]",
    "movzx   eax, word [rax+rdx*2]",
    "and     ax, 0x400",
    "cmp     ax, 0x1",
    "sbb     ebx, 0xffffffff",
    "jmp     0x932d0",
    "mov     rdi, qword [rbp-0x38]",
    "call    strlen",
    "mov     edx, r14d",
    "sub     edx, r15d",
    "mov     rcx, rax",
    "lea     eax, [rdx+rax+0x1]",
    "lea     r13d, [rdx+rcx]",
    "cmp     eax, ebx",
    "jge     0x937d0",
    "mov     ecx, dword [rbp-0x58]",
    "test    ecx, ecx",
    "jne     0x9346a",
    "lea     rax, [rel alias_expand_all]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x935d0",
    "mov     rax, qword [rbp-0x40]",
    "movsxd  rdx, edx",
    "lea     r13, [rax+rdx]",
    "movsxd  rax, r14d",
    "cmp     byte [r12+rax], 0x0",
    "je      0x93790",
    "lea     edx, [r13+0x1]",
    "movzx   ecx, byte [r14]",
    "movsxd  rsi, edx",
    "mov     r14d, edx",
    "movzx   eax, byte [r12+rsi]",
    "cmp     cl, 0x5c",
    "je      0x93630",
    "lea     esi, [r13+0x32]",
    "nop     dword [rax]",
    "mov     rax, qword [rbp-0x50]",
    "movsxd  rdi, ecx",
    "mov     r15, qword [rbp-0x38]",
    "movsxd  rdx, edx",
    "mov     rsi, qword [rbp-0x48]",
    "movsxd  r13, r13d",
    "cmp     rdi, rax",
    "mov     rcx, rax",
    "cmovae  rcx, rdi",
    "sub     rcx, rdi",
    "add     rdi, r15",
    "call    __strncpy_chk",
    "mov     byte [r15+r13], 0x0",
    "xor     eax, eax",
    "mov     dword [rbp-0x58], 0x0",
    "jmp     0x93240",
    "lea     rax, [rel aliases]",
    "mov     rsi, qword [rax]",
    "test    rsi, rsi",
    "je      0x935d0",
    "jmp     0x93452",
    "mov     dword [rbp-0x58], 0x0",
    "mov     r13, qword [rbp-0x40]",
    "xor     edx, edx",
    "jmp     0x93417",
    "mov     rax, qword [rbp-0x40]",
    "add     r14d, 0x1",
    "mov     edx, 0x1",
    "lea     r13, [rax+0x1]",
    "jmp     0x93417",
    "test    al, al",
    "je      0x93400",
    "cmp     cl, 0x27",
    "je      0x936b0",
    "add     ebx, esi",
    "cmp     eax, ebx",
    "jge     0x937d8",
    "movsxd  rax, ebx",
    "mov     rdi, qword [rbp-0x38]",
    "mov     dword [rbp-0x60], edx",
    "mov     rsi, rax",
    "mov     qword [rbp-0x58], rcx",
    "mov     qword [rbp-0x50], rax",
    "call    realloc",
    "mov     rcx, qword [rbp-0x58]",
    "mov     edx, dword [rbp-0x60]",
    "test    rax, rax",
    "mov     qword [rbp-0x38], rax",
    "jne     0x935f2",
    "mov     dword [rel data_1688fc], eax",
    "mov     rax, qword [rbp-0x40]",
    "movsxd  rdx, r14d",
    "mov     byte [rax], 0x0",
    "lea     rax, [r12+rdx]",
    "mov     qword [rbp-0x48], rax",
    "movzx   eax, byte [rax]",
    "test    al, al",
    "je      0x938d0",
    "mov     rdi, qword [rbp-0x40]",
    "xor     edx, edx",
    "call    hash_search",
    "test    rax, rax",
    "je      0x935d0",
    "mov     edx, r14d",
    "sub     edx, r15d",
    "je      0x93790",
    "lea     edx, [r13+0x2]",
    "jmp     0x933e7",
    "test    al, al",
    "je      0x936d0",
    "cmp     cl, 0x22",
    "je      0x936b0",
    "jmp     0x93767",
    "mov     rdx, qword [rax+0x10]",
    "mov     rdi, qword [rbp-0x38]",
    "mov     qword [rbp-0x60], rdx",
    "call    strlen",
    "mov     rdx, qword [rbp-0x60]",
    "mov     r13, rax",
    "test    rdx, rdx",
    "je      0x935d0",
    "movsxd  r14, edx",
    "mov     r13d, edx",
    "add     r14, r12",
    "movzx   eax, byte [r14]",
    "test    al, al",
    "jne     0x93391",
    "cmp     al, 0x5c",
    "je      0x93700",
    "mov     r15, qword [rdx+0x8]",
    "mov     rdi, r15",
    "call    strlen",
    "mov     rcx, rax",
    "lea     eax, [rax+r13+0x3]",
    "cmp     eax, ebx",
    "jge     0x93860",
    "cmp     al, 0x20",
    "je      0x938c0",
    "mov     r14d, edx",
    "nop     dword [rax+rax]",
    "add     r14d, 0x1",
    "movsxd  rax, r14d",
    "cmp     byte [r12+rax], 0x0",
    "je      0x936d0",
    "cmp     cl, al",
    "je      0x9383b",
    "lea     edx, [rcx+0x32]",
    "nop     dword [rax+rax]",
    "mov     rax, qword [rbp-0x50]",
    "movsxd  rdi, r13d",
    "mov     rsi, r15",
    "mov     qword [rbp-0x48], rcx",
    "cmp     rdi, rax",
    "mov     rdx, rax",
    "mov     rax, qword [rbp-0x38]",
    "cmovae  rdx, rdi",
    "sub     rdx, rdi",
    "add     rdi, rax",
    "call    __strcpy_chk",
    "mov     rcx, qword [rbp-0x48]",
    "test    ecx, ecx",
    "je      0x9351c",
    "jmp     0x936c0",
    "cmp     byte [r12+rsi], 0x0",
    "je      0x93400",
    "add     r14d, 0x1",
    "movsxd  rsi, r14d",
    "movzx   eax, byte [r12+rsi]",
    "test    al, al",
    "jne     0x936b4",
    "add     ebx, edx",
    "cmp     eax, ebx",
    "jge     0x93868",
    "movsxd  rax, ebx",
    "mov     rdi, qword [rbp-0x38]",
    "mov     qword [rbp-0x48], rcx",
    "mov     rsi, rax",
    "mov     qword [rbp-0x50], rax",
    "call    realloc",
    "mov     rcx, qword [rbp-0x48]",
    "test    rax, rax",
    "mov     qword [rbp-0x38], rax",
    "jne     0x934ce",
    "lea     rax, [rel alias_expand_all]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "setne   al",
    "movzx   eax, al",
    "mov     dword [rbp-0x58], eax",
    "xor     eax, eax",
    "jmp     0x93240",
    "test    byte [rbp-0x58], 0x1",
    "je      0x9351c",
    "lea     edx, [r14+0x1]",
    "jmp     0x933e7",
    "mov     rsi, qword [rbp-0x50]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  rcx, ecx",
    "movzx   eax, byte [r15+rcx-0x1]",
    "cmp     al, 0x20",
    "je      0x938b0",
    "mov     dword [rbp-0x58], 0x1",
    "xor     eax, eax",
    "jmp     0x93240",
    "cmp     al, 0x9",
    "je      0x938b0"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xebd10",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15d, esi",
    "push    r14",
    "push    r13",
    "mov     r13, rdx",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x68",
    "mov     qword [rbp-0x88], rdi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "cmp     esi, 0x1",
    "jle     0xec1c3",
    "mov     qword [rbp-0x60], 0x186a0  {\"_mode_str\"}",
    "mov     r14d, 0x186a1  {\"mode_str\"}",
    "mov     ebx, 0x186a0  {\"_mode_str\"}",
    "jmp     0xebf8b",
    "lea     eax, [rsi-0x2]",
    "mov     dword [rbp-0x78], esi",
    "lea     rbx, [rdi+0x8]",
    "lea     r12, [rdi+rax*8+0x10]",
    "mov     qword [rbp-0x90], rdx",
    "mov     eax, 0x186a0  {\"_mode_str\"}",
    "mov     r15, rbx",
    "mov     qword [rbp-0x80], r12",
    "mov     ebx, eax",
    "nop     ",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r8, rax",
    "test    rax, rax",
    "je      0xec210",
    "mov     rax, qword [r15]",
    "xor     r9d, r9d",
    "xor     r13d, r13d",
    "lea     r8, [rbp-0x40]",
    "movsx   r12d, byte [rax]",
    "mov     edx, r12d",
    "test    r12d, r12d",
    "je      0xebf3f",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     r12d, dword [rax]",
    "test    r12d, r12d",
    "je      0xec0e0",
    "mov     qword [rbp-0x58], rax",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x88]",
    "mov     qword [rax], r8",
    "lea     rax, [rel _rl_completion_case_fold]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0xec14e",
    "cmp     ebx, r9d",
    "cmovg   ebx, r9d",
    "add     r15, 0x8",
    "cmp     qword [rbp-0x80], r15",
    "jne     0xebd70",
    "mov     dword [rbp-0x74], ebx",
    "mov     r14d, r9d",
    "mov     qword [rbp-0x70], r8",
    "jmp     0xebde4",
    "mov     qword [rbp-0x40], 0x0",
    "mov     qword [rbp-0x48], 0x0",
    "jmp     0xebd8e",
    "mov     rax, qword [rbp-0x88]",
    "mov     rdx, qword [rbp-0x60]",
    "mov     rdi, r8",
    "mov     rcx, r14",
    "mov     rsi, qword [rax+0x8]",
    "call    __strncpy_chk",
    "mov     r8, rax",
    "jmp     0xec0b0",
    "lea     rax, [rel rl_filename_completion_desired]",
    "mov     qword [rbp-0x68], 0x0",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0xebffc",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xebd8e",
    "mov     r15d, dword [rbp-0x78]",
    "mov     r13, qword [rbp-0x90]",
    "test    ebx, ebx",
    "jne     0xec170",
    "mov     rax, qword [r15+0x8]",
    "movsx   ebx, byte [rax+r13]",
    "mov     ecx, ebx",
    "test    ebx, ebx",
    "je      0xebf39",
    "mov     rax, qword [rbp-0x60]",
    "mov     byte [r8+rax], 0x0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xec20b",
    "lea     rax, [rel rl_sort_completion_matches]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xec19f",
    "lea     rax, [rel rl_filename_dequoting_function]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xebffc",
    "movsxd  rax, ebx",
    "lea     r14d, [rax+0x1]",
    "mov     qword [rbp-0x60], rax",
    "movsxd  r14, r14d",
    "jmp     0xebf8b",
    "test    r13, r13",
    "je      0xec170",
    "mov     ebx, dword [rbp-0x74]",
    "mov     r9d, r14d",
    "lea     rax, [rel _rl_completion_case_fold]",
    "mov     byte [rbp-0x60], dl",
    "mov     byte [rbp-0x58], cl",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0xebe60",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x68",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [rbp-0x88]",
    "lea     rcx, [rel _rl_qsort_string_compare]",
    "movsxd  rsi, r15d",
    "mov     edx, 0x8",
    "lea     rdi, [rax+0x8]",
    "call    qsort",
    "jmp     0xec00d",
    "mov     rdi, r13",
    "mov     r12d, ebx",
    "mov     r14d, 0x1",
    "call    strlen",
    "cmp     ebx, eax",
    "cmovg   r12d, eax",
    "movsxd  rax, r12d",
    "mov     qword [rbp-0x58], rax",
    "mov     rax, qword [rbp-0x88]",
    "lea     rbx, [rax+0x8]",
    "mov     rax, r13",
    "mov     r13d, r14d",
    "mov     r14, rax",
    "test    r15d, r15d",
    "jg      0xec061",
    "lea     rdx, [rel rl_completion_found_quote]",
    "mov     ecx, dword [rdx]",
    "test    ecx, ecx",
    "je      0xebffc",
    "cmp     byte [r13], 0x0",
    "jne     0xec0f5",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xebdc0",
    "call    __ctype_b_loc",
    "movzx   edx, byte [rbp-0x60]",
    "movzx   ecx, byte [rbp-0x58]",
    "mov     rsi, qword [rax]",
    "mov     qword [rbp-0x60], rdx",
    "test    byte [rsi+rdx*2+0x1], 0x1",
    "je      0xebe46",
    "mov     r12, qword [rbx]",
    "mov     rdx, qword [rbp-0x58]",
    "mov     rsi, r14",
    "mov     rdi, r12",
    "call    strncmp",
    "test    eax, eax",
    "jne     0xec050",
    "jmp     0xec183",
    "lea     rdx, [rel rl_filename_quoting_desired]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "jne     0xec1db",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xec1f5",
    "mov     qword [rbp-0x60], 0x0",
    "mov     r14d, 0x1",
    "xor     ebx, ebx",
    "cmp     r12d, ebx",
    "jne     0xebf39",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "jne     0xebdc0",
    "test    byte [rsi+rcx*2+0x1], 0x1",
    "mov     qword [rbp-0x58], rcx",
    "je      0xebe60",
    "mov     byte [rbp-0x68], cl",
    "mov     qword [rbp-0x58], rsi",
    "call    __ctype_tolower_loc",
    "mov     rdx, qword [rbp-0x60]",
    "movzx   ecx, byte [rbp-0x68]",
    "mov     rax, qword [rax]",
    "mov     rsi, qword [rbp-0x58]",
    "mov     r12d, dword [rax+rdx*4]",
    "add     r13d, 0x1",
    "add     rbx, 0x8",
    "cmp     r15d, r13d",
    "jl      0xec183",
    "mov     rax, qword [rbp-0x88]",
    "mov     rdx, qword [rbp-0x60]",
    "mov     rsi, r12",
    "mov     rdi, qword [rax]",
    "call    strncpy",
    "cmp     r15d, r13d",
    "jl      0xec183",
    "mov     rax, qword [rbp-0x88]",
    "mov     rdx, qword [rbp-0x60]",
    "mov     rsi, qword [rax+0x8]",
    "mov     rdi, qword [rax]",
    "call    strncpy",
    "jmp     0xec096",
    "lea     rdx, [rel rl_completion_quote_character]",
    "mov     rdi, r13",
    "mov     esi, dword [rdx]",
    "call    rax",
    "mov     qword [rbp-0x68], rax",
    "mov     r13, rax",
    "jmp     0xebffc",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x88]",
    "mov     qword [rax], rbx",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xec20b",
    "mov     rax, qword [r15]",
    "add     r14d, 0x1",
    "movsxd  r13, r14d",
    "movsx   r12d, byte [rax+r13]",
    "mov     edx, r12d",
    "test    r12d, r12d",
    "je      0xebf39",
    "mov     rsi, qword [r15]",
    "add     rsi, r13",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x58], rsi",
    "call    strlen",
    "mov     rcx, qword [rbp-0x70]",
    "mov     rsi, qword [rbp-0x58]",
    "lea     rdi, [rbp-0x4c]",
    "mov     rdx, rax",
    "call    mbrtowc",
    "add     r13, qword [r15+0x8]",
    "mov     rdi, r13",
    "mov     qword [rbp-0x58], rax",
    "call    strlen",
    "lea     rcx, [rbp-0x48]",
    "lea     rdi, [rbp-0x50]",
    "mov     rsi, r13",
    "mov     rdx, rax",
    "call    mbrtowc",
    "mov     r8, qword [rbp-0x58]",
    "cmp     r8, 0xfffffffffffffffd",
    "ja      0xebf30",
    "call    __ctype_tolower_loc",
    "mov     rcx, qword [rbp-0x58]",
    "mov     rax, qword [rax]",
    "mov     ebx, dword [rax+rcx*4]",
    "cmp     qword [rbp-0x68], 0x0",
    "je      0xec0a6",
    "add     rsp, 0x68",
    "mov     rdx, r12",
    "mov     rsi, r13",
    "mov     rdi, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "cmp     r12d, ebx",
    "je      0xebdc9",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0xebf30",
    "mov     rax, qword [rbp-0x88]",
    "mov     r8, qword [rax]",
    "mov     rdi, qword [rbp-0x68]",
    "call    free",
    "lea     rax, [rel _rl_completion_case_fold]",
    "mov     r12d, dword [rbp-0x4c]",
    "mov     ebx, dword [rbp-0x50]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "je      0xebf13",
    "cmp     r12d, ebx",
    "jne     0xebf39",
    "mov     edi, r12d",
    "mov     qword [rbp-0x58], r8",
    "call    towlower",
    "mov     edi, ebx",
    "mov     dword [rbp-0x4c], eax",
    "mov     r12d, eax",
    "call    towlower",
    "mov     r8, qword [rbp-0x58]",
    "mov     dword [rbp-0x50], eax",
    "mov     ebx, eax",
    "lea     eax, [r14+r8-0x1]",
    "cmp     r8, 0x1",
    "cmova   r14d, eax",
    "jmp     0xebdc9"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
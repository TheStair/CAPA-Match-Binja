{
  "address": "0xe2290",
  "rules": [
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249",
    "encrypt data using Curve25519/a423aa5d0923438c8eac88d5abe4fcd5"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "test    byte [rdi], 0x1",
    "je      0xe2350",
    "lea     r12, [rel rl_readline_state]",
    "cmp     dword [rdi+0xc], 0x1b",
    "mov     rax, qword [r12]",
    "je      0xe2420",
    "mov     edi, dword [rdi+0x28]",
    "or      rax, 0x50",
    "mov     qword [r12], rax",
    "call    rl_read_key",
    "mov     edi, eax",
    "mov     rax, qword [r12]",
    "and     rax, 0xffffffffffffffaf",
    "jmp     0xe237c",
    "or      rax, 0x40",
    "mov     qword [r12], rax",
    "call    rl_read_key",
    "mov     edi, eax",
    "mov     rax, qword [r12]",
    "and     rax, 0xffffffffffffffbf",
    "mov     ecx, dword [rbx]",
    "mov     edx, dword [rbx+0xc]",
    "mov     rsi, qword [rbx+0x18]",
    "and     ecx, 0x2",
    "call    sub_e2070",
    "mov     r12d, eax",
    "lea     rax, [rel _rl_caught_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xe2410",
    "lea     rax, [rel _rl_caught_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xe23f0",
    "mov     qword [r12], rax",
    "test    edi, edi",
    "js      0xe243c",
    "call    _rl_abort_internal",
    "{ Does not return }",
    "mov     edx, dword [rbx+0x4]",
    "mov     rsi, qword [rbx+0x10]",
    "call    _rl_dispatch_subseq",
    "or      dword [rbx], 0x1",
    "mov     edi, eax",
    "jmp     0xe22aa",
    "mov     edi, dword [rax]",
    "call    _rl_signal_handler",
    "jmp     0xe2305",
    "test    r12d, r12d",
    "js      0xe23a0",
    "mov     edi, dword [rax]",
    "call    _rl_signal_handler",
    "lea     rax, [rel _rl_kscxt]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "jne     0xe22cf",
    "lea     rax, [rel _rl_kscxt]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xe22d6",
    "cmp     edi, 0xfffffffd",
    "jne     0xe22e0",
    "cmp     r12d, 0xffffffff",
    "jne     0xe23e0",
    "lea     rbx, [rel _rl_kscxt]",
    "mov     rdi, qword [rbx]",
    "test    rdi, rdi",
    "je      0xe2334",
    "mov     dword [rax+0x28], 0xfffffffd",
    "jmp     0xe22d6",
    "mov     r12d, 0xfffffffd",
    "jmp     0xe2342",
    "cmp     r12d, 0xfffffffd",
    "jne     0xe23af",
    "test    byte [rbx], 0x2",
    "je      0xe230e",
    "lea     rax, [rel rl_readline_state]",
    "and     qword [rax], 0xffffffffffdfffff",
    "nop     dword [rax]",
    "mov     eax, r12d",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [rbx+0x20]",
    "lea     rdx, [rel _rl_kscxt]",
    "mov     qword [rdx], rax",
    "test    rax, rax",
    "je      0xe23c6",
    "jmp     0xe22c0",
    "mov     rax, qword [rdi+0x20]",
    "mov     qword [rbx], rax",
    "call    free",
    "mov     rdi, qword [rbx]",
    "test    rdi, rdi",
    "jne     0xe2320",
    "mov     rdi, rbx",
    "call    free",
    "mov     eax, r12d",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "mov     dword [rax+0x28], r12d"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
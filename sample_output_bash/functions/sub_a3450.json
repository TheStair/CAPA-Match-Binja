{
  "address": "0xa3450",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     rbx, [rel rl_line_buffer]",
    "lea     r13, [rel hist_verify]",
    "mov     r14, qword [rbx]",
    "mov     r15d, dword [r13]",
    "mov     dword [r13], 0x0",
    "mov     rdi, r14",
    "call    pre_process_line",
    "mov     dword [r13], r15d",
    "mov     r12, rax",
    "cmp     r14, rax",
    "je      0xa36d0",
    "mov     rdi, rax",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xa37ab",
    "test    rax, rax",
    "je      0xa36b8",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r13",
    "mov     rsi, r12",
    "mov     rdi, r14",
    "mov     r12, r14",
    "call    __strcpy_chk",
    "xor     esi, esi",
    "mov     rdi, r14",
    "call    expand_string_dollar_quote",
    "mov     r13, rax",
    "jmp     0xa34b4",
    "mov     rdi, qword [rbx]",
    "xor     esi, esi",
    "call    expand_string_dollar_quote",
    "mov     r13, rax",
    "jmp     0xa34bc",
    "xor     esi, esi",
    "mov     rdi, rax",
    "call    expand_string_dollar_quote",
    "mov     r13, rax",
    "mov     rdi, r12",
    "call    free",
    "test    r13, r13",
    "je      0xa3650",
    "call    sub_a1660",
    "add     rsp, 0x18",
    "mov     eax, 0x1",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r13",
    "call    alias_expand",
    "mov     rdi, r13",
    "mov     r12, rax",
    "call    free",
    "test    r12, r12",
    "je      0xa3650",
    "lea     rax, [rel rl_point]",
    "mov     rsi, qword [rbx]",
    "mov     rdi, r12",
    "movsxd  r14, dword [rax]",
    "lea     rax, [rel rl_end]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x34], eax",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xa3730",
    "mov     rdi, r12",
    "call    sub_a0560",
    "jmp     0xa350a",
    "mov     rdi, r12",
    "call    free",
    "call    alloc_word_desc",
    "mov     r15, qword [rbx]",
    "mov     r12, rax",
    "mov     rdi, r15",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0xa3775",
    "mov     qword [rbp-0x40], rax",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r15",
    "mov     rdx, r13",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     qword [r12], rax",
    "lea     rax, [rel rl_explicit_arg]",
    "mov     esi, dword [rax]",
    "xor     eax, eax",
    "test    esi, esi",
    "je      0xa3568",
    "mov     dword [r12+0x8], eax",
    "xor     r8d, r8d",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "mov     rdi, r12",
    "call    sub_83630",
    "mov     r13, rax",
    "lea     rax, [rel data_1619a0]",
    "cmp     r13, rax",
    "lea     rax, [rel data_1619b0]",
    "je      0xa3751",
    "mov     eax, 0x100400",
    "mov     esi, 0x2",
    "xor     edx, edx",
    "xor     edi, edi",
    "cmp     r13, rax",
    "mov     qword [r12], rdx",
    "sete    dil",
    "lea     rdx, [rel last_command_exit_value]",
    "add     edi, 0x1",
    "mov     dword [rdx], 0x1",
    "call    sub_85e80",
    "{ Does not return }",
    "cmp     r13, rax",
    "je      0xa3751",
    "mov     rdi, r13",
    "call    sub_83470",
    "mov     rdi, r13",
    "mov     qword [rbp-0x40], rax",
    "call    dispose_words",
    "mov     rax, qword [rbp-0x40]",
    "test    rax, rax",
    "je      0xa3670",
    "mov     rdi, r12",
    "call    dispose_word",
    "mov     rdi, rax",
    "call    dequote_list",
    "mov     rdi, r12",
    "mov     r13, rax",
    "call    dispose_word",
    "test    r13, r13",
    "je      0xa3678",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r12], 0x0",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xa3793",
    "mov     rdi, r13",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "call    string_list_internal",
    "mov     rdi, r13",
    "mov     r12, rax",
    "call    dispose_words",
    "test    r12, r12",
    "jne     0xa3693",
    "mov     rdi, r12",
    "call    free",
    "lea     rax, [rel rl_end]",
    "cmp     dword [rbp-0x34], r14d",
    "je      0xa3718",
    "mov     rdi, r12",
    "call    sub_a0560",
    "jmp     0xa35ff",
    "mov     rsi, qword [rbx]",
    "mov     rdi, r12",
    "call    strcmp",
    "test    eax, eax",
    "je      0xa35ff",
    "mov     eax, dword [rax]",
    "lea     rcx, [rel rl_point]",
    "mov     dword [rcx], eax",
    "xor     eax, eax",
    "jmp     0xa363d",
    "cmp     dword [rax], r14d",
    "jle     0xa363b",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "xor     eax, eax",
    "lea     rax, [rel rl_point]",
    "mov     dword [rax], r14d",
    "mov     rax, qword [rbx]",
    "movzx   eax, byte [rax+r14]",
    "cmp     al, 0x20",
    "je      0xa363b",
    "cmp     al, 0x9",
    "jne     0xa3740",
    "mov     edi, 0x1",
    "call    sub_107a50",
    "xor     eax, eax",
    "jmp     0xa363d"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xca790",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "allocate or change RW memory/877cb0b79bfa432e8e79b8bd20fa354f"
  ],
  "disassembly": [
    "push    rbp",
    "xor     eax, eax",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rcx",
    "push    r13",
    "mov     r13, rsi",
    "push    r12",
    "mov     r12d, edi",
    "push    rbx",
    "mov     rbx, r8",
    "sub     rsp, 0x48",
    "cmp     dword [rcx], 0x28",
    "mov     qword [rbp-0x48], rdx",
    "sete    al",
    "mov     dword [rbp-0x58], r9d",
    "lea     rdi, [rcx+rax*4]",
    "cmp     rdi, r8",
    "je      0xca989",
    "mov     rax, qword [rbp-0x48]",
    "lea     rdi, [r14-0x4]",
    "mov     rdx, rbx",
    "sub     rdx, rdi",
    "sub     rax, r13",
    "sar     rdx, 0x2",
    "sar     rax, 0x2",
    "cmp     edx, eax",
    "je      0xca9c0",
    "xor     edx, edx",
    "mov     rsi, r8",
    "call    sub_ca5a0",
    "mov     qword [rbp-0x40], rax",
    "test    rax, rax",
    "je      0xca989",
    "mov     rax, qword [rbp-0x48]",
    "mov     r12d, dword [rbx]",
    "mov     r14d, dword [rax]",
    "test    r12d, r12d",
    "jne     0xcabfc",
    "mov     eax, 0x1",
    "cmp     r12d, 0x2b",
    "ja      0xca89f",
    "mov     dword [rbx], 0x0",
    "test    r14d, r14d",
    "je      0xcac52",
    "test    r14d, r14d",
    "je      0xcac48",
    "lea     eax, [r12-0x3f]",
    "cmp     eax, 0x1",
    "ja      0xca9a6",
    "cmp     r12d, 0x29",
    "ja      0xcaa9f",
    "mov     rsi, r13",
    "call    wcscoll",
    "mov     dword [rbx], r12d",
    "jmp     0xcac23",
    "mov     rax, qword [rbp-0x48]",
    "mov     rsi, r13",
    "mov     dword [rax], 0x0",
    "call    wcscoll",
    "mov     dword [rbx], r12d",
    "mov     rsi, r13",
    "call    wcscoll",
    "jmp     0xcac23",
    "mov     dword [rax], 0x0",
    "mov     rsi, r13",
    "call    wcscoll",
    "jmp     0xcac1c",
    "cmp     r12d, 0x3f",
    "je      0xcac5f",
    "cmp     r12d, 0x2a",
    "je      0xcac88",
    "cmp     r12d, 0x21",
    "jne     0xca9a6",
    "test    eax, eax",
    "setne   al",
    "movzx   eax, al",
    "jmp     0xca9ab",
    "add     rsp, 0x48",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdx, qword [rbp-0x48]",
    "mov     dword [rdx], r14d",
    "mov     r9d, dword [rbp-0x58]",
    "mov     rdx, qword [rbp-0x40]",
    "xor     r8d, r8d",
    "mov     rcx, rbx",
    "mov     rsi, qword [rbp-0x48]",
    "mov     rdi, r13",
    "call    sub_cacd0",
    "test    eax, eax",
    "jne     0xca8b7",
    "lea     rax, [r14+0x4]",
    "mov     r14, qword [rbp-0x48]",
    "mov     r12d, dword [rbp-0x58]",
    "mov     qword [rbp-0x50], rbx",
    "mov     qword [rbp-0x38], rax",
    "mov     rax, qword [rbp-0x40]",
    "cmp     rbx, rax",
    "mov     rax, r14",
    "cmovne  rax, r13",
    "mov     qword [rbp-0x60], rax",
    "mov     r9d, dword [rbp-0x58]",
    "mov     rdx, qword [rbp-0x40]",
    "xor     r8d, r8d",
    "mov     rcx, rbx",
    "mov     rsi, qword [rbp-0x48]",
    "mov     rdi, r13",
    "call    sub_cacd0",
    "test    eax, eax",
    "jne     0xcaaa9",
    "lea     rsi, [r14-0x4]",
    "mov     r12, qword [rbp-0x48]",
    "mov     qword [rbp-0x48], rbx",
    "lea     rax, [r14+0x4]",
    "mov     qword [rbp-0x60], rsi",
    "mov     r14, rax",
    "cmp     qword [rbp-0x48], r13",
    "jb      0xca9a6",
    "xor     eax, eax",
    "jmp     0xca97a",
    "mov     rax, qword [rbp-0x60]",
    "xor     ebx, ebx",
    "cmp     r14, rax",
    "jae     0xca90b",
    "mov     edx, 0x7c",
    "mov     rdi, rax",
    "call    sub_ca5a0",
    "mov     rbx, rax",
    "mov     rax, qword [rbp-0x60]",
    "cmp     r14, rax",
    "jb      0xcaa89",
    "xor     eax, eax",
    "jmp     0xca97a",
    "xor     edx, edx",
    "cmp     r12, r13",
    "jae     0xcaae9",
    "mov     edx, 0x7c",
    "mov     rsi, rax",
    "mov     rdi, r14",
    "call    sub_ca5a0",
    "mov     rdx, rax",
    "cmp     r12, r13",
    "jb      0xcaba9",
    "lea     rax, [r14+0x4]",
    "mov     qword [rbp-0x38], r13",
    "mov     r12d, dword [rbp-0x58]",
    "mov     r14, r13",
    "mov     qword [rbp-0x50], rax",
    "nop     dword [rax]",
    "add     rsp, 0x48",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rax, [rbx-0x4]",
    "mov     qword [rbp-0x58], rbx",
    "mov     r15, qword [rbp-0x60]",
    "mov     qword [rbp-0x48], rax",
    "jmp     0xca92d",
    "jmp     0xcaa96",
    "mov     rax, qword [rbp-0x40]",
    "cmp     rbx, rax",
    "je      0xca9a6",
    "mov     qword [rbp-0x38], r14",
    "mov     ebx, dword [rbp-0x58]",
    "lea     r15, [rdx-0x4]",
    "mov     r14, r13",
    "mov     qword [rbp-0x68], rdx",
    "jmp     0xcab59",
    "jmp     0xcabb6",
    "mov     rax, qword [rbp-0x40]",
    "cmp     rdx, rax",
    "je      0xca9a6",
    "cmp     r13, rbx",
    "jne     0xca830",
    "mov     ebx, r12d",
    "mov     rcx, qword [rbp-0x48]",
    "mov     rdx, qword [rbp-0x38]",
    "mov     r9d, r12d",
    "and     bl, 0x7b",
    "cmp     r13, r15",
    "mov     rsi, r15",
    "mov     rdi, r13",
    "cmovae  ebx, r12d",
    "xor     r8d, r8d",
    "call    sub_cacd0",
    "test    eax, eax",
    "jne     0xca920",
    "mov     qword [rbp-0x38], rbx",
    "jmp     0xca8dd",
    "mov     rdx, qword [rbp-0x38]",
    "xor     r8d, r8d",
    "mov     r9d, ebx",
    "mov     rcx, r15",
    "mov     rsi, r14",
    "mov     rdi, r13",
    "call    sub_cacd0",
    "test    eax, eax",
    "jne     0xcab50",
    "mov     r14, rdx",
    "jmp     0xcaac0",
    "mov     edx, 0x7c",
    "mov     rsi, rbx",
    "mov     rdi, r13",
    "call    sub_ca5a0",
    "mov     rdi, qword [rbp-0x38]",
    "xor     r8d, r8d",
    "mov     r9d, r12d",
    "lea     rcx, [rax-0x4]",
    "mov     rdx, r13",
    "mov     rsi, r14",
    "mov     r15, rax",
    "call    sub_cacd0",
    "test    eax, eax",
    "je      0xcaa29",
    "mov     rdi, qword [rbp-0x38]",
    "xor     r8d, r8d",
    "mov     r9d, r12d",
    "mov     rdx, rbx",
    "mov     rcx, 0xfffffffffffffffc",
    "mov     rsi, r14",
    "call    sub_cacd0",
    "test    eax, eax",
    "je      0xcaa29",
    "add     r15, 0x4",
    "cmp     r14, r15",
    "jb      0xcaa85",
    "mov     rcx, qword [rbp-0x50]",
    "mov     rdx, qword [rbp-0x40]",
    "xor     r8d, r8d",
    "mov     r9d, ebx",
    "mov     rsi, r14",
    "mov     rdi, r15",
    "call    sub_cacd0",
    "test    eax, eax",
    "jne     0xca920",
    "mov     rax, qword [rbp-0x38]",
    "mov     rsi, qword [rbp-0x50]",
    "cmp     rax, rsi",
    "je      0xcac30",
    "add     r14, 0x4",
    "cmp     r12, r14",
    "jb      0xcaba5",
    "mov     r9d, ebx",
    "cmp     r13, r14",
    "jb      0xcab00",
    "mov     rax, qword [rbp-0x48]",
    "cmp     r14, rax",
    "je      0xcacb1",
    "add     r14, 0x4",
    "cmp     qword [rbp-0x48], r14",
    "jae     0xca820",
    "cmp     qword [rbp-0x40], r15",
    "je      0xca9f0",
    "xor     r15d, r15d",
    "jmp     0xca86e",
    "mov     rbx, qword [rbp-0x58]",
    "nop     dword [rax]",
    "mov     rdx, qword [rbp-0x68]",
    "mov     rcx, qword [rbp-0x48]",
    "mov     rdx, qword [rbp-0x40]",
    "and     r9b, 0x7b",
    "xor     r8d, r8d",
    "mov     rsi, r12",
    "mov     rdi, r14",
    "mov     dword [rbp-0x50], r9d",
    "call    sub_cacd0",
    "mov     r9d, dword [rbp-0x50]",
    "test    eax, eax",
    "je      0xca978",
    "mov     rcx, qword [rbp-0x48]",
    "mov     rdx, qword [rbp-0x40]",
    "xor     r8d, r8d",
    "mov     rsi, r12",
    "mov     rdi, r14",
    "call    sub_cacd0",
    "test    eax, eax",
    "je      0xca978",
    "mov     r13, qword [rbp-0x50]",
    "jmp     0xca871",
    "jmp     0xca9a6",
    "test    r12b, 0x4",
    "je      0xcaa40",
    "mov     r13, r15",
    "xor     eax, eax",
    "mov     rcx, qword [rbp-0x48]",
    "mov     rdx, qword [rbp-0x60]",
    "xor     r8d, r8d",
    "mov     rsi, r12",
    "mov     rdi, r14",
    "call    sub_cacd0",
    "test    eax, eax",
    "je      0xca978",
    "cmp     r13, r14",
    "je      0xcab50",
    "test    r12b, 0x80",
    "je      0xca9ff",
    "mov     rax, qword [rbp-0x38]",
    "cmp     dword [rax], 0x2e",
    "je      0xca9a6",
    "nop     dword [rax+rax]",
    "mov     r9d, ebx",
    "jmp     0xcab2a",
    "cmp     qword [rbp-0x38], r14",
    "jae     0xcaa80",
    "mov     rax, qword [rbp-0x38]",
    "cmp     dword [rax], 0x2e",
    "jne     0xca9ff",
    "mov     r9d, r12d",
    "jmp     0xcaa0c",
    "mov     r9d, r12d",
    "and     r9b, 0x7b",
    "mov     eax, dword [rax+0x4]",
    "test    eax, eax",
    "je      0xca9a6",
    "mov     rsi, qword [rbp-0x48]",
    "xor     r8d, r8d",
    "mov     rcx, rbx",
    "mov     rdx, r15",
    "mov     rdi, r14",
    "call    sub_cacd0",
    "test    eax, eax",
    "je      0xca978",
    "cmp     eax, 0x2e",
    "je      0xcabbe",
    "mov     rdx, qword [rbp-0x38]",
    "mov     eax, dword [rdx+0x8]",
    "test    eax, eax",
    "je      0xca9a6",
    "test    r12b, 0x1",
    "je      0xca9ff",
    "test    r12b, 0x1",
    "je      0xca9ff",
    "mov     rsi, qword [rbp-0x38]",
    "cmp     dword [rsi-0x4], 0x2f",
    "jne     0xca9ff",
    "cmp     dword [rdx-0x4], 0x2f",
    "jne     0xca9ff",
    "cmp     eax, 0x2f",
    "jne     0xca9ff",
    "cmp     eax, 0x2f",
    "je      0xca9a6",
    "jmp     0xca9a6",
    "mov     r9d, r12d",
    "cmp     qword [rbp-0x38], r14",
    "jb      0xcaa05",
    "jmp     0xcaa0c"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
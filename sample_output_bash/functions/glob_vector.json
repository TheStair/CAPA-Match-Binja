{
  "address": "0xd26c0",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "get file attributes",
    "64-bit execution via heavens gate/60cabeb435b14393adc864c969c82de8",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "log keystrokes via raw input data/5b32ff98460e406e86dc2ef8d82ba1a5",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "enumerate files recursively",
    "enumerate files on Linux",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "mov     r15, rdi",
    "push    r14 {i_20}",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0xf8",
    "mov     qword [rbp-0xe0 {var_e8}], rsi",
    "mov     dword [rbp-0xe8 {var_f0}], edx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38 {var_40}], rax",
    "xor     eax, eax  {0x0}",
    "test    rdi, rdi",
    "je      0xd2701",
    "mov     rdi, qword [rbp-0xe0 {var_e8}]",
    "lea     rsi, [rbp-0xd0 {var_d8}]",
    "call    stat",
    "test    eax, eax",
    "js      0xd2f02",
    "cmp     byte [rdi], 0x0",
    "jne     0xd2750",
    "lea     rbx, [rel glob_error_return]",
    "jmp     0xd2cd0",
    "mov     eax, dword [rbp-0xb8 {var_c0}]",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "jne     0xd2f02",
    "call    strlen",
    "mov     rdi, r15",
    "mov     rbx, rax",
    "call    glob_pattern_p",
    "and     eax, 0xfffffffd",
    "jne     0xd29a0",
    "mov     rax, qword [rbp-0x38 {var_40}]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xd3087",
    "mov     rax, rsp {var_128}",
    "mov     rdi, qword [rbp-0xe0 {var_e8}]",
    "call    opendir",
    "mov     qword [rbp-0xd8 {var_e0_2}], rax",
    "test    rax, rax",
    "je      0xd2f02",
    "lea     rax, [rbp-0xd0 {var_d8}]",
    "mov     rdi, qword [rbp-0xe0 {var_e8}]",
    "mov     rsi, rax {var_d8}",
    "mov     qword [rbp-0xe8 {var_f0}], rax {var_d8}",
    "call    stat",
    "test    eax, eax",
    "js      0xd2f02",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "lea     rsp, [rbp-0x28]",
    "mov     rax, rbx",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {i_20}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "sub     rsp, 0x20",
    "or      qword [rsp+0x18], 0x0",
    "mov     edi, 0x1",
    "lea     r14, [rsp+0xf]",
    "and     r14, 0xfffffffffffffff0",
    "mov     qword [r14], 0x0",
    "call    malloc",
    "test    rax, rax",
    "je      0xd2cce",
    "sub     rsp, 0x1000",
    "or      qword [rsp+0xff8], 0x0",
    "jmp     0xd2735",
    "lea     rax, [rel noglob_dot_filenames]",
    "cmp     dword [rax], 0x1  {noglob_dot_filenames}",
    "sbb     eax, eax",
    "and     eax, 0x7c",
    "add     eax, 0x5",
    "mov     dword [rbp-0x104 {var_10c_1}], eax",
    "mov     ecx, eax",
    "lea     rax, [rel glob_ignore_case]",
    "mov     esi, dword [rax]  {glob_ignore_case}",
    "test    esi, esi",
    "je      0xd29ee",
    "mov     eax, dword [rbp-0xb8 {var_c0}]",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "jne     0xd2f02",
    "xor     ebx, ebx  {0x0}",
    "mov     qword [r14+0x8], rax",
    "mov     byte [rax], 0x0",
    "test    r15, r15",
    "je      0xd2e88",
    "cmp     rsp, rax {var_128}",
    "\u2753\ufe0fje      0xd2940",
    "lea     rax, [rel extended_glob]",
    "mov     edx, dword [rax]  {extended_glob}",
    "test    edx, edx",
    "je      0xd2a02",
    "mov     eax, ecx",
    "or      eax, 0x10",
    "mov     dword [rbp-0x104 {var_10c_1}], eax",
    "mov     rdi, qword [rbp-0xe0 {var_e8}]",
    "call    strlen",
    "lea     r13d, [rax+rbx+0x2]",
    "mov     r12, rax",
    "movsxd  r13, r13d",
    "mov     rdi, r13",
    "call    malloc",
    "lea     edx, [rbx+0x1]",
    "movsxd  rdx, edx",
    "mov     r14, rax",
    "mov     rdi, rdx",
    "mov     qword [rbp-0xd8 {var_e0_1}], rdx",
    "call    malloc",
    "mov     rbx, rax",
    "test    r14, r14",
    "je      0xd30fe",
    "mov     edi, 0x10",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xd2efa",
    "cmp     byte [r15], 0x0",
    "je      0xd2e88",
    "mov     ecx, dword [rbp-0xe8 {var_f0}]",
    "xor     r12d, r12d  {0x0}",
    "mov     dword [rbp-0x10c {var_114_1}], 0x0",
    "mov     dword [rbp-0xf4 {var_fc_1}], 0x0",
    "mov     qword [rbp-0xf0 {i_13}], 0x0",
    "mov     eax, ecx",
    "and     ecx, 0x18",
    "sar     eax, 0x2",
    "mov     dword [rbp-0xf8 {var_100_1}], ecx",
    "and     eax, 0x4",
    "mov     dword [rbp-0x108 {var_110_1}], eax",
    "nop     dword [rax]",
    "or      dword [rbp-0x104 {var_10c_1}], 0x20",
    "test    rbx, rbx",
    "je      0xd2cce",
    "test    rax, rax",
    "mov     rdx, qword [rbp-0xd8 {var_e0_1}]",
    "je      0xd30f1",
    "xor     r12d, r12d  {0x0}",
    "jmp     0xd2bcf",
    "mov     dword [rbp-0xf4 {var_fc_1}], 0x1",
    "xor     r12d, r12d  {0x0}",
    "mov     dword [rbp-0xf4 {var_fc_1}], 0x1",
    "xor     r12d, r12d  {0x0}",
    "jmp     0xd28c0",
    "mov     rdi, qword [rbp-0xd8 {var_e0_2}]",
    "call    closedir",
    "lea     rax, [rel terminating_signal]",
    "lea     rdx, [rel pending_traps]",
    "mov     eax, dword [rax]  {terminating_signal}",
    "or      eax, dword [rdx+0x8]  {data_1617a4+4}",
    "jne     0xd2bb0",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0xd2cce",
    "test    r14, r14",
    "je      0xd30fe",
    "mov     rdi, rax",
    "mov     rsi, r15",
    "call    __strcpy_chk",
    "call    __ctype_get_mb_cur_max",
    "mov     rdi, rbx",
    "cmp     rax, 0x1",
    "jbe     0xd2ef0",
    "mov     rdi, qword [r14+0x8]",
    "test    r12, r12",
    "je      0xd2c09",
    "mov     rcx, qword [rdx+0x8]",
    "add     rax, 0x8",
    "mov     rdx, qword [rdx]",
    "mov     qword [rax-0x8], rcx",
    "cmp     rax, rsi",
    "jne     0xd2ec0",
    "jmp     0xd28f0",
    "mov     r15d, dword [rbp-0xf4 {var_fc_1}]",
    "lea     edi, [r15+0x1]",
    "shl     rdi, 0x3",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xd2bc3",
    "mov     rdi, qword [rbp-0xd8 {var_e0_2}]",
    "call    readdir",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xd2f10",
    "mov     rdi, r14",
    "call    free",
    "call    udequote_pathname",
    "jmp     0xd2819",
    "call    __wcsmbs_load_conv",
    "mov     rbx, r14",
    "jmp     0xd2cc1",
    "cmp     r14, r12",
    "je      0xd2ca8",
    "mov     qword [rbx+rdi*8], 0x0",
    "test    r12, r12",
    "je      0xd2cd0",
    "mov     rbx, r12",
    "test    r14, r14",
    "je      0xd2cce",
    "test    r15d, r15d",
    "jne     0xd2ea7",
    "mov     rdi, qword [rbp-0xd8 {var_e0_2}]",
    "call    closedir",
    "mov     eax, dword [rbp-0xe8 {var_f0}]",
    "not     eax",
    "test    eax, 0x210",
    "jne     0xd30af",
    "cmp     qword [rax {dirent64::d_ino}], 0x0",
    "je      0xd2a48",
    "mov     rsi, qword [rbp-0xe0 {var_e8}]",
    "mov     rdx, r13",
    "mov     rdi, r14",
    "call    __strcpy_chk",
    "movsxd  rax, r12d",
    "mov     rdx, r13",
    "mov     rsi, rbx",
    "mov     byte [r14+rax], 0x2f",
    "lea     eax, [r12+0x1]",
    "cdqe    ",
    "cmp     r13, rax",
    "lea     rdi, [r14+rax]",
    "cmovb   rdx, rax",
    "sub     rdx, rax",
    "call    __strcpy_chk",
    "mov     rsi, qword [rbp-0xe8 {var_f0}]",
    "mov     rdi, r14",
    "call    lstat",
    "mov     rdi, r14",
    "test    eax, eax",
    "js      0xd2fc0",
    "call    free",
    "mov     rdi, rbx",
    "xor     r14d, r14d  {0x0}",
    "call    free",
    "mov     dword [rbp-0xf4 {var_fc_1}], 0x0",
    "jmp     0xd28b7",
    "call    free",
    "mov     rax, rsp {var_128}",
    "cmp     rsp {var_128}, rax {var_128}",
    "je      0xd288f",
    "call    free",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0xd2cbd",
    "call    free",
    "mov     rbx, qword [r14]",
    "mov     rdi, r14",
    "call    free",
    "test    rbx, rbx",
    "je      0xd2cce",
    "call    free",
    "mov     r13, qword [r14]",
    "mov     rdi, r14",
    "call    free",
    "test    r13, r13",
    "je      0xd2cce",
    "mov     rdi, r14",
    "test    r14, r14",
    "je      0xd2cd0",
    "mov     edi, dword [rbp-0xf4 {var_fc_1}]",
    "mov     rax, rbx",
    "mov     rdx, r14",
    "lea     rsi, [rbx+rdi*8]",
    "nop     word [rax+rax]",
    "xor     edi, edi  {0x0}",
    "nop     dword [rax+rax]",
    "mov     r14, qword [rbp-0xf0 {i_13}]",
    "jmp     0xd28c0",
    "mov     rdi, qword [rbp-0xe0 {var_e8}]",
    "call    strlen",
    "lea     ebx, [rax+0x1]",
    "movsxd  rbx, ebx",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     edi, 0x10",
    "mov     r15, rax",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xd3099",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]  {interrupt_state}",
    "test    eax, eax",
    "jne     0xd2bb0",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xd2ba0",
    "xor     r12d, r12d  {0x0}",
    "nop     word [rax+rax]",
    "\u2753\ufe0fsub     rsp, 0x20",
    "or      qword [rsp+0x18], 0x0",
    "mov     dword [rbp-0xf4 {var_fc_1}], 0x1",
    "lea     r14, [rsp+0xf]",
    "and     r14, 0xfffffffffffffff0",
    "mov     qword [r14], 0x0",
    "mov     qword [r14+0x8], rbx",
    "\u2753\ufe0fsub     rsp, 0x1000",
    "or      qword [rsp+0xff8], 0x0",
    "cmp     rsp, rax {var_128}",
    "jne     0xd287a",
    "mov     rdi, qword [rbx+0x8]",
    "mov     r14, r13",
    "mov     r12, rbx",
    "mov     rdi, qword [r14+0x8]",
    "test    r12, r12",
    "jne     0xd2bd8",
    "cmp     r12, rdi",
    "je      0xd292b",
    "test    r15, r15",
    "je      0xd2bbc",
    "test    r15, r15",
    "je      0xd308c",
    "add     rbx, 0x13 {dirent64::d_name}",
    "jmp     0xd2ab2",
    "add     rbx, 0x13 {dirent64::d_name}",
    "mov     rdi, r15",
    "mov     rsi, rbx",
    "call    sub_119e90",
    "test    eax, eax",
    "jne     0xd2a48",
    "mov     rdi, r12",
    "call    free",
    "jmp     0xd2cd0",
    "mov     r13, qword [rdi]",
    "call    free",
    "test    r13, r13",
    "je      0xd2cd0",
    "mov     r14, qword [rbp-0xf0 {i_13}]",
    "mov     rdi, r15",
    "call    free",
    "jmp     0xd2bbc",
    "test    rax, rax",
    "je      0xd3099",
    "mov     qword [rax+0x8], r15",
    "mov     rax, qword [rbp-0xf0 {i_13}]",
    "mov     qword [r14], rax",
    "test    dword [rbp-0xe8 {var_f0}], 0x100",
    "je      0xd2f98",
    "mov     rsi, rbx",
    "mov     rdi, r15",
    "call    sub_11a1c0",
    "test    eax, eax",
    "jne     0xd2a48",
    "mov     rdi, r13",
    "cmp     r12, rdi",
    "jne     0xd2912",
    "mov     rdi, rax",
    "call    free",
    "mov     rsi, qword [rbp-0xe0 {var_e8}]",
    "mov     rcx, rbx",
    "mov     rdx, rbx",
    "mov     rdi, r15",
    "call    __memmove_chk",
    "jmp     0xd2f89",
    "mov     byte [r15], 0x0",
    "mov     eax, dword [rbp-0xf8 {var_100_1}]",
    "test    eax, eax",
    "je      0xd2b34",
    "add     dword [rbp-0xf4 {var_fc_1}], 0x1",
    "jmp     0xd28c0",
    "mov     edx, dword [rbp-0x104 {var_10c_1}]",
    "mov     rsi, rbx",
    "mov     rdi, r15",
    "call    xstrmatch",
    "cmp     eax, 0x1",
    "je      0xd2a48",
    "mov     eax, dword [rbp-0x108 {var_110_1}]",
    "mov     r14d, dword [rbp-0xe8 {var_f0}]",
    "mov     rsi, rbx",
    "mov     rdi, qword [rbp-0xe0 {var_e8}]",
    "mov     edx, eax",
    "or      edx, 0x8",
    "test    r14d, 0x100",
    "cmove   edx, eax",
    "call    sh_makepath",
    "mov     esi, r14d",
    "mov     rdi, rax",
    "mov     qword [rbp-0x100 {var_108_1}], rax",
    "call    sub_c7a30",
    "test    eax, eax",
    "js      0xd2cf8",
    "cmp     dword [rbp-0x10c {var_114_1}], 0x1869f  {\"s_mode_str\"}",
    "jg      0xd2e00",
    "and     r14d, 0x8",
    "jne     0xd2faf",
    "mov     ecx, dword [rbp-0xe8 {var_f0}]",
    "test    cl, 0x10",
    "jne     0xd2c18",
    "mov     edi, 0x10",
    "call    malloc",
    "test    r12, r12",
    "cmove   r12, rax",
    "mov     r14, rax",
    "mov     rax, rsp",
    "cmp     rsp, rax",
    "je      0xd2b7b",
    "mov     rdi, qword [rbp-0x100 {var_108_1}]",
    "call    free",
    "jmp     0xd2a48",
    "test    byte [rbp-0xe8 {var_f0}], 0x10",
    "jne     0xd2c20",
    "test    eax, eax",
    "je      0xd2d18",
    "test    byte [rbp-0xe8 {var_f0}], 0x8",
    "je      0xd2b34",
    "mov     r8, r13",
    "test    r12, r12",
    "je      0xd3008",
    "test    rax, rax",
    "je      0xd2ff6",
    "\u2753\ufe0fsub     rsp, 0x20",
    "or      qword [rsp+0x18], 0x0",
    "add     dword [rbp-0x10c {var_114_1}], 0x10",
    "lea     r8, [rsp+0xf]",
    "and     r8, 0xfffffffffffffff0",
    "mov     r14, r8",
    "jmp     0xd2e14",
    "\u2753\ufe0fsub     rsp, 0x1000",
    "or      qword [rsp+0xff8], 0x0",
    "cmp     rsp, rax",
    "jne     0xd2b66",
    "mov     edi, 0x10",
    "call    malloc",
    "test    r12, r12",
    "cmove   r12, rax",
    "mov     r14, rax",
    "jmp     0xd2b34",
    "mov     edx, ecx",
    "mov     rsi, qword [rbp-0x100 {var_108_1}]",
    "mov     rdi, r15",
    "and     dh, 0xfd",
    "call    glob_vector",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xd2c20",
    "mov     rdi, qword [rbp-0x100 {var_108_1}]",
    "call    free",
    "test    r8, r8",
    "je      0xd3015",
    "cmp     r14, r12",
    "je      0xd302d",
    "mov     rax, qword [rbp-0xf0 {i_13}]",
    "mov     qword [r14+0x8], r13",
    "mov     rdi, rbx",
    "mov     qword [r14], rax",
    "call    strlen",
    "mov     rcx, qword [rbp-0x100 {var_108_2}]",
    "mov     rsi, rbx",
    "mov     rdi, r13",
    "lea     rdx, [rax+0x1]",
    "call    __memmove_chk",
    "add     dword [rbp-0xf4 {var_fc_1}], 0x1",
    "mov     qword [rbp-0xf0 {i_13}], r14",
    "jmp     0xd2a48",
    "mov     rdi, rbx",
    "call    strlen",
    "add     rax, 0x1",
    "mov     rdi, rax",
    "mov     qword [rbp-0x100 {var_108_2}], rax",
    "call    malloc",
    "mov     r13, rax",
    "test    r14, r14",
    "je      0xd2ff6",
    "mov     r9, r14",
    "mov     rax, rdi",
    "test    r12, r12",
    "je      0xd3114",
    "test    rax, rax",
    "je      0xd30bb",
    "mov     rdx, qword [rax]",
    "mov     r14d, 0x1",
    "xor     ebx, ebx",
    "xor     r13d, r13d",
    "test    rdx, rdx",
    "je      0xd2fdf",
    "mov     r14, qword [rbp-0xf0 {i_13}]",
    "mov     rdi, r8",
    "call    free",
    "xor     r12d, r12d  {0x0}",
    "test    r14, r14",
    "jne     0xd3030",
    "test    r9, r9",
    "jne     0xd30ce",
    "cmp     r12, r14",
    "jne     0xd3114",
    "mov     rax, qword [rbp-0xf0 {i_13}]",
    "mov     rcx, rbx",
    "mov     rdx, rbx",
    "mov     qword [r14+0x8], rdi",
    "mov     rbx, qword [rbp-0x100 {var_108_1}]",
    "mov     qword [r14], rax",
    "mov     rsi, rbx",
    "call    __memmove_chk",
    "mov     rdi, rbx",
    "call    free",
    "add     dword [rbp-0xf4 {var_fc_1}], 0x1",
    "mov     qword [rbp-0xf0 {i_13}], r14",
    "jmp     0xd2a48",
    "cmp     rax, qword [rel data_157f70]",
    "je      0xd2c20  {data_157f70}",
    "mov     qword [rbp-0x118 {var_120_1}], r12",
    "mov     rax, rbx  {0x0}",
    "mov     r12, r14  {0x1}",
    "mov     rbx, rdi",
    "mov     r14, r13  {0x0}",
    "mov     qword [rbp-0x120 {var_128}], r15",
    "mov     r13, rdx",
    "jmp     0xd2d73",
    "mov     rdi, r14",
    "mov     qword [rbp-0xe0 {var_e8_1}], r8",
    "call    free",
    "mov     r8, qword [rbp-0xe0 {var_e8_1}]",
    "jmp     0xd3008",
    "mov     rdi, r9",
    "mov     qword [rbp-0xe0 {var_e8_2}], rax",
    "call    free",
    "mov     rax, qword [rbp-0xe0 {var_e8_2}]",
    "jmp     0xd30e4",
    "xor     r12d, r12d  {0x0}",
    "call    free",
    "jmp     0xd2c20",
    "mov     edi, 0x10",
    "mov     r15, rax",
    "call    malloc",
    "test    rax, rax",
    "je      0xd3048",
    "mov     rdi, qword [rbp-0x100 {var_108_1}]",
    "call    free",
    "mov     r14, qword [rbp-0xf0 {i_13}]",
    "jmp     0xd301c",
    "mov     rdi, rax",
    "jmp     0xd306d",
    "test    rax, rax",
    "je      0xd3072",
    "mov     r12, qword [rbp-0x118 {var_120_1}]",
    "mov     rdi, rbx",
    "mov     r14, r15",
    "test    r15, r15",
    "je      0xd306d",
    "lea     rdx, [r12+0x1]",
    "mov     qword [rax+0x8], r13",
    "test    r14, r14",
    "mov     r13, qword [rbx+rdx*8-0x8]",
    "mov     qword [rax], r15",
    "cmove   r14, rax",
    "test    r13, r13",
    "jne     0xd2d70",
    "mov     rdi, qword [rbp-0xd8 {var_e0_2}]",
    "call    closedir",
    "jmp     0xd2bc3",
    "call    free",
    "mov     rdi, r14",
    "mov     r14, qword [r14]",
    "call    free",
    "test    r14, r14",
    "jne     0xd305a",
    "mov     r12, rdx",
    "mov     rdi, rbx",
    "mov     r13, r14",
    "mov     rbx, rax",
    "mov     r14, r12",
    "mov     r15, qword [rbp-0x120 {var_128}]",
    "mov     r12, qword [rbp-0x118 {var_120_1}]",
    "call    free",
    "mov     rax, qword [rbp-0xf0 {i_13}]",
    "mov     edi, 0x10",
    "add     dword [rbp-0xf4 {var_fc_1}], r14d",
    "mov     qword [r13], rax",
    "test    r12, r12",
    "je      0xd2ed9",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, r13",
    "mov     qword [rbp-0xf0 {i_13}], rbx",
    "mov     r14, rax",
    "jmp     0xd2c34",
    "call    malloc",
    "mov     qword [rbp-0xf0 {i_13}], rbx",
    "mov     r14, rax",
    "jmp     0xd2c34",
    "mov     rdi, qword [rbp-0x100 {var_108_1}]",
    "call    strlen",
    "lea     ebx, [rax+0x1]",
    "movsxd  rbx, ebx",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rdi, rax",
    "test    r14, r14",
    "je      0xd30bb"
  ],
  "high level IL": [
    "char* r15 = arg1",
    "void** i_19",
    "void** i_20 = i_19",
    "char* var_128",
    "int64_t* i = &var_128",
    "void* fsbase",
    "int64_t rax = *(fsbase + 0x28)",
    "void** result",
    "int32_t var_fc_1",
    "void var_d8",
    "int32_t var_c0",
    "void** i_2",
    "void* i_10",
    "if (arg1 == 0 || *arg1 == 0)",
    "if (stat(arg2, &var_d8) s< 0 || (var_c0 & 0xf000) != 0x4000)",
    "result = &glob_error_return",
    "while (i != &var_128)",
    "i -= 0x1000",
    "i[0x1ff] = i[0x1ff]",
    "*(i - 8) = *(i - 8)",
    "i_10 = (i - 0x11) & 0xfffffffffffffff0",
    "*i_10 = 0",
    "char* rax_19 = malloc(1)",
    "if (rax_19 == 0)",
    "labelid_18:",
    "result = nullptr",
    "*(i_10 + 8) = rax_19",
    "*rax_19 = 0",
    "uint64_t rdi_14",
    "if (r15 == 0 || *r15 == 0)",
    "void** result_2 = malloc(0x10)",
    "result = result_2",
    "if (result_2 != 0)",
    "var_fc_1 = 1",
    "i_2 = nullptr",
    "label_d2ea7:",
    "rdi_14 = zx.q(var_fc_1)",
    "void** i_1 = result",
    "void* i_16 = i_10",
    "int64_t rcx_7 = *(i_16 + 8)",
    "i_1 = &i_1[1]",
    "i_16 = *i_16",
    "i_1[-1] = rcx_7",
    "do while (i_1 != &result[rdi_14])",
    "goto label_d28f0",
    "i_2 = nullptr",
    "label_d2bcf:",
    "int64_t rdi_25 = *(i_10 + 8)",
    "void* i_17",
    "while (i_2 != 0)",
    "if (i_10 == i_2)",
    "free(rdi_25)",
    "i_17 = *i_10",
    "free(i_10)",
    "if (i_17 != 0)",
    "goto label_d2cbd",
    "goto label_d2cce_2",
    "free(rdi_25)",
    "void* i_18 = *i_10",
    "free(i_10)",
    "if (i_18 == 0)",
    "goto label_d2cce_2",
    "i_10 = i_18",
    "i_2 = result",
    "rdi_25 = *(i_10 + 8)",
    "i_17 = i_10",
    "while (true)",
    "free(rdi_25)",
    "i_17 = *i_17",
    "if (i_17 == 0)",
    "break",
    "label_d2cbd:",
    "rdi_25 = *(i_17 + 8)",
    "labelid_18:",
    "result = nullptr",
    "var_fc_1 = 1",
    "i_2 = nullptr",
    "label_d28cf:",
    "void** result_1 = malloc(zx.q(var_fc_1 + 1) << 3)",
    "result = result_1",
    "if (result_1 == 0)",
    "label_d2bc3:",
    "result = i_2",
    "if (i_10 != 0)",
    "goto label_d2bcf",
    "label_d2cce:",
    "result = nullptr",
    "if (var_fc_1 != 0)",
    "goto label_d2ea7",
    "rdi_14 = 0",
    "label_d28f0:",
    "result[rdi_14] = 0",
    "if (i_2 != 0)",
    "void* i_3 = i_10",
    "if (i_10 != 0)",
    "void* i_9",
    "while (i_2 != i_3)",
    "i_9 = *i_3",
    "free(i_3)",
    "if (i_9 == 0)",
    "goto label_d2cd4",
    "i_3 = i_9",
    "free(i_2)",
    "int32_t rax_5 = strlen(arg1)",
    "if ((glob_pattern_p(r15) & 0xfffffffd) != 0)",
    "DIR* dirp = opendir(arg2)",
    "if (dirp != 0)",
    "int32_t rax_22 = (sbb.d(&noglob_dot_filenames, &noglob_dot_filenames, noglob_dot_filenames u< 1) & 0x7c) + 5",
    "int32_t var_10c_1 = rax_22",
    "if (glob_ignore_case != 0)",
    "var_10c_1 = rax_22 | 0x10",
    "if (extended_glob != 0)",
    "var_10c_1 |= 0x20",
    "i_2 = nullptr",
    "int32_t var_114_1 = 0",
    "var_fc_1 = 0",
    "void* i_13 = nullptr",
    "int32_t rax_27 = arg3 s>> 2 & 4",
    "while (true)",
    "if (interrupt_state != 0 || (terminating_signal | data_1617a4:4.d) != 0)",
    "closedir(dirp)",
    "struct dirent64* rax_31 = readdir(dirp)",
    "if (rax_31 == 0)",
    "closedir(dirp)",
    "if ((not.d(arg3) & 0x210) != 0)",
    "i_10 = i_13",
    "goto label_d28cf",
    "uint64_t bytes_2 = sx.q(strlen(arg2) + 1)",
    "char* rax_57 = malloc(bytes_2)",
    "void* i_15 = malloc(0x10)",
    "i_10 = i_15",
    "if (i_15 != 0)",
    "if (rax_57 != 0)",
    "*(i_15 + 8) = rax_57",
    "*i_10 = i_13",
    "if ((arg3 & 0x100) == 0)",
    "__memmove_chk(rax_57, arg2, bytes_2, bytes_2)",
    "*rax_57 = 0",
    "var_fc_1 += 1",
    "goto label_d28cf",
    "if (i_15 != 0)",
    "free(i_15)",
    "if (rax_57 != 0)",
    "free(rax_57)",
    "if (rax_31->d_ino == 0)",
    "continue",
    "uint64_t rbx_4",
    "if (__ctype_get_mb_cur_max() u<= 1)",
    "rbx_4 = &rax_31->d_name",
    "rbx_4 = &rax_31->d_name",
    "if (sub_119e90(r15, rbx_4, rbx_4, i_19) != 0)",
    "continue",
    "if (sub_11a1c0(r15, rbx_4, rbx_4, i_19) != 0)",
    "continue",
    "if ((arg3 & 0x18) == 0)",
    "label_d2b40:",
    "if (xstrmatch(r15, rbx_4, var_10c_1) == 1)",
    "continue",
    "if (var_114_1 s> 0x1869f)",
    "void** i_7 = malloc(0x10)",
    "if (i_2 == 0)",
    "i_2 = i_7",
    "i_19 = i_7",
    "int64_t* i_5 = i",
    "while (i != i_5)",
    "i -= 0x1000",
    "i[0x1ff] = i[0x1ff]",
    "i -= 0x20",
    "i[3] = i[3]",
    "var_114_1 += 0x10",
    "i_19 = (i + 0xf) & 0xfffffffffffffff0",
    "uint64_t bytes = strlen(rbx_4) + 1",
    "int64_t rax_50 = malloc(bytes)",
    "if (i_19 != 0 && rax_50 != 0)",
    "i_19[1] = rax_50",
    "*i_19 = i_13",
    "__memmove_chk(rax_50, rbx_4, strlen(rbx_4) + 1, bytes)",
    "var_fc_1 += 1",
    "i_13 = i_19",
    "continue",
    "if (i_2 != 0)",
    "if (i_19 == i_2)",
    "i_2 = nullptr",
    "free(i_19)",
    "if (i_19 != 0)",
    "free(i_19)",
    "if (rax_50 != 0)",
    "free(rax_50)",
    "i_10 = i_13",
    "i_19 = zx.q(arg3)",
    "int32_t rdx_8 = rax_27 | 8",
    "if ((i_19.d & 0x100) == 0)",
    "rdx_8 = rax_27",
    "char* rax_37 = sh_makepath(arg2, rbx_4, rdx_8)",
    "int32_t rax_38 = sub_c7a30(rax_37, i_19.d)",
    "int64_t* rdi_48",
    "if (rax_38 s< 0)",
    "i_19 = zx.q(i_19.d) & 8",
    "if (i_19.d != 0)",
    "free(rax_37)",
    "continue",
    "continue",
    "if ((arg3.b & 0x10) == 0)",
    "goto label_d2b40",
    "label_d2c25:",
    "void** i_6 = malloc(0x10)",
    "if (i_2 == 0)",
    "i_2 = i_6",
    "i_19 = i_6",
    "int16_t rcx_4 = arg3.w",
    "if ((rcx_4.b & 0x10) == 0)",
    "if ((arg3.b & 8) != 0)",
    "free(rax_37)",
    "goto label_d2b40",
    "if (rax_38 != 0)",
    "goto label_d2c25",
    "int16_t rdx_11",
    "rdx_11:1.b = rcx_4:1.b & 0xfd",
    "int64_t* rax_46 = glob_vector(r15, rax_37, rdx_11)",
    "if (rax_46 == 0)",
    "goto label_d2c25",
    "int64_t rdx_12 = *rax_46",
    "if (rdx_12 == 0)",
    "if (rax_46 != &glob_error_return)",
    "free(rax_46)",
    "goto label_d2c25",
    "void** i_14 = nullptr",
    "int64_t r12_2 = 1",
    "void** i_11 = nullptr",
    "var_128 = r15",
    "int64_t r13_3 = rdx_12",
    "while (true)",
    "void* i_12 = i_14",
    "i_14 = malloc(0x10)",
    "if (i_14 == 0)",
    "rdi_48 = rax_46",
    "void* i_4 = i_12",
    "if (i_12 != 0)",
    "void* i_8 = i_4",
    "i_4 = *i_4",
    "free(i_8)",
    "do while (i_4 != 0)",
    "rdi_48 = rax_46",
    "goto label_d306d",
    "i_14[1] = r13_3",
    "r13_3 = rax_46[r12_2]",
    "*i_14 = i_12",
    "if (i_11 == 0)",
    "i_11 = i_14",
    "if (r13_3 == 0)",
    "r15 = var_128",
    "free(rax_46)",
    "var_fc_1 += r12_2.d",
    "*i_11 = i_13",
    "if (i_2 == 0)",
    "i_2 = i_11",
    "i_13 = i_14",
    "i_19 = malloc(0x10)",
    "i_13 = i_14",
    "i_19 = malloc(0x10)",
    "break",
    "r12_2 += 1",
    "uint64_t bytes_1 = sx.q(strlen(rax_37) + 1)",
    "int64_t* rax_41 = malloc(bytes_1)",
    "if (i_19 != 0 && rax_41 != 0)",
    "i_19[1] = rax_41",
    "*i_19 = i_13",
    "__memmove_chk(rax_41, rax_37, bytes_1, bytes_1)",
    "free(rax_37)",
    "var_fc_1 += 1",
    "i_13 = i_19",
    "continue",
    "if (i_2 != 0 && i_2 == i_19)",
    "i_2 = nullptr",
    "free(i_19)",
    "if (i_19 != 0)",
    "free(i_19)",
    "if (rax_41 != 0)",
    "rdi_48 = rax_41",
    "label_d306d:",
    "free(rdi_48)",
    "free(rax_37)",
    "i_10 = i_13",
    "closedir(dirp)",
    "break",
    "i_10 = i_13",
    "break",
    "goto label_d2bc3",
    "result = &glob_error_return",
    "int32_t var_f0",
    "var_f0.q = &var_d8",
    "if (stat(arg2, &var_d8) s< 0 || (var_c0 & 0xf000) != 0x4000)",
    "result = &glob_error_return",
    "int32_t rax_11 = strlen(arg2)",
    "uint64_t r13_2 = sx.q(rax_11 + rax_5 + 2)",
    "char* rax_12 = malloc(r13_2)",
    "uint64_t rdx_1 = sx.q(rax_5 + 1)",
    "char* rax_13 = malloc(rdx_1)",
    "if (rax_12 != 0)",
    "if (rax_13 != 0)",
    "__strcpy_chk(rax_13, r15, rdx_1)",
    "if (__ctype_get_mb_cur_max() u<= 1)",
    "udequote_pathname(rax_13)",
    "__wcsmbs_load_conv(rax_13)",
    "__strcpy_chk(rax_12, arg2, r13_2)",
    "uint64_t rdx_4 = r13_2",
    "rax_12[sx.q(rax_11)] = 0x2f",
    "uint64_t rax_17 = sx.q(rax_11 + 1)",
    "if (r13_2 u< rax_17)",
    "rdx_4 = rax_17",
    "__strcpy_chk(&rax_12[rax_17], rax_13, rdx_4 - rax_17)",
    "if (lstat(rax_12, var_f0.q) s< 0)",
    "free(rax_12)",
    "i_10 = nullptr",
    "free(rax_13)",
    "var_fc_1 = 0",
    "free(rax_12)",
    "if (&var_128 != &var_128)",
    "i -= 0x1000",
    "i[0x1ff] = i[0x1ff]",
    "do while (i != &var_128)",
    "*(i - 8) = *(i - 8)",
    "var_fc_1 = 1",
    "i_10 = (i - 0x11) & 0xfffffffffffffff0",
    "*i_10 = 0",
    "*(i_10 + 8) = rax_13",
    "i_2 = nullptr",
    "goto label_d28cf",
    "if (rax_12 != 0)",
    "free(rax_12)",
    "if (rax_13 == 0)",
    "label_d2cce_1:",
    "result = nullptr",
    "free(rax_13)",
    "label_d2cce_2:",
    "result = nullptr",
    "label_d2cd4:",
    "*(fsbase + 0x28)",
    "if (rax == *(fsbase + 0x28))",
    "return result",
    "__stack_chk_fail()",
    "noreturn"
  ]
}
{
  "address": "0xe5230",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "encrypt data using Curve25519/7d070d905d0942e295bbb2c9df72fc86",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    rbx",
    "mov     ebx, edi",
    "sub     rsp, 0x8",
    "test    edi, edi",
    "js      0xe52a8",
    "lea     rax, [rel rl_prompt]",
    "mov     rdx, qword [rax]",
    "lea     rax, [rel rl_display_prompt]",
    "mov     qword [rax], rdx",
    "mov     eax, dword [rel data_16a4b0]",
    "test    eax, eax",
    "jne     0xe52f0",
    "lea     rdx, [rel _rl_keymap]",
    "movsxd  rax, edi",
    "shl     rax, 0x4",
    "add     rax, qword [rdx]",
    "cmp     byte [rax], 0x0",
    "jne     0xe5262",
    "call    rl_restore_prompt",
    "mov     dword [rel data_16a4b0], 0x0",
    "jmp     0xe52c6",
    "lea     rax, [rel rl_redisplay_function]",
    "call    qword [rax]",
    "mov     edi, ebx",
    "call    rl_stuff_char",
    "mov     rbx, qword [rbp-0x8]",
    "xor     eax, eax",
    "leave   ",
    "retn    ",
    "mov     eax, ebx",
    "and     al, 0x7f",
    "sub     eax, 0x30",
    "cmp     eax, 0x9",
    "ja      0xe52a8",
    "lea     rsi, [rel rl_universal_argument]",
    "cmp     qword [rax+0x8], rsi",
    "je      0xe52e0",
    "lea     rdx, [rel rl_explicit_arg]",
    "lea     rcx, [rel rl_numeric_arg]",
    "mov     esi, dword [rdx]",
    "test    esi, esi",
    "jne     0xe5298",
    "lea     rax, [rel rl_numeric_arg]",
    "shl     dword [rax], 0x2",
    "jmp     0xe528a",
    "mov     esi, dword [rcx]",
    "lea     esi, [rsi+rsi*4]",
    "lea     eax, [rax+rsi*2]",
    "jmp     0xe5282",
    "mov     dword [rcx], eax",
    "mov     dword [rdx], 0x1",
    "mov     rbx, qword [rbp-0x8]",
    "mov     eax, 0x1",
    "leave   ",
    "retn    "
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
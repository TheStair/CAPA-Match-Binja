{
  "address": "0x62cf0",
  "rules": [
    "write file on Linux",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15d, edi",
    "push    r14",
    "mov     r14, rsi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0xd8",
    "mov     qword [rbp-0xd0], rdx",
    "mov     qword [rbp-0xc8], rcx",
    "mov     qword [rbp-0xc0], r8",
    "mov     qword [rbp-0xb8], r9",
    "test    al, al",
    "je      0x62d57",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0xe8], rax",
    "xor     eax, eax",
    "call    get_name_for_error",
    "mov     r12, rax",
    "lea     rax, [rel bash_input]",
    "mov     rbx, qword [rax+0x8]",
    "lea     rax, [rel data_11f036[9]]  {\"stdin\"}",
    "test    rbx, rbx",
    "cmove   rbx, rax",
    "lea     rax, [rel interactive]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "jne     0x62ef8",
    "movaps  xmmword [rbp-0xb0], xmm0",
    "movaps  xmmword [rbp-0xa0], xmm1",
    "movaps  xmmword [rbp-0x90], xmm2",
    "movaps  xmmword [rbp-0x80], xmm3",
    "movaps  xmmword [rbp-0x70], xmm4",
    "movaps  xmmword [rbp-0x60], xmm5",
    "movaps  xmmword [rbp-0x50], xmm6",
    "movaps  xmmword [rbp-0x40], xmm7",
    "mov     r13, qword [rel stderr]",
    "mov     rcx, r12",
    "mov     esi, 0x2",
    "xor     eax, eax",
    "lea     rdx, [rel data_1201c3]  {\"%s: \"}",
    "mov     rdi, qword [r13]",
    "call    __fprintf_chk",
    "jmp     0x62df2",
    "lea     rax, [rel gnu_error_format]",
    "mov     r13d, dword [rax]",
    "lea     rax, [rel interactive_shell]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x62e80",
    "mov     rdi, qword [r13]",
    "lea     rax, [rbp+0x10]",
    "mov     rdx, r14",
    "mov     esi, 0x2",
    "mov     qword [rbp-0xf8], rax",
    "lea     rcx, [rbp-0x100]",
    "lea     rax, [rbp-0xe0]",
    "mov     dword [rbp-0x100], 0x10",
    "mov     dword [rbp-0xfc], 0x30",
    "mov     qword [rbp-0xf0], rax",
    "call    __vfprintf_chk",
    "mov     rsi, qword [r13]",
    "mov     edi, 0xa",
    "call    fputc",
    "lea     rax, [rel exit_immediately_on_error]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x62f3b",
    "movzx   eax, byte [rbx]",
    "cmp     byte [r12], al",
    "jne     0x62db6",
    "lea     r9, [rel data_122e02]",
    "test    r13d, r13d",
    "je      0x62ed8",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edi, 0x2",
    "mov     dword [rax], 0x2",
    "call    exit_shell",
    "{ Does not return }",
    "mov     rax, qword [rbp-0xe8]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x62f52",
    "mov     rsi, rbx",
    "mov     rdi, r12",
    "call    strcmp",
    "test    eax, eax",
    "jne     0x62db6",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1201bc]  {\" line \"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     r9, rax",
    "jmp     0x62dc6",
    "mov     r13, qword [rel stderr]",
    "sub     rsp, 0x8",
    "mov     rcx, r12",
    "xor     eax, eax",
    "lea     rdx, [rel data_1202b0]  {\"%s: %s:%s%d: \"}",
    "mov     r8, rbx",
    "mov     esi, 0x2",
    "mov     rdi, qword [r13]",
    "push    r15",
    "call    __fprintf_chk",
    "pop     rdx",
    "pop     rcx",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "lea     rsp, [rbp-0x28]",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     r8, [rel data_122e02]",
    "test    r13d, r13d",
    "je      0x62f20",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1201bc]  {\" line \"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     r8, rax",
    "jmp     0x62eac",
    "mov     r13, qword [rel stderr]",
    "mov     r9d, r15d",
    "mov     rcx, r12",
    "xor     eax, eax",
    "lea     rdx, [rel data_1202b0[4]]  {\"%s:%s%d: \"}",
    "mov     esi, 0x2",
    "mov     rdi, qword [r13]",
    "call    __fprintf_chk",
    "jmp     0x62df2"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
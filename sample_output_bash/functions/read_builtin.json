{
  "address": "0xbf460",
  "rules": [
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/4f0637c1ae9b445ca3ec93a4b4e0bb6d",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "get file attributes",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/9710d9ee76a4466b954966f2a98c40ba",
    "check if file exists/e724fb9dd0e04bc2af009f8be857642c/229a7b83bcc7454aa2d6f8d97a1a725e",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "create or open file",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/bee29d5f30484915bb6e92fdf1038d2c",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/af1fc90a7adf4a2ea648cfac1c599984",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "read file on Linux",
    "write file on Linux",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/2602c80a9b3846b9ae92e2e83b13e866",
    "PEB access/684066f105bd43c0a5be1ea6f2b60301"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "xor     r14d, r14d",
    "push    r13",
    "xor     r13d, r13d",
    "push    r12",
    "lea     r12, [rel 0x1217e7]  {\"ersa:d:i:n:p:t:u:N:\"}",
    "push    rbx",
    "lea     rbx, [rel jump_table_1374b0]",
    "sub     rsp, 0x398",
    "mov     qword [rbp-0x2e8], rdi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rel read_timeout]",
    "mov     dword [rel data_161190], 0x0",
    "mov     dword [rbp-0x2a8], 0x0",
    "mov     qword [rax], 0x0",
    "call    __ctype_get_mb_cur_max",
    "mov     byte [rel data_168f84], 0xa",
    "mov     qword [rbp-0x360], rax",
    "lea     rax, [rel loptend]",
    "mov     qword [rel data_168d30], 0x0",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel lcurrent]",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rax], 0x0",
    "mov     qword [rbp-0x2f0], 0x0",
    "mov     qword [rbp-0x330], 0x0  {\"o.2\"}",
    "mov     qword [rbp-0x318], 0x0  {\"/lib64/ld-linux-x86-64.so.2\"}",
    "mov     dword [rbp-0x2b8], 0x0",
    "mov     dword [rbp-0x2b4], 0x0",
    "mov     dword [rbp-0x2dc], 0x0",
    "mov     dword [rbp-0x2e0], 0x0",
    "mov     dword [rbp-0x348], 0x0",
    "mov     dword [rbp-0x2d4], 0x0",
    "mov     dword [rbp-0x2c4], 0x0",
    "mov     dword [rbp-0x2f4], 0x0",
    "lea     rax, [rel loptend]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x2e8], rax",
    "test    r14d, r14d",
    "je      0xbf807",
    "cmp     eax, 0xffffff9d",
    "je      0xbf7b0",
    "mov     rsi, qword [rbp-0x2e8]",
    "test    rsi, rsi",
    "je      0xbf84b",
    "mov     eax, dword [rbp-0x2b4]",
    "or      eax, dword [rbp-0x2b8]",
    "je      0xc0273",
    "call    builtin_help",
    "jmp     0xbf615",
    "sub     eax, 0x4e",
    "cmp     eax, 0x27",
    "ja      0xbf610",
    "lea     rax, [rel ifs_value]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x320], rax  {\"d-linux-x86-64.so.2\"}",
    "mov     eax, dword [rbp-0x2e0]",
    "test    eax, eax",
    "jne     0xc01fc",
    "lea     rax, [rel assoc_expand_once]",
    "mov     ebx, dword [rax]",
    "mov     rax, qword [rsi+0x8]",
    "test    ebx, ebx",
    "je      0xbf838",
    "mov     edi, dword [rbp-0x2dc]",
    "xor     r15d, r15d",
    "call    input_avail",
    "test    eax, eax",
    "sete    r15b",
    "jmp     0xbf61b",
    "mov     r15d, 0x102",
    "{Case 0x1-0x12, 0x14-0x15, 0x18-0x1a, 0x1c-0x1f, 0x21, 0x23}",
    "call    builtin_usage",
    "movsxd  rax, dword [rbx+rax*4]",
    "add     rax, rbx",
    "jmp     rax",
    "mov     byte [rel data_168f84], 0xff",
    "cmp     qword [rbp-0x320], 0x0  {\"d-linux-x86-64.so.2\"}",
    "je      0xc0203",
    "mov     r12, qword [rax]",
    "mov     rdi, r12",
    "call    legal_identifier",
    "test    eax, eax",
    "je      0xc0222",
    "mov     edx, dword [rax+0x8]",
    "and     edx, 0x200",
    "cmp     edx, 0x1",
    "sbb     ebx, ebx",
    "and     ebx, 0xfffffffe",
    "add     ebx, 0x3",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xc1bb4",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x398",
    "mov     eax, r15d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "{Case 0x0}",
    "mov     byte [rel data_168f84], 0xff",
    "mov     dword [rbp-0x2e0], 0x1",
    "{Case 0x20}",
    "lea     rax, [rel list_optarg]",
    "lea     rsi, [rbp-0x290]",
    "mov     rdi, qword [rax]",
    "call    legal_number",
    "test    eax, eax",
    "je      0xc1546",
    "{Case 0x27}",
    "lea     rax, [rel list_optarg]",
    "lea     rsi, [rbp-0x290]",
    "mov     rdi, qword [rax]",
    "call    legal_number",
    "test    eax, eax",
    "je      0xc1885",
    "{Case 0x26}",
    "lea     rax, [rel list_optarg]",
    "xor     ecx, ecx",
    "lea     rdx, [rbp-0x288]",
    "lea     rsi, [rbp-0x280]",
    "mov     r14, qword [rax]",
    "mov     rdi, r14",
    "call    uconvert",
    "test    eax, eax",
    "je      0xc1860",
    "{Case 0x24}",
    "mov     dword [rbp-0x2f4], 0x1",
    "jmp     0xbf579",
    "{Case 0x22}",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x318], rax  {\"/lib64/ld-linux-x86-64.so.2\"}",
    "jmp     0xbf579",
    "{Case 0x1b}",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x2f0], rax",
    "jmp     0xbf579",
    "{Case 0x16}",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]",
    "movzx   eax, byte [rax]",
    "mov     byte [rel data_168f84], al",
    "jmp     0xbf579",
    "{Case 0x13}",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x330], rax  {\"o.2\"}",
    "jmp     0xbf579",
    "{Case 0x25}",
    "mov     dword [rbp-0x348], 0x1",
    "jmp     0xbf579",
    "{Case 0x17}",
    "mov     dword [rbp-0x2c4], 0x1",
    "jmp     0xbf579",
    "mov     edi, 0x70",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xc1c2d",
    "lea     rax, [rel data_122e02]",
    "xor     r12d, r12d",
    "xor     ebx, ebx",
    "mov     qword [rbp-0x2a0], rax",
    "mov     qword [rbp-0x320], rax  {\"d-linux-x86-64.so.2\"}",
    "jmp     0xbf8cc",
    "mov     rax, qword [rbp-0x320]  {\"d-linux-x86-64.so.2\"}",
    "mov     qword [rbp-0x2a0], rax",
    "movzx   eax, byte [rax]",
    "test    al, al",
    "je      0xc1c0b",
    "xor     edx, edx",
    "mov     esi, ebx",
    "mov     rdi, r12",
    "call    tokenize_array_reference",
    "test    eax, eax",
    "jne     0xbf84b",
    "lea     rax, [rel list_optarg]",
    "mov     rdi, qword [rax]",
    "call    sh_invalidnum",
    "jmp     0xc0268",
    "mov     rax, qword [rbp-0x290]",
    "test    rax, rax",
    "js      0xc1546",
    "lea     rax, [rel list_optarg]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1342a0]  {\"%s: invalid file descriptor spec\u2026\"}",
    "mov     rbx, qword [rax]",
    "jmp     0xc0250",
    "mov     r15, qword [rbp-0x290]",
    "test    r15, r15",
    "js      0xc1885",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_134318]  {\"%s: invalid timeout specificatio\u2026\"}",
    "call    dcgettext",
    "mov     rsi, r14",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xc0268",
    "mov     rdx, qword [rbp-0x280]",
    "test    rdx, rdx",
    "js      0xc1860",
    "mov     rdi, qword [rbp-0x2e8]",
    "mov     rsi, r12",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xbf7df",
    "mov     esi, 0x70",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbp-0x298], r15",
    "mov     byte [r15], 0x0",
    "cmp     r13d, 0x1",
    "je      0xc164b",
    "xor     r12d, r12d",
    "xor     ebx, ebx",
    "jmp     0xbf8cc",
    "mov     rbx, qword [rbp-0x320]  {\"d-linux-x86-64.so.2\"}",
    "xor     esi, esi",
    "xor     ecx, ecx",
    "lea     rdx, [rbx+0x1]",
    "mov     rax, qword [rbp-0x2e8]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "mov     rax, qword [rax+0x8]",
    "mov     rbx, qword [rax]",
    "mov     r15d, 0x1",
    "jmp     0xbf61b",
    "movsxd  rdx, eax",
    "cmp     rax, rdx",
    "jne     0xc1546",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "nop     dword [rax]",
    "movsxd  rax, r15d",
    "mov     dword [rbp-0x368], r15d",
    "cmp     r15, rax",
    "jne     0xc1885",
    "mov     rax, qword [rbp-0x288]",
    "test    rax, rax",
    "js      0xc1860",
    "mov     eax, dword [rbp-0x2d4]",
    "test    eax, eax",
    "jne     0xbf8f7",
    "test    r14d, r14d",
    "je      0xc1789",
    "xor     edi, edi",
    "cmp     al, 0x1",
    "mov     qword [rbp-0x2a0], rdx",
    "sete    dil",
    "or      ecx, edi",
    "cmp     al, 0x7f",
    "sete    al",
    "add     rdx, 0x1",
    "movzx   eax, al",
    "or      esi, eax",
    "movzx   eax, byte [rdx-0x1]",
    "test    al, al",
    "jne     0xbf8a0",
    "mov     ebx, ecx",
    "mov     r12d, esi",
    "mov     dword [rbp-0x2d4], eax",
    "mov     r13d, 0x1",
    "jmp     0xbf579",
    "mov     edi, dword [rbp-0x368]",
    "xor     edx, edx",
    "xor     eax, eax",
    "mov     esi, 0x1",
    "call    fcntl",
    "test    eax, eax",
    "js      0xc1a34",
    "mov     dword [rbp-0x2b4], edx",
    "mov     r14d, 0x1",
    "mov     dword [rbp-0x2b8], eax",
    "jmp     0xbf579",
    "mov     edi, dword [rbp-0x2dc]",
    "lea     rsi, [rbp-0x2aa]",
    "xor     edx, edx",
    "call    read",
    "mov     r15d, eax",
    "shr     r15d, 0x1f",
    "jmp     0xc0152",
    "lea     rdi, [rel data_11f1ca]  {\"TMOUT\"}",
    "call    find_variable",
    "test    rax, rax",
    "je      0xc1a99",
    "lea     r13, [rbp-0x150]",
    "mov     rdi, r13",
    "call    sigemptyset",
    "mov     rdx, r13",
    "xor     esi, esi",
    "xor     edi, edi",
    "call    sigprocmask",
    "mov     esi, 0x11",
    "mov     rdi, r13",
    "call    sigaddset",
    "lea     rdi, [rel data_1217fb]  {\"read_builtin\"}",
    "call    begin_unwind_frame",
    "lea     rax, [rel interactive]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xbf952",
    "call    __errno_location",
    "mov     r15d, dword [rbp-0x368]",
    "mov     edi, dword [rax]",
    "call    strerror",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1342d0]  {\"%d: invalid file descriptor: %s\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rdx, rbx",
    "mov     esi, r15d",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xc0268",
    "mov     dword [rbp-0x2dc], r15d",
    "jmp     0xbf579",
    "mov     rdi, qword [rbp-0x330]  {\"o.2\"}",
    "test    rdi, rdi",
    "je      0xc0b00",
    "mov     qword [rbp-0x2a0], 0x0",
    "jmp     0xbf900",
    "mov     rdi, rax",
    "call    get_variable_value",
    "mov     qword [rbp-0x2a0], rax",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xbf900",
    "mov     edi, dword [rbp-0x2dc]",
    "call    isatty",
    "mov     dword [rbp-0x344], eax",
    "test    eax, eax",
    "je      0xc180c",
    "lea     rax, [rel default_buffered_input]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "jns     0xc18a0",
    "mov     rax, qword [rbp-0x298]",
    "cmp     qword [rbp-0x2e8], 0x0",
    "mov     qword [rbp-0x398], rax",
    "je      0xc1488",
    "mov     esi, 0x3",
    "call    builtin_find_indexed_array",
    "mov     rdi, qword [rbp-0x298]",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xc0ccc",
    "xor     ecx, ecx",
    "lea     rdx, [rbp-0x288]",
    "lea     rsi, [rbp-0x280]",
    "call    uconvert",
    "test    eax, eax",
    "je      0xc1a1b",
    "mov     edi, dword [rbp-0x2dc]",
    "xor     esi, esi",
    "mov     edx, 0x1",
    "call    lseek",
    "test    rax, rax",
    "jns     0xbf96b",
    "cmp     qword [rbp-0x318], 0x0  {\"/lib64/ld-linux-x86-64.so.2\"}",
    "mov     dword [rbp-0x3a0], 0x0",
    "je      0xc1849",
    "lea     rax, [rel bash_input]",
    "cmp     dword [rax], 0x4",
    "je      0xc1a72",
    "mov     ecx, dword [rbp-0x2fc]",
    "test    ecx, ecx",
    "je      0xc1708",
    "mov     rax, qword [rbp-0x320]  {\"d-linux-x86-64.so.2\"}",
    "mov     rdx, qword [rbp-0x398]",
    "test    rax, rax",
    "je      0xc0b66",
    "call    free",
    "jmp     0xc0268",
    "mov     rsi, qword [rbp-0x320]  {\"d-linux-x86-64.so.2\"}",
    "xor     edx, edx",
    "call    list_string",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xc01eb",
    "mov     dword [rbp-0x2b8], 0x0",
    "mov     dword [rbp-0x2b4], 0x0",
    "jmp     0xbf900",
    "mov     rdx, qword [rbp-0x280]",
    "test    rdx, rdx",
    "js      0xc1a1b",
    "call    __errno_location",
    "cmp     dword [rax], 0x1d",
    "sete    al",
    "cmp     qword [rbp-0x318], 0x0  {\"/lib64/ld-linux-x86-64.so.2\"}",
    "movzx   eax, al",
    "mov     dword [rbp-0x3a0], eax",
    "jne     0xc15f2",
    "mov     eax, dword [rbp-0x2c4]",
    "or      eax, dword [rbp-0x348]",
    "je      0xbf9e4",
    "mov     r15d, dword [rbp-0x344]",
    "test    r15d, r15d",
    "je      0xc15f2",
    "mov     esi, dword [rbp-0x2dc]",
    "cmp     esi, dword [rax+0x10]",
    "jne     0xc18b0",
    "lea     rax, [rel interactive_shell]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xbf952",
    "mov     rsi, qword [rbp-0x398]",
    "xor     edx, edx",
    "lea     rdi, [rel data_122fcf[4]]  {\"REPLY\"}",
    "call    bind_variable",
    "mov     rbx, rax",
    "jmp     0xc14bd",
    "mov     rdi, rax",
    "call    dequote_string",
    "lea     rdi, [rel data_122fcf[4]]  {\"REPLY\"}",
    "xor     edx, edx",
    "mov     r12, rax",
    "mov     rsi, rax",
    "call    bind_variable",
    "mov     rdi, r12",
    "mov     rbx, rax",
    "call    free",
    "mov     rax, qword [rbp-0x2e8]",
    "mov     qword [rbp-0x298], rdx",
    "cmp     qword [rax], 0x0",
    "je      0xc13a2",
    "cmp     byte [rax], 0x0",
    "mov     rsi, qword [rbp-0x320]  {\"d-linux-x86-64.so.2\"}",
    "jne     0xc0b49",
    "mov     rdi, qword [rbp-0x298]",
    "call    free",
    "jmp     0xbf61b",
    "mov     esi, dword [rbp-0x2fc]",
    "test    esi, esi",
    "je      0xc12e2",
    "mov     rax, qword [rbp-0x288]",
    "mov     ecx, edx",
    "test    rax, rax",
    "cmovs   ecx, r14d",
    "cmovns  r14d, eax",
    "mov     dword [rbp-0x2b4], ecx",
    "mov     dword [rbp-0x2b8], r14d",
    "jmp     0xbf900",
    "mov     qword [rbp-0x2f0], 0x0",
    "mov     qword [rbp-0x318], 0x0  {\"/lib64/ld-linux-x86-64.so.2\"}",
    "mov     dword [rbp-0x348], 0x0",
    "mov     dword [rbp-0x2c4], 0x0",
    "jmp     0xbf9e4",
    "mov     r14d, dword [rbp-0x2b4]",
    "mov     eax, r14d",
    "or      eax, dword [rbp-0x2b8]",
    "jne     0xc14df",
    "jmp     0xbf983",
    "mov     r14d, dword [rbp-0x2c4]",
    "test    r14d, r14d",
    "je      0xbf9e4",
    "jmp     0xc18cf",
    "mov     eax, dword [rbp-0x2dc]",
    "cmp     edi, eax",
    "jne     0xbf952",
    "test    rbx, rbx",
    "je      0xc1640",
    "mov     r15d, 0x1",
    "jmp     0xc01eb",
    "mov     eax, dword [rbx+0x28]",
    "test    eax, 0x4002",
    "jne     0xc1640",
    "lea     rax, [rel assoc_expand_once]",
    "xor     ebx, ebx",
    "mov     r13d, dword [rax]",
    "test    r13d, r13d",
    "je      0xc13e5",
    "lea     rbx, [rbp-0x2a0]",
    "lea     r14, [rbp-0x298]",
    "mov     dword [rbp-0x3a8], r15d",
    "lea     r12, [rel assoc_expand_once]",
    "mov     qword [rbp-0x350], rbx",
    "mov     r15, rax",
    "mov     qword [rbp-0x358], r14",
    "jmp     0xc0c45",
    "movsx   rax, byte [rdx]",
    "lea     ecx, [rax-0x9]",
    "cmp     cl, 0x1",
    "jbe     0xc0b59",
    "jmp     0xc0b66",
    "mov     rbx, rax",
    "nop     dword [rax]",
    "mov     rdi, rax",
    "call    dequote_list",
    "mov     edi, dword [rbp-0x2dc]",
    "lea     rsi, [rbp-0xd0]",
    "call    fstat",
    "test    eax, eax",
    "js      0xc1679",
    "mov     r13d, dword [rbp-0x2b8]",
    "test    r13d, r13d",
    "je      0xbfa46",
    "lea     rdx, [rel uwcache]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0xc1aa9",
    "call    sync_buffered_stream",
    "jmp     0xbf952",
    "and     ah, 0xef",
    "mov     dword [rbx+0x28], eax",
    "jmp     0xc01eb",
    "mov     rax, qword [rbp-0x2e8]",
    "mov     rax, qword [rax+0x8]",
    "mov     r12, qword [rax]",
    "mov     rdi, r12",
    "call    legal_identifier",
    "test    eax, eax",
    "je      0xc191e",
    "mov     rax, qword [rbp-0x2e8]",
    "mov     rax, qword [rax+0x8]",
    "mov     eax, dword [rax+0x8]",
    "and     eax, 0x200",
    "cmp     eax, 0x1",
    "sbb     ebx, ebx",
    "and     ebx, 0xfffffffe",
    "add     ebx, 0x3",
    "cmp     eax, 0x1",
    "sbb     r13d, r13d",
    "and     r13d, 0xfffff000",
    "add     r13d, 0x1080",
    "mov     rax, qword [r15+0x8]",
    "mov     r14d, dword [r12]",
    "xor     r13d, r13d",
    "mov     rbx, qword [rax]",
    "test    r14d, r14d",
    "je      0xc0c82",
    "lea     rcx, [rel ifs_cmap]",
    "cmp     byte [rcx+rax], 0x0",
    "jne     0xc0b40",
    "cmp     al, 0x20",
    "jne     0xc0b66",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "call    remove_quoted_nulls",
    "mov     rax, qword [rbx+0x8]",
    "mov     rbx, qword [rbx]",
    "and     dword [rax+0x8], 0xfffbffff",
    "test    rbx, rbx",
    "jne     0xc12e8",
    "jmp     0xc01ab",
    "mov     rax, qword [rbx+0x8]",
    "mov     rsi, r12",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     rdi, r13",
    "add     r12, 0x1",
    "mov     rcx, qword [rax]",
    "call    sub_96140",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0xc01b8",
    "and     dword [r13+0x28 {Elf64_Header::section_header_offset.d}], 0xffffefff {Elf64_Header::section_header_offset.d}",
    "mov     rdi, r14",
    "call    dispose_words",
    "mov     dword [rbp-0x39c], r12d",
    "mov     dword [rbp-0x2f8], ebx",
    "mov     dword [rbp-0x2cc], 0x0",
    "mov     qword [rbp-0x390], 0x0",
    "mov     dword [rbp-0x2b8], 0x0",
    "mov     dword [rbp-0x2b4], 0x0",
    "mov     dword [rbp-0x2d0], 0x0",
    "mov     dword [rbp-0x2fc], 0x0",
    "mov     dword [rbp-0x2c8], 0x0",
    "mov     dword [rbp-0x2bc], 0x0",
    "mov     dword [rbp-0x2c0], 0x70",
    "jmp     0xbfbfa",
    "mov     eax, dword [rbp-0xb8]",
    "and     eax, 0xf000",
    "cmp     eax, 0x8000",
    "je      0xc1679",
    "mov     eax, dword [rbp-0x2b4]",
    "or      eax, dword [rbp-0x2b8]",
    "je      0xc1679",
    "call    shtimer_alloc",
    "lea     rdx, [rel read_timeout]",
    "mov     ecx, dword [rbp-0x2c4]",
    "mov     esi, dword [rbp-0x2dc]",
    "mov     qword [rdx], rax",
    "lea     rdx, [rel posixly_correct]",
    "mov     dword [rax+0x10], esi",
    "or      ecx, dword [rdx]",
    "mov     edx, 0x5",
    "cmp     ecx, 0x1",
    "lea     rcx, [rel sub_bc220]",
    "adc     edx, 0x0",
    "mov     qword [rax+0x20], rcx",
    "mov     dword [rax+0x14], edx",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "jne     0xbf9c0",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "xor     edx, edx",
    "mov     esi, ebx",
    "mov     rdi, r12",
    "call    tokenize_array_reference",
    "test    eax, eax",
    "jne     0xc1403",
    "mov     r12, qword [rbp-0x298]",
    "mov     rbx, qword [rbp-0x330]  {\"o.2\"}",
    "cmp     byte [r12], 0x0",
    "jne     0xc1950",
    "mov     rdi, rbx",
    "call    legal_identifier",
    "test    eax, eax",
    "je      0xc0ce0",
    "mov     eax, dword [rax+0x8]",
    "and     eax, 0x200",
    "cmp     eax, 0x1",
    "sbb     r13d, r13d",
    "and     r13d, 0xfffffffe",
    "add     r13d, 0x3",
    "cmp     eax, 0x1",
    "sbb     r14d, r14d",
    "and     r14d, 0xfffff000",
    "add     r14d, 0x1080",
    "add     rdx, 0x1",
    "test    rsi, rsi",
    "je      0xc0b66",
    "mov     rbx, r14",
    "xor     r12d, r12d",
    "nop     dword [rax]",
    "mov     r10d, dword [rbp-0x2d4]",
    "test    r10d, r10d",
    "jle     0xc0dbb",
    "test    r14d, r14d",
    "jne     0xbfa06",
    "lea     rax, [rel read_timeout]",
    "xor     esi, esi",
    "mov     dword [rbp-0x39c], r12d",
    "mov     dword [rbp-0x2f8], ebx",
    "mov     dword [rbp-0x2cc], 0x0",
    "mov     rdi, qword [rax]",
    "mov     qword [rbp-0x390], 0x0",
    "mov     dword [rbp-0x2d0], 0x0",
    "add     rdi, 0x30",
    "mov     dword [rbp-0x2fc], 0x0",
    "mov     dword [rbp-0x2c8], 0x0",
    "mov     dword [rbp-0x2bc], 0x0",
    "mov     dword [rbp-0x2c0], 0x70",
    "call    __sigsetjmp",
    "endbr64 ",
    "test    eax, eax",
    "jne     0xc0e70",
    "mov     rdx, qword [rel data_161a50]",
    "mov     qword [rax+0x10], 0x0",
    "mov     qword [rax], rdx",
    "lea     rdx, [rel xfree]",
    "mov     qword [rel data_161a50], rax",
    "mov     qword [rax+0x8], rdx",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x2e8]",
    "mov     rax, qword [rax+0x8]",
    "mov     rbx, qword [rax]",
    "jmp     0xc0cf1",
    "mov     rsi, qword [rbp-0x320]  {\"d-linux-x86-64.so.2\"}",
    "lea     rdx, [rbp-0x2a0]",
    "lea     rdi, [rbp-0x298]",
    "call    get_word_from_string",
    "mov     rbx, rax",
    "mov     rax, qword [rbp-0x298]",
    "cmp     byte [rax], 0x0",
    "jne     0xc1b2d",
    "mov     rax, qword [rbp-0x2e8]",
    "mov     rsi, r12",
    "mov     edx, r13d",
    "mov     rax, qword [rax+0x8]",
    "mov     rdi, qword [rax]",
    "call    builtin_bind_variable",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xc1945",
    "xor     edx, edx",
    "mov     esi, r13d",
    "mov     rdi, rbx",
    "call    tokenize_array_reference",
    "test    eax, eax",
    "jne     0xc0c8e",
    "mov     rax, qword [rbp-0x298]",
    "cmp     byte [rax], 0x0",
    "jne     0xc0bb0",
    "cmp     byte [rel data_168f84], 0xa",
    "jne     0xbfc0a",
    "mov     r9d, dword [rbp-0x2c4]",
    "test    r9d, r9d",
    "je      0xc0f20",
    "jmp     0xbf9fa",
    "lea     rax, [rel read_timeout]",
    "mov     rbx, qword [rax]",
    "test    rbx, rbx",
    "je      0xc0e8f",
    "lea     rax, [rel interactive_shell]",
    "mov     eax, dword [rax]",
    "or      eax, dword [rel data_168770]",
    "jne     0xbfae3",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xc0cc5",
    "mov     edx, dword [rbp-0x2fc]",
    "mov     rsi, qword [rbp-0x320]  {\"d-linux-x86-64.so.2\"}",
    "mov     rdi, r12",
    "call    strip_trailing_ifs_whitespace",
    "mov     r12, rax",
    "jmp     0xc1980",
    "mov     r12, rbx",
    "mov     r15d, 0x1",
    "jmp     0xc146a",
    "test    dword [rax+0x28 {Elf64_Header::section_header_offset.d}], 0x4002",
    "jne     0xc1945",
    "mov     rdx, qword [rbp-0x350]",
    "mov     rsi, qword [rbp-0x320]  {\"d-linux-x86-64.so.2\"}",
    "mov     rdi, qword [rbp-0x358]",
    "call    get_word_from_string",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xc0d80",
    "mov     edx, r14d",
    "lea     rsi, [rel data_122e02]",
    "mov     rdi, rbx",
    "call    builtin_bind_variable",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xc0cc5",
    "mov     eax, dword [rbp-0x348]",
    "test    eax, eax",
    "je      0xbfcfc",
    "mov     esi, dword [rbp-0x344]",
    "test    esi, esi",
    "je      0xbfcfc",
    "mov     r8d, dword [rbp-0x2d4]",
    "test    r8d, r8d",
    "jg      0xc133e",
    "lea     rax, [rel read_timeout]",
    "pxor    xmm0, xmm0",
    "xor     edx, edx",
    "lea     rsi, [rbp-0x1d0]",
    "mov     edi, 0x2",
    "movaps  xmmword [rel data_168ed0], xmm0",
    "mov     qword [rax], 0x0",
    "call    sigprocmask",
    "movsxd  rax, dword [rbp-0x2a8]",
    "mov     rdx, qword [rbp-0x298]",
    "mov     byte [rdx+rax], 0x0",
    "mov     eax, dword [rbp-0x2a8]",
    "test    eax, eax",
    "jne     0xc1260",
    "mov     rdi, rbx",
    "call    shtimer_unset",
    "mov     rdi, rbx",
    "call    free",
    "lea     rdx, [rel uwcache]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0xc1226",
    "call    sub_8aa00",
    "mov     rdi, qword [rbp-0x398]",
    "mov     eax, dword [rbp-0x2fc]",
    "mov     qword [rbp-0x298], r12",
    "test    eax, eax",
    "je      0xc1a86",
    "test    r12, r12",
    "lea     rax, [rel data_122e02]",
    "cmove   r12, rax",
    "jmp     0xc141c",
    "test    r12, r12",
    "jne     0xc1ae0",
    "test    rbx, rbx",
    "je      0xc1477",
    "mov     rax, qword [rbp-0x2e8]",
    "mov     rax, qword [rax+0x8]",
    "mov     rdi, qword [rax]",
    "call    stupidly_hack_special_variables",
    "and     dword [r12+0x28 {Elf64_Header::section_header_offset.d}], 0xffffefff {Elf64_Header::section_header_offset.d}",
    "lea     rsi, [rel data_122e02]",
    "jmp     0xc0bf1",
    "mov     rax, qword [rbp-0x2a0]",
    "mov     edx, dword [rbp-0x2fc]",
    "mov     rsi, r13",
    "mov     byte [rax], 0x0",
    "test    edx, edx",
    "jne     0xc0d30",
    "test    dword [rax+0x28 {Elf64_Header::section_header_offset.d}], 0x4002",
    "je      0xc0c28",
    "mov     eax, dword [rbp-0x2dc]",
    "test    eax, eax",
    "je      0xc0af0",
    "mov     ebx, dword [rbp-0x2dc]",
    "lea     rsi, [rbp-0x210]",
    "mov     edi, ebx",
    "mov     dword [rel data_168720], ebx",
    "call    tcgetattr",
    "movdqa  xmm3, xmmword [rbp-0x210]",
    "mov     edi, ebx",
    "movdqa  xmm2, xmmword [rbp-0x200]",
    "movdqa  xmm1, xmmword [rbp-0x1f0]",
    "movdqu  xmm0, xmmword [rbp-0x1e4]",
    "mov     esi, 0x1",
    "lea     rdx, [rbp-0x250]",
    "movaps  xmmword [rbp-0x250], xmm3",
    "movups  xmmword [rel data_168744], xmm1",
    "movaps  xmmword [rbp-0x230], xmm1",
    "and     dword [rbp-0x244], 0xffffff97",
    "movups  xmmword [rel data_168724], xmm3",
    "movups  xmmword [rel data_168734], xmm2",
    "movups  xmmword [rel data_168744+0xc], xmm0",
    "movaps  xmmword [rbp-0x240], xmm2",
    "movups  xmmword [rbp-0x224], xmm0",
    "call    tcsetattr",
    "jmp     0xc0fbc",
    "mov     ebx, dword [rbp-0x2dc]",
    "lea     rsi, [rbp-0x210]",
    "mov     edi, ebx",
    "mov     dword [rel data_168720], ebx",
    "call    tcgetattr",
    "movdqa  xmm3, xmmword [rbp-0x210]",
    "movdqa  xmm2, xmmword [rbp-0x200]",
    "movdqa  xmm1, xmmword [rbp-0x1f0]",
    "movdqu  xmm0, xmmword [rbp-0x1e4]",
    "mov     ecx, dword [rbp-0x348]",
    "movups  xmmword [rel data_168724], xmm3",
    "movups  xmmword [rel data_168744], xmm1",
    "movaps  xmmword [rbp-0x230], xmm1",
    "movups  xmmword [rel data_168734], xmm2",
    "movups  xmmword [rel data_168744+0xc], xmm0",
    "movaps  xmmword [rbp-0x250], xmm3",
    "movaps  xmmword [rbp-0x240], xmm2",
    "movups  xmmword [rbp-0x224], xmm0",
    "test    ecx, ecx",
    "je      0xc1725",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xc1c15",
    "movzx   ebx, byte [rel data_168f84]",
    "cmp     bl, 0xa",
    "je      0xbfcfc",
    "mov     r13, qword [rbp-0x298]",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xc1bf5",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xc1c45",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     r12, rax",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0xbfb04",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rbx, qword [rcx+rax*8]",
    "cmp     byte [r12], 0x0",
    "je      0xc141c",
    "lea     r12, [rel data_122e02]",
    "jmp     0xc141c",
    "mov     rdi, qword [rbp-0x398]",
    "call    free",
    "jmp     0xbf61b",
    "mov     rdi, rbx",
    "call    free",
    "mov     edx, r14d",
    "mov     rdi, rbx",
    "call    builtin_bind_variable",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xc0d18",
    "mov     rdi, r13",
    "call    dequote_string",
    "mov     edx, r14d",
    "mov     rdi, rbx",
    "mov     rsi, rax",
    "mov     qword [rbp-0x380], rax",
    "call    builtin_bind_variable",
    "mov     rdi, qword [rbp-0x380]",
    "test    rax, rax",
    "mov     r14, rax",
    "je      0xc10a0",
    "mov     rdi, rbx",
    "call    stupidly_hack_special_variables",
    "mov     r15, qword [r15]",
    "and     dword [r14+0x28 {Elf64_Header::section_header_offset.d}], 0xffffefff {Elf64_Header::section_header_offset.d}",
    "cmp     qword [r15], 0x0",
    "je      0xc1394",
    "mov     qword [rbp-0x388], 0x0",
    "jmp     0xbfd93",
    "mov     eax, dword [rbp-0x2c4]",
    "test    eax, eax",
    "je      0xc0af0",
    "mov     dword [rbp-0x2a8], eax",
    "mov     eax, dword [rbp-0x2a8]",
    "test    eax, eax",
    "jns     0xc0ffb",
    "mov     eax, dword [rbp-0x244]",
    "mov     edx, 0x100",
    "mov     edi, dword [rbp-0x2dc]",
    "mov     esi, 0x1",
    "movq    xmm0, qword [rbp-0x250]",
    "mov     word [rbp-0x23a], dx",
    "lea     rdx, [rbp-0x250]",
    "movq    xmm1, qword [rel data_136548]",
    "and     eax, 0xfffffffd",
    "or      eax, 0x8001",
    "pand    xmm0, xmm1",
    "mov     dword [rbp-0x244], eax",
    "movq    xmm1, qword [rel data_136550]",
    "por     xmm0, xmm1",
    "movq    qword [rbp-0x250], xmm0",
    "call    tcsetattr",
    "jmp     0xc0fbc",
    "lea     rsi, [rbp-0x250]",
    "mov     edi, ebx",
    "call    ttfd_cbreak",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_161a50]",
    "mov     dword [rbx+0x18], 0x4",
    "mov     qword [rel data_161a50], rbx",
    "mov     qword [rbx], rax",
    "lea     rax, [rel sub_872f0]",
    "mov     qword [rbx+0x8], rax",
    "lea     rax, [rel rl_num_chars_to_read]",
    "mov     edx, dword [rax]",
    "mov     qword [rbx+0x10], rax",
    "mov     dword [rbx+0x1c], edx",
    "mov     ebx, dword [rbp-0x2d4]",
    "mov     dword [rax], ebx",
    "jmp     0xbfc2a",
    "lea     rax, [rel bash_readline_initialized]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0xc19aa",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "mov     rbx, r12",
    "call    __strcpy_chk",
    "jmp     0xc0ef4",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [rbx], 0x0",
    "mov     rax, qword [rel data_161a50]",
    "mov     r11d, dword [rbp-0x2c4]",
    "mov     qword [rbx+0x10], 0x0",
    "mov     qword [rbx], rax",
    "lea     rax, [rel sub_bf130]",
    "mov     qword [rbx+0x8], rax",
    "mov     qword [rel data_161a50], rbx",
    "test    r11d, r11d",
    "je      0xc0d90",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel read_timeout]",
    "mov     edx, dword [rbp-0x2b8]",
    "mov     esi, dword [rbp-0x2b4]",
    "mov     rdi, qword [rax]",
    "call    shtimer_set",
    "mov     r10d, dword [rbp-0x2d4]",
    "test    r10d, r10d",
    "jg      0xbfc0a",
    "lea     rdx, [rel uwcache]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0xc155a",
    "mov     rdi, r12",
    "call    dequote_string",
    "mov     edx, r13d",
    "mov     r14, rax",
    "mov     rax, qword [rbp-0x2e8]",
    "mov     rsi, r14",
    "mov     rax, qword [rax+0x8]",
    "mov     rdi, qword [rax]",
    "call    builtin_bind_variable",
    "mov     rdi, r14",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xc1b80",
    "test    r13, r13",
    "je      0xc0cc5",
    "test    dword [rax+0x28 {Elf64_Header::section_header_offset.d}], 0x4002",
    "jne     0xc0d18",
    "call    free",
    "mov     rdi, r13",
    "call    free",
    "jmp     0xc0cc5",
    "test    dword [rax+0x28 {Elf64_Header::section_header_offset.d}], 0x4002",
    "jne     0xc10a0",
    "mov     qword [rbp-0x2e8], r15",
    "mov     r15d, dword [rbp-0x3a8]",
    "lea     rdx, [rel uwcache]",
    "mov     r12, qword [rbp-0x298]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0xc11c0",
    "lea     rax, [rel bash_readline_initialized]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xbfd2a",
    "lea     rsi, [rel data_168720]",
    "lea     rdi, [rel sub_bc4d0]",
    "mov     dword [rel data_161190], 0x1",
    "call    sub_891b0",
    "lea     rax, [rel interactive_shell]",
    "mov     eax, dword [rax]",
    "or      eax, dword [rel data_168770]",
    "jne     0xbfcfc",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "call    strerror",
    "lea     rsi, [rel data_133c48]  {\"error setting terminal attribute\u2026\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "call    sub_a65a0",
    "jmp     0xbfc4b",
    "lea     rax, [rel _rl_keymap]",
    "mov     byte [rel data_168f70], bl",
    "mov     rdx, qword [rax]",
    "movsx   eax, byte [rdx+0xd0]",
    "mov     dword [rel data_168f80], eax",
    "mov     rax, qword [rdx+0xd8]",
    "mov     qword [rel data_168f78], rax",
    "movzx   eax, bl",
    "shl     rax, 0x4",
    "add     rax, rdx",
    "movsx   ecx, byte [rax]",
    "mov     dword [rel data_168f74], ecx",
    "mov     rcx, qword [rax+0x8]",
    "mov     byte [rdx+0xd0], 0x0",
    "mov     qword [rel data_168f68], rcx",
    "lea     rcx, [rel rl_insert]",
    "mov     qword [rdx+0xd8], rcx",
    "lea     rdx, [rel rl_newline]",
    "mov     byte [rax], 0x0",
    "mov     qword [rax+0x8], rdx",
    "lea     rdx, [rel uwcache]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0xc18d9",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0xc0f0a",
    "mov     qword [rbp-0x298], rbx",
    "mov     r15d, 0x8e",
    "jmp     0xc0152",
    "lea     rdi, [rel data_1217fb]  {\"read_builtin\"}",
    "call    sub_113ed0",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xc123f",
    "mov     rsi, qword [rdx]",
    "lea     ecx, [rax-0x1]",
    "movsxd  rdi, ecx",
    "mov     dword [rdx+0xc], ecx",
    "mov     r12, qword [rsi+rdi*8]",
    "mov     qword [r12], rbx",
    "lea     rbx, [rel sub_bc290]",
    "mov     qword [r12+0x8], rbx",
    "mov     qword [r12+0x10], 0x0",
    "mov     qword [rel data_161a50], r12",
    "test    ecx, ecx",
    "je      0xc158f",
    "call    free",
    "mov     r15d, 0x1",
    "jmp     0xc146a",
    "test    dword [rax+0x28 {Elf64_Header::section_header_offset.d}], 0x4002",
    "jne     0xc1b80",
    "mov     rdi, r13",
    "call    free",
    "jmp     0xc0cc5",
    "test    r13, r13",
    "je      0xc0c28",
    "call    free",
    "mov     rdi, r13",
    "call    free",
    "jmp     0xc0c28",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0xbfdbb",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rbx, qword [rcx+rax*8]",
    "mov     edi, 0x24",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xc1bdd",
    "call    sub_a65a0",
    "call    sub_8aa00",
    "jmp     0xbfcfc",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0xbfcd8",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "mov     qword [rax], rbx",
    "lea     rax, [rel sub_bc290]",
    "mov     qword [r12+0x8], rax",
    "mov     qword [r12+0x10], 0x0",
    "mov     qword [rel data_161a50], r12",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0xbfb91",
    "sub     eax, 0x2",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "call    free",
    "jmp     0xc144e",
    "mov     rdi, r13",
    "call    free",
    "nop     word [rax+rax]",
    "mov     rax, qword [rel data_161a50]",
    "mov     qword [rbx+0x10], r12",
    "mov     qword [rbx], rax",
    "lea     rax, [rel xfree]",
    "mov     qword [rel data_161a50], rbx",
    "mov     qword [rbx+0x8], rax",
    "call    check_read_timeout",
    "mov     eax, dword [rbp-0x2d4]",
    "test    eax, eax",
    "jle     0xc1198",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "cmp     byte [rel data_168f84], 0xa",
    "jne     0xc117a",
    "mov     r15d, dword [rbp-0x344]",
    "test    r15d, r15d",
    "jne     0xc116e",
    "mov     esi, 0x24",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_161a50]",
    "lea     r12, [rel rl_instream]",
    "mov     dword [rbx+0x18], 0x8",
    "lea     rsi, [rel data_122f4f]",
    "mov     edi, dword [rbp-0x2dc]",
    "mov     qword [rel data_161a50], rbx",
    "mov     qword [rbx], rax",
    "lea     rax, [rel sub_872f0]",
    "mov     qword [rbx+0x8], rax",
    "mov     rax, qword [r12]",
    "mov     qword [rbx+0x10], r12",
    "mov     qword [rbx+0x1c], rax",
    "mov     qword [rbp-0x388], rax",
    "call    fdopen",
    "mov     qword [r12], rax",
    "mov     rdx, qword [rel data_161a50]",
    "lea     rbx, [rel sub_bc240]",
    "mov     qword [rax+0x10], 0x0",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax], rdx",
    "mov     qword [rel data_161a50], rax",
    "jmp     0xc15a5",
    "lea     rdx, [rel bashline_reset_event_hook]",
    "mov     ebx, dword [rbp-0x2b4]",
    "mov     qword [rax], r12",
    "mov     qword [rax+0x10], 0x0",
    "mov     esi, dword [rbp-0x2b8]",
    "mov     qword [rax+0x8], rdx",
    "mov     rcx, rbx",
    "mov     qword [rel data_161a50], rax",
    "lea     rax, [rel read_timeout]",
    "mov     rax, qword [rax]",
    "mov     qword [rax], rbx",
    "mov     rbx, rsi",
    "mov     qword [rax+0x8], rsi",
    "mov     eax, esi",
    "imul    rax, rax, 0x431bde83",
    "shr     rax, 0x32",
    "add     ecx, eax",
    "imul    eax, eax, 0xf4240",
    "mov     ecx, ecx",
    "mov     qword [rel data_168ed0], rcx",
    "sub     ebx, eax",
    "mov     eax, ebx",
    "mov     qword [rel data_168ed8], rax",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r12d, dword [rbp-0x344]",
    "test    r12d, r12d",
    "je      0xc11a1",
    "mov     ebx, dword [rbp-0x3a0]",
    "mov     eax, 0x1",
    "test    ebx, ebx",
    "cmove   eax, dword [rbp-0x2d0]",
    "mov     dword [rbp-0x2d0], eax",
    "jmp     0xbfe18",
    "mov     r13d, dword [rbp-0x2d4]",
    "test    r13d, r13d",
    "jle     0xc1198",
    "mov     r14d, dword [rbp-0x2e0]",
    "test    r14d, r14d",
    "je      0xc116e",
    "mov     dword [rbp-0x2d0], 0x1",
    "jmp     0xbfe18",
    "cmp     qword [rbp-0x318], 0x0  {\"/lib64/ld-linux-x86-64.so.2\"}",
    "je      0xbfe32",
    "mov     dword [rbp-0x2d0], 0x2",
    "mov     rax, qword [rbp-0x318]  {\"/lib64/ld-linux-x86-64.so.2\"}",
    "lea     rsi, [rel data_122e02]",
    "mov     dword [rbp-0x2d8], 0x0",
    "mov     ebx, dword [rbp-0x360]",
    "test    rax, rax",
    "cmovne  rsi, rax",
    "mov     eax, dword [rbp-0x39c]",
    "xor     r13d, r13d",
    "xor     r14d, r14d",
    "xor     r12d, r12d",
    "xor     eax, 0x1",
    "mov     qword [rbp-0x328], rsi  {\"x86-64.so.2\"}",
    "and     eax, 0x1",
    "mov     byte [rbp-0x361], al",
    "nop     dword [rax]",
    "mov     r11d, dword [rbp-0x2c4]",
    "test    r11d, r11d",
    "je      0xc129d",
    "mov     ecx, dword [rbp-0x2d8]",
    "mov     r15, r13",
    "test    ecx, ecx",
    "je      0xc02c0",
    "test    r12, r12",
    "je      0xbfeb5",
    "mov     rbx, qword [rel stderr]",
    "mov     rdi, qword [rbp-0x318]  {\"/lib64/ld-linux-x86-64.so.2\"}",
    "mov     rsi, qword [rbx]",
    "call    fputs",
    "mov     rdi, qword [rbx]",
    "call    fflush",
    "jmp     0xbfe32",
    "call    check_read_timeout",
    "call    __errno_location",
    "mov     dword [rax], 0x0",
    "mov     r13, rax",
    "mov     eax, dword [rbp-0x2b4]",
    "or      eax, dword [rbp-0x2b8]",
    "je      0xc02f9",
    "test    r13, r13",
    "je      0xc0790",
    "mov     eax, dword [rbp-0x2b4]",
    "or      eax, dword [rbp-0x2b8]",
    "je      0xbfedb",
    "movsxd  rax, dword [rbp-0x2cc]",
    "cmp     byte [r12+rax], 0x0",
    "jne     0xbfeb5",
    "lea     rax, [rel posixly_correct]",
    "cmp     dword [rbp-0x2d0], 0x2",
    "mov     eax, dword [rax]",
    "je      0xc04d0",
    "lea     rdx, [rbp-0x1d0]",
    "lea     rsi, [rbp-0x150]",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "lea     rdi, [rel data_11f28f]",
    "lea     r13, [rel data_122e02]",
    "call    find_variable",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xc02a6",
    "mov     r14, qword [rel stderr]",
    "mov     rdi, r13",
    "mov     rsi, qword [r14]",
    "call    fputs",
    "mov     rdi, qword [r14]",
    "call    fflush",
    "test    r12, r12",
    "je      0xc0620",
    "lea     rdx, [rbp-0x1d0]",
    "lea     rsi, [rbp-0x150]",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "cmp     byte [rel data_168f84], 0x0",
    "jne     0xc05f0",
    "test    eax, eax",
    "je      0xc07e0",
    "mov     edx, dword [rbp-0x2d0]",
    "lea     rsi, [rbp-0x2aa]",
    "test    edx, edx",
    "je      0xc0530",
    "mov     rdi, rax",
    "call    get_variable_value",
    "test    rax, rax",
    "mov     r15, rax",
    "cmovne  r13, rax",
    "jmp     0xc02a6",
    "lea     rax, [rel bash_readline_initialized]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "je      0xc0a90",
    "mov     eax, dword [rbp-0x2b8]",
    "or      eax, dword [rbp-0x2b4]",
    "jne     0xc0492",
    "mov     rdi, r12",
    "call    free",
    "mov     eax, dword [rbp-0x2b4]",
    "or      eax, dword [rbp-0x2b8]",
    "je      0xc0620",
    "mov     edx, dword [rbp-0x2d4]",
    "mov     eax, dword [rbp-0x2bc]",
    "lea     rsi, [rbp-0x2aa]",
    "mov     edi, dword [rbp-0x2dc]",
    "sub     edx, eax",
    "movsxd  rdx, edx",
    "call    zreadn",
    "mov     r14d, eax",
    "jmp     0xc0340",
    "mov     edi, dword [rbp-0x2dc]",
    "lea     rsi, [rbp-0x2aa]",
    "mov     edx, 0x1",
    "call    zreadintr",
    "mov     r14d, eax",
    "jmp     0xc0340",
    "mov     edi, dword [rbp-0x2dc]",
    "test    eax, eax",
    "je      0xc0820",
    "mov     edi, dword [rbp-0x2dc]",
    "mov     edx, 0x1",
    "test    eax, eax",
    "je      0xc0810",
    "call    sub_a65a0",
    "jmp     0xc0633",
    "lea     rax, [rel rl_attempted_completion_function]",
    "lea     rdi, [rel sub_a5e20]",
    "cmp     qword [rbp-0x2f0], 0x0",
    "mov     rdx, qword [rax]",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel rl_signal_event_hook]",
    "mov     qword [rel data_168f60], rdx",
    "mov     qword [rax], rdi",
    "je      0xc068f",
    "lea     rsi, [rbp-0x1d0]",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "movsxd  rax, dword [rbp-0x2cc]",
    "movsxd  rax, dword [rbp-0x2cc]",
    "lea     rdx, [rbp-0x1d0]",
    "lea     rsi, [rbp-0x150]",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "nop     ",
    "mov     eax, dword [rbp-0x2b4]",
    "or      eax, dword [rbp-0x2b8]",
    "je      0xc0361",
    "call    zreadc",
    "mov     r14d, eax",
    "jmp     0xc0340",
    "call    zreadcintr",
    "mov     r14d, eax",
    "jmp     0xc0340",
    "call    zread",
    "mov     r14d, eax",
    "jmp     0xc0340",
    "call    zreadintr",
    "mov     r14d, eax",
    "nop     ",
    "mov     rdi, qword [rbp-0x328]  {\"x86-64.so.2\"}",
    "call    readline",
    "mov     rdx, qword [rel data_168f60]",
    "mov     qword [rel data_168f60], 0x0",
    "mov     rdi, rax",
    "lea     rax, [rel rl_attempted_completion_function]",
    "mov     qword [rax], rdx",
    "lea     rax, [rel rl_signal_event_hook]",
    "mov     qword [rax], 0x0",
    "test    rdi, rdi",
    "je      0xc0aa0",
    "lea     rax, [rel rl_startup_hook]",
    "lea     rcx, [rel sub_c1c60]",
    "mov     rdx, qword [rax]",
    "mov     qword [rax], rcx",
    "mov     rax, qword [rbp-0x2f0]",
    "mov     qword [rel data_168f58], rdx",
    "mov     qword [rel data_168f50], rax",
    "lea     ecx, [rax+0x1]",
    "movzx   eax, byte [r12+rax]",
    "mov     dword [rbp-0x2cc], ecx",
    "mov     byte [rbp-0x2aa], al",
    "test    r14d, r14d",
    "jg      0xbff1b",
    "mov     qword [rbp-0x390], r12",
    "mov     r15d, dword [rbp-0x2c4]",
    "jmp     0xc001d",
    "mov     eax, 0x4",
    "mov     edx, dword [rbp-0x2a8]",
    "mov     ecx, dword [rbp-0x2c0]",
    "cmp     ebx, eax",
    "cmovge  eax, ebx",
    "add     eax, edx",
    "cmp     eax, ecx",
    "jge     0xc03e0",
    "call    check_read_timeout",
    "test    r14d, r14d",
    "jle     0xc1111",
    "lea     rsi, [rbp-0x1d0]",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "lea     rax, [rel rl_readline_state]",
    "mov     r15, rdi",
    "mov     rax, qword [rax]",
    "test    eax, 0x4000000",
    "jne     0xc10b8",
    "mov     qword [rbp-0x310], rdi",
    "call    strlen",
    "mov     rdi, qword [rbp-0x310]",
    "lea     r12d, [rax+0x2]",
    "mov     r15, rax",
    "movsxd  r12, r12d",
    "mov     rsi, r12",
    "call    realloc",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0xc1b90",
    "movsxd  rax, dword [rbp-0x2a8]",
    "mov     rdx, qword [rbp-0x298]",
    "mov     byte [rdx+rax], 0x0",
    "call    check_read_timeout",
    "mov     r12d, dword [rbp-0x2c4]",
    "test    r12d, r12d",
    "jne     0xc1100",
    "mov     rdi, qword [rbp-0x298]",
    "sub     dword [rbp-0x2c0], 0xffffff80",
    "movsxd  r15, dword [rbp-0x2c0]",
    "test    rdi, rdi",
    "je      0xc07d0",
    "mov     r11d, dword [rbp-0x2c8]",
    "movzx   eax, byte [rbp-0x2aa]",
    "test    r11d, r11d",
    "je      0xc03a0",
    "mov     qword [rbp-0x390], r12",
    "mov     ebx, dword [r13]",
    "je      0xc1127",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xc05c0",
    "lea     rax, [rel read_timeout]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xc10ce",
    "mov     r8d, dword [rbp-0x2b4]",
    "test    r8d, r8d",
    "jne     0xc15c8",
    "mov     qword [rbp-0x3b0], rax",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movzx   ecx, byte [rel data_168f84]",
    "movsxd  rax, r15d",
    "add     r15d, 0x1",
    "mov     r12, rdx",
    "movsxd  r15, r15d",
    "mov     byte [rdx+rax], cl",
    "mov     eax, dword [rbp-0x2b4]",
    "or      eax, dword [rbp-0x2b8]",
    "mov     byte [rdx+r15], 0x0",
    "jne     0xc0488",
    "mov     rdi, qword [rbp-0x390]",
    "call    free",
    "jmp     0xc0044",
    "test    r14d, r14d",
    "js      0xc1040",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rdx, rax",
    "jmp     0xc0409",
    "mov     rsi, r15",
    "call    realloc",
    "mov     rdx, rax",
    "cmp     al, 0x5c",
    "je      0xc0500",
    "mov     dword [rbp-0x2c8], 0x0",
    "cmp     al, 0xa",
    "je      0xc0550",
    "mov     eax, dword [rbp-0x2c4]",
    "mov     dword [rbp-0x3a4], eax",
    "cmp     ebx, 0x4",
    "je      0xc19b4",
    "mov     r13d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r13d, r13d",
    "jne     0xc037b",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xc05e0",
    "call    check_read_timeout",
    "mov     edi, dword [rbp-0x2b4]",
    "test    edi, edi",
    "je      0xc0ac8",
    "mov     dword [rax+0x18], 0x1",
    "lea     rsi, [rbp-0x1d0]",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "mov     r15d, dword [rbp-0x2c4]",
    "mov     qword [rbp-0x390], 0x0",
    "jmp     0xc001d",
    "mov     esi, dword [rbp-0x2b8]",
    "test    esi, esi",
    "jne     0xc10e1",
    "mov     dword [rbp-0x2cc], 0x0",
    "xor     eax, eax",
    "jmp     0xc04ac",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "cmp     edi, 0x4",
    "je      0xc1520",
    "mov     eax, dword [rbp-0x2b4]",
    "or      eax, dword [rbp-0x2b8]",
    "je      0xc0093",
    "test    rdx, rdx",
    "je      0xc1bb9",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x3b8], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "cmp     qword [rbp-0x298], rdx",
    "je      0xbff3b",
    "mov     edi, dword [rbp-0x2f4]",
    "test    edi, edi",
    "je      0xc09e8",
    "mov     edx, dword [rbp-0x2e0]",
    "test    edx, edx",
    "jne     0xc03be",
    "mov     r10d, dword [rbp-0x2f8]",
    "test    r10d, r10d",
    "jne     0xc0575",
    "movsxd  rdx, dword [rbp-0x2a8]",
    "lea     ecx, [rdx+0x1]",
    "mov     dword [rbp-0x2a8], ecx",
    "mov     rcx, qword [rbp-0x298]",
    "mov     byte [rcx+rdx], al",
    "call    check_read_timeout",
    "cmp     ebx, 0x1",
    "jle     0xbfff0",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xc1621",
    "mov     eax, dword [rel data_161190]",
    "test    eax, eax",
    "jne     0xc18f8",
    "call    check_read_timeout",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xc1b69",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0xc038c",
    "mov     eax, dword [rbp-0x2c4]",
    "mov     r13, r15",
    "mov     dword [rbp-0x2d8], eax",
    "jmp     0xbff1b",
    "lea     rsi, [rbp-0x1d0]",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "jmp     0xc0ad6",
    "mov     qword [rbp-0x390], r15",
    "mov     r15d, dword [rbp-0x2c4]",
    "jmp     0xc001d",
    "test    r12, r12",
    "jne     0xbfefd",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0xc1536",
    "call    strerror",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121808]  {\"read error: %d: %s\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     esi, dword [rbp-0x2dc]",
    "mov     rdx, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0xc0268",
    "mov     ebx, dword [rbp-0x2d4]",
    "test    ebx, ebx",
    "jle     0xc12c0",
    "lea     rax, [rel read_timeout]",
    "mov     rbx, qword [rax]",
    "test    rbx, rbx",
    "je      0xc007a",
    "cmp     qword [rel data_161a50], 0x0",
    "mov     qword [rbp-0x298], rdx",
    "je      0xc043c",
    "mov     dword [rbp-0x2c8], 0x1",
    "mov     ecx, dword [rbp-0x2f8]",
    "test    ecx, ecx",
    "jne     0xbfe80",
    "mov     esi, dword [rbp-0x2e0]",
    "test    esi, esi",
    "jne     0xbff64",
    "test    al, al",
    "jne     0xc0740",
    "cmp     al, byte [rel data_168f84]",
    "je      0xc0013",
    "lea     rax, [rel interactive]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x2c8], eax",
    "test    eax, eax",
    "je      0xbfe80",
    "mov     eax, dword [rbp-0x2a8]",
    "test    eax, eax",
    "jle     0xc0575",
    "mov     edi, dword [rbp-0x2d4]",
    "add     dword [rbp-0x2bc], 0x1",
    "mov     eax, dword [rbp-0x2bc]",
    "test    edi, edi",
    "jle     0xbfe80",
    "movzx   ecx, byte [rbp-0x2aa]",
    "lea     rdx, [rel is_basic_table]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "jne     0xbfff0",
    "mov     r15d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r15d, r15d",
    "jne     0xc115f",
    "mov     dword [r13], ebx",
    "mov     r15d, 0x1",
    "jmp     0xc001d",
    "mov     edi, dword [rel data_168720]",
    "lea     rdx, [rel data_168724]",
    "mov     esi, 0x1",
    "call    tcsetattr",
    "mov     dword [rel data_161190], 0x0",
    "jmp     0xc114e",
    "mov     edi, dword [rax]",
    "mov     eax, dword [rel data_161100]",
    "test    eax, eax",
    "jne     0xc19ca",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xc1b5f",
    "mov     r15d, dword [rbp-0x3a4]",
    "sub     r15d, 0xffffff80",
    "jmp     0xbf61b",
    "lea     rdi, [rel data_1217fb]  {\"read_builtin\"}",
    "call    sub_113ed0",
    "lea     rdi, [rel data_1217fb]  {\"read_builtin\"}",
    "call    sub_113ed0",
    "jmp     0xc0268",
    "cmp     byte [rel data_168f84], 0xa",
    "jne     0xc00a1",
    "mov     r11d, dword [rbp-0x2c4]",
    "test    r11d, r11d",
    "je      0xc11f0",
    "lea     rax, [rel read_timeout]",
    "pxor    xmm0, xmm0",
    "movaps  xmmword [rel data_168ed0], xmm0",
    "mov     qword [rax], 0x0",
    "mov     rdi, rbx",
    "call    shtimer_unset",
    "mov     rdi, rbx",
    "call    free",
    "lea     rcx, [rel uwcache]",
    "mov     eax, dword [rcx+0xc]",
    "test    eax, eax",
    "jle     0xc0a30",
    "call    sub_111e50",
    "mov     rdx, qword [rbp-0x298]",
    "call    check_read_timeout",
    "mov     r10d, dword [rbp-0x2c4]",
    "test    r10d, r10d",
    "je      0xc0290",
    "movsxd  rax, dword [rbp-0x2a8]",
    "add     dword [rbp-0x2fc], 0x1",
    "lea     edx, [rax+0x1]",
    "mov     dword [rbp-0x2a8], edx",
    "mov     rdx, qword [rbp-0x298]",
    "mov     byte [rdx+rax], 0x1",
    "jmp     0xbfe80",
    "cmp     byte [rel data_168f84], 0x5c",
    "jne     0xbff64",
    "cmp     al, 0x1",
    "jne     0xc074d",
    "cmp     byte [rel data_168f84], 0x0",
    "je      0xbff64",
    "mov     qword [rbp-0x390], r12",
    "xor     r15d, r15d",
    "mov     r9d, dword [rbp-0x344]",
    "test    r9d, r9d",
    "je      0xc05ae",
    "mov     eax, dword [rbp-0x2a8]",
    "sub     eax, 0x1",
    "mov     dword [rbp-0x2a8], eax",
    "cmp     edi, eax",
    "jg      0xbfe80",
    "movsxd  rax, dword [rbp-0x2a8]",
    "mov     rdx, qword [rbp-0x298]",
    "mov     byte [rdx+rax], 0x0",
    "mov     eax, dword [rbp-0x2c4]",
    "test    eax, eax",
    "jne     0xc0970",
    "jmp     0xc05d2",
    "jmp     0xc05d2",
    "call    throw_to_top_level",
    "jmp     0xc19db",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xc1b4a",
    "mov     r8d, dword [rbp-0x348]",
    "test    r8d, r8d",
    "je      0xc0118",
    "mov     r9d, dword [rbp-0x344]",
    "test    r9d, r9d",
    "je      0xc0118",
    "mov     r10d, dword [rbp-0x2d4]",
    "test    r10d, r10d",
    "jle     0xc00ca",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x378], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x378]",
    "test    rax, rax",
    "mov     rcx, rax",
    "jne     0xc045d",
    "sub     eax, 0x1",
    "mov     rsi, qword [rcx]",
    "mov     dword [rcx+0xc], eax",
    "cdqe    ",
    "mov     rcx, qword [rsi+rax*8]",
    "jmp     0xc0013",
    "cmp     byte [rbp-0x361], 0x0",
    "je      0xbff64",
    "test    byte [rbp-0x2f8], 0x1",
    "je      0xc0762",
    "jmp     0xbfe80",
    "mov     dword [rbp-0x2c8], 0x0",
    "jmp     0xbfe80",
    "mov     r8d, dword [rbp-0x2f4]",
    "test    r8d, r8d",
    "jne     0xc05ae",
    "movsxd  rcx, dword [rbp-0x2cc]",
    "movsxd  rsi, ebx",
    "xor     edx, edx",
    "lea     rdi, [r12+rcx-0x1]",
    "mov     qword [rbp-0x370], rcx",
    "call    __mbrlen",
    "mov     r15, rax",
    "cmp     eax, 0x1",
    "jle     0xbfff0",
    "lea     rdx, [rel locale_utf8locale]",
    "movzx   eax, byte [rbp-0x2aa]",
    "mov     r15d, dword [rdx]",
    "test    r15d, r15d",
    "je      0xc0830",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x3a4], eax",
    "test    eax, eax",
    "jne     0xc1133",
    "lea     rax, [rel interrupt_state]",
    "mov     dword [rbp-0x3a4], 0x2",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xc1133",
    "mov     edi, dword [rbp-0x2d0]",
    "test    edi, edi",
    "je      0xc130c",
    "jmp     0xc1200",
    "mov     edi, dword [rel data_168720]",
    "lea     rdx, [rel data_168724]",
    "mov     esi, 0x1",
    "call    tcsetattr",
    "mov     dword [rel data_161190], 0x0",
    "jmp     0xc0118",
    "cmp     byte [rel data_168f84], 0xa",
    "je      0xc0118",
    "lea     rax, [rel rl_num_chars_to_read]",
    "mov     dword [rax], 0x0",
    "mov     rax, qword [rel data_161a50]",
    "mov     qword [rcx+0x10], rdx",
    "mov     qword [rcx], rax",
    "lea     rax, [rel xfree]",
    "mov     qword [rel data_161a50], rcx",
    "mov     qword [rcx+0x8], rax",
    "jmp     0xbff3b",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     r12, rax",
    "call    sub_a7f00",
    "{ Does not return }",
    "cmp     al, 0x7f",
    "jne     0xbff64",
    "movsxd  rax, dword [rbp-0x2a8]",
    "add     dword [rbp-0x2fc], 0x1",
    "lea     edx, [rax+0x1]",
    "mov     dword [rbp-0x2a8], edx",
    "mov     rdx, qword [rbp-0x298]",
    "mov     byte [rdx+rax], 0x1",
    "movzx   eax, byte [rbp-0x2aa]",
    "jmp     0xbff64",
    "mov     dword [rbp-0x2d8], 0x1",
    "mov     rcx, qword [rbp-0x370]",
    "movsxd  rdi, dword [rbp-0x2a8]",
    "lea     rdx, [rax-0x1]",
    "add     rdi, qword [rbp-0x298]",
    "lea     rsi, [r12+rcx]",
    "call    memcpy",
    "mov     eax, dword [rbp-0x2a8]",
    "lea     eax, [rax+r15-0x1]",
    "mov     dword [rbp-0x2a8], eax",
    "mov     eax, dword [rbp-0x2cc]",
    "lea     eax, [rax+r15-0x1]",
    "mov     dword [rbp-0x2cc], eax",
    "jmp     0xbfff0",
    "mov     esi, dword [rbp-0x2a8]",
    "mov     rcx, qword [rbp-0x298]",
    "lea     rdi, [rbp-0x278]",
    "mov     qword [rbp-0x278], 0x0",
    "mov     qword [rbp-0x308], rdi",
    "mov     r15d, 0x1",
    "mov     dword [rbp-0x300], esi",
    "mov     qword [rbp-0x338], rcx",
    "mov     byte [rbp-0x270], al",
    "mov     qword [rbp-0x340], r13",
    "test    al, al",
    "js      0xc0830",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xc114e",
    "jmp     0xc1a07",
    "lea     rax, [rel trapped_signal_received]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x3a4], eax",
    "jmp     0xc1133",
    "mov     rsi, qword [rel data_168ee8]",
    "sub     rsi, qword [rel data_168ee0]",
    "test    rsi, rsi",
    "jg      0xc16e6",
    "mov     rbx, qword [rbp-0x388]",
    "test    rbx, rbx",
    "je      0xc013c",
    "lea     rax, [rel _rl_keymap]",
    "mov     edx, dword [rel data_168f80]",
    "mov     rax, qword [rax]",
    "mov     byte [rax+0xd0], dl",
    "mov     rdx, qword [rel data_168f78]",
    "mov     qword [rax+0xd8], rdx",
    "movzx   edx, byte [rel data_168f70]",
    "shl     rdx, 0x4",
    "add     rax, rdx",
    "mov     edx, dword [rel data_168f74]",
    "mov     byte [rax], dl",
    "mov     rdx, qword [rel data_168f68]",
    "mov     qword [rax+0x8], rdx",
    "movsxd  rcx, dword [rbp-0x300]",
    "mov     rsi, qword [rbp-0x338]",
    "mov     edi, r15d",
    "mov     eax, 0x1",
    "mov     r13, qword [rbp-0x340]",
    "add     rsi, rcx",
    "mov     rcx, rsi",
    "cmp     r15d, 0x1",
    "je      0xc093d",
    "cmp     dword [rbp-0x2d0], 0x2",
    "mov     qword [rbp-0x278], r13",
    "lea     rsi, [rbp-0x2a9]",
    "je      0xc0a78",
    "nop     dword [rax]",
    "mov     edi, dword [rbp-0x2dc]",
    "neg     rsi",
    "mov     edx, 0x1",
    "call    lseek",
    "cmp     rax, 0xffffffffffffffff",
    "jne     0xc1323",
    "mov     qword [rel data_168ee0], 0x0",
    "mov     qword [rel data_168ee8], 0x0",
    "jmp     0xc0126",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0xc0152",
    "lea     rax, [rel rl_instream]",
    "mov     qword [rax], rbx",
    "mov     eax, dword [rbp-0x2a8]",
    "lea     eax, [rax+rdi-0x1]",
    "mov     dword [rbp-0x2a8], eax",
    "jmp     0xbfff0",
    "nop     dword [rax]",
    "mov     edi, dword [rbp-0x2dc]",
    "mov     edx, 0x1",
    "call    zreadn",
    "jmp     0xc08db",
    "mov     r13d, dword [rbp-0x2d0]",
    "test    r13d, r13d",
    "je      0xc0958",
    "jmp     0xc0126",
    "lea     rdi, [rel data_1217fb]  {\"read_builtin\"}",
    "call    sub_113da0",
    "movzx   edx, byte [rbp+rax-0x270]",
    "mov     byte [rcx+rax-0x1], dl",
    "add     rax, 0x1",
    "cmp     rax, r15",
    "jne     0xc0928",
    "test    eax, eax",
    "jle     0xc08f8",
    "mov     edi, dword [rbp-0x2dc]",
    "call    zreadc",
    "jmp     0xc08db",
    "mov     edi, dword [rbp-0x2dc]",
    "mov     edx, 0x1",
    "call    zread",
    "movzx   eax, byte [rbp-0x2a9]",
    "mov     byte [rbp+r15-0x270], al",
    "add     r15, 0x1",
    "jmp     0xc0876",
    "mov     rcx, qword [rbp-0x308]",
    "lea     rsi, [rbp-0x270]",
    "mov     rdx, r15",
    "lea     rdi, [rbp-0x2a4]",
    "mov     r13, qword [rbp-0x278]",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffe",
    "jne     0xc08f8"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x92cd0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     qword [rbp-0x40], rsi",
    "test    rdi, rdi",
    "je      0x92db8",
    "mov     rax, qword [rbp-0x40]",
    "test    rax, rax",
    "je      0x92dc7",
    "mov     rax, qword [rdi+0x8]",
    "mov     r13, rdi",
    "test    rax, rax",
    "je      0x92db8",
    "xor     r12d, r12d",
    "jmp     0x92da0",
    "mov     dword [rax], 0x0",
    "lea     ebx, [rax+0x1]",
    "movsxd  rbx, ebx",
    "shl     rbx, 0x3",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x92dfc",
    "add     rsp, 0x18",
    "mov     rax, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r13, qword [r13+0x10]",
    "mov     r14, qword [r13+0x10]",
    "cmp     r13, r14",
    "je      0x92dd0",
    "mov     rax, r12",
    "xor     ebx, ebx",
    "jmp     0x92d8e",
    "xor     ebx, ebx",
    "nop     dword [rax+rax]",
    "mov     qword [rax], 0x0",
    "mov     rax, qword [rbp-0x40]",
    "test    rax, rax",
    "je      0x92da0",
    "mov     r14, qword [r14+0x10]",
    "cmp     r13, r14",
    "jne     0x92d38",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x38], rsi",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rsi, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0x92dd7",
    "mov     dword [rax], ebx",
    "mov     rsi, qword [r14+0x8]",
    "test    rsi, rsi",
    "je      0x92d7e",
    "movsxd  rax, ebx",
    "lea     rax, [r12+rax*8]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "call    dcgettext",
    "mov     rdx, r15",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "lea     eax, [rbx+0x1]",
    "mov     rcx, r15",
    "mov     rdx, r15",
    "mov     dword [rbp-0x38], eax",
    "call    __memcpy_chk",
    "mov     qword [r12+rbx*8], rax",
    "movsxd  rbx, dword [rbp-0x38]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
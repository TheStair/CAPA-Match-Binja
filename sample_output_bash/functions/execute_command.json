{
  "address": "0x4dba0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "mov     r13, rdi",
    "mov     edi, 0x10",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     rax, [rel current_fds_to_close]",
    "mov     qword [rax], 0x0",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x4dd50",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     dword [rbx], 0x20",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x4dd38",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "pxor    xmm0, xmm0",
    "mov     qword [rbx+0x8], r12",
    "movups  xmmword [r12], xmm0",
    "movups  xmmword [r12+0x10], xmm0",
    "lea     r12, [rel data_120e00[0xc]]  {\"execute-command\"}",
    "mov     rdi, r12",
    "call    begin_unwind_frame",
    "lea     rdx, [rel uwcache]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0x4dd08",
    "mov     edi, 0x20",
    "call    malloc",
    "test    rax, rax",
    "jne     0x4dc37",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "mov     rdx, qword [rel data_161a50]",
    "mov     qword [rax+0x10], rbx",
    "mov     rdi, r13",
    "xor     esi, esi",
    "mov     r8, rbx",
    "mov     ecx, 0xffffffff",
    "mov     qword [rax], rdx",
    "lea     rdx, [rel dispose_fd_bitmap]",
    "mov     qword [rel data_161a50], rax",
    "mov     qword [rax+0x8], rdx",
    "mov     edx, 0xffffffff",
    "call    execute_command_internal",
    "mov     rdi, qword [rbx+0x8]",
    "mov     r13d, eax",
    "test    rdi, rdi",
    "je      0x4dc7f",
    "jmp     0x31e41",
    "mov     rdi, rbx",
    "call    free",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0x4dc99",
    "call    free",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel variable_context]",
    "lea     rdx, [rel executing_list]",
    "mov     eax, dword [rax]",
    "or      eax, dword [rdx]",
    "je      0x4dd20",
    "mov     rdi, r12",
    "call    sub_113da0",
    "mov     edx, dword [rel data_161064]",
    "test    edx, edx",
    "je      0x4dcad",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x4dcd8",
    "call    sub_875b0",
    "jmp     0x4dcad",
    "mov     edi, dword [rax]",
    "mov     eax, dword [rel data_161100]",
    "test    eax, eax",
    "jne     0x4dcba",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4dcf0",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "add     rsp, 0x8",
    "mov     eax, r13d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "add     rsp, 0x8",
    "mov     eax, r13d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    "
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xb2ee0",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "encrypt data using Curve25519/a423aa5d0923438c8eac88d5abe4fcd5",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/85d53756af1244948e9b515ea3abe5ce",
    "contain loop",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249",
    "hide graphical window from taskbar/3804d9f76e4f47c8b3a7ed608bc3a556",
    "check for trap flag exception/457e23e248b947a19120dac4e8cc1687",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/dcaeaf6452d04e9abeab247e18cee1ca"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "xor     r15d, r15d",
    "push    r14",
    "lea     r14, [rel jump_table_13718c]",
    "push    r13",
    "lea     r13, [rel data_12130f]  {\"+acfgilnprtuxAFGI\"}",
    "push    r12",
    "lea     r12, [rel jump_table_1370ac]",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x98",
    "mov     dword [rbp-0x48], esi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rel loptend]",
    "mov     dword [rbp-0x40], 0x0",
    "mov     dword [rbp-0x3c], 0x0",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rel data_168d30], 0x0",
    "mov     qword [rax], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     dword [rbp-0x68], 0x0",
    "mov     dword [rbp-0x90], 0x0",
    "mov     dword [rbp-0x44], 0x0",
    "mov     dword [rbp-0x64], 0x0",
    "nop     dword [rax+rax]",
    "lea     rax, [rel loptend]",
    "mov     rax, qword [rax]",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0xb33c8",
    "lea     rdx, [rel list_opttype]",
    "cmp     dword [rdx], 0x2b",
    "je      0xb2fc8",
    "mov     ecx, dword [rbp-0x48]",
    "test    ecx, ecx",
    "jne     0xb42f1",
    "mov     eax, dword [rbp-0x3c]",
    "mov     r11d, eax",
    "and     r11d, 0x8",
    "test    r15d, r15d",
    "jne     0xb3fe0",
    "cmp     eax, 0xffffff9d",
    "je      0xb3240",
    "cmp     eax, 0xffffff9d",
    "je      0xb3240",
    "mov     esi, dword [rbp-0x64]",
    "xor     edi, edi",
    "call    show_local_var_attributes",
    "jmp     0xb33f5",
    "mov     esi, dword [rbp-0x3c]",
    "test    r15d, r15d",
    "je      0xb4089",
    "xor     r13d, r13d",
    "lea     r12, [rel data_11feba]  {\"%s: not found\"}",
    "mov     r14, rcx",
    "mov     ebx, r11d",
    "jmp     0xb4009",
    "mov     dword [rbp-0x9c], 0x0",
    "test    r11d, r11d",
    "je      0xb3088",
    "call    builtin_help",
    "jmp     0xb2fed",
    "sub     eax, 0x41",
    "cmp     eax, 0x37",
    "ja      0xb2fe8",
    "sub     eax, 0x41",
    "cmp     eax, 0x37",
    "ja      0xb2fe8",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xb4ba4",
    "test    esi, esi",
    "jne     0xb33eb",
    "test    esi, 0xfffffff7",
    "je      0xb4508",
    "mov     rax, qword [r14+0x8]",
    "mov     esi, dword [rbp-0x64]",
    "mov     rdi, qword [rax]",
    "test    ebx, ebx",
    "jne     0xb4050",
    "mov     dword [rbp-0xa0], r11d",
    "mov     r14, rcx",
    "nop     word [rax+rax]",
    "mov     r11d, eax",
    "and     r11d, 0x854",
    "jne     0xb4160",
    "mov     eax, 0x102",
    "{Case 0x1-0x4, 0x7, 0x9-0x1f, 0x21, 0x23-0x24, 0x27, 0x29-0x2a, 0x2c, 0x2e, 0x30, 0x32, 0x35-0x36}",
    "call    builtin_usage",
    "movsxd  rax, dword [r14+rax*4]",
    "add     rax, r14",
    "jmp     rax",
    "movsxd  rax, dword [r12+rax*4]",
    "add     rax, r12",
    "jmp     rax",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "xor     edi, edi",
    "jmp     0xb4073",
    "mov     edx, dword [rbp-0x64]",
    "xor     edi, edi",
    "call    set_or_show_attributes",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xb4ba4",
    "xor     edi, edi",
    "test    esi, esi",
    "mov     esi, dword [rbp-0x64]",
    "sete    dil",
    "call    show_all_var_attributes",
    "jmp     0xb33f5",
    "call    show_func_attributes",
    "jmp     0xb3ffd",
    "mov     edx, dword [rbp-0x48]",
    "test    edx, edx",
    "jne     0xb3ff8",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "mov     r15, r12",
    "call    __strcpy_chk",
    "mov     rax, qword [r14+0x8]",
    "mov     ebx, dword [rax+0x8]",
    "lea     rax, [rel assoc_expand_once]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xb3640",
    "lea     rbx, [rel data_11f16a]",
    "test    ah, 0x8",
    "jne     0xb418c",
    "add     rsp, 0x98",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "{Case 0x2f}",
    "mov     rsi, r13",
    "mov     rdi, rbx",
    "add     r15d, 0x1",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "jne     0xb2f9c",
    "{Case 0x6, 0x26}",
    "lea     rdx, [rbp-0x40]",
    "lea     rax, [rbp-0x3c]",
    "{Case 0x8}",
    "mov     dword [rbp-0x68], 0x4",
    "jmp     0xb2f88",
    "{Case 0x22}",
    "lea     rdx, [rbp-0x40]",
    "lea     rax, [rbp-0x3c]",
    "jmp     0xb3397",
    "{Case 0x33}",
    "lea     rax, [rbp-0x40]",
    "jmp     0xb32f4",
    "{Case 0x34}",
    "lea     rdx, [rbp-0x40]",
    "lea     rax, [rbp-0x3c]",
    "jmp     0xb3307",
    "{Case 0x5}",
    "lea     rax, [rbp-0x40]",
    "jmp     0xb32c4",
    "{Case 0x20}",
    "lea     rax, [rbp-0x40]",
    "jmp     0xb3384",
    "{Case 0x2d}",
    "lea     rax, [rbp-0x40]",
    "jmp     0xb3294",
    "{Case 0x31}",
    "lea     rax, [rbp-0x40]",
    "jmp     0xb3284",
    "{Case 0x25}",
    "lea     rax, [rbp-0x40]",
    "jmp     0xb33bc",
    "{Case 0x28}",
    "lea     rax, [rbp-0x40]",
    "jmp     0xb334c",
    "{Case 0x2b}",
    "lea     rdx, [rbp-0x40]",
    "lea     rax, [rbp-0x3c]",
    "jmp     0xb335f",
    "{Case 0x0}",
    "lea     rax, [rbp-0x40]",
    "jmp     0xb32b4",
    "{Case 0x37}",
    "lea     rax, [rbp-0x40]",
    "jmp     0xb332c",
    "{Case 0x31}",
    "lea     rax, [rbp-0x3c]",
    "{Case 0x2d}",
    "lea     rax, [rbp-0x3c]",
    "{Case 0x26}",
    "lea     rax, [rbp-0x3c]",
    "mov     rdx, rax",
    "jmp     0xb3258",
    "{Case 0x0}",
    "lea     rax, [rbp-0x3c]",
    "{Case 0x5}",
    "lea     rax, [rbp-0x3c]",
    "{Case 0x6}",
    "mov     dword [rbp-0x90], 0x1",
    "mov     dword [rbp-0x44], 0x1",
    "jmp     0xb2f88",
    "{Case 0x33}",
    "lea     rax, [rbp-0x3c]",
    "{Case 0x34}",
    "lea     rax, [rbp-0x3c]",
    "mov     rdx, rax",
    "{Case 0x37}",
    "lea     rax, [rbp-0x3c]",
    "{Case 0x28}",
    "lea     rax, [rbp-0x3c]",
    "{Case 0x2b}",
    "lea     rax, [rbp-0x3c]",
    "mov     rdx, rax",
    "{Case 0x20}",
    "lea     rax, [rbp-0x3c]",
    "{Case 0x22}",
    "lea     rax, [rbp-0x3c]",
    "mov     rdx, rax",
    "{Case 0x25}",
    "lea     rax, [rbp-0x3c]",
    "add     rsp, 0x98",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sh_chkwrite",
    "add     rsp, 0x98",
    "xor     edi, edi",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     set_builtin",
    "test    eax, eax",
    "jne     0xb4027",
    "call    show_localname_attributes",
    "call    show_name_attributes",
    "test    eax, eax",
    "je      0xb4001",
    "xor     r13d, r13d",
    "xor     esi, esi",
    "jmp     0xb30fe",
    "mov     eax, ebx",
    "and     eax, 0x4",
    "cmp     eax, 0x1",
    "sbb     r13d, r13d",
    "add     r13d, 0x1",
    "neg     eax",
    "sbb     esi, esi",
    "and     esi, 0x2",
    "lea     rsi, [rel data_11f222]  {\"%s: invalid option\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "lea     rbx, [rel data_121306]",
    "test    al, 0x10",
    "jne     0xb418c",
    "nop     dword [rax+rax]",
    "mov     rsi, r13",
    "mov     rdi, rbx",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xb3040",
    "or      dword [rdx], 0x400",
    "cmp     rdx, rax",
    "jne     0xb2f88",
    "or      dword [rax], 0x80",
    "jmp     0xb2f88",
    "or      dword [rdx], 0x100",
    "cmp     rdx, rax",
    "jne     0xb2f88",
    "add     dword [rbp-0x64], 0x1",
    "or      dword [rax], 0x8",
    "jmp     0xb2f88",
    "or      dword [rax], 0x4",
    "jmp     0xb2f88",
    "or      dword [rax], 0x800",
    "jmp     0xb2f88",
    "or      dword [rax], 0x2",
    "jmp     0xb2f88",
    "or      dword [rax], 0x8",
    "jmp     0xb2f88",
    "or      dword [rax], 0x10",
    "jmp     0xb2f88",
    "or      dword [rdx], 0x200",
    "cmp     rdx, rax",
    "jne     0xb2f88",
    "or      dword [rax], 0x40",
    "jmp     0xb2f88",
    "or      dword [rax], 0x1",
    "lea     rax, [rel array_needs_making]",
    "mov     dword [rax], 0x1",
    "jmp     0xb2f88",
    "cmp     rdx, rax",
    "mov     eax, 0x1",
    "cmovne  eax, dword [rbp-0x44]",
    "mov     dword [rbp-0x44], eax",
    "jmp     0xb2f88",
    "or      dword [rbp-0x40], 0x600",
    "jmp     0xb2f88",
    "or      dword [rbp-0x40], 0x500",
    "jmp     0xb2f88",
    "or      dword [rbp-0x40], 0x300",
    "jmp     0xb2f88",
    "mov     rax, qword [r14+0x8]",
    "mov     edx, 0x5",
    "mov     rsi, r12",
    "xor     edi, edi",
    "add     r13d, 0x1",
    "mov     r15, qword [rax]",
    "call    dcgettext",
    "mov     rdi, rax",
    "mov     rsi, r15",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xb4001",
    "mov     r14, qword [r14]",
    "test    r14, r14",
    "je      0xb4057",
    "mov     rdi, r15",
    "call    assignment",
    "mov     r12d, eax",
    "mov     eax, dword [rbp-0x48]",
    "test    eax, eax",
    "je      0xb3130",
    "mov     eax, dword [rbp-0x3c]",
    "mov     dword [rbp-0x50], eax",
    "and     eax, 0x8",
    "mov     dword [rbp-0x60], eax",
    "test    r12d, r12d",
    "je      0xb3650",
    "lea     rax, [rel variable_context]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xb3130",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xb4ba4",
    "test    al, 0x40",
    "jne     0xb46ef",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xb4ba4",
    "mov     eax, dword [rbp-0x60]",
    "test    eax, eax",
    "jne     0xb3670",
    "test    eax, eax",
    "jne     0xb425b",
    "cmp     byte [r15], 0x2d",
    "je      0xb3f18",
    "lea     rbx, [rel data_121309]",
    "jmp     0xb418c",
    "test    al, 0x4",
    "lea     rax, [rel data_12130c]",
    "cmovne  rbx, rax",
    "xor     edi, edi",
    "test    r13d, r13d",
    "setne   dil",
    "lea     rax, [rel posixly_correct]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xb368d",
    "lea     rax, [rel data_122e02]",
    "mov     qword [rbp-0x58], rax",
    "jmp     0xb316c",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133e00]  {\"cannot use `-f' to make function\u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     rdi, r15",
    "call    free",
    "jmp     0xb41ac",
    "movsxd  rax, r12d",
    "mov     byte [r15+rax], 0x0",
    "lea     rcx, [r15+rax+0x1]",
    "lea     rax, [r15+rax-0x1]",
    "cmp     byte [rax], 0x2b",
    "mov     qword [rbp-0x58], rcx",
    "je      0xb3f78",
    "cmp     byte [r15+0x1], 0x0",
    "jne     0xb3130",
    "nop     word [rax+rax]",
    "lea     rax, [rel shell_functions]",
    "xor     edx, edx",
    "mov     rdi, r15",
    "mov     rbx, qword [rax]",
    "mov     rsi, rbx",
    "call    hash_search",
    "test    rax, rax",
    "je      0xb3f68",
    "mov     rdi, r15",
    "call    legal_identifier",
    "test    eax, eax",
    "je      0xb37c3",
    "mov     eax, dword [rbp-0x50]",
    "and     eax, 0x800",
    "mov     dword [rbp-0x8c], eax",
    "je      0xb3490",
    "mov     eax, 0x1",
    "jmp     0xb2ff2",
    "mov     byte [rax], 0x0",
    "mov     dword [rbp-0x60], 0x1",
    "jmp     0xb316c",
    "lea     rdi, [rel data_121854]  {\"-\"}",
    "xor     esi, esi",
    "call    make_local_variable",
    "mov     rdi, qword [rax+0x8]",
    "mov     rbx, rax",
    "test    rdi, rdi",
    "je      0xb3f42",
    "add     dword [rbp-0xa0], 0x1",
    "jmp     0xb36f0",
    "mov     qword [rel data_1619d8], rbx",
    "mov     rbx, qword [rax+0x10]",
    "test    rbx, rbx",
    "je      0xb3f68",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "mov     dword [rbp-0xa8], ebx",
    "mov     dword [rbp-0xac], r13d",
    "mov     qword [rbp-0x98], r14",
    "mov     r14d, r12d",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rdi, r15",
    "call    tokenize_array_reference",
    "test    eax, eax",
    "jne     0xb3e90",
    "call    get_current_options",
    "or      dword [rbx+0x28], 0x1000",
    "mov     rdi, r15",
    "mov     qword [rbx+0x8], rax",
    "call    free",
    "mov     r14, qword [r14]",
    "jmp     0xb36fb",
    "call    free",
    "mov     rdi, r15",
    "call    free",
    "mov     r14, qword [r14]",
    "mov     edx, dword [rbx+0x28]",
    "mov     eax, dword [rbp-0x40]",
    "test    dl, 0x2",
    "je      0xb36d4",
    "test    r14, r14",
    "jne     0xb3098",
    "mov     dword [rbp-0x78], 0x0",
    "mov     dword [rbp-0x70], 0x0",
    "jmp     0xb34e0",
    "test    r14d, r14d",
    "je      0xb37a8",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133e28]  {\"%s: reference variable cannot be\u2026\"}",
    "mov     rsi, qword [rbp-0x58]",
    "xor     edx, edx",
    "mov     rdi, r15",
    "call    check_selfref",
    "test    eax, eax",
    "je      0xb31e0",
    "mov     rax, qword [r14+0x8]",
    "mov     r13, qword [rax]",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xb4bfa",
    "mov     edx, dword [rbp-0x9c]",
    "mov     r11d, dword [rbp-0xa0]",
    "mov     eax, 0x104",
    "test    edx, edx",
    "jne     0xb2ff2",
    "cmp     dword [rbp-0x50], 0x8",
    "je      0xb3e10",
    "test    al, 0x2",
    "jne     0xb3f90",
    "mov     rdi, r15",
    "call    legal_identifier",
    "test    eax, eax",
    "je      0xb37bc",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rdi, r15",
    "call    tokenize_array_reference",
    "test    eax, eax",
    "jne     0xb34c9",
    "xor     eax, eax",
    "test    r14d, r14d",
    "mov     byte [r12], 0x0",
    "setne   al",
    "mov     dword [rbp-0x70], 0x1",
    "mov     dword [rbp-0x78], eax",
    "mov     rax, qword [rbp-0x58]",
    "cmp     byte [rax], 0x0",
    "je      0xb3490",
    "lea     rax, [rel variable_context]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_132d70]  {\"%s: nameref variable self refere\u2026\"}",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0xb37cf",
    "xor     eax, eax",
    "test    r11d, r11d",
    "setne   al",
    "jmp     0xb2ff2",
    "test    eax, eax",
    "jne     0xb36de",
    "mov     ecx, dword [rbp-0x50]",
    "and     eax, 0xfffffff7",
    "mov     dword [rbp-0x40], eax",
    "not     eax",
    "or      edx, ecx",
    "and     edx, eax",
    "mov     dword [rbx+0x28], edx",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fd90]  {\"%s: readonly function\"}",
    "jmp     0xb3e9c",
    "mov     r14, qword [rbp-0x98]",
    "lea     rax, [rel variable_context]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "je      0xb3730",
    "test    byte [rbp-0x60], 0x1",
    "jne     0xb3490",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, r15",
    "mov     rdi, rax",
    "lea     rsi, [rel data_11fe5f]  {\"%s: circular name reference\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, r15",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_warning",
    "mov     r13d, dword [rbp-0x64]",
    "test    r13d, r13d",
    "je      0xb41b6",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, r15",
    "mov     rdi, rax",
    "mov     edx, dword [rbp-0x8c]",
    "test    edx, edx",
    "je      0xb3800",
    "mov     r9d, dword [rbp-0x44]",
    "test    r9d, r9d",
    "je      0xb3b00",
    "mov     rdi, rax",
    "call    legal_identifier",
    "test    eax, eax",
    "jne     0xb3490",
    "mov     rsi, qword [rbx+0x8]",
    "mov     rdi, r15",
    "mov     edx, 0x3",
    "call    named_function_string",
    "mov     rdi, rax",
    "jmp     0xb3e3b",
    "lea     rax, [rel debugging_mode]",
    "mov     rdi, qword [rbx]",
    "mov     r12d, dword [rax]",
    "test    r12d, r12d",
    "jne     0xb4300",
    "mov     r13d, dword [rbp-0x40]",
    "test    r13d, 0x800",
    "je      0xb3fa8",
    "mov     eax, dword [rbp-0x44]",
    "test    eax, eax",
    "jne     0xb3590",
    "mov     eax, dword [rbp-0x40]",
    "mov     rdi, r15",
    "mov     ebx, dword [rbp-0xa8]",
    "mov     qword [rbp-0x80], r12",
    "mov     r13d, dword [rbp-0xac]",
    "mov     r12d, r14d",
    "mov     r14, qword [rbp-0x98]",
    "mov     dword [rbp-0x88], eax",
    "call    find_variable",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0xb42a2",
    "mov     ecx, dword [rbp-0x8c]",
    "test    ecx, ecx",
    "jne     0xb3bd0",
    "mov     rdi, qword [rbp-0x58]",
    "xor     edx, edx",
    "xor     esi, esi",
    "call    tokenize_array_reference",
    "test    eax, eax",
    "jne     0xb3490",
    "call    puts",
    "mov     edi, dword [rbp-0xa0]",
    "call    sh_chkwrite",
    "mov     dword [rbp-0xa0], eax",
    "jmp     0xb36f0",
    "lea     rax, [rel shell_function_defs]",
    "xor     edx, edx",
    "mov     r12, qword [rax]",
    "mov     rsi, r12",
    "call    hash_search",
    "test    rax, rax",
    "je      0xb46a1",
    "test    r14d, r14d",
    "je      0xb3fb8",
    "mov     eax, dword [rbp-0x44]",
    "test    eax, eax",
    "jne     0xb38b0",
    "mov     rdi, r15",
    "call    find_global_variable_noref",
    "test    rax, rax",
    "je      0xb35b0",
    "lea     rax, [rel expanding_redir]",
    "xor     esi, esi",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xb3770",
    "mov     rdi, r15",
    "mov     esi, 0x2",
    "call    nameref_transform_name",
    "mov     rdi, rax",
    "jmp     0xb3b4f",
    "mov     eax, dword [rbp-0x88]",
    "mov     ecx, dword [rbp-0x50]",
    "or      eax, ecx",
    "test    ah, 0x8",
    "je      0xb42b7",
    "mov     rdi, r15",
    "call    find_global_variable_noref",
    "test    rax, rax",
    "je      0xb35b0",
    "mov     r13d, dword [rbp-0x40]",
    "test    r13d, 0x800",
    "jne     0xb38b0",
    "lea     rsi, [rel data_133e58]  {\"`%s': invalid variable name for \u2026\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdi, rax",
    "jmp     0xb37dc",
    "mov     rdx, qword [rbx]",
    "mov     rax, qword [rax+0x10]",
    "mov     rdx, qword [rbx]",
    "mov     qword [rel data_1619d8], r12",
    "test    rax, rax",
    "je      0xb46a4",
    "mov     r9d, dword [rbp-0x44]",
    "test    r9d, r9d",
    "jne     0xb35b0",
    "mov     eax, dword [rbp-0x78]",
    "test    eax, eax",
    "jne     0xb4110",
    "xor     esi, esi",
    "mov     rdi, r15",
    "call    find_global_variable_last_nameref",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xb35b0",
    "xor     esi, esi",
    "mov     rdi, r15",
    "call    find_variable_last_nameref",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xb3790",
    "xor     esi, esi",
    "mov     rdi, r15",
    "call    find_global_variable_last_nameref",
    "mov     rbx, rax",
    "test    byte [rax+0x29 {Elf64_Header::section_header_offset+1.b}], 0x8",
    "jne     0xb3beb",
    "mov     rdi, r15",
    "call    sub_502c0",
    "test    rax, rax",
    "je      0xb3790",
    "lea     rax, [rel assigning_in_environment]",
    "lea     rdx, [rel executing_builtin]",
    "xor     esi, esi",
    "mov     eax, dword [rax]",
    "or      eax, dword [rdx]",
    "setne   sil",
    "test    byte [rbp-0x50], 0x40",
    "jne     0xb4248",
    "mov     esi, 0x1",
    "mov     rdi, r15",
    "mov     qword [rbp-0x98], rdx",
    "call    find_variable_last_nameref",
    "mov     rdx, qword [rbp-0x98]",
    "test    rax, rax",
    "je      0xb42e9",
    "mov     rdi, r15",
    "test    byte [rax+0x29 {Elf64_Header::section_header_offset+1.b}], 0x8",
    "je      0xb35b0",
    "test    r14d, r14d",
    "je      0xb35b0",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     rdi, rdx",
    "call    puts",
    "jmp     0xb36f0",
    "mov     ecx, dword [rax+0x4]",
    "mov     r8, qword [rax+0x18]",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "lea     rsi, [rel data_121321]  {\"%s %d %s\\n\"}",
    "call    __printf_chk",
    "jmp     0xb36f0",
    "mov     edx, dword [rbp-0x50]",
    "or      edx, r14d",
    "or      edx, dword [rbp-0x40]",
    "jne     0xb3790",
    "mov     r13d, dword [rbp-0x44]",
    "test    r13d, r13d",
    "jne     0xb353b",
    "mov     eax, dword [rax+0x28 {Elf64_Header::section_header_offset.d}]",
    "test    ah, 0x8",
    "je      0xb35b0",
    "xor     esi, esi",
    "mov     rdi, r15",
    "call    find_variable_last_nameref",
    "mov     rbx, rax",
    "jmp     0xb35bd",
    "mov     eax, dword [rax+0x28 {Elf64_Header::section_header_offset.d}]",
    "test    ah, 0x8",
    "jne     0xb38d2",
    "cmp     dword [rbp-0x44], 0x0",
    "mov     qword [rbp-0x80], r12",
    "mov     r12d, r14d",
    "mov     ebx, dword [rbp-0xa8]",
    "mov     r14, qword [rbp-0x98]",
    "mov     r13d, dword [rbp-0xac]",
    "je      0xb4c96",
    "test    byte [rbx+0x29 {Elf64_Header::section_header_offset+1.b}], 0x8",
    "jne     0xb3958",
    "mov     qword [rbp-0x50], 0x0",
    "mov     ebx, dword [rbp-0xa8]",
    "mov     r9, rax",
    "mov     r13d, dword [rbp-0xac]",
    "mov     r10d, dword [rbp-0x3c]",
    "mov     qword [rbp-0x80], r12",
    "mov     r12d, r14d",
    "mov     r14, qword [rbp-0x98]",
    "nop     word [rax+rax]",
    "test    byte [rax+0x29 {Elf64_Header::section_header_offset+1.b}], 0x8",
    "jne     0xb3beb",
    "mov     esi, dword [rbp-0x68]",
    "or      esi, 0x2",
    "call    make_local_assoc_variable",
    "mov     r9, rax",
    "jmp     0xb3b88",
    "mov     edx, dword [rbp-0x50]",
    "and     edx, 0x4",
    "or      edx, dword [rbp-0x70]",
    "jne     0xb428f",
    "mov     rdi, qword [rdx]",
    "jmp     0xb3b4f",
    "lea     rcx, [rel variable_context]",
    "mov     ecx, dword [rcx]",
    "cmp     dword [rax+0x2c {Elf64_Header::section_header_offset+4.d}], ecx",
    "jne     0xb3b4c",
    "mov     eax, dword [rbp-0x78]",
    "test    eax, eax",
    "je      0xb35b0",
    "jmp     0xb384d",
    "mov     rdi, r15",
    "call    find_global_variable_noref",
    "test    rax, rax",
    "je      0xb35b0",
    "lea     rax, [rel expanding_redir]",
    "xor     esi, esi",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "jne     0xb4144",
    "mov     rdi, qword [rbx+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    rdi, rdi",
    "je      0xb38e3",
    "test    rbx, rbx",
    "je      0xb35cc",
    "mov     edx, dword [rbp-0x50]",
    "or      edx, r14d",
    "or      edx, dword [rbp-0x40]",
    "jne     0xb3790",
    "mov     edx, r12d",
    "jmp     0xb3865",
    "mov     edx, dword [rbp-0x90]",
    "mov     rdi, r15",
    "test    edx, edx",
    "je      0xb49dc",
    "mov     r8d, dword [rbp-0x44]",
    "mov     rdi, qword [rbx+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    r8d, r8d",
    "je      0xb4285",
    "test    ecx, ecx",
    "jne     0xb3e90",
    "test    dh, 0x8",
    "je      0xb451d",
    "nop     word [rax+rax]",
    "mov     qword [rbp-0x50], 0x0",
    "test    r9, r9",
    "je      0xb3eb0",
    "mov     esi, dword [rbp-0x68]",
    "or      esi, 0x1",
    "call    make_local_array_variable",
    "mov     r9, rax",
    "jmp     0xb3b88",
    "test    r12d, r12d",
    "je      0xb40bc",
    "mov     qword [rbp-0x80], r12",
    "mov     r14, qword [rbp-0x98]",
    "mov     ebx, dword [rbp-0xa8]",
    "mov     r13d, dword [rbp-0xac]",
    "mov     qword [rbp-0x80], r12",
    "mov     ebx, dword [rbp-0xa8]",
    "mov     r12d, r14d",
    "mov     r9, rax",
    "mov     r14, qword [rbp-0x98]",
    "mov     r13d, dword [rbp-0xac]",
    "test    byte [rax+0x29 {Elf64_Header::section_header_offset+1.b}], 0x8",
    "jne     0xb4abc",
    "mov     rdi, r15",
    "call    sub_502c0",
    "test    rax, rax",
    "je      0xb3790",
    "lea     rax, [rel assigning_in_environment]",
    "lea     rdx, [rel executing_builtin]",
    "xor     esi, esi",
    "mov     eax, dword [rax]",
    "or      eax, dword [rdx]",
    "setne   sil",
    "mov     ecx, dword [rbp-0x50]",
    "or      ecx, r14d",
    "jne     0xb38f8",
    "test    al, 0x2",
    "jne     0xb4460",
    "mov     rdi, r15",
    "mov     dword [rbp-0x88], edx",
    "call    find_variable",
    "mov     r12d, dword [rbp-0x88]",
    "mov     qword [rbp-0x50], rax",
    "call    find_global_variable",
    "mov     qword [rbp-0x50], rax",
    "jmp     0xb387e",
    "call    find_variable",
    "mov     r9, rax",
    "test    rax, rax",
    "je      0xb3628",
    "call    find_variable",
    "jmp     0xb396e",
    "call    find_global_variable",
    "mov     eax, edx",
    "mov     ecx, 0x1",
    "and     eax, 0x800",
    "mov     dword [rbp-0x8c], eax",
    "je      0xb4204",
    "test    ecx, ecx",
    "je      0xb41fa",
    "test    ecx, ecx",
    "je      0xb41eb",
    "mov     rdi, r15",
    "add     dword [rbp-0xa0], 0x1",
    "call    free",
    "mov     r14, qword [r14]",
    "jmp     0xb36fb",
    "mov     eax, dword [r9+0x28]",
    "mov     r10d, dword [rbp-0x3c]",
    "not     eax",
    "test    eax, 0x802",
    "jne     0xb3c15",
    "mov     r8d, dword [rbp-0x8c]",
    "test    r8d, r8d",
    "je      0xb3b7d",
    "mov     esi, dword [rbp-0x8c]",
    "test    esi, esi",
    "cmovne  rdi, r15",
    "test    r10b, 0x40",
    "jne     0xb46fb",
    "mov     qword [rbp-0x50], 0x0",
    "jmp     0xb3c15",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_132b80]  {\"%s: removing nameref attribute\"}",
    "xor     edi, edi",
    "mov     qword [rbp-0x50], rax",
    "call    dcgettext",
    "mov     rsi, r15",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_warning",
    "mov     r9, qword [rbp-0x50]",
    "mov     rdi, qword [r9+0x8]",
    "test    rdi, rdi",
    "je      0xb4af6",
    "xor     r11d, r11d",
    "mov     dword [rbp-0x78], 0x1",
    "mov     r10d, dword [rbp-0x3c]",
    "mov     qword [rbp-0x50], r11",
    "jmp     0xb3c15",
    "jmp     0xb3548",
    "mov     eax, dword [rbp-0x44]",
    "test    eax, eax",
    "je      0xb4445",
    "cmp     r13d, 0x800",
    "je      0xb46b1",
    "mov     r14, qword [rbp-0x98]",
    "jmp     0xb3bbd",
    "mov     r10d, dword [rbp-0x3c]",
    "mov     r9, qword [rbp-0x50]",
    "mov     eax, r10d",
    "and     eax, 0x44",
    "mov     dword [rbp-0x98], eax",
    "test    r9, r9",
    "je      0xb4353",
    "mov     rdi, r15",
    "call    find_global_variable",
    "mov     qword [rbp-0x50], rax",
    "jmp     0xb387e",
    "test    byte [rax+0x28 {Elf64_Header::section_header_offset.b}], 0x20",
    "je      0xb3628",
    "test    rax, rax",
    "jne     0xb3911",
    "mov     qword [rbp-0x80], r12",
    "mov     r10d, dword [rbp-0x3c]",
    "mov     r12d, r14d",
    "mov     r9, rax",
    "mov     qword [rbp-0x50], rbx",
    "mov     r14, qword [rbp-0x98]",
    "mov     ebx, dword [rbp-0xa8]",
    "mov     r13d, dword [rbp-0xac]",
    "jmp     0xb3c15",
    "mov     rax, qword [rbx+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     rdi, rax",
    "mov     qword [rbp-0x88], rax",
    "call    strlen",
    "mov     qword [rbp-0x78], rax",
    "mov     r13, rax",
    "test    r12, r12",
    "je      0xb3ab0",
    "test    dl, 0x2",
    "je      0xb3c5b",
    "test    byte [rbp-0x3f], 0x8",
    "jne     0xb41fa",
    "mov     dword [rbp-0x8c], 0x0",
    "mov     rcx, qword [r9+0x8]",
    "test    rcx, rcx",
    "je      0xb3c48",
    "mov     eax, edx",
    "xor     ecx, ecx",
    "and     eax, 0x2",
    "mov     dword [rbp-0x8c], eax",
    "jne     0xb3bbd",
    "mov     eax, r10d",
    "mov     edx, dword [r9+0x28]",
    "mov     ecx, r10d",
    "and     eax, 0x44",
    "and     ecx, 0x800",
    "mov     dword [rbp-0x98], eax",
    "test    dl, 0x44",
    "jne     0xb41cf",
    "cmp     qword [r9+0x8], 0x0",
    "je      0xb3c15",
    "mov     esi, dword [rbp-0x68]",
    "call    make_local_variable",
    "mov     r9, rax",
    "mov     esi, 0x1",
    "mov     rdi, r15",
    "call    find_variable_last_nameref",
    "mov     qword [rbp-0x50], rax",
    "test    rax, rax",
    "je      0xb4a6e",
    "lea     rax, [rel global_variables]",
    "mov     rdi, r15",
    "mov     dword [rbp-0x8c], r10d",
    "mov     rax, qword [rax]",
    "mov     rsi, qword [rax+0x20]",
    "call    sub_54b40",
    "mov     edi, 0x400",
    "mov     qword [rbp-0x88], rax",
    "call    hash_create",
    "mov     r9, qword [rbp-0x88]",
    "mov     r10d, dword [rbp-0x8c]",
    "mov     edx, dword [r9+0x28]",
    "mov     qword [r9+0x8], rax",
    "or      edx, 0x40",
    "mov     dword [r9+0x28], edx",
    "jmp     0xb43c6",
    "mov     eax, r10d",
    "and     eax, 0x4",
    "or      eax, dword [rbp-0x70]",
    "jne     0xb4798",
    "xor     r10d, r10d",
    "and     dword [r9+0x28], 0xfffff7ff",
    "mov     qword [r9+0x8], r10",
    "jmp     0xb3570",
    "call    free",
    "mov     r9, qword [rbp-0x50]",
    "call    find_variable",
    "test    rax, rax",
    "je      0xb3790",
    "call    find_global_variable",
    "test    rax, rax",
    "je      0xb35b0",
    "and     ah, 0xf7",
    "mov     r14, qword [rbp-0x98]",
    "mov     rdi, r15",
    "mov     dword [rbx+0x28 {Elf64_Header::section_header_offset.d}], eax",
    "call    free",
    "mov     r14, qword [r14]",
    "jmp     0xb36fb",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fcf9]  {\"%s: readonly variable\"}",
    "jmp     0xb3e9c",
    "lea     rax, [rel variable_context]",
    "mov     eax, dword [rax]",
    "cmp     dword [r9+0x2c], eax",
    "je      0xb4beb",
    "mov     rdi, qword [rbp-0x58]",
    "call    strlen",
    "mov     rcx, qword [rbp-0x78]",
    "lea     rax, [rcx+rax+0x3]",
    "mov     rdi, rax",
    "mov     qword [rbp-0x70], rax",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xb4cda",
    "mov     byte [r12], 0x5b",
    "mov     rdi, r12",
    "call    strlen",
    "mov     rdi, qword [rbp-0x58]",
    "add     rax, r13",
    "mov     r13, rax",
    "mov     qword [rbp-0x80], rax",
    "call    strlen",
    "lea     rax, [r13+rax+0x3]",
    "mov     rdi, rax",
    "mov     qword [rbp-0x70], rax",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xb4c10",
    "test    edx, 0x4002",
    "je      0xb3c6c",
    "mov     eax, dword [rbp-0x40]",
    "test    r12d, r12d",
    "jne     0xb4b55",
    "test    r12d, r12d",
    "jne     0xb3c48",
    "test    dword [rbp-0x88], 0x800",
    "je      0xb3c15",
    "mov     rdi, r15",
    "call    find_variable",
    "mov     r9, rax",
    "test    rax, rax",
    "je      0xb40fb",
    "lea     rcx, [rel variable_context]",
    "mov     r9, rax",
    "mov     ecx, dword [rcx]",
    "cmp     dword [rax+0x2c {Elf64_Header::section_header_offset+4.d}], ecx",
    "je      0xb3b99",
    "test    r12d, r12d",
    "jne     0xb45d3",
    "mov     rdi, r15",
    "mov     dword [rbp-0x88], r10d",
    "call    make_new_array_variable",
    "mov     r10d, dword [rbp-0x88]",
    "mov     r9, rax",
    "jmp     0xb43b9",
    "mov     eax, dword [rbp-0x44]",
    "test    eax, eax",
    "je      0xb47b6",
    "jmp     0xb3911",
    "xor     eax, eax",
    "mov     r10d, dword [rbp-0x3c]",
    "mov     qword [rbp-0x50], rax",
    "jmp     0xb3c15",
    "mov     r12, qword [rbp-0x70]",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     rsi, r12",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r12, qword [rbp-0x78]",
    "mov     rcx, qword [rbp-0x70]",
    "mov     rdi, r13",
    "mov     rsi, qword [rbp-0x88]",
    "lea     rdx, [r12+0x1]",
    "call    __memcpy_chk",
    "mov     qword [rbp-0x80], r12",
    "jmp     0xb3a08",
    "mov     rsi, qword [rbp-0x70]",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, qword [rbp-0x70]",
    "mov     rsi, qword [rbp-0x88]",
    "mov     rdi, rax",
    "call    __strcpy_chk",
    "mov     rax, qword [rbp-0x78]",
    "mov     rcx, qword [rbp-0x70]",
    "mov     rsi, r12",
    "cmp     rcx, rax",
    "mov     rdx, rax",
    "lea     rdi, [r13+rax]",
    "cmovae  rdx, rcx",
    "sub     rdx, rax",
    "call    __strcpy_chk",
    "mov     eax, dword [rbp-0x40]",
    "mov     dword [rbp-0x88], eax",
    "test    r12d, r12d",
    "jne     0xb37e3",
    "mov     rbx, qword [r9]",
    "lea     rsi, [rel data_11fcf9]  {\"%s: readonly variable\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rdi, rax",
    "mov     rsi, rbx",
    "jmp     0xb3ea9",
    "test    edx, 0x4002",
    "je      0xb3c75",
    "mov     rdi, qword [rbp-0x58]",
    "mov     esi, 0x1",
    "mov     dword [rbp-0xac], r10d",
    "mov     dword [rbp-0xa8], ecx",
    "mov     qword [rbp-0x88], r9",
    "call    valid_nameref_value",
    "test    eax, eax",
    "je      0xb4c39",
    "cmp     byte [rcx], 0x0",
    "mov     dword [rbp-0xac], r10d",
    "mov     dword [rbp-0x8c], edx",
    "mov     qword [rbp-0x88], r9",
    "je      0xb45b0",
    "mov     esi, dword [rbp-0x68]",
    "mov     rdi, r15",
    "call    make_local_variable",
    "mov     r9, rax",
    "jmp     0xb3b88",
    "lea     rax, [rel variable_context]",
    "mov     eax, dword [rax]",
    "cmp     dword [r9+0x2c], eax",
    "jne     0xb40fb",
    "mov     dword [rbp-0x8c], 0x1",
    "xor     ecx, ecx",
    "jmp     0xb4204",
    "mov     eax, dword [rbp-0x40]",
    "mov     esi, edx",
    "mov     ecx, edx",
    "or      esi, 0x1000",
    "mov     dword [r9+0x28], esi",
    "mov     dword [rbp-0x88], eax",
    "and     ecx, 0x2",
    "je      0xb4a9a",
    "test    r9, r9",
    "je      0xb36f0",
    "mov     edx, 0x20",
    "xor     esi, esi",
    "mov     rdi, r15",
    "mov     dword [rbp-0x88], r10d",
    "call    bind_variable",
    "mov     r10d, dword [rbp-0x88]",
    "mov     r9, rax",
    "jmp     0xb43b9",
    "lea     rax, [rel shell_variables]",
    "cmp     qword [rax], 0x0",
    "je      0xb4bc7",
    "test    r14d, r14d",
    "je      0xb3aa0",
    "mov     rdi, r15",
    "call    free",
    "jmp     0xb3a8a",
    "mov     esi, dword [rbp-0x60]",
    "test    esi, esi",
    "je      0xb3a2a",
    "mov     eax, r10d",
    "test    byte [rbp-0x88], 0x40",
    "je      0xb441c",
    "test    dl, 0x4",
    "jne     0xb44f7",
    "mov     rdi, r15",
    "add     dword [rbp-0x9c], 0x1",
    "call    free",
    "mov     r14, qword [r14]",
    "jmp     0xb36fb",
    "xor     eax, eax",
    "call    builtin_error",
    "test    byte [rbp-0x88], 0x4",
    "je      0xb3c87",
    "test    r12d, r12d",
    "je      0xb3c75",
    "lea     rsi, [rel data_133e58]  {\"`%s': invalid variable name for \u2026\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdi, rax",
    "jmp     0xb3ea9",
    "mov     r9, qword [rbp-0x88]",
    "xor     eax, eax",
    "mov     ecx, dword [rbp-0xa8]",
    "mov     dword [rbp-0x8c], eax",
    "mov     r10d, dword [rbp-0xac]",
    "mov     edx, dword [r9+0x28]",
    "jmp     0xb4204",
    "lea     rsi, [rel data_133e58]  {\"`%s': invalid variable name for \u2026\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "mov     qword [rbp-0x50], rcx",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x50]",
    "mov     rdi, rax",
    "jmp     0xb3ea9",
    "mov     rdi, rcx",
    "mov     qword [rbp-0xa8], rcx",
    "call    legal_identifier",
    "mov     r9, qword [rbp-0x88]",
    "mov     edx, dword [rbp-0x8c]",
    "test    eax, eax",
    "mov     r10d, dword [rbp-0xac]",
    "jne     0xb3c48",
    "jmp     0xb3b99",
    "mov     dword [rbp-0x8c], 0x1",
    "mov     edx, esi",
    "jmp     0xb3c75",
    "mov     dword [rbp-0x8c], 0x1",
    "xor     ecx, ecx",
    "mov     edx, esi",
    "jmp     0xb4210",
    "mov     edx, dword [r9+0x28]",
    "mov     dword [rbp-0x88], r10d",
    "call    sub_51d30",
    "mov     r10d, dword [rbp-0x88]",
    "jmp     0xb4388",
    "lea     rax, [rel global_variables]",
    "xor     ecx, ecx",
    "xor     esi, esi",
    "mov     rdi, r15",
    "mov     r8d, 0x20",
    "mov     dword [rbp-0x88], r10d",
    "mov     rax, qword [rax]",
    "mov     rdx, qword [rax+0x20]",
    "call    sub_55a00",
    "mov     r10d, dword [rbp-0x88]",
    "mov     r9, rax",
    "test    byte [rbp-0x3f], 0x8",
    "je      0xb3a97",
    "mov     rcx, qword [rbp-0x80]",
    "mov     byte [r13+rcx], 0x3d",
    "lea     rax, [rcx+0x1]",
    "mov     rcx, qword [rbp-0x58]",
    "lea     rdi, [r13+rax]",
    "cmp     byte [rcx], 0x0",
    "jne     0xb3e60",
    "mov     rax, qword [rbp-0x80]",
    "mov     byte [r13+rax], 0x2b",
    "add     rax, 0x1",
    "mov     qword [rbp-0x80], rax",
    "and     eax, 0x4",
    "mov     dword [rbp-0xa8], eax",
    "je      0xb3ca9",
    "and     eax, 0x4",
    "mov     dword [rbp-0xa8], eax",
    "test    dl, 0x40",
    "jne     0xb44f7",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133e88]  {\"%s: cannot destroy array variabl\u2026\"}",
    "jmp     0xb3e9c",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fcf9]  {\"%s: readonly variable\"}",
    "jmp     0xb37cf",
    "mov     rdi, qword [rbp-0xa8]",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     dword [rbp-0x8c], r10d",
    "call    tokenize_array_reference",
    "mov     r9, qword [rbp-0x88]",
    "mov     r10d, dword [rbp-0x8c]",
    "test    eax, eax",
    "jne     0xb4cbb",
    "mov     dword [rbp-0x88], eax",
    "test    al, 0x2",
    "jne     0xb46ce",
    "mov     r15, r13",
    "jmp     0xb34a7",
    "and     dword [rbx+0x28 {Elf64_Header::section_header_offset.d}], 0xfffff7ff {Elf64_Header::section_header_offset.d}",
    "mov     rcx, qword [rbp-0x70]",
    "mov     rsi, qword [rbp-0x58]",
    "cmp     rcx, rax",
    "mov     rdx, rcx",
    "cmovb   rdx, rax",
    "sub     rdx, rax",
    "call    __strcpy_chk",
    "mov     rdi, r15",
    "call    free",
    "jmp     0xb3a55",
    "mov     byte [rdi], 0x0",
    "mov     rdi, r15",
    "call    free",
    "mov     eax, r10d",
    "and     eax, 0x40",
    "mov     dword [rbp-0xac], eax",
    "je      0xb446c",
    "test    dl, 0x40",
    "je      0xb48e0",
    "mov     edx, dword [r9+0x28]",
    "mov     eax, edx",
    "and     eax, 0x2",
    "mov     dword [rbp-0x8c], eax",
    "jne     0xb3bbd",
    "mov     rcx, qword [r9+0x8]",
    "mov     esi, 0x5b",
    "mov     rdi, r15",
    "call    strchr",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xb3940",
    "xor     esi, esi",
    "mov     rdi, r13",
    "call    assignment",
    "mov     r14d, eax",
    "test    eax, eax",
    "je      0xb3ed0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "xor     edi, edi",
    "mov     r14, qword [rbp-0x98]",
    "mov     qword [rbp-0x50], r13",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x50]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     rdi, qword [rbp-0x50]",
    "add     dword [rbp-0x9c], 0x1",
    "call    free",
    "mov     r14, qword [r14]",
    "jmp     0xb36fb",
    "mov     ecx, dword [rbp-0x60]",
    "movsxd  rdx, eax",
    "lea     eax, [rax-0x1]",
    "cdqe    ",
    "test    ecx, ecx",
    "cmove   rax, rdx",
    "mov     byte [r13+rax], 0x0",
    "lea     rax, [r13+rdx+0x1]",
    "mov     qword [rbp-0x58], rax",
    "mov     eax, dword [rbp-0x98]",
    "test    eax, eax",
    "jne     0xb447f",
    "and     edx, 0x4",
    "jne     0xb4aab",
    "mov     dword [rbp-0xa8], 0x4",
    "jmp     0xb3ca9",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133eb8]  {\"%s: cannot convert associative t\u2026\"}",
    "jmp     0xb3e9c",
    "xor     r12d, r12d",
    "xor     ecx, ecx",
    "jmp     0xb3c6c",
    "mov     edx, dword [rbp-0x70]",
    "mov     eax, dword [rbp-0x98]",
    "or      edx, ecx",
    "or      edx, eax",
    "je      0xb474b",
    "test    byte [rbp-0x78], cl",
    "jne     0xb48fe",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133780]  {\"%s: cannot convert indexed to as\u2026\"}",
    "jmp     0xb3e9c",
    "test    byte [rbp-0x78], cl",
    "je      0xb3cd7",
    "xor     esi, esi",
    "xor     ecx, ecx",
    "test    r12d, r12d",
    "jne     0xb481d",
    "xor     edx, edx",
    "mov     esi, 0x1",
    "mov     ecx, 0x1",
    "jmp     0xb44a1",
    "mov     edx, dword [rbp-0x70]",
    "mov     eax, dword [rbp-0x98]",
    "or      edx, ecx",
    "or      edx, eax",
    "jne     0xb4814",
    "mov     eax, dword [rbp-0x98]",
    "test    eax, eax",
    "je      0xb48ef",
    "mov     ebx, r10d",
    "and     ebx, 0x800",
    "mov     dword [rbp-0x70], ebx",
    "je      0xb3d11",
    "jmp     0xb44b2",
    "mov     rdi, qword [rbp-0x58]",
    "lea     rax, [rel shell_compatibility_level]",
    "movzx   esi, byte [rdi]",
    "mov     r8d, dword [rax]",
    "test    sil, sil",
    "je      0xb48dc",
    "xor     esi, esi",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "mov     r11d, dword [rbp-0x70]",
    "test    r11d, r11d",
    "je      0xb474f",
    "test    r12d, r12d",
    "je      0xb4b4a",
    "xor     esi, esi",
    "xor     ecx, ecx",
    "mov     esi, 0x1",
    "mov     ecx, 0x1",
    "jmp     0xb3cee",
    "mov     edi, dword [rbp-0x88]",
    "mov     ebx, r10d",
    "and     bh, 0xf7",
    "mov     r8d, edi",
    "and     edi, 0x800",
    "mov     dword [rbp-0x3c], ebx",
    "and     r8d, 0xfffff7ff",
    "mov     dword [rbp-0x78], edi",
    "mov     edi, ebx",
    "mov     r11d, r8d",
    "or      edi, eax",
    "and     eax, 0x44",
    "mov     dword [rbp-0x40], r8d",
    "not     r11d",
    "and     edi, r11d",
    "or      eax, esi",
    "mov     dword [r9+0x28], edi",
    "jne     0xb4402",
    "and     eax, 0xfffff8ef",
    "mov     dword [r9+0x28], eax",
    "mov     eax, edi",
    "test    dil, 0x44",
    "jne     0xb3cfa",
    "xor     edx, edx",
    "jmp     0xb48bf",
    "cmp     byte [rdi+0x1], 0x0",
    "mov     eax, 0x1",
    "je      0xb4890",
    "mov     edi, dword [r9+0x28]",
    "mov     r8d, dword [rbp-0xa8]",
    "mov     eax, edi",
    "test    r8d, r8d",
    "je      0xb3cfa",
    "mov     edi, dword [r9+0x28]",
    "xor     esi, esi",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "jmp     0xb3cee",
    "mov     rdi, r9",
    "mov     dword [rbp-0xa8], r10d",
    "mov     dword [rbp-0x98], ecx",
    "mov     dword [rbp-0x78], edx",
    "mov     dword [rbp-0x70], esi",
    "call    convert_var_to_assoc",
    "mov     esi, dword [rbp-0x70]",
    "mov     edx, dword [rbp-0x78]",
    "mov     r9, rax",
    "mov     ecx, dword [rbp-0x98]",
    "mov     eax, dword [rax+0x28]",
    "mov     r10d, dword [rbp-0xa8]",
    "jmp     0xb3cfa",
    "mov     eax, dword [r9+0x28]",
    "test    al, 0x40",
    "je      0xb47db",
    "test    r12d, r12d",
    "je      0xb4410",
    "mov     ebx, r10d",
    "mov     rdi, r9",
    "mov     dword [rbp-0xa8], r10d",
    "mov     dword [rbp-0x98], ecx",
    "mov     dword [rbp-0x78], edx",
    "mov     dword [rbp-0x70], esi",
    "call    convert_var_to_array",
    "mov     r10d, dword [rbp-0xa8]",
    "mov     ecx, dword [rbp-0x98]",
    "mov     r9, rax",
    "mov     edx, dword [rbp-0x78]",
    "mov     eax, dword [rax+0x28]",
    "mov     esi, dword [rbp-0x70]",
    "jmp     0xb3cfa",
    "mov     esi, 0x1",
    "mov     ecx, 0x1",
    "cmp     r8d, 0x2b",
    "jle     0xb4b0a",
    "cmp     byte [rdi+0x2], 0x0",
    "mov     eax, 0x2",
    "je      0xb4890",
    "mov     dword [rbp-0x70], 0x0",
    "jmp     0xb3d56",
    "and     edx, 0x1",
    "jne     0xb476a",
    "test    ecx, ecx",
    "jne     0xb4a1c",
    "test    cl, 0x1",
    "je      0xb45e4",
    "jmp     0xb44a1",
    "cmp     sil, 0x28",
    "jne     0xb48dc",
    "mov     edx, ebx",
    "and     edx, 0x8000",
    "jne     0xb4b0a",
    "mov     dword [rbp-0xc0], r10d",
    "mov     dword [rbp-0xbc], r8d",
    "mov     dword [rbp-0xb0], ecx",
    "mov     qword [rbp-0xb8], r9",
    "mov     byte [rbp-0x78], sil",
    "call    strlen",
    "mov     r10d, dword [rbp-0xc0]",
    "movzx   esi, byte [rbp-0x78]",
    "mov     r8d, dword [rbp-0xbc]",
    "mov     ecx, dword [rbp-0xb0]",
    "mov     r9, qword [rbp-0xb8]",
    "mov     rax, qword [rbp-0x80]",
    "test    rax, rax",
    "je      0xb45e4",
    "mov     edx, dword [rbp-0x60]",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdi, r9",
    "mov     dword [rbp-0x80], r10d",
    "mov     qword [rbp-0x58], r9",
    "or      edx, 0x20",
    "call    assign_array_var_from_string",
    "mov     dword [rbp-0x70], 0x0",
    "mov     r9, qword [rbp-0x58]",
    "mov     r10d, dword [rbp-0x80]",
    "jmp     0xb3da7",
    "mov     r13d, dword [rbp-0x60]",
    "mov     dword [rbp-0x80], r10d",
    "mov     qword [rbp-0x60], r9",
    "or      r13d, 0x20",
    "and     edi, 0x40",
    "je      0xb4ba9",
    "test    r12d, r12d",
    "je      0xb3da7",
    "mov     byte [rax], 0x5b",
    "mov     r12, rax",
    "mov     edx, r13d",
    "mov     eax, dword [rbp-0x60]",
    "shl     edx, 0x7",
    "mov     rsi, qword [rbp-0x58]",
    "xor     ecx, ecx",
    "mov     rdi, r15",
    "or      edx, eax",
    "mov     dword [rbp-0x80], r10d",
    "or      dh, 0x8",
    "call    assign_array_element",
    "mov     byte [r12], 0x0",
    "mov     r10d, dword [rbp-0x80]",
    "test    rax, rax",
    "mov     r9, rax",
    "je      0xb4bdf",
    "mov     rcx, qword [rbp-0x58]",
    "cdqe    ",
    "cmp     byte [rcx+rax-0x1], 0x29",
    "jne     0xb48dc",
    "cmp     sil, 0x28",
    "jne     0xb48bf",
    "mov     edx, dword [r9+0x28]",
    "and     r10d, 0x3",
    "mov     eax, edx",
    "je      0xb3dbf",
    "mov     rdx, qword [rbp-0x58]",
    "mov     ecx, r13d",
    "xor     esi, esi",
    "mov     rdi, r15",
    "call    bind_array_variable",
    "mov     r9, qword [rbp-0x60]",
    "mov     r10d, dword [rbp-0x80]",
    "jmp     0xb3da7",
    "mov     edi, 0x2",
    "call    xmalloc",
    "mov     r9, qword [rbp-0x60]",
    "mov     rcx, qword [rbp-0x58]",
    "mov     r8d, r13d",
    "mov     word [rax], 0x30",
    "mov     rdx, rax",
    "mov     rsi, r15",
    "mov     rdi, r9",
    "mov     qword [rbp-0x58], r9",
    "call    bind_assoc_variable",
    "mov     r9, qword [rbp-0x58]",
    "mov     r10d, dword [rbp-0x80]",
    "jmp     0xb3da7",
    "mov     r12d, dword [rbp-0x70]",
    "and     edi, 0x800",
    "mov     edx, dword [rbp-0x60]",
    "mov     dword [rbp-0x80], r10d",
    "or      edi, r12d",
    "jne     0xb49ea",
    "add     dword [rbp-0x9c], 0x1",
    "jmp     0xb4685",
    "cmp     r8d, 0x2b",
    "jle     0xb4b39",
    "mov     rbx, qword [rbp-0x58]",
    "cdqe    ",
    "cmp     byte [rbx+rax-0x1], 0x29",
    "je      0xb4c9e",
    "mov     ecx, dword [rbp-0x70]",
    "mov     edx, dword [rbp-0x78]",
    "mov     dword [rbp-0x3c], ebx",
    "or      eax, ecx",
    "not     edx",
    "and     eax, edx",
    "cmp     qword [rbp-0x50], 0x0",
    "mov     dword [r9+0x28], eax",
    "mov     eax, dword [rbp-0x88]",
    "mov     dword [rbp-0x40], eax",
    "je      0xb3e01",
    "test    edx, 0x100000",
    "jne     0xb490f",
    "mov     rsi, qword [rbp-0x58]",
    "or      edx, 0x10",
    "mov     rdi, r9",
    "mov     qword [rbp-0x60], r9",
    "call    bind_variable_value",
    "mov     r9, qword [rbp-0x60]",
    "mov     r10d, dword [rbp-0x80]",
    "test    rax, rax",
    "jne     0xb3da7",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdi, r9",
    "mov     qword [rbp-0x60], r9",
    "call    bind_variable_value",
    "mov     r9, qword [rbp-0x60]",
    "mov     r10d, dword [rbp-0x80]",
    "test    rax, rax",
    "jne     0xb3da7",
    "mov     eax, dword [rbp-0x88]",
    "mov     rdi, r15",
    "mov     dword [rbp-0x3c], ebx",
    "mov     dword [rbp-0x40], eax",
    "call    free",
    "mov     r14, qword [r14]",
    "jmp     0xb36fb",
    "xor     ecx, ecx",
    "mov     esi, 0x1",
    "mov     edx, 0x1",
    "jmp     0xb48c9",
    "and     ebx, 0x8000",
    "mov     edx, ebx",
    "je      0xb48bf",
    "mov     ebx, dword [rbp-0x98]",
    "or      ebx, ecx",
    "je      0xb4d0d",
    "mov     rdi, r15",
    "call    stupidly_hack_special_variables",
    "jmp     0xb36f0",
    "test    al, 0x2",
    "je      0xb3df2",
    "lea     rax, [rel temporary_env]",
    "mov     rdi, qword [r9]",
    "mov     r13, qword [rax]",
    "test    r13, r13",
    "je      0xb49d0",
    "test    r12d, r12d",
    "je      0xb4630",
    "test    byte [r9+0x29], 0x8",
    "je      0xb3da7",
    "mov     ebx, dword [rbp-0xac]",
    "test    ebx, ebx",
    "jne     0xb3cee",
    "mov     rax, qword [r14+0x8]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133ee8]  {\"%s: quoted compound array assign\u2026\"}",
    "xor     edi, edi",
    "mov     dword [rbp-0xb8], r10d",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x98], r9",
    "mov     qword [rbp-0x78], rax",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x78]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_warning",
    "mov     r10d, dword [rbp-0xb8]",
    "mov     r9, qword [rbp-0x98]",
    "jmp     0xb4ca8",
    "mov     ecx, dword [rbp-0x70]",
    "xor     edx, edx",
    "test    ebx, ebx",
    "setne   dl",
    "mov     esi, ecx",
    "or      esi, edx",
    "jmp     0xb48c9",
    "mov     eax, dword [rbp-0x88]",
    "mov     rcx, qword [rbp-0x50]",
    "not     eax",
    "and     dword [rcx+0x28], eax",
    "and     eax, 0xfffffffd",
    "mov     dword [rbp-0x88], eax",
    "mov     dword [rbp-0x40], eax",
    "mov     eax, edx",
    "or      eax, 0x200000",
    "jmp     0xb3dbf",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     qword [rbp-0x58], r9",
    "call    hash_search",
    "mov     r9, qword [rbp-0x58]",
    "test    rax, rax",
    "je      0xb49cc",
    "jmp     0xb463b",
    "mov     rdi, qword [rbp-0x58]",
    "mov     esi, 0x1",
    "mov     qword [rbp-0x50], r9",
    "call    valid_nameref_value",
    "mov     r9, qword [rbp-0x50]",
    "test    eax, eax",
    "je      0xb4c58",
    "mov     edx, dword [r9+0x28]",
    "cmp     qword [rax+0x10], 0x0",
    "mov     qword [rel data_1619d8], r13",
    "je      0xb49cc",
    "mov     rdi, qword [rbp-0x58]",
    "mov     qword [rbp-0x50], r9",
    "call    sh_invalidid",
    "mov     r9, qword [rbp-0x50]",
    "jmp     0xb4659",
    "add     dword [rbp-0x9c], 0x1",
    "cmp     dword [rbp-0x8c], 0x0",
    "je      0xb4685",
    "mov     r13, qword [r9+0x8]",
    "mov     qword [rbp-0x58], r9",
    "test    r13, r13",
    "je      0xb4c7d",
    "cmp     dword [rbp-0x44], 0x0",
    "je      0xb4c6e",
    "mov     edi, 0x1",
    "call    xmalloc",
    "mov     r9, qword [rbp-0x58]",
    "mov     byte [rax], 0x0",
    "mov     r13, rax",
    "jmp     0xb4982",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rdi, [rax+0x1]",
    "call    xmalloc",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "call    strcpy",
    "mov     r9, qword [rbp-0x58]",
    "mov     r13, rax",
    "lea     rax, [rel shell_variables]",
    "mov     rsi, qword [rax]",
    "jmp     0xb467d",
    "lea     rax, [rel global_variables]",
    "mov     rsi, qword [rax]",
    "mov     rdi, qword [r9]",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     qword [rbp-0x58], r9",
    "call    bind_variable",
    "mov     r9, qword [rbp-0x58]",
    "test    rax, rax",
    "mov     rdx, rax",
    "je      0xb49bc",
    "mov     rdi, r13",
    "mov     qword [rbp-0x58], r9",
    "call    free",
    "mov     r9, qword [rbp-0x58]",
    "mov     eax, dword [r9+0x28]",
    "and     eax, 0xffefffff",
    "or      eax, dword [rdx+0x28]",
    "cmp     dword [rdx+0x2c], 0x0",
    "mov     dword [rdx+0x28], eax",
    "jle     0xb49bc",
    "mov     rdi, qword [r9]",
    "call    delete_var",
    "or      eax, 0x200000",
    "mov     dword [rdx+0x28], eax"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
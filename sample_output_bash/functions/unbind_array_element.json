{
  "address": "0x97ef0",
  "rules": [
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "movzx   eax, byte [rsi]",
    "mov     rbx, rsi",
    "mov     ecx, dword [rdi+0x28]",
    "cmp     al, 0x40",
    "je      0x97f80",
    "cmp     byte [rbx+0x1], 0x0",
    "jne     0x98000",
    "cmp     al, 0x2a",
    "je      0x97f80",
    "test    cl, 0x40",
    "jne     0x98070",
    "test    cl, 0x44",
    "je      0x980d8",
    "test    cl, 0x40",
    "je      0x98005",
    "and     edx, 0x1",
    "mov     r13, rbx",
    "jne     0x97f30",
    "and     ecx, 0x4",
    "je      0x97fc0",
    "mov     eax, 0xfffffffe",
    "jmp     0x97f71",
    "test    dl, 0x4",
    "jne     0x97ff0",
    "and     edx, 0x1",
    "mov     r13, rsi",
    "je      0x980a0",
    "mov     rsi, qword [r12+0x8]",
    "xor     edx, edx",
    "mov     rdi, r13",
    "call    hash_remove",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x97f62",
    "xor     esi, esi",
    "mov     rdi, rbx",
    "call    sub_8c420",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x980a4",
    "lea     r13, [rel this_command_name]",
    "mov     rdi, rbx",
    "call    strlen",
    "xor     ecx, ecx",
    "mov     rsi, rbx",
    "mov     rdi, r12",
    "mov     r14, qword [r13]",
    "lea     edx, [rax+0x1]",
    "call    array_expand_index",
    "mov     qword [r13], r14",
    "test    rax, rax",
    "jne     0x980d8",
    "mov     rdi, rbx",
    "call    strlen",
    "mov     rsi, rbx",
    "mov     rdi, r12",
    "xor     ecx, ecx",
    "lea     edx, [rax+0x1]",
    "call    array_expand_index",
    "mov     rdi, qword [r12+0x8]",
    "mov     rsi, rax",
    "test    rax, rax",
    "jns     0x9803c",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     rdi, qword [r12]",
    "call    unbind_variable",
    "jmp     0x97f6f",
    "test    cl, 0x40",
    "jne     0x98070",
    "test    al, al",
    "jne     0x9807c",
    "test    al, al",
    "je      0x980e2",
    "cmp     rbx, r13",
    "je      0x97f6f",
    "mov     rdi, qword [rax+0x10]",
    "call    free",
    "mov     rdi, qword [r12+0x8]",
    "call    free",
    "mov     rdi, r12",
    "call    free",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120287]  {\"bad array subscript\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_120b87]  {\"[%s]: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "movzx   eax, byte [rax]",
    "jmp     0x97f28",
    "call    array_remove",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x97f6f",
    "mov     rax, qword [rdi]",
    "lea     rsi, [rsi+rax+0x1]",
    "test    rsi, rsi",
    "js      0x980a4",
    "xor     eax, eax",
    "and     ecx, 0x4",
    "je      0x97fc0",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120287]  {\"bad array subscript\"}",
    "call    dcgettext",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_120b87]  {\"[%s]: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     rdi, r13",
    "call    free",
    "jmp     0x980cb",
    "mov     rdi, r13",
    "call    free",
    "mov     rdi, qword [rax+0x8]",
    "test    rdi, rdi",
    "je      0x9805b",
    "lea     rax, [rel shell_compatibility_level]",
    "cmp     dword [rax], 0x33",
    "jle     0x97ff0",
    "or      eax, 0xffffffff",
    "jmp     0x97f71",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0x97f6f",
    "call    free",
    "mov     rdi, qword [r12+0x8]",
    "call    array_flush",
    "jmp     0x97f6f"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
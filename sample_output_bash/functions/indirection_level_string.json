{
  "address": "0x44e50",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "lea     rdi, [rel data_11faf2]",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x48",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    find_variable",
    "test    rax, rax",
    "je      0x45028",
    "mov     r14, qword [rel data_161aa8]",
    "test    r14, r14",
    "je      0x450f8",
    "mov     rdi, rax",
    "call    get_variable_value",
    "mov     r14, qword [rel data_161aa8]",
    "mov     r12, rax",
    "test    r14, r14",
    "je      0x450fb",
    "xor     r12d, r12d",
    "mov     byte [r14], 0x0",
    "jmp     0x44eb4",
    "mov     dword [rel data_161aa4], 0x64",
    "mov     edi, 0x64",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x451e5",
    "mov     byte [r14], 0x0",
    "test    r12, r12",
    "je      0x44eb4",
    "mov     esi, 0x64",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_161aa8], r14",
    "jmp     0x44ea4",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x451e0",
    "cmp     byte [r12], 0x0",
    "jne     0x44ee0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x48",
    "mov     rax, r14",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rbx, [rel shell_flags]",
    "xor     ecx, ecx",
    "lea     r13, [rbx+0x10]",
    "mov     rax, r13",
    "mov     rdi, r12",
    "call    decode_prompt_string",
    "mov     r15, rax",
    "nop     dword [rax+rax]",
    "cmp     dl, 0x78",
    "jne     0x44ef0",
    "test    r15, r15",
    "je      0x450e8",
    "cmp     al, 0x78",
    "jne     0x45148",
    "movzx   edx, byte [rax]",
    "add     rax, 0x10",
    "add     ecx, 0x1",
    "test    dl, dl",
    "je      0x45130",
    "movsxd  rcx, ecx",
    "shl     rcx, 0x4",
    "mov     rax, qword [rbx+rcx+0x8]",
    "test    rax, rax",
    "je      0x45130",
    "mov     r14, qword [rel data_161aa8]",
    "jmp     0x44eb4",
    "cmp     byte [r15], 0x0",
    "je      0x450e0",
    "movzx   eax, byte [r13]",
    "add     r13, 0x10",
    "add     edx, 0x1",
    "test    al, al",
    "je      0x44f39",
    "movsxd  rdx, edx",
    "shl     rdx, 0x4",
    "mov     rax, qword [rbx+rdx+0x8]",
    "test    rax, rax",
    "je      0x44f39",
    "mov     r14d, dword [rax]",
    "mov     dword [rax], 0x0",
    "mov     rdi, r12",
    "call    decode_prompt_string",
    "mov     r15, rax",
    "test    r14d, r14d",
    "jne     0x45140",
    "mov     rdi, r15",
    "call    free",
    "call    __ctype_get_mb_cur_max",
    "mov     rdi, r15",
    "mov     rsi, rax",
    "call    strnlen",
    "mov     rbx, rax",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "ja      0x45048",
    "mov     dword [rax], 0x1",
    "jmp     0x44f39",
    "xor     edx, edx",
    "nop     word [rax+rax]",
    "movsxd  rsi, ebx",
    "mov     rdi, r15",
    "call    mblen",
    "movsxd  r12, eax",
    "cmp     r12d, 0x1",
    "jle     0x44f6e",
    "movzx   eax, byte [r15]",
    "mov     byte [rbp-0x4f], 0x0",
    "mov     r12d, 0x1",
    "mov     byte [rbp-0x59], al",
    "mov     byte [rbp-0x50], al",
    "movsxd  rdx, r12d",
    "lea     rdi, [rbp-0x50]",
    "mov     ecx, 0x11",
    "mov     rsi, r15",
    "call    __memcpy_chk",
    "movzx   eax, byte [rbp-0x50]",
    "mov     byte [rbp-0x59], al",
    "jmp     0x44f82",
    "add     ebx, 0x1",
    "mov     dword [rel data_161aa4], ebx",
    "movsxd  rbx, ebx",
    "test    r14, r14",
    "je      0x451cc",
    "cmp     byte [rbp-0x59], 0x0",
    "je      0x45080",
    "mov     rdi, r15",
    "call    strlen",
    "lea     r9, [rel indirection_level]",
    "mov     r14, qword [rel data_161aa8]",
    "mov     ebx, dword [r9]",
    "imul    ebx, r12d",
    "add     ebx, eax",
    "cmp     dword [rel data_161aa4], ebx",
    "jle     0x45180",
    "mov     rdi, rbx",
    "call    malloc",
    "lea     r9, [rel indirection_level]",
    "mov     r14, rax",
    "jmp     0x451a6",
    "mov     rdi, r14",
    "mov     rsi, rbx",
    "call    realloc",
    "lea     r9, [rel indirection_level]",
    "mov     r14, rax",
    "mov     rax, r14",
    "xor     ebx, ebx",
    "nop     dword [rax]",
    "lea     rax, [rbp-0x50]",
    "movsxd  rdx, r12d",
    "mov     rcx, r14",
    "xor     r13d, r13d",
    "mov     qword [rbp-0x68], rax",
    "xor     ebx, ebx",
    "jmp     0x44fe0",
    "test    r14, r14",
    "je      0x451fd",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_161aa8], r14",
    "jmp     0x44fad",
    "mov     byte [rax], 0x0",
    "mov     rdi, r15",
    "call    free",
    "jmp     0x44eb4",
    "mov     eax, dword [rel data_161aa4]",
    "add     r12, r15",
    "lea     ecx, [rax-0x1]",
    "movsxd  rax, ebx",
    "add     rax, r14",
    "jmp     0x450c3",
    "mov     rax, rcx",
    "cmp     dword [r9], r13d",
    "jle     0x45088",
    "movzx   edx, byte [r12]",
    "test    dl, dl",
    "jne     0x450a8",
    "cmp     byte [r15], 0x0",
    "je      0x450cc",
    "mov     esi, dword [rel data_161aa4]",
    "sub     esi, 0x1",
    "cmp     esi, ebx",
    "jle     0x45088",
    "cmp     ecx, ebx",
    "jle     0x450cc",
    "cmp     r12d, 0x1",
    "je      0x44fd0",
    "mov     byte [rax], dl",
    "add     ebx, 0x1",
    "add     rax, 0x1",
    "add     r12, 0x1",
    "cmp     byte [r15], 0x0",
    "je      0x451c0",
    "movzx   eax, byte [rbp-0x59]",
    "mov     byte [rcx], al",
    "mov     rsi, qword [rbp-0x68]",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x58], rdx",
    "call    memcpy",
    "lea     r9, [rel indirection_level]",
    "mov     rdx, qword [rbp-0x58]",
    "mov     rcx, rax",
    "jmp     0x44fd6",
    "movsxd  rbx, ebx",
    "lea     rax, [r14+rbx]",
    "jmp     0x450cc",
    "add     ebx, r12d",
    "add     r13d, 0x1",
    "add     rcx, rdx"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
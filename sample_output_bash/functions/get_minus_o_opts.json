{
  "address": "0xbcc00",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     edi, 0xe8",
    "mov     rbp, rsp {__saved_rbp}",
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0x8",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xbcc6c",
    "mov     esi, 0xe8",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel o_options]",
    "lea     rdx, [rel data_11f68a]  {\"allexport\"}",
    "lea     rcx, [rax+0x28]  {data_155a28}",
    "mov     eax, 0x1",
    "nop     word [rax+rax]",
    "mov     qword [rbx+rax*8-0x8], rdx",
    "mov     rdx, qword [rcx]",
    "mov     rsi, rax",
    "add     rcx, 0x28",
    "add     rax, 0x1",
    "test    rdx, rdx",
    "jne     0xbcc40",
    "movsxd  rsi, esi",
    "mov     rax, rbx",
    "mov     qword [rbx+rsi*8], 0x0",
    "mov     rbx, qword [rbp-0x8 {__saved_rbx}]",
    "leave    {__saved_rbp}",
    "retn     {__return_addr}"
  ],
  "high level IL": [
    "int64_t result = malloc(0xe8)",
    "if (result == 0)",
    "sub_a7f00()",
    "noreturn",
    "char const* const i = \"allexport\"",
    "char const (** const rcx)[0xc] = &data_155a28",
    "int64_t rax = 1",
    "int32_t rsi_1",
    "*(result + (rax << 3) - 8) = i",
    "i = *rcx",
    "rsi_1 = rax.d",
    "rcx = &rcx[5]",
    "rax += 1",
    "do while (i != 0)",
    "*(result + (sx.q(rsi_1) << 3)) = 0",
    "return result"
  ]
}
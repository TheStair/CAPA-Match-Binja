{
  "address": "0xe4bd0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     edi, dword [rel data_16a634]",
    "mov     rbp, rsp",
    "push    r12",
    "push    rbx",
    "test    edi, edi",
    "jne     0xe4c80",
    "call    rl_end_undo_group",
    "lea     r12, [rel rl_undo_list]",
    "cmp     dword [rel data_168a0c], 0x52",
    "mov     dword [rel data_16a634], 0x0",
    "mov     rax, qword [r12]",
    "je      0xe4ce0",
    "lea     r12, [rel rl_undo_list]",
    "mov     edx, dword [rel data_168a0c]",
    "mov     rax, qword [r12]",
    "test    rax, rax",
    "je      0xe4c1b",
    "test    rax, rax",
    "je      0xe4cf0",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xe4cf0",
    "cmp     edx, 0x43",
    "je      0xe4d48",
    "lea     ecx, [rdx-0x41]",
    "cmp     ecx, 0x28",
    "ja      0xe4c24",
    "mov     esi, dword [rel data_16a638]",
    "test    esi, esi",
    "jle     0xe4cc1",
    "cmp     dword [rax+0x18], 0x3",
    "je      0xe4d59",
    "cmp     dword [rax+0x18], 0x1",
    "jne     0xe4cf0",
    "lea     rbx, [rel _rl_undo_group_level]",
    "call    rl_end_undo_group",
    "jmp     0xe4c2b",
    "lea     rbx, [rel _rl_undo_group_level]",
    "mov     rsi, 0x10100000101",
    "bt      rsi, rcx",
    "jb      0xe4d20",
    "lea     rbx, [rel _rl_undo_group_level]",
    "mov     ecx, dword [rbx]",
    "test    ecx, ecx",
    "jle     0xe4c78  {\"[A\\]\"}",
    "mov     rax, qword [rel data_16a640]",
    "lea     rbx, [rel _rl_undo_group_level]",
    "mov     byte [rax], 0x0",
    "mov     ecx, dword [rbx]",
    "test    ecx, ecx",
    "jle     0xe4c78  {\"[A\\]\"}",
    "mov     eax, dword [rel data_16a630]",
    "test    eax, eax",
    "jle     0xe4cf0",
    "nop     dword [rax+rax]",
    "mov     edi, dword [rax+0x8]",
    "mov     esi, dword [rax+0xc]",
    "sub     esi, edi",
    "add     esi, 0x1",
    "mov     eax, dword [rbx]",
    "test    eax, eax",
    "jle     0xe4c78  {\"[A\\]\"}",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "nop     dword [rax]",
    "cmp     dword [rax+0x18], 0x1",
    "je      0xe4d86",
    "call    rl_end_undo_group",
    "jmp     0xe4c2b",
    "jmp     0xe4cce",
    "lea     rdx, [rel rl_point]",
    "lea     esi, [rax+0x1]",
    "mov     edx, dword [rdx]",
    "mov     edi, edx",
    "sub     edi, eax",
    "add     edi, 0x1",
    "jns     0xe4cbc",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     edx, 0x20",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     rdx, qword [r12]",
    "mov     dword [rax+0x18], 0x3",
    "mov     qword [rax+0x8], 0x0",
    "mov     qword [rax+0x10], 0x0",
    "mov     qword [rax], rdx",
    "mov     qword [r12], rax",
    "mov     eax, dword [rbx]",
    "sub     eax, 0x1",
    "mov     dword [rbx], eax",
    "test    eax, eax",
    "jg      0xe4c38",
    "mov     edi, dword [rax+0x8]",
    "mov     esi, dword [rax+0xc]",
    "sub     esi, edi",
    "add     esi, 0x1",
    "call    sub_dfb60",
    "lea     rbx, [rel _rl_undo_group_level]",
    "jmp     0xe4c2b",
    "mov     edx, dword [rel data_16a638]",
    "test    edx, edx",
    "jle     0xe4c24",
    "call    sub_dfb60",
    "lea     esi, [rdx+0x1]",
    "xor     edi, edi",
    "jmp     0xe4cbc",
    "mov     edi, 0x20",
    "call    malloc",
    "test    rax, rax",
    "je      0xe4da2",
    "mov     rax, qword [rel data_16a640]",
    "mov     byte [rax], 0x0",
    "jmp     0xe4c24"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x4ea00",
  "rules": [
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "encrypt data using Curve25519/7d070d905d0942e295bbb2c9df72fc86",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "decompress data using aPLib/54aa508e15f34aa5847662ea1b5aeb9c",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, r8",
    "push    r14",
    "push    r13",
    "lea     r13, [rbp-0xc0]",
    "push    r12",
    "mov     r12d, edx",
    "push    rbx",
    "mov     rbx, rdi",
    "mov     rdi, r13",
    "sub     rsp, 0x168",
    "mov     dword [rbp-0x158], ecx",
    "mov     dword [rbp-0x154], esi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, r13",
    "call    sigaddset",
    "lea     rax, [rbp-0x140]",
    "mov     r14, rax",
    "mov     rdi, rax",
    "mov     qword [rbp-0x160], rax",
    "call    sigemptyset",
    "mov     rdx, r14",
    "mov     rsi, r13",
    "xor     edi, edi",
    "call    sigprocmask",
    "xor     edx, edx",
    "mov     esi, 0x1",
    "xor     edi, edi",
    "xor     eax, eax",
    "mov     r14d, dword [rbx+0x4]",
    "call    fcntl",
    "mov     dword [rbp-0x17c], eax",
    "lea     rax, [rbp-0x148]",
    "and     r14d, 0x8",
    "mov     qword [rbp-0x168], rax",
    "jmp     0x4ebac",
    "cmp     dword [rbx], 0x6",
    "jne     0x4ee20",
    "lea     rax, [rel last_made_pid]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x168], eax",
    "test    r14d, r14d",
    "je      0x4ee38",
    "mov     rax, qword [rbx+0x18]",
    "test    rax, rax",
    "je      0x4ee20",
    "lea     r13, [rel 0x11fdd7]  {\"lastpipe-exec\"}",
    "mov     rdi, r13",
    "call    begin_unwind_frame",
    "lea     rax, [rel lastpipe_opt]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x4f180",
    "or      dword [rbx+0x4], 0x8",
    "cmp     dword [rax+0x18], 0x7c",
    "jne     0x4ee20",
    "xor     r14d, r14d",
    "mov     r9d, 0xfffffffe",
    "test    r12d, r12d",
    "js      0x4efc0",
    "lea     rax, [rel job_control]",
    "mov     esi, dword [rbp-0x154]",
    "or      esi, dword [rax]",
    "jne     0x4f180",
    "mov     rdi, qword [rbp-0x168]",
    "call    pipe",
    "test    eax, eax",
    "js      0x4f2a0",
    "mov     ecx, dword [rbp-0x158]",
    "mov     rdi, rbx",
    "mov     r8, r15",
    "mov     edx, r12d",
    "mov     esi, dword [rbp-0x154]",
    "mov     dword [rbp-0x170], r9d",
    "call    execute_command_internal",
    "mov     r9d, dword [rbp-0x170]",
    "mov     ebx, eax",
    "test    r9d, r9d",
    "jg      0x4f338",
    "lea     rdx, [rel uwcache]",
    "movsxd  r14, r12d",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0x4f36c",
    "cmp     dword [rbp-0x158], 0xffffffff",
    "jne     0x4f180",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fdb6]  {\"pipe error\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    sys_error",
    "lea     rbx, [rel pipeline_pgrp]",
    "mov     edi, dword [rbx]",
    "test    edi, edi",
    "je      0x4f2d9",
    "mov     eax, dword [rbp-0x148]",
    "mov     edi, dword [r15]",
    "lea     edx, [rax+0x8]",
    "cmp     eax, edi",
    "cmovge  edi, edx",
    "call    new_fd_bitmap",
    "movsxd  rdx, dword [r15]",
    "mov     rsi, qword [r15+0x8]",
    "mov     rdi, qword [rax+0x8]",
    "mov     r13, rax",
    "call    memcpy",
    "mov     rdx, qword [r13+0x8]",
    "movsxd  rax, dword [rbp-0x148]",
    "lea     rdi, [rel data_11fdc1]  {\"pipe-file-descriptors\"}",
    "mov     byte [rdx+rax], 0x1",
    "call    begin_unwind_frame",
    "lea     rdx, [rel uwcache]",
    "mov     edi, dword [rdx+0xc]",
    "test    edi, edi",
    "jle     0x4ecd8",
    "cmp     r9d, 0xffffffff",
    "je      0x4f360",
    "cmp     r9d, 0xffffffff",
    "je      0x4f360",
    "mov     edi, 0x20",
    "call    malloc",
    "test    rax, rax",
    "jne     0x4f1b6",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "test    r12d, r12d",
    "js      0x4f180",
    "lea     rax, [rel already_making_children]",
    "mov     ebx, 0x1",
    "mov     dword [rax], 0x0",
    "call    start_pipeline",
    "mov     rsi, qword [rbp-0x160]",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "lea     rax, [rel last_command_exit_value]",
    "mov     dword [rax], 0x1",
    "call    throw_to_top_level",
    "jmp     0x4f156",
    "lea     rax, [rel shell_pgrp]",
    "cmp     edi, dword [rax]",
    "jne     0x4f388",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x31f19",
    "mov     r8, qword [rdx]",
    "lea     eax, [rdi-0x1]",
    "mov     rsi, qword [rel data_161a50]",
    "movsxd  rcx, eax",
    "mov     dword [rdx+0xc], eax",
    "mov     rcx, qword [r8+rcx*8]",
    "mov     qword [rcx], rsi",
    "lea     rsi, [rel dispose_fd_bitmap]",
    "mov     qword [rcx+0x10], r13",
    "mov     qword [rcx+0x8], rsi",
    "mov     qword [rel data_161a50], rcx",
    "test    eax, eax",
    "je      0x4ed0e",
    "xor     edi, edi",
    "call    close",
    "jmp     0x4effd",
    "mov     edi, r9d",
    "xor     esi, esi",
    "mov     dword [rbp-0x154], r9d",
    "call    dup2",
    "mov     edi, dword [rbp-0x154]",
    "call    close",
    "jmp     0x4effd",
    "mov     rsi, qword [rbp-0x160]",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x4f288",
    "mov     qword [rax+0x10], r14",
    "mov     ecx, dword [rbp-0x158]",
    "mov     rdi, rbx",
    "mov     r8, r15",
    "mov     rdx, qword [rel data_161a50]",
    "mov     esi, dword [rbp-0x154]",
    "xor     r14d, r14d",
    "mov     qword [rax], rdx",
    "mov     rdx, qword [rel close]",
    "mov     qword [rel data_161a50], rax",
    "mov     qword [rax+0x8], rdx",
    "mov     edx, r12d",
    "call    execute_command_internal",
    "mov     edi, r12d",
    "mov     ebx, eax",
    "call    close",
    "jmp     0x4effd",
    "jmp     0x31e89",
    "jle     0x4ee93",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x4f466",
    "mov     esi, 0xf",
    "call    killpg",
    "mov     edi, dword [rbx]",
    "mov     esi, 0x12",
    "call    killpg",
    "jmp     0x4f2d9",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_161a50]",
    "mov     qword [rcx+0x10], r13",
    "mov     qword [rel data_161a50], rcx",
    "mov     qword [rcx], rax",
    "lea     rax, [rel dispose_fd_bitmap]",
    "mov     qword [rcx+0x8], rax",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x170], rcx",
    "call    malloc",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x31e65",
    "lea     eax, [rdi-0x2]",
    "movsxd  rsi, eax",
    "mov     dword [rdx+0xc], eax",
    "mov     rsi, qword [r8+rsi*8]",
    "mov     qword [rsi], rcx",
    "lea     rcx, [rel close_fd_bitmap]",
    "mov     qword [rsi+0x10], r13",
    "mov     qword [rsi+0x8], rcx",
    "mov     qword [rel data_161a50], rsi",
    "test    r12d, r12d",
    "js      0x4eab0",
    "mov     ecx, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    ecx, ecx",
    "jne     0x4f021",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4f278",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, 0xffffffffffffffff",
    "mov     r9d, 0xffffffff",
    "mov     esi, dword [rbp-0x17c]",
    "test    esi, esi",
    "jns     0x4f3a3",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x168",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rcx, qword [rbp-0x170]",
    "mov     qword [rel data_161a50], rsi",
    "mov     qword [rax], rcx",
    "lea     rax, [rel close_fd_bitmap]",
    "mov     qword [rsi+0x10], r13",
    "mov     qword [rsi+0x8], rax",
    "test    r12d, r12d",
    "jns     0x4edc8",
    "movsxd  r8, dword [rbp-0x144]",
    "test    eax, eax",
    "je      0x4ed57",
    "movsxd  r9, r12d",
    "test    eax, eax",
    "je      0x4edcb",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0x4f032",
    "test    r14d, r14d",
    "je      0x4f144",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x178], rdx",
    "mov     dword [rbp-0x170], r9d",
    "call    malloc",
    "test    rax, rax",
    "je      0x31ead",
    "sub     eax, 0x1",
    "mov     rcx, qword [r14]",
    "mov     dword [r14+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "mov     edx, 0xffffffff",
    "mov     esi, 0x1",
    "xor     edi, edi",
    "call    move_to_high_fd",
    "mov     r9d, eax",
    "test    eax, eax",
    "jg      0x4f441",
    "movsxd  r9, r12d",
    "movsxd  r8, dword [rbp-0x144]",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x170], r8",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x31f61",
    "mov     rdi, qword [rdx]",
    "lea     esi, [rax-0x1]",
    "mov     r9, qword [rel data_161a50]",
    "movsxd  rcx, esi",
    "mov     dword [rdx+0xc], esi",
    "mov     rcx, qword [rdi+rcx*8]",
    "mov     qword [rcx], r9",
    "mov     r9, qword [rel close]",
    "mov     qword [rcx+0x10], r8",
    "mov     qword [rcx+0x8], r9",
    "mov     qword [rel data_161a50], rcx",
    "test    esi, esi",
    "je      0x4ed9b",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x178], r9",
    "mov     qword [rbp-0x170], rsi",
    "call    malloc",
    "test    rax, rax",
    "je      0x31ef5",
    "lea     eax, [rdi-0x3]",
    "movsxd  rcx, eax",
    "mov     dword [rdx+0xc], eax",
    "mov     rcx, qword [r8+rcx*8]",
    "mov     qword [rcx], rsi",
    "mov     rsi, qword [rel close]",
    "mov     qword [rcx+0x10], r9",
    "mov     qword [rcx+0x8], rsi",
    "mov     qword [rel data_161a50], rcx",
    "jmp     0x4eab0",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0x4f156",
    "movsxd  rax, dword [rbp-0x180]",
    "test    eax, eax",
    "js      0x4f240",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r9d, dword [rbp-0x170]",
    "mov     rdx, qword [rbp-0x178]",
    "jmp     0x4eeec",
    "mov     edi, 0x20",
    "mov     dword [rbp-0x170], r9d",
    "call    malloc",
    "test    rax, rax",
    "je      0x31ed1",
    "sub     eax, 0x1",
    "mov     rdx, qword [r14]",
    "mov     dword [r14+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rdx+rax*8]",
    "movsxd  rdx, r9d",
    "jmp     0x4eea0",
    "cmp     eax, 0xffffffff",
    "je      0x4f441",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, qword [rbp-0x170]",
    "mov     r9, qword [rbp-0x178]",
    "mov     qword [rel data_161a50], rax",
    "mov     rdx, qword [rel close]",
    "movsxd  r8, dword [rbp-0x144]",
    "mov     qword [rax], rsi",
    "mov     qword [rax+0x8], rdx",
    "mov     qword [rax+0x10], r9",
    "jmp     0x4ed57",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_161a50]",
    "mov     r8, qword [rbp-0x170]",
    "mov     qword [rel data_161a50], rcx",
    "mov     qword [rcx], rax",
    "mov     rax, qword [rel close]",
    "mov     qword [rcx+0x10], r8",
    "mov     qword [rcx+0x8], rax",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x170], rcx",
    "call    malloc",
    "test    rax, rax",
    "je      0x31f3d",
    "sub     eax, 0x2",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rdi+rax*8]",
    "mov     rdi, r13",
    "call    sub_113da0",
    "mov     edi, dword [rbp-0x168]",
    "xor     esi, esi",
    "call    wait_for_single_pid",
    "mov     edx, 0x7f",
    "cmp     eax, 0x101",
    "cmovge  eax, edx",
    "lea     r12, [rel js]",
    "cmp     dword [r12+0x1c], eax",
    "jle     0x4f208",
    "mov     rcx, qword [rel data_161a50]",
    "lea     rsi, [rel sub_41130]",
    "mov     qword [rax+0x10], rdx",
    "xor     edi, edi",
    "mov     qword [rax+0x8], rsi",
    "movsxd  r12, dword [rel data_160908]",
    "xor     esi, esi",
    "mov     qword [rax], rcx",
    "mov     dword [rbp-0x170], r9d",
    "mov     qword [rel data_161a50], rax",
    "mov     dword [rbp-0x184], r12d",
    "mov     dword [rel data_160908], 0x1",
    "call    stop_pipeline",
    "mov     r9d, dword [rbp-0x170]",
    "mov     dword [rbp-0x180], eax",
    "mov     eax, dword [r14+0xc]",
    "test    eax, eax",
    "jle     0x4f41b",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r9d, dword [rbp-0x170]",
    "jmp     0x4ef5d",
    "mov     r14d, 0x1",
    "mov     r12d, 0xffffffff",
    "nop     word [rax+rax]",
    "or      dword [rbx+0x4], 0x2000",
    "mov     esi, 0xffffffff",
    "mov     edi, r12d",
    "mov     qword [rbp-0x178], rdx",
    "mov     dword [rbp-0x170], r9d",
    "call    sub_51420",
    "lea     r14, [rel uwcache]",
    "mov     r9d, dword [rbp-0x170]",
    "mov     rdx, qword [rbp-0x178]",
    "mov     eax, dword [r14+0xc]",
    "test    eax, eax",
    "jle     0x4f3e7",
    "test    rbx, rbx",
    "je      0x4f192",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rcx, qword [rbp-0x170]",
    "jmp     0x4eb03",
    "mov     ecx, dword [rbp-0x144]",
    "mov     esi, dword [rbp-0x154]",
    "mov     r8, r13",
    "mov     edx, r12d",
    "call    execute_command_internal",
    "test    r12d, r12d",
    "js      0x4eb5d",
    "test    rdi, rdi",
    "je      0x4eb39",
    "mov     eax, dword [rbp-0x184]",
    "mov     dword [rel data_160908], eax",
    "or      ebx, eax",
    "jmp     0x4f138",
    "mov     edi, dword [rbp-0x168]",
    "xor     esi, esi",
    "call    wait_for_single_pid",
    "cmp     eax, 0x100",
    "jle     0x4f0e6",
    "lea     rdx, [rel jobs]",
    "mov     rdx, qword [rdx]",
    "cmp     qword [rdx+rax*8], 0x0",
    "je      0x4f208",
    "mov     rdx, qword [rel data_161a50]",
    "lea     rsi, [rel sub_40fb0]",
    "mov     qword [rax+0x10], r12",
    "mov     edi, 0x2",
    "mov     qword [rax+0x8], rsi",
    "mov     rsi, qword [rbp-0x160]",
    "mov     qword [rax], rdx",
    "xor     edx, edx",
    "mov     dword [rbp-0x170], r9d",
    "mov     qword [rel data_161a50], rax",
    "call    sigprocmask",
    "test    rbx, rbx",
    "mov     r9d, dword [rbp-0x170]",
    "je      0x4efaa",
    "or      dword [rbx+0x4], 0x2000",
    "jmp     0x4f192",
    "lea     rdx, [rel sub_41370]",
    "mov     qword [rax], rcx",
    "mov     qword [rax+0x8], rdx",
    "mov     rdx, qword [rbp-0x160]",
    "mov     qword [rel data_161a50], rax",
    "mov     qword [rax+0x10], rdx",
    "mov     rax, qword [rbx+0x18]",
    "mov     rdi, qword [rax+0x8]",
    "test    r14d, r14d",
    "je      0x4eb39",
    "mov     edi, dword [rbp-0x144]",
    "mov     r12d, dword [rbp-0x148]",
    "call    close",
    "mov     rdi, qword [r13+0x8]",
    "test    rdi, rdi",
    "je      0x4eb7d",
    "mov     edi, r12d",
    "call    close",
    "or      dword [rdi+0x4], 0x8",
    "mov     edi, dword [rbp-0x180]",
    "cmp     dword [r12+0x1c], edi",
    "jle     0x4f25a",
    "mov     edi, dword [rbp-0x180]",
    "mov     eax, 0x7f",
    "cmp     dword [r12+0x1c], edi",
    "jle     0x4f25a",
    "lea     rax, [rel dollar_dollar_pid]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x154], eax",
    "lea     rax, [rel the_printed_command_except_trap]",
    "mov     r14, qword [rax]",
    "mov     rdi, r14",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x160], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x160]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x4f449",
    "mov     rdi, r13",
    "call    free",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0x4eb9b",
    "call    free",
    "lea     rdx, [rel pipefail_opt]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "je      0x4f138",
    "lea     rcx, [rel jobs]",
    "movsxd  rdx, edi",
    "mov     rcx, qword [rcx]",
    "cmp     qword [rcx+rdx*8], 0x0",
    "je      0x4f25a",
    "jmp     0x4f0f7",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r14",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "mov     esi, dword [rbp-0x154]",
    "mov     rdi, r15",
    "mov     edx, ebx",
    "mov     ecx, dword [rbp-0x180]",
    "call    append_process",
    "mov     edi, dword [rbp-0x168]",
    "xor     esi, esi",
    "call    wait_for",
    "mov     rax, qword [rbx+0x18]",
    "mov     rbx, qword [rax+0x10]",
    "test    rbx, rbx",
    "je      0x4f320",
    "lea     rdi, [rel data_11fdc1]  {\"pipe-file-descriptors\"}",
    "call    sub_113da0",
    "call    sub_66750",
    "mov     edx, eax",
    "and     edx, 0x7f",
    "add     edx, 0x1",
    "cmp     dl, 0x1",
    "jg      0x4f3d9",
    "lea     rax, [rel last_made_pid]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x168], eax",
    "jmp     0x4ee38",
    "and     eax, 0x7f",
    "lea     ebx, [rax+0x80]",
    "jmp     0x4f138",
    "movzx   ebx, ah",
    "cmp     al, 0x7f",
    "mov     eax, 0x0",
    "cmove   ebx, eax",
    "nop     word [rax+rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
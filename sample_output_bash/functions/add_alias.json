{
  "address": "0x8b630",
  "rules": [
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "mov     rbx, rsi",
    "sub     rsp, 0x18",
    "lea     r15, [rel aliases]",
    "mov     rsi, qword [r15]",
    "test    rsi, rsi",
    "je      0x8b6f8",
    "mov     edi, 0x40",
    "call    hash_create",
    "mov     qword [r15], rax",
    "xor     edx, edx",
    "call    hash_search",
    "test    rax, rax",
    "je      0x8b705",
    "mov     esi, 0x18",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x8b83d",
    "mov     edi, 0x18",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x8b85b",
    "mov     r13, qword [rax+0x10]",
    "test    r13, r13",
    "je      0x8b705",
    "mov     qword [rbp-0x38], rax",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, rcx",
    "mov     rdx, r14",
    "mov     rsi, r12",
    "call    __strcpy_chk",
    "mov     rdi, rbx",
    "mov     qword [r13], rax",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x8b809",
    "mov     rdi, qword [r13+0x8]",
    "call    free",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x8b873",
    "mov     qword [rbp-0x38], rax",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r14",
    "mov     rsi, rbx",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "cmp     byte [rbx], 0x0",
    "mov     byte [r13+0x10], 0x0",
    "mov     qword [r13+0x8], rax",
    "jne     0x8b7e8",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r14",
    "call    __strcpy_chk",
    "movzx   r12d, byte [r13+0x10]",
    "mov     qword [r13+0x8], r14",
    "and     r12d, 0xfffffffe",
    "mov     byte [r13+0x10], r12b",
    "cmp     byte [rbx], 0x0",
    "je      0x8b7d4",
    "mov     rdi, rbx",
    "call    strlen",
    "movsx   eax, byte [rbx+rax-0x1]",
    "cmp     eax, 0x20",
    "je      0x8b7ff",
    "mov     rdi, r12",
    "mov     r14, qword [r15]",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x8b827",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, rbx",
    "call    strlen",
    "movsx   eax, byte [rbx+rax-0x1]",
    "cmp     eax, 0x20",
    "je      0x8b6e7",
    "mov     byte [r13+0x10], 0x1",
    "jmp     0x8b789",
    "cmp     eax, 0x9",
    "jne     0x8b789",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "mov     rdi, r15",
    "mov     edx, 0x1",
    "mov     rsi, r14",
    "call    hash_insert",
    "mov     qword [rax+0x10], r13",
    "lea     rax, [rel it_aliases]",
    "or      dword [rax], 0x2",
    "or      r12d, 0x1",
    "mov     byte [r13+0x10], r12b",
    "jmp     0x8b7d4",
    "cmp     eax, 0x9",
    "jne     0x8b7d4"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
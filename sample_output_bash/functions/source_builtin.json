{
  "address": "0xc4120",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "lea     rsi, [rel data_122e02]",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     rbx, [rel loptend]",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rel data_168d30], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rbx], 0x0",
    "mov     qword [rax], 0x0",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xc41a0",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "je      0xc45c0",
    "cmp     eax, 0xffffff9d",
    "je      0xc4530",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_12188d]  {\"filename argument required\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xc4180",
    "mov     rax, qword [rbx+0x8]",
    "mov     r12, qword [rax]",
    "lea     rax, [rel restricted]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "jne     0xc4368",
    "call    builtin_help",
    "jmp     0xc4185",
    "call    builtin_usage",
    "mov     esi, 0x2f",
    "mov     rdi, r12",
    "call    strchr",
    "test    rax, rax",
    "jne     0xc4540",
    "lea     rax, [rel posixly_correct]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "je      0xc437e",
    "mov     eax, 0x102",
    "mov     rdi, r12",
    "call    sh_restricted",
    "jmp     0xc441a",
    "mov     rdi, r12",
    "call    absolute_pathname",
    "test    eax, eax",
    "jne     0xc41ef",
    "mov     esi, 0x2f",
    "mov     rdi, r12",
    "call    strchr",
    "test    rax, rax",
    "je      0xc437e",
    "mov     eax, 0x1",
    "jmp     0xc418a",
    "mov     rdi, r12",
    "lea     rax, [rel source_uses_path]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "jne     0xc4428",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rdx, r13",
    "mov     rdi, r14",
    "mov     r12, r14",
    "call    __strcpy_chk",
    "mov     rdi, r12",
    "mov     esi, 0x40",
    "call    sub_a9b40",
    "mov     r12, rax",
    "test    rax, rax",
    "jne     0xc4220",
    "lea     rax, [rel source_searches_cwd]",
    "mov     rdi, r12",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "jne     0xc41f2",
    "mov     edi, 0x20",
    "call    malloc",
    "test    rax, rax",
    "jne     0xc4252",
    "sub     eax, 0x1",
    "mov     rdx, qword [r15]",
    "mov     dword [r15+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rdx+rax*8]",
    "lea     r13, [rel data_11f4ab]  {\"source\"}",
    "mov     rdi, r13",
    "call    begin_unwind_frame",
    "lea     r15, [rel uwcache]",
    "mov     eax, dword [r15+0xc]",
    "test    eax, eax",
    "jle     0xc4550",
    "mov     rax, qword [rbx+0x8]",
    "mov     r12, qword [rax]",
    "jmp     0xc43a1",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xc4670",
    "call    ansic_shouldquote",
    "test    eax, eax",
    "jne     0xc45e8",
    "mov     rdx, qword [rel data_161a50]",
    "lea     rcx, [rel xfree]",
    "mov     qword [rax+0x10], r12",
    "mov     qword [rax], rdx",
    "mov     qword [rax+0x8], rcx",
    "cmp     qword [rbx], 0x0",
    "mov     qword [rel data_161a50], rax",
    "je      0xc4310",
    "jmp     0x324b8",
    "mov     dword [rel data_166ee8], 0x0",
    "mov     eax, dword [rel data_1612a4]",
    "test    al, 0x1",
    "jne     0xc4450",
    "call    push_dollar_vars",
    "mov     eax, dword [r15+0xc]",
    "test    eax, eax",
    "jle     0xc4570",
    "test    r12, r12",
    "je      0xc43c4",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1218a8]  {\"%s: file not found\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     rax, qword [rbx+0x8]",
    "cmp     qword [rax], r12",
    "je      0xc43f5",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "test    al, 0x40",
    "jne     0xc4328",
    "xor     esi, esi",
    "cmp     qword [rbx], 0x0",
    "mov     rdi, r12",
    "setne   sil",
    "call    source_file",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0xc418a",
    "mov     edi, 0x20",
    "call    malloc",
    "test    rax, rax",
    "jne     0xc429d",
    "sub     eax, 0x1",
    "mov     rdx, qword [r15]",
    "mov     dword [r15+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rdx+rax*8]",
    "cmp     byte [r12], 0x0",
    "je      0xc460a",
    "lea     rax, [rel posixly_correct]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0xc441a",
    "mov     rdi, r12",
    "call    free",
    "lea     rax, [rel trap_list]",
    "mov     r14, qword [rax+0x208]",
    "test    r14, r14",
    "je      0xc4328",
    "mov     rdi, r13",
    "mov     dword [rbp-0x38], eax",
    "call    sub_113ed0",
    "mov     eax, dword [rbp-0x38]",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     r14, [rel debugging_mode]",
    "mov     rdx, qword [rel data_161a50]",
    "lea     rcx, [rel sub_c4090]",
    "mov     qword [rax+0x10], 0x0",
    "mov     qword [rax+0x8], rcx",
    "mov     esi, dword [r14]",
    "mov     qword [rax], rdx",
    "mov     qword [rel data_161a50], rax",
    "test    esi, esi",
    "jne     0xc42db",
    "jmp     0x324b8",
    "lea     rax, [rel bash_argv_initialized]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0xc4590",
    "lea     rax, [rel shell_compatibility_level]",
    "cmp     dword [rax], 0x2c",
    "jg      0xc42ec",
    "xor     r12d, r12d",
    "jmp     0xc43c4",
    "mov     rdi, r12",
    "xor     esi, esi",
    "call    sub_d80c0",
    "mov     r12, rax",
    "jmp     0xc43c4",
    "lea     rax, [rel interactive_shell]",
    "lea     rdx, [rel executing_command_builtin]",
    "mov     eax, dword [rax]",
    "or      eax, dword [rdx]",
    "je      0xc46a8",
    "lea     rax, [rel function_trace_mode]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xc4328",
    "call    list_rest_of_args",
    "mov     rdi, rax",
    "mov     qword [rbp-0x38], rax",
    "call    push_args",
    "mov     rdi, qword [rbp-0x38]",
    "call    dispose_words",
    "lea     rax, [rel bash_argv_initialized]",
    "mov     dword [rax], 0x1",
    "jmp     0xc42ec",
    "mov     rdi, qword [rbx]",
    "mov     esi, 0x1",
    "call    remember_args",
    "mov     edx, dword [r14]",
    "test    edx, edx",
    "je      0xc4310",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edi, 0x3",
    "mov     dword [rax], 0x1",
    "call    jump_to_top_level",
    "{ Does not return }",
    "mov     rdi, r14",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x38], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     r8, rax",
    "je      0xc4686",
    "mov     rdi, qword [rbx]",
    "call    push_args",
    "nop     dword [rax+rax]",
    "mov     qword [rbp-0x40], rax",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r14",
    "mov     rdi, r8",
    "call    __strcpy_chk",
    "mov     rcx, rax",
    "mov     eax, dword [r15+0xc]",
    "test    eax, eax",
    "jle     0xc4612",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x38], rcx",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x324b8",
    "mov     rsi, qword [r15]",
    "lea     edx, [rax-0x1]",
    "movsxd  rdi, edx",
    "mov     dword [r15+0xc], edx",
    "mov     r14, qword [rsi+rdi*8]",
    "mov     rdi, qword [rel data_161a50]",
    "mov     qword [r14], rdi",
    "lea     rdi, [rel xfree]",
    "mov     qword [r14+0x10], rcx",
    "mov     qword [r14+0x8], rdi",
    "mov     qword [rel data_161a50], r14",
    "test    edx, edx",
    "je      0xc4650",
    "mov     rax, qword [rel data_161a50]",
    "mov     rcx, qword [rbp-0x38]",
    "mov     qword [rel data_161a50], r14",
    "mov     qword [r14], rax",
    "lea     rax, [rel xfree]",
    "mov     qword [r14+0x10], rcx",
    "mov     qword [r14+0x8], rax",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x38], rcx",
    "call    malloc",
    "test    rax, rax",
    "je      0x324b8",
    "sub     eax, 0x2",
    "mov     dword [r15+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rsi+rax*8]",
    "mov     rcx, qword [rbp-0x38]",
    "jmp     0xc4508",
    "lea     rdx, [rel maybe_set_debug_trap]",
    "mov     qword [rax], r14",
    "mov     edi, 0x41",
    "mov     qword [rax+0x10], rcx",
    "mov     qword [rax+0x8], rdx",
    "mov     qword [rel data_161a50], rax",
    "call    restore_default_signal",
    "jmp     0xc4328"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
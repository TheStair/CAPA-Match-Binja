{
  "address": "0xbcf90",
  "rules": [
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "parse credit card information/c65156d6503b4b6d844d6d07c3ef83fd",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdi",
    "push    r14",
    "push    r13",
    "lea     r13, [rel data_1216a1]",
    "push    r12",
    "lea     r12, [rel data_12169c]  {\"agou\"}",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     dword [rbp-0x38], esi",
    "nop     dword [rax]",
    "xor     r14d, r14d",
    "xor     ebx, ebx",
    "jmp     0xbcfe7",
    "add     rsp, 0x18",
    "mov     eax, 0xffffffff",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r12",
    "call    mbschr",
    "mov     rcx, r15",
    "add     r15, 0x1",
    "test    rax, rax",
    "je      0xbd060",
    "movzx   eax, byte [rcx]",
    "mov     byte [rbp-0x32], al",
    "cmp     al, 0x3d",
    "ja      0xbd1e4",
    "movzx   eax, byte [r15-0x1]",
    "cmp     al, 0x6f",
    "je      0xbd048",
    "movsx   r14d, byte [rbp-0x32]",
    "jmp     0xbd01f",
    "mov     rdx, 0x2000280000000000",
    "bt      rdx, rax",
    "setb    byte [rbp-0x31]",
    "movzx   eax, byte [rbp-0x31]",
    "test    al, al",
    "je      0xbd1e4",
    "or      ebx, 0x7",
    "jmp     0xbcfde",
    "jle     0xbcfd0",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_134250]  {\"`%c': invalid symbolic mode oper\u2026\"}",
    "call    dcgettext",
    "mov     esi, r14d",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xbd16e",
    "movsx   esi, byte [rcx+0x1]",
    "xor     r14d, r14d",
    "test    sil, sil",
    "jne     0xbd0b8",
    "movsx   esi, byte [r15]",
    "test    sil, sil",
    "je      0xbd01c",
    "cmp     al, 0x61",
    "je      0xbd050",
    "mov     ecx, ebx",
    "movsx   esi, byte [r15]",
    "or      ecx, 0x1c0",
    "cmp     al, 0x75",
    "cmove   ebx, ecx",
    "test    sil, sil",
    "jne     0xbcfe7",
    "mov     rdi, r13",
    "call    mbschr",
    "test    rax, rax",
    "je      0xbd130",
    "jmp     0xbd0e8",
    "mov     ebx, 0x1ff",
    "jmp     0xbcfde",
    "mov     ecx, ebx",
    "or      ecx, 0x38",
    "cmp     al, 0x67",
    "cmove   ebx, ecx",
    "movzx   r8d, byte [r15]",
    "test    r8b, r8b",
    "sete    byte [rbp-0x31]",
    "movzx   eax, byte [rbp-0x31]",
    "cmp     r8b, 0x2c",
    "je      0xbd0e8",
    "movzx   eax, byte [r15]",
    "add     r15, 0x1",
    "cmp     al, 0x77",
    "je      0xbd128",
    "test    ebx, ebx",
    "je      0xbd188",
    "test    al, al",
    "jne     0xbd0e8",
    "or      r14b, 0x92",
    "jmp     0xbd0af",
    "cmp     al, 0x78",
    "jne     0xbd0a0",
    "movzx   eax, byte [rbp-0x32]",
    "cmp     al, 0x2d",
    "je      0xbd1d0",
    "movzx   eax, byte [rbp-0x32]",
    "and     r14d, ebx",
    "cmp     al, 0x2d",
    "je      0xbd1d0",
    "lea     rsi, [rel data_134278]  {\"`%c': invalid symbolic mode char\u2026\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "mov     byte [rbp-0x31], r8b",
    "call    dcgettext",
    "movsx   esi, byte [rbp-0x31]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "movsx   esi, byte [r15]",
    "test    sil, sil",
    "je      0xbd0e8",
    "mov     esi, r14d",
    "or      esi, 0x124",
    "cmp     al, 0x72",
    "cmove   r14d, esi",
    "movsx   esi, byte [r15]",
    "or      r14d, 0x49",
    "test    sil, sil",
    "jne     0xbd0b8",
    "mov     ecx, r14d",
    "not     ecx",
    "and     dword [rbp-0x38], ecx",
    "jmp     0xbd10f",
    "cmp     al, 0x3d",
    "jne     0xbd107",
    "cmp     al, 0x3d",
    "je      0xbd1e0",
    "nop     word [rax+rax]",
    "cmp     byte [rbp-0x31], 0x0",
    "jne     0xbd1b4",
    "cmp     al, 0x2b",
    "jne     0xbd10f",
    "mov     ebx, 0xfffffe00",
    "not     ebx",
    "jmp     0xbd19d",
    "mov     eax, dword [rbp-0x38]",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "add     r15, 0x1",
    "jmp     0xbcfc0",
    "or      dword [rbp-0x38], r14d",
    "mov     eax, dword [rbp-0x38]",
    "and     eax, ebx",
    "mov     ebx, eax",
    "or      ebx, r14d",
    "cmp     byte [rbp-0x31], 0x0",
    "mov     dword [rbp-0x38], ebx",
    "je      0xbd119",
    "movsx   esi, byte [r15]",
    "test    sil, sil",
    "je      0xbd01c"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
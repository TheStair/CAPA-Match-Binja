{
  "address": "0x3fee0",
  "rules": [
    "write file on Linux",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x20",
    "lea     rax, [rel indirection_level]",
    "mov     qword [rbp-0x18], 0x0",
    "mov     esi, dword [rax]",
    "lea     ecx, [rsi+0x1]",
    "mov     dword [rax], ecx",
    "lea     rax, [rel just_one_command]",
    "mov     dword [rbp-0x24], ecx",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x401e0",
    "cmp     dword [rel data_161060], 0xa",
    "jne     0x3ff19",
    "lea     rax, [rel EOF_Reached]",
    "mov     eax, dword [rax]",
    "mov     dword [rel data_161060], 0x0",
    "jmp     0x3ff19",
    "lea     rdi, [rel top_level]",
    "xor     esi, esi",
    "call    __sigsetjmp",
    "endbr64 ",
    "mov     ebx, eax",
    "mov     eax, dword [rel data_161064]",
    "test    eax, eax",
    "je      0x3ff6b",
    "lea     rax, [rel indirection_level]",
    "sub     dword [rax], 0x1",
    "lea     rax, [rel last_command_exit_value]",
    "mov     eax, dword [rax]",
    "add     rsp, 0x20",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "lea     rax, [rel interactive_shell]",
    "mov     r12d, dword [rax]",
    "test    r12d, r12d",
    "jne     0x40200",
    "call    sub_875b0",
    "test    byte [rel data_1611a4+4], 0x41",
    "jne     0x3ff7e",
    "test    ebx, ebx",
    "je      0x40008",
    "lea     rsi, [rel sigint_sighandler]",
    "mov     edi, 0x2",
    "call    set_signal_handler",
    "jmp     0x3ff7e",
    "lea     rax, [rel executing]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel temporary_env]",
    "cmp     qword [rax], 0x0",
    "je      0x40042",
    "lea     rax, [rel indirection_level]",
    "mov     edx, dword [rbp-0x24]",
    "mov     dword [rax], edx",
    "cmp     ebx, 0x6",
    "ja      0x40228",
    "call    read_command",
    "test    eax, eax",
    "jne     0x40130",
    "lea     rdi, [rel sub_5d790]",
    "call    sub_5c040",
    "lea     rax, [rel array_needs_making]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "je      0x40042",
    "{Case 0x0, 0x5}",
    "xor     ecx, ecx",
    "mov     edx, ebx",
    "lea     rdi, [rel data_11f1d0]  {\"reader_loop\"}",
    "mov     esi, 0x3",
    "call    command_error",
    "{ Does not return }",
    "lea     rdx, [rel jump_table_13503c]",
    "mov     eax, ebx",
    "movsxd  rax, dword [rdx+rax*4]",
    "add     rax, rdx",
    "jmp     rax",
    "lea     rax, [rel interactive]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x401b5",
    "lea     rax, [rel interactive_shell]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "jne     0x4006f",
    "call    sub_5ea30",
    "{Case 0x2}",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x40290",
    "{Case 0x4}",
    "lea     rax, [rel exit_immediately_on_error]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0x40168",
    "{Case 0x1, 0x3, 0x6}",
    "lea     rax, [rel EOF_Reached]",
    "mov     qword [rbp-0x18], 0x0",
    "mov     dword [rax], 0xffffffff",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x40119",
    "lea     rax, [rel just_one_command]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "lea     rax, [rel EOF_Reached]",
    "jne     0x401d0",
    "lea     rax, [rel EOF_Reached]",
    "mov     dword [rax], 0xffffffff",
    "jmp     0x401b5",
    "lea     rdx, [rel global_command]",
    "mov     rax, qword [rdx]",
    "mov     qword [rbp-0x18], rax",
    "test    rax, rax",
    "je      0x401b5",
    "lea     rax, [rel read_but_dont_execute]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "jne     0x40250",
    "mov     esi, 0x1",
    "mov     dword [rax], 0x1",
    "lea     rdi, [rel data_158490]",
    "mov     dword [rel data_158490], 0x1",
    "call    set_pipestatus_array",
    "jmp     0x3ffc1",
    "lea     rax, [rel subshell_environment]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "jne     0x40168",
    "call    reset_local_contexts",
    "nop     dword [rax]",
    "mov     ecx, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    ecx, ecx",
    "jne     0x4018a",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x40240",
    "mov     dword [rax], 0xffffffff",
    "mov     eax, 0xffffffff",
    "jmp     0x3ff22",
    "mov     eax, dword [rax]",
    "jmp     0x3ff22",
    "lea     rax, [rel interactive]",
    "mov     qword [rdx], 0x0",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x400df",
    "lea     rdx, [rel last_command_exit_value]",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_158490]",
    "mov     eax, dword [rdx]",
    "mov     dword [rdx], eax",
    "mov     dword [rel data_158490], eax",
    "call    set_pipestatus_array",
    "lea     rbx, [rel global_command]",
    "mov     rdi, qword [rbx]",
    "call    dispose_command",
    "mov     qword [rbx], 0x0",
    "jmp     0x401b5",
    "mov     rax, qword [rbp-0x18]",
    "test    rax, rax",
    "je      0x3ffee",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0x4019b",
    "mov     rax, qword [rbp-0x18]",
    "test    rax, rax",
    "je      0x401b5",
    "test    eax, eax",
    "je      0x3ff48",
    "lea     rax, [rel current_command_number]",
    "mov     rdi, qword [rbp-0x18]",
    "add     dword [rax], 0x1",
    "lea     rax, [rel executing]",
    "mov     dword [rax], 0x1",
    "lea     rax, [rel stdin_redir]",
    "mov     dword [rax], 0x0",
    "call    execute_command",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x4018a",
    "lea     rax, [rel ps0_prompt]",
    "mov     rdi, qword [rax]",
    "test    rdi, rdi",
    "je      0x400df",
    "lea     rsi, [rel top_level_mask]",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "nop     dword [rax]",
    "mov     rdi, qword [rbp-0x18]",
    "call    dispose_command",
    "mov     qword [rbp-0x18], 0x0",
    "mov     rdi, qword [rbp-0x18]",
    "call    dispose_command",
    "mov     qword [rbp-0x18], 0x0",
    "call    decode_prompt_string",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x400d7",
    "mov     rdi, rbx",
    "call    free",
    "cmp     byte [rax], 0x0",
    "je      0x400d7",
    "mov     r12, qword [rel stderr]",
    "mov     rdi, rax",
    "mov     rsi, qword [r12]",
    "call    fputs",
    "mov     rdi, qword [r12]",
    "call    fflush"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
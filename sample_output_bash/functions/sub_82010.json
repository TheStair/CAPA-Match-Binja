{
  "address": "0x82010",
  "rules": [
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/4f0637c1ae9b445ca3ec93a4b4e0bb6d",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/9710d9ee76a4466b954966f2a98c40ba",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/bee29d5f30484915bb6e92fdf1038d2c",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "encrypt data using HC-128/e8f9b1d76e624bf6b554df630e614cdc",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/bfdff12b2adb42709a78f0e77631902b",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/af1fc90a7adf4a2ea648cfac1c599984",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "hash data using aphash/416ed7212e694999bd9567d4aa818bae",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/2602c80a9b3846b9ae92e2e83b13e866",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/0ca7235c9c5c4809bc0188a71b737109"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rcx",
    "mov     rcx, r8",
    "push    r14",
    "mov     r14, rsi",
    "mov     r8, r9",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x78",
    "mov     dword [rbp-0x70], edx",
    "mov     edx, dword [rsi]",
    "mov     r11, qword [rbp+0x10]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     eax, [rdx+0x1]",
    "movsxd  r13, eax",
    "mov     dword [rbp-0x68], eax",
    "add     r13, rdi",
    "mov     dword [rbp-0x4c], eax",
    "movzx   esi, byte [r13]",
    "lea     eax, [rsi-0x21]",
    "cmp     al, 0x5a",
    "ja      0x82080",
    "{Case 0x1, 0x4-0x6, 0x8, 0xa-0xb, 0xd-0xe, 0x19-0x1d, 0x20-0x39, 0x3b-0x59}",
    "mov     eax, dword [rbp-0x68]",
    "mov     qword [rbp-0x90], r8",
    "mov     r13d, esi",
    "mov     qword [rbp-0x88], rcx",
    "mov     dword [rbp-0x80], r10d",
    "mov     dword [rbp-0x78], edx",
    "mov     dword [rbp-0x50], eax",
    "test    sil, sil",
    "je      0x8275e",
    "lea     rdi, [rel jump_table_136c1c]",
    "movzx   eax, al",
    "movsxd  rax, dword [rdi+rax*4]",
    "add     rax, rdi",
    "jmp     rax",
    "mov     edi, 0x2",
    "call    malloc",
    "mov     r9, rax",
    "test    rax, rax",
    "je      0x83402",
    "call    __ctype_b_loc",
    "mov     edx, dword [rbp-0x78]",
    "mov     r10d, dword [rbp-0x80]",
    "mov     rcx, qword [rbp-0x88]",
    "mov     r8, qword [rbp-0x90]",
    "add     edx, 0x2",
    "mov     rsi, qword [rax]",
    "xor     eax, eax",
    "movsxd  rdx, edx",
    "nop     dword [rax]",
    "{Case 0xf-0x18}",
    "movsx   eax, sil",
    "lea     rdx, [rel dollar_vars]",
    "sub     eax, 0x30",
    "cdqe    ",
    "mov     r9, qword [rdx+rax*8]",
    "lea     rax, [rel unbound_vars_is_error]",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "je      0x827a0",
    "{Case 0x5a}",
    "mov     edx, dword [rbp-0x70]",
    "mov     r9, rcx",
    "mov     ecx, dword [rbp+0x18]",
    "lea     rsi, [rbp-0x4c]",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x78], r11",
    "mov     qword [rbp-0x68], r8",
    "call    sub_7e450",
    "lea     rdx, [rel data_168580]",
    "cmp     rax, rdx",
    "je      0x82290",
    "{Case 0x1f}",
    "mov     qword [rbp-0x78], rcx",
    "mov     qword [rbp-0x80], r9",
    "call    list_rest_of_args",
    "mov     rcx, qword [rbp-0x78]",
    "mov     r8, qword [rbp-0x80]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x826a8",
    "{Case 0x2}",
    "lea     rax, [rel posparam_count]",
    "xor     ebx, ebx",
    "movsxd  rdi, dword [rax]",
    "call    itos",
    "mov     r9, rax",
    "nop     dword [rax]",
    "{Case 0x3}",
    "lea     rax, [rel dollar_dollar_pid]",
    "xor     ebx, ebx",
    "movsxd  rdi, dword [rax]",
    "call    itos",
    "mov     r9, rax",
    "jmp     0x82398",
    "{Case 0x0}",
    "lea     rax, [rel last_asynchronous_pid]",
    "mov     edx, dword [rax]",
    "cmp     edx, 0xffffffff",
    "jne     0x82810",
    "{Case 0x3a}",
    "add     edx, 0x2",
    "lea     rsi, [rbp-0x50]",
    "xor     r9d, r9d",
    "mov     rdi, rbx",
    "mov     dword [rbp-0x50], edx",
    "lea     r8, [rel data_11f503[9]]  {\"]\"}",
    "lea     rcx, [rel data_122124]",
    "lea     rdx, [rel data_120647]",
    "call    sub_6f880",
    "mov     r12d, dword [rbp-0x50]",
    "mov     r13, rax",
    "mov     dword [rbp-0x4c], r12d",
    "test    rax, rax",
    "je      0x82b10",
    "{Case 0x7}",
    "add     edx, 0x2",
    "lea     rsi, [rbp-0x50]",
    "mov     rdi, rbx",
    "mov     dword [rbp-0x50], edx",
    "mov     edx, dword [rbp+0x18]",
    "shl     edx, 0x6",
    "and     edx, 0x400",
    "call    extract_command_subst",
    "mov     r13, rax",
    "mov     eax, dword [rbp-0x50]",
    "mov     dword [rbp-0x68], eax",
    "mov     dword [rbp-0x4c], eax",
    "test    r13, r13",
    "je      0x82532",
    "{Case 0x9}",
    "mov     qword [rbp-0x78], rcx",
    "call    list_rest_of_args",
    "test    byte [rbp-0x70], 0x3",
    "mov     rcx, qword [rbp-0x78]",
    "mov     r15, rax",
    "jne     0x827d0",
    "{Case 0xc}",
    "call    which_set_flags",
    "xor     ebx, ebx",
    "mov     r9, rax",
    "jmp     0x82398",
    "{Case 0x1e}",
    "lea     rax, [rel last_command_exit_value]",
    "xor     ebx, ebx",
    "movsxd  rdi, dword [rax]",
    "call    itos",
    "mov     r9, rax",
    "jmp     0x82398",
    "mov     qword [rbp-0x70], rax",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     esi, 0x24",
    "mov     word [r9], si",
    "test    r15, r15",
    "je      0x82789",
    "test    dil, dil",
    "je      0x82a69",
    "movzx   r13d, byte [rbx+rdx]",
    "mov     r10d, edx",
    "add     rdx, 0x1",
    "test    r13b, r13b",
    "jne     0x820d0",
    "test    r9, r9",
    "je      0x82698",
    "test    r9, r9",
    "jne     0x827a9",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x832c2",
    "lea     rdx, [rel data_168700]",
    "cmp     rax, rdx",
    "je      0x82290",
    "xor     ebx, ebx",
    "nop     word [rax+rax]",
    "xor     ebx, ebx",
    "mov     esi, 0x1",
    "jmp     0x82362",
    "mov     r12d, dword [rbp-0x68]",
    "add     r12d, 0x1",
    "mov     dword [r14], r12d",
    "jmp     0x823a9",
    "mov     eax, dword [rbp-0x68]",
    "mov     dword [r14], eax",
    "cmp     byte [r13], 0x0",
    "jne     0x82698",
    "movsxd  rdi, dword [rax]",
    "xor     ebx, ebx",
    "call    itos",
    "mov     r9, rax",
    "jmp     0x82398",
    "test    r15, r15",
    "je      0x82680",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x833ca",
    "mov     esi, 0x101",
    "mov     rdi, rax",
    "call    expand_arith_string",
    "mov     r12, rax",
    "test    byte [rbp+0x18], 0x1",
    "jne     0x82828",
    "cmp     byte [r13], 0x28",
    "je      0x82880",
    "test    rax, rax",
    "je      0x82cb0",
    "mov     ebx, dword [rbp-0x70]",
    "and     ebx, 0xb",
    "jne     0x829b8",
    "mov     eax, dword [rbp-0x68]",
    "xor     ebx, ebx",
    "mov     dword [r14], eax",
    "jmp     0x823a9",
    "mov     dword [r15], 0x0",
    "lea     r10d, [rdx-0x1]",
    "jmp     0x82107",
    "mov     dword [rbp-0x4c], r10d",
    "mov     edi, eax",
    "movzx   eax, r13b",
    "movzx   eax, word [rsi+rax*2]",
    "shr     ax, 0x3",
    "and     eax, 0x1",
    "cmp     r13b, 0x5f",
    "sete    r9b",
    "or      al, r9b",
    "je      0x82a60",
    "mov     dword [rbp-0x4c], r10d",
    "cmp     byte [r9], 0x0",
    "je      0x827b9",
    "mov     byte [rbp-0x40], 0x24",
    "mov     byte [rbp-0x3f], sil",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x78",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    rax, rax",
    "mov     ebx, dword [rbp-0x4c]",
    "mov     r8, qword [rbp-0x68]",
    "mov     r11, qword [rbp-0x78]",
    "je      0x82d3d",
    "test    rcx, rcx",
    "je      0x826ca",
    "test    byte [rbp-0x70], 0x3",
    "jne     0x82848",
    "mov     rdx, qword [rax+0x8]",
    "test    rdx, rdx",
    "je      0x82356",
    "mov     qword [rbp-0x68], r9",
    "call    alloc_word_desc",
    "mov     r9, qword [rbp-0x68]",
    "mov     dword [rax+0x8], ebx",
    "mov     qword [rax], r9",
    "jmp     0x82290",
    "lea     rax, [rel unbound_vars_is_error]",
    "xor     r9d, r9d",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "jne     0x82b60",
    "lea     rax, [rel unbound_vars_is_error]",
    "mov     dword [r15], 0x0",
    "mov     r12d, dword [rax]",
    "test    r12d, r12d",
    "jne     0x82b60",
    "mov     qword [rbp-0x68], rax",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r13",
    "mov     rsi, rbx",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     r9, rax",
    "test    r15, r15",
    "je      0x82b4d",
    "mov     rdi, qword [rbp-0x70]",
    "call    itos",
    "movsxd  r13, dword [rbp-0x4c]",
    "mov     r9, rax",
    "mov     dword [rbp-0x68], r13d",
    "add     r13, rbx",
    "xor     ebx, ebx",
    "jmp     0x82398",
    "lea     rax, [rel interactive_shell]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "jne     0x824e7",
    "mov     eax, dword [rbp-0x68]",
    "mov     esi, dword [r14]",
    "mov     rdi, rbx",
    "lea     edx, [rax+0x1]",
    "call    substring",
    "mov     r9, rax",
    "jmp     0x82563",
    "mov     edx, dword [rbp+0x18]",
    "mov     esi, dword [rbp-0x70]",
    "mov     rdi, r13",
    "and     edx, 0x8",
    "call    command_substitute",
    "mov     r9, rax",
    "test    rax, rax",
    "je      0x82563",
    "lea     rcx, [r13+0x1]",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x78], rcx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rcx, qword [rbp-0x78]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x833e8",
    "xor     ebx, ebx",
    "xor     r9d, r9d",
    "jmp     0x82736",
    "test    byte [rbp-0x70], 0xb",
    "jne     0x829b8",
    "mov     ebx, dword [rbp-0x70]",
    "and     ebx, 0x9",
    "je      0x82cc0",
    "mov     r10d, dword [rel data_1619c4]",
    "test    r10d, r10d",
    "jne     0x82e58",
    "cmp     dword [rbp-0x68], r10d",
    "jge     0x82758",
    "mov     eax, dword [rbp-0x4c]",
    "mov     dword [rbp-0x68], eax",
    "mov     esi, dword [rbp-0x68]",
    "mov     edx, r10d",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x80], r8",
    "mov     qword [rbp-0x78], rcx",
    "call    substring",
    "mov     rcx, qword [rbp-0x78]",
    "mov     r8, qword [rbp-0x80]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0x82758",
    "mov     rdi, r9",
    "xor     esi, esi",
    "xor     ebx, ebx",
    "call    sub_72bd0",
    "mov     r9, rax",
    "jmp     0x82398",
    "test    byte [rbp-0x70], 0x3",
    "jne     0x82d20",
    "lea     rax, [rel data_168580]",
    "jmp     0x82290",
    "lea     rax, [rel data_168700]",
    "nop     dword [rax]",
    "mov     dword [r14], ebx",
    "xor     r9d, r9d",
    "xor     ebx, ebx",
    "jmp     0x823a9",
    "mov     rdi, qword [rax]",
    "test    rdi, rdi",
    "je      0x82318",
    "test    byte [rbp+0x18], 0x8",
    "jne     0x82a40",
    "mov     dword [rcx], 0x1",
    "mov     dword [r8], 0x1",
    "jmp     0x826bf",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x826b0",
    "mov     rdx, qword [rdx]",
    "test    rdx, rdx",
    "jne     0x82350",
    "test    byte [rbp+0x18], 0x2",
    "jne     0x82415",
    "nop     dword [rax]",
    "xor     ebx, ebx",
    "xor     r9d, r9d",
    "jmp     0x82398",
    "mov     dword [r14], r12d",
    "xor     ebx, ebx",
    "jmp     0x823a9",
    "mov     dword [r15], 0x0",
    "lea     rax, [rel posixly_correct]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "jne     0x82edd",
    "test    r13, r13",
    "je      0x82578",
    "mov     r12, qword [rax]",
    "mov     rdi, rax",
    "call    dispose_word_desc",
    "mov     r9, r12",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, rcx",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "mov     rdi, r15",
    "mov     qword [rbp-0x78], r15",
    "call    strlen",
    "mov     r9, qword [rbp-0x78]",
    "lea     r11d, [rax-0x1]",
    "movsxd  rdi, r11d",
    "mov     dword [rbp-0x50], r11d",
    "lea     rax, [r9+rdi]",
    "cmp     byte [rax], 0x29",
    "jne     0x82d12",
    "mov     rdi, r15",
    "mov     qword [rbp-0x70], r9",
    "call    dispose_words",
    "mov     r9, qword [rbp-0x70]",
    "jmp     0x82398",
    "mov     ebx, dword [rel data_1619c4]",
    "test    ebx, ebx",
    "jne     0x82eb3",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "mov     rdi, r15",
    "call    string_list_internal",
    "mov     r9, rax",
    "test    rax, rax",
    "je      0x82736",
    "mov     rdi, r15",
    "call    sub_118260",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0x82cb0",
    "mov     r9d, dword [rbp-0x70]",
    "test    r9d, r9d",
    "jne     0x82eb3",
    "mov     r12d, dword [rbp-0x70]",
    "xor     edx, edx",
    "mov     rdi, rax",
    "mov     qword [rbp-0x78], rcx",
    "mov     esi, r12d",
    "call    string_list_dollar_at",
    "test    r12d, r12d",
    "mov     rcx, qword [rbp-0x78]",
    "mov     r9, rax",
    "jne     0x82620",
    "cmp     byte [rax], 0x0",
    "je      0x82750",
    "mov     rdi, r9",
    "xor     ebx, ebx",
    "call    sub_87450",
    "mov     r9, rax",
    "jmp     0x82398",
    "mov     dword [r14], ebx",
    "jmp     0x82290",
    "test    byte [rax+0xa], 0x4",
    "je      0x82318",
    "mov     esi, dword [rbp-0x70]",
    "mov     edx, dword [rbp+0x18]",
    "mov     rdi, r15",
    "shl     ebx, 0x12",
    "or      bh, 0x1",
    "or      esi, 0x1",
    "call    string_list_dollar_at",
    "mov     r9, rax",
    "jmp     0x82736",
    "test    byte [rbp+0x18], 0x4",
    "je      0x82720",
    "test    r8, r8",
    "je      0x826bf",
    "cmp     byte [rdx], 0x0",
    "cmove   ebx, esi",
    "mov     ebx, 0x1",
    "jmp     0x82356",
    "mov     ebx, 0x2124",
    "mov     word [rbp-0x40], bx",
    "jmp     0x82226",
    "lea     rax, [rel last_command_exit_value]",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_158490]",
    "mov     dword [rel data_158490], 0x1",
    "mov     dword [rax], 0x1",
    "call    set_pipestatus_array",
    "jmp     0x82286",
    "movsxd  r13, dword [rbp-0x68]",
    "add     r13, rbx",
    "xor     ebx, ebx",
    "jmp     0x82398",
    "mov     rdi, r13",
    "mov     qword [rbp-0x70], r9",
    "call    free",
    "mov     r9, qword [rbp-0x70]",
    "mov     rdi, r9",
    "call    free",
    "jmp     0x82532",
    "mov     byte [rax], 0x0",
    "mov     qword [rbp-0x48], 0x0",
    "test    r11d, r11d",
    "jle     0x82fc6",
    "lea     rax, [rel ifs_firstc]",
    "cmp     byte [rax], 0x0",
    "jne     0x831b8",
    "mov     esi, dword [rbp-0x70]",
    "xor     edx, edx",
    "mov     rdi, rax",
    "mov     qword [rbp-0x78], rcx",
    "call    string_list_dollar_at",
    "mov     rcx, qword [rbp-0x78]",
    "mov     r9, rax",
    "jmp     0x82620",
    "xor     ebx, ebx",
    "cmp     byte [rax], 0x0",
    "sete    bl",
    "shl     ebx, 0x12",
    "jmp     0x82736",
    "movzx   eax, byte [rax]",
    "test    byte [rbp-0x70], 0x1",
    "je      0x82fe8",
    "lea     rax, [rel ifs_is_set]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x82f14",
    "mov     edi, dword [rel data_1619c4]",
    "test    edi, edi",
    "jne     0x82736",
    "lea     r8, [rel ifs_is_null]",
    "mov     rdi, rax",
    "call    free",
    "mov     rdi, rax",
    "mov     qword [rbp-0x78], r8",
    "mov     qword [rbp-0x68], rcx",
    "call    find_variable",
    "mov     rcx, qword [rbp-0x68]",
    "mov     r8, qword [rbp-0x78]",
    "test    rax, rax",
    "je      0x82d91",
    "cmp     byte [rdi], 0x7f",
    "je      0x83012",
    "mov     edx, dword [rbp+0x18]",
    "mov     esi, dword [rbp-0x70]",
    "mov     rdi, r15",
    "mov     ebx, 0x100",
    "call    string_list_dollar_at",
    "mov     r9, rax",
    "lea     rax, [rel ifs_is_set]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x82720",
    "lea     rax, [rel last_command_exit_value]",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_158490]",
    "mov     byte [rbp-0x3e], 0x0",
    "mov     dword [rel data_158490], 0x1",
    "mov     dword [rax], 0x1",
    "call    set_pipestatus_array",
    "lea     rsi, [rel 0x12029b]  {\"%s: unbound variable\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "lea     rsi, [rbp-0x40]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    report_error",
    "mov     rdi, r9",
    "mov     esi, 0x101",
    "mov     qword [rbp-0x68], r9",
    "call    expand_arith_string",
    "mov     rdi, qword [rbp-0x68]",
    "mov     r12, rax",
    "call    free",
    "jmp     0x8246e",
    "xor     r8d, r8d",
    "xor     r15d, r15d",
    "lea     rax, [rbp-0x40]",
    "mov     qword [rbp-0x80], rdi",
    "mov     qword [rbp-0x90], r13",
    "mov     r12d, r15d",
    "mov     r13d, r8d",
    "mov     qword [rbp-0x98], rbx",
    "mov     ebx, r11d",
    "mov     qword [rbp-0xa0], r14",
    "mov     r14, r9",
    "mov     qword [rbp-0x78], rax",
    "jmp     0x8296f",
    "mov     esi, dword [rbp-0x70]",
    "xor     edx, edx",
    "mov     rdi, r15",
    "mov     qword [rbp-0x78], rcx",
    "xor     ebx, ebx",
    "call    string_list_dollar_at",
    "mov     rcx, qword [rbp-0x78]",
    "mov     r9, rax",
    "jmp     0x82620",
    "mov     rdi, r15",
    "mov     qword [rbp-0x70], rcx",
    "xor     ebx, ebx",
    "call    sub_118260",
    "mov     rcx, qword [rbp-0x70]",
    "mov     r9, rax",
    "jmp     0x82620",
    "xor     ebx, ebx",
    "test    al, al",
    "mov     r9, rdx",
    "sete    bl",
    "shl     ebx, 0x12",
    "jmp     0x82736",
    "test    al, al",
    "jne     0x82ffa",
    "lea     r8, [rel ifs_is_null]",
    "mov     edx, dword [r8]",
    "test    edx, edx",
    "jne     0x8311e",
    "test    byte [rbp+0x18], 0x8",
    "jne     0x83239",
    "test    rcx, rcx",
    "je      0x82736",
    "mov     ebx, 0x8",
    "jmp     0x82620",
    "test    r9, r9",
    "je      0x83093",
    "xor     esi, esi",
    "mov     rdi, r12",
    "mov     qword [rbp-0x78], r8",
    "mov     qword [rbp-0x68], rcx",
    "call    find_variable_last_nameref",
    "test    rax, rax",
    "je      0x82a78",
    "mov     edx, dword [rax+0x28 {Elf64_Header::section_header_offset.d}]",
    "mov     ebx, edx",
    "and     ebx, 0x1000",
    "jne     0x82a78",
    "cmp     byte [rdi+0x1], 0x0",
    "jne     0x82318",
    "lea     rax, [rel ifs_is_null]",
    "mov     ebx, dword [rbp-0x70]",
    "or      ebx, dword [rax]",
    "jne     0x82720",
    "lea     r15, [rel this_command_name]",
    "xor     esi, esi",
    "lea     rdx, [rbp-0x54]",
    "mov     rdi, r12",
    "lea     rax, [rel shell_compatibility_level]",
    "mov     rcx, qword [r15]",
    "mov     qword [r15], 0x0",
    "cmp     dword [rax], 0x33",
    "setle   sil",
    "mov     qword [rbp-0x68], rcx",
    "call    evalexp",
    "mov     rcx, qword [rbp-0x68]",
    "mov     rdi, r13",
    "mov     qword [rbp-0x70], rax",
    "mov     qword [r15], rcx",
    "call    free",
    "mov     rdi, r12",
    "call    free",
    "mov     r9d, dword [rbp-0x54]",
    "test    r9d, r9d",
    "jne     0x82858",
    "movsxd  rsi, r12d",
    "add     rsi, r14",
    "movzx   ecx, byte [rsi]",
    "cmp     cl, 0x28",
    "jne     0x82930",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x70], rdx",
    "call    sub_87450",
    "mov     rdx, qword [rbp-0x70]",
    "mov     r9, rax",
    "jmp     0x82a15",
    "mov     edi, 0x2",
    "mov     qword [rbp-0x70], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x70]",
    "test    rax, rax",
    "mov     r9, rax",
    "je      0x83358",
    "test    byte [rbp+0x18], 0x8",
    "je      0x83169",
    "test    byte [rbp+0x18], 0x8",
    "je      0x82e7c",
    "mov     rdi, r15",
    "mov     qword [rbp-0x78], rcx",
    "mov     dword [rbp-0x70], edx",
    "call    sub_118260",
    "mov     edx, dword [rbp-0x70]",
    "mov     rcx, qword [rbp-0x78]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0x83093",
    "lea     rax, [rel ifs_firstc]",
    "cmp     byte [rax], 0x0",
    "je      0x82ec3",
    "mov     dword [rcx], 0x1",
    "jmp     0x82736",
    "xor     r9d, r9d",
    "jmp     0x82620",
    "lea     rax, [rel ifs_is_set]",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "je      0x82620",
    "lea     r13, [rel unbound_vars_is_error]",
    "mov     eax, dword [r13]",
    "test    eax, eax",
    "je      0x82d32",
    "mov     r9, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    r9, r9",
    "je      0x82a78",
    "mov     rdi, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    rdi, rdi",
    "je      0x82a78",
    "test    r11, r11",
    "je      0x83028",
    "lea     rax, [rel ifs_firstc]",
    "cmp     byte [rax], 0x20",
    "je      0x82720",
    "cmp     cl, 0x29",
    "je      0x82cf0",
    "add     r13d, 0x1",
    "xor     ebx, ebx",
    "cmp     byte [rdx], 0x0",
    "sete    bl",
    "shl     ebx, 0x12",
    "cmp     r9, rdx",
    "je      0x82736",
    "mov     qword [rbp-0x70], rax",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x78], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r11d, 0x7f",
    "mov     word [r9], r11w",
    "lea     rax, [rel ifs_firstc]",
    "cmp     byte [rax], 0x0",
    "je      0x82ec3",
    "mov     rdi, r15",
    "mov     qword [rbp-0x70], rcx",
    "call    sub_118260",
    "mov     rcx, qword [rbp-0x70]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0x83093",
    "mov     rdi, r15",
    "mov     qword [rbp-0x70], rcx",
    "mov     dword [rbp-0x80], edx",
    "call    sub_118260",
    "mov     rcx, qword [rbp-0x70]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0x83093",
    "mov     qword [rbp-0x80], rcx",
    "mov     dword [rbp-0x78], edx",
    "mov     qword [rbp-0x70], rax",
    "call    quote_string",
    "mov     rdi, qword [rbp-0x70]",
    "mov     edx, dword [rbp-0x78]",
    "mov     rcx, qword [rbp-0x80]",
    "mov     r9, rax",
    "cmp     byte [rdi], 0x0",
    "jne     0x82f82",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rdi, r15",
    "mov     qword [rbp-0x70], rcx",
    "call    string_list_dollar_at",
    "lea     r8, [rel ifs_is_null]",
    "mov     rcx, qword [rbp-0x70]",
    "mov     r9, rax",
    "jmp     0x825ee",
    "mov     ebx, dword [rbp+0x18]",
    "and     ebx, 0x8",
    "jne     0x831e5",
    "mov     rdi, r12",
    "call    free",
    "mov     ebx, dword [rbp-0x4c]",
    "lea     rbx, [rel last_command_exit_value]",
    "mov     esi, 0x1",
    "lea     r14, [rel data_158490]",
    "mov     dword [rel data_158490], 0x1",
    "mov     rdi, r14",
    "mov     dword [rbx], 0x1",
    "call    set_pipestatus_array",
    "mov     edx, 0x5",
    "lea     rsi, [rel 0x12029b]  {\"%s: unbound variable\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    report_error",
    "mov     rdi, r12",
    "call    free",
    "mov     esi, 0x1",
    "mov     rdi, r14",
    "mov     dword [rbx], 0x1",
    "mov     dword [rel data_158490], 0x1",
    "call    set_pipestatus_array",
    "mov     edx, dword [r13]",
    "test    edx, edx",
    "jne     0x82273",
    "mov     ebx, dword [rax+0x28 {Elf64_Header::section_header_offset.d}]",
    "and     ebx, 0x1000",
    "jne     0x82a78",
    "test    dl, 0x44",
    "je      0x8309b",
    "mov     ecx, dword [r8]",
    "test    ecx, ecx",
    "jne     0x82318",
    "mov     dword [r11], 0x1",
    "mov     edx, dword [rbp+0x18]",
    "mov     esi, 0x1",
    "mov     rdi, r15",
    "mov     ebx, 0x100",
    "call    string_list_dollar_at",
    "mov     r9, rax",
    "jmp     0x82736",
    "sub     r13d, 0x1",
    "jns     0x82981",
    "cmp     cl, 0x27",
    "je      0x82bd0",
    "add     r12d, 0x1",
    "jmp     0x82966",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x82d5e",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x70], r9",
    "call    free",
    "mov     r9, qword [rbp-0x70]",
    "jmp     0x82736",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rdi, r15",
    "mov     qword [rbp-0x78], r8",
    "mov     qword [rbp-0x70], rcx",
    "call    string_list_dollar_at",
    "mov     rcx, qword [rbp-0x70]",
    "mov     r8, qword [rbp-0x78]",
    "mov     r9, rax",
    "jmp     0x825ee",
    "xor     esi, esi",
    "mov     qword [rbp-0x80], rcx",
    "mov     qword [rbp-0x78], rax",
    "call    sub_72bd0",
    "mov     rdi, qword [rbp-0x78]",
    "mov     qword [rbp-0x70], rax",
    "call    free",
    "mov     r9, qword [rbp-0x70]",
    "mov     rcx, qword [rbp-0x80]",
    "jmp     0x82620",
    "mov     qword [rbp-0x78], rcx",
    "mov     qword [rbp-0x70], rax",
    "call    quote_string",
    "mov     rdi, qword [rbp-0x70]",
    "mov     rcx, qword [rbp-0x78]",
    "mov     edx, dword [rbp-0x80]",
    "mov     r9, rax",
    "cmp     byte [rdi], 0x0",
    "jne     0x82f82",
    "mov     qword [rbp-0x80], rcx",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], edx",
    "call    free",
    "mov     ebx, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "mov     rcx, qword [rbp-0x80]",
    "jmp     0x82620",
    "jmp     0x82f6f",
    "mov     r8d, dword [r8]",
    "test    r8d, r8d",
    "jne     0x82f0a",
    "cmp     byte [r9], 0x0",
    "mov     qword [rbp-0x78], rcx",
    "jne     0x832a6",
    "nop     dword [rax]",
    "lea     rax, [rel interactive_shell]",
    "mov     r13d, dword [rax]",
    "test    r13d, r13d",
    "jne     0x824e7",
    "jmp     0x824e7",
    "cmp     byte [r9], 0x0",
    "mov     rcx, qword [rbp-0x68]",
    "mov     r8, qword [rbp-0x78]",
    "je      0x82a78",
    "cmp     byte [rdi], 0x0",
    "je      0x830aa",
    "and     edx, 0x4",
    "jne     0x83084",
    "mov     qword [rbp-0x68], rax",
    "call    free",
    "mov     rax, qword [rbp-0x68]",
    "xor     edx, edx",
    "mov     qword [rax], rdx",
    "mov     dword [r14], ebx",
    "jmp     0x82290",
    "lea     r11, [rel locale_mb_cur_max]",
    "cmp     dword [r11], 0x1",
    "jle     0x82d88",
    "mov     r9, r14",
    "mov     r13, qword [rbp-0x90]",
    "mov     rbx, qword [rbp-0x98]",
    "mov     r14, qword [rbp-0xa0]",
    "add     r12d, 0x1",
    "mov     rax, qword [rbp-0x78]",
    "movsxd  rdx, r12d",
    "lea     rsi, [r14+rdx]",
    "mov     qword [rax], 0x0",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x82c9e",
    "cmp     cl, 0x5c",
    "je      0x82b80",
    "cmp     ebx, r12d",
    "jle     0x82fa2",
    "lea     rax, [rel locale_utf8locale]",
    "mov     r15d, dword [rax]",
    "test    r15d, r15d",
    "je      0x83056",
    "add     r12d, eax",
    "jmp     0x82966",
    "cmp     byte [r9], 0x7f",
    "jne     0x82f82",
    "mov     rdi, r9",
    "mov     qword [rbp-0x70], r9",
    "call    sub_87450",
    "mov     rcx, qword [rbp-0x78]",
    "mov     r9, qword [rbp-0x70]",
    "mov     rdx, rax",
    "jmp     0x8321a",
    "mov     edi, 0x2",
    "mov     qword [rbp-0x70], r9",
    "call    malloc",
    "mov     r9, qword [rbp-0x70]",
    "mov     rcx, qword [rbp-0x78]",
    "test    rax, rax",
    "mov     rdx, rax",
    "je      0x8339e",
    "xor     esi, esi",
    "mov     rdi, r9",
    "mov     qword [rbp-0x80], r8",
    "mov     qword [rbp-0x78], rcx",
    "mov     qword [rbp-0x68], r9",
    "call    valid_array_reference",
    "mov     r9, qword [rbp-0x68]",
    "mov     rcx, qword [rbp-0x78]",
    "test    eax, eax",
    "mov     r8, qword [rbp-0x80]",
    "jne     0x832c7",
    "test    byte [rbp+0x18], 0x8",
    "je      0x821cb",
    "test    byte [rbp-0x70], 0x3",
    "jne     0x83287",
    "xor     esi, esi",
    "call    array_reference",
    "mov     rdi, rax",
    "jmp     0x821b3",
    "xor     edx, edx",
    "mov     rsi, rdi",
    "lea     rdi, [rel data_121b60]  {\"0\"}",
    "call    hash_search",
    "test    rax, rax",
    "je      0x8319d",
    "cmp     cl, 0x1",
    "sbb     r12d, 0xffffffff",
    "jmp     0x82966",
    "cmp     cl, 0x27",
    "je      0x82c9e",
    "lea     r15d, [r12+0x1]",
    "movsxd  rsi, r15d",
    "add     rsi, r14",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x82eab",
    "cmp     cl, 0x22",
    "jne     0x82981",
    "mov     r8d, r13d",
    "mov     r9, r14",
    "mov     r13, qword [rbp-0x90]",
    "mov     rbx, qword [rbp-0x98]",
    "mov     r14, qword [rbp-0xa0]",
    "test    r8d, r8d",
    "jne     0x82d12",
    "mov     edx, ebx",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x48]",
    "mov     r15, qword [rbp-0x48]",
    "sub     edx, r12d",
    "movsxd  rdx, edx",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x831d7",
    "test    cl, cl",
    "js      0x83056",
    "xor     edx, edx",
    "cmp     byte [r9+0x1], 0x0",
    "sete    dl",
    "shl     edx, 0x15",
    "mov     rdi, r9",
    "mov     qword [rbp-0x78], rcx",
    "xor     ebx, ebx",
    "mov     qword [rbp-0x70], rdx",
    "call    free",
    "mov     r9, qword [rbp-0x70]",
    "mov     rcx, qword [rbp-0x78]",
    "jmp     0x82620",
    "mov     qword [rbp-0x78], rax",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x80], rcx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     word [rdx], 0x7f",
    "mov     esi, dword [rbp-0x70]",
    "mov     rdi, r9",
    "mov     rdx, r8",
    "call    sub_113a40",
    "mov     r9, qword [rbp-0x68]",
    "xor     esi, esi",
    "movzx   r12d, byte [r9]",
    "test    r12b, r12b",
    "je      0x8330b",
    "cmp     byte [r9], 0x0",
    "je      0x82a78",
    "xor     esi, esi",
    "call    sub_72bd0",
    "mov     r9, rax",
    "mov     esi, 0x4",
    "call    sub_72bd0",
    "mov     r9, rax",
    "jmp     0x821d5",
    "call    quote_string",
    "mov     r9, rax",
    "jmp     0x821d5",
    "test    rdi, rdi",
    "je      0x8319d",
    "lea     r13, [rel unbound_vars_is_error]",
    "mov     ecx, dword [r13]",
    "test    ecx, ecx",
    "jne     0x82a8b",
    "mov     rdi, qword [rax+0x10]",
    "lea     r11, [rel locale_mb_cur_max]",
    "mov     dword [rbp-0x88], ebx",
    "mov     rbx, r11",
    "jmp     0x82c3f",
    "mov     r12d, r15d",
    "jmp     0x82966",
    "lea     r11, [rel locale_mb_cur_max]",
    "cmp     dword [r11], 0x1",
    "jle     0x8304d",
    "mov     rsi, qword [rbp-0x80]",
    "lea     edx, [r12+0x1]",
    "xor     ecx, ecx",
    "mov     rdi, r14",
    "call    sub_6f5f0",
    "mov     r12d, eax",
    "test    rax, rax",
    "je      0x82d88",
    "mov     qword [rbp-0x48], r15",
    "add     r12d, 0x1",
    "jmp     0x82966",
    "mov     eax, 0x1",
    "jne     0x829af",
    "mov     edx, dword [rbp-0x70]",
    "mov     ecx, dword [rbp+0x18]",
    "xor     r8d, r8d",
    "mov     rdi, r9",
    "mov     qword [rbp-0x68], r9",
    "call    sub_79bf0",
    "lea     rdx, [rel data_168580]",
    "cmp     rax, rdx",
    "je      0x82290",
    "lea     eax, [r12-0x30]",
    "cmp     al, 0x9",
    "jbe     0x83380",
    "mov     rdi, r9",
    "mov     qword [rbp-0x68], r9",
    "call    legal_identifier",
    "test    eax, eax",
    "jne     0x82a78",
    "mov     rdi, r12",
    "mov     qword [rbp-0x68], r9",
    "call    free",
    "mov     eax, dword [rbp-0x4c]",
    "mov     r9, qword [rbp-0x68]",
    "mov     dword [r14], eax",
    "jmp     0x823a9",
    "cmp     byte [rdi], 0x0",
    "je      0x821cb",
    "xor     r9d, r9d",
    "jmp     0x821d5",
    "cmp     dword [rbx], 0x1",
    "jg      0x82c10",
    "add     r12d, 0x2",
    "jmp     0x82966",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x830c6",
    "jmp     0x829af",
    "nop     dword [rax]",
    "lea     rdx, [rel data_168700]",
    "mov     r9, qword [rbp-0x68]",
    "cmp     rax, rdx",
    "je      0x82290",
    "mov     rdi, r9",
    "call    all_digits",
    "mov     r9, qword [rbp-0x68]",
    "mov     esi, 0x1",
    "test    eax, eax",
    "jne     0x8330b",
    "xor     esi, esi",
    "cmp     byte [r9+0x1], 0x0",
    "jne     0x8330b",
    "mov     edi, 0x1",
    "call    set_exit_status",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133460]  {\"%s: invalid variable name for na\u2026\"}",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x68]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    report_error",
    "jmp     0x824e7",
    "test    byte [rbp-0x70], 0x3",
    "jne     0x83287",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x82c50",
    "add     r12d, 0x1",
    "jmp     0x82c2c",
    "lea     rax, [rel locale_utf8locale]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0x830e2",
    "lea     r12d, [r15+rax]",
    "jmp     0x82966",
    "mov     edx, dword [rbp-0x4c]",
    "mov     dword [r14], edx",
    "test    rax, rax",
    "jne     0x82290",
    "jmp     0x832f1",
    "lea     rax, [rel sh_syntaxtab]",
    "mov     esi, dword [rax+r12*4]",
    "shr     esi, 0xb",
    "and     esi, 0x1",
    "lea     rax, [rel locale_utf8locale]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "je      0x82c68",
    "add     r12d, eax",
    "movsxd  rdx, r12d",
    "lea     rsi, [r14+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x82c98",
    "mov     edx, ebx",
    "mov     r11, qword [rbp-0x48]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x48]",
    "sub     edx, r15d",
    "movsxd  rdx, edx",
    "mov     qword [rbp-0x88], r11",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x83294",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x82bc4",
    "jmp     0x823a9",
    "mov     rax, qword [rbp-0x80]",
    "mov     rcx, qword [rbp-0x78]",
    "xor     edi, edi",
    "mov     r15, qword [rbp-0x40]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x82d50",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x82c29",
    "mov     ebx, dword [rbp-0x88]",
    "cmp     cl, 0x27",
    "je      0x82c98",
    "add     r12d, 0x2",
    "test    rax, rax",
    "je      0x82966",
    "mov     r11, qword [rbp-0x88]",
    "add     r12d, 0x2",
    "mov     qword [rbp-0x48], r11",
    "jmp     0x82966",
    "test    rax, rax",
    "je      0x82c44",
    "mov     qword [rbp-0x40], r15",
    "add     r12d, 0x1",
    "jmp     0x82c2c",
    "jmp     0x82bc4",
    "jmp     0x82c29"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
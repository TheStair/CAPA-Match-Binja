{
  "address": "0xaafe0",
  "rules": [
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "mov     edi, 0x58",
    "push    rbx",
    "call    malloc",
    "test    rax, rax",
    "je      0xab226",
    "mov     esi, 0x58",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movdqu  xmm0, xmmword [r12+0x8]",
    "mov     r13, qword [r12+0x18]",
    "mov     dword [rax], 0x1",
    "mov     rbx, rax",
    "movups  xmmword [rax+0x8], xmm0",
    "test    r13, r13",
    "je      0xab054",
    "mov     qword [rbx+0x18], r13",
    "mov     r13, qword [r12+0x20]",
    "test    r13, r13",
    "je      0xab093",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xab215",
    "mov     qword [rbx+0x20], r13",
    "mov     r13, qword [r12+0x28]",
    "test    r13, r13",
    "je      0xab0d2",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xab215",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r13",
    "mov     rcx, r14",
    "mov     rdx, r14",
    "call    __memcpy_chk",
    "mov     r13, rax",
    "mov     qword [rbx+0x28], r13",
    "mov     r13, qword [r12+0x30]",
    "test    r13, r13",
    "je      0xab111",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xab215",
    "mov     rsi, r13",
    "mov     rcx, r14",
    "mov     rdx, r14",
    "call    __memcpy_chk",
    "mov     r13, rax",
    "mov     qword [rbx+0x30], r13",
    "mov     r13, qword [r12+0x38]",
    "test    r13, r13",
    "je      0xab150",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xab215",
    "mov     rsi, r13",
    "mov     rcx, r14",
    "mov     rdx, r14",
    "call    __memcpy_chk",
    "mov     r13, rax",
    "mov     qword [rbx+0x38], r13",
    "mov     r13, qword [r12+0x40]",
    "test    r13, r13",
    "je      0xab18f",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xab215",
    "mov     rsi, r13",
    "mov     rcx, r14",
    "mov     rdx, r14",
    "call    __memcpy_chk",
    "mov     r13, rax",
    "mov     qword [rbx+0x40], r13",
    "mov     r13, qword [r12+0x48]",
    "test    r13, r13",
    "je      0xab1ca",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xab215",
    "mov     rsi, r13",
    "mov     rcx, r14",
    "mov     rdx, r14",
    "call    __memcpy_chk",
    "mov     r13, rax",
    "mov     r12, qword [r12+0x50]",
    "mov     qword [rbx+0x48], r13",
    "test    r12, r12",
    "je      0xab205",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xab215",
    "mov     rsi, r13",
    "mov     rcx, r14",
    "mov     rdx, r14",
    "call    __memcpy_chk",
    "mov     r13, rax",
    "mov     qword [rbx+0x50], r12",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xab239",
    "mov     rsi, r13",
    "mov     rcx, r14",
    "mov     rdx, r14",
    "call    __memcpy_chk",
    "mov     r13, rax",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rcx, r13",
    "mov     rdx, r13",
    "call    __memcpy_chk",
    "mov     r12, rax"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
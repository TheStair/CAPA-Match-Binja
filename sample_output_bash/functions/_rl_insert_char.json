{
  "address": "0x108310",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "contain loop",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x58",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    edi, edi",
    "jle     0x1083e0",
    "xor     eax, eax",
    "mov     r12d, edi",
    "mov     r14d, esi",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0x10835e",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x58",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     byte [rbp-0x50], r14b",
    "mov     r13d, r12d",
    "mov     ebx, 0x1",
    "mov     byte [rbp-0x4f], 0x0",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "je      0x108408",
    "mov     r15d, r13d",
    "imul    r15d, ebx",
    "lea     r12d, [r15+0x1]",
    "movsxd  r12, r12d",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x108794",
    "cmp     r13d, 0x400",
    "jg      0x108510",
    "lea     rax, [rel _rl_utf8locale]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x10841f",
    "xor     eax, eax",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "test    r15d, r15d",
    "jle     0x108774",
    "mov     eax, ebx",
    "shl     eax, 0xa",
    "lea     r12d, [rax+0x1]",
    "mov     dword [rbp-0x78], eax",
    "movsxd  r12, r12d",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x1087ca",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0x1083a6",
    "mov     r13d, dword [rel data_16b630]",
    "test    r13d, r13d",
    "jg      0x108435",
    "test    r14b, 0x80",
    "je      0x10835e",
    "mov     byte [r14], 0x0",
    "mov     rdi, r14",
    "mov     dword [rel data_16b630], 0x0",
    "call    rl_insert_text",
    "jmp     0x108624",
    "cmp     ebx, 0x1",
    "jne     0x1086a0",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     ecx, dword [rbp-0x78]",
    "test    ecx, ecx",
    "jle     0x108568",
    "lea     rax, [rel rl_readline_state]",
    "mov     rax, qword [rax]",
    "test    ah, 0x8",
    "jne     0x1083c7",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x108690",
    "movsxd  r11, dword [rel data_16b620]",
    "mov     rax, qword [rel data_16b628]",
    "lea     rdi, [rbp-0x58]",
    "lea     r9, [rel data_16b610]",
    "mov     rsi, r9",
    "lea     rcx, [rel data_16b628]",
    "lea     r12d, [r11+0x1]",
    "mov     qword [rbp-0x70], rax",
    "mov     r15, r11",
    "movsxd  rax, r12d",
    "mov     byte [r9+r11], r14b",
    "mov     rdx, rax",
    "mov     qword [rbp-0x68], r11",
    "mov     dword [rel data_16b620], r12d",
    "mov     qword [rbp-0x78], rax",
    "call    mbrtowc",
    "mov     r11, qword [rbp-0x68]",
    "lea     r9, [rel data_16b610]",
    "cmp     rax, 0xfffffffffffffffe",
    "je      0x108700",
    "mov     dword [rel data_16b630], r12d",
    "mov     r13d, r12d",
    "mov     rdi, r14",
    "call    free",
    "jmp     0x1083e0",
    "lea     rsi, [rbp-0x50]",
    "movsxd  rdx, ebx",
    "mov     rdi, r14",
    "xor     eax, eax",
    "mov     qword [rbp-0x68], rsi",
    "xor     r13d, r13d",
    "mov     qword [rbp-0x70], rdx",
    "jmp     0x1086c7",
    "movzx   ecx, byte [rbp-0x50]",
    "mov     rax, r14",
    "xor     r13d, r13d",
    "jmp     0x1085f6",
    "mov     r12d, 0x400",
    "mov     eax, ebx",
    "mov     rdi, r14",
    "cmp     r13d, r12d",
    "cmovle  r12d, r13d",
    "imul    eax, r12d",
    "cdqe    ",
    "mov     byte [r14+rax], 0x0",
    "call    rl_insert_text",
    "sub     r13d, r12d",
    "jne     0x108568",
    "cmp     ebx, 0x1",
    "jne     0x108638",
    "lea     rdi, [rbp-0x52]",
    "mov     byte [rbp-0x51], 0x0",
    "mov     byte [rbp-0x52], r14b",
    "call    rl_insert_text",
    "nop     dword [rax+rax]",
    "mov     eax, dword [rel data_16a508]",
    "cmp     dword [rel data_16a50c], eax",
    "jne     0x1086f0",
    "lea     rdi, [rbp-0x50]",
    "call    rl_insert_text",
    "jmp     0x10859c",
    "mov     rax, qword [rbp-0x70]",
    "mov     qword [rel data_16b628], rax",
    "mov     eax, 0x1",
    "jmp     0x1083e2",
    "cmp     rax, 0xffffffffffffffff",
    "je      0x108738",
    "cmp     r12, rax",
    "mov     rcx, rax",
    "mov     rdx, qword [rbp-0x70]",
    "mov     rsi, qword [rbp-0x68]",
    "cmovae  rcx, r12",
    "add     r13d, ebx",
    "sub     rcx, rax",
    "call    __strncpy_chk",
    "cmp     r15d, r13d",
    "jg      0x1086c0",
    "add     r13d, 0x1",
    "mov     byte [rax], cl",
    "cmp     r15d, r13d",
    "jg      0x1085f0",
    "test    r14, r14",
    "je      0x10859c",
    "lea     rsi, [rbp-0x50]",
    "mov     rdi, r14",
    "xor     eax, eax",
    "xor     r15d, r15d",
    "mov     qword [rbp-0x68], rsi",
    "movsxd  rsi, ebx",
    "mov     qword [rbp-0x70], rsi",
    "jmp     0x10865f",
    "movzx   ecx, byte [rbp-0x50]",
    "mov     rdx, r14",
    "xor     eax, eax",
    "jmp     0x108556",
    "mov     edi, r14d",
    "call    _rl_insert_typein",
    "jmp     0x1083e0",
    "mov     dword [rel data_16b630], 0x0",
    "jmp     0x1083e0",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x10878f",
    "mov     ecx, 0x10",
    "mov     rdx, r11",
    "mov     rdi, r9",
    "mov     byte [rbp-0x4f], 0x0",
    "movzx   eax, byte [rel data_16b610]",
    "lea     rsi, [rel data_16b611]",
    "mov     dword [rel data_16b620], r15d",
    "mov     byte [rbp-0x50], al",
    "call    __memmove_chk",
    "mov     qword [rel data_16b628], 0x0",
    "jmp     0x1084c7",
    "test    rax, rax",
    "je      0x108718",
    "movsxd  rax, r13d",
    "lea     rdi, [r14+rax]",
    "jmp     0x108601",
    "movsxd  rax, r13d",
    "add     rax, r14",
    "mov     dword [rel data_16b630], 0x0",
    "movsxd  r8, r13d",
    "mov     rdi, r14",
    "mov     byte [r14+r8], 0x0",
    "call    rl_insert_text",
    "test    r14, r14",
    "je      0x1083e0",
    "mov     rdi, r14",
    "call    free",
    "cmp     r12, rax",
    "mov     rcx, rax",
    "mov     rdx, qword [rbp-0x70]",
    "mov     rsi, qword [rbp-0x68]",
    "cmovae  rcx, r12",
    "add     r15d, ebx",
    "sub     rcx, rax",
    "call    __strncpy_chk",
    "cmp     dword [rbp-0x78], r15d",
    "jg      0x108658",
    "add     eax, 0x1",
    "mov     byte [rdx], cl",
    "cmp     eax, 0x3ff",
    "jle     0x108550",
    "mov     ebx, 0x1",
    "jmp     0x10836e",
    "mov     byte [rbp-0x50], 0x0",
    "mov     dword [rel data_16b620], r15d",
    "mov     qword [rel data_16b628], 0x0",
    "jmp     0x10836e",
    "cmp     rax, 0x1",
    "jne     0x1084d8",
    "movsxd  rax, r15d",
    "lea     rdi, [r14+rax]",
    "jmp     0x108568",
    "movsxd  rdx, eax",
    "add     rdx, r14",
    "nop     word [rax+rax]",
    "lea     eax, [r13-0x2]",
    "cmp     eax, 0x3fe",
    "jbe     0x1085b0",
    "mov     rbx, qword [rbp-0x78]",
    "lea     rdi, [rbp-0x50]",
    "mov     ecx, 0x11",
    "mov     rsi, r9",
    "mov     rdx, rbx",
    "call    __memcpy_chk",
    "mov     byte [rbp+rbx-0x50], 0x0",
    "mov     ebx, r12d",
    "mov     dword [rel data_16b620], 0x0",
    "jmp     0x10836e",
    "movzx   eax, byte [rel data_16b610]",
    "mov     byte [rbp-0x4f], 0x0",
    "mov     dword [rel data_16b620], 0x0",
    "mov     byte [rbp-0x50], al"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
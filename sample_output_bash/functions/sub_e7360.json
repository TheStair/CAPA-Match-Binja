{
  "address": "0xe7360",
  "rules": [
    "encrypt data using Curve25519/a423aa5d0923438c8eac88d5abe4fcd5",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     rbx, [rel rl_readline_state]",
    "mov     r14d, dword [rdi+0x20]",
    "mov     r13, qword [rbx]",
    "test    r14d, r14d",
    "jne     0xe73b0",
    "mov     r12, rdi",
    "mov     esi, r14d",
    "lea     rdi, [rel data_1220ad]  {\" hl^$0ftFT;,%wbeWBE|`\"}",
    "call    strchr",
    "test    rax, rax",
    "je      0xe73f0",
    "and     r13, 0xffffffffffeffbff",
    "mov     eax, 0x1",
    "mov     qword [rbx], r13",
    "cmp     dword [r12+0x1c], r14d",
    "je      0xe7530",
    "mov     rax, r13",
    "not     rax",
    "test    eax, 0x180400",
    "je      0xe7520",
    "lea     eax, [r14-0x63]",
    "cmp     eax, 0x1",
    "jbe     0xe7543",
    "lea     esi, [r14-0x30]",
    "cmp     esi, 0x9",
    "ja      0xe7388",
    "and     r13, 0xfffffffffffffbff",
    "mov     qword [rbx], r13",
    "jmp     0xe73d8",
    "add     rsp, 0x18",
    "mov     rdi, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sub_e7200",
    "lea     rax, [rel rl_end]",
    "and     r13, 0xffffffffffefffff",
    "mov     dword [rel data_16a4c4], r14d",
    "mov     rdi, r12",
    "mov     qword [rbx], r13",
    "mov     edx, dword [rax]",
    "lea     rax, [rel rl_mark]",
    "mov     dword [rax], edx",
    "lea     rax, [rel rl_point]",
    "mov     dword [rax], 0x0",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sub_e6a80",
    "cmp     r14d, 0x79",
    "jne     0xe73fb",
    "mov     rax, r13",
    "and     eax, 0x180400",
    "cmp     rax, 0x180400",
    "je      0xe75bb",
    "add     rsp, 0x18",
    "mov     edi, r14d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sub_e5230",
    "mov     rdx, r13",
    "or      dh, 0x4",
    "cmp     rax, 0x180000",
    "je      0xe75b8",
    "mov     qword [rbx], rdx",
    "lea     r13, [rel rl_numeric_arg]",
    "mov     qword [rbx], rdx",
    "lea     r14, [rel data_12210c]  {\"(arg: %d) \"}",
    "lea     r15, [rel rl_arg_sign]",
    "mov     eax, dword [r13]",
    "mov     dword [r13], esi",
    "mov     dword [rbp-0x34], eax",
    "lea     rax, [rel rl_explicit_arg]",
    "mov     dword [rax], 0x1",
    "nop     word [rax+rax]",
    "mov     rax, qword [rbx]",
    "and     ah, 0xfb",
    "jmp     0xe74f3",
    "mov     esi, dword [r13]",
    "cmp     esi, 0xf4240",
    "jle     0xe7460",
    "mov     qword [rbx], rax",
    "mov     eax, dword [rbp-0x34]",
    "imul    eax, dword [r13]",
    "mov     dword [r13], eax",
    "call    _rl_bracketed_read_key",
    "test    eax, eax",
    "js      0xe75d1",
    "imul    esi, dword [r15]",
    "mov     rdi, r14",
    "xor     eax, eax",
    "call    rl_message",
    "or      qword [rbx], 0x40",
    "call    rl_read_key",
    "and     qword [rbx], 0xffffffffffffffbf",
    "mov     edi, eax",
    "call    sub_e5230",
    "test    eax, eax",
    "jle     0xe75a8",
    "lea     rax, [rel _rl_argcxt]",
    "mov     dword [r13], 0x0",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel rl_explicit_arg]",
    "mov     dword [rax], 0x0",
    "call    rl_ding",
    "call    rl_restore_prompt",
    "lea     rax, [rel rl_prompt]",
    "mov     rdx, qword [rax]",
    "lea     rax, [rel rl_display_prompt]",
    "mov     qword [rax], rdx",
    "mov     eax, dword [rel data_16a4b0]",
    "test    eax, eax",
    "jne     0xe7590",
    "mov     dword [r12+0x20], 0x0",
    "mov     eax, 0xffffffff",
    "jmp     0xe7397",
    "mov     dword [r12+0x20], eax",
    "jmp     0xe73d8",
    "call    rl_restore_prompt",
    "mov     dword [rel data_16a4b0], 0x0",
    "jmp     0xe74e4",
    "lea     rax, [rel rl_redisplay_function]",
    "call    qword [rax]",
    "mov     rax, qword [rbx]",
    "and     ah, 0xfb",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    "
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x8a390",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x10",
    "test    edi, edi",
    "je      0x8a400",
    "lea     eax, [rdi-0x41]",
    "cmp     eax, 0x2",
    "ja      0x8a448",
    "cmp     edi, 0x41",
    "je      0x8a400",
    "mov     eax, dword [rel data_1611a0]",
    "lea     r13, [rel data_1611a0]",
    "movsxd  r12, edi",
    "lea     r13, [rel data_1611a0]",
    "movsxd  r12, edi",
    "mov     eax, dword [r13+r12*4]",
    "test    al, 0x10",
    "je      0x8a458",
    "lea     eax, [rdi-0x42]",
    "cmp     eax, 0x1",
    "jbe     0x8a408",
    "mov     edx, eax",
    "lea     rbx, [rel trap_list]",
    "and     edx, 0x10",
    "lea     rbx, [rel trap_list]",
    "mov     rdi, qword [rbx+r12*8]",
    "cmp     rdi, 0x1",
    "jbe     0x8a484",
    "test    al, 0x1",
    "je      0x8a500",
    "lea     rdx, [rel trap_list]",
    "and     eax, 0xfffffffe",
    "mov     qword [rdx+r12*8], 0x0",
    "cmp     edi, 0x40",
    "jle     0x8a490",
    "mov     dword [r13+r12*4], eax",
    "add     rsp, 0x10",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "jmp     0x8a42d",
    "mov     edx, eax",
    "and     edx, 0x10",
    "jmp     0x8a50c",
    "cmp     rdi, qword [rel data_157f80]",
    "je      0x8a484",
    "lea     r13, [rel original_signals]",
    "movsxd  r12, edi",
    "lea     r14, [rel initialize_traps]",
    "cmp     qword [r13+r12*8], r14",
    "je      0x8a548",
    "lea     r13, [rel data_1611a0]",
    "movsxd  r12, edi",
    "mov     eax, dword [r13+r12*4]",
    "test    al, 0x2",
    "jne     0x8a3e9",
    "or      eax, 0x20",
    "mov     qword [rbx+r12*8], 0x0",
    "and     eax, 0xfffffffe",
    "test    edx, edx",
    "je      0x8a430",
    "call    free",
    "mov     eax, dword [r13+r12*4]",
    "xor     esi, esi",
    "mov     dword [rbp-0x24], edi",
    "call    set_signal_handler",
    "mov     edi, dword [rbp-0x24]",
    "mov     rsi, rax",
    "mov     qword [r13+r12*8], rax",
    "call    set_signal_handler",
    "cmp     qword [r13+r12*8], 0x1",
    "je      0x8a588",
    "lea     r13, [rel data_1611a0]",
    "mov     eax, dword [r13+r12*4]",
    "mov     edx, eax",
    "and     edx, 0x2",
    "add     rsp, 0x10",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "test    al, 0x1",
    "je      0x8a3e9",
    "lea     rax, [rel data_1611a0]",
    "or      dword [rax+r12*4], 0x2",
    "jmp     0x8a3e9",
    "lea     r13, [rel data_1611a0]",
    "mov     edi, dword [rbp-0x24]",
    "mov     eax, dword [r13+r12*4]",
    "mov     edx, eax",
    "and     edx, 0x2",
    "jmp     0x8a4bd",
    "test    al, 0x1",
    "jne     0x8a3d4",
    "test    al, 0x8",
    "je      0x8a528",
    "test    edx, edx",
    "jne     0x8a3e9",
    "cmp     edi, 0x11",
    "jne     0x8a3e9",
    "lea     rax, [rel original_signals]",
    "mov     dword [rbp-0x24], edi",
    "mov     rsi, qword [rax+r12*8]",
    "call    set_signal_handler",
    "mov     edi, dword [rbp-0x24]",
    "jmp     0x8a3dc",
    "xor     esi, esi",
    "call    sub_88510",
    "and     dword [r13+r12*4], 0xfffffffe",
    "test    al, 0x10",
    "je      0x8a3e9",
    "lea     rdx, [rel trap_list]",
    "cmp     qword [rdx+0x88], r14",
    "jne     0x8a3e9",
    "jmp     0x8a3d4"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
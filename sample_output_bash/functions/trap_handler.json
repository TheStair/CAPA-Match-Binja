{
  "address": "0x8d680",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "get current PID on Linux",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "terminate process via kill"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "lea     r13, [rel data_1611a0]",
    "push    r12",
    "movsxd  r12, edi",
    "push    rbx",
    "sub     rsp, 0x98",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "test    byte [r13+r12*4], 0x1",
    "je      0x8d753",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x8d87d",
    "lea     rax, [rel subshell_environment]",
    "mov     rbx, r12",
    "mov     eax, dword [rax]",
    "test    ah, 0x1",
    "je      0x8d778",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x98",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "cmp     r12d, 0x40",
    "jg      0x8d7e8",
    "lea     rax, [rel trap_list]",
    "cmp     qword [rax+r12*8], 0x1",
    "je      0x8d7e8",
    "lea     rsi, [rel data_120a61]  {\"trap_handler: bad signal %d\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     esi, ebx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    programming_error",
    "{ Does not return }",
    "lea     rax, [rel trap_list]",
    "cmp     qword [rax+r12*8], 0x1",
    "jbe     0x8d7e8",
    "lea     rax, [rel original_signals]",
    "mov     rsi, qword [rax+r12*8]",
    "cmp     rsi, qword [rel data_157f80]",
    "je      0x8d810",
    "call    __errno_location",
    "lea     rdx, [rel pending_traps]",
    "mov     ecx, dword [rax]",
    "mov     dword [rel data_168788], 0x1",
    "add     dword [rdx+r12*4], 0x1",
    "lea     rdx, [rel trapped_signal_received]",
    "mov     dword [rdx], r12d",
    "lea     rdx, [rel this_shell_builtin]",
    "mov     rdx, qword [rdx]",
    "test    rdx, rdx",
    "je      0x8d7cb",
    "mov     qword [rax+r12*8], 0x0",
    "xor     esi, esi",
    "jmp     0x8d6f8",
    "mov     edi, ebx",
    "call    set_signal_handler",
    "xor     esi, esi",
    "mov     edi, ebx",
    "call    sub_88510",
    "and     dword [r13+r12*4], 0xfffffffe",
    "lea     r12, [rbp-0xb0]",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     rdx, r12",
    "xor     esi, esi",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "mov     esi, ebx",
    "mov     rdi, r12",
    "call    sigdelset",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "xor     edx, edx",
    "call    sigprocmask",
    "call    getpid",
    "mov     esi, ebx",
    "mov     edi, eax",
    "call    kill",
    "lea     rdx, [rel rl_readline_state]",
    "mov     rdx, qword [rdx]",
    "and     dh, 0x80",
    "jne     0x8d820",
    "cmp     rdx, qword [rel data_157ec8]",
    "je      0x8d840",
    "lea     rdx, [rel rl_signal_event_hook]",
    "lea     rsi, [rel sub_a5e20]",
    "mov     qword [rdx], rsi",
    "mov     dword [rax], ecx",
    "jmp     0x8d753",
    "mov     dword [rax], ecx",
    "jmp     0x8d753",
    "lea     rdx, [rel wait_signal_received]",
    "mov     dword [rdx], r12d",
    "lea     rdx, [rel waiting_for_child]",
    "mov     esi, dword [rdx]",
    "test    esi, esi",
    "je      0x8d7cb",
    "lea     rdx, [rel wait_intr_flag]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "je      0x8d7cb",
    "lea     rdi, [rel wait_intr_buf]",
    "mov     esi, 0x1",
    "call    __longjmp_chk",
    "{ Does not return }"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
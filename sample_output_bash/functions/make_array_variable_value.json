{
  "address": "0x95ed0",
  "rules": [
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rcx",
    "push    r13",
    "push    r12",
    "mov     r12d, r8d",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x28",
    "and     r8d, 0x1",
    "mov     qword [rbp-0x38], rdx",
    "je      0x95ff0",
    "add     rsp, 0x28",
    "mov     edx, r12d",
    "mov     rsi, rcx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     make_variable_value",
    "mov     edi, 0x30",
    "mov     r15, rsi",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x96057",
    "mov     esi, 0x30",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r8, qword [rbx]",
    "mov     rdi, r8",
    "mov     qword [rbp-0x48], r8",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x40], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x40]",
    "mov     r8, qword [rbp-0x48]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x9606f",
    "mov     qword [rbp-0x50], rax",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r8",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     qword [r13], rax",
    "test    byte [rbx+0x28], 0x40",
    "jne     0x96010",
    "mov     rsi, qword [rbx+0x8]",
    "test    rsi, rsi",
    "je      0x96038",
    "mov     rdi, qword [rbx+0x8]",
    "mov     rsi, r15",
    "call    array_reference",
    "mov     r15, rax",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x96095",
    "mov     rdi, qword [rbp-0x38]",
    "xor     edx, edx",
    "call    hash_search",
    "test    rax, rax",
    "je      0x96038",
    "mov     rdi, r15",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x38], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x960aa",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r13+0x8], r15",
    "mov     byte [r15], 0x0",
    "jmp     0x95fb0",
    "mov     r15, qword [rax+0x10]",
    "jmp     0x95f70",
    "mov     qword [rbp-0x40], rax",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r15",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     qword [r13+0x8], rax",
    "mov     eax, dword [rbx+0x28]",
    "mov     edx, r12d",
    "mov     rsi, r14",
    "mov     rdi, r13",
    "mov     qword [r13+0x10], 0x0",
    "and     eax, 0xffffffba",
    "mov     dword [r13+0x28], eax",
    "call    make_variable_value",
    "mov     rdi, r13",
    "mov     rbx, rax",
    "call    dispose_variable",
    "add     rsp, 0x28",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    r15, r15",
    "je      0x96038"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
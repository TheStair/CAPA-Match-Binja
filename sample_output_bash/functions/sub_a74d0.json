{
  "address": "0xa74d0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r14 {__saved_r14}",
    "mov     r14, rdi",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "lea     r12, [rel word_token_alist]",
    "push    rbx {__saved_rbx}",
    "cmp     qword [r12], 0x0",
    "je      0xa7578  {word_token_alist}",
    "xor     edi, edi  {0x0}",
    "xor     ebx, ebx  {0x0}",
    "call    strlist_create",
    "mov     rsi, rax",
    "mov     rax, qword [rax]",
    "jmp     0xa7556",
    "lea     rax, [r12+0x10]  {data_159570}",
    "xor     ebx, ebx  {0x0}",
    "nop     dword [rax+rax]",
    "mov     dword [rsi+0xc], ebx",
    "mov     qword [rax], 0x0",
    "xor     eax, eax  {0x0}",
    "or      dword [r14], 0x20",
    "mov     qword [r14+0x10], rsi",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "add     rax, 0x10",
    "movsxd  r13, ebx",
    "add     ebx, 0x1",
    "cmp     qword [rax-0x10], 0x0",
    "jne     0xa7500",
    "mov     edi, ebx",
    "shl     r13, 0x4",
    "call    strlist_create",
    "mov     rcx, r12  {word_token_alist}",
    "mov     rdi, qword [rax]",
    "mov     rsi, rax",
    "lea     rax, [r12+0x10]  {data_159570}",
    "add     r13, rax",
    "mov     rdx, rdi",
    "jmp     0xa753c",
    "mov     rcx, qword [rcx]",
    "add     rdx, 0x8",
    "mov     qword [rdx-0x8], rcx",
    "mov     rcx, rax",
    "cmp     rax, r13",
    "jne     0xa7538",
    "add     rax, 0x10",
    "movsxd  rax, ebx",
    "lea     rax, [rdi+rax*8]"
  ],
  "high level IL": [
    "void* rax_4",
    "int32_t rbx",
    "int64_t* rsi",
    "if (word_token_alist == 0)",
    "rbx = 0",
    "void** rax_6 = strlist_create(0)",
    "rsi = rax_6",
    "rax_4 = *rax_6",
    "char const (** rax)[0x5] = &data_159570",
    "rbx = 0",
    "int64_t r13_1",
    "rax = &rax[2]",
    "r13_1 = sx.q(rbx)",
    "rbx += 1",
    "do while (rax[-2] != 0)",
    "int64_t* rax_1 = strlist_create(rbx)",
    "char const (** rcx_1)[0x3] = &word_token_alist",
    "void* rdi_1 = *rax_1",
    "rsi = rax_1",
    "char const (** rax_2)[0x5] = &data_159570",
    "void* rdx_1 = rdi_1",
    "while (true)",
    "rdx_1 += 8",
    "*(rdx_1 - 8) = *rcx_1",
    "rcx_1 = rax_2",
    "if (rax_2 == &(&data_159570)[r13_1 * 2])",
    "break",
    "rax_2 = &rax_2[2]",
    "rax_4 = rdi_1 + (sx.q(rbx) << 3)",
    "*(rsi + 0xc) = rbx",
    "*rax_4 = 0",
    "*arg1 |= 0x20",
    "*(arg1 + 0x10) = rsi",
    "return 0"
  ]
}
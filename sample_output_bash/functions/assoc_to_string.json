{
  "address": "0x98a10",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     qword [rbp-0x48], rdi",
    "mov     qword [rbp-0x50], rsi",
    "test    rdi, rdi",
    "je      0x98c3e",
    "xor     r12d, r12d",
    "jmp     0x98bf8",
    "mov     ecx, dword [rdi+0xc]",
    "test    ecx, ecx",
    "je      0x98c25",
    "add     rsp, 0x28",
    "mov     rax, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x98ca9",
    "mov     eax, dword [rdi+0x8]",
    "mov     qword [rbp-0x38], 0x0",
    "mov     r13d, edx",
    "xor     r12d, r12d",
    "test    eax, eax",
    "jle     0x98c0a",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r12], 0x0",
    "jmp     0x98bf8",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x98c91",
    "nop     word [rax+rax]",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r12], 0x0",
    "xor     ebx, ebx",
    "jmp     0x98bf0",
    "mov     r14, qword [rbx+0x10]",
    "test    r14, r14",
    "je      0x98aea",
    "jmp     0x98ba0",
    "mov     rdi, rbx",
    "call    dispose_words",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "je      0x98ba0",
    "test    r13d, r13d",
    "jne     0x98a80",
    "mov     rdx, qword [rbp-0x48]",
    "add     qword [rbp-0x38], 0x1",
    "mov     rax, qword [rbp-0x38]",
    "cmp     dword [rdx+0x8], eax",
    "jg      0x98a60",
    "cmp     byte [r14], 0x0",
    "jne     0x98b90",
    "mov     rdi, r14",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x98c6c",
    "mov     rax, qword [rbp-0x48]",
    "mov     rdx, qword [rbp-0x38]",
    "mov     rax, qword [rax]",
    "mov     rbx, qword [rax+rdx*8]",
    "test    rbx, rbx",
    "jne     0x98af6",
    "test    r12, r12",
    "je      0x98c0a",
    "mov     rdi, r14",
    "call    sub_87450",
    "mov     r14, rax",
    "jmp     0x98aab",
    "mov     edi, 0x2",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x98c43",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "call    dcgettext",
    "mov     rdx, r15",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     rsi, r14",
    "mov     rcx, r15",
    "mov     rdx, r15",
    "call    __memcpy_chk",
    "mov     r14, rax",
    "jmp     0x98aab",
    "mov     rax, qword [r12]",
    "mov     rbx, r12",
    "test    rax, rax",
    "je      0x98be1",
    "mov     rdi, r14",
    "call    make_bare_word",
    "lea     rsi, [rel wlcache]",
    "mov     rcx, rax",
    "mov     eax, dword [rsi+0xc]",
    "test    eax, eax",
    "jle     0x98b40",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     edx, 0x2",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "movzx   eax, word [rel data_136aa4]",
    "mov     word [r14], ax",
    "mov     rsi, qword [rbp-0x50]",
    "mov     rdi, rbx",
    "call    string_list_internal",
    "mov     r12, rax",
    "mov     qword [r12], 0x0",
    "nop     ",
    "mov     edi, 0x10",
    "mov     qword [rbp-0x40], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x40]",
    "test    rax, rax",
    "mov     r15, rax",
    "jne     0x98ad3",
    "sub     eax, 0x1",
    "mov     rdi, qword [rsi]",
    "mov     dword [rsi+0xc], eax",
    "cdqe    ",
    "mov     r15, qword [rdi+rax*8]",
    "mov     rbx, rax",
    "mov     rax, qword [rax]",
    "mov     qword [rbx], r12",
    "mov     r12, rbx",
    "test    rax, rax",
    "jne     0x98bd0",
    "mov     qword [r15+0x8], rcx",
    "mov     qword [r15], r12",
    "test    r14, r14",
    "je      0x98ae7",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     edx, 0x10",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     r12, r15",
    "mov     rdi, r14",
    "call    free"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
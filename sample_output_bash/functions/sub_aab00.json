{
  "address": "0xaab00",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rsi",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x28",
    "mov     eax, dword [rdi]",
    "mov     edx, eax",
    "and     edx, 0x7",
    "cmp     edx, 0x4",
    "je      0xaab38",
    "mov     r15, qword [rbx+0x10]",
    "test    r15, r15",
    "je      0xaac1b",
    "test    al, 0x3",
    "jne     0xaacd8",
    "add     rsp, 0x28",
    "mov     rax, r15",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     edi, dword [r15+0xc]",
    "add     edi, 0x1",
    "call    strlist_create",
    "movzx   esi, byte [r12]",
    "mov     r13, qword [rbx+0x10]",
    "mov     r15, rax",
    "cmp     sil, 0x22",
    "sete    al",
    "je      0xaab6d",
    "xor     eax, eax",
    "call    clean_itemlist",
    "test    byte [rbx], 0x4",
    "jne     0xaab38",
    "test    byte [rbx], 0x4",
    "je      0xaac88",
    "movsx   esi, sil",
    "mov     rdi, r12",
    "call    sub_9ca20",
    "mov     dword [rbp-0x34], 0x0",
    "mov     qword [rbp-0x40], rax",
    "test    rax, rax",
    "je      0xaacf0",
    "cmp     sil, 0x27",
    "cmovne  esi, eax",
    "jmp     0xaac88",
    "mov     rdi, rbx",
    "call    qword [rbx+0x8]",
    "mov     eax, dword [rbx]",
    "and     eax, 0xfffffffd",
    "or      eax, 0x4",
    "mov     dword [rbx], eax",
    "jmp     0xaab38",
    "mov     eax, dword [r13+0xc]",
    "test    eax, eax",
    "jg      0xaaba2",
    "cmp     byte [rax], 0x0",
    "jne     0xaaca0",
    "movsxd  rax, dword [rbp-0x34]",
    "xor     r12d, r12d",
    "xor     r14d, r14d",
    "mov     qword [rbp-0x50], rax",
    "jmp     0xaabcd",
    "mov     rax, qword [r15]",
    "mov     dword [r15+0xc], 0x0",
    "mov     qword [rax], 0x0",
    "jmp     0xaac1b",
    "cmp     byte [rax+0x1], 0x0",
    "mov     dword [rbp-0x34], 0x1",
    "je      0xaab96",
    "mov     edx, dword [r13+0xc]",
    "test    edx, edx",
    "jle     0xaad13",
    "mov     rax, qword [r13]",
    "mov     ecx, dword [rbp-0x34]",
    "mov     rbx, qword [rax+r12*8]",
    "test    ecx, ecx",
    "jne     0xaabb8",
    "cmp     byte [rax+0x2], 0x0",
    "mov     dword [rbp-0x34], 0x2",
    "je      0xaab96",
    "mov     rax, qword [r15]",
    "mov     dword [r15+0xc], 0x0",
    "mov     qword [rax], 0x0",
    "jmp     0xaac12",
    "mov     rax, qword [rbp-0x40]",
    "movzx   eax, byte [rax]",
    "cmp     byte [rbx], al",
    "je      0xaac30",
    "test    rbx, rbx",
    "jne     0xaac48",
    "mov     rdi, rax",
    "call    strlen",
    "mov     dword [rbp-0x34], eax",
    "jmp     0xaab96",
    "mov     rdi, qword [rbp-0x40]",
    "call    free",
    "mov     rdx, qword [rbp-0x50]",
    "mov     rsi, qword [rbp-0x40]",
    "mov     rdi, rbx",
    "call    strncmp",
    "test    eax, eax",
    "jne     0xaabc3",
    "add     r12, 0x1",
    "cmp     dword [r13+0xc], r12d",
    "jle     0xaabf9",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x48], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x48]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0xaad2a",
    "mov     rax, qword [r15]",
    "movsxd  rdx, r14d",
    "add     r12, 0x1",
    "add     r14d, 0x1",
    "mov     qword [rax+rdx*8], rbx",
    "cmp     dword [r13+0xc], r12d",
    "jg      0xaabcd",
    "mov     rax, qword [r15]",
    "movsxd  r8, r14d",
    "cmp     qword [rbp-0x40], 0x0",
    "mov     dword [r15+0xc], r14d",
    "mov     qword [rax+r8*8], 0x0",
    "je      0xaac1b",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, rbx",
    "mov     rcx, rdx",
    "call    __memcpy_chk",
    "mov     rbx, rax",
    "jmp     0xaabe1"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
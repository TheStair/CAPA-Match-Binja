{
  "address": "0x8afc0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "lea     r13, [rel trap_list]",
    "push    r12",
    "push    rbx",
    "mov     rdx, qword [r13]",
    "test    rdx, rdx",
    "je      0x8b007",
    "mov     rdx, qword [r13+0x208]",
    "mov     rcx, qword [r13+0x218]",
    "test    rdx, rdx",
    "je      0x8b174",
    "mov     eax, dword [rel data_1611a0]",
    "mov     ecx, eax",
    "and     eax, 0xffffffbf",
    "or      ecx, 0x41",
    "or      eax, 0x1",
    "cmp     rdx, 0x1",
    "cmove   eax, ecx",
    "mov     edx, eax",
    "or      edx, 0x20",
    "test    al, 0x10",
    "cmovne  eax, edx",
    "mov     dword [rel data_1611a0], eax",
    "test    rcx, rcx",
    "je      0x8b02f",
    "lea     rax, [rel function_trace_mode]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x8b116",
    "mov     rdx, qword [r13+0x210]",
    "test    rdx, rdx",
    "je      0x8b04c",
    "lea     rax, [rel function_trace_mode]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x8b02f",
    "mov     eax, dword [rel data_1612a4]",
    "mov     esi, eax",
    "and     eax, 0xffffffbf",
    "or      esi, 0x41",
    "or      eax, 0x1",
    "cmp     rdx, 0x1",
    "cmove   eax, esi",
    "mov     edx, eax",
    "or      edx, 0x20",
    "test    al, 0x10",
    "cmovne  eax, edx",
    "mov     dword [rel data_1612a4], eax",
    "test    rcx, rcx",
    "je      0x8b02f",
    "lea     r14, [rel pending_traps]",
    "lea     r12, [rel data_1611a4]",
    "mov     ebx, 0x1",
    "jmp     0x8b096",
    "lea     rax, [rel error_trace_mode]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x8b0e9",
    "jmp     0x8b147",
    "mov     eax, dword [rel data_1612ac]",
    "mov     edx, eax",
    "and     eax, 0xffffffbf",
    "or      edx, 0x41",
    "or      eax, 0x1",
    "cmp     rcx, 0x1",
    "cmove   eax, edx",
    "mov     edx, eax",
    "or      edx, 0x20",
    "test    al, 0x10",
    "cmovne  eax, edx",
    "mov     dword [rel data_1612ac], eax",
    "jmp     0x8b02f",
    "mov     r8, qword [r13+rbx*8]",
    "mov     r9d, ebx",
    "test    byte [r12], 0x4",
    "jne     0x8b068",
    "mov     eax, dword [rel data_1612a8]",
    "mov     ecx, eax",
    "and     eax, 0xffffffbf",
    "or      ecx, 0x41",
    "or      eax, 0x1",
    "cmp     rdx, 0x1",
    "cmove   eax, ecx",
    "mov     edx, eax",
    "or      edx, 0x20",
    "test    al, 0x10",
    "cmovne  eax, edx",
    "mov     dword [rel data_1612a8], eax",
    "jmp     0x8b04c",
    "test    r8, r8",
    "je      0x8b080",
    "cmp     r8, 0x1",
    "je      0x8b0c0",
    "mov     dword [r14+rbx*4], 0x0",
    "add     rbx, 0x1",
    "add     r12, 0x4",
    "cmp     rbx, 0x41",
    "je      0x8b0e0",
    "mov     edi, ebx",
    "call    sub_87050",
    "cmp     r8, 0x1",
    "je      0x8b0c7",
    "mov     edi, ebx",
    "call    sub_87050",
    "test    r8, r8",
    "je      0x8b080",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "test    byte [r12], 0x8",
    "jne     0x8b080",
    "nop     word [rax+rax]",
    "mov     esi, 0x1",
    "mov     edi, r9d",
    "call    set_signal_handler",
    "jmp     0x8b080",
    "mov     rsi, r8",
    "mov     edi, ebx",
    "call    set_signal",
    "jmp     0x8b080"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x78d00",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "check OS version/05c4f722021b4c44a9480dc26ee71d47"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x1000",
    "or      qword [rsp], 0x0",
    "sub     rsp, 0x78",
    "mov     qword [rbp-0x1060], r8",
    "mov     ebx, edi",
    "mov     dword [rbp-0x1054], esi",
    "mov     dword [rbp-0x1078], edi",
    "mov     dword [rbp-0x1074], edx",
    "mov     qword [rbp-0x10a0], rcx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel ifs_cmap]",
    "movzx   esi, byte [rax+0x1]",
    "movzx   eax, byte [rax+0x7f]",
    "mov     dword [rbp-0x1058], esi",
    "mov     byte [rbp-0x1095], al",
    "call    __ctype_get_mb_cur_max",
    "test    ebx, ebx",
    "mov     r8, qword [rbp-0x1060]",
    "mov     dword [rbp-0x1094], eax",
    "js      0x791c9",
    "mov     rax, qword [rbp-0x10a0]",
    "test    rax, rax",
    "je      0x791db",
    "lea     rax, [rbp-0x1040]",
    "xor     r13d, r13d",
    "xor     r12d, r12d",
    "xor     r14d, r14d",
    "mov     qword [rbp-0x1080], rax",
    "mov     eax, dword [rbp-0x1094]",
    "mov     dword [rbp-0x1070], 0x0",
    "lea     r15d, [rax+0x1]",
    "movsxd  rax, r15d",
    "mov     r15, r8",
    "mov     r8, r13",
    "mov     qword [rbp-0x1060], rax",
    "xor     r13d, r13d",
    "jmp     0x78f4c",
    "mov     dword [rax], 0x0",
    "mov     r15, qword [rbp-0x1080]",
    "mov     edi, dword [rbp-0x1078]",
    "mov     edx, 0x1000",
    "mov     qword [rbp-0x1068], r8",
    "mov     rsi, r15",
    "call    zread",
    "mov     r8, qword [rbp-0x1068]",
    "test    rax, rax",
    "mov     r12, rax",
    "jg      0x78dc9",
    "movsx   edx, byte [r15]",
    "lea     r9, [r15+0x1]",
    "mov     ebx, edx",
    "test    edx, edx",
    "je      0x78fb0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x79256",
    "mov     rbx, r13",
    "mov     r13, r8",
    "test    r8, r8",
    "je      0x791c0",
    "mov     esi, dword [rbp-0x1070]",
    "test    esi, esi",
    "je      0x79128",
    "mov     rax, qword [rbp-0x1060]",
    "add     rax, r13",
    "cmp     rax, r14",
    "jae     0x79070",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x1078",
    "mov     rax, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    rbx, rbx",
    "jne     0x78ef9",
    "mov     byte [r8+rbx], 0x0",
    "test    rbx, rbx",
    "je      0x79245",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133390]  {\"command substitution: ignored nu\u2026\"}",
    "xor     edi, edi",
    "mov     qword [rbp-0x1070], r8",
    "mov     qword [rbp-0x1068], r9",
    "call    dcgettext",
    "lea     rdi, [rel data_1217ad[6]]  {\"%s\"}",
    "mov     rsi, rax",
    "xor     eax, eax",
    "call    internal_warning",
    "mov     r9, qword [rbp-0x1068]",
    "mov     r8, qword [rbp-0x1070]",
    "jmp     0x78fbe",
    "mov     dword [rbp-0x1070], 0x1",
    "mov     r15, r9",
    "jmp     0x78dbc",
    "mov     rcx, rax",
    "sub     rcx, r14",
    "add     r14, 0x200",
    "shr     rcx, 0x9",
    "and     ecx, 0x1",
    "cmp     rax, r14",
    "jb      0x790ac",
    "lea     r10, [r13+0x1]",
    "lea     rax, [r8+r13]",
    "test    byte [rbp-0x1054], 0x3",
    "je      0x78f78",
    "test    byte [rbp-0x1054], 0x3",
    "jne     0x78f2f",
    "mov     rdi, r8",
    "call    free",
    "jmp     0x791c9",
    "sub     r12, 0x1",
    "test    r12, r12",
    "jle     0x78ea8",
    "mov     dword [rbp-0x1088], edx",
    "mov     qword [rbp-0x1068], r9",
    "test    r8, r8",
    "je      0x79170",
    "test    rcx, rcx",
    "je      0x790a0",
    "cmp     edx, 0x1",
    "sete    sil",
    "test    byte [rbp-0x1074], 0x8",
    "je      0x78fd0",
    "lea     rcx, [rel locale_utf8locale]",
    "mov     byte [rax], 0x1",
    "mov     eax, dword [rcx]",
    "test    eax, eax",
    "jne     0x79010",
    "test    rbx, rbx",
    "jne     0x78f10",
    "jmp     0x791e8",
    "mov     rdi, r14",
    "call    malloc",
    "mov     edx, dword [rbp-0x1088]",
    "mov     r9, qword [rbp-0x1068]",
    "mov     r8, rax",
    "jmp     0x790dd",
    "mov     rdi, r8",
    "mov     rsi, r14",
    "call    realloc",
    "mov     r9, qword [rbp-0x1068]",
    "mov     edx, dword [rbp-0x1088]",
    "mov     r8, rax",
    "add     r14, 0x400",
    "cmp     rax, r14",
    "jae     0x790a0",
    "add     r14, 0x200",
    "cmp     rax, r14",
    "jb      0x790ac",
    "lea     rcx, [rel locale_utf8locale]",
    "mov     r11d, dword [rbp-0x1058]",
    "mov     edi, dword [rcx]",
    "test    r11d, r11d",
    "jne     0x78fea",
    "mov     ecx, dword [rbp-0x1058]",
    "test    ecx, ecx",
    "je      0x78fd0",
    "test    bl, bl",
    "js      0x78e2c",
    "test    bl, bl",
    "jns     0x78f9a",
    "cmp     byte [r13+rbx-0x1], 0xa",
    "lea     rax, [rbx-0x1]",
    "jne     0x79218",
    "mov     rbx, r13",
    "lea     eax, [rbx-0x1]",
    "test    eax, eax",
    "jns     0x79201",
    "test    r8, r8",
    "jne     0x78dee",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x1090], r8",
    "mov     dword [rbp-0x1088], edx",
    "mov     qword [rbp-0x1068], r9",
    "call    sub_a7f00",
    "{ Does not return }",
    "nop     word [rax+rax]",
    "cmp     byte [rbp-0x1095], 0x0",
    "jne     0x78ff8",
    "test    sil, sil",
    "jne     0x78f97",
    "test    sil, sil",
    "je      0x78fd0",
    "lea     rcx, [rbp-0x1048]",
    "mov     rdx, r12",
    "lea     rdi, [rbp-0x104c]",
    "mov     rsi, r15",
    "mov     qword [rbp-0x1090], r8",
    "mov     qword [rbp-0x1088], r9",
    "mov     qword [rbp-0x1068], r10",
    "mov     qword [rbp-0x1048], 0x0",
    "call    mbrtowc",
    "mov     r10, qword [rbp-0x1068]",
    "mov     r8, qword [rbp-0x1090]",
    "mov     rcx, rax",
    "mov     r9, qword [rbp-0x1088]",
    "lea     rdx, [rcx-0x2]",
    "lea     rax, [r8+r10]",
    "cmp     rdx, 0xfffffffffffffffb",
    "mov     byte [rax], bl",
    "lea     r13, [r10+0x1]",
    "jbe     0x79028",
    "mov     byte [r8+r10], bl",
    "lea     r13, [r10+0x1]",
    "jmp     0x78e98",
    "mov     byte [r8+r10], bl",
    "lea     r13, [r10+0x1]",
    "jmp     0x78e98",
    "cmp     dword [rbp-0x1094], 0x1",
    "jle     0x78f9a",
    "add     rbx, r13",
    "jmp     0x78f37",
    "sub     rbx, 0x2",
    "cmp     byte [r13+rax-0x1], 0x1",
    "je      0x78f2f",
    "mov     dword [rax], 0x0",
    "cmp     byte [r13+rax], 0xa",
    "je      0x791f8",
    "jmp     0x79252",
    "cmp     edx, 0x20",
    "je      0x79190",
    "cmp     edx, 0x7f",
    "je      0x78f97",
    "mov     byte [rax], 0x1",
    "lea     rbx, [rcx-0x1]",
    "lea     rdi, [r8+r13]",
    "mov     rsi, r9",
    "add     r12, 0x1",
    "mov     rdx, rbx",
    "mov     qword [rbp-0x1088], rcx",
    "add     r13, rbx",
    "mov     qword [rbp-0x1068], r8",
    "call    memcpy",
    "mov     rcx, qword [rbp-0x1088]",
    "mov     r8, qword [rbp-0x1068]",
    "add     r15, rcx",
    "sub     r12, rcx",
    "jmp     0x78dbc",
    "nop     dword [rax]",
    "sub     r12, 0x1",
    "mov     r15, r9",
    "test    r12, r12",
    "jg      0x78dc9",
    "mov     byte [rbx], 0x0",
    "mov     rbx, rax",
    "sub     rax, 0x1",
    "cmp     eax, 0xffffffff",
    "je      0x79233",
    "mov     byte [r13+rax+0x1], 0x0",
    "jmp     0x78f3a",
    "cdqe    ",
    "jmp     0x79209",
    "lea     rdx, [rel ifs_value]",
    "mov     rdx, qword [rdx]",
    "test    rdx, rdx",
    "je      0x791af",
    "mov     eax, dword [rcx]",
    "mov     r10, r13",
    "test    eax, eax",
    "je      0x78e17",
    "mov     rax, 0xffffffffffffffff",
    "mov     byte [r13+rax+0x1], 0x0",
    "jmp     0x78f3a",
    "mov     rax, qword [rbp-0x10a0]",
    "test    rax, rax",
    "je      0x78f4c",
    "mov     r10, r13",
    "mov     byte [r8+r10], bl",
    "lea     r13, [r10+0x1]",
    "jmp     0x78e98",
    "cmp     byte [rdx], 0x0",
    "je      0x79220",
    "nop     ",
    "mov     byte [rax], 0x1",
    "mov     r13, r10",
    "test    edi, edi",
    "je      0x791af",
    "mov     r10, r13",
    "test    edi, edi",
    "jne     0x78f9a",
    "jmp     0x78f9a"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
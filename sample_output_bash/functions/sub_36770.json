{
  "address": "0x36770",
  "rules": [
    "write file on Linux",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "PEB access/684066f105bd43c0a5be1ea6f2b60301"
  ],
  "disassembly": [
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "push    r14 {__saved_r14}",
    "push    r13 {__saved_r13}",
    "mov     r13d, esi",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "test    esi, esi",
    "jne     0x36944",
    "call    shell_version_string",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f087]  {\"GNU bash, version %s-(%s)\\n\"}",
    "mov     r12, rax",
    "call    dcgettext",
    "mov     rcx, r12  {data_162b40}",
    "mov     esi, 0x2",
    "mov     rdi, rbx",
    "mov     rdx, rax",
    "lea     r8, [rel data_11f0a2]  {\"x86_64-pc-linux-gnu\"}",
    "xor     eax, eax  {0x0}",
    "call    __fprintf_chk",
    "jmp     0x3678f",
    "lea     r14, [rel shell_name]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_123128]  {\"Usage:\\t%s [GNU long option] [op\u2026\"}",
    "xor     edi, edi  {0x0}",
    "lea     r15, [rel data_155e80]",
    "mov     r12, qword [r14]  {shell_name}",
    "call    dcgettext",
    "mov     esi, 0x2",
    "mov     rdi, rbx",
    "mov     rcx, r12",
    "mov     r8, r12",
    "lea     r12, [rel data_11f0c9]",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    __fprintf_chk",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0b6]  {\"GNU long options:\\n\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "call    fputs",
    "lea     rcx, [rel data_11f8c1[3]]  {\"debug\"}",
    "nop     word [rax+rax]",
    "mov     rdx, r12  {data_11f0c9, \"\\t--%s\\n\"}",
    "mov     esi, 0x2",
    "mov     rdi, rbx",
    "xor     eax, eax  {0x0}",
    "call    __fprintf_chk",
    "mov     rcx, qword [r15]",
    "add     r15, 0x20",
    "test    rcx, rcx",
    "jne     0x36800",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0d0]  {\"Shell options:\\n\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "call    fputs",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_123188]  {\"\\t-ilrsD or -c command or -O sho\u2026\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "call    fputs",
    "lea     rax, [rel shell_builtins]",
    "mov     r15, qword [rax]  {shell_builtins}",
    "mov     rdi, qword [r15]",
    "test    rdi, rdi",
    "je      0x36930",
    "test    r13d, r13d",
    "jne     0x36980",
    "lea     r12, [rel data_121260]",
    "jmp     0x36891",
    "mov     r12, qword [r14]  {shell_name}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1231c8]  {\"Type `%s -c \"help set\"' for more\u2026\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdi, rbx",
    "mov     esi, 0x2",
    "mov     rcx, r12",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    __fprintf_chk",
    "mov     r12, qword [r14]  {shell_name}",
    "mov     edx, 0x5",
    "xor     edi, edi  {0x0}",
    "lea     rsi, [rel data_123210]  {\"Type `%s -c help' for more infor\u2026\"}",
    "call    dcgettext",
    "mov     rcx, r12",
    "mov     rdi, rbx",
    "mov     esi, 0x2",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    __fprintf_chk",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_123258]  {\"Use the `bashbug' command to rep\u2026\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdi, rbx",
    "mov     esi, 0x2",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    __fprintf_chk",
    "mov     rsi, rbx",
    "mov     edi, 0xa",
    "call    fputc",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_123288]  {\"bash home page: <http://www.gnu.\u2026\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdi, rbx",
    "mov     esi, 0x2",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    __fprintf_chk",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1232c0]  {\"General help using GNU software:\u2026\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "pop     rcx {var_38}",
    "mov     rdi, rbx",
    "mov     esi, 0x2",
    "pop     rbx {__saved_rbx}",
    "mov     rdx, rax",
    "pop     r12 {__saved_r12}",
    "xor     eax, eax  {0x0}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "jmp     __fprintf_chk",
    "add     rsp, 0x8",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "cmp     byte [rdi], 0x73",
    "jne     0x36880",
    "mov     rdi, qword [r15+0x30]",
    "add     r15, 0x30",
    "test    rdi, rdi",
    "je      0x36930",
    "mov     rsi, r12  {data_121260, \"set\"}",
    "call    strcmp",
    "test    eax, eax",
    "jne     0x36880",
    "mov     r12, qword [r15+0x20]",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rdi, [rax+0x1]",
    "call    xmalloc",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "call    strcpy",
    "mov     esi, 0x5b",
    "mov     rdi, rax",
    "mov     r15, rax",
    "call    strchr",
    "mov     r12, rax",
    "test    rax, rax",
    "cmove   r12, r15",
    "nop     dword [rax]",
    "add     r12, 0x1",
    "cmp     byte [r12], 0x2d",
    "je      0x368e0",
    "mov     esi, 0x5d",
    "mov     rdi, r12",
    "call    strchr",
    "test    rax, rax",
    "je      0x36900",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0e0]  {\"\\t-%s or -o option\\n\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdi, rbx",
    "mov     rcx, r12",
    "mov     esi, 0x2",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    __fprintf_chk",
    "mov     rdi, r15",
    "call    free",
    "mov     byte [rax], 0x0"
  ],
  "high level IL": [
    "if (arg2 != 0)",
    "shell_version_string()",
    "__fprintf_chk(arg1, 2, dcgettext(nullptr, \"GNU bash, version %s-(%s)\\n\", 5), &data_162b40, \"x86_64-pc-linux-gnu\")",
    "char const (** const r15)[0x9] = &data_155e80",
    "uint64_t shell_name_1 = shell_name",
    "__fprintf_chk(arg1, 2, dcgettext(nullptr, \"Usage:\\t%s [GNU long option] [op\u2026\", 5), shell_name_1, shell_name_1)",
    "fputs(dcgettext(nullptr, \"GNU long options:\\n\", 5), arg1)",
    "char const* const i = \"debug\"",
    "while (i != 0)",
    "__fprintf_chk(arg1, 2, \"\\t--%s\\n\", i)",
    "i = *r15",
    "r15 = &r15[4]",
    "fputs(dcgettext(nullptr, \"Shell options:\\n\", 5), arg1)",
    "int32_t result = fputs(dcgettext(nullptr, \"\\t-ilrsD or -c command or -O sho\u2026\", 5), arg1)",
    "uint64_t shell_builtins_1 = shell_builtins",
    "char* i_1 = *shell_builtins_1",
    "while (i_1 != 0)",
    "if (*i_1 == 0x73)",
    "result = strcmp(i_1, \"set\")",
    "if (result == 0)",
    "char* r12 = *(shell_builtins_1 + 0x20)",
    "char* rax_9 = strcpy(xmalloc(strlen(r12) + 1), r12)",
    "char* rax_10 = strchr(rax_9, 0x5b)",
    "char* r12_1 = rax_10",
    "if (rax_10 == 0)",
    "r12_1 = rax_9",
    "r12_1 = &r12_1[1]",
    "do while (*r12_1 == 0x2d)",
    "char* rax_11 = strchr(r12_1, 0x5d)",
    "if (rax_11 != 0)",
    "*rax_11 = 0",
    "__fprintf_chk(arg1, 2, dcgettext(nullptr, \"\\t-%s or -o option\\n\", 5), r12_1)",
    "result = free(rax_9)",
    "break",
    "i_1 = *(shell_builtins_1 + 0x30)",
    "shell_builtins_1 += 0x30",
    "if (arg2 == 0)",
    "return result",
    "__fprintf_chk(arg1, 2, dcgettext(nullptr, \"Type `%s -c \"help set\"' for more\u2026\", 5), shell_name)",
    "__fprintf_chk(arg1, 2, dcgettext(nullptr, \"Type `%s -c help' for more infor\u2026\", 5), shell_name)",
    "__fprintf_chk(arg1, 2, dcgettext(nullptr, \"Use the `bashbug' command to rep\u2026\", 5))",
    "fputc(0xa, arg1)",
    "__fprintf_chk(arg1, 2, dcgettext(nullptr, \"bash home page: <http://www.gnu.\u2026\", 5))",
    "int64_t var_38",
    "return __fprintf_chk(arg1, 2, dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), var_38) __tailcall"
  ]
}
{
  "address": "0x39680",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "encrypt data using RSA via embedded library/8bc479b14953434c9835ec8295d733a3",
    "contain loop",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "PEB access/684066f105bd43c0a5be1ea6f2b60301"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x1000",
    "or      qword [rsp], 0x0",
    "sub     rsp, 0xd8",
    "mov     qword [rbp-0x10d8], rdi",
    "mov     edi, 0x30",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    malloc",
    "mov     r10, qword [rbp-0x10d8]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0x3a8cf",
    "mov     esi, 0x30",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsx   ecx, byte [r10]",
    "mov     byte [r12], 0x0",
    "lea     r8, [r10+0x1]",
    "mov     r9d, ecx",
    "test    ecx, ecx",
    "je      0x39ba0",
    "lea     r14, [rel dstack]",
    "movdqa  xmm1, xmmword [rel data_135120]",
    "mov     rax, qword [r14]",
    "mov     qword [rbp-0x10d8], rax",
    "mov     rax, qword [r14+0x8]",
    "movaps  xmmword [r14], xmm1",
    "mov     qword [rbp-0x10e0], rax",
    "lea     rax, [rel promptvars]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x3a56c",
    "mov     qword [rbp-0x10e8], r10",
    "xor     ebx, ebx",
    "mov     r14d, ecx",
    "mov     r11, r10",
    "mov     r13d, 0x30",
    "mov     r15, r8",
    "jmp     0x39756",
    "lea     r13, [rel last_command_exit_value]",
    "lea     r15, [rel last_command_subst_pid]",
    "xor     ebx, ebx",
    "mov     eax, dword [r13]",
    "mov     dword [rbp-0x10f0], eax",
    "mov     eax, dword [r15]",
    "mov     dword [rbp-0x10f4], eax",
    "jmp     0x398f6",
    "lea     rax, [rel posixly_correct]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x3a3b6",
    "lea     rax, [rel posixly_correct]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0x3976d",
    "mov     rdi, r12",
    "call    free",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "mov     rdi, rbx",
    "call    string_list_internal",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x10e8], rax",
    "call    dispose_words",
    "mov     eax, dword [rbp-0x10f0]",
    "mov     dword [r13], eax",
    "mov     eax, dword [rbp-0x10f4]",
    "mov     dword [r15], eax",
    "mov     rax, qword [rbp-0x10e8]",
    "lea     r13, [rel last_command_exit_value]",
    "lea     r15, [rel last_command_subst_pid]",
    "mov     eax, dword [r13]",
    "mov     dword [rbp-0x10f0], eax",
    "mov     eax, dword [r15]",
    "mov     dword [rbp-0x10f4], eax",
    "jmp     0x398db",
    "nop     word [rax+rax]",
    "cmp     r14d, 0x5c",
    "jne     0x39710",
    "cmp     r14d, 0x21",
    "je      0x39810",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x10d8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "xor     ebx, ebx",
    "cmp     byte [r12], 0x0",
    "je      0x398f6",
    "mov     rdx, qword [rbp-0x10d8]",
    "mov     qword [r14], rdx",
    "mov     rdx, qword [rbp-0x10e0]",
    "mov     qword [r14+0x8], rdx",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x3a973",
    "lea     rax, [rbx+0x3]",
    "cmp     rax, r13",
    "jae     0x397a0",
    "movsx   r9d, byte [r11+0x1]",
    "lea     eax, [r9-0x21]",
    "mov     r14d, r9d",
    "cmp     al, 0x56",
    "ja      0x39b08",
    "cmp     byte [r11+0x1], 0x21",
    "je      0x39a10",
    "xor     edx, edx",
    "mov     esi, 0x1",
    "mov     rdi, r12",
    "call    sub_8c580",
    "mov     rbx, rax",
    "add     r13, 0x30",
    "cmp     rax, r13",
    "jae     0x397a0",
    "cmp     r14d, 0x1",
    "je      0x39800",
    "{Case 0x1, 0x4-0xe, 0x17-0x1e, 0x21-0x22, 0x24-0x26, 0x28-0x32, 0x34, 0x37-0x39, 0x3d-0x3f, 0x41-0x42, 0x45-0x46, 0x48, 0x4a, 0x4c, 0x4e-0x50}",
    "mov     edi, 0x3",
    "mov     dword [rbp-0x10d8], r9d",
    "call    malloc",
    "mov     r9d, dword [rbp-0x10d8]",
    "test    rax, rax",
    "mov     r10, rax",
    "je      0x3aa12",
    "lea     rsi, [rel jump_table_134c20]",
    "movzx   eax, al",
    "movsxd  rax, dword [rsi+rax*4]",
    "add     rax, rsi",
    "jmp     rax",
    "mov     edi, 0x2",
    "call    malloc",
    "mov     r10, rax",
    "test    rax, rax",
    "je      0x3a94d",
    "mov     rdi, qword [rbp-0x10e8]",
    "xor     eax, eax",
    "mov     qword [rbp-0x10d8], r11",
    "call    sub_34560",
    "movsxd  rdi, eax",
    "call    itos",
    "mov     r15, qword [rbp-0x10d8]",
    "mov     r10, rax",
    "mov     byte [rbp-0x10d8], r9b",
    "test    r12, r12",
    "je      0x39c18",
    "mov     byte [r12+rbx], 0x1",
    "add     rbx, 0x1",
    "jmp     0x39731",
    "cmp     r14d, 0x7f",
    "je      0x39800",
    "mov     qword [rbp-0x10d8], rax",
    "mov     esi, 0x3",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x10e0], r9d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r10], 0x5c",
    "mov     r11, r15",
    "mov     byte [r10+0x1], r14b",
    "mov     byte [r10+0x2], 0x0",
    "test    r9d, r9d",
    "jne     0x3a448",
    "{Case 0x4d}",
    "mov     edi, 0x3",
    "call    malloc",
    "mov     r10, rax",
    "test    rax, rax",
    "je      0x3a978",
    "{Case 0xf-0x16}",
    "lea     rdi, [rbp-0x10c4]",
    "mov     edx, 0x3",
    "mov     rsi, r15",
    "xor     r14d, r14d",
    "call    strncpy",
    "mov     byte [rbp-0x10c1], 0x0",
    "xor     edx, edx",
    "mov     rdi, rax",
    "jmp     0x39c8e",
    "{Case 0x1f-0x20, 0x33, 0x43, 0x53}",
    "lea     r14, [rbp-0x10d0]",
    "mov     dword [rbp-0x10d8], r9d",
    "mov     rdi, r14",
    "call    time",
    "lea     rdi, [rel data_11f11d]",
    "call    find_variable",
    "mov     r9d, dword [rbp-0x10d8]",
    "test    rax, rax",
    "je      0x3a0c4",
    "{Case 0x3b, 0x40, 0x44, 0x51}",
    "mov     edi, 0x2",
    "mov     dword [rbp-0x10d8], r9d",
    "call    malloc",
    "mov     r9d, dword [rbp-0x10d8]",
    "test    rax, rax",
    "mov     r10, rax",
    "je      0x3a89b",
    "{Case 0x36, 0x56}",
    "lea     rdi, [rel data_11fb41[3]]  {\"PWD\"}",
    "mov     dword [rbp-0x10d8], r9d",
    "call    find_variable",
    "mov     r9d, dword [rbp-0x10d8]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0x3a526",
    "{Case 0x3a, 0x3c}",
    "lea     rax, [rel no_line_editing]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "je      0x39970",
    "{Case 0x27, 0x47}",
    "lea     rax, [rel current_host_name]",
    "mov     dword [rbp-0x10f0], r9d",
    "mov     dword [rbp-0x10e0], ecx",
    "mov     r10, qword [rax]",
    "mov     rdi, r10",
    "mov     qword [rbp-0x10d8], r10",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r10, qword [rbp-0x10d8]",
    "mov     ecx, dword [rbp-0x10e0]",
    "test    rax, rax",
    "mov     r9d, dword [rbp-0x10f0]",
    "mov     r11, rax",
    "je      0x3a99e",
    "{Case 0x35, 0x55}",
    "mov     edi, 0x10",
    "mov     dword [rbp-0x10d8], r9d",
    "call    malloc",
    "mov     r9d, dword [rbp-0x10d8]",
    "test    rax, rax",
    "mov     r10, rax",
    "je      0x3a919",
    "{Case 0x23}",
    "cmp     byte [r11+0x2], 0x7b",
    "je      0x3a627",
    "{Case 0x3}",
    "mov     edi, 0x3",
    "mov     dword [rbp-0x10d8], ecx",
    "call    malloc",
    "mov     ecx, dword [rbp-0x10d8]",
    "test    rax, rax",
    "mov     r10, rax",
    "je      0x3aa71",
    "{Case 0x4b}",
    "mov     rax, qword [rel stdin]",
    "mov     rdi, qword [rax]",
    "call    fileno",
    "mov     edi, eax",
    "call    ttyname",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x3a397",
    "{Case 0x54}",
    "lea     r14, [rel current_user]",
    "mov     r9, qword [r14+0x10]",
    "test    r9, r9",
    "je      0x3a5ad",
    "{Case 0x52}",
    "lea     rax, [rel shell_name]",
    "mov     r14, qword [rax]",
    "cmp     byte [r14], 0x2f",
    "je      0x3a488",
    "{Case 0x2}",
    "lea     rax, [rel current_command_number]",
    "lea     rdx, [rel ps0_prompt]",
    "mov     rsi, qword [rbp-0x10e8]",
    "mov     eax, dword [rax]",
    "cmp     qword [rdx], rsi",
    "je      0x3a2f6",
    "{Case 0x49}",
    "call    count_all_jobs",
    "jmp     0x3a2f6",
    "{Case 0x0}",
    "mov     rdi, qword [rbp-0x10e8]",
    "xor     eax, eax",
    "call    sub_34560",
    "movsxd  rdi, eax",
    "call    itos",
    "mov     r10, rax",
    "jmp     0x39842",
    "mov     qword [rbp-0x10d8], rax",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     eax, 0x21",
    "lea     r11, [r15+0x1]",
    "mov     word [r10], ax",
    "movzx   eax, byte [r10]",
    "movsx   r14d, byte [r11]",
    "mov     byte [r15], 0x0",
    "lea     r15, [r11+0x1]",
    "mov     r9d, r14d",
    "test    r14d, r14d",
    "jne     0x39756",
    "mov     rdi, r13",
    "call    malloc",
    "movzx   r9d, byte [rbp-0x10d8]",
    "mov     r12, rax",
    "jmp     0x397cf",
    "mov     rdi, r12",
    "mov     rsi, r13",
    "call    realloc",
    "movzx   r9d, byte [rbp-0x10d8]",
    "mov     r12, rax",
    "mov     byte [r12+rbx], r9b",
    "mov     r11, r15",
    "mov     byte [r12+rbx+0x1], 0x0",
    "add     rbx, 0x1",
    "lea     r11, [r15+0x1]",
    "jmp     0x39b8e",
    "lea     r14, [rbx+0x1]",
    "mov     r15d, 0x1",
    "jmp     0x399be",
    "mov     qword [rbp-0x10d8], rax",
    "mov     esi, 0x3",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel no_line_editing]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x3a33c",
    "movsx   eax, byte [rdi+rdx]",
    "lea     ecx, [rax-0x30]",
    "cmp     cl, 0x7",
    "jbe     0x39c78",
    "lea     rax, [rel array_needs_making]",
    "mov     dword [rax], 0x1",
    "test    byte [rax+0x28 {Elf64_Header::section_header_offset.b}], 0x1",
    "jne     0x3a0c4",
    "mov     qword [rbp-0x10d8], rax",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x10e0], r9d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     eax, 0x7",
    "cmp     r9d, 0x61",
    "je      0x39e29",
    "lea     r14, [rbp-0x1040]",
    "mov     esi, 0x1000",
    "mov     dword [rbp-0x10d8], r9d",
    "mov     rdi, r14",
    "call    getcwd",
    "mov     r9d, dword [rbp-0x10d8]",
    "test    rax, rax",
    "je      0x3a616",
    "mov     dword [rbp-0x10d8], r9d",
    "call    get_variable_value",
    "mov     r9d, dword [rbp-0x10d8]",
    "test    rax, rax",
    "mov     rsi, rax",
    "je      0x3a526",
    "mov     edi, 0x3",
    "mov     dword [rbp-0x10d8], r9d",
    "call    malloc",
    "mov     r9d, dword [rbp-0x10d8]",
    "test    rax, rax",
    "mov     r10, rax",
    "je      0x3a80c",
    "add     r11, 0x2",
    "jmp     0x39742",
    "mov     qword [rbp-0x10f0], rax",
    "mov     rsi, r14",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     dword [rbp-0x10e0], r9d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r14",
    "mov     rsi, r10",
    "mov     rdi, r11",
    "mov     dword [rbp-0x10e0], r9d",
    "mov     dword [rbp-0x10d8], ecx",
    "call    __strcpy_chk",
    "mov     r9d, dword [rbp-0x10e0]",
    "mov     ecx, dword [rbp-0x10d8]",
    "mov     r14, rax",
    "cmp     r9d, 0x68",
    "je      0x3a464",
    "mov     qword [rbp-0x10d8], rax",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x10e0], r9d",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     r11, [r15+0x1]",
    "cmp     r9d, 0x76",
    "je      0x3a498",
    "lea     r14, [rbp-0x10d0]",
    "mov     qword [rbp-0x10e0], r11",
    "mov     rdi, r14",
    "call    time",
    "mov     rdi, r14",
    "call    localtime",
    "mov     r11, qword [rbp-0x10e0]",
    "mov     qword [rbp-0x10d8], rax",
    "lea     r15, [r11+0x3]",
    "mov     rdi, r15",
    "call    strlen",
    "lea     r14, [rax+0x3]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r11, qword [rbp-0x10e0]",
    "test    rax, rax",
    "mov     rdx, rax",
    "je      0x3a9e0",
    "mov     edi, 0x3",
    "call    malloc",
    "mov     r10, rax",
    "test    rax, rax",
    "je      0x3a415",
    "mov     qword [rbp-0x10d8], rax",
    "mov     esi, 0x3",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel current_user]",
    "mov     edx, dword [rax+0x4]",
    "lea     rax, [rel promptvars]",
    "or      ecx, dword [rax]",
    "jne     0x3a32b",
    "mov     edx, 0x4",
    "lea     r14, [rel data_11faa8[5]]  {\"tty\"}",
    "jmp     0x39db4",
    "cmp     byte [rax], 0x2f",
    "je      0x3a3dc",
    "call    sub_347e0",
    "mov     r9, qword [r14+0x10]",
    "jmp     0x3a219",
    "mov     rdi, r9",
    "mov     qword [rbp-0x10d8], r9",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r9, qword [rbp-0x10d8]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x3a8ee",
    "cmp     byte [r14+0x1], 0x0",
    "jne     0x3a279",
    "mov     rdi, r14",
    "mov     esi, 0x2f",
    "mov     dword [rbp-0x10d8], ecx",
    "call    strrchr",
    "mov     ecx, dword [rbp-0x10d8]",
    "lea     rdx, [rax+0x1]",
    "test    rax, rax",
    "cmovne  r14, rdx",
    "movsxd  rdi, eax",
    "call    itos",
    "mov     r10, rax",
    "jmp     0x39842",
    "lea     rdx, [rel ps1_prompt]",
    "cmp     qword [rdx], rsi",
    "je      0x3a2f6",
    "lea     r11, [r15+0x1]",
    "cmp     byte [r10+0x2], 0x0",
    "je      0x39b8e",
    "cmp     byte [r10+0x1], 0x0",
    "je      0x39b45",
    "mov     r14, rbx",
    "xor     r15d, r15d",
    "lea     r14, [rel dstack]",
    "movdqa  xmm0, xmmword [rel data_135120]",
    "mov     rax, qword [r14]",
    "mov     qword [rbp-0x10d8], rax",
    "mov     rax, qword [r14+0x8]",
    "movaps  xmmword [r14], xmm0",
    "mov     qword [rbp-0x10e0], rax",
    "lea     rax, [rel promptvars]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "jne     0x398b1",
    "test    r12, r12",
    "jne     0x3971d",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     byte [rbp-0x10d8], r9b",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     r14, [rbx+0x2]",
    "mov     r15d, 0x2",
    "jmp     0x399be",
    "mov     rax, r13",
    "sub     rax, rbx",
    "cmp     r15, rax",
    "jae     0x39a88",
    "mov     r11d, 0xa",
    "mov     byte [r10+0x2], 0x0",
    "mov     word [r10], r11w",
    "lea     r11, [r15+0x1]",
    "jmp     0x39b45",
    "mov     r14d, 0xa0d",
    "mov     byte [r10+0x2], 0x0",
    "lea     r11, [r15+0x1]",
    "mov     word [r10], r14w",
    "lea     r14d, [rax+r14*8-0x30]",
    "add     rdx, 0x1",
    "cmp     r14d, 0xfff",
    "jg      0x3a354",
    "test    edx, edx",
    "je      0x3a354",
    "mov     rdi, r14",
    "mov     dword [rbp-0x10d8], r9d",
    "lea     r14, [rbp-0x10c0]",
    "call    localtime",
    "mov     r9d, dword [rbp-0x10d8]",
    "mov     rcx, rax",
    "cmp     r9d, 0x64",
    "je      0x3a594",
    "lea     rax, [rel array_needs_making]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x3a0d1",
    "mov     byte [r10+0x1], 0x0",
    "cmp     byte [r10+0x1], 0x0",
    "lea     r11, [r15+0x1]",
    "mov     byte [r10], al",
    "jne     0x39a3e",
    "mov     eax, 0x1b",
    "cmp     r9d, 0x65",
    "je      0x39e29",
    "mov     byte [rbp-0x1040], 0x2e",
    "mov     eax, 0x1",
    "jmp     0x39eb1",
    "mov     rdi, r14",
    "mov     dword [rbp-0x10d8], r9d",
    "call    strlen",
    "mov     r9d, dword [rbp-0x10d8]",
    "jmp     0x39eb1",
    "lea     r14, [rbp-0x1040]",
    "mov     edx, 0xfff",
    "mov     dword [rbp-0x10d8], r9d",
    "mov     rdi, r14",
    "call    strncpy",
    "mov     r9d, dword [rbp-0x10d8]",
    "mov     eax, 0xfff",
    "mov     qword [rbp-0x10d8], rax",
    "mov     esi, 0x3",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x10e0], r9d",
    "call    sub_a7f00",
    "{ Does not return }",
    "cmp     r9d, 0x5b",
    "je      0x3a77e",
    "movsx   r14d, byte [r11]",
    "lea     r15, [r11+0x1]",
    "mov     r9d, r14d",
    "test    r14d, r14d",
    "je      0x3986b",
    "mov     esi, 0x2e",
    "mov     rdi, rax",
    "call    strchr",
    "mov     ecx, dword [rbp-0x10d8]",
    "test    rax, rax",
    "je      0x39fda",
    "lea     rax, [rel promptvars]",
    "or      ecx, dword [rax]",
    "jne     0x39f12",
    "mov     dword [r10], 0x322e35",
    "jmp     0x39a33",
    "mov     rdi, r10",
    "mov     r9d, 0x15",
    "mov     edx, 0x10",
    "xor     eax, eax",
    "lea     r8, [rel data_11f14a]",
    "lea     rcx, [rel data_11f14e]  {\"%s.%d\"}",
    "mov     esi, 0x2",
    "mov     qword [rbp-0x10e0], r11",
    "mov     qword [rbp-0x10d8], r10",
    "call    __sprintf_chk",
    "mov     r10, qword [rbp-0x10d8]",
    "mov     r11, qword [rbp-0x10e0]",
    "movzx   eax, byte [r10]",
    "jmp     0x399b4",
    "mov     qword [rbp-0x10e0], rax",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x10f0], r11",
    "call    sub_a7f00",
    "{ Does not return }",
    "movzx   r9d, byte [r11+0x3]",
    "mov     rax, rdx",
    "test    r9b, r9b",
    "jne     0x3a6a4",
    "mov     qword [rbp-0x10d8], rax",
    "mov     esi, 0x3",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r10+0x2], 0x0",
    "mov     edx, 0x445c",
    "cmp     byte [r10+0x2], 0x0",
    "lea     r11, [r15+0x1]",
    "mov     word [r10], dx",
    "jne     0x39a49",
    "test    edx, edx",
    "je      0x3a3a8",
    "test    edx, edx",
    "mov     edx, 0x23",
    "mov     rax, r10",
    "cmove   r14d, edx",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x10d8], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x10d8]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x3aa46",
    "cmp     byte [rax+0x1], 0x0",
    "jne     0x3a1e6",
    "mov     esi, 0x2f",
    "mov     rdi, r14",
    "call    strrchr",
    "test    rax, rax",
    "je      0x39da8",
    "mov     qword [rbp-0x10e0], rax",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r14",
    "mov     rsi, r9",
    "jmp     0x3a29d",
    "call    sh_strvis",
    "mov     r14, rax",
    "call    sh_strvis",
    "mov     r10, rax",
    "jmp     0x39842",
    "lea     rdx, [rel ps2_prompt]",
    "cmp     qword [rdx], rsi",
    "setne   dl",
    "movzx   edx, dl",
    "sub     eax, edx",
    "mov     rdi, r10",
    "mov     qword [rbp-0x10e0], r11",
    "mov     qword [rbp-0x10d8], r10",
    "call    strlen",
    "mov     r10, qword [rbp-0x10d8]",
    "mov     r11, qword [rbp-0x10e0]",
    "mov     r15, rax",
    "lea     r14, [rax+rbx]",
    "mov     rax, r13",
    "sub     rax, rbx",
    "cmp     r15, rax",
    "jb      0x399cd",
    "mov     r13, r14",
    "mov     qword [rbp-0x10e0], r11",
    "and     r13, 0xffffffffffffff80",
    "mov     qword [rbp-0x10d8], r10",
    "sub     r13, 0xffffffffffffff80",
    "test    r12, r12",
    "je      0x39c30",
    "lea     rdi, [r12+rbx]",
    "mov     rdx, r15",
    "mov     rsi, r10",
    "mov     rbx, r14",
    "lea     r15, [r12+r14]",
    "mov     qword [rbp-0x10e0], r11",
    "mov     qword [rbp-0x10d8], r10",
    "call    memcpy",
    "mov     byte [r15], 0x0",
    "mov     rdi, qword [rbp-0x10d8]",
    "call    free",
    "mov     r11, qword [rbp-0x10e0]",
    "jmp     0x39853",
    "lea     r13, [rel last_command_exit_value]",
    "lea     r15, [rel last_command_subst_pid]",
    "mov     eax, dword [r13]",
    "mov     dword [rbp-0x10f0], eax",
    "mov     eax, dword [r15]",
    "mov     dword [rbp-0x10f4], eax",
    "test    r12, r12",
    "je      0x3a390",
    "lea     rax, [rel posixly_correct]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x39bf0",
    "mov     edi, 0x3",
    "mov     r14d, 0xffffffff",
    "call    malloc",
    "mov     r10, rax",
    "test    rax, rax",
    "jne     0x3a404",
    "test    al, al",
    "jne     0x3a354",
    "lea     rdx, [rel data_11f120]  {\"%a %b %d\"}",
    "mov     esi, 0x80",
    "mov     rdi, r14",
    "call    strftime",
    "jmp     0x39d99",
    "cmp     r9d, 0x74",
    "je      0x3a5bb",
    "mov     dword [rbp-0x10d8], r9d",
    "call    sub_5ea30",
    "call    tzset",
    "mov     r9d, dword [rbp-0x10d8]",
    "jmp     0x39d3d",
    "jmp     0x39b45",
    "cmp     r9d, 0x72",
    "mov     eax, 0xd",
    "mov     edx, 0x5c",
    "cmovne  eax, edx",
    "cdqe    ",
    "mov     byte [rbp+rax-0x1040], 0x0",
    "cmp     r9d, 0x57",
    "je      0x3a4a4",
    "lea     rdi, [rel data_11f154]  {\"HOME\"}",
    "call    find_variable",
    "movzx   edx, byte [rbp-0x1040]",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x3a4d8",
    "mov     rdi, r14",
    "call    polite_directory_format",
    "cmp     rax, r14",
    "je      0x39ee2",
    "mov     r9d, 0x101",
    "mov     byte [r10+0x2], 0x0",
    "lea     r11, [r15+0x1]",
    "mov     word [r10], r9w",
    "jmp     0x39a33",
    "mov     r8d, 0x2",
    "lea     r11, [r15+0x1]",
    "mov     word [r10], r8w",
    "nop     dword [rax]",
    "mov     byte [rax], 0x0",
    "jmp     0x39fda",
    "xor     esi, esi",
    "mov     rdi, r14",
    "call    sh_backslash_quote_for_double_quotes",
    "mov     rdi, r14",
    "mov     qword [rbp-0x10d8], rax",
    "call    free",
    "mov     r10, qword [rbp-0x10d8]",
    "jmp     0x39842",
    "mov     rdi, r14",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x10d8], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x10d8]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x3a870",
    "test    al, al",
    "jne     0x39a33",
    "cmp     r9b, 0x7d",
    "jne     0x3a690",
    "jmp     0x3a6aa",
    "jmp     0x39b8e",
    "mov     rax, r10",
    "mov     r14d, 0x23",
    "jmp     0x3a1af",
    "mov     byte [r10], 0x5c",
    "lea     rax, [r10+0x1]",
    "jmp     0x3a1af",
    "mov     qword [rbp-0x10e0], rax",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r14",
    "jmp     0x3a24d",
    "jmp     0x39da8",
    "mov     rdi, r14",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "lea     r14, [rax+0x1]",
    "jmp     0x39da8",
    "lea     rax, [rel promptvars]",
    "mov     rdi, r14",
    "or      ecx, dword [rax]",
    "jne     0x39f0a",
    "nop     dword [rax+rax]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r11, qword [rbp-0x10e0]",
    "mov     r10, qword [rbp-0x10d8]",
    "mov     r12, rax",
    "jmp     0x39ac6",
    "mov     rdi, r12",
    "mov     rsi, r13",
    "call    realloc",
    "mov     r10, qword [rbp-0x10d8]",
    "mov     r11, qword [rbp-0x10e0]",
    "mov     r12, rax",
    "xor     ebx, ebx",
    "jmp     0x398f6",
    "mov     rdi, r12",
    "call    dequote_string",
    "mov     rdi, r12",
    "mov     qword [rbp-0x10e8], rax",
    "call    free",
    "mov     rax, qword [rbp-0x10e8]",
    "jmp     0x39936",
    "mov     eax, 0x5c",
    "mov     r11, r15",
    "mov     word [r10], ax",
    "jmp     0x39a33",
    "mov     esi, 0x3",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     edi, 0x3",
    "call    malloc",
    "mov     r10, rax",
    "test    rax, rax",
    "je      0x3a370",
    "test    eax, eax",
    "jne     0x3a458",
    "lea     rdx, [rel data_11f129]  {\"%H:%M:%S\"}",
    "mov     esi, 0x80",
    "mov     rdi, r14",
    "call    strftime",
    "jmp     0x39d99",
    "cmp     r9d, 0x54",
    "je      0x3a5d4",
    "cmp     dl, 0x2f",
    "je      0x3a5ed",
    "call    get_variable_value",
    "movzx   edx, byte [rbp-0x1040]",
    "test    rax, rax",
    "je      0x3a4d8",
    "mov     rdi, r14",
    "mov     esi, 0xfff",
    "call    trim_pathname",
    "lea     rax, [rel promptvars]",
    "lea     rdx, [rel posixly_correct]",
    "mov     rdi, r14",
    "mov     eax, dword [rax]",
    "or      eax, dword [rdx]",
    "je      0x3a2af",
    "mov     edx, 0x1000",
    "mov     rsi, rax",
    "mov     rdi, r14",
    "call    __strcpy_chk",
    "mov     qword [rbp-0x10e0], rax",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, rcx",
    "mov     rsi, r14",
    "call    __strcpy_chk",
    "mov     rdi, r14",
    "mov     qword [rbp-0x10d8], rax",
    "call    free",
    "mov     r10, qword [rbp-0x10d8]",
    "lea     r11, [r15+0x1]",
    "movzx   eax, byte [r10]",
    "jmp     0x399b4",
    "add     r15, 0x1",
    "mov     byte [rax], r9b",
    "add     rax, 0x1",
    "movzx   r9d, byte [r15]",
    "test    r9b, r9b",
    "je      0x3a6aa",
    "mov     byte [rax], 0x0",
    "cmp     byte [rdx], 0x0",
    "jne     0x3a6be",
    "mov     byte [rax], r14b",
    "mov     byte [rax+0x1], 0x0",
    "jmp     0x39842",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     r10, rax",
    "test    r12, r12",
    "jne     0x399cd",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x10e0], r11",
    "mov     qword [rbp-0x10d8], r10",
    "call    sub_a7f00",
    "{ Does not return }",
    "cmp     r14d, 0x1",
    "je      0x3a0ee",
    "mov     byte [rbp-0x1041], 0x0",
    "jmp     0x39da8",
    "mov     byte [rbp-0x10c0], 0x0",
    "lea     rdx, [rel data_11f132]  {\"%I:%M:%S\"}",
    "mov     esi, 0x80",
    "mov     rdi, r14",
    "call    strftime",
    "jmp     0x39d99",
    "cmp     r9d, 0x40",
    "je      0x3a3eb",
    "movzx   eax, byte [rbp-0x103f]",
    "test    al, al",
    "je      0x39ee2",
    "mov     esi, 0x2f",
    "mov     rdi, r14",
    "call    strrchr",
    "test    rax, rax",
    "je      0x39ee2",
    "cmp     byte [rax], dl",
    "je      0x3a759",
    "mov     rcx, qword [rbp-0x10d8]",
    "lea     r14, [rbp-0x10c0]",
    "mov     esi, 0x80",
    "mov     byte [rbp-0x10f0], r9b",
    "mov     rdi, r14",
    "mov     qword [rbp-0x10e0], rdx",
    "call    strftime",
    "mov     rdi, qword [rbp-0x10e0]",
    "mov     qword [rbp-0x10d8], rax",
    "call    free",
    "mov     rax, qword [rbp-0x10d8]",
    "movzx   r9d, byte [rbp-0x10f0]",
    "test    eax, eax",
    "jne     0x3a796",
    "mov     eax, 0x5825",
    "mov     byte [rdx+0x2], 0x0",
    "mov     word [rdx], ax",
    "mov     byte [r10], 0x1",
    "mov     byte [r10+0x1], r14b",
    "mov     byte [r10+0x2], 0x0",
    "cmp     r14d, 0x7f",
    "je      0x3a0ee",
    "lea     rdx, [rel data_11f13b]  {\"%I:%M %p\"}",
    "mov     esi, 0x80",
    "mov     rdi, r14",
    "call    strftime",
    "jmp     0x39d99",
    "lea     rdx, [rel data_11f144]  {\"%H:%M\"}",
    "mov     esi, 0x80",
    "mov     rdi, r14",
    "call    strftime",
    "cmp     al, 0x2f",
    "jne     0x3a4e1",
    "mov     rdi, rax",
    "mov     qword [rbp-0x10d8], rax",
    "call    strlen",
    "mov     rsi, qword [rbp-0x10d8]",
    "mov     ecx, 0x1000",
    "mov     rdi, r14",
    "mov     rdx, rax",
    "add     rsi, 0x1",
    "call    __memmove_chk",
    "jmp     0x39ee2",
    "mov     rsi, r14",
    "mov     rdi, rax",
    "mov     byte [rbp-0x10d8], dl",
    "call    strcmp",
    "movzx   edx, byte [rbp-0x10d8]",
    "test    eax, eax",
    "je      0x39ec5",
    "mov     byte [rbp-0x1041], 0x0",
    "jmp     0x3a718",
    "mov     byte [rbp-0x10c0], 0x0",
    "lea     r15, [r12+rbx]",
    "test    r10, r10",
    "jne     0x399b0",
    "cmp     rdx, r15",
    "jne     0x3a100",
    "cmp     r14d, 0xffffffff",
    "je      0x3a404",
    "cmp     byte [rbp-0x103e], 0x0",
    "je      0x39ee2",
    "jmp     0x3a4d8",
    "lea     rax, [rel promptvars]",
    "lea     rdx, [rel posixly_correct]",
    "mov     eax, dword [rax]",
    "or      eax, dword [rdx]",
    "je      0x3a7a2",
    "mov     rdi, r14",
    "mov     byte [rbp-0x10e0], r9b",
    "call    strlen",
    "add     rax, 0x1",
    "mov     rdi, rax",
    "mov     qword [rbp-0x10d8], rax",
    "call    malloc",
    "movzx   r9d, byte [rbp-0x10e0]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x3a840",
    "xor     esi, esi",
    "mov     rdi, r14",
    "mov     byte [rbp-0x10d8], r9b",
    "call    sh_backslash_quote_for_double_quotes",
    "movzx   r9d, byte [rbp-0x10d8]",
    "mov     r10, rax",
    "test    r9b, r9b",
    "jne     0x39842",
    "movzx   eax, byte [r15]",
    "mov     r11, r15",
    "lea     r15, [r15+0x1]",
    "sub     eax, 0x30",
    "cmp     al, 0x7",
    "ja      0x39846",
    "mov     r11, rdx",
    "jmp     0x39846",
    "mov     byte [r10], r14b",
    "mov     byte [r10+0x1], 0x0",
    "jmp     0x3a0fb",
    "jmp     0x3a4e1",
    "mov     rsi, qword [rbp-0x10d8]",
    "mov     qword [rbp-0x10f0], rax",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, qword [rbp-0x10d8]",
    "mov     rsi, r14",
    "mov     rdi, rcx",
    "mov     byte [rbp-0x10e0], r9b",
    "call    __strcpy_chk",
    "movzx   r9d, byte [rbp-0x10e0]",
    "mov     r10, rax",
    "test    r9b, r9b",
    "jne     0x3a258",
    "mov     r11, r15",
    "jmp     0x39846",
    "lea     rdx, [r15+0x3]",
    "nop     ",
    "movzx   eax, byte [r10]",
    "lea     r11, [r15+0x1]",
    "jmp     0x399b4",
    "movzx   eax, byte [rax]",
    "mov     r11, r15",
    "jmp     0x399b4"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x70880",
  "rules": [
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/4f0637c1ae9b445ca3ec93a4b4e0bb6d",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/9710d9ee76a4466b954966f2a98c40ba",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/bee29d5f30484915bb6e92fdf1038d2c",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/af1fc90a7adf4a2ea648cfac1c599984",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/2602c80a9b3846b9ae92e2e83b13e866"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "movsxd  rbx, esi",
    "lea     r8, [rdi+rbx]",
    "mov     r12, rbx",
    "mov     rdi, r8",
    "sub     rsp, 0x78",
    "mov     qword [rbp-0x78], rdx",
    "mov     dword [rbp-0x5c], ecx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x58], r8",
    "mov     qword [rbp-0x48], 0x0",
    "call    strlen",
    "mov     edx, dword [rbp-0x5c]",
    "mov     r8, qword [rbp-0x58]",
    "add     rax, rbx",
    "mov     qword [rbp-0x70], rax",
    "lea     rax, [rel no_longjmp_on_fatal_error]",
    "test    dl, 0x1",
    "mov     edi, dword [rax]",
    "je      0x708ee",
    "mov     eax, edx",
    "movsx   esi, byte [r8]",
    "and     eax, 0x2",
    "mov     dword [rbp-0x60], eax",
    "mov     eax, edx",
    "mov     ecx, esi",
    "and     eax, 0x8",
    "mov     dword [rbp-0x98], eax",
    "lea     eax, [rdx*4]",
    "and     eax, 0x400",
    "mov     dword [rbp-0x64], eax",
    "mov     eax, edx",
    "and     eax, 0x400",
    "mov     dword [rbp-0x5c], eax",
    "test    esi, esi",
    "je      0x70a1d",
    "mov     dword [rax], 0x1",
    "mov     eax, r12d",
    "jmp     0x70ad0",
    "mov     r14d, edx",
    "mov     dword [rbp-0x68], edx",
    "xor     r9d, r9d",
    "mov     rdx, rbx",
    "and     r14d, 0x4",
    "mov     dword [rbp-0x58], 0x0",
    "xor     r15d, r15d",
    "mov     ebx, edi",
    "mov     r10d, r14d",
    "mov     r14, r13",
    "mov     r13, r8",
    "jmp     0x709c1",
    "lea     rbx, [rel no_longjmp_on_fatal_error]",
    "mov     dword [rbx], edi",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x711ad",
    "test    r10d, r10d",
    "je      0x709d0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x78",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    r15d, r15d",
    "je      0x70950",
    "cmp     esi, 0x27",
    "je      0x70a28",
    "cmp     esi, 0x5c",
    "je      0x70b68",
    "lea     r15, [rel locale_mb_cur_max]",
    "cmp     dword [r15], 0x1",
    "jle     0x709a8",
    "test    r15d, r15d",
    "jne     0x709d9",
    "cmp     esi, 0x22",
    "je      0x70a28",
    "add     r12d, 0x1",
    "mov     r15d, 0x1",
    "movsxd  rdx, r12d",
    "jmp     0x709b2",
    "test    r9d, r9d",
    "jne     0x70b80",
    "add     r12d, 0x1",
    "xor     r15d, r15d",
    "movsxd  rdx, r12d",
    "mov     eax, ecx",
    "lea     rsi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rsi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x70b00",
    "test    r9d, r9d",
    "jne     0x709d9",
    "lea     r13, [r14+rdx]",
    "movsx   esi, byte [r13]",
    "mov     ecx, esi",
    "test    esi, esi",
    "je      0x70a1b",
    "xor     r9d, r9d",
    "cmp     esi, 0x60",
    "setne   r9b",
    "jmp     0x709d9",
    "cmp     esi, 0x60",
    "je      0x70bf8",
    "mov     edi, ebx",
    "lea     rax, [rel locale_utf8locale]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "je      0x70b1c",
    "add     r12d, eax",
    "mov     eax, dword [rbp-0x5c]",
    "mov     r9d, dword [rbp-0x60]",
    "test    eax, eax",
    "setne   r8b",
    "or      r9d, 0x1",
    "add     r12d, 0x1",
    "mov     r9d, 0x1",
    "movsxd  rdx, r12d",
    "jmp     0x709b2",
    "mov     eax, dword [rbp-0x5c]",
    "mov     edi, dword [rbp-0x58]",
    "test    eax, eax",
    "setne   al",
    "test    edi, edi",
    "setne   r11b",
    "cmp     esi, 0x3a",
    "mov     r8d, eax",
    "sete    dil",
    "test    r11b, dil",
    "je      0x70993",
    "mov     rax, qword [rbp-0x70]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x48]",
    "mov     rsi, r13",
    "mov     dword [rbp-0x84], r10d",
    "mov     r15, qword [rbp-0x48]",
    "sub     rax, rdx",
    "mov     dword [rbp-0x80], r9d",
    "mov     rdx, rax",
    "call    mbrtowc",
    "mov     r9d, dword [rbp-0x80]",
    "mov     r10d, dword [rbp-0x84]",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x70cc8",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x70a03",
    "cmp     esi, 0x27",
    "je      0x70e60",
    "test    r12d, r12d",
    "jle     0x70a5b",
    "cmp     esi, 0x3f",
    "jne     0x70b90",
    "test    al, al",
    "jne     0x70e50",
    "test    rax, rax",
    "jne     0x70a03",
    "mov     qword [rbp-0x48], r15",
    "add     r12d, 0x1",
    "jmp     0x70a06",
    "add     r12d, 0x1",
    "mov     qword [rbp-0x40], 0x0",
    "lea     r13, [rbp-0x40]",
    "movsxd  rdx, r12d",
    "lea     rsi, [r14+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x70ef8",
    "cmp     esi, 0x22",
    "je      0x70f50",
    "cmp     byte [r14+rdx-0x1], 0x24",
    "je      0x70e20",
    "mov     eax, dword [rbp-0x60]",
    "test    eax, eax",
    "jne     0x70e10",
    "test    al, al",
    "je      0x70b90",
    "add     r12d, 0x1",
    "sub     dword [rbp-0x58], 0x1",
    "movsxd  rdx, r12d",
    "jmp     0x709b2",
    "add     r12d, 0x1",
    "jmp     0x70a06",
    "movsxd  rdx, r12d",
    "xor     r15d, r15d",
    "lea     r13, [r14+rdx]",
    "movsx   esi, byte [r13]",
    "mov     ecx, esi",
    "test    esi, esi",
    "jne     0x709c1",
    "xor     r9d, r9d",
    "xor     r15d, r15d",
    "jmp     0x709b2",
    "cmp     cl, 0x27",
    "je      0x71095",
    "mov     ecx, dword [rbp-0x64]",
    "mov     rsi, qword [rbp-0x70]",
    "lea     edx, [r12+0x1]",
    "mov     rdi, r14",
    "mov     dword [rbp-0x80], r10d",
    "call    sub_6f5f0",
    "cmp     esi, 0x28",
    "jne     0x70c10",
    "cmp     esi, 0x27",
    "jne     0x70a64",
    "mov     r9d, 0x2",
    "jmp     0x70a43",
    "mov     rdi, qword [rbp-0x78]",
    "mov     dword [rbp-0x94], r10d",
    "mov     byte [rbp-0x88], cl",
    "mov     qword [rbp-0x90], rdx",
    "mov     byte [rbp-0x84], r8b",
    "mov     dword [rbp-0x80], esi",
    "call    mbschr",
    "test    rax, rax",
    "jne     0x70a1b",
    "add     dword [rbp-0x58], 0x1",
    "test    cl, cl",
    "je      0x70ef8",
    "mov     dword [rbp-0x80], ebx",
    "lea     r15, [rel locale_mb_cur_max]",
    "mov     rbx, r14",
    "mov     dword [rbp-0x84], r10d",
    "jmp     0x70ed3",
    "cmp     esi, 0x24",
    "je      0x70ce0",
    "test    r8b, r8b",
    "je      0x70c10",
    "mov     rsi, qword [rbp-0x70]",
    "lea     edx, [r12+0x1]",
    "mov     rdi, r14",
    "mov     dword [rbp-0x80], r10d",
    "mov     ecx, 0x400",
    "call    sub_674e0",
    "jmp     0x70f68",
    "mov     eax, dword [rbp-0x64]",
    "test    eax, eax",
    "je      0x70a5b",
    "mov     esi, dword [rbp-0x80]",
    "movzx   r8d, byte [rbp-0x84]",
    "xor     r9d, r9d",
    "mov     rdx, qword [rbp-0x90]",
    "movzx   ecx, byte [rbp-0x88]",
    "mov     r10d, dword [rbp-0x94]",
    "jmp     0x70a43",
    "add     r12d, 0x1",
    "xor     r9d, r9d",
    "xor     r15d, r15d",
    "movsxd  rdx, r12d",
    "jmp     0x709b2",
    "cmp     dword [r15], 0x1",
    "jg      0x70ea0",
    "mov     r15d, dword [rbp-0x98]",
    "movzx   eax, byte [r14+rdx+0x1]",
    "test    r15d, r15d",
    "je      0x70ff8",
    "mov     r15d, dword [rbp-0x68]",
    "and     r15d, 0x88",
    "jne     0x70d68",
    "lea     eax, [r12+0x1]",
    "mov     dword [rbp-0x80], r10d",
    "movsxd  rdx, eax",
    "mov     dword [rbp-0x50], eax",
    "cmp     byte [r14+rdx], 0x0",
    "je      0x70ace",
    "movsxd  rdx, eax",
    "mov     r10d, dword [rbp-0x80]",
    "xor     r9d, r9d",
    "xor     r15d, r15d",
    "mov     r12, rdx",
    "jmp     0x709b2",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x70f08",
    "add     r12d, 0x1",
    "cmp     al, 0x28",
    "jne     0x70cf6",
    "cmp     al, 0x7b",
    "jne     0x70f92",
    "test    byte [rbp-0x68], 0x10",
    "je      0x70d89",
    "mov     eax, esi",
    "and     eax, 0xfffffffd",
    "cmp     eax, 0x3c",
    "jne     0x70d68",
    "mov     edi, ebx",
    "lea     rsi, [rbp-0x50]",
    "mov     r9d, 0x1",
    "lea     r8, [rel data_11fbc5]",
    "lea     rdx, [rel data_120645]",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x70f1e",
    "add     r12d, eax",
    "cmp     cl, 0x27",
    "je      0x71088",
    "mov     r14, rbx",
    "mov     r10d, dword [rbp-0x84]",
    "mov     ebx, dword [rbp-0x80]",
    "lea     eax, [r12+0x2]",
    "movsxd  rdx, eax",
    "mov     dword [rbp-0x50], eax",
    "cmp     byte [r14+rdx], 0x0",
    "je      0x70ace",
    "test    byte [rbp-0x68], 0x10",
    "je      0x70d98",
    "lea     eax, [r12+0x2]",
    "movsxd  rdx, eax",
    "mov     dword [rbp-0x50], eax",
    "cmp     byte [r14+rdx], 0x0",
    "je      0x70ace",
    "test    byte [rbp-0x68], 0x40",
    "je      0x70d98",
    "lea     rax, [rel extended_glob]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0x70d89",
    "cmp     byte [r14+rdx+0x1], 0x28",
    "jne     0x70d98",
    "lea     r12d, [rax+0x1]",
    "xor     r9d, r9d",
    "xor     r15d, r15d",
    "movsxd  rdx, r12d",
    "jmp     0x709b2",
    "mov     rax, qword [rbp-0x70]",
    "xor     edi, edi",
    "mov     rcx, r13",
    "mov     r14, qword [rbp-0x40]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x70f80",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x70eb9",
    "mov     r14, rbx",
    "mov     r10d, dword [rbp-0x84]",
    "mov     ebx, dword [rbp-0x80]",
    "mov     r9d, dword [rbp-0x64]",
    "lea     rsi, [rbp-0x50]",
    "mov     rdi, r14",
    "mov     dword [rbp-0x80], r10d",
    "lea     r8, [rel data_11fbc5]",
    "lea     rcx, [rel data_120645]",
    "or      r9d, 0x9",
    "lea     rdx, [rel data_120644]",
    "call    sub_6f880",
    "mov     r10d, dword [rbp-0x80]",
    "jmp     0x70d2f",
    "test    r9d, r9d",
    "jne     0x710b0",
    "lea     rax, [rel extended_glob]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x70d98",
    "lea     rsi, [rbp-0x50]",
    "mov     ecx, 0x1",
    "xor     edx, edx",
    "mov     rdi, r14",
    "mov     dword [rbp-0x80], r10d",
    "call    sub_6daa0",
    "mov     r10d, dword [rbp-0x80]",
    "cmp     esi, 0x5b",
    "je      0x7104c",
    "cmp     byte [r14+rdx+0x1], 0x28",
    "je      0x710ed",
    "lea     eax, [r12+0x2]",
    "mov     dword [rbp-0x80], r10d",
    "movsxd  rdx, eax",
    "mov     dword [rbp-0x50], eax",
    "cmp     byte [r14+rdx], 0x0",
    "je      0x70ace",
    "test    rax, rax",
    "jne     0x70eb9",
    "mov     qword [rbp-0x40], r14",
    "add     r12d, 0x1",
    "jmp     0x70ebc",
    "movsxd  rdx, dword [rbp-0x50]",
    "mov     rdi, qword [rbp-0x70]",
    "mov     rax, rdx",
    "cmp     rdx, rdi",
    "jae     0x711a3",
    "mov     rdi, qword [rbp-0x78]",
    "mov     dword [rbp-0x84], r10d",
    "mov     qword [rbp-0x80], rdx",
    "call    mbschr",
    "mov     rdx, qword [rbp-0x80]",
    "mov     r10d, dword [rbp-0x84]",
    "test    rax, rax",
    "jne     0x70da1",
    "lea     r15, [rel locale_mb_cur_max]",
    "cmp     dword [r15], 0x1",
    "jle     0x70e00",
    "jmp     0x70d7d",
    "mov     eax, dword [rbp-0x70]",
    "mov     edi, ebx",
    "jmp     0x70ad0",
    "cmp     byte [r14+rdx], 0x0",
    "je      0x70ace",
    "lea     eax, [r12+0x1]",
    "mov     dword [rbp-0x80], r10d",
    "movsxd  rdx, eax",
    "mov     dword [rbp-0x50], eax",
    "cmp     byte [r14+rdx], 0x0",
    "je      0x70ace",
    "lea     rdi, [rel data_120650]  {\"?*+!@\"}",
    "mov     dword [rbp-0x88], r10d",
    "mov     qword [rbp-0x90], rdx",
    "mov     dword [rbp-0x84], r9d",
    "mov     dword [rbp-0x80], esi",
    "mov     byte [rbp-0x94], cl",
    "call    mbschr",
    "mov     esi, dword [rbp-0x80]",
    "mov     r9d, dword [rbp-0x84]",
    "test    rax, rax",
    "mov     rdx, qword [rbp-0x90]",
    "mov     r10d, dword [rbp-0x88]",
    "je      0x70d89",
    "cmp     esi, 0x3c",
    "lea     rax, [rel data_12064a]",
    "lea     rsi, [rbp-0x50]",
    "mov     rdi, r14",
    "lea     rdx, [rel data_12064d]",
    "mov     r9d, 0x9",
    "lea     r8, [rel data_11fbc5]",
    "cmove   rdx, rax",
    "lea     rcx, [rel data_120645]",
    "call    sub_6f880",
    "movsxd  rdx, dword [rbp-0x50]",
    "mov     rdi, qword [rbp-0x70]",
    "mov     r10d, dword [rbp-0x80]",
    "cmp     rdx, rdi",
    "mov     rax, rdx",
    "jae     0x711a3",
    "add     r12d, 0x1",
    "jmp     0x70edd",
    "movsxd  rdx, r12d",
    "lea     rsi, [rbx+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x70eeb",
    "mov     edi, ebx",
    "jmp     0x70a1d",
    "add     r12d, 0x1",
    "movzx   ecx, byte [r13]",
    "lea     rsi, [rel is_basic_table]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rsi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "jne     0x70ff0",
    "nop     ",
    "lea     rsi, [rbp-0x50]",
    "mov     r9d, 0x1",
    "lea     r8, [rel data_11f503[9]]  {\"]\"}",
    "lea     rdx, [rel data_122124]",
    "jmp     0x70aad",
    "lea     eax, [r12+0x2]",
    "mov     dword [rbp-0x80], r10d",
    "movsxd  rdx, eax",
    "mov     dword [rbp-0x50], eax",
    "cmp     byte [r14+rdx], 0x0",
    "je      0x70ace",
    "cmp     byte [r14+rdx], 0x0",
    "je      0x70ace",
    "movsxd  rdx, r12d",
    "lea     rsi, [rbx+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "jne     0x70eca",
    "add     r12d, eax",
    "jmp     0x70e04",
    "lea     rax, [rel locale_utf8locale]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "je      0x70fb2",
    "mov     rcx, rdx",
    "mov     rdi, r14",
    "call    sub_6f880",
    "movsxd  rdx, dword [rbp-0x50]",
    "mov     r10d, dword [rbp-0x80]",
    "cmp     byte [r14+rdx], 0x0",
    "mov     rax, rdx",
    "jne     0x70d50",
    "movzx   ecx, byte [rbp-0x94]",
    "mov     r9d, 0x28",
    "lea     rdx, [rbp-0x4b]",
    "mov     rdi, r14",
    "mov     word [rbp-0x4a], r9w",
    "lea     rsi, [rbp-0x50]",
    "mov     r9d, 0x1",
    "lea     r8, [rel data_11fbc5]",
    "mov     byte [rbp-0x4b], cl",
    "lea     rcx, [rel data_120645]",
    "call    sub_6f880",
    "movsxd  rdx, dword [rbp-0x50]",
    "mov     rdi, qword [rbp-0x70]",
    "mov     r10d, dword [rbp-0x80]",
    "cmp     rdx, rdi",
    "mov     rax, rdx",
    "jb      0x70d43",
    "lea     r12d, [rdx+0x1]",
    "xor     r9d, r9d",
    "movsxd  rdx, r12d",
    "jmp     0x709b2",
    "xor     r9d, r9d",
    "jmp     0x70a06",
    "mov     rax, qword [rbp-0x70]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x48]",
    "mov     rsi, r13",
    "mov     dword [rbp-0x80], r10d",
    "mov     r15, qword [rbp-0x48]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "mov     r10d, dword [rbp-0x80]",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0x710e0",
    "test    cl, cl",
    "js      0x70fb2",
    "mov     qword [rbp-0x48], r15",
    "add     r12d, 0x1",
    "jmp     0x70e04",
    "test    rax, rax",
    "je      0x70e00",
    "mov     eax, 0x1",
    "jne     0x70ff0",
    "nop     dword [rax]",
    "nop     word [rax+rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
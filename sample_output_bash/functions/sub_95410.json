{
  "address": "0x95410",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x58",
    "mov     qword [rbp-0x68], rdi",
    "mov     edi, 0x80",
    "mov     dword [rbp-0x74], esi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x95833",
    "mov     esi, 0x80",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x68]",
    "mov     byte [r14], 0x0",
    "mov     rax, qword [rax+0x10]",
    "mov     r13, qword [rax+0x10]",
    "cmp     rax, r13",
    "je      0x9582b",
    "mov     rax, r14",
    "jmp     0x9577a",
    "lea     rax, [rbp-0x50]",
    "mov     qword [rbp-0x58], 0x80",
    "mov     ebx, 0x80",
    "xor     r12d, r12d",
    "mov     qword [rbp-0x70], rax",
    "jmp     0x9563b",
    "mov     byte [rax], 0x0",
    "mov     eax, dword [rbp-0x74]",
    "test    eax, eax",
    "jne     0x95800",
    "mov     rdi, qword [r13]",
    "mov     rdx, qword [rbp-0x70]",
    "xor     r8d, r8d",
    "mov     ecx, 0x16",
    "mov     esi, 0xa",
    "call    fmtulong",
    "mov     rdi, qword [r13+0x8]",
    "mov     r15, rax",
    "test    rdi, rdi",
    "jne     0x95490",
    "mov     rdi, r14",
    "call    sh_single_quote",
    "mov     rdi, r14",
    "mov     rbx, rax",
    "call    free",
    "mov     r14, rbx",
    "jmp     0x95784",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x95886",
    "call    ansic_shouldquote",
    "mov     rdi, qword [r13+0x8]",
    "test    eax, eax",
    "je      0x957b0",
    "test    r15, r15",
    "je      0x956e8",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x58",
    "mov     rax, r14",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "call    sh_double_quote",
    "mov     r8, rax",
    "jmp     0x954bd",
    "test    rdi, rdi",
    "je      0x95665",
    "mov     eax, 0x9",
    "xor     r8d, r8d",
    "jmp     0x95530",
    "cmp     byte [r15], 0x0",
    "je      0x956e8",
    "mov     edx, 0x8",
    "test    r15, r15",
    "je      0x954f0",
    "cmp     byte [rdi], 0x0",
    "je      0x95665",
    "add     eax, r12d",
    "cmp     eax, ebx",
    "jge     0x95690",
    "cmp     byte [r15+0x1], 0x0",
    "jne     0x957c0",
    "test    r8, r8",
    "je      0x957d6",
    "cmp     byte [r15], 0x0",
    "je      0x954f0",
    "xor     esi, esi",
    "call    sub_d80c0",
    "mov     r8, rax",
    "add     ebx, ebx",
    "cmp     eax, ebx",
    "jge     0x95690",
    "mov     rax, qword [rbp-0x58]",
    "movsxd  rdi, r12d",
    "mov     rsi, r15",
    "mov     qword [rbp-0x60], r8",
    "cmp     rdi, rax",
    "mov     rdx, rax",
    "cmovae  rdx, rdi",
    "sub     rdx, rdi",
    "add     rdi, r14",
    "call    __strcpy_chk",
    "xor     eax, eax",
    "cmp     byte [r15], 0x0",
    "mov     r8, qword [rbp-0x60]",
    "je      0x95590",
    "cmp     byte [r15+0x2], 0x0",
    "je      0x95863",
    "mov     eax, 0xa",
    "xor     r8d, r8d",
    "add     eax, r12d",
    "cmp     eax, ebx",
    "jl      0x9553b",
    "lea     eax, [rdx+0x1]",
    "xor     r8d, r8d",
    "jmp     0x95530",
    "cmp     byte [r8], 0x0",
    "lea     eax, [rdx+0x1]",
    "je      0x95530",
    "cmp     byte [r15+0x1], 0x0",
    "mov     edx, 0x9",
    "je      0x954f0",
    "movsxd  rsi, ebx",
    "mov     qword [rbp-0x60], r8",
    "mov     qword [rbp-0x58], rsi",
    "test    r14, r14",
    "je      0x957e8",
    "add     r12d, eax",
    "mov     rcx, qword [rbp-0x58]",
    "movsxd  rax, r12d",
    "lea     r15d, [r12+0x1]",
    "mov     byte [r14+rax], 0x20",
    "movsxd  rax, r15d",
    "mov     rdx, rcx",
    "cmp     rcx, rax",
    "lea     rdi, [r14+rax]",
    "cmovb   rdx, rax",
    "sub     rdx, rax",
    "test    r8, r8",
    "je      0x956f8",
    "cmp     byte [r15+0x1], 0x0",
    "mov     eax, 0x1",
    "je      0x95590",
    "mov     eax, 0xb",
    "xor     r8d, r8d",
    "jmp     0x95530",
    "mov     rdi, r15",
    "call    strlen",
    "lea     edx, [rax+0x8]",
    "nop     ",
    "cmp     byte [r8+0x1], 0x0",
    "lea     eax, [rdx+0x2]",
    "je      0x95530",
    "cmp     byte [r15+0x2], 0x0",
    "jne     0x9584b",
    "mov     rdi, qword [rbp-0x58]",
    "call    malloc",
    "mov     r8, qword [rbp-0x60]",
    "mov     r14, rax",
    "jmp     0x956b9",
    "mov     rdi, r14",
    "call    realloc",
    "mov     r8, qword [rbp-0x60]",
    "mov     r14, rax",
    "mov     rcx, rdx",
    "lea     rsi, [rel data_120b7f]",
    "mov     edx, 0x3",
    "call    __memcpy_chk",
    "mov     rax, qword [rbp-0x68]",
    "lea     edx, [r12+0x3]",
    "mov     rax, qword [rax+0x10]",
    "cmp     rax, qword [r13+0x10]",
    "je      0x95740",
    "mov     rsi, r8",
    "mov     qword [rbp-0x60], r8",
    "call    __strcpy_chk",
    "mov     r8, qword [rbp-0x60]",
    "xor     eax, eax",
    "cmp     byte [r8], 0x0",
    "je      0x95600",
    "cmp     byte [r15+0x2], 0x0",
    "mov     eax, 0x2",
    "je      0x95590",
    "cmp     byte [r8+0x2], 0x0",
    "lea     eax, [rdx+0x3]",
    "je      0x95530",
    "mov     rdi, r15",
    "mov     qword [rbp-0x60], r8",
    "call    strlen",
    "mov     r8, qword [rbp-0x60]",
    "lea     edx, [rax+0x8]",
    "jmp     0x954f0",
    "mov     edx, 0xa",
    "nop     dword [rax]",
    "test    r14, r14",
    "jne     0x9553b",
    "mov     rsi, qword [rbp-0x58]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x60], r8",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  r12, edx",
    "add     edx, 0x1",
    "cmp     edx, ebx",
    "jl      0x95776",
    "movsxd  rdx, edx",
    "add     r12d, 0x4",
    "mov     byte [r14+rdx], 0x20",
    "mov     r13, qword [r13+0x10]",
    "cmp     r13, rax",
    "jne     0x9563b",
    "lea     r12d, [r15+rax]",
    "mov     rax, qword [rbp-0x68]",
    "mov     rax, qword [rax+0x10]",
    "cmp     qword [r13+0x10], rax",
    "je      0x9561e",
    "cmp     byte [r8+0x1], 0x0",
    "mov     eax, 0x1",
    "je      0x95600",
    "mov     rdi, r15",
    "call    strlen",
    "mov     r8, qword [rbp-0x60]",
    "nop     ",
    "mov     rdi, r8",
    "mov     dword [rbp-0x78], edx",
    "mov     qword [rbp-0x60], r8",
    "call    strlen",
    "mov     edx, dword [rbp-0x78]",
    "mov     r8, qword [rbp-0x60]",
    "lea     eax, [rdx+rax+0x1]",
    "lea     rax, [r14+r12]",
    "sub     edx, ebx",
    "and     edx, 0xfffffff8",
    "lea     ebx, [rbx+rdx+0x8]",
    "movsxd  rbx, ebx",
    "test    r14, r14",
    "je      0x9581b",
    "mov     edx, r12d",
    "nop     dword [rax+rax]",
    "mov     rdi, r8",
    "call    free",
    "mov     rax, qword [rbp-0x68]",
    "mov     r13, qword [r13+0x10]",
    "mov     rax, qword [rax+0x10]",
    "cmp     r13, rax",
    "je      0x95738",
    "movsxd  rax, r12d",
    "add     r12d, 0x1",
    "mov     byte [r14+rax], 0x20",
    "cmp     byte [r8+0x2], 0x0",
    "mov     eax, 0x2",
    "je      0x95600",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r14, rax",
    "jmp     0x9576d",
    "mov     rdi, r14",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r14, rax",
    "mov     rdi, r8",
    "call    strlen",
    "mov     r8, qword [rbp-0x60]",
    "nop     dword [rax]",
    "test    r14, r14",
    "je      0x95870",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xd1100",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x48",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    rdi, rdi",
    "je      0xd1378",
    "lea     rax, [rel prog_completes]",
    "mov     r12, qword [rax]",
    "test    r12, r12",
    "je      0xd1391",
    "pxor    xmm0, xmm0",
    "lea     rcx, [rbp-0x60]",
    "lea     rdx, [rbp-0x58]",
    "mov     dword [rbp-0x40], 0x0",
    "lea     rsi, [rbp-0x50]",
    "movaps  xmmword [rbp-0x50], xmm0",
    "mov     qword [rbp-0x60], 0x0",
    "mov     qword [rbp-0x58], 0x0",
    "mov     qword [rel data_168fd0], 0x0",
    "mov     qword [rel data_168fc8], 0x0",
    "mov     qword [rel data_168fc0], 0x0",
    "mov     qword [rel data_168fb8], 0x0",
    "mov     qword [rel data_168fb0], 0x0",
    "mov     qword [rel data_168fa8], 0x0",
    "mov     qword [rel data_168fa0], 0x0",
    "call    sub_1132c0",
    "mov     r12d, eax",
    "cmp     eax, 0x102",
    "je      0xd1650",
    "xor     r12d, r12d",
    "jmp     0xd120c",
    "mov     r15d, dword [r12+0xc]",
    "test    r15d, r15d",
    "jne     0xd13a0",
    "mov     r12d, 0x102",
    "jmp     0xd120c",
    "lea     rax, [rel loptend]",
    "mov     r13d, dword [rbp-0x48]",
    "lea     rdi, [rel data_12104a]  {\"_DefaultCmD_\"}",
    "mov     rbx, qword [rax]",
    "test    r13d, r13d",
    "jne     0xd123f",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xd166a",
    "mov     r14d, dword [r12+0x8]",
    "test    r14d, r14d",
    "jle     0xd1391",
    "call    make_bare_word",
    "xor     esi, esi",
    "mov     rdi, rax",
    "call    make_word_list",
    "mov     r8d, dword [rbp-0x50]",
    "mov     r13, rax",
    "test    r8d, r8d",
    "je      0xd1268",
    "mov     r11d, dword [rbp-0x44]",
    "lea     rdi, [rel data_120c68]  {\"_EmptycmD_\"}",
    "test    r11d, r11d",
    "jne     0xd123f",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x48",
    "mov     eax, r12d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "xor     r13d, r13d",
    "test    rbx, rbx",
    "sete    al",
    "mov     edx, eax",
    "cmp     r12d, 0x1",
    "jne     0xd1328",
    "test    rax, rax",
    "je      0xd11f8",
    "mov     r10d, dword [rbp-0x40]",
    "test    r10d, r10d",
    "jne     0xd1238",
    "add     r13, 0x1",
    "cmp     dword [r12+0x8], r13d",
    "jg      0xd13ad",
    "nop     word [rax+rax]",
    "mov     ecx, dword [rbp-0x4c]",
    "test    ecx, ecx",
    "je      0xd13f0",
    "test    al, al",
    "je      0xd1328",
    "test    rbx, rbx",
    "je      0xd12b8",
    "jmp     0xd1287",
    "lea     rdi, [rel data_120c4f]  {\"_InitialWorD_\"}",
    "mov     r9d, dword [rbp-0x50]",
    "test    r9d, r9d",
    "je      0xd12a0",
    "mov     rax, qword [r12]",
    "mov     rbx, qword [rax+r13*8]",
    "test    rbx, rbx",
    "je      0xd13d9",
    "jmp     0xd1391",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0xd13c0",
    "test    r13, r13",
    "sete    al",
    "test    r13, r13",
    "je      0xd135b",
    "test    r13, r13",
    "je      0xd12b8",
    "lea     rax, [rel prog_completes]",
    "mov     r12, qword [rax]",
    "test    r12, r12",
    "je      0xd1391",
    "mov     rdi, rbx",
    "call    sub_d1030",
    "mov     r12d, eax",
    "mov     rdi, r13",
    "call    sub_d1030",
    "mov     rdi, r13",
    "mov     r12d, eax",
    "call    dispose_words",
    "jmp     0xd120c",
    "test    rbx, rbx",
    "sete    dl",
    "cmp     r12d, 0x1",
    "jne     0xd1350",
    "mov     rsi, qword [rbx+0x10]",
    "mov     rdi, qword [rbx+0x8]",
    "call    sub_d0cd0",
    "test    eax, eax",
    "js      0xd1391",
    "call    compspec_create",
    "movq    xmm0, qword [rbp-0x58]",
    "mov     r12, qword [rel data_168fa0]",
    "mov     r14, rax",
    "movhps  xmm0, qword [rbp-0x60]",
    "movups  xmmword [rax+0x8], xmm0",
    "test    r12, r12",
    "je      0xd1456",
    "cmp     r12d, 0x1",
    "jne     0xd1648",
    "test    rbx, rbx",
    "je      0xd1638",
    "mov     rdi, r13",
    "call    sub_d0b00",
    "mov     rdi, r13",
    "mov     r12d, eax",
    "call    dispose_words",
    "jmp     0xd120c",
    "mov     edi, dword [r12+0xc]",
    "test    edi, edi",
    "je      0xd1391",
    "mov     eax, dword [rbp-0x4c]",
    "test    eax, eax",
    "je      0xd1628",
    "test    dl, dl",
    "je      0xd1350",
    "mov     qword [r14+0x18], r12",
    "mov     r12, qword [rel data_168fa8]",
    "test    r12, r12",
    "je      0xd1497",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0xd16e7",
    "call    builtin_usage",
    "nop     dword [rax]",
    "call    progcomp_flush",
    "jmp     0xd1391",
    "mov     rdi, rbx",
    "call    sub_d0b00",
    "mov     r12d, eax",
    "jmp     0xd120c",
    "mov     esi, dword [r12+0x8]",
    "test    esi, esi",
    "jle     0xd1391",
    "mov     eax, 0x1",
    "xor     r13d, r13d",
    "jmp     0xd13f6",
    "mov     qword [r14+0x20], r12",
    "mov     r12, qword [rel data_168fb0]",
    "test    r12, r12",
    "je      0xd14d8",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0xd1705",
    "mov     qword [rbp-0x68], rax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rdx, r15",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     r12, rax",
    "xor     r13d, r13d",
    "test    al, dl",
    "je      0xd1404",
    "mov     qword [r14+0x28], r12",
    "mov     r12, qword [rel data_168fb8]",
    "test    r12, r12",
    "je      0xd1519",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0xd166f",
    "mov     qword [rbp-0x68], rax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rdx, r15",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     r12, rax",
    "add     r13, 0x1",
    "cmp     dword [r12+0x8], r13d",
    "jg      0xd12e8",
    "nop     dword [rax]",
    "mov     qword [r14+0x30], r12",
    "mov     r12, qword [rel data_168fc8]",
    "test    r12, r12",
    "je      0xd155a",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0xd16ab",
    "mov     qword [rbp-0x68], rax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rdx, r15",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     r12, rax",
    "mov     rax, qword [r12]",
    "mov     rbx, qword [rax+r13*8]",
    "test    rbx, rbx",
    "je      0xd1315",
    "jmp     0xd1391",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0xd12f8",
    "mov     qword [r14+0x38], r12",
    "mov     r12, qword [rel data_168fd0]",
    "test    r12, r12",
    "je      0xd159b",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0xd1723",
    "mov     qword [rbp-0x68], rax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rdx, r15",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     r12, rax",
    "mov     rsi, qword [rbx+0x10]",
    "mov     rdi, qword [rbx+0x8]",
    "call    sub_d0cd0",
    "test    eax, eax",
    "js      0xd1391",
    "mov     qword [r14+0x40], r12",
    "mov     r12, qword [rel data_168fc0]",
    "test    r12, r12",
    "je      0xd15dc",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0xd168d",
    "mov     qword [rbp-0x68], rax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rdx, r15",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     r12, rax",
    "mov     qword [r14+0x50], r12",
    "test    r13, r13",
    "je      0xd1660",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0xd16c9",
    "mov     qword [rbp-0x68], rax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rdx, r15",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     r12, rax",
    "xor     r12d, r12d",
    "test    rbx, rbx",
    "jne     0xd15e8",
    "mov     rbx, r13",
    "mov     qword [rbp-0x68], rax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rdx, r15",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     r12, rax",
    "xor     r12d, r12d",
    "mov     r15d, 0x1",
    "nop     dword [rax]",
    "jmp     0xd1615",
    "mov     rax, qword [rbx+0x8]",
    "mov     rsi, r14",
    "mov     rdi, qword [rax]",
    "call    progcomp_insert",
    "mov     rbx, qword [rbx]",
    "test    eax, eax",
    "cmove   r12d, r15d",
    "test    rbx, rbx",
    "jne     0xd15f8",
    "mov     rdi, r13",
    "call    dispose_words",
    "jmp     0xd120c"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x92f20",
  "rules": [
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rdx, rsi",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdi",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x58",
    "mov     rsi, qword [rsi]",
    "test    rsi, rsi",
    "je      0x93134",
    "cmp     qword [rdi], 0x0",
    "mov     eax, 0x1",
    "jne     0x93120",
    "cmp     byte [rsi], 0x0",
    "jne     0x9310e",
    "mov     rcx, rax",
    "add     rax, 0x1",
    "cmp     qword [r15+rax*8-0x8], 0x0",
    "jne     0x93120",
    "mov     edi, 0x8",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x931bd",
    "cmp     qword [rdi], 0x0",
    "mov     eax, 0x1",
    "je      0x9317e",
    "cmp     qword [rdx+0x8], 0x0",
    "je      0x9318f",
    "jmp     0x92f80",
    "xor     eax, eax",
    "mov     qword [rbp-0x50], rax",
    "jmp     0x930fb",
    "mov     qword [rbp-0x50], rbx",
    "jmp     0x930ec",
    "xor     r12d, r12d",
    "jmp     0x92f8c",
    "nop     dword [rax]",
    "mov     qword [rbp-0x50], rdi",
    "jmp     0x930fb",
    "cmp     qword [rdi], 0x0",
    "je      0x9317e",
    "mov     r12d, ecx",
    "test    rsi, rsi",
    "je      0x93157",
    "mov     rax, qword [rbp-0x50]",
    "add     rsp, 0x58",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r15",
    "call    free",
    "mov     qword [rbx], 0x0",
    "mov     eax, 0x1",
    "nop     dword [rax]",
    "mov     eax, 0x1",
    "mov     rcx, rax",
    "add     rax, 0x1",
    "cmp     qword [r15+rax*8-0x8], 0x0",
    "jne     0x93120",
    "mov     edi, 0x8",
    "mov     qword [rbp-0x38], rdx",
    "call    malloc",
    "mov     qword [rbp-0x50], rax",
    "test    rax, rax",
    "je      0x931bd",
    "mov     rcx, rax",
    "add     rax, 0x1",
    "cmp     qword [rdx+rax*8-0x8], 0x0",
    "jne     0x92f98",
    "mov     dword [rbp-0x5c], ecx",
    "imul    ecx, r12d",
    "mov     qword [rbp-0x38], rdx",
    "lea     edi, [rcx+0x1]",
    "movsxd  rdi, edi",
    "shl     rdi, 0x3",
    "call    malloc",
    "mov     qword [rbp-0x50], rax",
    "test    rax, rax",
    "je      0x931bd",
    "nop     dword [rax]",
    "mov     dword [rbp-0x5c], 0x0",
    "mov     rdx, qword [rbp-0x38]",
    "jmp     0x92fdb",
    "test    r12d, r12d",
    "mov     rdx, qword [rbp-0x38]",
    "je      0x93186",
    "movsxd  rcx, r12d",
    "mov     qword [rbp-0x80], r15",
    "mov     rbx, r15",
    "xor     r14d, r14d",
    "lea     rax, [r15+rcx*8]",
    "mov     qword [rbp-0x78], rdx",
    "mov     qword [rbp-0x68], rax",
    "movsxd  rax, dword [rbp-0x5c]",
    "mov     qword [rbp-0x70], rax",
    "nop     dword [rax]",
    "mov     rbx, qword [rbp-0x50]",
    "jmp     0x930ec",
    "mov     rdi, r13",
    "add     rbx, 0x8",
    "call    free",
    "cmp     qword [rbp-0x68], rbx",
    "jne     0x93000",
    "add     eax, 0x1",
    "mov     rsi, qword [rbp-0x70]",
    "lea     r8d, [r14+0x1]",
    "mov     qword [rbp-0x38], r13",
    "movsxd  rcx, eax",
    "movsxd  rax, r14d",
    "movsxd  r12, r8d",
    "mov     qword [rbp-0x58], rbx",
    "lea     rsi, [rax+rsi+0x1]",
    "neg     rax",
    "mov     r13, r12",
    "mov     r14, rcx",
    "mov     qword [rbp-0x40], rsi",
    "mov     rsi, qword [rbp-0x78]",
    "lea     r15, [rsi+rax*8]",
    "movsxd  rax, edx",
    "mov     qword [rbp-0x48], rax",
    "jmp     0x93063",
    "mov     r13, qword [rbx]",
    "mov     rdi, r13",
    "call    strlen",
    "mov     ecx, dword [rbp-0x5c]",
    "mov     edx, eax",
    "test    ecx, ecx",
    "je      0x930ca",
    "mov     rax, qword [rbp-0x50]",
    "mov     r15, qword [rbp-0x80]",
    "lea     rbx, [rax+r14*8]",
    "mov     rbx, qword [r15+r13*8-0x8]",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+r14]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x93198",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "call    dcgettext",
    "mov     rdx, r12",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x50]",
    "mov     rsi, qword [rbp-0x38]",
    "mov     rdx, r12",
    "mov     qword [rax+r13*8-0x8], rdi",
    "call    __strcpy_chk",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "mov     rax, qword [rbp-0x48]",
    "add     rdi, rax",
    "call    strcpy",
    "mov     rcx, qword [rbp-0x40]",
    "lea     rax, [r13+0x1]",
    "cmp     rax, rcx",
    "jne     0x93060",
    "mov     r13, rax",
    "mov     r12, r13",
    "mov     rbx, qword [rbp-0x58]",
    "mov     r13, qword [rbp-0x38]",
    "movsxd  r14, r12d"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
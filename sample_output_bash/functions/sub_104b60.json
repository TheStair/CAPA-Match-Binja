{
  "address": "0x104b60",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "check OS version/05c4f722021b4c44a9480dc26ee71d47"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "movsxd  r15, esi",
    "push    r14",
    "push    r13",
    "mov     r13, r15",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "movzx   ebx, byte [rdi+r15]",
    "test    bl, bl",
    "je      0x104ba0",
    "add     rsp, 0x18",
    "mov     eax, r13d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "movsx   eax, bl",
    "mov     r12, rdi",
    "lea     rdi, [rel data_122e54]",
    "mov     esi, eax",
    "mov     dword [rbp-0x38], eax",
    "call    strchr",
    "test    rax, rax",
    "je      0x104bb8",
    "call    __ctype_b_loc",
    "mov     r14, qword [rax]",
    "movzx   eax, bl",
    "movzx   esi, word [r14+rax*2]",
    "test    si, 0x800",
    "je      0x104c1d",
    "add     r13d, 0x1",
    "mov     esi, dword [rbp-0x38]",
    "lea     rdi, [rel data_122e58]  {\"<>;&|\"}",
    "call    strchr",
    "mov     esi, dword [rbp-0x38]",
    "test    rax, rax",
    "je      0x104c70",
    "lea     rax, [r12+r15+0x1]",
    "jmp     0x104bf7",
    "lea     rdi, [rel data_122e5e]",
    "mov     dword [rbp-0x38], esi",
    "call    strchr",
    "mov     esi, dword [rbp-0x38]",
    "test    rax, rax",
    "je      0x104ec2",
    "movsx   ecx, byte [r12+r15+0x1]",
    "cmp     cl, bl",
    "je      0x104e9f",
    "test    si, 0x800",
    "jne     0x104be0",
    "xor     ebx, ebx",
    "xor     esi, esi",
    "jmp     0x104c91",
    "add     r13d, 0x1",
    "xor     ebx, ebx",
    "cmp     ecx, 0x3c",
    "jne     0x104c5d",
    "cmp     ecx, 0x26",
    "je      0x104e4a",
    "movzx   ebx, byte [rax]",
    "add     rax, 0x1",
    "add     r13d, 0x1",
    "test    bl, bl",
    "je      0x104ba0",
    "mov     eax, ebx",
    "movsxd  r15, r13d",
    "and     eax, 0xfffffffd",
    "movzx   ebx, byte [r12+r15]",
    "cmp     al, 0x3c",
    "jne     0x104e08",
    "movsxd  r14, r13d",
    "movzx   eax, byte [r12+r14]",
    "test    al, al",
    "je      0x104ba0",
    "lea     rdi, [rel history_word_delimiters]",
    "mov     rdx, qword [rdi]",
    "mov     qword [rbp-0x38], rdx",
    "jmp     0x104d24",
    "add     r13d, 0x2",
    "jmp     0x104ba0",
    "movzx   eax, byte [r12+r15+0x2]",
    "cmp     al, 0x2d",
    "je      0x104ecb",
    "mov     eax, ebx",
    "and     eax, 0xfffffffd",
    "cmp     al, 0x3c",
    "jne     0x104b9c",
    "cmp     ecx, 0x3e",
    "jne     0x104d44",
    "movzx   ecx, bl",
    "movzx   esi, word [r14+rcx*2]",
    "test    bl, bl",
    "je      0x104ba0",
    "test    bl, bl",
    "je      0x104ba0",
    "cmp     al, 0x5c",
    "jne     0x104cb8",
    "add     r13d, 0x1",
    "jmp     0x104c5d",
    "cmp     al, 0x3c",
    "sete    al",
    "movzx   eax, al",
    "add     r13d, eax",
    "jmp     0x104c5d",
    "add     r13d, 0x2",
    "movsxd  rax, r13d",
    "add     rax, r12",
    "movzx   ecx, byte [rax]",
    "test    cl, cl",
    "jne     0x104e84",
    "cmp     ecx, 0x7c",
    "je      0x104e3c",
    "cmp     bl, 0x26",
    "jne     0x104b9c",
    "movsx   esi, bl",
    "lea     rdi, [rel data_122e5e]",
    "mov     dword [rbp-0x38], esi",
    "call    strchr",
    "mov     esi, dword [rbp-0x38]",
    "test    rax, rax",
    "jne     0x104c8b",
    "movsx   eax, bl",
    "mov     dword [rbp-0x38], eax",
    "test    ebx, ebx",
    "je      0x104d80",
    "cmp     byte [r12+r14+0x1], 0xa",
    "lea     eax, [r13+0x1]",
    "je      0x104df8",
    "movzx   esi, cl",
    "test    byte [r14+rsi*2+0x1], 0x8",
    "jne     0x104e70",
    "jmp     0x104ba0",
    "cmp     bl, 0x3e",
    "jne     0x104b9c",
    "cmp     ecx, 0x28",
    "jne     0x104b9c",
    "mov     eax, ebx",
    "mov     r14, r15",
    "xor     ebx, ebx",
    "xor     esi, esi",
    "jmp     0x104ca1",
    "movsx   r15d, al",
    "test    esi, esi",
    "jne     0x104dd0",
    "cmp     al, 0x28",
    "je      0x104de8",
    "lea     eax, [r13+0x2]",
    "jmp     0x104d11",
    "xor     edx, edx",
    "cmp     esi, 0x27",
    "setne   dl",
    "add     eax, edx",
    "jmp     0x104d11",
    "movzx   ecx, byte [rax+0x1]",
    "add     rax, 0x1",
    "add     r13d, 0x1",
    "test    cl, cl",
    "je      0x104ba0",
    "xor     eax, eax",
    "cmp     cl, 0x2d",
    "sete    al",
    "add     r13d, eax",
    "jmp     0x104ba0",
    "jmp     0x104c5d",
    "mov     eax, ebx",
    "and     eax, 0xfffffffd",
    "cmp     al, 0x3c",
    "jne     0x104b9c",
    "xor     edx, edx",
    "cmp     esi, r15d",
    "lea     eax, [r13+0x1]",
    "cmove   esi, edx",
    "jmp     0x104d11",
    "mov     esi, r15d",
    "lea     rdi, [rel data_122e62]  {\"<>$!@?+*\"}",
    "call    strchr",
    "test    rax, rax",
    "je      0x104cdd",
    "add     ebx, 0x1",
    "lea     eax, [r13+0x1]",
    "jmp     0x104d11",
    "movsx   r15d, al",
    "cmp     r15d, esi",
    "je      0x104dc0",
    "movsxd  r14, eax",
    "movzx   eax, byte [r12+r14]",
    "mov     r13, r14",
    "test    al, al",
    "je      0x104ba0",
    "add     r13d, 0x2",
    "mov     ebx, 0x1",
    "mov     esi, 0x29",
    "jmp     0x104c91",
    "mov     rdi, qword [rbp-0x38]",
    "mov     esi, r15d",
    "call    strchr",
    "test    rax, rax",
    "jne     0x104ba0",
    "cmp     byte [r12+r14+0x1], 0x28",
    "jne     0x104cdd",
    "sub     ebx, 0x1",
    "jne     0x104dc7",
    "test    esi, esi",
    "jne     0x104dc7",
    "mov     esi, r15d",
    "lea     rdi, [rel data_122e5e]",
    "call    strchr",
    "xor     esi, esi",
    "mov     rcx, rax",
    "lea     eax, [r13+0x1]",
    "test    rcx, rcx",
    "cmovne  esi, r15d",
    "mov     ebx, 0x1",
    "mov     esi, 0x29",
    "lea     eax, [r13+0x3]",
    "jmp     0x104d11",
    "lea     eax, [r13+0x1]",
    "jmp     0x104d11",
    "xor     esi, esi"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x92bf0",
  "rules": [
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "test    rdi, rdi",
    "je      0x92c98",
    "xor     eax, eax",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "mov     rax, qword [rdi+0x10]",
    "test    rax, rax",
    "je      0x92c7b",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "cmp     qword [rdi+0x8], 0x0",
    "je      0x92c88",
    "pop     rbx",
    "xor     eax, eax",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     rbx, qword [rax+0x10]",
    "movzx   r14d, word [rel data_136aa4]",
    "cmp     rax, rbx",
    "jne     0x92c62",
    "mov     rdi, qword [rbx+0x8]",
    "cmp     byte [rdi], 0x0",
    "je      0x92c30",
    "jmp     0x92c78",
    "mov     edi, 0x2",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x92c9b",
    "call    sub_87450",
    "mov     r12, rax",
    "jmp     0x92c46",
    "mov     rax, r13",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     edx, 0x2",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     word [rax], r14w",
    "mov     rdi, qword [rbx+0x8]",
    "test    rdi, rdi",
    "je      0x92c54",
    "mov     qword [rbx+0x8], r12",
    "mov     rbx, qword [rbx+0x10]",
    "cmp     qword [r13+0x10], rbx",
    "je      0x92c78",
    "call    free"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
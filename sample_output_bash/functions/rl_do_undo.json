{
  "address": "0x101ac0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "xor     r13d, r13d",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "lea     r12, [rel rl_undo_list]",
    "jmp     0x101ba2",
    "mov     rbx, qword [r12]",
    "test    rbx, rbx",
    "je      0x101e00",
    "add     rsp, 0x28",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     r15, [rel rl_readline_state]",
    "lea     r14, [rel _rl_doing_an_undo]",
    "mov     edx, dword [rbx+0x18]",
    "mov     rax, qword [r15]",
    "mov     dword [r14], 0x1",
    "or      rax, 0x10000",
    "mov     qword [r15], rax",
    "cmp     edx, 0x1",
    "ja      0x101ae8",
    "cmp     edx, 0x2",
    "je      0x101cb0",
    "mov     ecx, dword [rbx+0x8]",
    "cmp     ecx, 0xffffffff",
    "je      0x101d20",
    "test    r13d, r13d",
    "je      0x101df0",
    "cmp     edx, 0x3",
    "sete    dl",
    "movzx   edx, dl",
    "add     r13d, edx",
    "lea     r8, [rel rl_point]",
    "lea     r9, [rel rl_end]",
    "mov     ecx, dword [r8]",
    "jmp     0x101bfe",
    "lea     r9, [rel rl_end]",
    "cmp     ecx, 0xfffffffe",
    "jne     0x101bf7",
    "call    rl_ding",
    "jmp     0x101d48",
    "sub     r13d, 0x1",
    "jmp     0x101afd",
    "mov     rsi, rbx",
    "mov     edi, 0xffffffff",
    "call    _hs_replace_history_data",
    "lea     rax, [rel _rl_saved_line_for_history]",
    "mov     rdx, qword [rax]",
    "test    rdx, rdx",
    "je      0x101b91",
    "mov     rax, qword [rel data_1688b8]",
    "test    rax, rax",
    "je      0x101b5b",
    "mov     esi, dword [rbx+0xc]",
    "cmp     esi, 0xffffffff",
    "je      0x101d18",
    "lea     r8, [rel rl_point]",
    "mov     ecx, dword [r9]",
    "mov     rax, qword [r15]",
    "mov     rbx, qword [r12]",
    "jmp     0x101afd",
    "and     rax, 0xfffffffffffeffff",
    "mov     rdx, qword [rbx]",
    "mov     dword [r14], 0x0",
    "mov     qword [r15], rax",
    "lea     rax, [rel history_offset]",
    "mov     qword [r12], rdx",
    "mov     edi, dword [rax]",
    "lea     rax, [rel history_length]",
    "mov     qword [rbx], 0x0",
    "mov     ecx, dword [rax]",
    "cmp     edi, ecx",
    "je      0x101b5b",
    "mov     rdi, rbx",
    "call    free",
    "test    r13d, r13d",
    "je      0x101c9c",
    "mov     rax, qword [rdx+0x10]",
    "test    rax, rax",
    "je      0x101b91",
    "movsxd  rsi, edi",
    "mov     rax, qword [rax+rsi*8]",
    "test    rax, rax",
    "je      0x101b5b",
    "mov     esi, dword [r8]",
    "jmp     0x101c12",
    "cmp     esi, 0xfffffffe",
    "jne     0x101c12",
    "add     rsp, 0x28",
    "mov     eax, 0x1",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     rax, rbx",
    "jne     0x101c70",
    "mov     rax, qword [rax+0x10]",
    "test    rax, rax",
    "je      0x101b5b",
    "test    edx, edx",
    "je      0x101cc8",
    "mov     esi, dword [r9]",
    "mov     rdx, rax",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x101b91",
    "mov     rax, qword [r12]",
    "mov     qword [rdx+0x10], rax",
    "cmp     rax, rbx",
    "je      0x101da0",
    "mov     eax, dword [r9]",
    "mov     dword [r8], ecx",
    "cmp     ecx, eax",
    "jle     0x101d68",
    "mov     edi, ecx",
    "mov     qword [rbp-0x48], r8",
    "mov     qword [rbp-0x40], r9",
    "mov     dword [rbp-0x34], ecx",
    "call    rl_delete_text",
    "mov     r9, qword [rbp-0x40]",
    "mov     ecx, dword [rbp-0x34]",
    "mov     r8, qword [rbp-0x48]",
    "mov     eax, dword [r9]",
    "mov     dword [r8], ecx",
    "cmp     ecx, eax",
    "jle     0x101d80",
    "cmp     rax, rbx",
    "jne     0x101c70",
    "lea     rax, [rel rl_line_buffer]",
    "mov     rsi, qword [rax]",
    "test    edi, edi",
    "js      0x32516",
    "test    ecx, ecx",
    "jns     0x101cd9",
    "mov     dword [r8], eax",
    "test    ecx, ecx",
    "jns     0x101c48",
    "mov     dword [r8], eax",
    "mov     rax, qword [r12]",
    "mov     rdi, rbx",
    "mov     qword [rdx], rax",
    "call    free",
    "test    r13d, r13d",
    "jne     0x101ba2",
    "mov     rax, qword [0x0]",
    "ud2     ",
    "{ Does not return }",
    "cmp     edi, ecx",
    "jge     0x32516",
    "lea     rdx, [rel rl_mark]",
    "mov     ecx, dword [rdx]",
    "cmp     eax, ecx",
    "jge     0x101d58",
    "mov     dword [r8], 0x0",
    "jmp     0x101cd9",
    "test    ecx, ecx",
    "jns     0x101ce8",
    "mov     dword [rdx], eax",
    "lea     rdx, [rel rl_mark]",
    "mov     ecx, dword [rdx]",
    "cmp     eax, ecx",
    "jge     0x101d40",
    "mov     dword [r8], 0x0",
    "jmp     0x101c48",
    "test    ecx, ecx",
    "js      0x101e18",
    "mov     dword [rdx], eax",
    "mov     rbx, qword [r12]",
    "mov     rax, qword [r15]",
    "jmp     0x101afd",
    "call    sub_1064e0",
    "mov     rdi, qword [rax]",
    "mov     r14, rax",
    "test    rdi, rdi",
    "je      0x101dcf",
    "mov     rdi, qword [rbx+0x10]",
    "call    rl_insert_text",
    "mov     rbx, qword [r12]",
    "mov     rdi, qword [rbx+0x10]",
    "test    rdi, rdi",
    "je      0x101d98",
    "mov     dword [rdx], 0x0",
    "jmp     0x101ce8",
    "mov     rax, qword [r15]",
    "jmp     0x101afd",
    "call    free",
    "mov     rax, qword [r15]",
    "mov     rbx, qword [r12]",
    "jmp     0x101afd",
    "mov     rax, qword [r15]",
    "mov     rbx, qword [r12]",
    "mov     dword [rdx], 0x0",
    "jmp     0x101afd",
    "mov     rdi, qword [r14+0x8]",
    "test    rdi, rdi",
    "je      0x101ddd",
    "call    free",
    "mov     rdi, r14",
    "call    free",
    "mov     rdx, qword [r12]",
    "jmp     0x101b5b",
    "call    free"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x1191f0",
  "rules": [
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13d, r8d",
    "push    r12",
    "mov     r12, r9",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x138",
    "mov     qword [rbp-0x148], rsi",
    "mov     r14, qword [rbp+0x18]",
    "mov     qword [rbp-0x150], rdx",
    "xor     edx, edx",
    "mov     qword [rbp-0x158], rcx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rel shell_functions]",
    "mov     dword [r14], 0x0",
    "mov     r15, qword [rax]",
    "mov     rsi, r15",
    "call    hash_search",
    "test    rax, rax",
    "je      0x119590",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_134b98]  {\"completion: function `%s' not fo\u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "call    rl_ding",
    "mov     rax, qword [rel data_15a1c8]",
    "mov     rdx, qword [rax]",
    "test    rdx, rdx",
    "je      0x1195c7",
    "mov     qword [rel data_1619d8], r15",
    "mov     r15, qword [rax+0x10]",
    "test    r15, r15",
    "je      0x119590",
    "lea     rdx, [rel _rl_last_v_pos]",
    "mov     rax, qword [rax+0x10]",
    "mov     dword [rel data_168a38], 0x0",
    "mov     dword [rdx], 0x0",
    "lea     rdx, [rel _rl_last_c_pos]",
    "mov     dword [rdx], 0x0",
    "lea     rdx, [rel _rl_vis_botlin]",
    "mov     dword [rdx], 0x0",
    "test    rax, rax",
    "je      0x119608",
    "mov     byte [rdx], 0x0",
    "mov     eax, dword [rbp+0x10]",
    "mov     rdi, qword [rbp-0x158]",
    "mov     rdx, r12",
    "mov     esi, r13d",
    "xor     r8d, r8d",
    "lea     r13, [rel data_122fb4]  {\"gen-shell-function-matches\"}",
    "lea     ecx, [rax-0x1]",
    "call    sub_abda0",
    "mov     r8d, dword [rbp+0x10]",
    "mov     rcx, r12",
    "mov     rdi, rbx",
    "mov     rsi, qword [rbp-0x148]",
    "mov     rdx, qword [rbp-0x150]",
    "lea     r12, [rbp-0x140]",
    "call    sub_ac110",
    "mov     rdi, r12",
    "mov     rbx, rax",
    "call    save_parser_state",
    "mov     rdi, r13",
    "call    begin_unwind_frame",
    "lea     rsi, [rel uwcache]",
    "mov     eax, dword [rsi+0xc]",
    "test    eax, eax",
    "jle     0x1194f0",
    "mov     dword [rel data_168a30], 0x0",
    "mov     qword [rax], 0x0",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x3257c",
    "mov     rdi, qword [rsi]",
    "lea     edx, [rax-0x1]",
    "mov     r8, qword [rel data_161a50]",
    "movsxd  rcx, edx",
    "mov     dword [rsi+0xc], edx",
    "mov     rcx, qword [rdi+rcx*8]",
    "mov     qword [rcx], r8",
    "lea     r8, [rel restore_parser_state]",
    "mov     qword [rcx+0x10], r12",
    "mov     qword [rcx+0x8], r8",
    "mov     qword [rel data_161a50], rcx",
    "test    edx, edx",
    "je      0x119526",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x11961a",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_161a50]",
    "mov     qword [rcx+0x10], r12",
    "mov     qword [rel data_161a50], rcx",
    "mov     qword [rcx], rax",
    "lea     rax, [rel restore_parser_state]",
    "mov     qword [rcx+0x8], rax",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x148], rcx",
    "call    malloc",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0x325c4",
    "lea     r8d, [rax-0x2]",
    "movsxd  rdx, r8d",
    "mov     dword [rsi+0xc], r8d",
    "mov     rdx, qword [rdi+rdx*8]",
    "mov     qword [rdx], rcx",
    "lea     rcx, [rel dispose_words]",
    "mov     qword [rdx+0x10], rbx",
    "mov     qword [rdx+0x8], rcx",
    "mov     qword [rel data_161a50], rdx",
    "test    r8d, r8d",
    "je      0x119563",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x138",
    "mov     rax, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rcx, qword [rbp-0x148]",
    "mov     qword [rel data_161a50], rdx",
    "mov     qword [rax], rcx",
    "lea     rax, [rel dispose_words]",
    "mov     qword [rdx+0x10], rbx",
    "mov     qword [rdx+0x8], rax",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x148], rdx",
    "call    malloc",
    "test    rax, rax",
    "je      0x325a0",
    "sub     eax, 0x3",
    "mov     dword [rsi+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rdi+rax*8]",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, qword [rbp-0x148]",
    "jmp     0x119351",
    "mov     rdi, r12",
    "mov     r12d, 0x201",
    "call    restore_parser_state",
    "cmp     r15d, 0x7c",
    "je      0x1193ad",
    "mov     rdi, r13",
    "call    sub_113da0",
    "lea     rsi, [rel sub_ac0a0]",
    "mov     qword [rax], rdx",
    "mov     rdi, r15",
    "mov     qword [rax+0x8], rsi",
    "mov     rsi, rbx",
    "mov     qword [rax+0x10], 0x0",
    "mov     qword [rel data_161a50], rax",
    "call    execute_shell_function",
    "cmp     qword [rel data_161a50], 0x0",
    "mov     r15d, eax",
    "je      0x11938e",
    "mov     dword [r14], r12d",
    "mov     rdi, rbx",
    "lea     rbx, [rel data_122fcf]  {\"COMPREPLY\"}",
    "call    dispose_words",
    "lea     rdi, [rel data_120fff]  {\"COMP_LINE\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_121009]  {\"COMP_POINT\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_121014]  {\"COMP_TYPE\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_12101e]  {\"COMP_KEY\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_121027]  {\"COMP_WORDS\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_121032]  {\"COMP_CWORD\"}",
    "call    unbind_variable_noref",
    "mov     rdi, rbx",
    "call    find_variable",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x119612",
    "xor     r12d, r12d",
    "cmp     r15d, 0x7f",
    "setne   r12b",
    "xor     r13d, r13d",
    "jmp     0x11943e",
    "mov     eax, dword [rax+0x28 {Elf64_Header::section_header_offset.d}]",
    "test    al, 0x44",
    "je      0x1194e0",
    "call    convert_var_to_array",
    "mov     rdi, rax",
    "mov     eax, dword [rax+0x28 {Elf64_Header::section_header_offset.d}]",
    "jmp     0x119426",
    "mov     edx, eax",
    "xor     r13d, r13d",
    "and     dh, 0xef",
    "mov     dword [rdi+0x28 {Elf64_Header::section_header_offset.d}], edx",
    "test    r12d, r12d",
    "jne     0x119470",
    "shr     r12d, 0x9",
    "mov     r14, qword [rdi+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "jne     0x1194d8",
    "mov     rdi, rbx",
    "call    unbind_variable_noref",
    "xor     r13d, r13d",
    "jmp     0x119436",
    "test    r14, r14",
    "je      0x1194d8",
    "test    al, 0x4",
    "je      0x119436",
    "cmp     qword [r14+0x8], 0x0",
    "je      0x119436",
    "mov     edi, 0x10",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x11961f",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r13], 0x0",
    "xor     esi, esi",
    "mov     rdi, r14",
    "mov     qword [r13+0x8], 0x0",
    "call    array_to_argv",
    "movq    xmm0, qword [r14+0x8]",
    "mov     qword [r13], rax",
    "pshufd  xmm0, xmm0, 0xe0",
    "movq    qword [r13+0x8], xmm0",
    "jmp     0x119436"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
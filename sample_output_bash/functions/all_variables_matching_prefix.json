{
  "address": "0x60fa0",
  "rules": [
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "xor     r13d, r13d",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x28",
    "test    rdi, rdi",
    "je      0x60fc9",
    "lea     rax, [rel shell_variables]",
    "lea     rdi, [rel sub_5aa80]",
    "mov     rsi, qword [rax]",
    "call    map_over",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x61180",
    "cmp     byte [rdi], 0x0",
    "jne     0x61128",
    "mov     qword [rbp-0x38], 0x0",
    "jmp     0x6110f",
    "cmp     qword [rax {Elf64_Header::ident.signature[0].q}], 0x0",
    "je      0x6118a",
    "cmp     byte [rdi+0x1], 0x0",
    "mov     r13d, 0x1",
    "je      0x60fc9",
    "mov     rax, qword [rbp-0x38]",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "xor     esi, esi",
    "jmp     0x6100f",
    "mov     eax, 0x1",
    "nop     word [rax+rax]",
    "cmp     byte [rdi+0x2], 0x0",
    "mov     r13d, 0x2",
    "je      0x60fc9",
    "lea     rcx, [rel sub_5acd0]",
    "mov     edx, 0x8",
    "mov     rdi, r15",
    "call    qsort",
    "cmp     qword [r15 {Elf64_Header::ident.signature[0].q}], 0x0",
    "je      0x61180",
    "mov     rsi, rax",
    "add     rax, 0x1",
    "cmp     qword [r15+rax*8-0x8], 0x0",
    "jne     0x61000",
    "call    strlen",
    "mov     r13d, eax",
    "jmp     0x60fc9",
    "mov     eax, 0x1",
    "nop     word [rax+rax]",
    "mov     rdx, rax",
    "add     rax, 0x1",
    "cmp     qword [r15+rax*8-0x8], 0x0",
    "jne     0x61038",
    "lea     ebx, [rdx+0x1]",
    "movsxd  rbx, ebx",
    "shl     rbx, 0x3",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     qword [rbp-0x38], rax",
    "test    rax, rax",
    "je      0x61191",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [r15 {Elf64_Header::ident.signature[0]}] {Elf64_Header::ident.signature[1]} {Elf64_Header::ident.signature[2]} {Elf64_Header::ident.signature[3]} {Elf64_Header::ident.file_class} {Elf64_Header::ident.encoding} {Elf64_Header::ident.version} {Elf64_Header::ident.os}",
    "movsxd  rdx, r13d",
    "lea     r14, [r15+0x8] {Elf64_Header::ident.abi_version}",
    "xor     ebx, ebx",
    "mov     qword [rbp-0x50], rdx",
    "jmp     0x61099",
    "mov     rsi, qword [rax]",
    "test    r13d, r13d",
    "jne     0x61080",
    "movzx   eax, byte [rsi]",
    "cmp     byte [r12], al",
    "je      0x61158",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x48], rsi",
    "call    strlen",
    "lea     rcx, [rax+0x1]",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x40], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x40]",
    "mov     rsi, qword [rbp-0x48]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0x611b8",
    "mov     rdx, qword [rbp-0x50]",
    "mov     rdi, r12",
    "mov     qword [rbp-0x40], rsi",
    "call    strncmp",
    "mov     rsi, qword [rbp-0x40]",
    "test    eax, eax",
    "jne     0x6108d",
    "mov     rax, qword [r14]",
    "add     r14, 0x8 {Elf64_Header::ident.abi_version}",
    "test    rax, rax",
    "je      0x610f8",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "mov     qword [rbp-0x38], rcx",
    "call    dcgettext",
    "mov     rdx, qword [rbp-0x38]",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "lea     eax, [rbx+0x1]",
    "mov     rdx, rcx",
    "add     r14, 0x8 {Elf64_Header::ident.abi_version}",
    "mov     dword [rbp-0x40], eax",
    "call    __memcpy_chk",
    "mov     rdx, qword [rbp-0x38]",
    "mov     qword [rdx+rbx*8], rax",
    "mov     rax, qword [r14-0x8]",
    "movsxd  rbx, dword [rbp-0x40]",
    "test    rax, rax",
    "jne     0x61099",
    "jmp     0x610a1",
    "mov     rax, qword [rbp-0x38]",
    "lea     rax, [rax+rbx*8]",
    "mov     qword [rax], 0x0",
    "mov     rdi, r15",
    "call    free"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
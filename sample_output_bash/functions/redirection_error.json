{
  "address": "0xaa070",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "mov     r13d, esi",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "mov     rbx, rdx",
    "test    byte [rdi+0x10], 0x1",
    "jne     0xaa0e8",
    "test    esi, esi",
    "js      0xaa1a0",
    "movsxd  rdi, dword [rdi+0x8]",
    "test    edi, edi",
    "js      0xaa1e0",
    "mov     rax, qword [rdi+0x8]",
    "mov     r12, qword [rax]",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xaa35a",
    "movsxd  rdi, dword [rdi+0x8]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120fcb]  {\"file descriptor out of range\"}",
    "xor     edi, edi",
    "xor     r14d, r14d",
    "call    dcgettext",
    "mov     rbx, rax",
    "jmp     0xaa10e",
    "cmp     esi, 0xfffffffe",
    "jne     0xaa0f4",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rcx, rbx",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "call    __memcpy_chk",
    "mov     rbx, rax",
    "mov     r14, rax",
    "jmp     0xaa10e",
    "xor     r14d, r14d",
    "test    rbx, rbx",
    "je      0xaa200",
    "cmp     r13d, 0x9",
    "je      0xaa2c0",
    "lea     eax, [r13+0x5]",
    "cmp     r13d, 0xfffffffb",
    "jb      0xaa297",
    "test    edi, edi",
    "js      0xaa102",
    "xor     r14d, r14d",
    "test    rdx, rdx",
    "je      0xaa200",
    "mov     eax, dword [r12+0x18]",
    "cmp     eax, 0x13",
    "ja      0xaa310",
    "mov     eax, dword [r12+0x18]",
    "cmp     eax, 0xe",
    "je      0xaa350",
    "mov     edi, r13d",
    "call    strerror",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    internal_error",
    "jmp     0xaa0cb",
    "lea     rdx, [rel jump_table_136ff4]",
    "movsxd  rax, dword [rdx+rax*4]",
    "add     rax, rdx",
    "jmp     rax",
    "{Case 0x3}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133ac8]  {\"%s: cannot overwrite existing fi\u2026\"}",
    "movsxd  rdi, dword [r12+0x20]",
    "test    edi, edi",
    "js      0xaa1e0",
    "mov     edx, 0xe7c0f",
    "bt      rdx, rax",
    "jae     0xaa310",
    "cmp     edi, 0x1",
    "je      0xaa2de",
    "ja      0xaa280",
    "test    r14, r14",
    "je      0xaa270",
    "{Case 0x2}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133af0]  {\"%s: restricted: cannot redirect \u2026\"}",
    "jmp     0xaa0b7",
    "{Case 0x1}",
    "mov     edi, dword [rel data_168d80]",
    "call    strerror",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133b18]  {\"cannot create temp file for here\u2026\"}",
    "mov     rbx, rax",
    "jmp     0xaa0b7",
    "{Case 0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133b48]  {\"%s: cannot assign fd to variable\"}",
    "jmp     0xaa0b7",
    "{Case 0x4}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120fe8]  {\"%s: ambiguous redirect\"}",
    "jmp     0xaa0b7",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "pop     rbx",
    "mov     rdi, r14",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "jmp     free",
    "call    itos",
    "mov     rbx, rax",
    "mov     r14, rax",
    "jmp     0xaa10e",
    "lea     rax, [rel posixly_correct]",
    "mov     rdi, qword [r12+0x20]",
    "mov     ecx, dword [rax]",
    "mov     ebx, dword [rdi+0x8]",
    "test    ecx, ecx",
    "mov     eax, ebx",
    "je      0xaa244",
    "mov     rax, qword [r12+0x20]",
    "mov     edi, 0x9",
    "mov     rbx, qword [rax]",
    "call    strerror",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "mov     rsi, rbx",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "jmp     internal_error",
    "jmp     0xaa28c",
    "sub     eax, 0xf",
    "cmp     eax, 0x1",
    "jbe     0xaa339",
    "cmp     eax, 0x7",
    "jbe     0xaa330",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "or      ah, 0x4",
    "mov     dword [rdi+0x8], eax",
    "call    redirection_expand",
    "mov     r14, rax",
    "mov     rax, qword [r12+0x20]",
    "mov     dword [rax+0x8], ebx",
    "mov     rbx, r14",
    "test    r14, r14",
    "jne     0xaa10e",
    "lea     rdx, [rel interactive_shell]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "jne     0xaa244",
    "call    itos",
    "mov     rbx, rax",
    "mov     r14, rax",
    "movsxd  rdi, dword [r12+0x20]",
    "call    itos",
    "mov     rbx, rax",
    "mov     r14, rax",
    "jmp     0xaa297",
    "cmp     eax, 0x5",
    "jbe     0xaa28c",
    "cmp     eax, 0xd",
    "jne     0xaa28c",
    "mov     rbx, qword [rax]",
    "jmp     0xaa10e",
    "or      eax, 0x20",
    "test    edi, edi",
    "jne     0xaa28c"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
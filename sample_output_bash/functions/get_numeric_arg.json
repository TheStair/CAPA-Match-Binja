{
  "address": "0xb0850",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "mov     r12d, esi",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "test    rdx, rdx",
    "je      0xb0873",
    "test    rbx, rbx",
    "jne     0xb0890",
    "mov     qword [rdx], 0x1",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "cmp     byte [rdi], 0x2d",
    "je      0xb08f0",
    "add     rsp, 0x8",
    "mov     eax, 0x1",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "cmp     byte [rdi+0x1], 0x2d",
    "jne     0xb089c",
    "mov     rsi, rdx",
    "call    legal_number",
    "test    eax, eax",
    "jne     0xb08e4",
    "cmp     byte [rdi+0x2], 0x0",
    "jne     0xb089c",
    "cmp     qword [rbx], 0x0",
    "je      0xb0878",
    "mov     rax, qword [rbx+0x8]",
    "mov     r13, qword [rax]",
    "test    r13, r13",
    "je      0xb0914",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "je      0xb0878",
    "call    sub_b07f0",
    "{ Does not return }",
    "lea     r13, [rel data_12126b]",
    "jmp     0xb08b4",
    "xor     edi, edi",
    "lea     rsi, [rel data_121092]  {\"%s: numeric argument required\"}",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "test    r12d, r12d",
    "je      0xb0920",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "test    rdi, rdi",
    "jne     0xb089c",
    "add     rsp, 0x8",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "cmp     r12d, 0x1",
    "jne     0xb092d",
    "call    top_level_cleanup",
    "mov     edi, 0x2",
    "call    jump_to_top_level",
    "{ Does not return }",
    "call    throw_to_top_level"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xd9ae0",
  "rules": [
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/4f0637c1ae9b445ca3ec93a4b4e0bb6d",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/bee29d5f30484915bb6e92fdf1038d2c",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/9710d9ee76a4466b954966f2a98c40ba",
    "encrypt data using Curve25519/7d070d905d0942e295bbb2c9df72fc86",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/af1fc90a7adf4a2ea648cfac1c599984",
    "contain loop",
    "encrypt data using RC4 PRGA",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/2602c80a9b3846b9ae92e2e83b13e866"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     r9, rcx",
    "add     rdx, rdi",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rsi",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     rbx, qword [rsi]",
    "mov     r10, qword [r8]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rel locale_mb_cur_max]",
    "mov     qword [rbp-0x40], 0x0",
    "lea     rsi, [rdi+rbx]",
    "lea     r12, [rbx+0x1]",
    "mov     ecx, dword [rax]",
    "movzx   r14d, byte [rsi]",
    "xor     eax, eax",
    "lea     rdi, [r9+r10]",
    "cmp     ecx, 0x1",
    "cmovle  rdx, rax",
    "lea     rax, [r10+0x1]",
    "cmp     r14b, 0x20",
    "je      0xd9be0",
    "mov     byte [rdi], r14b",
    "cmp     r14b, 0x9",
    "je      0xd9be0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     r14b, 0x7f",
    "je      0xd9c58",
    "mov     ebx, 0x3f5e",
    "lea     rax, [r10+0x2]",
    "mov     word [rdi], bx",
    "jmp     0xd9be3",
    "cmp     r14b, 0x1f",
    "ja      0xd9c10",
    "mov     qword [r15], r12",
    "mov     qword [r8], rax",
    "mov     eax, r12d",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xd9d9a",
    "lea     r11, [rel locale_utf8locale]",
    "mov     r11d, dword [r11]",
    "test    r11d, r11d",
    "je      0xd9bc8",
    "mov     byte [rdi], 0x5e",
    "xor     r14d, 0x40",
    "mov     qword [rbp-0x58], r8",
    "movsx   rbx, r14b",
    "mov     qword [rbp-0x50], r9",
    "mov     qword [rbp-0x48], r10",
    "call    __ctype_b_loc",
    "mov     r10, qword [rbp-0x48]",
    "mov     r9, qword [rbp-0x50]",
    "mov     rax, qword [rax]",
    "mov     r8, qword [rbp-0x58]",
    "test    byte [rax+rbx*2+0x1], 0x2",
    "je      0xd9bb7",
    "cmp     ecx, 0x1",
    "jg      0xd9c70",
    "test    r14b, r14b",
    "js      0xd9d18",
    "mov     byte [r9+r10+0x1], r14b",
    "lea     rax, [r10+0x2]",
    "jmp     0xd9be3",
    "call    __ctype_toupper_loc",
    "mov     r8, qword [rbp-0x58]",
    "mov     r9, qword [rbp-0x50]",
    "mov     rax, qword [rax]",
    "mov     r10, qword [rbp-0x48]",
    "movzx   r14d, byte [rax+rbx*4]",
    "mov     ecx, r14d",
    "lea     r11, [rel is_basic_table]",
    "shr     cl, 0x5",
    "and     ecx, 0x7",
    "mov     r11d, dword [r11+rcx*4]",
    "mov     ecx, r14d",
    "shr     r11d, cl",
    "and     r11d, 0x1",
    "jne     0xd9bd1",
    "test    r14b, r14b",
    "js      0xd9cf8",
    "cmp     ecx, 0x1",
    "jle     0xd9be0",
    "cmp     ecx, 0x1",
    "jle     0xd9be0",
    "sub     rdx, rsi",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     qword [rbp-0x58], r8",
    "mov     qword [rbp-0x50], r9",
    "mov     qword [rbp-0x48], r10",
    "call    mbrtowc",
    "mov     r10, qword [rbp-0x48]",
    "mov     r9, qword [rbp-0x50]",
    "lea     rdx, [rax-0x1]",
    "mov     r8, qword [rbp-0x58]",
    "cmp     rdx, 0xfffffffffffffffc",
    "ja      0xd9c4a",
    "mov     eax, 0x2d4d",
    "and     r14d, 0x7f",
    "mov     word [rdi], ax",
    "lea     rax, [r10+0x3]",
    "mov     byte [r9+r10+0x2], r14b",
    "jmp     0xd9be3",
    "nop     word [rax+rax]",
    "mov     eax, r14d",
    "lea     rcx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rcx+rax*4]",
    "mov     ecx, r14d",
    "shr     eax, cl",
    "test    al, 0x1",
    "je      0xd9d68",
    "mov     edx, r14d",
    "lea     rcx, [rel is_basic_table]",
    "shr     dl, 0x5",
    "and     edx, 0x7",
    "mov     edx, dword [rcx+rdx*4]",
    "mov     ecx, r14d",
    "shr     edx, cl",
    "and     edx, 0x1",
    "jne     0xd9be0",
    "mov     eax, 0x1",
    "jmp     0xd9cc4",
    "mov     rcx, r10",
    "lea     r12, [rax+rbx]",
    "sub     rcx, rbx",
    "add     rcx, r9",
    "nop     dword [rax]",
    "sub     rdx, rsi",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     qword [rbp-0x58], r8",
    "mov     qword [rbp-0x50], r9",
    "mov     qword [rbp-0x48], r10",
    "call    mbrtowc",
    "mov     r10, qword [rbp-0x48]",
    "mov     r9, qword [rbp-0x50]",
    "lea     rdx, [rax-0x1]",
    "mov     r8, qword [rbp-0x58]",
    "cmp     rdx, 0xfffffffffffffffc",
    "jbe     0xd9d42",
    "mov     eax, 0x1",
    "add     rbx, 0x1",
    "movzx   edx, byte [r13+rbx-0x1]",
    "mov     byte [rcx+rbx-0x1], dl",
    "cmp     rbx, r12",
    "jne     0xd9cd8",
    "add     rax, r10",
    "jmp     0xd9be3",
    "mov     rcx, r10",
    "lea     r12, [rax+rbx]",
    "sub     rcx, rbx",
    "add     rcx, r9",
    "nop     ",
    "jmp     0xd9d3d",
    "add     rbx, 0x1",
    "movzx   edx, byte [r13+rbx-0x1]",
    "mov     byte [rcx+rbx-0x1], dl",
    "cmp     rbx, r12",
    "jne     0xd9d50",
    "jmp     0xd9ceb"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
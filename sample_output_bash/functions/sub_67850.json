{
  "address": "0x67850",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "mov     r13, rdx",
    "push    r12",
    "mov     r12d, esi",
    "push    rbx",
    "mov     ebx, edi",
    "sub     rsp, 0x18",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x30], 0x0",
    "test    rdx, rdx",
    "je      0x6788b",
    "lea     rax, [rel the_pipeline]",
    "mov     rdx, qword [rax]",
    "mov     rax, rdx",
    "test    rdx, rdx",
    "jne     0x678a8",
    "mov     dword [rdx], 0xffffffff",
    "cmp     ebx, dword [rax+0x8]",
    "jne     0x678a0",
    "jmp     0x678e7",
    "mov     rax, qword [rax]",
    "cmp     rdx, rax",
    "je      0x678df",
    "test    r12d, r12d",
    "je      0x679c0",
    "mov     rcx, qword [rel data_166eb8]",
    "xor     eax, eax",
    "test    rcx, rcx",
    "je      0x67961",
    "mov     qword [rbp-0x30], 0x0",
    "mov     rdx, qword [rbp-0x28]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x679de",
    "cmp     dword [rax+0x10], 0x1",
    "je      0x679c0",
    "lea     rax, [rel procsubs]",
    "mov     eax, dword [rax+0x10]",
    "test    eax, eax",
    "jle     0x67990",
    "nop     dword [rax]",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "cmp     byte [rax+0xc], 0x7f",
    "je      0x679c0",
    "lea     rdx, [rbp-0x30]",
    "mov     esi, r12d",
    "mov     edi, ebx",
    "call    sub_65ff0",
    "test    r13, r13",
    "je      0x679a7",
    "mov     edi, ebx",
    "call    procsub_search",
    "mov     qword [rbp-0x30], rax",
    "test    rax, rax",
    "je      0x67990",
    "mov     rcx, qword [rcx+0x8]",
    "test    rcx, rcx",
    "jne     0x678f8",
    "mov     rax, rdx",
    "jmp     0x67910",
    "mov     rax, qword [rax]",
    "cmp     rdx, rax",
    "je      0x678df",
    "cmp     eax, 0xffffffff",
    "je      0x679da",
    "mov     dword [r13], eax",
    "test    r12d, r12d",
    "je      0x679c0",
    "mov     rdx, qword [rcx]",
    "test    rdx, rdx",
    "je      0x6794c",
    "test    al, al",
    "je      0x67961",
    "cmp     ebx, dword [rax+0x8]",
    "jne     0x67908",
    "cmp     ebx, dword [rax+0x8]",
    "je      0x678b6",
    "xor     eax, eax",
    "jmp     0x679c0",
    "lea     rdx, [rel jobs]",
    "cdqe    ",
    "mov     rdx, qword [rdx]",
    "mov     rax, qword [rdx+rax*8]",
    "mov     rax, qword [rax+0x8]",
    "cmp     dword [rax+0x10], 0x1",
    "je      0x679c0",
    "mov     qword [rbp-0x30], 0x0",
    "mov     rax, qword [rax]",
    "cmp     rdx, rax",
    "je      0x67947",
    "test    r12d, r12d",
    "je      0x679c0",
    "mov     rax, qword [rax]",
    "cmp     rdx, rax",
    "jne     0x678a8",
    "cmp     byte [rax+0xc], 0x7f",
    "je      0x679c0",
    "mov     eax, 0x1",
    "cmp     dword [rax+0x10], 0x1",
    "je      0x679c0",
    "cmp     byte [rax+0xc], 0x7f",
    "je      0x679c0",
    "mov     rax, qword [rax]",
    "cmp     rdx, rax",
    "je      0x67947",
    "cmp     ebx, dword [rax+0x8]",
    "je      0x6791e",
    "mov     rax, qword [rax]",
    "cmp     rdx, rax",
    "jne     0x67910"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
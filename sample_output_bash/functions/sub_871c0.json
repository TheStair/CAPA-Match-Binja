{
  "address": "0x871c0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "contain loop",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018"
  ],
  "disassembly": [
    "test    rdi, rdi",
    "je      0x872a0",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rdi",
    "push    r13",
    "push    r12",
    "mov     r12d, esi",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     ebx, dword [rdi+0x8]",
    "cmp     ebx, esi",
    "je      0x87291",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     dword [rdi+0x8], esi",
    "movsxd  r15, esi",
    "mov     rax, qword [rdi]",
    "shl     r15, 0x3",
    "mov     rdi, r15",
    "mov     qword [rbp-0x38], rax",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x872a1",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r14], r13",
    "test    r12d, r12d",
    "jle     0x87229",
    "test    ebx, ebx",
    "jle     0x8727a",
    "mov     edx, r12d",
    "xor     esi, esi",
    "mov     rdi, r13",
    "shl     rdx, 0x3",
    "call    memset",
    "mov     rdi, qword [rbp-0x38]",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     free",
    "mov     rax, qword [rbp-0x38]",
    "movsxd  rcx, ebx",
    "lea     edi, [r12-0x1]",
    "mov     r8, rax",
    "lea     r9, [rax+rcx*8]",
    "add     r8, 0x8",
    "cmp     r9, r8",
    "jne     0x87240",
    "nop     dword [rax+rax]",
    "mov     rax, qword [r8]",
    "test    rax, rax",
    "je      0x87271",
    "mov     rdx, rax",
    "mov     rax, qword [rax]",
    "mov     ecx, dword [rdx+0x18]",
    "and     ecx, edi",
    "movsxd  rcx, ecx",
    "lea     rcx, [r13+rcx*8]",
    "mov     rsi, qword [rcx]",
    "mov     qword [rdx], rsi",
    "mov     qword [rcx], rdx",
    "test    rax, rax",
    "jne     0x87250"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x49f50",
  "rules": [
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "push    rbp",
    "lea     rcx, [rel data_11f57c[4]]  {\"((\"}",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rdi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel line_number]",
    "test    byte [rel data_1612a8], 0x10",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x4c], eax",
    "lea     rax, [rel this_command_name]",
    "mov     qword [rax], rcx",
    "lea     rcx, [rel line_number]",
    "mov     eax, dword [rdi+0x4]",
    "mov     dword [rcx], eax",
    "lea     rcx, [rel running_trap]",
    "mov     qword [rbp-0x48], rcx",
    "jne     0x49fbc",
    "lea     rdx, [rel variable_context]",
    "mov     r8d, dword [rdx]",
    "test    r8d, r8d",
    "je      0x49fdc",
    "cmp     dword [rcx], 0x43",
    "je      0x49fbc",
    "lea     rax, [rel command_string_index]",
    "mov     r15, qword [r14+0x8]",
    "lea     rdi, [rel data_11f57c[4]]  {\"((\"}",
    "lea     r13, [rel data_11fbd6[2]]  {\"%s%s\"}",
    "lea     r12, [rel data_122e02]",
    "lea     rbx, [rel data_1204ae[4]]  {\" \"}",
    "mov     dword [rax], 0x0",
    "xor     eax, eax",
    "call    sub_473b0",
    "test    r15, r15",
    "je      0x4a03c",
    "lea     rdx, [rel interactive_shell]",
    "mov     edi, dword [rdx]",
    "test    edi, edi",
    "jne     0x4a1f0",
    "lea     rdx, [rel line_number_for_err_trap]",
    "mov     dword [rdx], eax",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f5d4[7]]  {\"))\"}",
    "call    sub_473b0",
    "mov     eax, dword [rel data_1612a4]",
    "mov     rcx, qword [rbp-0x48]",
    "and     eax, 0x10",
    "or      eax, dword [rcx]",
    "jne     0x4a0aa",
    "nop     dword [rax]",
    "lea     rdx, [rel sourcelevel]",
    "mov     esi, dword [rdx]",
    "test    esi, esi",
    "jne     0x49fdc",
    "mov     eax, dword [rel data_1612a4]",
    "and     eax, 0x51",
    "cmp     eax, 0x1",
    "je      0x4a228",
    "lea     r15, [rel the_printed_command_except_trap]",
    "mov     rdi, qword [r15]",
    "test    rdi, rdi",
    "je      0x4a06f",
    "mov     rax, qword [r15+0x8]",
    "cmp     qword [r15], 0x0",
    "mov     rdx, rbx",
    "mov     rdi, r13",
    "cmove   rdx, r12",
    "mov     rsi, qword [rax]",
    "xor     eax, eax",
    "call    sub_473b0",
    "mov     r15, qword [r15]",
    "test    r15, r15",
    "jne     0x4a018",
    "sub     eax, dword [rel data_1619c8]",
    "mov     edx, 0x1",
    "lea     rcx, [rel line_number]",
    "add     eax, 0x1",
    "test    eax, eax",
    "cmovle  eax, edx",
    "mov     dword [rcx], eax",
    "jmp     0x49fdc",
    "call    sub_8f3f0",
    "lea     rdx, [rel debugging_mode]",
    "mov     ecx, dword [rdx]",
    "test    ecx, ecx",
    "je      0x4a0bc",
    "mov     rdi, qword [r14+0x8]",
    "lea     rax, [rel this_command_name]",
    "lea     rcx, [rel data_11f57c[4]]  {\"((\"}",
    "cmp     qword [rdi], 0x0",
    "mov     qword [rax], rcx",
    "je      0x4a1d0",
    "lea     rax, [rel the_printed_command]",
    "mov     rbx, qword [rax]",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x4a25a",
    "call    free",
    "test    eax, eax",
    "je      0x4a0bc",
    "mov     rax, qword [rdi+0x8]",
    "mov     esi, 0x101",
    "mov     rdi, qword [rax]",
    "call    expand_arith_string",
    "mov     rbx, rax",
    "jmp     0x4a107",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "call    string_list_internal",
    "mov     esi, 0x101",
    "mov     rdi, rax",
    "mov     r12, rax",
    "call    expand_arith_string",
    "mov     rbx, rax",
    "test    r12, r12",
    "je      0x4a107",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r13",
    "call    __strcpy_chk",
    "mov     qword [r15], r13",
    "lea     rax, [rel line_number]",
    "mov     ebx, dword [rbp-0x4c]",
    "xor     r12d, r12d",
    "mov     dword [rax], ebx",
    "jmp     0x4a1a8",
    "lea     rax, [rel echo_command_at_execute]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x4a152",
    "mov     rdi, r12",
    "call    free",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x4a270",
    "mov     r12d, 0x1",
    "test    rbx, rbx",
    "je      0x4a1a8",
    "test    rbx, rbx",
    "lea     r12, [rel data_122e02]",
    "cmovne  r12, rbx",
    "mov     rdi, r12",
    "call    make_bare_word",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "call    make_word_flags",
    "xor     esi, esi",
    "mov     rdi, rax",
    "call    make_word_list",
    "mov     r12, rax",
    "mov     rdi, rax",
    "call    xtrace_print_arith_cmd",
    "mov     rdi, r12",
    "call    dispose_words",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "mov     eax, r12d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rax, [rel shell_compatibility_level]",
    "xor     esi, esi",
    "lea     rdx, [rbp-0x3c]",
    "mov     rdi, rbx",
    "cmp     dword [rax], 0x33",
    "setle   sil",
    "call    evalexp",
    "mov     ecx, dword [rbp-0x4c]",
    "mov     rdi, rbx",
    "mov     r13, rax",
    "lea     rax, [rel line_number]",
    "mov     dword [rax], ecx",
    "call    free",
    "mov     eax, dword [rbp-0x3c]",
    "test    eax, eax",
    "je      0x4a1a8",
    "xor     r12d, r12d",
    "test    r13, r13",
    "sete    r12b",
    "nop     dword [rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
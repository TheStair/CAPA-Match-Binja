{
  "address": "0x105a10",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x78",
    "mov     qword [rbp-0x88], rdi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     eax, dword [rel data_166ef4]",
    "test    eax, eax",
    "je      0x105a90",
    "mov     eax, dword [rel data_16b5f8]",
    "test    eax, eax",
    "je      0x105b80",
    "lea     r14, [rel history_length]",
    "lea     rax, [rel history_max_entries]",
    "movsxd  rbx, dword [r14]",
    "mov     edx, dword [rax]",
    "cmp     ebx, edx",
    "je      0x105bd0",
    "lea     r14, [rel history_length]",
    "mov     edx, 0x1f6",
    "mov     r12d, 0xfb0",
    "lea     r14, [rel history_length]",
    "mov     ebx, dword [r14]",
    "test    ebx, ebx",
    "je      0x105b5c",
    "mov     eax, dword [rel data_16b5f8]",
    "test    eax, eax",
    "jne     0x105aa8",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_1688b8], rbx",
    "xor     r15d, r15d",
    "mov     r13d, 0x8",
    "mov     ebx, 0x1",
    "jmp     0x105ac1",
    "add     eax, 0x32",
    "mov     rdi, qword [rel data_1688b8]",
    "mov     dword [rel data_16b5f8], eax",
    "cdqe    ",
    "lea     rbx, [rax*8]",
    "test    rdi, rdi",
    "je      0x105ca0",
    "add     ebx, 0x1",
    "movsxd  r13, ebx",
    "shl     r13, 0x3",
    "lea     r15, [r13-0x8]",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x105cad",
    "mov     rdi, qword [rel data_1688b8]",
    "mov     r12, qword [rdi]",
    "test    r12, r12",
    "je      0x105c12",
    "lea     edx, [rax-0x1]",
    "cmp     edx, ebx",
    "je      0x105c50",
    "test    edx, edx",
    "jle     0x105c40",
    "xor     edi, edi",
    "lea     r12, [rbp-0x80]",
    "call    time",
    "mov     ecx, 0x40",
    "mov     edx, 0x2",
    "mov     rdi, r12",
    "mov     r9, rax",
    "lea     r8, [rel data_122ede]  {\"X%lu\"}",
    "mov     esi, 0x3f",
    "xor     eax, eax",
    "call    __snprintf_chk",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x90], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x90]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x105cb2",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "jmp     0x105c7a",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r12, rax",
    "mov     qword [rbp-0x98], rax",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, rcx",
    "mov     rsi, r12",
    "call    __strcpy_chk",
    "mov     rdi, qword [rbp-0x88]",
    "mov     rsi, rax",
    "lea     rax, [rel history_comment_char]",
    "movzx   eax, byte [rax]",
    "mov     byte [rsi], al",
    "call    alloc_history_entry",
    "mov     dword [r14], ebx",
    "mov     rdx, rax",
    "mov     rax, qword [rel data_1688b8]",
    "mov     qword [rax+r13], 0x0",
    "mov     qword [rax+r15], rdx",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x78",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rdx, [rbx*8]",
    "lea     rsi, [rdi+0x8]",
    "call    memmove",
    "movsxd  r13, dword [r14]",
    "lea     rax, [rel history_base]",
    "mov     rbx, r13",
    "shl     r13, 0x3",
    "add     dword [rax], 0x1",
    "lea     r15, [r13-0x8]",
    "jmp     0x105ac1",
    "mov     rdi, qword [r12]",
    "test    rdi, rdi",
    "je      0x105bf1",
    "mov     edx, 0x1f6",
    "mov     r12d, 0xfb0",
    "jmp     0x105b92",
    "cmp     edx, 0x2000",
    "jg      0x105c90",
    "test    r12, r12",
    "je      0x105cf3",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_1688b8], r12",
    "mov     ebx, dword [r14]",
    "jmp     0x105ab3",
    "mov     rdi, qword [r12+0x8]",
    "test    rdi, rdi",
    "je      0x105c00",
    "call    free",
    "mov     rdi, r12",
    "mov     dword [rel data_16b5f8], edx",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x105cdd",
    "mov     r12d, 0x10000",
    "mov     edx, 0x2000",
    "jmp     0x105b92",
    "add     edx, 0x2",
    "movsxd  r12, edx",
    "shl     r12, 0x3",
    "jmp     0x105b92",
    "mov     rdi, r12",
    "call    free",
    "movsxd  rbx, dword [r14]",
    "mov     rdi, qword [rel data_1688b8]",
    "call    free"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x748b0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "xor     ebx, ebx",
    "sub     rsp, 0x18",
    "lea     r14, [rel dollar_vars]",
    "lea     r15, [r14+0x8]",
    "add     r14, 0x50",
    "jmp     0x74906",
    "mov     rdi, qword [r15]",
    "test    rdi, rdi",
    "je      0x74a08",
    "lea     rax, [rel rest_of_args]",
    "mov     r14, qword [rax]",
    "test    r14, r14",
    "je      0x74a30",
    "call    make_bare_word",
    "lea     r13, [rel wlcache]",
    "mov     rdx, rax",
    "mov     eax, dword [r13+0xc]",
    "test    eax, eax",
    "jg      0x748e0",
    "test    rbx, rbx",
    "je      0x749f1",
    "lea     r13, [rel wlcache]",
    "mov     r12, rbx",
    "jmp     0x7498c",
    "sub     eax, 0x1",
    "mov     rcx, qword [r13]",
    "mov     dword [r13+0xc], eax",
    "cdqe    ",
    "mov     r12, qword [rcx+rax*8]",
    "mov     edi, 0x10",
    "mov     qword [rbp-0x38], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     r12, rax",
    "jne     0x748f1",
    "add     rsp, 0x18",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "jmp     0x749c8",
    "mov     rax, qword [r14+0x8]",
    "mov     rdi, qword [rax]",
    "call    make_bare_word",
    "mov     edx, dword [r13+0xc]",
    "mov     r15, rax",
    "test    edx, edx",
    "jg      0x74968",
    "lea     rax, [rel rest_of_args]",
    "mov     r14, qword [rax]",
    "test    r14, r14",
    "jne     0x7498c",
    "mov     rbx, r12",
    "add     r15, 0x8",
    "mov     qword [r12+0x8], rdx",
    "mov     qword [r12], rbx",
    "cmp     r15, r14",
    "je      0x74950",
    "jmp     0x32131",
    "mov     rax, qword [rbx]",
    "test    rax, rax",
    "je      0x749f1",
    "mov     rax, qword [r13]",
    "sub     edx, 0x1",
    "mov     dword [r13+0xc], edx",
    "movsxd  rdx, edx",
    "mov     rbx, qword [rax+rdx*8]",
    "mov     qword [rbx], r12",
    "mov     r14, qword [r14]",
    "mov     qword [rbx+0x8], r15",
    "test    r14, r14",
    "je      0x749c8",
    "mov     edi, 0x10",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x32156",
    "jmp     0x74a37",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x38], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbx], 0x0",
    "mov     rdx, rbx",
    "mov     rbx, rax",
    "jmp     0x749e3",
    "mov     r12, rbx",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbx], r12",
    "mov     r14, qword [r14]",
    "mov     qword [rbx+0x8], r15",
    "test    r14, r14",
    "jne     0x74989",
    "mov     rbx, r12",
    "jmp     0x749c8",
    "mov     rax, qword [rbx]",
    "mov     qword [rbx], rdx",
    "mov     rdx, rbx",
    "test    rax, rax",
    "jne     0x749e0",
    "mov     rbx, rax"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
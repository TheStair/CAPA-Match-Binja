{
  "address": "0xb7290",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x30",
    "lea     rax, [rel running_trap]",
    "mov     qword [rbp-0x28], rdi",
    "mov     qword [rbp-0x30], rsi",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x34], edx",
    "mov     dword [rbp-0x20], eax",
    "lea     rax, [rel return_catch_flag]",
    "mov     dword [rbp-0x1c], 0x0",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x18], eax",
    "mov     eax, dword [rbp-0x18]",
    "test    eax, eax",
    "jne     0xb7370",
    "lea     rdi, [rel data_121437]  {\"evalstring\"}",
    "call    begin_unwind_frame",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xb74d1",
    "mov     eax, dword [rbp-0x1c]",
    "test    eax, eax",
    "jne     0xb7308",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_161a50]",
    "mov     dword [rbx+0x18], 0x4",
    "mov     edi, 0xe4",
    "mov     qword [rel data_161a50], rbx",
    "mov     qword [rbx], rax",
    "lea     rax, [rel sub_872f0]",
    "mov     qword [rbx+0x8], rax",
    "lea     rax, [rel return_catch_flag]",
    "mov     qword [rbx+0x10], rax",
    "mov     eax, dword [rax]",
    "mov     dword [rbx+0x1c], eax",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xb74e9",
    "mov     edi, dword [rbp-0x20]",
    "call    parse_and_execute_cleanup",
    "lea     rax, [rel return_catch_value]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x14], eax",
    "mov     eax, dword [rbp-0x18]",
    "test    eax, eax",
    "je      0xb72f5",
    "mov     edx, dword [rbp-0x34]",
    "mov     rsi, qword [rbp-0x30]",
    "mov     rdi, qword [rbp-0x28]",
    "call    parse_and_execute",
    "mov     dword [rbp-0x14], eax",
    "mov     eax, dword [rbp-0x18]",
    "test    eax, eax",
    "jne     0xb7323",
    "mov     esi, 0xe4",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rdi, [rel return_catch]",
    "mov     qword [r12], rbx",
    "xor     esi, esi",
    "lea     rax, [rel sub_872f0]",
    "mov     qword [r12+0x8], rax",
    "movdqa  xmm0, xmmword [rdi]",
    "movdqa  xmm1, xmmword [rdi+0x10]",
    "mov     qword [r12+0x10], rdi",
    "movdqa  xmm2, xmmword [rdi+0x20]",
    "movdqa  xmm3, xmmword [rdi+0x30]",
    "mov     dword [r12+0x18], 0xc8",
    "movdqa  xmm4, xmmword [rdi+0x40]",
    "movdqa  xmm5, xmmword [rdi+0x50]",
    "movups  xmmword [r12+0x1c], xmm0",
    "movdqa  xmm6, xmmword [rdi+0x60]",
    "movdqa  xmm7, xmmword [rdi+0x70]",
    "movups  xmmword [r12+0x2c], xmm1",
    "movdqa  xmm0, xmmword [rdi+0x80]",
    "movdqa  xmm1, xmmword [rdi+0x90]",
    "movups  xmmword [r12+0x3c], xmm2",
    "mov     rax, qword [rdi+0xc0]",
    "movdqa  xmm2, xmmword [rdi+0xa0]",
    "movups  xmmword [r12+0x4c], xmm3",
    "movdqa  xmm3, xmmword [rdi+0xb0]",
    "mov     qword [rel data_161a50], r12",
    "mov     qword [r12+0xdc], rax",
    "movups  xmmword [r12+0x5c], xmm4",
    "movups  xmmword [r12+0x6c], xmm5",
    "movups  xmmword [r12+0x7c], xmm6",
    "movups  xmmword [r12+0x8c], xmm7",
    "movups  xmmword [r12+0x9c], xmm0",
    "movups  xmmword [r12+0xac], xmm1",
    "movups  xmmword [r12+0xbc], xmm2",
    "movups  xmmword [r12+0xcc], xmm3",
    "lea     rax, [rel return_catch_flag]",
    "add     dword [rax], 0x1",
    "call    __sigsetjmp",
    "endbr64 ",
    "mov     dword [rbp-0x1c], eax",
    "jmp     0xb72d4",
    "mov     eax, dword [rbp-0x14]",
    "add     rsp, 0x30",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0xb7339",
    "mov     eax, dword [rbp-0x1c]",
    "test    eax, eax",
    "je      0xb72f5",
    "lea     rdi, [rel data_121437]  {\"evalstring\"}",
    "call    sub_113ed0",
    "lea     rax, [rel return_catch_flag]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xb72f5",
    "mov     edx, dword [rbp-0x14]",
    "lea     rax, [rel return_catch_value]",
    "mov     esi, 0x1",
    "lea     rdi, [rel return_catch]",
    "mov     dword [rax], edx",
    "call    __longjmp_chk",
    "{ Does not return }"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
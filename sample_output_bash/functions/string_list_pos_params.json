{
  "address": "0x77380",
  "rules": [
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/85d53756af1244948e9b515ea3abe5ce",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rax, rsi",
    "mov     esi, edx",
    "mov     rbp, rsp",
    "push    r12",
    "push    rbx",
    "cmp     edi, 0x2a",
    "je      0x773b8",
    "test    dl, 0x1",
    "jne     0x77490",
    "and     edx, 0x3",
    "cmp     edi, 0x40",
    "je      0x773f0",
    "mov     rdi, rax",
    "call    sub_77120",
    "mov     r12, rax",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x774c7",
    "test    dl, 0x2",
    "jne     0x77420",
    "test    edx, edx",
    "je      0x774d8",
    "test    edx, edx",
    "jne     0x77410",
    "pop     rbx",
    "mov     rdi, r12",
    "pop     r12",
    "pop     rbp",
    "jmp     sub_118260",
    "nop     dword [rax+rax]",
    "mov     rdi, rax",
    "call    sub_77120",
    "mov     r12, rax",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x77457",
    "test    edx, edx",
    "jne     0x773dc",
    "test    esi, esi",
    "jne     0x773dc",
    "xor     edx, edx",
    "mov     rdi, rax",
    "call    sub_77120",
    "jmp     0x773a1",
    "pop     rbx",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "pop     r12",
    "mov     rdi, rax",
    "pop     rbp",
    "jmp     string_list_internal",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "call    remove_quoted_nulls",
    "mov     rax, qword [rbx+0x8]",
    "mov     rbx, qword [rbx]",
    "and     dword [rax+0x8], 0xfffbffff",
    "test    rbx, rbx",
    "jne     0x774a8",
    "pop     rbx",
    "mov     rdi, r12",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "pop     r12",
    "pop     rbp",
    "jmp     string_list_internal",
    "nop     dword [rax+rax]",
    "pop     rbx",
    "mov     rdi, rax",
    "pop     r12",
    "pop     rbp",
    "jmp     sub_118260",
    "lea     rdx, [rel ifs_is_null]",
    "and     ecx, 0x8",
    "or      ecx, dword [rdx]",
    "jne     0x77470",
    "lea     rdx, [rel ifs_is_null]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "jne     0x773f8",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "call    remove_quoted_nulls",
    "mov     rax, qword [rbx+0x8]",
    "mov     rbx, qword [rbx]",
    "and     dword [rax+0x8], 0xfffbffff",
    "test    rbx, rbx",
    "jne     0x77438",
    "mov     ecx, dword [rel data_1619c4]",
    "test    ecx, ecx",
    "jne     0x773dc",
    "mov     edx, ecx",
    "xor     esi, esi",
    "test    cl, 0x8",
    "je      0x773dc",
    "pop     rbx",
    "xor     edx, edx",
    "pop     r12",
    "xor     esi, esi",
    "mov     rdi, rax",
    "pop     rbp",
    "jmp     string_list_dollar_at",
    "jmp     0x773fa",
    "pop     rbx",
    "mov     rdi, rax",
    "pop     r12",
    "pop     rbp",
    "jmp     string_list_dollar_at"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
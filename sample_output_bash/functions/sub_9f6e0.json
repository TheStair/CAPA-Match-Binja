{
  "address": "0x9f6e0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15d, edi",
    "mov     edi, 0x1",
    "push    r14",
    "push    r13",
    "mov     r13, rcx",
    "push    r12",
    "push    rbx",
    "mov     ebx, edx",
    "sub     rsp, 0x138",
    "mov     dword [rbp-0x154], esi",
    "lea     r14, [rel current_command_line_count]",
    "lea     rcx, [rel saved_command_line_count]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel rl_readline_state]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x148], rax",
    "mov     eax, dword [r14]",
    "mov     dword [rcx], eax",
    "call    rl_newline",
    "lea     rax, [rel rl_explicit_arg]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x9f8c0",
    "lea     r12, [rel history_length]",
    "lea     r15, [rel rl_line_buffer]",
    "lea     rax, [rel history_offset]",
    "add     dword [r14], 0x1",
    "mov     edx, dword [r12]",
    "mov     rdi, qword [r15]",
    "mov     dword [rax], edx",
    "call    bash_add_history",
    "lea     rdi, [rel data_122e02]",
    "mov     dword [r14], 0x0",
    "call    bash_add_history",
    "mov     eax, dword [r12]",
    "lea     rcx, [rel history_offset]",
    "mov     rdi, r13",
    "lea     rdx, [rel history_lines_this_session]",
    "mov     dword [rcx], eax",
    "add     dword [rdx], 0x1",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x9f9dd",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rdx, [rax+0x8]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x150], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x150]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0x9f9bb",
    "mov     qword [rbp-0x150], rax",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, r13",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     r12, rax",
    "jmp     0x9f79f",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r9d, r15d",
    "mov     r8, r13",
    "lea     rcx, [rel data_120c1a]  {\"%s %d\"}",
    "mov     rdi, r12",
    "mov     esi, 0x2",
    "xor     eax, eax",
    "call    __sprintf_chk",
    "lea     r15, [rel rl_line_buffer]",
    "lea     rdi, [rel data_120c20]  {\"input-meta\"}",
    "call    rl_variable_value",
    "mov     dword [rbp-0x150], 0x0",
    "cmp     byte [rax], 0x6f",
    "je      0x9f950",
    "cmp     byte [rax+0x1], 0x6e",
    "jne     0x9f7be",
    "lea     rax, [rel rl_deprep_term_function]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x9f7cf",
    "cmp     byte [rax+0x2], 0x0",
    "sete    al",
    "movzx   eax, al",
    "mov     dword [rbp-0x150], eax",
    "jmp     0x9f7be",
    "call    rl_clear_signals",
    "lea     r13, [rbp-0x140]",
    "mov     rdi, r13",
    "call    save_parser_state",
    "test    ebx, ebx",
    "mov     rdi, r12",
    "mov     edx, 0x4",
    "lea     rax, [rel data_11fe2b[0xa]]  {\"v\"}",
    "lea     rsi, [rel data_120c13]  {\"C-xC-e\"}",
    "cmove   rsi, rax",
    "call    parse_and_execute",
    "mov     rdi, r13",
    "mov     r12d, eax",
    "call    restore_parser_state",
    "cmp     dword [rel data_161060], 0xa",
    "jne     0x9f822",
    "call    rax",
    "lea     rax, [rel rl_prep_term_function]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x9f839",
    "mov     dword [rel data_161060], 0x0",
    "call    rl_set_signals",
    "lea     rax, [rel saved_command_line_count]",
    "lea     rcx, [rel rl_readline_state]",
    "mov     eax, dword [rax]",
    "mov     dword [r14], eax",
    "mov     rax, qword [r15]",
    "mov     byte [rax], 0x0",
    "lea     rax, [rel rl_end]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel rl_point]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel rl_done]",
    "mov     dword [rax], 0x0",
    "movsxd  rax, dword [rbp-0x148]",
    "mov     qword [rcx], rax",
    "test    ebx, ebx",
    "je      0x9f970",
    "mov     edi, dword [rbp-0x150]",
    "call    rax",
    "lea     rax, [rel _rl_keymap]",
    "lea     rdx, [rel vi_insertion_keymap]",
    "mov     qword [rax], rdx",
    "mov     eax, dword [rbp-0x154]",
    "mov     dword [rel data_168a0c], eax",
    "lea     rax, [rel _rl_show_mode_in_prompt]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x9f890",
    "call    rl_forced_update_display",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x9f9d8",
    "lea     rax, [rel rl_prompt]",
    "mov     rdi, qword [rax]",
    "call    rl_expand_prompt",
    "lea     rdx, [rel rl_visible_prompt_length]",
    "mov     dword [rdx], eax",
    "jmp     0x9f890",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x138",
    "mov     eax, r12d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    "
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
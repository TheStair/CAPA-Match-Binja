{
  "address": "0x6f5f0",
  "rules": [
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/4f0637c1ae9b445ca3ec93a4b4e0bb6d",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/bee29d5f30484915bb6e92fdf1038d2c",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/9710d9ee76a4466b954966f2a98c40ba",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/af1fc90a7adf4a2ea648cfac1c599984",
    "contain loop",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/2602c80a9b3846b9ae92e2e83b13e866"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "movsxd  rdx, edx",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rsi",
    "lea     rsi, [rdi+rdx]",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdx",
    "sub     rsp, 0x38",
    "mov     dword [rbp-0x54], ecx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "movsx   eax, byte [rsi]",
    "mov     qword [rbp-0x40], 0x0",
    "test    eax, eax",
    "je      0x6f702",
    "mov     eax, ebx",
    "jmp     0x6f675",
    "mov     r12, rdi",
    "mov     ecx, eax",
    "xor     r14d, r14d",
    "xor     r15d, r15d",
    "nop     word [rax+rax]",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x6f874",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jle     0x6f758",
    "cmp     eax, 0x5c",
    "je      0x6f7a0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "add     ebx, 0x1",
    "jmp     0x6f6eb",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x6f710",
    "add     ebx, 0x1",
    "mov     r15d, 0x1",
    "jmp     0x6f6ee",
    "test    r14d, r14d",
    "jne     0x6f760",
    "xor     r15d, r15d",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6f726",
    "add     ebx, eax",
    "movsxd  rdx, ebx",
    "lea     rsi, [r12+rdx]",
    "movsx   eax, byte [rsi]",
    "mov     ecx, eax",
    "test    eax, eax",
    "jne     0x6f648",
    "xor     r14d, r14d",
    "cmp     eax, 0x60",
    "lea     rax, [rel locale_mb_cur_max]",
    "setne   r14b",
    "cmp     dword [rax], 0x1",
    "jle     0x6f7b8",
    "cmp     eax, 0x60",
    "je      0x6f850",
    "test    r15d, r15d",
    "jne     0x6f6c0",
    "mov     rax, r13",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     r15, qword [rbp-0x40]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x6f750",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x6f6e9",
    "add     ebx, 0x1",
    "jmp     0x6f6ee",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x6f7c0",
    "add     ebx, 0x1",
    "mov     r14d, 0x1",
    "jmp     0x6f6ee",
    "cmp     eax, 0x24",
    "je      0x6f6a0",
    "test    rax, rax",
    "jne     0x6f6e9",
    "mov     qword [rbp-0x40], r15",
    "add     ebx, 0x1",
    "jmp     0x6f6eb",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x6f7d6",
    "add     ebx, eax",
    "jmp     0x6f6ee",
    "movzx   eax, byte [r12+rdx+0x1]",
    "cmp     al, 0x28",
    "je      0x6f810",
    "cmp     eax, 0x22",
    "jne     0x6f6c0",
    "nop     dword [rax]",
    "mov     rax, qword [rbp-0x40]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     qword [rbp-0x60], rax",
    "mov     rax, r13",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x6f7b0",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x6f78f",
    "add     ebx, 0x2",
    "mov     dword [rbp-0x44], ebx",
    "cmp     al, 0x28",
    "je      0x6f860",
    "cmp     al, 0x7b",
    "je      0x6f810",
    "lea     eax, [rbx+0x1]",
    "test    rax, rax",
    "jne     0x6f78f",
    "mov     rax, qword [rbp-0x60]",
    "add     ebx, 0x1",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x6f6ee",
    "mov     edx, dword [rbp-0x54]",
    "lea     rsi, [rbp-0x44]",
    "mov     rdi, r12",
    "or      edx, 0x1",
    "call    extract_command_subst",
    "jmp     0x6f830",
    "lea     rsi, [rbp-0x44]",
    "mov     ecx, 0x1",
    "mov     edx, 0x1",
    "mov     rdi, r12",
    "call    sub_6daa0",
    "nop     word [rax+rax]",
    "nop     dword [rax]",
    "movsxd  rax, dword [rbp-0x44]",
    "mov     rbx, rax",
    "cmp     rax, r13",
    "jb      0x6f758",
    "mov     eax, r13d",
    "jmp     0x6f675"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
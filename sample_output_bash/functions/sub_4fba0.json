{
  "address": "0x4fba0",
  "rules": [
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rdi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     ebx, dword [rdi]",
    "mov     edx, dword [rdi+0x8]",
    "mov     r12d, ebx",
    "and     r12d, 0x4",
    "and     ebx, 0x8",
    "je      0x4fc00",
    "cmp     edx, 0x6",
    "ja      0x500c8",
    "mov     r13, qword [rdi+0x18]",
    "test    r13, r13",
    "je      0x4fbd7",
    "{Case 0x0, 0x5}",
    "xor     ecx, ecx",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11fe0c]  {\"execute_cond_node\"}",
    "call    command_error",
    "{ Does not return }",
    "lea     rcx, [rel jump_table_1367fc]",
    "mov     eax, edx",
    "movsxd  rax, dword [rcx+rax*4]",
    "add     rax, rcx",
    "jmp     rax",
    "mov     rax, qword [r14+0x20]",
    "test    rax, rax",
    "je      0x4fbe3",
    "or      dword [r13], 0x8",
    "{Case 0x6}",
    "mov     r13, qword [rdi+0x18]",
    "{Case 0x4}",
    "mov     r13, qword [rdi+0x18]",
    "{Case 0x2}",
    "mov     r13, qword [rdi+0x18]",
    "{Case 0x1}",
    "mov     r13, qword [rdi+0x18]",
    "{Case 0x3}",
    "mov     rax, qword [r14+0x10]",
    "mov     r13, qword [rdi+0x18]",
    "mov     rax, qword [rax]",
    "mov     rdi, qword [r13+0x10]",
    "cmp     byte [rax], 0x2d",
    "je      0x50128",
    "cmp     edx, 0x6",
    "ja      0x500c8",
    "or      dword [rax], 0x8",
    "add     rsp, 0x18",
    "mov     eax, r15d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    r15d, r15d",
    "sete    r15b",
    "movzx   r15d, r15b",
    "cmp     byte [r15+0x2], 0x0",
    "je      0x500e0",
    "cmp     al, 0x3d",
    "jne     0x4fe03",
    "test    r12d, r12d",
    "je      0x4fc3f",
    "mov     rdi, qword [r14+0x20]",
    "call    sub_4fba0",
    "mov     r15d, eax",
    "jmp     0x4fc2f",
    "jmp     0x4fcf7",
    "cmp     byte [rax+0x1], 0x76",
    "jne     0x501e0",
    "xor     esi, esi",
    "call    cond_expand_word",
    "xor     r9d, r9d",
    "mov     r13, rax",
    "jmp     0x4fd62",
    "lea     rcx, [rel jump_table_1367e0]",
    "mov     eax, edx",
    "movsxd  rax, dword [rcx+rax*4]",
    "add     rax, rcx",
    "jmp     rax",
    "cmp     al, 0x21",
    "je      0x500f0",
    "cmp     al, 0x2d",
    "jne     0x4ff70",
    "test    dl, dl",
    "je      0x500f0",
    "mov     rdi, qword [r13+0x10]",
    "jmp     0x4fde0",
    "cmp     byte [rax+0x2], 0x0",
    "jne     0x501e0",
    "test    r13, r13",
    "je      0x500b8",
    "{Case 0x6}",
    "mov     rdi, r13",
    "call    sub_4fba0",
    "mov     r15d, eax",
    "{Case 0x4}",
    "mov     rax, qword [r14+0x10]",
    "mov     r15, qword [rax]",
    "movzx   edx, byte [r15+0x1]",
    "movzx   eax, byte [r15]",
    "cmp     dl, 0x3d",
    "je      0x4fdf8",
    "{Case 0x2}",
    "mov     rdi, r13",
    "call    sub_4fba0",
    "mov     r15d, eax",
    "test    eax, eax",
    "je      0x4fc2f",
    "{Case 0x1}",
    "mov     rdi, r13",
    "call    sub_4fba0",
    "mov     r15d, eax",
    "test    eax, eax",
    "jne     0x4fc2f",
    "{Case 0x3}",
    "mov     rax, qword [r14+0x10]",
    "lea     r15, [rel comsub_ignore_return]",
    "mov     rdi, qword [r13+0x10]",
    "mov     rax, qword [rax]",
    "add     dword [r15], 0x1",
    "cmp     byte [rax], 0x2d",
    "je      0x501a0",
    "test    ebx, ebx",
    "je      0x501f0",
    "cmp     al, 0x3d",
    "jne     0x4fe03",
    "xor     ecx, ecx",
    "lea     rsi, [rel data_11fdf4]",
    "mov     rdi, r15",
    "call    strcmp",
    "test    eax, eax",
    "jne     0x4fef8",
    "cmp     al, 0x3d",
    "jne     0x4fe03",
    "mov     rax, qword [r13+0x10]",
    "xor     edx, edx",
    "mov     esi, 0x1",
    "xor     r15d, r15d",
    "mov     rdi, qword [rax]",
    "call    tokenize_array_reference",
    "mov     esi, 0x3",
    "test    eax, eax",
    "mov     rax, qword [r14+0x18]",
    "setne   r15b",
    "mov     rdi, qword [rax+0x10]",
    "lea     r9d, [r15*8]",
    "mov     dword [rbp-0x38], r9d",
    "call    cond_expand_word",
    "test    ebx, ebx",
    "mov     r9d, dword [rbp-0x38]",
    "mov     ebx, 0x1",
    "mov     r13, rax",
    "je      0x4fd62",
    "lea     r13, [rel data_122e02]",
    "mov     qword [rbp-0x38], r13",
    "jmp     0x4fd76",
    "lea     rax, [rel data_122e02]",
    "mov     qword [rbp-0x38], rax",
    "cmp     byte [rax+0x1], 0x76",
    "jne     0x501b0",
    "xor     esi, esi",
    "xor     ebx, ebx",
    "call    cond_expand_word",
    "xor     r9d, r9d",
    "mov     r13, rax",
    "xor     esi, esi",
    "mov     r15d, 0x1",
    "jmp     0x4fff3",
    "lea     r15, [rel comsub_ignore_return]",
    "mov     dword [rbp-0x40], 0x1",
    "xor     ebx, ebx",
    "xor     esi, esi",
    "mov     eax, dword [r15]",
    "add     eax, 0x1",
    "jmp     0x4fe45",
    "nop     dword [rax]",
    "xor     r15d, r15d",
    "xor     esi, esi",
    "mov     ebx, ecx",
    "jmp     0x4fff3",
    "lea     r15, [rel comsub_ignore_return]",
    "mov     dword [rbp-0x40], 0x0",
    "mov     ebx, ecx",
    "xor     esi, esi",
    "mov     eax, dword [r15]",
    "add     eax, 0x1",
    "jmp     0x4fe45",
    "lea     rsi, [rel data_11fdf8]",
    "mov     rdi, r15",
    "call    strcmp",
    "test    eax, eax",
    "je      0x4fe22",
    "test    ebx, ebx",
    "je      0x4ffe8",
    "cmp     dl, 0x7e",
    "jne     0x4ff70",
    "lea     r15, [rel comsub_ignore_return]",
    "jmp     0x4fd5e",
    "lea     rax, [rel echo_command_at_execute]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x50090",
    "mov     rdx, qword [r14+0x10]",
    "mov     edi, dword [r14+0x8]",
    "xor     r8d, r8d",
    "mov     rcx, r13",
    "mov     esi, r12d",
    "mov     dword [rbp-0x40], r9d",
    "call    xtrace_print_cond_term",
    "mov     r9d, dword [rbp-0x40]",
    "jmp     0x4fd87",
    "mov     rax, qword [r14+0x10]",
    "mov     rdi, qword [rax]",
    "test    ebx, ebx",
    "jne     0x50030",
    "mov     rdi, qword [r13+0x10]",
    "jmp     0x4fd4f",
    "cmp     byte [rax+0x2], 0x0",
    "je      0x5013c",
    "mov     rdi, qword [r13+0x10]",
    "call    cond_expand_word",
    "mov     r13, rax",
    "lea     rax, [rel data_122e02]",
    "mov     qword [rbp-0x38], rax",
    "test    r13, r13",
    "je      0x501d0",
    "mov     rdi, qword [r13+0x10]",
    "mov     dword [r15], eax",
    "call    cond_expand_word",
    "mov     r13, rax",
    "lea     rax, [rel data_122e02]",
    "mov     qword [rbp-0x38], rax",
    "test    r13, r13",
    "je      0x501c0",
    "lea     rsi, [rel data_11fdfc]",
    "mov     rdi, r15",
    "call    strcmp",
    "test    eax, eax",
    "je      0x4fe22",
    "mov     r15d, 0x3",
    "mov     esi, 0x3",
    "lea     r15, [rel comsub_ignore_return]",
    "mov     dword [rbp-0x40], 0x3",
    "xor     ebx, ebx",
    "mov     esi, 0x3",
    "mov     eax, dword [r15]",
    "add     eax, 0x1",
    "cmp     byte [r15+0x2], 0x0",
    "jne     0x4ff70",
    "sub     dword [r15], 0x1",
    "lea     rax, [rel shell_compatibility_level]",
    "lea     rbx, [rel assoc_expand_once]",
    "cmp     dword [rax], 0x33",
    "mov     r14d, dword [rbx]",
    "jle     0x5004c",
    "mov     edx, r9d",
    "mov     rsi, r13",
    "xor     r15d, r15d",
    "call    unary_test",
    "test    eax, eax",
    "sete    r15b",
    "nop     dword [rax]",
    "mov     r13, rax",
    "jmp     0x50013",
    "mov     rax, qword [r14+0x20]",
    "mov     esi, r15d",
    "mov     rdi, qword [rax+0x10]",
    "call    cond_expand_word",
    "mov     r8, rax",
    "jmp     0x4fe7f",
    "mov     r13, rax",
    "jmp     0x4fe68",
    "mov     rax, qword [r14+0x20]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rdi, qword [rax+0x10]",
    "call    cond_expand_word",
    "sub     dword [r15], 0x1",
    "mov     r8, rax",
    "lea     rsi, [rel data_11fe00]",
    "mov     rdi, r15",
    "call    strcmp",
    "test    eax, eax",
    "je      0x4fe22",
    "lea     rax, [rel shell_compatibility_level]",
    "mov     ecx, 0x1",
    "cmp     dword [rax], 0x1f",
    "jle     0x4ff72",
    "mov     edx, r9d",
    "mov     rsi, r13",
    "xor     r15d, r15d",
    "call    unary_test",
    "mov     dword [rbx], r14d",
    "test    eax, eax",
    "sete    r15b",
    "jmp     0x4fdaa",
    "mov     dword [rbx], 0x0",
    "mov     rdi, r13",
    "call    free",
    "jmp     0x4fc2f",
    "lea     rax, [rel data_122e02]",
    "test    r8, r8",
    "cmove   r8, rax",
    "lea     rax, [rel echo_command_at_execute]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x50070",
    "mov     rdx, qword [r14+0x10]",
    "mov     edi, dword [r14+0x8]",
    "mov     rcx, r13",
    "mov     esi, r12d",
    "mov     qword [rbp-0x40], r8",
    "call    xtrace_print_cond_term",
    "mov     r8, qword [rbp-0x40]",
    "jmp     0x4fe9e",
    "test    ebx, ebx",
    "je      0x4ffa0",
    "lea     rsi, [rel data_11fe04]",
    "mov     rdi, r15",
    "call    strcmp",
    "test    eax, eax",
    "je      0x4fe22",
    "test    ebx, ebx",
    "je      0x50118",
    "test    ebx, ebx",
    "je      0x501fd",
    "mov     rax, qword [rbp-0x38]",
    "cmp     r13, rax",
    "je      0x4fc2f",
    "mov     rax, qword [r14+0x10]",
    "mov     rdx, r8",
    "mov     ecx, 0x7",
    "mov     rsi, r13",
    "lea     rbx, [rel extended_glob]",
    "mov     qword [rbp-0x40], r8",
    "xor     r15d, r15d",
    "mov     rdi, qword [rax]",
    "mov     dword [rbx], 0x1",
    "call    binary_test",
    "mov     r8, qword [rbp-0x40]",
    "test    eax, eax",
    "lea     rax, [rel extglob_flag]",
    "sete    r15b",
    "mov     eax, dword [rax]",
    "mov     dword [rbx], eax",
    "jmp     0x4fec1",
    "mov     rsi, r8",
    "mov     edx, 0x3",
    "mov     rdi, r13",
    "mov     qword [rbp-0x40], r8",
    "call    sh_regmatch",
    "mov     r8, qword [rbp-0x40]",
    "mov     r15d, eax",
    "lea     rsi, [rel data_11fe08]",
    "mov     rdi, r15",
    "call    strcmp",
    "test    eax, eax",
    "je      0x4fe22",
    "xor     esi, esi",
    "mov     ebx, 0x1",
    "mov     r15d, 0x2",
    "jmp     0x4fff3",
    "lea     r15, [rel comsub_ignore_return]",
    "mov     dword [rbp-0x40], 0x2",
    "mov     ebx, 0x1",
    "xor     esi, esi",
    "mov     eax, dword [r15]",
    "add     eax, 0x1",
    "jmp     0x4fe45",
    "mov     rax, qword [rbp-0x38]",
    "cmp     r13, rax",
    "je      0x4feda",
    "mov     rax, qword [rbp-0x38]",
    "cmp     r8, rax",
    "je      0x4fc2f",
    "mov     rdi, r13",
    "mov     qword [rbp-0x40], r8",
    "call    free",
    "mov     r8, qword [rbp-0x40]",
    "nop     dword [rax+rax]",
    "mov     rdi, r8",
    "call    free",
    "jmp     0x4fc2f"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x91d90",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "test    rdi, rdi",
    "je      0x91f71",
    "mov     eax, 0xffffffff",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "mov     r12, rsi",
    "mov     rsi, rdx",
    "push    rbx",
    "mov     rdi, r12",
    "call    array_create_element",
    "mov     r14, rax",
    "cmp     qword [r13], r12",
    "jl      0x91ef0",
    "mov     rax, qword [r13+0x10]",
    "mov     rdx, qword [rax+0x18]",
    "mov     qword [rdx+0x10], r14",
    "mov     qword [r14+0x18], rdx",
    "mov     qword [rax+0x18], r14",
    "mov     qword [r14+0x10], rax",
    "add     qword [r13+0x8], 0x1",
    "mov     qword [r13], r12",
    "jmp     0x91ed8",
    "mov     rdx, qword [r13+0x10]",
    "mov     rbx, qword [rdx+0x10]",
    "mov     rax, qword [rbx]",
    "cmp     rax, r12",
    "jg      0x91eb8",
    "mov     qword [r13+0x18], r14",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "movq    xmm0, rbx",
    "movq    xmm1, rdx",
    "mov     qword [rbx+0x18], r14",
    "punpcklqdq xmm0, xmm1",
    "movups  xmmword [r14+0x10], xmm0",
    "mov     qword [rdx+0x10], r14",
    "add     qword [r13+0x8], 0x1",
    "mov     rsi, qword [r13+0x18]",
    "test    rsi, rsi",
    "je      0x91f40",
    "mov     rsi, rbx",
    "jmp     0x91dea",
    "mov     rax, qword [rsi]",
    "mov     rcx, rax",
    "mov     edi, 0x1",
    "shr     rcx, 0x3f",
    "add     rcx, rax",
    "sar     rcx, 0x1",
    "cmp     rcx, r12",
    "jg      0x91e11",
    "cmp     rdx, rbx",
    "je      0x91e4e",
    "xor     edi, edi",
    "cmp     r12, rax",
    "mov     rbx, rsi",
    "setge   dil",
    "lea     edi, [rdi+rdi-0x1]",
    "test    r14, r14",
    "je      0x91e69",
    "mov     rax, qword [rbx]",
    "cmp     rax, r12",
    "je      0x91f18",
    "mov     qword [r13+0x18], 0x0",
    "mov     eax, 0xffffffff",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     rdi, qword [r14+0x8]",
    "test    rdi, rdi",
    "je      0x91e61",
    "mov     rdi, qword [rbx+0x8]",
    "call    free",
    "mov     rax, qword [r14+0x8]",
    "mov     rdi, r14",
    "mov     r14, rbx",
    "mov     qword [rbx+0x8], rax",
    "call    free",
    "jmp     0x91ed8",
    "cmp     edi, 0x1",
    "jne     0x91e3c",
    "mov     rdi, r14",
    "call    free",
    "call    free",
    "cmp     r12, rax",
    "jg      0x91f48",
    "jmp     0x91e95",
    "mov     rax, qword [rbx+0x10]",
    "movq    xmm2, rbx",
    "movq    xmm0, rax",
    "mov     qword [rax+0x18], r14",
    "punpcklqdq xmm0, xmm2",
    "movups  xmmword [r14+0x10], xmm0",
    "mov     qword [rbx+0x10], r14",
    "add     qword [r13+0x8], 0x1",
    "jmp     0x91ed8",
    "mov     rbx, qword [rbx+0x18]",
    "cmp     rdx, rbx",
    "jne     0x91e30",
    "cmp     r12, rax",
    "jge     0x91e80",
    "mov     rax, qword [rbx]",
    "cmp     r12, rax",
    "je      0x91f18",
    "mov     rbx, qword [rbx+0x10]",
    "cmp     rdx, rbx",
    "je      0x91e4e",
    "mov     rax, qword [rbx+0x18]",
    "mov     qword [rax+0x10], r14",
    "mov     qword [r14+0x18], rax",
    "mov     qword [rbx+0x18], r14",
    "mov     qword [r14+0x10], rbx",
    "add     qword [r13+0x8], 0x1",
    "jmp     0x91ed8",
    "mov     rax, qword [rbx]",
    "cmp     r12, rax",
    "je      0x91f18"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
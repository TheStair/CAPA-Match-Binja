{
  "address": "0xdc760",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     qword [rbp-0x48], rsi",
    "test    rdi, rdi",
    "je      0xdc8e0",
    "test    rsi, rsi",
    "je      0xdc902",
    "mov     rax, qword [rbp-0x48]",
    "mov     r13d, dword [rdi+0xc]",
    "mov     r12, rdi",
    "test    rax, rax",
    "je      0xdc8c0",
    "mov     edi, 0x1",
    "call    strlist_create",
    "mov     rbx, rax",
    "mov     rax, qword [rbp-0x48]",
    "xor     r14d, r14d",
    "mov     eax, dword [rax+0xc]",
    "lea     edi, [rax+0x1]",
    "mov     dword [rbp-0x4c], eax",
    "call    strlist_create",
    "mov     rbx, rax",
    "jmp     0xdc823",
    "lea     edi, [r13+0x1]",
    "call    strlist_create",
    "mov     dword [rbp-0x4c], 0x0",
    "mov     rbx, rax",
    "test    r13d, r13d",
    "jg      0xdc7b2",
    "mov     eax, dword [rax+0xc]",
    "lea     edi, [r13+rax+0x1]",
    "mov     dword [rbp-0x4c], eax",
    "call    strlist_create",
    "mov     rbx, rax",
    "test    r13d, r13d",
    "jle     0xdc950",
    "mov     dword [rbx+0xc], r14d",
    "mov     qword [rax], 0x0",
    "add     rsp, 0x28",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     eax, dword [rbp-0x4c]",
    "test    eax, eax",
    "jle     0xdc917",
    "mov     r14, qword [r12]",
    "xor     r15d, r15d",
    "jmp     0xdc7c3",
    "jmp     0xdc90f",
    "xor     r14d, r14d",
    "jmp     0xdc823",
    "mov     rdx, qword [rbx]",
    "movsxd  rax, r14d",
    "lea     rax, [rdx+rax*8]",
    "jmp     0xdc8a3",
    "add     eax, r14d",
    "movsxd  r13, r14d",
    "mov     dword [rbp-0x38], eax",
    "mov     rax, qword [rbp-0x48]",
    "shl     r13, 0x3",
    "mov     r15, qword [rax]",
    "sub     r15, r13",
    "nop     dword [rax]",
    "mov     rsi, qword [r14+r15*8]",
    "lea     r12, [r15*8]",
    "test    rsi, rsi",
    "je      0xdc80f",
    "mov     rax, qword [rbx]",
    "xor     r14d, r14d",
    "jmp     0xdc8a3",
    "mov     rax, qword [rbx]",
    "add     r14d, 0x1",
    "mov     qword [rax+r13], r12",
    "add     r13, 0x8",
    "cmp     dword [rbp-0x38], r14d",
    "jne     0xdc848",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rcx, [rax+0x1]",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x40], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x40]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0xdc926",
    "mov     rax, qword [rbx]",
    "mov     qword [rax+r12], rsi",
    "lea     rax, [r15+0x1]",
    "cmp     r13d, eax",
    "jg      0xdc7c0",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x40], rsi",
    "call    strlen",
    "lea     rcx, [rax+0x1]",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x38], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x38]",
    "mov     rsi, qword [rbp-0x40]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0xdc92a",
    "mov     r12, qword [r15+r13]",
    "test    r12, r12",
    "je      0xdc887",
    "movsxd  rdx, r14d",
    "lea     rax, [rax+rdx*8]",
    "mov     qword [rbp-0x38], rcx",
    "mov     rsi, r12",
    "mov     rdx, rcx",
    "call    __memcpy_chk",
    "mov     r12, rax",
    "mov     r15, rax",
    "lea     r14d, [r15+0x1]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "call    dcgettext",
    "mov     rdx, qword [rbp-0x38]",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     rdx, rcx",
    "call    __memcpy_chk",
    "mov     rsi, rax"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
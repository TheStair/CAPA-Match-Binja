{
  "address": "0xbd320",
  "rules": [
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249"
  ],
  "disassembly": [
    "push    rbp {__saved_rbp}",
    "lea     rax, [rel trap_list]",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r14 {__saved_r14}",
    "movsxd  r14, edi",
    "push    r13 {__saved_r13}",
    "mov     r13, r14",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "mov     rbx, qword [rax+r14*8]",
    "lea     rax, [rel data_1611a0]",
    "mov     r12d, dword [rax+r14*4]",
    "and     r12d, 0x2",
    "test    rbx, rbx",
    "je      0xbd4d0",
    "test    r12d, r12d",
    "jne     0xbd4f0",
    "test    r12d, r12d",
    "jne     0xbd363",
    "mov     r12d, 0x1",
    "jmp     0xbd36b",
    "lea     rbx, [rel data_121854]  {\"-\"}",
    "test    esi, esi",
    "jne     0xbd36b",
    "mov     r12d, 0x1",
    "xor     ebx, ebx  {0x0}",
    "cmp     rbx, 0x1",
    "jne     0xbd4b0",
    "cmp     r13d, 0x43",
    "ja      0xbd3d0",
    "jmp     0xbd4a3",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1204c4]  {\"invalid signal number\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     r14, rax",
    "movzx   eax, byte [r14]",
    "cmp     al, 0x53",
    "jne     0xbd389",
    "lea     rax, [rel signal_names]",
    "mov     r14, qword [rax+r14*8]",
    "test    r14, r14",
    "je      0xbd3d0",
    "mov     rdi, rbx",
    "mov     r12d, 0x1",
    "call    sh_single_quote",
    "mov     rbx, rax",
    "jmp     0xbd36b",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "cmp     al, 0x75",
    "je      0xbd460",
    "mov     edx, 0x7",
    "lea     rsi, [rel data_121279]  {\"SIGJUNK\"}",
    "mov     rdi, r14",
    "call    strncmp",
    "test    eax, eax",
    "je      0xbd47c",
    "movzx   eax, byte [r14]",
    "cmp     al, 0x53",
    "je      0xbd3ee",
    "mov     edx, 0x7",
    "lea     rsi, [rel data_1216a5]  {\"unknown\"}",
    "mov     rdi, r14",
    "call    strncmp",
    "test    eax, eax",
    "jne     0xbd391",
    "mov     rcx, r14",
    "test    rbx, rbx",
    "je      0xbd43a",
    "mov     ecx, r13d",
    "test    rbx, rbx",
    "je      0xbd500",
    "lea     rax, [rel posixly_correct]",
    "mov     eax, dword [rax]  {posixly_correct}",
    "test    eax, eax",
    "je      0xbd391",
    "pop     rbx {__saved_rbx}",
    "lea     rdx, [rel data_11fb02]",
    "pop     r12 {__saved_r12}",
    "mov     edi, 0x2",
    "pop     r13 {__saved_r13}",
    "lea     rsi, [rel data_1216bc]  {\"trap -- %s %s\\n\"}",
    "pop     r14 {__saved_r14}",
    "xor     eax, eax  {0x0}",
    "pop     rbp {__saved_rbp}",
    "jmp     __printf_chk",
    "xor     eax, eax  {0x0}",
    "mov     rdx, rbx",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_1216bc]  {\"trap -- %s %s\\n\"}",
    "call    __printf_chk",
    "test    r12d, r12d",
    "je      0xbd4a3",
    "pop     rbx {__saved_rbx}",
    "lea     rdx, [rel data_11fb02]",
    "pop     r12 {__saved_r12}",
    "mov     edi, 0x2",
    "pop     r13 {__saved_r13}",
    "lea     rsi, [rel data_1216ad]  {\"trap -- %s %d\\n\"}",
    "pop     r14 {__saved_r14}",
    "xor     eax, eax  {0x0}",
    "pop     rbp {__saved_rbp}",
    "jmp     __printf_chk",
    "xor     eax, eax  {0x0}",
    "mov     rdx, rbx",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_1216ad]  {\"trap -- %s %d\\n\"}",
    "call    __printf_chk",
    "test    r12d, r12d",
    "jne     0xbd3bc",
    "cmp     byte [r14+0x1], 0x49",
    "jne     0xbd391",
    "mov     rdi, rbx",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     rbp {__saved_rbp}",
    "jmp     free",
    "cmp     byte [r14+0x2], 0x47",
    "jne     0xbd391",
    "lea     rcx, [r14+0x3]",
    "test    rbx, rbx",
    "jne     0xbd39d"
  ],
  "high level IL": [
    "int64_t r14 = sx.q(arg1)",
    "int32_t r13 = r14.d",
    "char* rbx = (&trap_list)[r14]",
    "int32_t r12_1 = (&data_1611a0)[r14] & 2",
    "if (rbx != 0)",
    "if (r12_1 != 0 || rbx == 1)",
    "r12_1 = 1",
    "rbx = nullptr",
    "r12_1 = 1",
    "rbx = sh_single_quote(rbx)",
    "goto label_bd36f",
    "if (r12_1 == 0)",
    "rbx = \"-\"",
    "if (arg2 != 0)",
    "goto label_bd36f",
    "return ",
    "r12_1 = 1",
    "label_bd36f:",
    "char* r14_1",
    "if (r13 u<= 0x43)",
    "r14_1 = (&signal_names)[r14]",
    "char rax_1",
    "if (r13 u<= 0x43 && r14_1 != 0)",
    "rax_1 = *r14_1",
    "if (rax_1 == 0x53)",
    "goto label_bd3fd",
    "goto label_bd389",
    "r14_1 = dcgettext(nullptr, \"invalid signal number\", 5)",
    "rax_1 = *r14_1",
    "void* rcx_1",
    "if (rax_1 != 0x53)",
    "label_bd389:",
    "if (rax_1 == 0x75)",
    "if (strncmp(r14_1, \"unknown\", 7) != 0)",
    "goto label_bd391",
    "goto label_bd47c",
    "label_bd391:",
    "rcx_1 = r14_1",
    "if (rbx == 0)",
    "return __printf_chk(2, \"trap -- %s %s\\n\", &data_11fb02, rcx_1) __tailcall",
    "label_bd3ae:",
    "__printf_chk(2, \"trap -- %s %s\\n\", rbx, rcx_1)",
    "if (r12_1 != 0)",
    "return free(rbx) __tailcall",
    "label_bd3fd:",
    "if (strncmp(r14_1, \"SIGJUNK\", 7) != 0)",
    "if (posixly_correct == 0 || r14_1[1] != 0x49 || r14_1[2] != 0x47)",
    "goto label_bd391",
    "rcx_1 = &r14_1[3]",
    "if (rbx != 0)",
    "goto label_bd3ae",
    "return __printf_chk(2, \"trap -- %s %s\\n\", &data_11fb02, rcx_1) __tailcall",
    "label_bd47c:",
    "uint64_t rcx_4 = zx.q(r13)",
    "if (rbx == 0)",
    "return __printf_chk(2, \"trap -- %s %d\\n\", &data_11fb02, rcx_4) __tailcall",
    "__printf_chk(2, \"trap -- %s %d\\n\", rbx, rcx_4)",
    "if (r12_1 != 0)",
    "return free(rbx) __tailcall",
    "return "
  ]
}
{
  "address": "0x64cb0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rdx, rdi",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "test    rdi, rdi",
    "jne     0x64ce0",
    "movzx   eax, byte [rdx]",
    "test    al, al",
    "jne     0x64cd0",
    "jmp     0x64ce9",
    "lea     ecx, [rax-0x9]",
    "cmp     cl, 0x1",
    "jbe     0x64cdc",
    "xor     ebx, ebx",
    "add     rsp, 0x8",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "add     rdx, 0x1",
    "cmp     al, 0x20",
    "jne     0x64d00",
    "mov     edx, dword [rel data_168070]",
    "cmp     edx, 0x3ff",
    "jg      0x65008",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133098]  {\"expression recursion level excee\u2026\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "call    sub_61af0",
    "{ Does not return }",
    "mov     eax, dword [rel data_167f70]",
    "cmp     edx, eax",
    "jge     0x64f48",
    "add     eax, 0xa",
    "mov     rdi, qword [rel data_168078]",
    "mov     dword [rel data_167f70], eax",
    "cdqe    ",
    "lea     r12, [rax*8]",
    "test    rdi, rdi",
    "je      0x64f87",
    "mov     edi, 0x58",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x64f94",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "jmp     0x64f72",
    "mov     rsi, r12",
    "call    realloc",
    "mov     r13, rax",
    "mov     esi, 0x58",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_167f68]",
    "movd    xmm1, dword [rel data_167f84]",
    "mov     rdi, rbx",
    "movd    xmm0, dword [rel data_167f80]",
    "movdqa  xmm2, xmmword [rel data_1598e0]",
    "mov     qword [r12+0x18], rax",
    "mov     rax, qword [rel data_167f78]",
    "punpckldq xmm0, xmm1",
    "movdqa  xmm3, xmmword [rel data_1598f0]",
    "movups  xmmword [r12+0x38], xmm2",
    "mov     qword [r12+0x20], rax",
    "mov     rax, qword [rel data_167f98]",
    "movq    qword [r12], xmm0",
    "movq    xmm0, qword [rel data_167f90]",
    "mov     qword [r12+0x28], rax",
    "mov     eax, dword [rel data_16806c]",
    "movhps  xmm0, qword [rel data_167f88]",
    "movups  xmmword [r12+0x48], xmm3",
    "mov     dword [r12+0x30], eax",
    "movsxd  rax, dword [rel data_168070]",
    "movups  xmmword [r12+0x8], xmm0",
    "lea     edx, [rax+0x1]",
    "mov     dword [rel data_168070], edx",
    "mov     rdx, qword [rel data_168078]",
    "mov     qword [rdx+rax*8], r12",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x64fac",
    "test    r13, r13",
    "je      0x65023",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_168078], r13",
    "jmp     0x64d20",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r13",
    "call    __strcpy_chk",
    "mov     qword [rel data_167f90], r13",
    "mov     qword [rel data_167f88], r13",
    "mov     dword [rel data_167f84], 0x0",
    "mov     dword [rel data_167f80], 0x0",
    "mov     qword [rel data_167f98], 0x0",
    "mov     qword [rel data_167f78], 0x0",
    "mov     qword [rel data_1598e0], 0x0",
    "mov     qword [rel data_1598f0], 0x0",
    "mov     qword [rel data_1598f8], 0xffffffffffffffff",
    "mov     qword [rel data_1598e8], 0xffffffffffffffff",
    "nop     dword [rax]",
    "call    sub_62f60",
    "call    sub_64930",
    "mov     rbx, rax",
    "mov     eax, dword [rel data_167f80]",
    "cmp     eax, 0x2c",
    "je      0x64e60",
    "test    eax, eax",
    "jne     0x64fc2",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_12037c]  {\"syntax error in expression\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "call    sub_61af0",
    "{ Does not return }",
    "mov     rdi, qword [rel data_167f98]",
    "test    rdi, rdi",
    "je      0x64e91",
    "mov     rdi, qword [rel data_167f90]",
    "test    rdi, rdi",
    "je      0x64ea2",
    "call    free",
    "mov     eax, dword [rel data_168070]",
    "test    eax, eax",
    "jle     0x64fdd",
    "call    free",
    "xor     eax, eax",
    "xor     edi, edi",
    "lea     rsi, [rel 0x120397]  {\"recursion stack underflow\"}",
    "mov     edx, 0x5",
    "mov     qword [rel data_167f68], rax",
    "mov     qword [rel data_167f90], rax",
    "call    dcgettext",
    "mov     rdi, rax",
    "call    sub_61af0",
    "{ Does not return }",
    "mov     rdx, qword [rel data_168078]",
    "sub     eax, 0x1",
    "mov     dword [rel data_168070], eax",
    "cdqe    ",
    "mov     rdi, qword [rdx+rax*8]",
    "mov     rax, qword [rdi+0x8]",
    "movdqu  xmm4, xmmword [rdi+0x38]",
    "movdqu  xmm5, xmmword [rdi+0x48]",
    "mov     qword [rel data_167f90], rax",
    "mov     eax, dword [rdi]",
    "mov     dword [rel data_167f80], eax",
    "mov     eax, dword [rdi+0x4]",
    "mov     dword [rel data_167f84], eax",
    "mov     rax, qword [rdi+0x10]",
    "mov     qword [rel data_167f88], rax",
    "mov     rax, qword [rdi+0x18]",
    "movaps  xmmword [rel data_1598e0], xmm4",
    "mov     qword [rel data_167f68], rax",
    "mov     rax, qword [rdi+0x20]",
    "mov     qword [rel data_167f78], rax",
    "mov     rax, qword [rdi+0x28]",
    "movaps  xmmword [rel data_1598f0], xmm5",
    "mov     qword [rel data_167f98], rax",
    "mov     eax, dword [rdi+0x30]",
    "mov     dword [rel data_16806c], eax",
    "call    free",
    "add     rsp, 0x8",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    "
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
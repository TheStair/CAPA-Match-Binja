{
  "address": "0x473b0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0xe8",
    "mov     qword [rbp-0xd8], rsi",
    "mov     qword [rbp-0xd0], rdx",
    "mov     qword [rbp-0xc8], rcx",
    "mov     qword [rbp-0xc0], r8",
    "mov     qword [rbp-0xb8], r9",
    "test    al, al",
    "je      0x47417",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0xe8], rax",
    "xor     eax, eax",
    "lea     rax, [rbp+0x10]",
    "mov     rdi, rbx",
    "mov     dword [rbp-0x100], 0x8",
    "mov     qword [rbp-0xf8], rax",
    "lea     rax, [rbp-0xe0]",
    "mov     dword [rbp-0xfc], 0x30",
    "mov     qword [rbp-0xf0], rax",
    "call    strlen",
    "lea     edi, [rax+0x1]",
    "call    sub_41050",
    "mov     byte [rbp-0x10c], 0x0",
    "movaps  xmmword [rbp-0xb0], xmm0",
    "movaps  xmmword [rbp-0xa0], xmm1",
    "movaps  xmmword [rbp-0x90], xmm2",
    "movaps  xmmword [rbp-0x80], xmm3",
    "movaps  xmmword [rbp-0x70], xmm4",
    "movaps  xmmword [rbp-0x60], xmm5",
    "movaps  xmmword [rbp-0x50], xmm6",
    "movaps  xmmword [rbp-0x40], xmm7",
    "lea     rax, [rel command_string_index]",
    "lea     rdx, [rel the_printed_command]",
    "movsxd  rax, dword [rax]",
    "mov     rdx, qword [rdx]",
    "mov     byte [rdx+rax], 0x0",
    "mov     rax, qword [rbp-0xe8]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x476ed",
    "lea     r14, [rbx+0x1]",
    "cmp     al, 0x25",
    "je      0x47510",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xe8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "movzx   r12d, byte [rbx+0x1]",
    "test    r12b, r12b",
    "je      0x47480",
    "mov     byte [rbp-0x10d], al",
    "mov     r15d, 0x1",
    "mov     edi, 0x2",
    "mov     r12d, 0x1",
    "lea     r13, [rbp-0x10d]",
    "add     rbx, 0x2",
    "cmp     r12b, 0x64",
    "je      0x475d0",
    "mov     eax, dword [rbp-0x100]",
    "cmp     eax, 0x2f",
    "ja      0x47668",
    "jg      0x47590",
    "mov     rdx, qword [rbp-0xf8]",
    "lea     rax, [rdx+0x8]",
    "mov     qword [rbp-0xf8], rax",
    "jmp     0x475f1",
    "mov     edx, eax",
    "add     eax, 0x8",
    "add     rdx, qword [rbp-0xf0]",
    "mov     dword [rbp-0x100], eax",
    "cmp     r12b, 0x73",
    "jne     0x47640",
    "cmp     r12b, 0x25",
    "je      0x47563",
    "movsxd  rdi, dword [rdx]",
    "test    edi, edi",
    "js      0x476c0",
    "lea     r13, [rbp-0x10b]",
    "mov     r8d, 0xffffffff",
    "mov     edx, 0xb",
    "xor     eax, eax",
    "lea     rcx, [rel data_11fbb5]",
    "mov     esi, 0x2",
    "mov     rdi, r13",
    "call    __sprintf_chk",
    "jmp     0x47618",
    "lea     rdx, [rbp-0x10b]",
    "xor     r8d, r8d",
    "mov     ecx, 0xb",
    "mov     esi, 0xa",
    "call    fmtulong",
    "mov     r13, rax",
    "lea     rsi, [rel data_1329f0]  {\"cprintf: `%c': invalid format ch\u2026\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "movsx   esi, r12b",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    programming_error",
    "{ Does not return }",
    "mov     eax, dword [rbp-0x100]",
    "cmp     eax, 0x2f",
    "ja      0x47680",
    "mov     byte [rbp-0x10d], r12b",
    "mov     r14, rbx",
    "mov     r15d, 0x1",
    "mov     edi, 0x2",
    "mov     r12d, 0x1",
    "lea     r13, [rbp-0x10d]",
    "jmp     0x4749e",
    "cmp     r12b, 0x63",
    "jne     0x47640",
    "mov     rdi, r13",
    "call    strlen",
    "mov     r12d, eax",
    "movzx   eax, byte [rbx]",
    "test    al, al",
    "je      0x474cf",
    "lea     edi, [r12+0x1]",
    "movsxd  r15, r12d",
    "mov     r14, rbx",
    "jmp     0x4749e",
    "mov     rdx, qword [rbp-0xf8]",
    "lea     rax, [rdx+0x8]",
    "mov     qword [rbp-0xf8], rax",
    "jmp     0x475bb",
    "mov     edx, eax",
    "add     eax, 0x8",
    "add     rdx, qword [rbp-0xf0]",
    "mov     dword [rbp-0x100], eax",
    "call    sub_41050",
    "lea     rbx, [rel command_string_index]",
    "mov     rdx, r15",
    "mov     rsi, r13",
    "lea     rax, [rel the_printed_command]",
    "movsxd  rdi, dword [rbx]",
    "add     rdi, qword [rax]",
    "call    memcpy",
    "add     dword [rbx], r12d",
    "mov     rbx, r14",
    "movzx   eax, byte [rbx]",
    "test    al, al",
    "jne     0x47474",
    "mov     eax, dword [rbp-0x100]",
    "cmp     eax, 0x2f",
    "ja      0x476a0",
    "mov     r13, qword [rdx]",
    "mov     rdi, r13",
    "call    strlen",
    "mov     r12d, eax",
    "jmp     0x47623",
    "test    r12d, r12d",
    "je      0x4746d",
    "mov     rdx, qword [rbp-0xf8]",
    "lea     rax, [rdx+0x8]",
    "mov     qword [rbp-0xf8], rax",
    "jmp     0x4755f",
    "mov     edx, eax",
    "add     eax, 0x8",
    "add     rdx, qword [rbp-0xf0]",
    "mov     dword [rbp-0x100], eax",
    "movzx   r12d, byte [rdx]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
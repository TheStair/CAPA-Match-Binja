{
  "address": "0x10d3b0",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "validate payment card number using luhn algorithm with no lookup table/c7424b8f4dd24e28bdb38bbfd0000b7d/e6fc10f104d940b0af191c8a6d2e33cb",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a/ac1bf5eae13c4c818e97621a1396c642",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "allocate or change RW memory/877cb0b79bfa432e8e79b8bd20fa354f",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "decompress data using aPLib/54aa508e15f34aa5847662ea1b5aeb9c",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using AES MixColumns step/7b9fb39edc83467fa6c3a3e904a4a8ad"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0xf8",
    "mov     qword [rbp-0xa8], rsi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    rsi, rsi",
    "je      0x10dbdd",
    "xor     eax, eax",
    "lea     rax, [rel history_expansion_char]",
    "mov     r15, rdi",
    "cmp     byte [rax], 0x0",
    "je      0x10dba8",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xf8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x10fbe2",
    "mov     edi, 0x100",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x10fcb1",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r15",
    "mov     rdi, r12",
    "call    __strcpy_chk",
    "mov     rcx, qword [rbp-0xa8]",
    "mov     qword [rcx], r12",
    "mov     esi, 0x100",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r13], 0x0",
    "mov     rdi, r15",
    "call    strlen",
    "movzx   edx, byte [r15]",
    "mov     dword [rbp-0x8c], eax",
    "mov     rbx, rax",
    "lea     rax, [rel history_subst_char]",
    "cmp     dl, byte [rax]",
    "je      0x10dde8",
    "lea     r12d, [rbx+0x5]",
    "movsxd  r12, r12d",
    "mov     rdi, r12",
    "call    malloc",
    "mov     qword [rbp-0x78], rax",
    "test    rax, rax",
    "je      0x10fbce",
    "lea     rax, [rel history_quoting_state]",
    "mov     qword [rbp-0x60], 0x0",
    "mov     dword [rbp-0x70], 0x0",
    "mov     ecx, dword [rax]",
    "cmp     ecx, 0x27",
    "je      0x10e1e0",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel history_expansion_char]",
    "mov     rdi, qword [rbp-0x78]",
    "mov     rsi, r15",
    "movzx   edx, byte [rax]",
    "movzx   eax, dl",
    "mov     ah, dl",
    "mov     word [rdi], ax",
    "mov     eax, 0x733a",
    "mov     word [rdi+0x2], ax",
    "mov     eax, 0x4",
    "cmp     r12, rax",
    "cmovae  rax, r12",
    "add     rdi, 0x4",
    "mov     rdx, rax",
    "sub     rdx, 0x4",
    "call    __strcpy_chk",
    "lea     eax, [rbx+0x4]",
    "mov     dword [rbp-0x8c], eax",
    "lea     rax, [rel history_quoting_state]",
    "jmp     0x10d5cf",
    "lea     rcx, [rel history_quotes_inhibit_expansion]",
    "mov     esi, dword [rcx]",
    "test    esi, esi",
    "je      0x10e4e4",
    "xor     esi, esi",
    "cmp     ecx, 0x22",
    "mov     r12, r15",
    "sete    sil",
    "xor     r14d, r14d",
    "xor     ebx, ebx",
    "mov     eax, dword [rax]",
    "xor     edi, edi",
    "mov     dword [rbp-0x70], 0x0",
    "cmp     eax, 0x22",
    "sete    dil",
    "mov     dword [rbp-0x90], edi",
    "cmp     eax, 0x27",
    "je      0x10e0e0",
    "mov     r12, r15",
    "xor     ebx, ebx",
    "xor     r14d, r14d",
    "jmp     0x10d46b",
    "cmp     dl, 0x27",
    "je      0x10f5f9",
    "xor     edx, edx",
    "jmp     0x10d5bc",
    "mov     qword [rbp-0x88], r13",
    "mov     r13, r14",
    "mov     r14, r12",
    "mov     r12d, ebx",
    "mov     qword [rbp-0x98], rax",
    "mov     ebx, esi",
    "mov     qword [rbp-0x80], r10",
    "jmp     0x10d4f9",
    "lea     rax, [rel history_quotes_inhibit_expansion]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "je      0x10e2f0",
    "mov     dword [rbp-0x80], 0x100",
    "xor     r11d, r11d",
    "xor     r8d, r8d",
    "mov     qword [rbp-0x98], 0x100",
    "lea     r10, [rbp-0x60]",
    "test    dl, dl",
    "je      0x10e2e6",
    "xor     ebx, ebx",
    "jmp     0x10e225",
    "test    dl, dl",
    "je      0x10f5f9",
    "lea     rcx, [rel history_expansion_char]",
    "mov     qword [rbp-0x78], r15",
    "cmp     byte [rcx], dl",
    "jne     0x10e248",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x10d515",
    "mov     dword [rbp-0x80], 0x100",
    "mov     r11d, 0x1",
    "mov     qword [rbp-0x98], 0x100",
    "jmp     0x10d608",
    "mov     rcx, qword [rbp-0x78]",
    "movzx   eax, byte [rcx]",
    "test    al, al",
    "je      0x10d5f0",
    "mov     rax, qword [rbp-0xa8]",
    "mov     qword [rax], r13",
    "cmp     qword [rbp-0x78], r15",
    "je      0x10dbdd",
    "mov     rax, qword [rbp-0x98]",
    "mov     r14d, r8d",
    "mov     dword [rbp-0xd0], 0x0",
    "mov     dword [rbp-0xd4], 0x0",
    "mov     qword [rbp-0xc0], rax",
    "mov     dword [rbp-0x88], 0x0",
    "mov     dword [rbp-0xcc], r11d",
    "mov     qword [rbp-0xc8], r15",
    "jmp     0x10d6ac",
    "mov     dword [rbp-0x70], ebx",
    "test    dl, dl",
    "je      0x10e232",
    "mov     ecx, 0x1",
    "jmp     0x10e215",
    "mov     rdi, r13",
    "call    free",
    "mov     rdi, r15",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x10fda1",
    "lea     rax, [rel history_comment_char]",
    "movsx   r10d, byte [r15+r13+0x1]",
    "lea     rsi, [rel history_expansion_char]",
    "movzx   ecx, byte [r14]",
    "movzx   eax, byte [rax]",
    "mov     r9d, r10d",
    "movzx   r14d, byte [rsi]",
    "test    al, al",
    "je      0x10d543",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x10d910",
    "mov     eax, dword [rbp-0x8c]",
    "cmp     r8d, eax",
    "jge     0x10f341",
    "cmp     al, 0x27",
    "je      0x10f754",
    "mov     rdi, qword [rbp-0x78]",
    "call    free",
    "jmp     0x10dbdd",
    "mov     rax, qword [rbp-0x78]",
    "mov     r10d, dword [rbp-0x88]",
    "movsxd  r8, r8d",
    "movzx   ebx, byte [rax+r8]",
    "test    r10d, r10d",
    "jne     0x10d660",
    "movsxd  r14, ebx",
    "xor     esi, esi",
    "lea     r12, [r15+r14]",
    "movzx   edx, byte [r12]",
    "jmp     0x10d46b",
    "add     ebx, 0x1",
    "mov     dword [rbp-0x70], ebx",
    "movzx   edx, byte [r15+rcx]",
    "mov     rbx, rcx",
    "add     rcx, 0x1",
    "test    dl, dl",
    "jne     0x10e210",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, r12",
    "mov     rdx, rbx",
    "mov     rsi, r15",
    "call    __strcpy_chk",
    "mov     rdi, qword [rbp-0xa8]",
    "mov     qword [rdi], r12",
    "jmp     0x10dbdd",
    "cmp     cl, r14b",
    "jne     0x10d4a0",
    "cmp     al, cl",
    "je      0x10d930",
    "mov     rsi, qword [rbp-0x80]",
    "mov     rdi, r14",
    "call    _rl_get_char_len",
    "cmp     eax, 0x1",
    "jle     0x10d515",
    "test    al, al",
    "je      0x10d5f0",
    "lea     rdx, [rcx+0x1]",
    "xor     r8d, r8d",
    "jmp     0x10e11c",
    "mov     eax, dword [rbp-0x80]",
    "sub     eax, 0x1",
    "cmp     eax, r14d",
    "jle     0x10d8c8",
    "call    __ctype_get_mb_cur_max",
    "mov     r8d, dword [rbp-0x70]",
    "cmp     rax, 0x1",
    "jbe     0x10d6e6",
    "cmp     dl, 0x27",
    "je      0x10e225",
    "test    ebx, ebx",
    "je      0x10d4ad",
    "mov     r13d, dword [rbp-0x70]",
    "test    r10d, r10d",
    "je      0x10d4e0",
    "test    ebx, ebx",
    "jne     0x10da80",
    "lea     r13d, [r12+rax-0x1]",
    "jmp     0x10d4e0",
    "mov     dword [rbp-0x80], 0x100",
    "mov     r9, r13",
    "mov     ebx, 0x1",
    "mov     r12d, 0x1",
    "mov     qword [rbp-0x98], 0x100",
    "mov     ecx, 0x27",
    "jmp     0x10e48e",
    "movzx   eax, byte [rdx]",
    "mov     r10d, r8d",
    "mov     r14, rdx",
    "add     r8d, 0x1",
    "add     rdx, 0x1",
    "test    al, al",
    "jne     0x10e118",
    "add     dword [rbp-0x80], 0x40",
    "movsxd  rsi, dword [rbp-0x80]",
    "mov     qword [rbp-0x98], rsi",
    "test    r13, r13",
    "je      0x10da90",
    "lea     eax, [r14+0x1]",
    "movsxd  r14, r14d",
    "mov     r8d, dword [rbp-0x70]",
    "mov     dword [rbp-0x88], 0x0",
    "movsxd  rdx, eax",
    "mov     byte [r13+r14], bl",
    "mov     r14d, eax",
    "mov     byte [r13+rdx], 0x0",
    "lea     rax, [rel history_expansion_char]",
    "cmp     bl, byte [rax]",
    "je      0x10d7c8",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "je      0x10daa8",
    "lea     rax, [rel history_quotes_inhibit_expansion]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0x10d4dc",
    "cmp     cl, 0x5c",
    "je      0x10da38",
    "lea     r12d, [r13+0x1]",
    "movsxd  r13, r12d",
    "mov     dword [rbp-0x70], r12d",
    "lea     r14, [r15+r13]",
    "cmp     byte [r14], 0x0",
    "je      0x10e2d8",
    "lea     rax, [rel history_no_expand_chars]",
    "mov     esi, r10d",
    "mov     dword [rbp-0x78], r10d",
    "mov     rdi, qword [rax]",
    "call    strchr",
    "test    rax, rax",
    "jne     0x10d4e0",
    "cmp     cl, r14b",
    "jne     0x10d4a4",
    "test    r12d, r12d",
    "je      0x10ed5d",
    "mov     byte [r9], cl",
    "mov     r8d, r12d",
    "xor     r11d, r11d",
    "mov     byte [r13+rbx], 0x0",
    "mov     dword [rbp-0x70], r12d",
    "jmp     0x10d608",
    "cmp     al, 0x27",
    "je      0x10e131",
    "xor     ebx, ebx",
    "movsxd  rdx, r10d",
    "mov     eax, 0x100",
    "mov     dword [rbp-0x70], r8d",
    "mov     dword [rbp-0x88], r8d",
    "mov     r12d, 0x100",
    "mov     r8, r13",
    "mov     r13d, eax",
    "mov     qword [rbp-0x98], r14",
    "mov     r14, rbx",
    "mov     rbx, qword [rbp-0x78]",
    "mov     qword [rbp-0xb0], r15",
    "mov     r15, rdx",
    "mov     dword [rbp-0xa0], r10d",
    "jmp     0x10e199",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     r13, rax",
    "jmp     0x10d8eb",
    "mov     rdi, r13",
    "call    realloc",
    "mov     r13, rax",
    "mov     r15, qword [rbp-0xc8]",
    "jmp     0x10dcb4",
    "mov     rax, qword [rbp-0x78]",
    "movsxd  rbx, r8d",
    "lea     r12, [rax+rbx+0x1]",
    "movsx   ecx, byte [r12]",
    "mov     byte [rbp-0xa0], cl",
    "test    ecx, ecx",
    "je      0x10d790",
    "lea     rax, [rel history_comment_char]",
    "cmp     bl, byte [rax]",
    "je      0x10d721",
    "lea     r15, [rbp-0x50]",
    "pxor    xmm0, xmm0",
    "movsxd  rcx, r8d",
    "movsx   eax, bl",
    "lea     rsi, [rbp-0x60]",
    "movaps  xmmword [rbp-0x50], xmm0",
    "lea     r12, [rbp-0x40]",
    "mov     byte [rbp-0xa0], bl",
    "mov     rbx, rsi",
    "mov     dword [rbp-0xb0], r14d",
    "mov     r14, rcx",
    "mov     qword [rbp-0xb8], r13",
    "mov     r13, r15",
    "nop     ",
    "mov     r13d, dword [rbp-0x70]",
    "cmp     cl, 0x22",
    "je      0x10da70",
    "cmp     r10d, 0x22",
    "je      0x10e0b0",
    "mov     r13, qword [rbp-0x88]",
    "mov     rax, qword [rbp-0x98]",
    "mov     r10d, dword [rbp-0x78]",
    "cmp     r10d, 0x22",
    "jne     0x10d587",
    "jmp     0x10d54c",
    "movsxd  rcx, dword [rbp-0x70]",
    "mov     r13, qword [rbp-0x88]",
    "mov     rax, qword [rbp-0x98]",
    "mov     rdx, rcx",
    "add     edx, 0x1",
    "cmp     byte [r15+rcx], 0x0",
    "movsxd  rdx, edx",
    "je      0x10e2e6",
    "movsx   esi, byte [r15+r13-0x1]",
    "test    sil, sil",
    "je      0x10d988",
    "lea     eax, [r13-0x1]",
    "cmp     eax, r14d",
    "jg      0x10e178",
    "test    r13, r13",
    "je      0x10fb6e",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x98]",
    "mov     qword [rbp-0xc0], rax",
    "jmp     0x10d66f",
    "mov     rax, qword [rbp-0xa8]",
    "mov     qword [rax], r13",
    "mov     rax, qword [rbp-0x78]",
    "cmp     rax, r15",
    "je      0x10dccf",
    "mov     eax, dword [rbp-0x80]",
    "sub     eax, 0x1",
    "cmp     eax, r14d",
    "jle     0x10d9a0",
    "lea     rax, [rel history_no_expand_chars]",
    "mov     esi, ecx",
    "mov     dword [rbp-0xb8], r8d",
    "mov     dword [rbp-0xb0], ecx",
    "mov     rdi, qword [rax]",
    "call    strchr",
    "mov     ecx, dword [rbp-0xb0]",
    "mov     r8d, dword [rbp-0xb8]",
    "test    rax, rax",
    "movzx   edx, byte [rbp-0xa0]",
    "jne     0x10d790",
    "mov     r12d, dword [rbp-0x90]",
    "movsxd  rbx, r8d",
    "test    r12d, r12d",
    "je      0x10d73f",
    "cmp     bl, 0x22",
    "je      0x10dd40",
    "mov     rcx, r14",
    "movzx   ebx, byte [rbp-0xa0]",
    "mov     r13, qword [rbp-0xb8]",
    "movsxd  r14, dword [rbp-0xb0]",
    "mov     r8d, ecx",
    "jmp     0x10db33",
    "mov     rax, qword [rbp-0x78]",
    "lea     r8d, [r14+0x1]",
    "add     r13, 0x1",
    "mov     dword [rbp-0x70], r8d",
    "movsx   eax, byte [rax+r14+0x1]",
    "add     r14, 0x1",
    "cmp     r12, r13",
    "jne     0x10dae0",
    "xor     ebx, 0x1",
    "jmp     0x10d4dc",
    "cmp     cl, 0x27",
    "jne     0x10d4d3",
    "lea     r13d, [r12+0x1]",
    "mov     ebx, 0x1",
    "jmp     0x10d4e0",
    "lea     rax, [rel history_quotes_inhibit_expansion]",
    "mov     r13d, dword [rax]",
    "test    r13d, r13d",
    "je      0x10de60",
    "lea     rax, [rel history_inhibit_expansion_function]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x10d5a6",
    "test    bl, 0x1",
    "jne     0x10de70",
    "nop     dword [rax+rax]",
    "cmp     cl, r14b",
    "jne     0x10d4ad",
    "lea     rax, [rel history_word_delimiters]",
    "mov     byte [rbp-0x90], cl",
    "mov     dword [rbp-0xa0], r10d",
    "mov     rdi, qword [rax]",
    "mov     byte [rbp-0x78], r10b",
    "call    strchr",
    "movzx   r9d, byte [rbp-0x78]",
    "mov     r10d, dword [rbp-0xa0]",
    "test    rax, rax",
    "movzx   ecx, byte [rbp-0x90]",
    "jne     0x10ed5d",
    "movzx   eax, byte [rbx+r14]",
    "mov     byte [r8+r14], al",
    "lea     rax, [r14+0x1]",
    "lea     r9, [r8+rax]",
    "mov     byte [r9], 0x0",
    "cmp     r14, r15",
    "je      0x10e43c",
    "add     r13d, 0x40",
    "movsxd  r12, r13d",
    "test    r8, r8",
    "je      0x10e4f1",
    "mov     ecx, dword [rbp-0xd0]",
    "mov     eax, 0x2",
    "test    ecx, ecx",
    "jne     0x10dbdf",
    "mov     rdi, rax",
    "call    free",
    "add     dword [rbp-0x80], 0x40",
    "movsxd  rsi, dword [rbp-0x80]",
    "mov     dword [rbp-0xa0], r8d",
    "mov     qword [rbp-0x98], rsi",
    "test    r13, r13",
    "je      0x10e090",
    "mov     rdi, qword [rbp-0x78]",
    "lea     eax, [r14+0x1]",
    "movsxd  r14, r14d",
    "movzx   edx, byte [rdi+rbx]",
    "mov     byte [r13+r14], dl",
    "movsxd  rdx, eax",
    "mov     r14d, eax",
    "mov     byte [r13+rdx], 0x0",
    "jmp     0x10d695",
    "cmp     ecx, 0x22",
    "jne     0x10d830",
    "test    r8d, r8d",
    "je      0x10dc08",
    "lea     rax, [rel history_quotes_inhibit_expansion]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "jne     0x10d790",
    "mov     eax, dword [rbp-0x80]",
    "xor     dword [rbp-0x90], 0x1",
    "sub     eax, 0x1",
    "cmp     eax, r14d",
    "jle     0x10dff0",
    "jg      0x10d9f0",
    "mov     rdi, r15",
    "mov     dword [rbp-0xa0], r8d",
    "call    strlen",
    "mov     r8d, dword [rbp-0xa0]",
    "cmp     rax, 0x1",
    "jbe     0x10d6e6",
    "mov     byte [r13], al",
    "mov     rsi, rbx",
    "mov     rdi, r15",
    "mov     qword [rbx], 0x0",
    "call    _rl_get_char_len",
    "cmp     eax, 0xfffffffe",
    "jne     0x10e0c0",
    "movzx   ebx, byte [rbp-0xa0]",
    "movsxd  r14, dword [rbp-0xb0]",
    "mov     r13, qword [rbp-0xb8]",
    "cmp     cl, 0x5c",
    "je      0x10da55",
    "test    bl, 0x1",
    "je      0x10ddb0",
    "mov     r13d, dword [rbp-0x70]",
    "mov     ebx, 0x1",
    "jmp     0x10d4e0",
    "cmp     r10d, 0x27",
    "je      0x10da64",
    "movsxd  r12, r13d",
    "mov     rax, qword [rbp-0x98]",
    "mov     r13, qword [rbp-0x88]",
    "movzx   edx, byte [r15+r12]",
    "mov     esi, r12d",
    "mov     rdi, r15",
    "call    rax",
    "test    eax, eax",
    "jne     0x10d4e0",
    "mov     ebx, 0x1",
    "jmp     0x10d4e0",
    "mov     rcx, rdx",
    "add     rdx, 0x1",
    "cmp     byte [r15+rdx-0x1], 0x0",
    "jne     0x10ed88",
    "mov     dword [rbp-0x70], ecx",
    "xor     edx, edx",
    "jmp     0x10d5bc",
    "jmp     0x10d54c",
    "mov     r14, qword [rbp-0x98]",
    "mov     eax, r13d",
    "mov     rdx, r15",
    "xor     r11d, r11d",
    "mov     dword [rbp-0x80], r13d",
    "mov     r10d, dword [rbp-0xa0]",
    "mov     r13, r8",
    "movzx   ecx, byte [r14]",
    "mov     qword [rbp-0x98], r12",
    "mov     r8d, dword [rbp-0x88]",
    "mov     r15, qword [rbp-0xb0]",
    "test    cl, cl",
    "je      0x10d608",
    "mov     r14, rax",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r8, rax",
    "jmp     0x10e1c0",
    "mov     rdi, r8",
    "mov     rsi, r12",
    "call    realloc",
    "mov     r8, rax",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x10fac2",
    "mov     edx, dword [rbp-0xd4]",
    "xor     eax, eax",
    "test    edx, edx",
    "setne   al",
    "jmp     0x10dbdf",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r13, rax",
    "jmp     0x10d9d1",
    "mov     rdi, r13",
    "call    realloc",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r13, rax",
    "mov     eax, dword [rbp-0x8c]",
    "add     r8d, 0x1",
    "mov     dword [rbp-0x70], r8d",
    "cmp     r8d, eax",
    "jge     0x1100e2",
    "lea     rax, [rel history_inhibit_expansion_function]",
    "cmp     qword [rax], 0x0",
    "je      0x10e313",
    "test    byte [rbp-0x90], 0x1",
    "jne     0x10d790",
    "mov     r15, qword [rbp-0xc8]",
    "xor     ecx, ecx",
    "mov     rax, qword [rbp-0x78]",
    "movsx   esi, byte [rax+rbx-0x1]",
    "test    sil, sil",
    "je      0x10d790",
    "add     dword [rbp-0x80], 0x40",
    "movsxd  rsi, dword [rbp-0x80]",
    "mov     dword [rbp-0xa0], r8d",
    "mov     qword [rbp-0x98], rsi",
    "test    r13, r13",
    "je      0x10f326",
    "movsxd  rax, r14d",
    "mov     esi, 0x22",
    "add     r14d, 0x1",
    "mov     word [r13+rax], si",
    "jmp     0x10d695",
    "cmp     bl, 0x27",
    "je      0x10dcf8",
    "cmp     bl, 0xfd",
    "je      0x10d7c8",
    "lea     ebx, [r14+rax]",
    "mov     eax, dword [rbp-0x80]",
    "cmp     ebx, eax",
    "jge     0x10ef10",
    "xor     eax, eax",
    "test    r12d, r12d",
    "jle     0x10ddc2",
    "lea     r13d, [r12+0x1]",
    "jmp     0x10d4e0",
    "cmp     r9b, r14b",
    "jne     0x10d4dc",
    "lea     r12d, [r10+0x2]",
    "sub     eax, 0x1",
    "movsxd  rbx, r12d",
    "cmp     eax, r8d",
    "jle     0x10f3f8",
    "test    r8, r8",
    "jne     0x10e178",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x80], r8",
    "call    sub_a7f00",
    "{ Does not return }",
    "test    r13, r13",
    "je      0x1100ba",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0xa0], r8d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x98]",
    "mov     qword [rbp-0xc0], rax",
    "jmp     0x10d79f",
    "mov     r10d, dword [rbp-0xcc]",
    "mov     ebx, 0x27",
    "test    r10d, r10d",
    "je      0x10e501",
    "mov     eax, dword [rbp-0x80]",
    "sub     eax, 0x1",
    "cmp     eax, r14d",
    "jle     0x10f288",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x78]",
    "mov     rdx, rbx",
    "mov     rdi, r12",
    "lea     rsi, [rax+rcx]",
    "call    __strcpy_chk",
    "mov     rdi, r12",
    "call    strlen",
    "mov     ecx, dword [rbp-0x80]",
    "mov     rbx, rax",
    "lea     eax, [r14+rax]",
    "cmp     eax, ecx",
    "jge     0x10e290",
    "lea     rax, [rel history_word_delimiters]",
    "mov     dword [rbp-0xa0], r8d",
    "mov     rdi, qword [rax]",
    "call    strchr",
    "mov     r8d, dword [rbp-0xa0]",
    "test    rax, rax",
    "je      0x10d790",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r13, rax",
    "jmp     0x10e021",
    "mov     rdi, r13",
    "call    realloc",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r13, rax",
    "mov     ecx, dword [rbp-0xcc]",
    "test    ecx, ecx",
    "je      0x10de80",
    "cmp     bl, 0x5c",
    "jne     0x10dd70",
    "cmp     bl, 0xfe",
    "jne     0x10dd70",
    "mov     ecx, dword [rbp-0x80]",
    "mov     eax, ebx",
    "mov     dword [rbp-0x88], r8d",
    "sub     eax, ecx",
    "and     eax, 0xffffff80",
    "lea     eax, [rcx+rax+0x80]",
    "movsxd  rsi, eax",
    "mov     dword [rbp-0x80], eax",
    "mov     qword [rbp-0x98], rsi",
    "test    r13, r13",
    "je      0x10f48b",
    "mov     rax, qword [rbp-0x98]",
    "lea     rdi, [r13+r14]",
    "mov     rsi, r15",
    "mov     dword [rbp-0xa0], r8d",
    "cmp     r14, rax",
    "mov     rdx, rax",
    "cmovae  rdx, r14",
    "sub     rdx, r14",
    "mov     r14d, ebx",
    "call    __strcpy_chk",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     dword [rbp-0x88], 0x0",
    "jmp     0x10d695",
    "lea     edx, [r12+0x1]",
    "lea     rsi, [rbp-0x70]",
    "mov     rdi, r15",
    "xor     ebx, ebx",
    "mov     dword [rbp-0x70], edx",
    "mov     edx, eax",
    "call    sub_104b00",
    "mov     r13d, dword [rbp-0x70]",
    "jmp     0x10d4e0",
    "xor     eax, eax",
    "cmp     byte [r15+r13-0x1], 0x24",
    "sete    al",
    "add     dword [rbp-0x80], 0x40",
    "movsxd  rsi, dword [rbp-0x80]",
    "mov     qword [rbp-0xa0], rdx",
    "mov     qword [rbp-0x98], rsi",
    "mov     byte [rbp-0x88], cl",
    "test    r13, r13",
    "je      0x10f7e9",
    "mov     eax, dword [rbp-0x90]",
    "neg     eax",
    "sbb     ebx, ebx",
    "and     ebx, 0x22",
    "jmp     0x10e328",
    "lea     rax, [rbp-0x58]",
    "mov     edi, 0x80",
    "mov     dword [rbp-0xa0], r8d",
    "mov     qword [rbp-0x118], rax",
    "mov     qword [rbp-0x58], 0x0",
    "call    malloc",
    "mov     r8d, dword [rbp-0xa0]",
    "test    rax, rax",
    "mov     qword [rbp-0xb8], rax",
    "je      0x10fe4a",
    "mov     eax, dword [rbp-0x80]",
    "mov     dword [rbp-0xb0], r8d",
    "mov     byte [rbp-0xa0], dl",
    "add     eax, 0x40",
    "movsxd  rsi, eax",
    "mov     r15d, eax",
    "mov     qword [rbp-0x98], rsi",
    "test    r13, r13",
    "je      0x10f5d7",
    "mov     rsi, qword [rbp-0x78]",
    "lea     ecx, [r14+0x1]",
    "movsxd  rdi, r14d",
    "movsxd  r9, ecx",
    "mov     r15, rdi",
    "movzx   esi, byte [rsi+rbx]",
    "lea     rbx, [r13+r9]",
    "mov     byte [r13+rdi], sil",
    "mov     byte [rbx], 0x0",
    "cmp     ecx, eax",
    "jge     0x10f208",
    "mov     ecx, dword [rbp-0x80]",
    "sub     eax, ecx",
    "and     eax, 0xffffff80",
    "lea     eax, [rcx+rax+0x80]",
    "movsxd  rsi, eax",
    "mov     qword [rbp-0xc0], rsi",
    "test    r13, r13",
    "je      0x10ef70",
    "mov     rax, qword [rbp-0x98]",
    "mov     r15, qword [rbp-0xc8]",
    "mov     rcx, rbx",
    "jmp     0x10dc11",
    "test    r13, r13",
    "je      0x10ff4b",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0xa0], r8d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x98]",
    "mov     qword [rbp-0xc0], rax",
    "jmp     0x10dd56",
    "mov     r15d, dword [rbp-0x90]",
    "movsxd  rcx, r8d",
    "test    r15d, r15d",
    "jne     0x10e4a6",
    "mov     eax, dword [rbp-0x80]",
    "sub     eax, 0x1",
    "cmp     eax, r14d",
    "jle     0x10eec0",
    "mov     eax, dword [rbp-0x80]",
    "sub     eax, 0x1",
    "cmp     eax, r14d",
    "jle     0x10dfa0",
    "mov     eax, dword [rbp-0x80]",
    "sub     eax, 0x1",
    "cmp     eax, r14d",
    "jle     0x10e040",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     r8d, dword [rbp-0x88]",
    "mov     r13, rax",
    "jmp     0x10ef50",
    "mov     rdi, r13",
    "call    realloc",
    "mov     r8d, dword [rbp-0x88]",
    "mov     r13, rax",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     rdx, qword [rbp-0xa0]",
    "movzx   ecx, byte [rbp-0x88]",
    "mov     r13, rax",
    "jmp     0x10f436",
    "mov     rdi, r13",
    "call    realloc",
    "movzx   ecx, byte [rbp-0x88]",
    "mov     rdx, qword [rbp-0xa0]",
    "mov     r13, rax",
    "mov     esi, 0x80",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "movzx   r12d, byte [r12]",
    "mov     dword [rbp-0x6c], r8d",
    "test    r12b, r12b",
    "je      0x10e513",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     r8d, dword [rbp-0xb0]",
    "movzx   edx, byte [rbp-0xa0]",
    "mov     r13, rax",
    "jmp     0x10f2ca",
    "mov     rdi, r13",
    "call    realloc",
    "movzx   edx, byte [rbp-0xa0]",
    "mov     r8d, dword [rbp-0xb0]",
    "mov     r13, rax",
    "add     dword [rbp-0x80], 0x40",
    "movsxd  rsi, dword [rbp-0x80]",
    "mov     dword [rbp-0xc0], r8d",
    "mov     qword [rbp-0x98], rsi",
    "mov     dword [rbp-0xb8], ecx",
    "mov     qword [rbp-0xb0], r9",
    "mov     byte [rbp-0xa0], dl",
    "test    r13, r13",
    "je      0x10f5a8",
    "lea     eax, [r14+0x2]",
    "mov     byte [rbx], dl",
    "mov     esi, r14d",
    "mov     rdi, r13",
    "cdqe    ",
    "mov     dword [rbp-0xa0], r8d",
    "mov     byte [r13+rax], 0x0",
    "lea     rax, [rel history_inhibit_expansion_function]",
    "mov     dword [rbp-0xb0], ecx",
    "call    qword [rax]",
    "mov     r8d, dword [rbp-0xa0]",
    "test    eax, eax",
    "je      0x10e30d",
    "mov     rdi, qword [rbp-0xc0]",
    "call    malloc",
    "mov     r13, rax",
    "jmp     0x10e2bd",
    "mov     rdi, r13",
    "call    realloc",
    "mov     r13, rax",
    "mov     eax, dword [rbp-0x8c]",
    "mov     qword [rbp-0x88], rcx",
    "sub     eax, r8d",
    "add     eax, 0x1",
    "movsxd  rbx, eax",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x88]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0x10fbf8",
    "mov     eax, dword [rbp-0x80]",
    "sub     eax, 0x1",
    "cmp     eax, r14d",
    "jle     0x10e63c",
    "lea     rax, [rel history_quotes_inhibit_expansion]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x88], eax",
    "test    eax, eax",
    "je      0x10e53c",
    "add     dword [rbp-0x80], 0x40",
    "movsxd  rsi, dword [rbp-0x80]",
    "mov     dword [rbp-0xa0], r8d",
    "mov     qword [rbp-0x98], rsi",
    "test    r13, r13",
    "je      0x10f470",
    "movsxd  rax, r14d",
    "mov     edx, 0x27",
    "mov     dword [rbp-0xcc], 0x0",
    "add     r14d, 0x1",
    "mov     word [r13+rax], dx",
    "jmp     0x10d695",
    "add     dword [rbp-0x80], 0x40",
    "movsxd  rsi, dword [rbp-0x80]",
    "mov     dword [rbp-0xa0], r8d",
    "mov     qword [rbp-0x98], rsi",
    "test    r13, r13",
    "je      0x10f30b",
    "mov     rcx, qword [rbp-0x78]",
    "movsxd  rdx, r8d",
    "lea     eax, [r14+0x1]",
    "movsxd  r14, r14d",
    "movzx   edx, byte [rcx+rdx]",
    "mov     byte [r13+r14], dl",
    "movsxd  rdx, eax",
    "mov     r14d, eax",
    "mov     byte [r13+rdx], 0x0",
    "jmp     0x10d695",
    "add     dword [rbp-0x80], 0x40",
    "movsxd  rsi, dword [rbp-0x80]",
    "mov     dword [rbp-0x88], r8d",
    "mov     qword [rbp-0x98], rsi",
    "test    r13, r13",
    "je      0x10f2f0",
    "movsxd  rax, r14d",
    "mov     edi, 0x5c",
    "mov     dword [rbp-0x88], 0x1",
    "add     r14d, 0x1",
    "mov     word [r13+rax], di",
    "jmp     0x10d695",
    "test    r13, r13",
    "je      0x11002d",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x88], r8d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x98]",
    "mov     qword [rbp-0xc0], rax",
    "jmp     0x10db62",
    "lea     r9, [r13+rdx+0x1]",
    "test    r13, r13",
    "jne     0x10e48e",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x88], r9",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, qword [rbp-0x78]",
    "lea     rsi, [rbp-0x6c]",
    "mov     edx, ebx",
    "mov     dword [rbp-0xa0], r8d",
    "call    get_history_event",
    "mov     r12d, dword [rbp-0x6c]",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r9, rax",
    "jmp     0x10e3de",
    "movsx   esi, r12b",
    "lea     rdi, [rel data_122ef2]  {\":$*%^\"}",
    "mov     dword [rbp-0xa0], r8d",
    "call    strchr",
    "mov     r8d, dword [rbp-0xa0]",
    "test    rax, rax",
    "je      0x10f363",
    "test    r13, r13",
    "je      0x10fe15",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0xb0], r8d",
    "mov     byte [rbp-0xa0], dl",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     eax, dword [rbp-0x80]",
    "mov     rcx, qword [rbp-0x98]",
    "mov     dword [rbp-0x80], r15d",
    "mov     qword [rbp-0xc0], rcx",
    "add     eax, 0x3f",
    "jmp     0x10d850",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     r8d, dword [rbp-0xc0]",
    "mov     ecx, dword [rbp-0xb8]",
    "mov     r9, qword [rbp-0xb0]",
    "movzx   edx, byte [rbp-0xa0]",
    "mov     r13, rax",
    "jmp     0x10f260",
    "mov     rdi, r13",
    "call    realloc",
    "movzx   edx, byte [rbp-0xa0]",
    "mov     r9, qword [rbp-0xb0]",
    "mov     ecx, dword [rbp-0xb8]",
    "mov     r8d, dword [rbp-0xc0]",
    "mov     r13, rax",
    "mov     byte [r13+r15], 0x0",
    "mov     byte [rbx], 0x0",
    "mov     r14d, dword [rbp-0xb0]",
    "jmp     0x10d695",
    "test    r13, r13",
    "je      0x10fd87",
    "mov     rsi, qword [rbp-0xc0]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0xc0]",
    "jmp     0x10dc76",
    "add     dword [rbp-0x80], 0x40",
    "movsxd  rsi, dword [rbp-0x80]",
    "mov     dword [rbp-0xa0], r8d",
    "mov     qword [rbp-0x98], rsi",
    "mov     qword [rbp-0x88], rcx",
    "test    r13, r13",
    "je      0x10f600",
    "mov     rdi, qword [rbp-0x78]",
    "lea     eax, [r14+0x1]",
    "movsxd  r14, r14d",
    "mov     dword [rbp-0x88], 0x0",
    "movzx   edx, byte [rdi+rcx]",
    "mov     byte [r13+r14], dl",
    "movsxd  rdx, eax",
    "mov     r14d, eax",
    "mov     byte [r13+rdx], 0x0",
    "jmp     0x10d695",
    "mov     eax, dword [rbp-0x80]",
    "sub     eax, 0x1",
    "cmp     eax, r14d",
    "jle     0x10f4a6",
    "xor     edx, edx",
    "test    r8d, r8d",
    "jle     0x10debf",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r13, rax",
    "jmp     0x10eef1",
    "mov     rdi, r13",
    "call    realloc",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r13, rax",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r13, rax",
    "jmp     0x10dfd1",
    "mov     rdi, r13",
    "call    realloc",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r13, rax",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     r8d, dword [rbp-0x88]",
    "mov     r13, rax",
    "jmp     0x10e071",
    "mov     rdi, r13",
    "call    realloc",
    "mov     r8d, dword [rbp-0x88]",
    "mov     r13, rax",
    "test    r9, r9",
    "je      0x10fc15",
    "cmp     r12b, 0x23",
    "jne     0x10e513",
    "lea     eax, [r8+0x1]",
    "lea     rsi, [rbp-0x68]",
    "mov     byte [rbp-0x62], 0x0",
    "mov     dword [rbp-0x6c], eax",
    "lea     rax, [rel history_expansion_char]",
    "lea     rdi, [rbp-0x64]",
    "mov     dword [rbp-0x68], 0x0",
    "movzx   edx, byte [rax]",
    "movzx   eax, dl",
    "mov     ah, dl",
    "xor     edx, edx",
    "mov     word [rbp-0x64], ax",
    "call    get_history_event",
    "mov     r12d, dword [rbp-0x6c]",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r9, rax",
    "test    r13, r13",
    "je      0x1100ee",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0xc0], r8d",
    "mov     dword [rbp-0xb8], ecx",
    "mov     qword [rbp-0xb0], r9",
    "mov     byte [rbp-0xa0], dl",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x98]",
    "lea     rbx, [r13+r9]",
    "mov     qword [rbp-0xc0], rax",
    "jmp     0x10d87a",
    "movsxd  r14, r14d",
    "mov     rdi, qword [rbp-0xc0]",
    "mov     rsi, r12",
    "lea     rcx, [r14+rax]",
    "mov     rdx, rcx",
    "sub     rdx, rdi",
    "cmp     rdx, rax",
    "cmovb   rdx, rax",
    "mov     rax, rdi",
    "lea     rdi, [r13+r14]",
    "sub     rax, rcx",
    "lea     rcx, [rdx+rax]",
    "lea     rdx, [rbx+0x1]",
    "call    __memcpy_chk",
    "mov     rdi, r12",
    "call    free",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     rcx, qword [rbp-0x88]",
    "mov     r13, rax",
    "jmp     0x10e67b",
    "mov     rdi, r13",
    "call    realloc",
    "mov     rcx, qword [rbp-0x88]",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r13, rax",
    "add     dword [rbp-0x80], 0x40",
    "movsxd  rsi, dword [rbp-0x80]",
    "mov     dword [rbp-0x90], r8d",
    "mov     qword [rbp-0x98], rsi",
    "mov     qword [rbp-0xa0], rcx",
    "test    r13, r13",
    "je      0x10f80b",
    "mov     rdi, qword [rbp-0x78]",
    "lea     eax, [r14+0x1]",
    "movsxd  r14, r14d",
    "mov     dword [rbp-0x90], 0x0",
    "mov     dword [rbp-0xcc], 0x1",
    "movzx   edx, byte [rdi+rcx]",
    "mov     byte [r13+r14], dl",
    "movsxd  rdx, eax",
    "mov     r14d, eax",
    "mov     byte [r13+rdx], 0x0",
    "jmp     0x10d695",
    "mov     rdi, qword [rbp-0x78]",
    "lea     eax, [r8+0x1]",
    "lea     rsi, [rbp-0x70]",
    "mov     qword [rbp-0xa0], rcx",
    "mov     dword [rbp-0x88], r8d",
    "mov     dword [rbp-0x70], eax",
    "call    sub_104b00",
    "mov     r12d, dword [rbp-0x70]",
    "mov     r8d, dword [rbp-0x88]",
    "mov     ebx, r12d",
    "sub     ebx, r8d",
    "add     ebx, 0x2",
    "movsxd  rbx, ebx",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rcx, qword [rbp-0xa0]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x10fee3",
    "mov     rax, qword [rbp-0x78]",
    "xor     edx, edx",
    "cmp     byte [rax+rcx-0x1], 0x24",
    "sete    dl",
    "test    r13, r13",
    "je      0x10fdb7",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0xa0], r8d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x98]",
    "mov     qword [rbp-0xc0], rax",
    "jmp     0x10dd15",
    "test    r13, r13",
    "je      0x10fc29",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0xa0], r8d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x98]",
    "mov     qword [rbp-0xc0], rax",
    "jmp     0x10dd7f",
    "test    r13, r13",
    "je      0x10fd5f",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x88], r8d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x98]",
    "mov     qword [rbp-0xc0], rax",
    "jmp     0x10da11",
    "mov     r15, qword [rbp-0xc8]",
    "xor     ecx, ecx",
    "mov     edx, r12d",
    "mov     esi, r8d",
    "jmp     0x10f694",
    "mov     rdi, qword [rbp-0x78]",
    "movsxd  rax, r12d",
    "xor     esi, esi",
    "mov     ecx, r12d",
    "movzx   eax, byte [rdi+rax]",
    "cmp     al, 0x3a",
    "jne     0x10e40c",
    "lea     r12d, [r8+0x2]",
    "mov     r9, r13",
    "mov     dword [rbp-0x6c], r12d",
    "jmp     0x10e3de",
    "test    r13, r13",
    "je      0x10ffd0",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0xa0], r8d",
    "mov     qword [rbp-0x88], rcx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x98]",
    "mov     qword [rbp-0xc0], rax",
    "jmp     0x10e4b5",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     r8d, dword [rbp-0x90]",
    "mov     rcx, qword [rbp-0xa0]",
    "mov     r13, rax",
    "jmp     0x10f4e5",
    "mov     rdi, r13",
    "call    realloc",
    "mov     rcx, qword [rbp-0xa0]",
    "mov     r8d, dword [rbp-0x90]",
    "mov     r13, rax",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x88], rcx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x78]",
    "mov     rdx, rbx",
    "mov     rdi, r15",
    "lea     rsi, [rax+rcx]",
    "mov     rcx, rbx",
    "call    __strncpy_chk",
    "mov     byte [r15+rbx-0x1], 0x0",
    "mov     rdi, r15",
    "call    strlen",
    "mov     rdx, rax",
    "lea     ebx, [r14+rax]",
    "mov     eax, dword [rbp-0x80]",
    "cmp     ebx, eax",
    "jge     0x10f546",
    "mov     rdi, qword [rbp-0x78]",
    "call    sub_104ee0",
    "mov     rbx, rax",
    "mov     rax, qword [rbp-0xb8]",
    "test    rax, rax",
    "jne     0x10e824",
    "cmp     al, 0x39",
    "jg      0x10f3ba",
    "lea     ecx, [r12+0x1]",
    "mov     esi, 0x1",
    "movsxd  rax, ecx",
    "movzx   eax, byte [rdi+rax]",
    "test    r13, r13",
    "je      0x10fddf",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x90], r8d",
    "mov     qword [rbp-0xa0], rcx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x98]",
    "mov     qword [rbp-0xc0], rax",
    "jmp     0x10e54b",
    "mov     edi, dword [rbp-0x80]",
    "mov     eax, ebx",
    "mov     qword [rbp-0x88], rdx",
    "sub     eax, edi",
    "and     eax, 0xffffff80",
    "lea     eax, [rdi+rax+0x80]",
    "movsxd  rsi, eax",
    "mov     dword [rbp-0x80], eax",
    "mov     qword [rbp-0x98], rsi",
    "test    r13, r13",
    "je      0x10f879",
    "mov     rax, qword [rbp-0x98]",
    "movsxd  r14, r14d",
    "mov     rsi, r15",
    "lea     rdi, [r13+r14]",
    "cmp     r14, rax",
    "mov     rcx, rax",
    "cmovae  rcx, r14",
    "add     rdx, 0x1",
    "sub     rcx, r14",
    "mov     r14d, ebx",
    "call    __memcpy_chk",
    "mov     rdi, r15",
    "call    free",
    "mov     r8d, r12d",
    "mov     dword [rbp-0xcc], 0x0",
    "mov     dword [rbp-0x88], 0x0",
    "jmp     0x10d695",
    "mov     rdi, rax",
    "call    free",
    "jmp     0x10e82c",
    "cmp     al, 0x5e",
    "jne     0x10e6e2",
    "cmp     al, 0x23",
    "jle     0x10e6e2",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     rdx, qword [rbp-0x88]",
    "mov     r13, rax",
    "jmp     0x10f586",
    "mov     rdi, r13",
    "call    realloc",
    "mov     rdx, qword [rbp-0x88]",
    "mov     r13, rax",
    "mov     rax, qword [rbp-0x78]",
    "cmp     rax, r15",
    "je      0x10e854",
    "mov     rdi, r13",
    "call    free",
    "mov     rax, qword [rbp-0xa8]",
    "mov     qword [rax], rbx",
    "test    r13, r13",
    "je      0x10e843",
    "{Case 0x2-0x5, 0x7-0x8, 0xa-0xb}",
    "mov     rdi, r9",
    "mov     qword [rbp-0xa0], r9",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0xa0]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0x11009d",
    "mov     rdi, qword [rbp-0x78]",
    "add     ecx, 0x1",
    "mov     esi, 0x1",
    "movsxd  rax, ecx",
    "movzx   eax, byte [rdi+rax]",
    "jmp     0x10e5b9",
    "lea     edx, [rax-0x24]",
    "cmp     dl, 0x15",
    "ja      0x10e6e2",
    "test    r13, r13",
    "je      0x10fd37",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x88], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x98]",
    "mov     qword [rbp-0xc0], rax",
    "jmp     0x10df49",
    "mov     eax, 0xffffffff",
    "jmp     0x10dbdf",
    "mov     rdi, rax",
    "call    free",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r9",
    "mov     rdi, r12",
    "call    __strcpy_chk",
    "mov     qword [rbp-0xa0], r12",
    "cmp     al, 0x5e",
    "je      0x10f3da",
    "lea     rdi, [rel jump_table_138ba8]",
    "movzx   edx, dl",
    "movsxd  rdx, dword [rdi+rdx*4]",
    "add     rdx, rdi",
    "jmp     rdx",
    "mov     dword [rbp-0xe4], 0x0",
    "lea     r8d, [rdx-0x1]",
    "mov     dword [rbp-0x6c], r8d",
    "jmp     0x10e932",
    "xor     edi, edi",
    "mov     dword [rbp-0x110], r14d",
    "mov     r8d, edx",
    "mov     r12, r13",
    "mov     dword [rbp-0x10c], edx",
    "lea     rbx, [rel jump_table_138c00]",
    "mov     dword [rbp-0xe4], 0x0",
    "mov     dword [rbp-0xd8], 0x0",
    "mov     dword [rbp-0xb0], 0x0",
    "mov     dword [rbp-0xe8], edi",
    "nop     word [rax+rax]",
    "lea     edx, [rcx+0x1]",
    "cmp     al, 0x5e",
    "je      0x10f6c7",
    "cmp     al, 0x2a",
    "je      0x10f3da",
    "{Case 0xc-0x15}",
    "test    esi, esi",
    "je      0x10e6e2",
    "{Case 0x0}",
    "add     ecx, 0x1",
    "mov     rdx, r9",
    "mov     esi, 0x24",
    "mov     edi, 0x24",
    "mov     qword [rbp-0xa0], r9",
    "mov     dword [rbp-0x6c], ecx",
    "call    history_arg_extract",
    "mov     r9, qword [rbp-0xa0]",
    "mov     rbx, rax",
    "lea     rax, [rel data_16b5e4]",
    "cmp     rbx, rax",
    "je      0x10f6b8",
    "{Case 0x6}",
    "add     ecx, 0x1",
    "mov     rdx, r9",
    "mov     esi, 0x24",
    "mov     edi, 0x1",
    "mov     dword [rbp-0x6c], ecx",
    "call    history_arg_extract",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x10e5ea",
    "{Case 0x1}",
    "mov     rbx, qword [rel data_16b5e8]",
    "add     ecx, 0x1",
    "mov     dword [rbp-0x6c], ecx",
    "test    rbx, rbx",
    "je      0x10edc5",
    "{Case 0x9}",
    "xor     esi, esi",
    "mov     rdi, qword [rbp-0xa0]",
    "mov     dword [rbp-0xb0], r8d",
    "call    strlen",
    "mov     r8d, dword [rbp-0xb0]",
    "cmp     eax, 0x7f",
    "mov     r12, rax",
    "jg      0x10f786",
    "mov     rax, qword [rbp-0x78]",
    "add     r8d, 0x1",
    "mov     dword [rbp-0xb0], 0x1",
    "mov     dword [rbp-0x6c], r8d",
    "movzx   eax, byte [rax+rdx+0x2]",
    "jmp     0x10e7c0",
    "cmp     al, 0x61",
    "je      0x10eea0",
    "mov     dword [rbp-0x6c], edx",
    "cmp     esi, 0x1",
    "jg      0x10f682",
    "mov     edi, esi",
    "mov     dword [rbp-0x6c], edx",
    "mov     esi, 0x24",
    "jmp     0x10e5d6",
    "cmp     al, 0x2d",
    "je      0x10ee2d",
    "lea     edx, [rcx+0x1]",
    "mov     r8, qword [rbp-0x78]",
    "xor     esi, esi",
    "movsxd  rdx, edx",
    "mov     r15, qword [rbp-0xc8]",
    "mov     edx, dword [rbp-0x6c]",
    "mov     r9d, r12d",
    "jmp     0x10f68c",
    "test    rbx, rbx",
    "jne     0x10e5fa",
    "lea     rax, [rel data_16b5e4]",
    "cmp     rbx, rax",
    "je      0x10f6b8",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x10ff94",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x10ffac",
    "cmp     dl, 0x24",
    "je      0x10faba",
    "lea     eax, [rcx+0x2]",
    "xor     ecx, ecx",
    "cdqe    ",
    "mov     rdi, qword [rbp-0xb8]",
    "lea     ebx, [rax+0x2]",
    "movsxd  rbx, ebx",
    "test    rdi, rdi",
    "je      0x10fb88",
    "mov     rsi, qword [rbp-0xa0]",
    "mov     rdi, qword [rbp-0xb8]",
    "lea     rdx, [rax+0x1]",
    "mov     ecx, 0x80",
    "mov     dword [rbp-0xb0], r8d",
    "call    __memcpy_chk",
    "mov     r8d, dword [rbp-0xb0]",
    "cmp     al, 0x26",
    "je      0x10ef84",
    "cmp     al, 0x47",
    "jne     0x10e7c0",
    "mov     r15, qword [rbp-0xc8]",
    "mov     r9d, r12d",
    "mov     edi, esi",
    "mov     esi, 0x1",
    "jmp     0x10e5d6",
    "mov     rdx, r9",
    "call    history_arg_extract",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x10f6b8",
    "mov     r10, qword [rbp-0x78]",
    "lea     eax, [rcx+0x1]",
    "movsxd  rdx, eax",
    "movzx   edx, byte [r10+rdx]",
    "lea     edi, [rdx-0x30]",
    "cmp     dil, 0x9",
    "ja      0x10f92d",
    "mov     dword [rbp-0x6c], ecx",
    "mov     edi, esi",
    "sub     eax, 0x30",
    "lea     ecx, [rsi+rsi*4]",
    "movsx   eax, al",
    "lea     esi, [rax+rcx*2]",
    "movzx   eax, byte [r8+rdx]",
    "mov     rcx, rdx",
    "add     rdx, 0x1",
    "lea     edi, [rax-0x30]",
    "cmp     dil, 0x9",
    "jbe     0x10e598",
    "mov     ecx, 0x1",
    "mov     esi, r9d",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x10fbaa",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [rbx], 0x0",
    "jmp     0x10e5fa",
    "mov     qword [rbp-0xa0], rax",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, rbx",
    "mov     rdx, r12",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     rbx, rax",
    "jmp     0x10e5fa",
    "lea     edx, [rcx+0x2]",
    "jmp     0x10f3e5",
    "cmp     dl, 0x5e",
    "je      0x10f677",
    "sub     edx, 0x30",
    "lea     ecx, [rcx+rcx*4]",
    "mov     rdi, rax",
    "movsx   edx, dl",
    "lea     ecx, [rdx+rcx*2]",
    "movzx   edx, byte [r10+rax]",
    "add     rax, 0x1",
    "lea     r8d, [rdx-0x30]",
    "cmp     r8b, 0x9",
    "jbe     0x10ee50",
    "mov     dword [rbp-0x6c], edi",
    "mov     edx, edi",
    "mov     edi, ecx",
    "shr     edi, 0x1f",
    "cmp     ecx, 0x24",
    "sete    al",
    "or      al, dil",
    "jne     0x10ee8f",
    "mov     rdi, rbx",
    "mov     dword [rbp-0xb0], r8d",
    "call    malloc",
    "mov     r8d, dword [rbp-0xb0]",
    "mov     qword [rbp-0xb8], rax",
    "jmp     0x10f7b2",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r8d, dword [rbp-0xb0]",
    "mov     qword [rbp-0xb8], rax",
    "mov     rdi, qword [rbp-0xb8]",
    "mov     dword [rbp-0xa0], r8d",
    "call    free",
    "mov     edi, dword [rbp-0xe4]",
    "mov     r8d, dword [rbp-0xa0]",
    "add     dword [rbp-0xd0], edi",
    "jmp     0x10d695",
    "mov     rdi, qword [rbp-0xb8]",
    "mov     dword [rbp-0xa0], r8d",
    "call    strlen",
    "mov     r8d, dword [rbp-0xa0]",
    "lea     ebx, [r14+rax]",
    "cmp     dword [rbp-0x80], ebx",
    "mov     r12, rax",
    "jle     0x10f622",
    "add     dword [rbp-0x6c], 0x2",
    "sub     eax, 0x65",
    "cmp     al, 0x13",
    "ja      0x10e7e0",
    "mov     rax, qword [rbp-0x78]",
    "add     r8d, 0x1",
    "mov     dword [rbp-0xd8], 0x1",
    "mov     dword [rbp-0x6c], r8d",
    "movzx   eax, byte [rax+rdx+0x2]",
    "nop     dword [rax+rax]",
    "mov     qword [rbp-0xa0], rax",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, rcx",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "call    __strcpy_chk",
    "mov     rdi, rbx",
    "mov     qword [rbp-0xa0], rax",
    "call    free",
    "jmp     0x10e725",
    "lea     edx, [rcx+0x2]",
    "mov     dword [rbp-0x6c], edx",
    "cmp     esi, 0x1",
    "jle     0x10f6cf",
    "mov     edi, esi",
    "mov     dword [rbp-0x6c], eax",
    "mov     esi, 0xffffffff",
    "jmp     0x10e5d6",
    "mov     edi, esi",
    "mov     esi, ecx",
    "jmp     0x10e5d6",
    "cmp     ecx, esi",
    "jl      0x10f682",
    "mov     rdi, qword [rbp-0xb8]",
    "mov     dword [rbp-0xb0], r8d",
    "test    rdi, rdi",
    "je      0x3252a",
    "mov     rsi, rbx",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, qword [rbp-0xa0]",
    "lea     rdx, [r12+0x1]",
    "mov     rcx, rbx",
    "call    __memcpy_chk",
    "mov     r8d, dword [rbp-0xb0]",
    "jmp     0x10e982",
    "mov     ecx, dword [rbp-0x80]",
    "mov     eax, ebx",
    "sub     eax, ecx",
    "and     eax, 0xffffff80",
    "lea     eax, [rcx+rax+0x80]",
    "movsxd  rsi, eax",
    "mov     dword [rbp-0x80], eax",
    "mov     qword [rbp-0x98], rsi",
    "test    r13, r13",
    "je      0x10f9a9",
    "mov     rax, qword [rbp-0x98]",
    "movsxd  r14, r14d",
    "mov     rsi, qword [rbp-0xb8]",
    "lea     rdx, [r12+0x1]",
    "lea     rdi, [r13+r14]",
    "mov     dword [rbp-0xa0], r8d",
    "cmp     r14, rax",
    "mov     rcx, rax",
    "cmovae  rcx, r14",
    "sub     rcx, r14",
    "mov     r14d, ebx",
    "call    __memcpy_chk",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r8d, dword [rbp-0x10c]",
    "mov     edx, dword [rbp-0x6c]",
    "mov     r13, r12",
    "mov     ecx, 0x4",
    "mov     r15, qword [rbp-0xc8]",
    "mov     esi, r8d",
    "jmp     0x10e7f8",
    "mov     rdi, qword [rbp-0xa0]",
    "mov     dword [rbp-0xf0], r9d",
    "call    strlen",
    "mov     r9d, dword [rbp-0xf0]",
    "mov     dword [rbp-0xe0], eax",
    "cmp     r9d, eax",
    "jg      0x10fac7",
    "{Case 0x1-0x2, 0x4-0xa, 0x10-0x12}",
    "mov     eax, dword [rbp-0x6c]",
    "mov     r15, qword [rbp-0xc8]",
    "mov     r13, r12",
    "mov     ecx, 0x3",
    "lea     edx, [rax+0x2]",
    "lea     esi, [rax+0x1]",
    "movzx   eax, al",
    "movsxd  rax, dword [rbx+rax*4]",
    "add     rax, rbx",
    "jmp     rax",
    "movsxd  rdx, dword [rbp-0x6c]",
    "mov     rax, qword [rbp-0x78]",
    "cmp     byte [rax+rdx], 0x3a",
    "jne     0x10f982",
    "mov     rdi, qword [rbp-0xa0]",
    "mov     dword [rbp-0xb0], r8d",
    "call    free",
    "mov     rax, qword [rbp-0xb8]",
    "add     dword [rbp-0xd4], 0x1",
    "mov     r8d, dword [rbp-0xb0]",
    "cmp     byte [rax], 0x0",
    "je      0x10ea17",
    "mov     rdi, qword [rbp-0x98]",
    "mov     dword [rbp-0xa0], r8d",
    "call    malloc",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r13, rax",
    "jmp     0x10f65b",
    "mov     rdi, r13",
    "call    realloc",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     r13, rax",
    "mov     rdi, qword [rbp-0x78]",
    "call    sub_104ee0",
    "mov     rbx, rax",
    "mov     rax, qword [rbp-0xb8]",
    "test    rax, rax",
    "je      0x10e818",
    "mov     edx, dword [rbp-0x6c]",
    "mov     rdi, qword [rbp-0x78]",
    "mov     ecx, 0x2",
    "mov     r13, r12",
    "mov     r8d, dword [rbp-0x10c]",
    "mov     r15, qword [rbp-0xc8]",
    "mov     esi, r8d",
    "call    sub_104ee0",
    "mov     rbx, rax",
    "mov     rax, qword [rbp-0xb8]",
    "test    rax, rax",
    "je      0x10fb03",
    "movzx   eax, byte [rbp-0xd8]",
    "xor     r13d, r13d",
    "mov     dword [rbp-0xf0], 0x0",
    "mov     ecx, 0x1",
    "mov     r15, qword [rbp-0xa0]",
    "mov     qword [rbp-0x120], r12",
    "mov     r14d, r13d",
    "mov     r12d, ecx",
    "and     eax, 0x1",
    "mov     byte [rbp-0xf5], al",
    "mov     rax, qword [rbp-0xa0]",
    "test    rax, rax",
    "je      0x10e82c",
    "mov     rdi, rax",
    "call    free",
    "{Case 0x13}",
    "mov     dword [rbp-0xe8], 0x78",
    "mov     eax, dword [rbp-0x6c]",
    "lea     r8d, [rax+0x2]",
    "nop     dword [rax]",
    "{Case 0xf}",
    "mov     rdi, qword [rbp-0xa0]",
    "mov     esi, 0x2f",
    "call    strrchr",
    "lea     r13, [rax+0x1]",
    "test    rax, rax",
    "je      0x10eb42",
    "{Case 0xd}",
    "mov     esi, 0x2e",
    "{Case 0xc}",
    "mov     dword [rbp-0xe8], 0x71",
    "mov     eax, dword [rbp-0x6c]",
    "lea     r8d, [rax+0x2]",
    "jmp     0x10e878",
    "{Case 0xb}",
    "mov     dword [rbp-0xe4], 0x1",
    "mov     eax, dword [rbp-0x6c]",
    "lea     r8d, [rax+0x2]",
    "jmp     0x10e878",
    "{Case 0x3}",
    "mov     esi, 0x2f",
    "jmp     0x10eace",
    "{Case 0x0}",
    "mov     rdi, qword [rbp-0xa0]",
    "mov     esi, 0x2e",
    "call    strrchr",
    "mov     r13, rax",
    "test    rax, rax",
    "jne     0x10ea60",
    "{Case 0xe}",
    "mov     r13d, dword [rbp-0x6c]",
    "mov     rdi, qword [rbp-0x78]",
    "lea     r8d, [r13+0x2]",
    "mov     dword [rbp-0xe0], r8d",
    "call    strlen",
    "mov     r8d, dword [rbp-0xe0]",
    "cmp     r8d, eax",
    "jge     0x10e878",
    "test    r13, r13",
    "je      0x110055",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0xa0], r8d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x98]",
    "mov     qword [rbp-0xc0], rax",
    "jmp     0x10e9d9",
    "mov     rdi, qword [rbp-0xa0]",
    "call    free",
    "jmp     0x10e82c",
    "mov     rdi, rax",
    "call    free",
    "test    r9d, r9d",
    "je      0x10f08b",
    "cmp     byte [rbp-0xf5], 0x0",
    "jne     0x10f1a5",
    "mov     rax, qword [rbp-0x78]",
    "movzx   eax, byte [rax+rdx+0x1]",
    "cmp     al, 0x67",
    "je      0x10eea0",
    "mov     edi, dword [rbp-0xe8]",
    "sub     r8d, 0x1",
    "mov     r14d, dword [rbp-0x110]",
    "mov     r13, r12",
    "mov     dword [rbp-0x6c], r8d",
    "test    edi, edi",
    "je      0x10e932",
    "mov     eax, dword [rbp-0x6c]",
    "lea     r8d, [rax+0x2]",
    "jmp     0x10e878",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0xe0], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0xe0]",
    "test    rax, rax",
    "je      0x10fcc9",
    "mov     dword [rbp-0x6c], r8d",
    "mov     byte [rax], 0x0",
    "jmp     0x10e878",
    "mov     rdi, qword [rbp-0xa0]",
    "call    strrchr",
    "mov     edi, dword [rbp-0x6c]",
    "lea     r8d, [rdi+0x2]",
    "test    rax, rax",
    "je      0x10e878",
    "mov     dword [rbp-0xf0], r8d",
    "call    __ctype_get_mb_cur_max",
    "mov     rcx, qword [rbp-0x78]",
    "movsxd  rdx, r13d",
    "lea     rcx, [rcx+rdx+0x2]",
    "mov     r14, rcx",
    "cmp     rax, 0x1",
    "jbe     0x10ebb5",
    "mov     eax, dword [rel data_16b5c8]",
    "mov     edi, dword [rbp-0xe0]",
    "mov     dword [rbp-0xf4], eax",
    "sub     eax, r9d",
    "add     eax, edi",
    "lea     r12d, [rax+0x1]",
    "mov     dword [rbp-0x100], eax",
    "movsxd  r12, r12d",
    "mov     rdi, r12",
    "call    malloc",
    "mov     qword [rbp-0xa0], rax",
    "test    rax, rax",
    "je      0x11007d",
    "mov     rsi, qword [rel data_16b5d8]",
    "lea     rdi, [r15+r13]",
    "movzx   eax, byte [rsi]",
    "cmp     byte [rdi], al",
    "je      0x10f071",
    "movzx   eax, byte [r15+r13]",
    "test    al, al",
    "je      0x10f1e4",
    "cmp     edi, 0x71",
    "je      0x10f8f8",
    "mov     rsi, rdx",
    "mov     qword [rbp-0xf0], rax",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rcx, rdx",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "call    __memcpy_chk",
    "mov     r9, rax",
    "mov     rdi, qword [rbp-0xa0]",
    "mov     qword [rbp-0xe0], r9",
    "call    free",
    "mov     eax, dword [rbp-0x6c]",
    "mov     r9, qword [rbp-0xe0]",
    "lea     r8d, [rax+0x2]",
    "mov     qword [rbp-0xa0], r9",
    "jmp     0x10e878",
    "movsx   eax, byte [r14]",
    "mov     dword [rbp-0xe0], eax",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     r8d, dword [rbp-0xf0]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "mov     dword [rbp-0xe0], eax",
    "je      0x10fb35",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, qword [rbp-0xa0]",
    "mov     rcx, r12",
    "mov     rdx, r13",
    "mov     rsi, r15",
    "call    __strncpy_chk",
    "cmp     r12, r13",
    "mov     rcx, r13",
    "mov     rax, qword [rbp-0xa0]",
    "cmovae  rcx, r12",
    "movsxd  rdi, dword [rbp-0xf4]",
    "mov     rsi, qword [rel data_16b5d0]",
    "add     rax, r13",
    "sub     rcx, r13",
    "mov     rdx, rdi",
    "mov     qword [rbp-0x108], rdi",
    "mov     rdi, rax",
    "call    __strncpy_chk",
    "mov     rdx, qword [rbp-0x108]",
    "movsxd  rsi, dword [rel data_16b5e0]",
    "mov     rcx, r12",
    "lea     rdi, [rdx+r13]",
    "mov     edx, dword [rbp-0xe0]",
    "lea     eax, [r14+rsi]",
    "mov     dword [rbp-0xe0], esi",
    "cmp     r12, rdi",
    "mov     r12, qword [rbp-0xa0]",
    "cmovb   rcx, rdi",
    "sub     edx, eax",
    "add     rsi, r13",
    "add     rsi, r15",
    "movsxd  rdx, edx",
    "sub     rcx, rdi",
    "add     rdi, r12",
    "call    __strncpy_chk",
    "movsxd  rax, dword [rbp-0x100]",
    "mov     rdi, r15",
    "mov     byte [r12+rax], 0x0",
    "call    free",
    "mov     r8d, dword [rbp-0xb0]",
    "mov     r9d, dword [rbp-0xe0]",
    "test    r8d, r8d",
    "jne     0x10f37d",
    "movsxd  rdx, r9d",
    "mov     dword [rbp-0xa0], r9d",
    "call    strncmp",
    "mov     r9d, dword [rbp-0xa0]",
    "test    eax, eax",
    "jne     0x10f027",
    "mov     r9d, dword [rel data_16b5e0]",
    "mov     esi, r14d",
    "mov     rdi, r15",
    "mov     dword [rbp-0xa0], r9d",
    "call    sub_104b60",
    "mov     r9d, dword [rbp-0xa0]",
    "mov     dword [rbp-0xf0], eax",
    "jmp     0x10f010",
    "lea     r8d, [r14+0x1]",
    "movsxd  r13, r8d",
    "jmp     0x10f1c3",
    "mov     rbx, qword [rbp-0xa0]",
    "mov     dword [rbp-0xb0], r8d",
    "mov     rdi, rbx",
    "call    sh_single_quote",
    "test    rbx, rbx",
    "mov     r8d, dword [rbp-0xb0]",
    "mov     r12, rax",
    "jne     0x10e911",
    "cmp     edi, 0x78",
    "je      0x10f9cb",
    "cmp     qword [rel data_16b5d8], 0x0",
    "jne     0x10ec0d",
    "mov     rdi, qword [rel data_16b5d8]",
    "test    rdi, rdi",
    "je      0x10ec06",
    "mov     r15, qword [rbp-0x118]",
    "mov     rdi, qword [rbp-0x78]",
    "mov     esi, r8d",
    "mov     rdx, r15",
    "call    _rl_adjust_point",
    "mov     rsi, r15",
    "mov     rdi, r14",
    "call    _rl_get_char_len",
    "sub     eax, 0x1",
    "jg      0x10ebbf",
    "mov     r15, qword [rbp-0xa0]",
    "mov     eax, dword [rbp-0xf4]",
    "mov     dword [rbp-0x100], r9d",
    "xor     r12d, r12d",
    "mov     rdi, r15",
    "lea     r14d, [rax+r14-0x1]",
    "call    strlen",
    "add     dword [rbp-0xb0], 0x1",
    "mov     r9d, dword [rbp-0x100]",
    "mov     dword [rbp-0xe0], eax",
    "jmp     0x10f02e",
    "mov     edi, dword [rbp-0xd8]",
    "test    edi, edi",
    "jne     0x10f508",
    "movsxd  r13, r14d",
    "cmp     dword [rbp-0xf0], r14d",
    "jge     0x10f010",
    "cmp     dword [rbp-0xb0], 0x1",
    "mov     ecx, r12d",
    "mov     qword [rbp-0xa0], r15",
    "mov     r12, qword [rbp-0x120]",
    "mov     r8d, dword [rbp-0x6c]",
    "jle     0x10fc51",
    "lea     edx, [rax-0x9]",
    "cmp     dl, 0x1",
    "jbe     0x10f1d3",
    "mov     rdi, qword [rbp-0xa0]",
    "mov     dword [rbp-0xb0], r8d",
    "call    free",
    "mov     qword [rbp-0xa0], r12",
    "mov     r8d, dword [rbp-0xb0]",
    "mov     qword [rbp-0xa0], rax",
    "jmp     0x10e932",
    "mov     rcx, qword [rbp-0xa0]",
    "test    rcx, rcx",
    "je      0x10feae",
    "mov     rdi, qword [rbp-0xa0]",
    "mov     dword [rbp-0xb0], r8d",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r8d, dword [rbp-0xb0]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0x110006",
    "mov     rdi, qword [rel data_16b5d0]",
    "test    rdi, rdi",
    "je      0x10ec1e",
    "mov     r13, qword [rel data_16b5f0]",
    "test    r13, r13",
    "je      0x10f973",
    "mov     qword [rel data_16b5d8], r13",
    "call    free",
    "lea     rax, [rbp-0x6c]",
    "mov     edx, dword [rbp-0xe0]",
    "mov     rdi, qword [rbp-0x78]",
    "xor     ecx, ecx",
    "add     r13d, 0x3",
    "lea     r8, [rel data_16b5e0]",
    "mov     rsi, rax",
    "mov     r15, rax",
    "mov     dword [rbp-0x6c], r13d",
    "call    sub_1071f0",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x10f94e",
    "movsx   eax, byte [r14]",
    "mov     dword [rbp-0xe0], eax",
    "jmp     0x10ebbf",
    "add     r14d, 0x1",
    "mov     edi, dword [rbp-0xe0]",
    "lea     eax, [r14+r9]",
    "cmp     eax, edi",
    "jle     0x10eff7",
    "mov     r15, qword [rbp-0xa0]",
    "mov     dword [rbp-0xf4], r9d",
    "xor     r12d, r12d",
    "mov     rdi, r15",
    "call    strlen",
    "mov     r14d, dword [rbp-0xf0]",
    "mov     r9d, dword [rbp-0xf4]",
    "mov     dword [rbp-0xe0], eax",
    "jmp     0x10f02e",
    "mov     r12, qword [rbp-0x120]",
    "mov     r8d, dword [rbp-0x6c]",
    "jmp     0x10e87c",
    "test    ecx, ecx",
    "je      0x10e87c",
    "mov     dword [rbp-0xb0], 0x0",
    "jmp     0x10e87c",
    "lea     rdx, [r13+0x1]",
    "movzx   eax, byte [r15+rdx-0x1]",
    "test    al, al",
    "jne     0x10f1c0",
    "cmp     al, 0x20",
    "jne     0x10f53a",
    "mov     edi, 0x3",
    "mov     dword [rbp-0xb0], r8d",
    "call    malloc",
    "mov     r8d, dword [rbp-0xb0]",
    "test    rax, rax",
    "je      0x10fe67",
    "movzx   edx, byte [rcx]",
    "mov     eax, 0x3",
    "test    dl, dl",
    "jne     0x10fa10",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, qword [rbp-0xa0]",
    "mov     rdx, rbx",
    "mov     rdi, r12",
    "mov     dword [rbp-0xb0], r8d",
    "call    __strcpy_chk",
    "mov     r8d, dword [rbp-0xb0]",
    "mov     rdi, qword [rbp-0x78]",
    "mov     edx, dword [rbp-0xe0]",
    "mov     rsi, r15",
    "lea     r8, [rel data_16b5c8]",
    "mov     ecx, 0x1",
    "call    sub_1071f0",
    "mov     esi, 0x26",
    "mov     rdi, rax",
    "mov     qword [rbp-0xf0], rax",
    "mov     qword [rel data_16b5d0], rax",
    "call    strchr",
    "test    rax, rax",
    "je      0x10ef88",
    "call    free",
    "xor     r9d, r9d",
    "mov     dword [rel data_16b5e0], r9d",
    "jmp     0x10ec0d",
    "cmp     byte [r13], 0x0",
    "jne     0x10ff07",
    "mov     rax, qword [rbp-0x78]",
    "movsxd  rdx, r8d",
    "cmp     byte [rax+rdx], 0x3a",
    "je      0x10e780",
    "mov     esi, r8d",
    "mov     rdi, qword [rbp-0x78]",
    "mov     ecx, 0x2",
    "mov     r13, r12",
    "mov     r8d, dword [rbp-0x10c]",
    "mov     edx, esi",
    "mov     r15, qword [rbp-0xc8]",
    "mov     esi, r8d",
    "call    sub_104ee0",
    "mov     rbx, rax",
    "mov     rax, qword [rbp-0xb8]",
    "test    rax, rax",
    "je      0x10fc97",
    "mov     r13, rdx",
    "mov     r14d, r13d",
    "lea     r14d, [r13-0x1]",
    "movsxd  r13, r14d",
    "jmp     0x10f1e4",
    "mov     ebx, 0x3",
    "mov     byte [rax], 0x27",
    "lea     rdx, [rax+0x1]",
    "mov     qword [rbp-0xa0], rax",
    "mov     word [rdx], 0x27",
    "jmp     0x10e932",
    "cmp     dl, 0x27",
    "jne     0x10f9f0",
    "jmp     0x10fa1a",
    "mov     r9d, dword [rel data_16b5e0]",
    "test    r9d, r9d",
    "je      0x10fb14",
    "mov     r13d, dword [rel data_16b5c8]",
    "mov     eax, dword [rel data_16b5e0]",
    "add     eax, r13d",
    "mov     dword [rbp-0xf4], eax",
    "cdqe    ",
    "mov     rdi, rax",
    "mov     r14, rax",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x10fcfe",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x10ff73",
    "mov     rdi, qword [rbp-0xa0]",
    "test    rdi, rdi",
    "je      0x10e82c",
    "mov     rdi, rax",
    "call    free",
    "lea     esi, [rdx-0x9]",
    "cmp     sil, 0x1",
    "jbe     0x10f9fe",
    "add     eax, 0x3",
    "jmp     0x10fa01",
    "movsxd  rbx, eax",
    "mov     dword [rbp-0xb0], r8d",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r8d, dword [rbp-0xb0]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0x10fe6c",
    "mov     qword [rbp-0xe0], rax",
    "mov     rsi, r14",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     dword [rbp-0xe0], 0x0",
    "xor     eax, eax",
    "test    r13d, r13d",
    "jle     0x10f837",
    "mov     qword [rbp-0xf0], rax",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, rcx",
    "mov     rdx, r14",
    "mov     rsi, r13",
    "call    __strcpy_chk",
    "mov     rdi, rax",
    "mov     qword [rel data_16b5d8], rax",
    "call    strlen",
    "mov     dword [rel data_16b5e0], eax",
    "jmp     0x10ec0d",
    "call    free",
    "jmp     0x10e82c",
    "add     eax, 0x2",
    "cmp     dl, 0x20",
    "jne     0x10fa01",
    "movzx   edx, byte [rcx+0x1]",
    "add     rcx, 0x1",
    "add     eax, 0x1",
    "test    dl, dl",
    "je      0x10fa1a",
    "xor     eax, eax",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     dword [rbp-0xb0], r8d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r12], 0x27",
    "lea     rax, [rax+0x1]",
    "mov     rcx, qword [rbp-0xa0]",
    "mov     r9d, dword [rel data_11f014]  {\"'\\''rbash\"}",
    "movzx   edx, byte [rcx]",
    "test    dl, dl",
    "jne     0x10fa7b",
    "movsxd  rax, dword [rbp-0xe0]",
    "mov     rdi, qword [rbp-0xf0]",
    "mov     byte [rcx+rax], 0x0",
    "test    rdi, rdi",
    "je      0x10f861",
    "mov     qword [rbp-0x100], r12",
    "mov     r15, rcx",
    "mov     r13d, eax",
    "jmp     0x10ecfe",
    "add     rcx, 0x1",
    "cmp     dl, 0x27",
    "jne     0x10fa60",
    "jmp     0x10fa9d",
    "mov     eax, dword [rbp-0xe0]",
    "mov     qword [rel data_16b5d0], rcx",
    "mov     dword [rel data_16b5c8], eax",
    "jmp     0x10ef88",
    "mov     qword [rbp-0xf0], rcx",
    "call    free",
    "mov     rcx, qword [rbp-0xf0]",
    "mov     rax, qword [rbp-0xf0]",
    "movsxd  r12, r13d",
    "movzx   eax, byte [rax+r12]",
    "cmp     al, 0x26",
    "jne     0x10ecb3",
    "lea     esi, [rdx-0x9]",
    "cmp     sil, 0x1",
    "jbe     0x10fa8d",
    "mov     dword [rax], r9d",
    "add     rax, 0x4",
    "jmp     0x10fa74",
    "mov     esi, 0x27",
    "mov     word [rax], si",
    "jmp     0x10e911",
    "cmp     al, 0x5c",
    "je      0x10f730",
    "mov     ecx, dword [rbp-0xe0]",
    "mov     eax, dword [rel data_16b5e0]",
    "lea     r12d, [rax+rcx]",
    "mov     ecx, dword [rbp-0xf4]",
    "cmp     r12d, ecx",
    "jge     0x10f894",
    "mov     byte [rax], 0x27",
    "add     rax, 0x3",
    "mov     byte [rax-0x2], dl",
    "mov     byte [rax-0x1], 0x27",
    "jmp     0x10fa74",
    "cmp     dl, 0x20",
    "je      0x10fa8d",
    "movzx   edx, byte [rcx]",
    "test    dl, dl",
    "je      0x10fa9d",
    "mov     rcx, qword [rbp-0xf0]",
    "lea     rax, [r12+0x1]",
    "cmp     byte [rcx+r12+0x1], 0x26",
    "jne     0x10ecbb",
    "mov     edi, dword [rbp-0xe0]",
    "cmp     dword [rbp-0xf4], edi",
    "jle     0x10f6db",
    "lea     eax, [rax+rcx*2]",
    "mov     dword [rbp-0xf4], eax",
    "movsxd  r14, eax",
    "test    r15, r15",
    "je      0x10faaa",
    "movsxd  rax, dword [rbp-0xe0]",
    "mov     rdx, r14",
    "mov     rsi, qword [rel data_16b5d8]",
    "cmp     rax, r14",
    "lea     rdi, [r15+rax]",
    "cmovae  rdx, rax",
    "sub     rdx, rax",
    "call    __strcpy_chk",
    "mov     dword [rbp-0xe0], r12d",
    "jmp     0x10eced",
    "mov     byte [rax], dl",
    "add     rax, 0x1",
    "add     r13d, 0x1",
    "mov     r12, rax",
    "jmp     0x10ecbb",
    "shl     dword [rbp-0xf4], 0x1",
    "movsxd  r14, dword [rbp-0xf4]",
    "test    r15, r15",
    "je      0x10f999",
    "mov     rax, qword [rbp-0xf0]",
    "movzx   edx, byte [rax+r12]",
    "movsxd  rax, dword [rbp-0xe0]",
    "mov     byte [r15+rax], dl",
    "lea     eax, [rax+0x1]",
    "mov     dword [rbp-0xe0], eax",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r15, rax",
    "jmp     0x10f8b7",
    "mov     rdi, r15",
    "mov     rsi, r14",
    "call    realloc",
    "mov     r15, rax",
    "add     r13d, 0x1",
    "cmp     r13d, dword [rel data_16b5c8]",
    "jge     0x10f82d",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r15, rax",
    "jmp     0x10f6ff",
    "mov     rdi, r15",
    "mov     rsi, r14",
    "call    realloc",
    "mov     r15, rax",
    "mov     r12, qword [rbp-0x100]",
    "mov     rcx, r15",
    "test    r15, r15",
    "jne     0x10ed30",
    "xor     eax, eax",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "test    r15, r15",
    "jne     0x10eccd",
    "xor     eax, eax",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "call    sub_a7f00",
    "{ Does not return }"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xce2b0",
  "rules": [
    "write file on Linux",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "encrypt data using RSA via embedded library/8bc479b14953434c9835ec8295d733a3",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "lea     r12, [rel data_121b9f]",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x118",
    "lea     r13, [rel loptend]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rel lcurrent]",
    "mov     dword [rel data_169034], 0x0",
    "mov     dword [rel data_169030], 0x0",
    "mov     qword [r13], 0x0",
    "mov     qword [rax], 0x0",
    "mov     qword [rel data_168d30], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     r13, qword [r13]",
    "test    r13, r13",
    "je      0xce3f8",
    "cmp     eax, 0xffffff9d",
    "je      0xce430",
    "call    builtin_usage",
    "mov     rax, qword [r13+0x8]",
    "mov     edx, dword [rel data_169030]",
    "mov     rbx, qword [rax]",
    "test    edx, edx",
    "je      0xcf470",
    "call    builtin_help",
    "jmp     0xce3fd",
    "cmp     eax, 0x76",
    "jne     0xce3f8",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "lea     rsp, [rbp-0x28]",
    "mov     eax, edx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    rbx, rbx",
    "je      0xce402",
    "test    rbx, rbx",
    "je      0xcf730",
    "mov     edx, 0x102",
    "lea     rax, [rel list_optarg]",
    "mov     r15, qword [rax]",
    "lea     rax, [rel assoc_expand_once]",
    "mov     r14d, dword [rax]",
    "mov     qword [rel data_169028], r15",
    "xor     eax, eax",
    "test    r14d, r14d",
    "je      0xce39b",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xd069e",
    "movzx   eax, byte [rbx]",
    "test    al, al",
    "je      0xce402",
    "xor     edx, edx",
    "jmp     0xce402",
    "movzx   eax, byte [rbx]",
    "test    al, al",
    "je      0xcfdd3",
    "mov     rdi, r15",
    "mov     dword [rel data_169024], eax",
    "call    legal_identifier",
    "test    eax, eax",
    "je      0xce440",
    "lea     rax, [rel list_optflags]",
    "mov     edx, dword [rax]",
    "and     edx, 0x200",
    "cmp     edx, 0x1",
    "sbb     eax, eax",
    "and     eax, 0xfffff000",
    "add     eax, 0x1080",
    "cmp     edx, 0x1",
    "sbb     r14d, r14d",
    "and     r14d, 0xfffffffe",
    "add     r14d, 0x3",
    "jmp     0xce506",
    "mov     rdi, qword [rel data_169028]",
    "xor     edx, edx",
    "lea     rsi, [rel data_122e02]",
    "call    builtin_bind_variable",
    "mov     rdi, qword [rel data_169028]",
    "mov     rbx, rax",
    "call    stupidly_hack_special_variables",
    "test    rbx, rbx",
    "je      0xce85e",
    "mov     rdx, qword [r13]",
    "mov     qword [rbp-0x140], r13",
    "mov     dword [rel data_169020], 0x0",
    "mov     qword [rel data_169018], rdx",
    "xor     edx, edx",
    "mov     esi, r14d",
    "mov     rdi, r15",
    "call    tokenize_array_reference",
    "test    eax, eax",
    "jne     0xce3b1",
    "cmp     qword [rel data_168fe8], 0x0",
    "mov     dword [rel data_169020], 0x1",
    "mov     dword [rel data_169030], 0x1",
    "je      0xce490",
    "mov     edx, 0x1",
    "jmp     0xce402",
    "xor     edx, edx",
    "test    dword [rbx+0x28 {Elf64_Header::section_header_offset.d}], 0x4002",
    "setne   dl",
    "jmp     0xce402",
    "mov     r14, qword [rel stdout]",
    "mov     rdi, qword [r14]",
    "call    ferror",
    "test    eax, eax",
    "jne     0xd083f",
    "mov     qword [rbp-0xf8], rbx",
    "mov     qword [rbp-0x138], rbx",
    "jmp     0xce5c0",
    "mov     rbx, qword [rel data_169028]",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "mov     dword [rel data_169020], 0x0",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xce3fd",
    "mov     qword [rel data_168fe8], 0x10",
    "mov     edi, 0x10",
    "call    malloc",
    "test    rax, rax",
    "je      0xd0a9e",
    "mov     rax, qword [rel data_168fe0]",
    "mov     dword [rel data_168fd8], 0x0",
    "test    rax, rax",
    "je      0xce327",
    "lea     rax, [rel terminating_signal]",
    "mov     r12, r14",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd0a8b",
    "mov     rax, qword [rel data_169018]",
    "test    rax, rax",
    "je      0xd06bc",
    "cmp     al, 0x5c",
    "je      0xcf360",
    "xor     eax, eax",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_168fe0], rax",
    "mov     dword [rel data_168fd8], 0x0",
    "mov     rsi, r12",
    "mov     rdi, rbx",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xce4d0",
    "jmp     0xce4bf",
    "lea     rax, [rel terminating_signal]",
    "mov     edi, dword [rax]",
    "call    termsig_handler",
    "jmp     0xd0853",
    "lea     rax, [rel interrupt_state]",
    "mov     qword [rbp-0x100], rax",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xcffda",
    "cmp     dword [rel data_169034], 0x0",
    "mov     r12, r14",
    "je      0xd06d2",
    "mov     rcx, qword [rbp-0x140]",
    "cmp     rax, qword [rcx]",
    "je      0xd06bc",
    "mov     rax, qword [rbp-0xf8]",
    "lea     rbx, [rbp-0xe0]",
    "pxor    xmm0, xmm0",
    "xor     ecx, ecx",
    "lea     rdx, [rbp-0xf0]",
    "mov     rsi, rbx",
    "movaps  xmmword [rbp-0xe0], xmm0",
    "lea     r14, [rbp-0xc0]",
    "lea     rdi, [rax+0x1]",
    "movups  xmmword [rbp-0xd7], xmm0",
    "call    sub_cd4c0",
    "movsxd  r12, dword [rbp-0xf0]",
    "movsxd  r15, eax",
    "mov     rax, r12",
    "add     r12, rbx",
    "test    eax, eax",
    "jg      0xcf3e3",
    "cmp     al, 0x25",
    "jne     0xce548",
    "mov     byte [rax], 0x0",
    "jmp     0xce327",
    "cmp     dword [rel data_169030], 0x0",
    "jne     0xd099f",
    "call    throw_to_top_level",
    "jmp     0xcffda",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd0948",
    "mov     dword [rel data_169020], 0x1",
    "movzx   eax, byte [rbx]",
    "jmp     0xce522",
    "movsx   edi, byte [rbx]",
    "mov     eax, dword [rel data_169030]",
    "mov     byte [rbp-0xbf], 0x0",
    "add     qword [rel data_169010], 0x1",
    "mov     byte [rbp-0xc0], dil",
    "test    eax, eax",
    "jne     0xcf3b8",
    "jmp     0xcf450",
    "mov     r12d, dword [rel data_169030]",
    "add     qword [rel data_169010], 0x1",
    "mov     byte [rbp-0xc0], al",
    "mov     byte [rbp-0xbf], 0x0",
    "test    r12d, r12d",
    "je      0xcf130",
    "mov     rax, qword [rbp-0xf8]",
    "movzx   ebx, byte [rax+0x1]",
    "lea     r8, [rax+0x1]",
    "cmp     bl, 0x25",
    "je      0xcf150",
    "mov     rdi, qword [rel data_169028]",
    "mov     edx, dword [rel data_169024]",
    "mov     rsi, qword [rel data_168fe0]",
    "call    builtin_bind_variable",
    "mov     rdi, qword [rel data_169028]",
    "mov     rbx, rax",
    "call    stupidly_hack_special_variables",
    "test    rbx, rbx",
    "je      0xce85e",
    "cmp     qword [rel data_169008], 0x1000",
    "ja      0xd0a19",
    "lea     rax, [rel terminating_signal]",
    "mov     edi, dword [rax]",
    "call    termsig_handler",
    "jmp     0xd06e3",
    "lea     rax, [rel interrupt_state]",
    "mov     qword [rbp-0x100], rax",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd093e",
    "mov     qword [rel data_169010], 0x0",
    "test    al, al",
    "je      0xcf51a",
    "mov     rdi, r14",
    "call    sub_111fd0",
    "mov     rax, qword [rel stdout]",
    "mov     rsi, qword [rax]",
    "call    putc",
    "jmp     0xcf3c0",
    "mov     r8, qword [rbp-0xf8]",
    "add     r8, r15",
    "lea     rax, [r8+0x1]",
    "mov     qword [rbp-0xf8], rax",
    "jmp     0xce5b3",
    "mov     rax, qword [rel stdout]",
    "mov     rsi, qword [rax]",
    "mov     rax, qword [rbp-0xf8]",
    "movsx   edi, byte [rax]",
    "call    putc",
    "jmp     0xce57c",
    "lea     r14, [rbp-0xc0]",
    "mov     rdi, r14",
    "call    sub_111fd0",
    "mov     r11d, dword [rel data_169030]",
    "movzx   eax, word [rel data_136ab6]",
    "mov     qword [rbp-0x100], r8",
    "add     qword [rel data_169010], 0x1",
    "test    r11d, r11d",
    "mov     word [rbp-0xc0], ax",
    "je      0xcf200",
    "test    bl, bl",
    "je      0xcfe18",
    "test    dword [rbx+0x28 {Elf64_Header::section_header_offset.d}], 0x4002",
    "je      0xcffe7",
    "mov     rdi, qword [rel data_169000]",
    "call    free",
    "xor     esi, esi",
    "mov     qword [rel data_169008], rsi",
    "mov     qword [rel data_169000], rsi",
    "jmp     0xcfff8",
    "cmp     qword [rel data_168fe8], 0x1000",
    "mov     rdi, qword [rel data_168fe0]",
    "ja      0xd09ff",
    "call    throw_to_top_level",
    "jmp     0xd06fb",
    "cmp     dword [rel data_169030], 0x0",
    "jne     0xd08fb",
    "lea     rax, [rel terminating_signal]",
    "mov     r13d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r13d, r13d",
    "jne     0xcf3cd",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf420",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf430",
    "movzx   eax, byte [r8+0x1]",
    "test    al, al",
    "je      0xcf513",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf1d8",
    "lea     rax, [rel terminating_signal]",
    "mov     ebx, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    ebx, ebx",
    "jne     0xce58d",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf1c8",
    "mov     rax, qword [rel stdout]",
    "mov     edi, 0x25",
    "mov     rsi, qword [rax]",
    "call    putc",
    "mov     r8, qword [rbp-0x100]",
    "jmp     0xcf193",
    "lea     r14, [rbp-0xc0]",
    "mov     rdi, r14",
    "call    sub_111fd0",
    "mov     r8, qword [rbp-0x100]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_134430]  {\"`%s': missing format character\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0xf8]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd04cb",
    "mov     r15, r8",
    "mov     r12, r8",
    "jmp     0xce611",
    "jmp     0xce85e",
    "call    free",
    "xor     ecx, ecx",
    "mov     qword [rel data_168fe8], rcx",
    "mov     qword [rel data_168fe0], rcx",
    "jmp     0xd0018",
    "test    rdi, rdi",
    "je      0xd0018",
    "mov     rdi, qword [rel data_169028]",
    "mov     edx, dword [rel data_169024]",
    "mov     rsi, qword [rel data_168fe0]",
    "call    builtin_bind_variable",
    "mov     rdi, qword [rel data_169028]",
    "mov     rbx, rax",
    "call    stupidly_hack_special_variables",
    "test    rbx, rbx",
    "je      0xce85e",
    "cmp     qword [rel data_169008], 0x1000",
    "ja      0xd08da",
    "jmp     0xcf1ef",
    "call    throw_to_top_level",
    "jmp     0xcf3da",
    "add     rbx, 0x1",
    "cmp     r12, rbx",
    "je      0xcf450",
    "mov     rbx, qword [rbp-0x138]",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0xce59e",
    "mov     rax, qword [rbp-0xf8]",
    "mov     r8, rax",
    "add     rax, 0x1",
    "mov     qword [rbp-0xf8], rax",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf2d0",
    "lea     rax, [rel terminating_signal]",
    "mov     r10d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r10d, r10d",
    "jne     0xcf1a4",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf2f0",
    "lea     rax, [rel terminating_signal]",
    "mov     edi, dword [rax]",
    "call    termsig_handler",
    "jmp     0xcfe4d",
    "lea     rax, [rel interrupt_state]",
    "mov     qword [rbp-0x100], rax",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd054b",
    "movsx   esi, bl",
    "lea     rdi, [rel 0x121b5b]  {\"#'-+ 0\"}",
    "call    strchr",
    "test    rax, rax",
    "jne     0xce600",
    "mov     rdi, qword [r12]",
    "call    ferror",
    "test    eax, eax",
    "jne     0xcfebe",
    "mov     byte [rdi], 0x0",
    "test    dword [rbx+0x28 {Elf64_Header::section_header_offset.d}], 0x4002",
    "je      0xd0708",
    "mov     rdi, qword [rel data_169000]",
    "call    free",
    "xor     edx, edx",
    "mov     qword [rel data_169008], rdx",
    "mov     qword [rel data_169000], rdx",
    "jmp     0xd0719",
    "cmp     qword [rel data_168fe8], 0x1000",
    "mov     rdi, qword [rel data_168fe0]",
    "ja      0xd07df",
    "jmp     0xcf1ef",
    "mov     qword [rbp-0x100], r8",
    "call    throw_to_top_level",
    "mov     r8, qword [rbp-0x100]",
    "jmp     0xcf1b5",
    "add     qword [rbp-0xf8], 0x2",
    "jmp     0xce5b3",
    "call    throw_to_top_level",
    "jmp     0xcfe65",
    "mov     r12d, dword [rel data_169030]",
    "test    r12d, r12d",
    "jne     0xd04de",
    "movzx   ebx, byte [r15+0x1]",
    "add     r15, 0x1",
    "test    bl, bl",
    "je      0xcf1f8",
    "mov     r8, r12",
    "cmp     bl, 0x2a",
    "jne     0xce764",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd042e",
    "mov     rdi, qword [r12]",
    "call    fflush",
    "jmp     0xcfebe",
    "jmp     0xce85e",
    "call    free",
    "xor     eax, eax",
    "mov     qword [rel data_168fe8], rax",
    "mov     qword [rel data_168fe0], rax",
    "jmp     0xd0739",
    "test    rdi, rdi",
    "je      0xd0739",
    "mov     rdi, qword [rel data_169028]",
    "mov     edx, dword [rel data_169024]",
    "mov     rsi, qword [rel data_168fe0]",
    "call    builtin_bind_variable",
    "mov     rdi, qword [rel data_169028]",
    "mov     rbx, rax",
    "call    stupidly_hack_special_variables",
    "test    rbx, rbx",
    "je      0xce85e",
    "cmp     qword [rel data_169008], 0x1000",
    "ja      0xd0570",
    "mov     r8, r12",
    "jmp     0xce764",
    "movzx   eax, byte [r15]",
    "lea     edx, [rax-0x30]",
    "cmp     dl, 0x9",
    "jbe     0xce760",
    "mov     qword [rbp-0x100], r12",
    "lea     rbx, [r15+0x1]",
    "call    sub_cd400",
    "mov     r8, qword [rbp-0x100]",
    "mov     dword [rbp-0x120], 0x1",
    "mov     dword [rbp-0x124], eax",
    "movzx   eax, byte [r15+0x1]",
    "mov     r15, rbx",
    "lea     rax, [rel terminating_signal]",
    "mov     edi, dword [rax]",
    "call    termsig_handler",
    "jmp     0xcfecf",
    "mov     rax, qword [rbp-0x100]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd0401",
    "mov     rdi, qword [r12]",
    "call    ferror",
    "test    eax, eax",
    "jne     0xd01e0",
    "mov     byte [rdi], 0x0",
    "test    dword [rbx+0x28 {Elf64_Header::section_header_offset.d}], 0x4002",
    "je      0xcfe75",
    "mov     rdi, qword [rel data_169000]",
    "xor     ebx, ebx",
    "call    free",
    "mov     qword [rel data_169008], rbx",
    "mov     qword [rel data_169000], rbx",
    "jmp     0xcfe86",
    "cmp     qword [rel data_168fe8], 0x1000",
    "mov     rdi, qword [rel data_168fe0]",
    "ja      0xd0555",
    "add     r15, 0x1",
    "mov     dword [rbp-0x120], 0x0",
    "mov     dword [rbp-0x124], 0x0",
    "jmp     0xce660",
    "movzx   eax, byte [r15+0x1]",
    "cmp     al, 0x2a",
    "je      0xcf490",
    "mov     qword [rbp-0x130], 0x0",
    "call    throw_to_top_level",
    "jmp     0xcfee0",
    "mov     rdi, qword [r12]",
    "call    ferror",
    "test    eax, eax",
    "je      0xce85e",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd09e2",
    "mov     rdi, qword [r12]",
    "call    fflush",
    "jmp     0xd01e0",
    "jmp     0xce85e",
    "call    free",
    "xor     r11d, r11d",
    "mov     qword [rel data_168fe8], r11",
    "mov     qword [rel data_168fe0], r11",
    "jmp     0xcfea6",
    "test    rdi, rdi",
    "je      0xcfea6",
    "cmp     al, 0x2e",
    "je      0xcf220",
    "mov     qword [rbp-0x100], r8",
    "lea     rbx, [r15+0x2]",
    "call    sub_cd400",
    "mov     r8, qword [rbp-0x100]",
    "mov     qword [rbp-0x130], 0x0",
    "mov     dword [rbp-0x114], eax",
    "movzx   eax, byte [r15+0x2]",
    "mov     r15, rbx",
    "mov     dword [rbp-0x118], 0x1",
    "jmp     0xce687",
    "cmp     al, 0x2d",
    "je      0xcf559",
    "mov     qword [rbp-0x100], r8",
    "xor     r12d, r12d",
    "mov     ebx, eax",
    "mov     r13, r15",
    "mov     byte [rbp-0x110], al",
    "jmp     0xce6cc",
    "call    sh_wrerror",
    "mov     rdi, qword [r12]",
    "call    clearerr",
    "jmp     0xce85e",
    "lea     rax, [rel terminating_signal]",
    "mov     edi, dword [rax]",
    "call    termsig_handler",
    "jmp     0xd01f1",
    "mov     rax, qword [rbp-0x100]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd09f5",
    "mov     r12, qword [rel stdout]",
    "mov     rdi, qword [r12]",
    "call    ferror",
    "test    eax, eax",
    "je      0xd0029",
    "mov     byte [rdi], 0x0",
    "test    al, al",
    "je      0xcfe18",
    "lea     rax, [r15+0x2]",
    "mov     qword [rbp-0x130], rax",
    "movzx   eax, byte [r15+0x2]",
    "jmp     0xcf240",
    "lea     rcx, [r15+0x1]",
    "mov     qword [rbp-0x130], rcx",
    "movsx   r14d, bl",
    "lea     rdi, [rel data_121ba2]  {\"hjlLtz\"}",
    "mov     esi, r14d",
    "call    strchr",
    "test    rax, rax",
    "jne     0xce6b0",
    "call    throw_to_top_level",
    "jmp     0xd0202",
    "mov     rdi, qword [r12]",
    "call    ferror",
    "mov     edx, dword [rel data_169020]",
    "test    eax, eax",
    "je      0xce402",
    "lea     edx, [rax-0x30]",
    "mov     r15, qword [rbp-0x130]",
    "cmp     dl, 0x9",
    "ja      0xce668",
    "nop     dword [rax+rax]",
    "xor     eax, eax",
    "cmp     bl, 0x4c",
    "sete    al",
    "movzx   ebx, byte [r13+0x1]",
    "add     r13, 0x1",
    "or      r12d, eax",
    "test    bl, bl",
    "je      0xcfe18",
    "movzx   eax, byte [rbp-0x110]",
    "movzx   edx, byte [r15+0x1]",
    "mov     rcx, r13",
    "mov     r13d, ebx",
    "mov     byte [r15], r13b",
    "mov     r8, qword [rbp-0x100]",
    "mov     rbx, rcx",
    "movzx   r10d, al",
    "mov     byte [r15+0x1], 0x0",
    "mov     eax, r10d",
    "mov     ah, dl",
    "mov     r10d, eax",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf2a8",
    "jmp     0xcfef1",
    "movzx   eax, byte [r15+0x1]",
    "add     r15, 0x1",
    "lea     edx, [rax-0x30]",
    "cmp     dl, 0x9",
    "jbe     0xcf258",
    "jmp     0xce673",
    "lea     rax, [rel terminating_signal]",
    "mov     r9d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r9d, r9d",
    "jne     0xce725",
    "lea     rax, [rel interrupt_state]",
    "mov     qword [rbp-0x100], rax",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf270",
    "mov     dword [rbp-0x118], 0x0",
    "mov     dword [rbp-0x114], 0x0",
    "jmp     0xcf1ef",
    "mov     word [rbp-0x128], r10w",
    "mov     byte [rbp-0x125], dl",
    "mov     qword [rbp-0x110], r8",
    "call    throw_to_top_level",
    "movzx   r10d, word [rbp-0x128]",
    "movzx   edx, byte [rbp-0x125]",
    "mov     r8, qword [rbp-0x110]",
    "jmp     0xce73d",
    "lea     eax, [r13-0x28]",
    "cmp     al, 0x50",
    "ja      0xce790",
    "{Case 0x1-0x18, 0x1a-0x1c, 0x20-0x28, 0x2a-0x2f, 0x31-0x38, 0x40, 0x42-0x45, 0x48, 0x4a, 0x4c, 0x4e-0x4f}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_134478]  {\"`%c': invalid format character\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     esi, r14d",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf888",
    "lea     rcx, [rel jump_table_1377d0]",
    "movzx   eax, al",
    "movsxd  rax, dword [rcx+rax*4]",
    "add     rax, rcx",
    "jmp     rax",
    "lea     rax, [rel terminating_signal]",
    "mov     r10d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r10d, r10d",
    "jne     0xce7c1",
    "mov     rax, qword [rbp-0x100]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf87e",
    "{Case 0x19, 0x1d-0x1f, 0x39, 0x3d-0x3f}",
    "mov     r14, qword [rel data_169018]",
    "test    r12d, r12d",
    "jne     0xce887",
    "{Case 0x30, 0x47, 0x4d, 0x50}",
    "mov     r14, qword [rel data_169018]",
    "test    r14, r14",
    "je      0xd0037",
    "{Case 0x3c, 0x41}",
    "mov     word [rbp-0x110], r10w",
    "call    sub_cd2d0",
    "mov     r12, rax",
    "jmp     0xcea96",
    "{Case 0x29, 0x49}",
    "cmp     r13b, 0x51",
    "mov     rdx, qword [rel data_169018]",
    "sete    al",
    "cmp     qword [rbp-0x130], 0x0",
    "setne   sil",
    "and     eax, esi",
    "test    rdx, rdx",
    "je      0xcf9de",
    "{Case 0x0}",
    "mov     byte [r15+0x1], dl",
    "mov     rdi, rbx",
    "mov     word [rbp-0x120], r10w",
    "mov     qword [rbp-0x110], r8",
    "call    strlen",
    "lea     r12, [rax+0x3]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r8, qword [rbp-0x110]",
    "movzx   r10d, word [rbp-0x120]",
    "test    rax, rax",
    "mov     r13, rax",
    "je      0xd0a3a",
    "{Case 0x46}",
    "mov     rax, qword [rel data_169018]",
    "test    rax, rax",
    "je      0xce9eb",
    "{Case 0x4b}",
    "mov     rax, qword [rel data_169018]",
    "lea     r12, [rel data_122e02]",
    "test    rax, rax",
    "je      0xceefd",
    "{Case 0x3b}",
    "mov     rax, qword [rel data_169018]",
    "test    rax, rax",
    "je      0xd003f",
    "{Case 0x3a}",
    "mov     rax, qword [rel data_169018]",
    "test    rax, rax",
    "je      0xcf56e",
    "jmp     0xcf1ef",
    "call    throw_to_top_level",
    "jmp     0xce7d2",
    "mov     r9d, dword [rel data_169030]",
    "test    r9d, r9d",
    "jne     0xcf8b0",
    "test    r14, r14",
    "je      0xd00e2",
    "lea     rax, [rel posixly_correct]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "jne     0xcfc7d",
    "xor     r12d, r12d",
    "jmp     0xcea8e",
    "mov     rax, qword [r14+0x8]",
    "mov     r12, qword [rax]",
    "movzx   eax, byte [r12]",
    "cmp     al, 0x27",
    "je      0xcfac9",
    "mov     rdi, qword [rbp-0xf8]",
    "mov     edx, 0x1",
    "lea     rsi, [rel data_11f729[7]]  {\"l\"}",
    "call    sub_c74e0",
    "mov     r14, qword [rel stdout]",
    "mov     r13, rax",
    "mov     rdi, qword [r14]",
    "call    clearerr",
    "mov     ecx, dword [rbp-0x118]",
    "test    dword [rbp-0x120], ecx",
    "movzx   r10d, word [rbp-0x110]",
    "je      0xcf4cf",
    "test    al, al",
    "je      0xcfb1d",
    "mov     rsi, qword [rdx+0x8]",
    "mov     rdx, qword [rdx]",
    "mov     r12, qword [rsi]",
    "mov     qword [rel data_169018], rdx",
    "test    al, al",
    "jne     0xcf9ed",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movzx   eax, byte [rbx+0x1]",
    "lea     r12, [rbx+0x1]",
    "mov     rdx, r13",
    "test    al, al",
    "je      0xcecd6",
    "mov     r8, rbx",
    "mov     rdx, qword [rax+0x8]",
    "mov     rax, qword [rax]",
    "mov     r12, qword [rdx]",
    "mov     qword [rel data_169018], rax",
    "test    r12, r12",
    "je      0xce9eb",
    "mov     r14, qword [rel stdout]",
    "mov     word [rbp-0x110], r10w",
    "mov     rdi, qword [r14]",
    "call    clearerr",
    "mov     edx, dword [rbp-0x118]",
    "test    dword [rbp-0x120], edx",
    "mov     eax, dword [rel data_169030]",
    "movzx   r10d, word [rbp-0x110]",
    "je      0xcf6d1",
    "mov     rdx, qword [rax+0x8]",
    "mov     rax, qword [rax]",
    "mov     qword [rel data_169018], rax",
    "mov     r12, qword [rdx]",
    "xor     r12d, r12d",
    "jmp     0xcef8b",
    "mov     rdx, qword [rax+0x8]",
    "mov     rax, qword [rax]",
    "mov     rdx, qword [rdx]",
    "mov     qword [rel data_169018], rax",
    "movsx   r12d, byte [rdx]",
    "mov     edi, 0x1",
    "mov     word [rbp-0x110], r10w",
    "call    malloc",
    "movzx   r10d, word [rbp-0x110]",
    "test    rax, rax",
    "mov     r9, rax",
    "jne     0xcf5c1",
    "mov     rdx, qword [rax+0x8]",
    "mov     rax, qword [rax]",
    "mov     word [rbp-0x110], r10w",
    "mov     r14, qword [rdx]",
    "mov     qword [rel data_169018], rax",
    "mov     rdi, r14",
    "call    strlen",
    "movzx   r10d, word [rbp-0x110]",
    "test    eax, eax",
    "je      0xcf56e",
    "mov     rdi, qword [rel data_169028]",
    "mov     edx, dword [rel data_169024]",
    "mov     rsi, qword [rel data_168fe0]",
    "call    builtin_bind_variable",
    "mov     rdi, qword [rel data_169028]",
    "mov     rbx, rax",
    "call    stupidly_hack_special_variables",
    "test    rbx, rbx",
    "je      0xce85e",
    "cmp     qword [rel data_169008], 0x1000",
    "ja      0xcfaa2",
    "\ud83d\udeab\ud83d\udeabfldz    ",
    "\ud83d\udeab\ud83d\udeab\ud83d\udeabfstp    tword [rbp-0x110], st0",
    "jmp     0xce90d",
    "mov     rax, qword [r14+0x8]",
    "mov     word [rbp-0x130], r10w",
    "mov     rdi, qword [rax]",
    "movzx   eax, byte [rdi]",
    "cmp     al, 0x27",
    "je      0xcfc58",
    "test    r14, r14",
    "je      0xd0662",
    "mov     word [rbp-0x110], r10w",
    "mov     word [rbp-0x110], r10w",
    "call    sub_c7610",
    "movzx   r10d, word [rbp-0x110]",
    "mov     r12, rax",
    "jmp     0xcea8e",
    "cmp     al, 0x22",
    "je      0xcfac9",
    "mov     ecx, dword [rbp-0x120]",
    "mov     eax, dword [rel data_169030]",
    "test    ecx, ecx",
    "je      0xcf651",
    "mov     esi, dword [rel data_169030]",
    "mov     word [rbp-0xf8], r10w",
    "test    esi, esi",
    "je      0xcf626",
    "mov     edi, 0x3",
    "mov     word [rbp-0x110], r10w",
    "call    malloc",
    "movzx   r10d, word [rbp-0x110]",
    "test    rax, rax",
    "mov     r14, rax",
    "je      0xd0ac7",
    "lea     r12, [rel data_122e02]",
    "mov     rsi, qword [rbp-0x130]",
    "movsx   eax, byte [rsi]",
    "lea     rdx, [rsi+0x1]",
    "lea     ecx, [rax-0x30]",
    "movzx   eax, byte [rsi+0x1]",
    "mov     dword [rbp-0x114], ecx",
    "lea     esi, [rax-0x30]",
    "cmp     sil, 0x9",
    "ja      0xcfa3a",
    "test    r12, r12",
    "je      0xcf781",
    "mov     byte [rdx], 0x0",
    "movzx   ebx, byte [r12+0x1]",
    "cmp     bl, 0x54",
    "jne     0xcf8f3",
    "mov     ecx, 0x1",
    "jmp     0xceccb",
    "cmp     byte [r12], 0x0",
    "je      0xce9eb",
    "mov     ecx, dword [rbp-0x120]",
    "test    ecx, ecx",
    "je      0xcfbd4",
    "test    eax, eax",
    "je      0xcfae6",
    "mov     r14, qword [rel stdout]",
    "mov     word [rbp-0x110], r10w",
    "mov     rdi, qword [r14]",
    "call    clearerr",
    "mov     edx, dword [rbp-0x118]",
    "test    dword [rbp-0x120], edx",
    "mov     eax, dword [rel data_169030]",
    "movzx   r10d, word [rbp-0x110]",
    "je      0xcf68f",
    "mov     edi, dword [rbp-0x120]",
    "test    edi, edi",
    "je      0xcfc16",
    "test    eax, eax",
    "je      0xcfb56",
    "mov     byte [r9], 0x0",
    "mov     r8d, dword [rbp-0x114]",
    "xor     edx, edx",
    "mov     rsi, r9",
    "mov     word [rbp-0x120], r10w",
    "mov     ecx, dword [rbp-0x124]",
    "mov     qword [rbp-0x110], r9",
    "mov     qword [rbp-0x120], rax",
    "mov     esi, 0x1",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     word [rbp-0x110], r10w",
    "call    sub_a7f00",
    "{ Does not return }",
    "add     eax, 0x1",
    "mov     word [rbp-0x110], r10w",
    "movsxd  r12, eax",
    "mov     rdi, r12",
    "call    malloc",
    "movzx   r10d, word [rbp-0x110]",
    "test    rax, rax",
    "mov     r9, rax",
    "je      0xd0a5f",
    "test    dword [rbx+0x28 {Elf64_Header::section_header_offset.d}], 0x4002",
    "je      0xce7e2",
    "mov     rdi, qword [rel data_169000]",
    "call    free",
    "mov     qword [rel data_169008], 0x0",
    "mov     qword [rel data_169000], 0x0",
    "jmp     0xce7f3",
    "cmp     qword [rel data_168fe8], 0x1000",
    "mov     rdi, qword [rel data_168fe0]",
    "ja      0xcfa82",
    "mov     rdi, qword [rbp-0xf8]",
    "mov     edx, 0x1",
    "lea     rsi, [rel data_121ea4]",
    "mov     word [rbp-0x130], r10w",
    "call    sub_c74e0",
    "mov     r14, qword [rel stdout]",
    "mov     r12, rax",
    "mov     rdi, qword [r14]",
    "call    clearerr",
    "mov     ecx, dword [rbp-0x118]",
    "test    dword [rbp-0x120], ecx",
    "movzx   r10d, word [rbp-0x130]",
    "je      0xcf7c7",
    "call    sub_c7610",
    "movzx   r10d, word [rbp-0x130]",
    "mov     qword [rbp-0x110], rax",
    "\ud83d\udeab\ud83d\udeabfild    st0, qword [rbp-0x110]",
    "\ud83d\udeab\ud83d\udeab\ud83d\udeabfstp    tword [rbp-0x110], st0",
    "jmp     0xce90d",
    "cmp     al, 0x22",
    "je      0xcfc58",
    "pxor    xmm0, xmm0",
    "jmp     0xcfd04",
    "mov     rax, qword [r14+0x8]",
    "mov     rdi, qword [rax]",
    "movzx   eax, byte [rdi]",
    "cmp     al, 0x27",
    "je      0xd04a8",
    "mov     word [rbp-0x130], r10w",
    "call    __errno_location",
    "xor     edx, edx",
    "mov     rdi, r12",
    "lea     rsi, [rbp-0xe8]",
    "mov     dword [rax], 0x0",
    "mov     qword [rbp-0x110], rax",
    "call    __isoc23_strtoumax",
    "mov     rcx, qword [rbp-0x110]",
    "movzx   r10d, word [rbp-0x130]",
    "mov     r12, rax",
    "mov     rax, qword [rbp-0xe8]",
    "cmp     byte [rax], 0x0",
    "jne     0xd0047",
    "mov     edx, dword [rbp-0x118]",
    "mov     word [rbp-0xf8], r10w",
    "test    edx, edx",
    "je      0xcfbb2",
    "mov     word [rbp-0xf8], r10w",
    "test    eax, eax",
    "je      0xcfb8d",
    "mov     ecx, dword [rbp-0x114]",
    "mov     r8, r12",
    "mov     rsi, r13",
    "xor     eax, eax",
    "mov     edx, dword [rbp-0x124]",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xce9a0",
    "mov     edx, dword [rbp-0x114]",
    "mov     rcx, r12",
    "mov     rdi, r13",
    "xor     eax, eax",
    "mov     esi, dword [rbp-0x124]",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xce9a0",
    "mov     esi, 0x3",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     edi, 0x2727",
    "mov     byte [r14+0x2], 0x0",
    "mov     word [r14], di",
    "jmp     0xcebce",
    "mov     eax, dword [rbp-0x114]",
    "movsxd  r14, eax",
    "test    eax, eax",
    "jns     0xcfa57",
    "nop     dword [rax]",
    "xor     edi, edi",
    "mov     word [rbp-0x110], r10w",
    "call    ansic_shouldquote",
    "movzx   r10d, word [rbp-0x110]",
    "test    eax, eax",
    "jne     0xce9eb",
    "cmp     byte [r12], 0x0",
    "je      0xcfb1d",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "lea     rsi, [rel data_134450]  {\"`%c': invalid time format specif\u2026\"}",
    "mov     qword [rbp-0x110], r8",
    "call    dcgettext",
    "movsx   esi, bl",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_warning",
    "mov     rdi, r13",
    "call    free",
    "mov     rax, qword [rbp-0xf8]",
    "add     qword [rel data_169010], 0x1",
    "mov     r8, qword [rbp-0x110]",
    "movzx   eax, byte [rax]",
    "mov     byte [rbp-0xbf], 0x0",
    "mov     byte [rbp-0xc0], al",
    "mov     eax, dword [rel data_169030]",
    "test    eax, eax",
    "je      0xd00b6",
    "cmp     byte [r13], 0x0",
    "jne     0xcecfe",
    "cmp     al, 0x28",
    "jne     0xcecb0",
    "mov     rdi, r12",
    "mov     word [rbp-0xf8], r10w",
    "call    legal_identifier",
    "test    eax, eax",
    "je      0xd0521",
    "mov     edx, dword [rbp-0x118]",
    "mov     word [rbp-0x110], r10w",
    "test    edx, edx",
    "je      0xd0297",
    "mov     word [rbp-0x110], r10w",
    "test    eax, eax",
    "je      0xd02cb",
    "mov     ecx, dword [rbp-0x114]",
    "mov     r8, r12",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "mov     edx, dword [rbp-0x124]",
    "mov     rsi, qword [rbp-0xf8]",
    "mov     word [rbp-0x110], r10w",
    "call    __printf_chk",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "mov     edx, dword [rbp-0x114]",
    "mov     esi, dword [rbp-0x124]",
    "mov     rcx, r12",
    "xor     eax, eax",
    "mov     rdi, qword [rbp-0xf8]",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "mov     esi, dword [rbp-0x118]",
    "mov     word [rbp-0x110], r10w",
    "test    esi, esi",
    "je      0xd0248",
    "mov     word [rbp-0x110], r10w",
    "test    eax, eax",
    "je      0xd026e",
    "mov     ecx, dword [rbp-0x114]",
    "mov     r8d, r12d",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "mov     edx, dword [rbp-0x124]",
    "mov     rsi, qword [rbp-0xf8]",
    "mov     word [rbp-0x110], r10w",
    "call    __printf_chk",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "mov     edx, dword [rbp-0x114]",
    "mov     esi, dword [rbp-0x124]",
    "mov     ecx, r12d",
    "xor     eax, eax",
    "mov     rdi, qword [rbp-0xf8]",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "mov     rbx, qword [rel stdout]",
    "mov     qword [rbp-0xf8], r9",
    "mov     rdi, qword [rbx]",
    "call    ferror",
    "mov     r9, qword [rbp-0xf8]",
    "test    eax, eax",
    "je      0xd06a3",
    "mov     rdi, r9",
    "mov     word [rbp-0xf8], r10w",
    "call    free",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xce9eb",
    "mov     qword [rbp-0x120], rax",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movzx   eax, byte [r14]",
    "mov     r12, r9",
    "lea     r13, [rbp-0xc0]",
    "test    al, al",
    "je      0xcf5c1",
    "jmp     0xce85e",
    "call    free",
    "mov     qword [rel data_168fe8], 0x0",
    "mov     qword [rel data_168fe0], 0x0",
    "jmp     0xce813",
    "test    rdi, rdi",
    "je      0xce813",
    "mov     edx, dword [rbp-0x120]",
    "mov     eax, dword [rel data_169030]",
    "test    edx, edx",
    "je      0xcff04",
    "mov     r9d, dword [rel data_169030]",
    "mov     word [rbp-0xf8], r10w",
    "test    r9d, r9d",
    "je      0xcff3b",
    "mov     qword [rbp-0x110], rdi",
    "call    __errno_location",
    "mov     rdi, qword [rbp-0x110]",
    "lea     rsi, [rbp-0xe8]",
    "mov     dword [rax], 0x0",
    "mov     r12, rax",
    "call    strtold",
    "mov     rax, qword [rbp-0xe8]",
    "movzx   r10d, word [rbp-0x130]",
    "\ud83d\udeab\ud83d\udeab\ud83d\udeabfstp    tword [rbp-0x110], st0",
    "cmp     byte [rax], 0x0",
    "jne     0xd021e",
    "mov     rdi, qword [rbp-0xf8]",
    "xor     edx, edx",
    "lea     rsi, [rel data_122e02]",
    "mov     word [rbp-0x130], r10w",
    "movsd   qword [rbp-0x110], xmm0",
    "call    sub_c74e0",
    "mov     r14, qword [rel stdout]",
    "mov     r12, rax",
    "mov     rdi, qword [r14]",
    "call    clearerr",
    "mov     ecx, dword [rbp-0x118]",
    "test    dword [rbp-0x120], ecx",
    "movsd   xmm0, qword [rbp-0x110]",
    "movzx   r10d, word [rbp-0x130]",
    "je      0xd032b",
    "mov     word [rbp-0x110], r10w",
    "call    sub_c7610",
    "pxor    xmm0, xmm0",
    "movzx   r10d, word [rbp-0x110]",
    "cvtsi2sd xmm0, rax",
    "jmp     0xcfd04",
    "cmp     al, 0x22",
    "je      0xd04a8",
    "mov     rax, qword [r14+0x8]",
    "mov     word [rbp-0x110], r10w",
    "mov     rdi, qword [rax]",
    "call    sh_invalidnum",
    "mov     r14, qword [rel data_169018]",
    "mov     dword [rel data_169034], 0x1",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xcea84",
    "cmp     dword [rcx], 0x22",
    "je      0xd044f",
    "test    eax, eax",
    "je      0xd02f4",
    "test    eax, eax",
    "je      0xd02bd",
    "mov     edx, dword [rbp-0x124]",
    "mov     rcx, r12",
    "mov     esi, dword [rbp-0x124]",
    "mov     rdx, r12",
    "mov     rdi, r13",
    "xor     eax, eax",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xce9a0",
    "cdqe    ",
    "add     qword [rel data_169010], rax",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf340",
    "mov     rdi, r14",
    "mov     word [rbp-0x110], r10w",
    "call    strlen",
    "cmp     r13b, 0x51",
    "movzx   r10d, word [rbp-0x110]",
    "mov     edx, eax",
    "jne     0xcec01",
    "mov     rdi, r12",
    "mov     word [rbp-0x110], r10w",
    "call    strlen",
    "movzx   r10d, word [rbp-0x110]",
    "cmp     r14, rax",
    "jae     0xceb72",
    "mov     dword [rbp-0x114], 0x7fffffff",
    "mov     r14d, 0x7fffffff",
    "sub     eax, 0x30",
    "lea     ecx, [rcx+rcx*4]",
    "add     rdx, 0x1",
    "movsx   eax, al",
    "lea     ecx, [rax+rcx*2]",
    "movzx   eax, byte [rdx]",
    "lea     esi, [rax-0x30]",
    "cmp     sil, 0x9",
    "jbe     0xcfa18",
    "mov     dword [rbp-0x114], ecx",
    "mov     edx, 0x3",
    "xor     esi, esi",
    "mov     rdi, r12",
    "mov     word [rbp-0x110], r10w",
    "call    sh_backslash_quote",
    "movzx   r10d, word [rbp-0x110]",
    "mov     r14, rax",
    "jmp     0xcebc5",
    "mov     rdi, r12",
    "mov     word [rbp-0x110], r10w",
    "call    ansic_shouldquote",
    "movzx   r10d, word [rbp-0x110]",
    "test    eax, eax",
    "je      0xcf7a0",
    "mov     rax, qword [rel stdout]",
    "mov     qword [rbp-0x110], r8",
    "mov     rsi, qword [rax]",
    "mov     rax, qword [rbp-0xf8]",
    "movsx   edi, byte [rax]",
    "call    putc",
    "mov     r8, qword [rbp-0x110]",
    "jmp     0xcf96c",
    "lea     r14, [rbp-0xc0]",
    "mov     rdi, r14",
    "call    sub_111fd0",
    "mov     r8, qword [rbp-0x110]",
    "cmp     qword [rel data_169018], 0x0",
    "je      0xcf818",
    "mov     eax, 0x5825",
    "mov     byte [r13+0x2], 0x0",
    "mov     word [r13], ax",
    "cmp     al, 0x29",
    "je      0xcf310",
    "add     ecx, 0x1",
    "mov     rdi, r12",
    "call    sh_invalidid",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd0ae7",
    "mov     rdi, qword [rel data_169010]",
    "lea     r14, [rbp-0xc0]",
    "xor     r8d, r8d",
    "mov     ecx, 0x16",
    "mov     rdx, r14",
    "mov     esi, 0xa",
    "call    fmtulong",
    "xor     edx, edx",
    "mov     rdi, r12",
    "mov     rsi, rax",
    "call    bind_int_variable",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xce9eb",
    "test    eax, eax",
    "je      0xd040b",
    "test    eax, eax",
    "je      0xd0441",
    "mov     edx, dword [rbp-0x124]",
    "mov     rcx, r12",
    "mov     esi, dword [rbp-0x124]",
    "mov     rdi, qword [rbp-0xf8]",
    "mov     rdx, r12",
    "xor     eax, eax",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "test    eax, eax",
    "je      0xd0477",
    "test    eax, eax",
    "je      0xd049a",
    "mov     edx, dword [rbp-0x124]",
    "mov     ecx, r12d",
    "mov     esi, dword [rbp-0x124]",
    "mov     rdi, qword [rbp-0xf8]",
    "mov     edx, r12d",
    "xor     eax, eax",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "call    sh_wrerror",
    "mov     rdi, qword [rbx]",
    "call    clearerr",
    "mov     r9, qword [rbp-0xf8]",
    "jmp     0xd0156",
    "mov     dword [rel data_169020], 0x1",
    "mov     qword [rbp-0x120], rbx",
    "mov     rbx, r12",
    "mov     r12, r13",
    "mov     qword [rbp-0x110], r9",
    "mov     word [rbp-0x118], r10w",
    "jmp     0xcf0ad",
    "mov     r12, qword [rel stdout]",
    "mov     rdi, qword [r12]",
    "call    ferror",
    "test    eax, eax",
    "je      0xcf9d0",
    "mov     byte [rdi], 0x0",
    "mov     r13d, dword [rbp-0x118]",
    "mov     word [rbp-0xf8], r10w",
    "test    r13d, r13d",
    "je      0xd03d4",
    "mov     word [rbp-0xf8], r10w",
    "test    eax, eax",
    "je      0xd03a2",
    "push    qword [rbp-0x108]",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "mov     ecx, dword [rbp-0x114]",
    "push    qword [rbp-0x110]",
    "mov     edx, dword [rbp-0x124]",
    "call    __printf_chk",
    "pop     rcx",
    "movzx   r10d, word [rbp-0xf8]",
    "pop     rsi",
    "jmp     0xce9a0",
    "push    qword [rbp-0x108]",
    "mov     edx, dword [rbp-0x114]",
    "mov     rdi, r12",
    "xor     eax, eax",
    "mov     esi, dword [rbp-0x124]",
    "push    qword [rbp-0x110]",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0xf8]",
    "pop     rdi",
    "pop     r8",
    "nop     ",
    "mov     rax, qword [r14+0x8]",
    "mov     rdi, qword [rax]",
    "call    sh_invalidnum",
    "mov     r14, qword [rel data_169018]",
    "mov     dword [rel data_169034], 0x1",
    "movzx   r10d, word [rbp-0x130]",
    "jmp     0xce903",
    "cmp     dword [r12], 0x22",
    "je      0xd05fd",
    "mov     r11d, dword [rbp-0x120]",
    "mov     eax, dword [rel data_169030]",
    "test    r11d, r11d",
    "je      0xd0625",
    "mov     r13d, dword [rel data_169030]",
    "mov     word [rbp-0xf8], r10w",
    "test    r13d, r13d",
    "je      0xd05d2",
    "mov     word [rbp-0x130], r10w",
    "mov     qword [rbp-0x110], rdi",
    "call    __errno_location",
    "mov     rdi, qword [rbp-0x110]",
    "lea     rsi, [rbp-0xe8]",
    "mov     dword [rax], 0x0",
    "mov     r12, rax",
    "call    strtod",
    "mov     rax, qword [rbp-0xe8]",
    "movzx   r10d, word [rbp-0x130]",
    "cmp     byte [rax], 0x0",
    "jne     0xd066b",
    "mov     rax, qword [r14]",
    "mov     qword [rel data_169018], rax",
    "mov     rax, qword [r14+0x8]",
    "mov     word [rbp-0x110], r10w",
    "mov     rdi, qword [rax]",
    "call    sub_c72a0",
    "mov     r14, qword [rel data_169018]",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xcea84",
    "mov     rdx, r12",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xce9a0",
    "mov     rsi, r12",
    "mov     rdi, r13",
    "xor     eax, eax",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xce9a0",
    "mov     edx, dword [rbp-0x114]",
    "mov     rcx, r12",
    "jmp     0xcfb96",
    "mov     esi, dword [rbp-0x114]",
    "mov     rdx, r12",
    "mov     rdi, r13",
    "xor     eax, eax",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xce9a0",
    "lea     rax, [rel terminating_signal]",
    "mov     edi, dword [rax]",
    "mov     eax, dword [rel data_161100]",
    "test    eax, eax",
    "jne     0xce9ba",
    "mov     rax, qword [rbp-0x100]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf320",
    "mov     r8d, dword [rbp-0x114]",
    "mov     ecx, dword [rbp-0x124]",
    "mov     rsi, r14",
    "mov     word [rbp-0x110], r10w",
    "mov     rdi, qword [rbp-0xf8]",
    "call    sub_cce40",
    "movzx   r10d, word [rbp-0x110]",
    "test    eax, eax",
    "js      0xcff71",
    "movsxd  rcx, dword [rbp-0x114]",
    "cmp     rcx, rax",
    "cmovae  eax, ecx",
    "mov     dword [rbp-0x114], eax",
    "mov     byte [r12+r14], 0x0",
    "jmp     0xceb72",
    "test    r14, r14",
    "je      0xce9eb",
    "cmp     byte [r12], 0x0",
    "je      0xce9eb",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd0371",
    "lea     rax, [rel terminating_signal]",
    "mov     edi, dword [rax]",
    "mov     eax, dword [rel data_161100]",
    "test    eax, eax",
    "jne     0xcf97d",
    "mov     rax, qword [rbp-0x100]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd0313",
    "xor     edi, edi",
    "mov     word [rbp-0x110], r10w",
    "call    time",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xced3b",
    "mov     word [rbp-0x110], r10w",
    "call    sub_cd2d0",
    "movzx   r10d, word [rbp-0x110]",
    "cmp     rax, 0xffffffffffffffff",
    "je      0xcf818",
    "sub     ecx, 0x1",
    "jmp     0xcecd2",
    "add     r12, 0x1",
    "mov     byte [rdx], al",
    "add     rdx, 0x1",
    "movzx   eax, byte [r12]",
    "test    al, al",
    "je      0xcecd6",
    "lea     rax, [rel terminating_signal]",
    "mov     edi, dword [rax]",
    "call    termsig_handler",
    "jmp     0xd053a",
    "mov     rax, qword [rbp-0x100]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xcfe65",
    "mov     rsi, qword [rbp-0xf8]",
    "mov     rdx, r12",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "mov     rdi, qword [rbp-0xf8]",
    "mov     rsi, r12",
    "xor     eax, eax",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "mov     edx, dword [rbp-0x114]",
    "mov     rcx, r12",
    "jmp     0xd02d4",
    "mov     esi, dword [rbp-0x114]",
    "mov     rdi, qword [rbp-0xf8]",
    "mov     rdx, r12",
    "xor     eax, eax",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "mov     rsi, qword [rbp-0xf8]",
    "mov     edx, r12d",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "mov     rdi, qword [rbp-0xf8]",
    "mov     esi, r12d",
    "xor     eax, eax",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "mov     edx, dword [rbp-0x114]",
    "mov     ecx, r12d",
    "jmp     0xd0277",
    "mov     esi, dword [rbp-0x114]",
    "mov     rdi, qword [rbp-0xf8]",
    "mov     edx, r12d",
    "xor     eax, eax",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "lea     rax, [rel terminating_signal]",
    "mov     edi, dword [rax]",
    "call    termsig_handler",
    "jmp     0xd0179",
    "mov     rax, qword [rbp-0x100]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd07c2",
    "movzx   edx, byte [r14+0x1]",
    "lea     r13, [r14+0x1]",
    "cmp     al, 0x5c",
    "jne     0xcf098",
    "mov     rdi, qword [r12]",
    "call    fflush",
    "jmp     0xce82b",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf9ae",
    "test    eax, eax",
    "je      0xd0591",
    "test    eax, eax",
    "je      0xd05bb",
    "push    qword [rbp-0x108]",
    "mov     edx, dword [rbp-0x124]",
    "push    qword [rbp-0x110]",
    "push    qword [rbp-0x108]",
    "mov     esi, dword [rbp-0x124]",
    "push    qword [rbp-0x110]",
    "mov     rax, qword [r14]",
    "mov     qword [rel data_169018], rax",
    "mov     rax, qword [r14+0x8]",
    "mov     word [rbp-0x130], r10w",
    "mov     rdi, qword [rax]",
    "call    sub_c72a0",
    "mov     r14, qword [rel data_169018]",
    "movzx   r10d, word [rbp-0x130]",
    "jmp     0xce903",
    "cmp     dword [rbp-0x118], 0x0",
    "mov     word [rbp-0xf8], r10w",
    "je      0xd077d",
    "mov     word [rbp-0xf8], r10w",
    "test    eax, eax",
    "je      0xd0758",
    "mov     ecx, dword [rbp-0x114]",
    "mov     edx, dword [rbp-0x124]",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "mov     eax, 0x1",
    "call    __printf_chk",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xcfd96",
    "mov     edx, dword [rbp-0x114]",
    "mov     esi, dword [rbp-0x124]",
    "mov     rdi, r12",
    "mov     eax, 0x1",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0xf8]",
    "mov     rax, qword [r14+0x8]",
    "movsd   qword [rbp-0x110], xmm0",
    "mov     rdi, qword [rax]",
    "call    sh_invalidnum",
    "movsd   xmm0, qword [rbp-0x110]",
    "mov     dword [rel data_169034], 0x1",
    "movzx   r10d, word [rbp-0x130]",
    "jmp     0xcfcf3",
    "cmp     dword [r12], 0x22",
    "je      0xd095b",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xce9a0",
    "jmp     0xcf1ef",
    "mov     word [rbp-0xf8], r10w",
    "call    throw_to_top_level",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xce9cb",
    "mov     rdi, qword [r14]",
    "mov     word [rbp-0xf8], r10w",
    "call    ferror",
    "movzx   r10d, word [rbp-0xf8]",
    "test    eax, eax",
    "jne     0xd0390",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "call    strerror",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_12113d]  {\"write error: %s\"}",
    "xor     edi, edi",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     r12, qword [rel stdout]",
    "mov     rdi, qword [r12]",
    "call    clearerr",
    "mov     rdi, r14",
    "call    free",
    "mov     rdi, r14",
    "mov     word [rbp-0xf8], r10w",
    "call    free",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xce9eb",
    "xor     esi, esi",
    "mov     rdi, r12",
    "mov     word [rbp-0x110], r10w",
    "call    sub_d80c0",
    "movzx   r10d, word [rbp-0x110]",
    "mov     r14, rax",
    "jmp     0xcf1ef",
    "mov     qword [rbp-0x100], r8",
    "call    throw_to_top_level",
    "mov     r8, qword [rbp-0x100]",
    "jmp     0xcf98e",
    "mov     rax, r8",
    "mov     r8, qword [rbp-0xf8]",
    "mov     qword [rbp-0xf8], rax",
    "jmp     0xce5b3",
    "lea     rdi, [rel data_11f11d]",
    "mov     word [rbp-0x110], r10w",
    "mov     qword [rbp-0xe8], rax",
    "call    find_variable",
    "movzx   r10d, word [rbp-0x110]",
    "test    rax, rax",
    "je      0xced6d",
    "cmp     rax, 0xfffffffffffffffe",
    "jne     0xced3b",
    "test    ecx, ecx",
    "jne     0xcecb8",
    "mov     rsi, qword [rbp-0xf8]",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "mov     rsi, qword [rbp-0xf8]",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "movzx   r10d, word [rbp-0x110]",
    "jmp     0xce9a0",
    "call    throw_to_top_level",
    "jmp     0xd018a",
    "cmp     dword [rel data_169030], 0x0",
    "jne     0xd0897",
    "mov     byte [rbx], al",
    "mov     r14, r13",
    "add     rbx, 0x1",
    "test    dl, dl",
    "je      0xcf098",
    "lea     rax, [rel terminating_signal]",
    "mov     r8d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r8d, r8d",
    "jne     0xce83c",
    "mov     rax, qword [rbp-0x100]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xcf9a4",
    "push    qword [rbp-0x108]",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "push    qword [rbp-0x110]",
    "call    __printf_chk",
    "pop     rdx",
    "movzx   r10d, word [rbp-0xf8]",
    "pop     rcx",
    "jmp     0xce9a0",
    "push    qword [rbp-0x108]",
    "mov     rdi, r12",
    "xor     eax, eax",
    "push    qword [rbp-0x110]",
    "call    sub_c72e0",
    "pop     rsi",
    "movzx   r10d, word [rbp-0xf8]",
    "pop     rdi",
    "jmp     0xce9a0",
    "push    qword [rbp-0x108]",
    "mov     edx, dword [rbp-0x114]",
    "push    qword [rbp-0x110]",
    "jmp     0xd03b4",
    "push    qword [rbp-0x108]",
    "mov     esi, dword [rbp-0x114]",
    "push    qword [rbp-0x110]",
    "jmp     0xcf7fd",
    "test    eax, eax",
    "je      0xd07a3",
    "test    eax, eax",
    "je      0xd079b",
    "mov     edx, dword [rbp-0x124]",
    "mov     esi, dword [rbp-0x124]",
    "mov     rdi, r12",
    "mov     eax, 0x1",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xcfd96",
    "cdqe    ",
    "add     qword [rel data_169010], rax",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xce9ba",
    "lea     rax, [rel terminating_signal]",
    "mov     word [rbp-0xf8], r10w",
    "mov     edi, dword [rax]",
    "call    termsig_handler",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xce9ba",
    "mov     rax, qword [rel data_169018]",
    "mov     rax, qword [rax]",
    "mov     qword [rel data_169018], rax",
    "mov     rax, qword [r14+0x8]",
    "mov     word [rbp-0x130], r10w",
    "movsd   qword [rbp-0x110], xmm0",
    "mov     rdi, qword [rax]",
    "call    sub_c72a0",
    "movzx   r10d, word [rbp-0x130]",
    "movsd   xmm0, qword [rbp-0x110]",
    "jmp     0xcfcf3",
    "call    sh_wrerror",
    "mov     rdi, qword [r14]",
    "call    clearerr",
    "jmp     0xce85e",
    "lea     rax, [rel terminating_signal]",
    "mov     edi, dword [rax]",
    "call    termsig_handler",
    "jmp     0xcffc9",
    "mov     rax, qword [rbp-0x100]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd086b",
    "lea     rax, [rel array_needs_making]",
    "mov     dword [rax], 0x1",
    "test    byte [rax+0x28 {Elf64_Header::section_header_offset.b}], 0x1",
    "je      0xcf713",
    "lea     rax, [rel shell_start_time]",
    "mov     rax, qword [rax]",
    "mov     rdi, qword [rel data_169028]",
    "mov     edx, dword [rel data_169024]",
    "mov     rsi, qword [rel data_168fe0]",
    "call    builtin_bind_variable",
    "mov     rdi, qword [rel data_169028]",
    "mov     rbx, rax",
    "call    stupidly_hack_special_variables",
    "test    rbx, rbx",
    "je      0xce85e",
    "cmp     qword [rel data_169008], 0x1000",
    "ja      0xd0875",
    "mov     r9, qword [rbp-0x110]",
    "mov     r12, rbx",
    "movzx   r10d, word [rbp-0x118]",
    "mov     byte [r12], 0x0",
    "mov     rbx, qword [rbp-0x120]",
    "test    r9, r9",
    "je      0xce9eb",
    "pxor    xmm0, xmm0",
    "lea     rcx, [rbp-0xec]",
    "mov     rsi, r12",
    "mov     rdi, r13",
    "movaps  xmmword [r12], xmm0",
    "lea     rdx, [rbp-0xe8]",
    "movups  xmmword [r12+0x9], xmm0",
    "mov     dword [rbp-0xec], 0x0",
    "call    sub_cd4c0",
    "mov     r10d, dword [rbp-0xec]",
    "movsxd  r14, eax",
    "add     r14, r13",
    "test    r10d, r10d",
    "jne     0xd00ef",
    "jmp     0xcf1ef",
    "call    throw_to_top_level",
    "jmp     0xce84d",
    "mov     rdi, qword [r12]",
    "call    ferror",
    "test    eax, eax",
    "jne     0xd0079",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "pop     r8",
    "movzx   r10d, word [rbp-0xf8]",
    "pop     r9",
    "jmp     0xce9a0",
    "mov     rdi, r12",
    "xor     eax, eax",
    "call    sub_c72e0",
    "pop     r10",
    "movzx   r10d, word [rbp-0xf8]",
    "pop     r11",
    "jmp     0xce9a0",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "mov     eax, 0x1",
    "call    __printf_chk",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xcfd96",
    "mov     rdi, r12",
    "mov     eax, 0x1",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xcfd96",
    "mov     edx, dword [rbp-0x114]",
    "jmp     0xd075e",
    "mov     esi, dword [rbp-0x114]",
    "mov     rdi, r12",
    "mov     eax, 0x1",
    "call    sub_c72e0",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xcfd96",
    "mov     qword [rbp-0xe8], 0x0",
    "mov     rdi, rbx",
    "call    localtime",
    "movzx   r10d, word [rbp-0x110]",
    "test    rax, rax",
    "mov     rcx, rax",
    "jne     0xcedbf",
    "lea     r14, [rbp-0xc0]",
    "mov     rdx, r13",
    "mov     esi, 0x80",
    "mov     word [rbp-0x110], r10w",
    "mov     rdi, r14",
    "call    strftime",
    "mov     rdi, r13",
    "mov     rbx, rax",
    "call    free",
    "test    ebx, ebx",
    "movzx   r10d, word [rbp-0x110]",
    "je      0xcf872",
    "lea     rax, [rel array_needs_making]",
    "mov     r14d, dword [rax]",
    "test    r14d, r14d",
    "je      0xced94",
    "test    dword [rbx+0x28 {Elf64_Header::section_header_offset.d}], 0x4002",
    "je      0xd0197",
    "mov     rdi, qword [rel data_169000]",
    "call    free",
    "xor     r9d, r9d",
    "mov     qword [rel data_169008], r9",
    "mov     qword [rel data_169000], r9",
    "jmp     0xd01a8",
    "cmp     qword [rel data_168fe8], 0x1000",
    "mov     rdi, qword [rel data_168fe0]",
    "ja      0xd07f9",
    "mov     edx, r12d",
    "mov     r8d, dword [rbp-0x114]",
    "mov     ecx, dword [rbp-0x124]",
    "mov     rsi, r9",
    "mov     word [rbp-0x120], r10w",
    "sub     edx, r9d",
    "jmp     0xcf5e6",
    "mov     r9, qword [rbp-0x110]",
    "mov     byte [rbx], 0x0",
    "mov     r8d, dword [rbp-0x114]",
    "test    r9, r9",
    "je      0xd0168",
    "mov     eax, dword [rbp-0xe8]",
    "test    eax, eax",
    "jle     0xcf0a1",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "call    strerror",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "lea     rsi, [rel data_12113d]  {\"write error: %s\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     rdi, qword [r12]",
    "call    clearerr",
    "jmp     0xce85e",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "mov     eax, 0x1",
    "call    __printf_chk",
    "movzx   r10d, word [rbp-0xf8]",
    "jmp     0xcfd96",
    "mov     rdi, r13",
    "lea     r14, [rbp-0xc0]",
    "call    free",
    "movzx   r10d, word [rbp-0x110]",
    "mov     byte [rbp-0xc0], 0x0",
    "jmp     0xcedfd",
    "mov     byte [rbp-0x41], 0x0",
    "lea     rbx, [rbp-0xe8]",
    "mov     word [rbp-0x110], r10w",
    "mov     rdi, rbx",
    "call    localtime",
    "movzx   r10d, word [rbp-0x110]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0xcf834",
    "jmp     0xced7a",
    "jmp     0xce85e",
    "call    free",
    "xor     r8d, r8d",
    "mov     qword [rel data_168fe8], r8",
    "mov     qword [rel data_168fe0], r8",
    "jmp     0xd01c8",
    "test    rdi, rdi",
    "je      0xd01c8",
    "mov     rdi, qword [rbp-0xf8]",
    "call    sub_cce40",
    "mov     r9, qword [rbp-0x110]",
    "movzx   r10d, word [rbp-0x120]",
    "test    eax, eax",
    "js      0xd0131",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd07cc",
    "mov     ecx, dword [rbp-0x124]",
    "mov     rdi, qword [rbp-0xf8]",
    "mov     edx, ebx",
    "mov     rsi, r9",
    "sub     edx, r9d",
    "mov     qword [rbp-0x110], r9",
    "call    sub_cce40",
    "mov     r9, qword [rbp-0x110]",
    "test    eax, eax",
    "jns     0xd0160",
    "movzx   eax, byte [r14]",
    "test    al, al",
    "je      0xcf737",
    "mov     r13d, eax",
    "mov     rdi, rbx",
    "mov     rsi, r12",
    "mov     rdx, r13",
    "add     rbx, r13",
    "call    memcpy",
    "jmp     0xcf0a1",
    "mov     r13d, 0x73",
    "mov     rdi, r14",
    "mov     word [rbp-0x110], r10w",
    "mov     word [r15], r13w",
    "call    strlen",
    "mov     r8d, dword [rbp-0x114]",
    "mov     ecx, dword [rbp-0x124]",
    "mov     rsi, r14",
    "mov     rdi, qword [rbp-0xf8]",
    "mov     edx, eax",
    "call    sub_cce40",
    "movzx   r10d, word [rbp-0x110]",
    "test    eax, eax",
    "js      0xd0814",
    "mov     r12, qword [rel stdout]",
    "mov     rdi, qword [r12]",
    "call    ferror",
    "test    eax, eax",
    "jne     0xcffb8",
    "lea     r8, [r12+0x1]",
    "jmp     0xce9ee",
    "mov     word [rbp-0x110], r10w",
    "call    sub_5ea30",
    "call    tzset",
    "movzx   r10d, word [rbp-0x110]",
    "mov     r12, qword [rel stdout]",
    "mov     rdi, qword [r12]",
    "call    ferror",
    "test    eax, eax",
    "je      0xd074a",
    "mov     byte [rdi], 0x0",
    "mov     rdi, r9",
    "call    free",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xd098c",
    "call    sh_wrerror",
    "mov     rdi, qword [r12]",
    "call    clearerr",
    "jmp     0xcffb8",
    "lea     rax, [r8+0x1]",
    "mov     word [r15], r10w",
    "mov     qword [rbp-0xf8], rax",
    "jmp     0xce5b3"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
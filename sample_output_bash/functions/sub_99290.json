{
  "address": "0x99290",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     qword [rbp-0x58], rdi",
    "mov     edi, 0x80",
    "mov     dword [rbp-0x5c], esi",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x9984e",
    "mov     esi, 0x80",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x58]",
    "mov     byte [r13], 0x28",
    "mov     edx, dword [rax+0x8]",
    "test    edx, edx",
    "jle     0x99825",
    "mov     r12d, 0x2",
    "mov     r14d, 0x1",
    "jmp     0x996a3",
    "mov     qword [rbp-0x50], 0x0",
    "mov     r14d, 0x1",
    "mov     ebx, 0x80",
    "mov     qword [rbp-0x48], 0x80",
    "nop     dword [rax]",
    "mov     eax, dword [rbp-0x5c]",
    "mov     byte [r13+r14], 0x29",
    "mov     byte [r13+r12], 0x0",
    "test    eax, eax",
    "jne     0x997fa",
    "mov     rdi, qword [r12+0x8]",
    "call    ansic_shouldquote",
    "mov     r15, qword [r12+0x8]",
    "test    eax, eax",
    "jne     0x99318",
    "jmp     0x99653",
    "mov     rdi, r13",
    "call    sh_single_quote",
    "mov     rdi, r13",
    "mov     rbx, rax",
    "call    free",
    "mov     r13, rbx",
    "jmp     0x996ba",
    "add     rsp, 0x38",
    "mov     rax, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    r15, r15",
    "je      0x99798",
    "mov     rdi, r15",
    "call    sh_contains_shell_metas",
    "test    eax, eax",
    "jne     0x99700",
    "mov     rcx, qword [rbp-0x58]",
    "add     qword [rbp-0x50], 0x1",
    "mov     rax, qword [rbp-0x50]",
    "cmp     dword [rcx+0x8], eax",
    "jg      0x992f8",
    "mov     rdi, qword [r12+0x10]",
    "test    rdi, rdi",
    "jne     0x99346",
    "cmp     byte [r15], 0x0",
    "je      0x99710",
    "mov     rdi, r15",
    "call    sh_double_quote",
    "mov     r15, rax",
    "jmp     0x99338",
    "movzx   edx, byte [r15]",
    "cmp     dl, 0x40",
    "je      0x99738",
    "mov     rax, qword [rbp-0x58]",
    "mov     rcx, qword [rbp-0x50]",
    "mov     rax, qword [rax]",
    "mov     r12, qword [rax+rcx*8]",
    "test    r12, r12",
    "jne     0x9953c",
    "lea     eax, [r14+0x1]",
    "movsxd  r14, r14d",
    "movsxd  r12, eax",
    "cmp     eax, ebx",
    "jl      0x996a3",
    "call    ansic_shouldquote",
    "test    eax, eax",
    "je      0x996d0",
    "mov     eax, 0x9",
    "xor     r8d, r8d",
    "xor     r15d, r15d",
    "jmp     0x993f0",
    "mov     rdi, qword [r12+0x10]",
    "xor     r15d, r15d",
    "test    rdi, rdi",
    "jne     0x99346",
    "mov     rdi, r15",
    "xor     esi, esi",
    "call    sub_d80c0",
    "mov     r15, rax",
    "mov     rdi, qword [r12+0x10]",
    "test    rdi, rdi",
    "je      0x996e8",
    "cmp     byte [r15+0x1], 0x0",
    "je      0x99700",
    "cmp     dl, 0x2a",
    "je      0x99738",
    "sub     eax, ebx",
    "and     eax, 0xfffffff8",
    "lea     ebx, [rbx+rax+0x8]",
    "movsxd  rbx, ebx",
    "test    r13, r13",
    "je      0x99815",
    "mov     rdi, qword [r12+0x10]",
    "call    sh_double_quote",
    "mov     r8, rax",
    "jmp     0x99378",
    "mov     r8, qword [r12+0x10]",
    "test    r8, r8",
    "je      0x997cd",
    "add     eax, r14d",
    "cmp     eax, ebx",
    "jge     0x995d0",
    "mov     eax, 0x9",
    "xor     r8d, r8d",
    "xor     r15d, r15d",
    "jmp     0x993f0",
    "test    r15, r15",
    "je      0x99721",
    "mov     rdi, qword [r12+0x10]",
    "test    rdi, rdi",
    "jne     0x99346",
    "mov     rdi, qword [r12+0x10]",
    "test    rdi, rdi",
    "jne     0x99346",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "jmp     0x9969a",
    "mov     rdi, r13",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r13, rax",
    "mov     edx, 0x8",
    "test    r15, r15",
    "je      0x993a8",
    "test    r15, r15",
    "je      0x99721",
    "cmp     byte [r8], 0x0",
    "je      0x99770",
    "add     ebx, ebx",
    "cmp     eax, ebx",
    "jge     0x995d0",
    "lea     r9d, [r14+0x1]",
    "mov     rax, qword [rbp-0x48]",
    "movsxd  r14, r14d",
    "mov     rsi, r15",
    "movsxd  rdi, r9d",
    "mov     byte [r13+r14], 0x5b",
    "cmp     rdi, rax",
    "mov     rdx, rax",
    "mov     qword [rbp-0x40], r8",
    "cmovae  rdx, rdi",
    "mov     dword [rbp-0x38], r9d",
    "sub     rdx, rdi",
    "add     rdi, r13",
    "call    __strcpy_chk",
    "xor     eax, eax",
    "cmp     byte [r15], 0x0",
    "mov     r9d, dword [rbp-0x38]",
    "mov     r8, qword [rbp-0x40]",
    "je      0x99470",
    "movzx   edx, byte [r15]",
    "jmp     0x99587",
    "jmp     0x995a7",
    "mov     eax, 0x9",
    "xor     r8d, r8d",
    "test    dl, dl",
    "je      0x993f0",
    "test    r13, r13",
    "je      0x99873",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "test    r8, r8",
    "je      0x995bd",
    "cmp     byte [r15], 0x0",
    "je      0x993a8",
    "cmp     byte [r15], 0x0",
    "mov     eax, 0x9",
    "je      0x993f0",
    "test    r15, r15",
    "je      0x99721",
    "mov     rdi, r8",
    "xor     esi, esi",
    "call    sub_d80c0",
    "mov     r8, rax",
    "movsxd  rsi, ebx",
    "mov     qword [rbp-0x38], r8",
    "mov     qword [rbp-0x48], rsi",
    "test    r13, r13",
    "je      0x99758",
    "lea     r14d, [r9+rax]",
    "movzx   esi, word [rel data_136aa6[6]]  {\"]={\"}",
    "lea     r9d, [r14+0x2]",
    "movsxd  rax, r14d",
    "mov     word [r13+rax], si",
    "movsxd  rax, r9d",
    "mov     dword [rbp-0x38], r9d",
    "lea     rdi, [r13+rax]",
    "test    r8, r8",
    "je      0x99630",
    "cmp     byte [r15+0x1], 0x0",
    "mov     eax, 0x1",
    "je      0x99470",
    "cmp     byte [r15+0x2], 0x0",
    "je      0x99866",
    "cmp     byte [r15+0x1], 0x0",
    "mov     eax, 0xa",
    "je      0x993f0",
    "lea     eax, [rdx+0x1]",
    "xor     r8d, r8d",
    "jmp     0x993f0",
    "cmp     byte [r8], 0x0",
    "lea     eax, [rdx+0x1]",
    "je      0x993f0",
    "cmp     byte [r15+0x1], 0x0",
    "mov     edx, 0x9",
    "je      0x993a8",
    "cmp     byte [r15+0x1], 0x0",
    "mov     eax, 0xa",
    "je      0x993f0",
    "cmp     byte [r15], 0x0",
    "je      0x997c0",
    "mov     rdi, qword [rbp-0x48]",
    "call    malloc",
    "mov     r8, qword [rbp-0x38]",
    "mov     r13, rax",
    "jmp     0x995f9",
    "mov     rdi, r13",
    "call    realloc",
    "mov     r8, qword [rbp-0x38]",
    "mov     r13, rax",
    "mov     byte [rdi], 0x20",
    "cmp     qword [r12+0x8], r15",
    "je      0x99642",
    "mov     rcx, qword [rbp-0x48]",
    "mov     rsi, r8",
    "mov     qword [rbp-0x40], r8",
    "cmp     rcx, rax",
    "mov     rdx, rcx",
    "cmovb   rdx, rax",
    "sub     rdx, rax",
    "call    __strcpy_chk",
    "mov     r8, qword [rbp-0x40]",
    "xor     eax, eax",
    "mov     r9d, dword [rbp-0x38]",
    "cmp     byte [r8], 0x0",
    "je      0x99500",
    "cmp     byte [r15+0x2], 0x0",
    "mov     eax, 0x2",
    "je      0x99470",
    "mov     eax, 0xb",
    "xor     r8d, r8d",
    "jmp     0x993f0",
    "mov     rdi, r15",
    "call    strlen",
    "lea     edx, [rax+0x8]",
    "cmp     byte [r8+0x1], 0x0",
    "lea     eax, [rdx+0x2]",
    "je      0x993f0",
    "cmp     byte [r15+0x2], 0x0",
    "jne     0x99836",
    "jmp     0x995a7",
    "mov     eax, 0x9",
    "xor     r8d, r8d",
    "jmp     0x993f0",
    "cmp     byte [r15+0x1], 0x0",
    "jne     0x995a7",
    "test    r13, r13",
    "jne     0x993fb",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, qword [rbp-0x48]",
    "lea     rsi, [rel data_11f045]  {\"xrealloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     r12, qword [r12]",
    "add     r14d, 0x3",
    "test    r12, r12",
    "jne     0x9953c",
    "mov     rdi, r15",
    "call    free",
    "add     r9d, eax",
    "lea     r14d, [r9+0x1]",
    "movsxd  r9, r9d",
    "mov     byte [r13+r9], 0x20",
    "cmp     qword [r12+0x8], r15",
    "je      0x99527",
    "cmp     byte [r8+0x1], 0x0",
    "mov     eax, 0x1",
    "je      0x99500",
    "mov     rdi, r15",
    "mov     dword [rbp-0x40], r9d",
    "mov     qword [rbp-0x38], r8",
    "call    strlen",
    "mov     r9d, dword [rbp-0x40]",
    "mov     r8, qword [rbp-0x38]",
    "nop     ",
    "cmp     byte [r8+0x2], 0x0",
    "lea     eax, [rdx+0x3]",
    "je      0x993f0",
    "mov     rdi, r15",
    "mov     qword [rbp-0x38], r8",
    "call    strlen",
    "mov     r8, qword [rbp-0x38]",
    "lea     edx, [rax+0x8]",
    "jmp     0x993a8",
    "mov     edx, 0xa",
    "nop     dword [rax]",
    "mov     eax, 0xa",
    "xor     r8d, r8d",
    "jmp     0x993f0",
    "mov     rdi, r8",
    "call    free",
    "mov     r12, qword [r12]",
    "test    r12, r12",
    "je      0x99653",
    "mov     rdi, r15",
    "mov     qword [rbp-0x38], r8",
    "call    free",
    "mov     r8, qword [rbp-0x38]",
    "cmp     byte [r8+0x2], 0x0",
    "mov     eax, 0x2",
    "je      0x99500",
    "mov     rdi, r8",
    "mov     dword [rbp-0x40], edx",
    "mov     qword [rbp-0x38], r8",
    "call    strlen",
    "mov     edx, dword [rbp-0x40]",
    "mov     r8, qword [rbp-0x38]",
    "lea     eax, [rdx+rax+0x1]",
    "nop     dword [rax+rax]",
    "mov     rdi, r8",
    "mov     dword [rbp-0x40], r9d",
    "mov     qword [rbp-0x38], r8",
    "call    strlen",
    "mov     r9d, dword [rbp-0x40]",
    "mov     r8, qword [rbp-0x38]",
    "nop     word [rax+rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
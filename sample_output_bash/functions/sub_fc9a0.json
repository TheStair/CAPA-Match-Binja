{
  "address": "0xfc9a0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "contain loop",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13d, edi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     qword [rbp-0x38], rsi",
    "mov     qword [rbp-0x40], rdx",
    "call    __ctype_get_mb_cur_max",
    "mov     r15, rax",
    "lea     rax, [rel _rl_last_v_pos]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xfcce0",
    "xor     r14d, r14d",
    "cmp     eax, dword [rel data_16a6fc]",
    "jne     0xfc9e9",
    "mov     r14d, dword [rel data_16a700]",
    "test    r14d, r14d",
    "jne     0xfcc38",
    "lea     rax, [rel _rl_last_c_pos]",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "jne     0xfca10",
    "mov     r14d, dword [rel data_16a700]",
    "sub     r14d, dword [rel data_16a728]",
    "jmp     0xfc9e9",
    "lea     rax, [rel _rl_screenwidth]",
    "mov     eax, dword [rax]",
    "cmp     dword [rel data_16a720], eax",
    "jle     0xfc9e9",
    "cmp     r15d, 0x1",
    "jle     0xfcbd8",
    "cmp     ebx, r13d",
    "jne     0xfca10",
    "mov     r14d, dword [rel data_16a728]",
    "jmp     0xfc9e9",
    "cmp     ebx, r13d",
    "je      0xfc9fb",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     r12d, dword [rax]",
    "test    r12d, r12d",
    "jne     0xfcbd8",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     edx, ebx",
    "mov     r12d, r13d",
    "mov     r11d, dword [rel data_16a72c]",
    "cmp     r11d, r13d",
    "je      0xfcd70",
    "lea     rax, [rel _rl_term_cr]",
    "lea     rdx, [rel _rl_output_character_function]",
    "mov     esi, 0x1",
    "mov     rdi, qword [rax]",
    "call    tputs",
    "lea     rax, [rel _rl_last_c_pos]",
    "lea     esi, [r12+0x1]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x44], eax",
    "sub     eax, r12d",
    "cmp     esi, eax",
    "jl      0xfcc60",
    "mov     rsi, qword [rel data_16a738]",
    "mov     rdi, qword [rbp-0x38]",
    "movsxd  rdx, r13d",
    "call    memcmp",
    "mov     r10d, eax",
    "test    eax, eax",
    "jne     0xfca63",
    "jge     0xfca63",
    "lea     rax, [rel _rl_term_cr]",
    "lea     rdx, [rel _rl_output_character_function]",
    "mov     esi, 0x1",
    "xor     ebx, ebx",
    "mov     rdi, qword [rax]",
    "call    tputs",
    "lea     rax, [rel _rl_last_c_pos]",
    "mov     dword [rax], 0x0",
    "test    r12d, r12d",
    "jle     0xfcc25",
    "lea     rax, [rel _rl_term_autowrap]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0xfcc1e",
    "mov     r10d, 0x1",
    "test    r13d, r13d",
    "jle     0xfcaa0",
    "mov     dword [rel data_16a6e4], 0x1",
    "mov     r12d, dword [rel data_16a720]",
    "jmp     0xfcaa0",
    "mov     rsi, qword [rel data_16a738]",
    "test    rsi, rsi",
    "je      0xfca63",
    "sub     ebx, r12d",
    "mov     edi, ebx",
    "call    _rl_backspace",
    "jmp     0xfcbbc",
    "cmp     r15d, 0x1",
    "jle     0xfcd08",
    "cmp     ebx, r12d",
    "jl      0xfcc8f",
    "lea     rax, [rel _rl_screenwidth]",
    "cmp     dword [rax], edx",
    "je      0xfcc60",
    "mov     rdx, qword [rel data_1604d0]",
    "mov     edi, dword [rel data_16a6e8]",
    "mov     rcx, qword [rbp-0x38]",
    "mov     rax, qword [rdx]",
    "test    edi, edi",
    "je      0xfcd58",
    "mov     dword [rbp-0x44], r10d",
    "mov     r12d, r13d",
    "call    __ctype_get_mb_cur_max",
    "mov     r10d, dword [rbp-0x44]",
    "cmp     rax, 0x1",
    "je      0xfcaa0",
    "mov     rdi, qword [rbp-0x38]",
    "movsxd  rdx, r11d",
    "mov     dword [rbp-0x44], r11d",
    "call    memcmp",
    "test    eax, eax",
    "je      0xfce00",
    "lea     rax, [rel _rl_last_c_pos]",
    "mov     dword [rax], r12d",
    "mov     rsi, qword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x38]",
    "movsxd  rax, ebx",
    "mov     edx, r13d",
    "sub     edx, ebx",
    "add     rsi, rax",
    "add     rdi, rax",
    "call    sub_f89d0",
    "lea     rax, [rel _rl_last_c_pos]",
    "mov     dword [rax], r12d",
    "jmp     0xfcbc6",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xfcd08",
    "jle     0xfcbbc",
    "cmp     r12d, ebx",
    "jne     0xfcb86",
    "cmp     rax, rcx",
    "jae     0xfcd38",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "je      0xfcda8",
    "mov     dword [rbp-0x48], eax",
    "call    __ctype_get_mb_cur_max",
    "mov     r11d, dword [rbp-0x44]",
    "mov     r10d, dword [rbp-0x48]",
    "cmp     rax, 0x1",
    "je      0xfce5b",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     r15, [rel _rl_term_forward_char]",
    "mov     rdi, qword [r15]",
    "test    rdi, rdi",
    "je      0xfcdd0",
    "lea     rax, [rel _rl_last_c_pos]",
    "mov     edx, dword [rax]",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "jne     0xfcbe6",
    "jmp     0xfc9fb",
    "test    r10d, r10d",
    "je      0xfcd58",
    "movsxd  rsi, dword [rel data_16a6ec]",
    "mov     rdx, qword [rdx+0x10]",
    "movsxd  rdx, dword [rdx+rsi*4+0x4]",
    "add     rdx, rax",
    "cmp     qword [rbp-0x38], rdx",
    "jae     0xfcd38",
    "mov     rdi, qword [rbp-0x38]",
    "mov     ecx, 0x1",
    "mov     edx, r13d",
    "xor     esi, esi",
    "call    sub_f9f10",
    "mov     r10d, dword [rbp-0x44]",
    "mov     r12d, eax",
    "jmp     0xfcaa0",
    "nop     word [rax+rax]",
    "mov     ecx, r13d",
    "sub     ecx, r11d",
    "jmp     0xfce43",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "jne     0xfce5b",
    "lea     rax, [rel _rl_term_cr]",
    "lea     rdx, [rel _rl_output_character_function]",
    "mov     esi, 0x1",
    "mov     rdi, qword [rax]",
    "call    tputs",
    "mov     rsi, qword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x38]",
    "mov     edx, r13d",
    "call    sub_f89d0",
    "jmp     0xfcbbc",
    "lea     r14, [rel _rl_output_character_function]",
    "jmp     0xfccc3",
    "sub     edx, r14d",
    "test    r12d, r12d",
    "je      0xfcba1",
    "test    r12d, r12d",
    "jne     0xfcbee",
    "mov     edx, dword [rel data_16a724]",
    "cmp     r13d, edx",
    "jg      0xfcb70",
    "test    r10d, r10d",
    "je      0xfcd58",
    "mov     dword [rel data_16a6e4], 0x1",
    "add     ecx, dword [rel data_16a720]",
    "mov     r12d, ecx",
    "jmp     0xfcaa0",
    "mov     rdi, qword [rbp-0x38]",
    "mov     ecx, 0x1",
    "mov     edx, r13d",
    "mov     esi, r11d",
    "mov     dword [rbp-0x44], r10d",
    "call    sub_f9f10",
    "mov     r10d, dword [rbp-0x44]",
    "mov     ecx, eax",
    "mov     rdx, r14",
    "mov     esi, 0x1",
    "add     ebx, 0x1",
    "call    tputs",
    "cmp     ebx, r12d",
    "jl      0xfccc0",
    "mov     dword [rel data_16a6e4], 0x1",
    "sub     r12d, r14d",
    "cmp     ebx, r12d",
    "je      0xfc9fb",
    "jmp     0xfcb10",
    "mov     edx, dword [rel data_16a724]",
    "cmp     edx, r13d",
    "jl      0xfcb70",
    "mov     rdi, qword [r15]",
    "jmp     0xfcbbc",
    "lea     rax, [rel _rl_screenwidth]",
    "mov     eax, dword [rax]",
    "cmp     dword [rel data_16a720], eax",
    "jl      0xfcd58",
    "mov     rsi, qword [rbp-0x38]",
    "sub     rsi, rax",
    "lea     eax, [r13+rsi]",
    "cmp     edx, eax",
    "jl      0xfcb70",
    "lea     rax, [rel _rl_last_v_pos]",
    "movsxd  rax, dword [rax]",
    "cmp     eax, dword [rel data_16a6fc]",
    "jne     0xfcd58",
    "nop     word [rax+rax]",
    "mov     esi, dword [rel data_16a700]",
    "cmp     esi, r14d",
    "jl      0xfcd58",
    "cmp     r12d, r14d",
    "jl      0xfcd58",
    "mov     rdi, qword [rel data_15a1c8]",
    "mov     rdi, qword [rdi+0x10]",
    "sub     edx, dword [rdi+rax*4]",
    "mov     eax, edx",
    "sub     eax, esi",
    "cmp     eax, r13d",
    "jge     0xfcd58",
    "nop     "
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xdb920",
  "rules": [
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "resolve DNS",
    "contain loop",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x58",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xdbb40",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r14",
    "mov     rsi, rbx",
    "lea     r14, [r13+0x9]",
    "mov     rdi, r13",
    "call    __strcpy_chk",
    "mov     esi, 0x2f",
    "mov     rdi, r14",
    "call    strchr",
    "test    rax, rax",
    "je      0xdbaed",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_134548]  {\"%s: bad network path specificati\u2026\"}",
    "xor     edi, edi",
    "mov     r12d, 0xffffffff",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "mov     rdi, r13",
    "call    free",
    "jmp     0xdba28",
    "lea     r15, [rax+0x1]",
    "mov     byte [rax], 0x0",
    "xor     eax, eax",
    "cmp     byte [rbx+0x5], 0x74",
    "setne   al",
    "pxor    xmm0, xmm0",
    "lea     rcx, [rbp-0x78]",
    "mov     rsi, r15",
    "add     eax, 0x1",
    "lea     rdx, [rbp-0x70]",
    "mov     rdi, r14",
    "movaps  xmmword [rbp-0x70], xmm0",
    "movaps  xmmword [rbp-0x60], xmm0",
    "mov     dword [rbp-0x68], eax",
    "movaps  xmmword [rbp-0x50], xmm0",
    "call    getaddrinfo",
    "test    eax, eax",
    "jne     0xdbabd",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xdbb56",
    "cmp     eax, 0xfffffff8",
    "je      0xdbb20",
    "mov     rbx, qword [rbp-0x78]",
    "test    rbx, rbx",
    "je      0xdba20",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x58",
    "mov     eax, r12d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     edi, 0xfffffff8",
    "call    gai_strerror",
    "mov     rsi, r15",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    internal_error",
    "jmp     0xdbadd",
    "mov     edi, eax",
    "call    gai_strerror",
    "mov     rsi, r14",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    internal_error",
    "mov     rdi, r13",
    "call    free",
    "nop     word [rax+rax]",
    "call    __errno_location",
    "mov     dword [rax], 0x16",
    "jmp     0xdba15",
    "mov     r12d, 0xffffffff",
    "nop     dword [rax+rax]",
    "mov     edx, dword [rbx+0x10 {addrinfo::ai_addrlen}]",
    "mov     rsi, qword [rbx+0x18 {addrinfo::ai_addr}]",
    "mov     edi, eax",
    "call    connect",
    "test    eax, eax",
    "jns     0xdba80",
    "mov     rbx, qword [rbx+0x28 {addrinfo::ai_next}]",
    "test    rbx, rbx",
    "jne     0xdb9e0",
    "mov     rdi, qword [rbp-0x78]",
    "call    freeaddrinfo",
    "jmp     0xdba20",
    "cmp     qword [rbx+0x28 {addrinfo::ai_next}], 0x0",
    "je      0xdba8b",
    "mov     edx, dword [rbx+0xc {addrinfo::ai_protocol}]",
    "mov     esi, dword [rbx+0x8 {addrinfo::ai_socktype}]",
    "mov     edi, dword [rbx+0x4 {addrinfo::ai_family}]",
    "call    socket",
    "mov     r12d, eax",
    "test    eax, eax",
    "jns     0xdba50",
    "lea     rdi, [rel data_121fe1]  {\"socket\"}",
    "xor     eax, eax",
    "call    sys_error",
    "mov     rdi, qword [rbp-0x78]",
    "call    freeaddrinfo",
    "call    __errno_location",
    "lea     rdi, [rel data_121fe8]  {\"connect\"}",
    "mov     r14d, dword [rax]",
    "mov     rbx, rax",
    "xor     eax, eax",
    "call    sys_error",
    "mov     edi, r12d",
    "call    close",
    "mov     rdi, qword [rbp-0x78]",
    "call    freeaddrinfo",
    "mov     dword [rbx], r14d",
    "jmp     0xdba15",
    "mov     edi, r12d",
    "call    close",
    "mov     rbx, qword [rbx+0x28 {addrinfo::ai_next}]",
    "test    rbx, rbx",
    "jne     0xdb9e0",
    "jmp     0xdba20"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
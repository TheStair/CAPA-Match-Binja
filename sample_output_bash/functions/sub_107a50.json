{
  "address": "0x107a50",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop",
    "encrypt data using Curve25519/7d070d905d0942e295bbb2c9df72fc86"
  ],
  "disassembly": [
    "endbr64 ",
    "test    edi, edi",
    "je      0x107c3e",
    "xor     eax, eax",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15d, edi",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     r12, [rel rl_point]",
    "lea     r14, [rel rl_end]",
    "nop     ",
    "mov     dword [r12], eax",
    "jmp     0x107b8b",
    "je      0x107b8b",
    "add     rsp, 0x8",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     r13, [rel rl_line_buffer]",
    "mov     edx, dword [r12]",
    "mov     eax, dword [r14]",
    "cmp     eax, edx",
    "jl      0x107bf8",
    "lea     rax, [rel _rl_allow_pathname_alphabetic_chars]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x107bc0",
    "je      0x107b8b",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x107bd8",
    "and     ebx, 0x7f",
    "lea     rdi, [rel data_122a74]  {\"/-_=~.#$\"}",
    "mov     esi, ebx",
    "call    strchr",
    "test    rax, rax",
    "je      0x107bc0",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x107b0e",
    "mov     eax, dword [r12]",
    "lea     esi, [rax+0x1]",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x107c00",
    "mov     eax, dword [r12]",
    "lea     esi, [rax+0x1]",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0x107c20",
    "mov     rdi, qword [r13]",
    "call    _rl_char_value",
    "mov     edi, eax",
    "mov     ebx, eax",
    "call    iswalnum",
    "test    eax, eax",
    "jne     0x107add",
    "cmp     esi, eax",
    "jle     0x107b8b",
    "mov     esi, dword [r12]",
    "mov     rdi, qword [r13]",
    "mov     ecx, 0x1",
    "mov     edx, 0x1",
    "call    sub_107460",
    "mov     esi, eax",
    "jmp     0x107bdf",
    "mov     rdi, qword [r13]",
    "call    _rl_char_value",
    "mov     edi, eax",
    "mov     ebx, eax",
    "call    iswalnum",
    "test    eax, eax",
    "jne     0x107b36",
    "jmp     0x107b81",
    "mov     esi, dword [r12]",
    "mov     rdi, qword [r13]",
    "mov     ecx, 0x1",
    "mov     edx, 0x1",
    "call    sub_107460",
    "mov     esi, eax",
    "jmp     0x107b15",
    "nop     word [rax+rax]",
    "mov     eax, dword [r14]",
    "mov     dword [r12], esi",
    "cmp     esi, eax",
    "jl      0x107a9c",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x107b4e",
    "lea     rax, [rel _rl_allow_pathname_alphabetic_chars]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x107b20",
    "sub     r15d, 0x1",
    "jne     0x107a80",
    "mov     dword [r12], esi",
    "cmp     dword [r14], esi",
    "jg      0x107b5e",
    "mov     eax, dword [r12]",
    "lea     esi, [rax+0x1]",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x107ba0",
    "and     ebx, 0x7f",
    "lea     rdi, [rel data_122a74]  {\"/-_=~.#$\"}",
    "mov     esi, ebx",
    "call    strchr",
    "test    rax, rax",
    "je      0x107b81",
    "mov     esi, dword [r12]",
    "mov     eax, dword [r14]",
    "cmp     esi, eax",
    "jg      0x107bf8",
    "mov     esi, dword [r12]",
    "mov     rdi, qword [r13]",
    "mov     ecx, 0x1",
    "mov     edx, 0x1",
    "call    sub_107460",
    "mov     esi, eax",
    "jmp     0x107b55",
    "mov     dword [r12], esi",
    "cmp     esi, dword [r14]",
    "jge     0x107b81"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
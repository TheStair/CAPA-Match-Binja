{
  "address": "0xaf190",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "encrypt data using Curve25519/a423aa5d0923438c8eac88d5abe4fcd5",
    "hide graphical window from taskbar/3804d9f76e4f47c8b3a7ed608bc3a556",
    "check for trap flag exception/457e23e248b947a19120dac4e8cc1687",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "push    r14 {__saved_r14}",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "mov     r12, rdi",
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0x58",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38 {var_40}], rax",
    "lea     rax, [rel no_line_editing]",
    "mov     esi, dword [rax]  {no_line_editing}",
    "test    esi, esi",
    "jne     0xaf798",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121167]  {\"line editing not enabled\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_warning",
    "lea     rax, [rel bash_readline_initialized]",
    "mov     ecx, dword [rax]  {bash_readline_initialized}",
    "test    ecx, ecx",
    "jne     0xaf1d7",
    "lea     rax, [rel bash_readline_initialized]",
    "mov     ecx, dword [rax]  {bash_readline_initialized}",
    "test    ecx, ecx",
    "je      0xaf7c6",
    "lea     rdi, [rel data_121180]  {\"bind_builtin\"}",
    "call    begin_unwind_frame",
    "mov     edi, 0x24",
    "call    malloc",
    "test    rax, rax",
    "je      0xafdee",
    "call    sub_a65a0",
    "jmp     0xaf1d7",
    "mov     esi, 0x24",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     dword [rax+0x18], 0x8",
    "xor     r14d, r14d  {0x0}",
    "mov     rdx, qword [rel data_161a50]",
    "lea     rcx, [rel sub_872f0]",
    "mov     qword [rax+0x8], rcx  {sub_872f0}",
    "xor     r15d, r15d  {0x0}",
    "lea     r13, [rel data_12118d]",
    "lea     rbx, [rel jump_table_137008]",
    "mov     qword [rax], rdx",
    "lea     rdx, [rel rl_outstream]",
    "mov     qword [rel data_161a50], rax",
    "mov     rcx, qword [rdx]  {rl_outstream}",
    "mov     qword [rax+0x10], rdx  {rl_outstream}",
    "mov     qword [rel data_168d30], 0x0",
    "mov     qword [rax+0x1c], rcx",
    "mov     rax, qword [rel stdout]",
    "mov     dword [rel data_168d28], 0x1",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x68 {var_70}], 0x0",
    "mov     qword [rbp-0x48 {var_50}], 0x0",
    "mov     qword [rdx], rax  {rl_outstream}",
    "lea     rax, [rel loptend]",
    "mov     qword [rbp-0x60 {var_68}], 0x0",
    "mov     qword [rax], 0x0  {loptend}",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rbp-0x50 {var_58}], 0x0",
    "mov     qword [rax], 0x0  {lcurrent}",
    "mov     qword [rbp-0x58 {var_60}], 0x0",
    "nop     dword [rax]",
    "lea     rax, [rel loptend]",
    "mov     rbx, qword [rax]  {loptend}",
    "test    r15b, 0x20",
    "je      0xaf365",
    "sub     eax, 0x50",
    "cmp     eax, 0x28",
    "ja      0xaf2d0",
    "mov     qword [rbp-0x80 {_rl_keymap_5}], 0x0",
    "test    r15b, 0x1",
    "jne     0xaf7f9",
    "mov     rdi, qword [rbp-0x58 {list_optarg_3}]",
    "test    rdi, rdi",
    "jne     0xaf7d0",
    "{Case 0x1-0x2, 0x4-0x5, 0x7, 0x9-0x15, 0x17-0x1b, 0x1e-0x1f, 0x24, 0x27}",
    "call    builtin_usage",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0xaf2eb  {data_161a50}",
    "movsxd  rax, dword [rbx+rax*4]",
    "add     rax, rbx",
    "jmp     rax",
    "call    rl_list_funmap_names",
    "test    r15b, 0x2",
    "je      0xaf381",
    "test    r15b, 0x2",
    "jne     0xaf808",
    "call    rl_get_keymap_by_name",
    "test    rax, rax",
    "je      0xafc60",
    "mov     r12d, 0x102",
    "lea     rdi, [rel data_121180]  {\"bind_builtin\"}",
    "call    sub_113ed0",
    "{Case 0x28}",
    "lea     rax, [rel list_optarg]",
    "mov     rsi, r13  {data_12118d, \"lvpVPsSXf:q:u:m:r:x:\"}",
    "mov     rdi, r12",
    "or      r15d, 0x1000",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rbp-0x68 {list_optarg_1}], rax",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "jne     0xaf2bc",
    "{Case 0x26}",
    "or      r15d, 0x8",
    "jmp     0xaf2a8",
    "{Case 0x25}",
    "lea     rax, [rel list_optarg]",
    "or      r15d, 0x800",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rbp-0x60 {list_optarg_2}], rax",
    "jmp     0xaf2a8",
    "{Case 0x23}",
    "or      r15d, 0x200",
    "jmp     0xaf2a8",
    "{Case 0x22}",
    "lea     rax, [rel list_optarg]",
    "or      r15d, 0x40",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rbp-0x48 {list_optarg_5}], rax",
    "jmp     0xaf2a8",
    "{Case 0x21}",
    "lea     rax, [rel list_optarg]",
    "or      r15d, 0x10",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rbp-0x50 {list_optarg_4}], rax",
    "jmp     0xaf2a8",
    "{Case 0x20}",
    "or      r15d, 0x2",
    "jmp     0xaf2a8",
    "{Case 0x1d}",
    "lea     rax, [rel list_optarg]",
    "or      r15d, 0x20",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rbp-0x58 {list_optarg_3}], rax",
    "jmp     0xaf2a8",
    "{Case 0x1c}",
    "or      r15d, 0x1",
    "jmp     0xaf2a8",
    "{Case 0x16}",
    "lea     rax, [rel list_optarg]",
    "or      r15d, 0x4",
    "mov     r14, qword [rax]  {list_optarg}",
    "jmp     0xaf2a8",
    "{Case 0x8}",
    "or      r15d, 0x2000",
    "jmp     0xaf2a8",
    "{Case 0x6}",
    "or      r15d, 0x100",
    "jmp     0xaf2a8",
    "{Case 0x3}",
    "or      r15d, 0x400",
    "jmp     0xaf2a8",
    "{Case 0x0}",
    "or      r15b, 0x80",
    "jmp     0xaf2a8",
    "test    r15b, 0x80",
    "jne     0xaf81c",
    "mov     edi, 0x1",
    "call    rl_function_dumper",
    "test    r15b, 0x80",
    "je      0xaf38b",
    "lea     rsi, [rel data_1211a2]  {\"`%s': invalid keymap name\"}",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x58 {list_optarg_3}]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "lea     rdx, [rel _rl_keymap]",
    "mov     rcx, qword [rdx]  {_rl_keymap}",
    "mov     qword [rdx], rax  {_rl_keymap}",
    "mov     qword [rbp-0x80 {_rl_keymap_5}], rcx",
    "test    r15b, 0x1",
    "je      0xaf377",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x58",
    "mov     edi, r12d",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "jmp     sh_chkwrite",
    "nop     dword [rax+rax]",
    "mov     rsi, r13  {data_12118d, \"lvpVPsSXf:q:u:m:r:x:\"}",
    "mov     rdi, r12",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xaf348",
    "xor     edi, edi  {0x0}",
    "call    rl_function_dumper",
    "test    r15d, 0x200",
    "je      0xaf398",
    "test    r15d, 0x200",
    "jne     0xaf830",
    "lea     rdi, [rel data_121180]  {\"bind_builtin\"}",
    "call    sub_113ed0",
    "jmp     0xaf788",
    "jmp     0xaf788",
    "test    r15d, 0x400",
    "jne     0xaf853",
    "lea     rax, [rel _rl_keymap]",
    "xor     edx, edx  {0x0}",
    "mov     edi, 0x1",
    "mov     rsi, qword [rax]  {_rl_keymap}",
    "call    sub_f20c0",
    "test    r15d, 0x400",
    "je      0xaf3a5",
    "mov     r12d, 0x1",
    "jmp     0xaf2f1",
    "lea     rax, [rel _rl_keymap]",
    "xor     edx, edx  {0x0}",
    "xor     edi, edi  {0x0}",
    "mov     rsi, qword [rax]  {_rl_keymap}",
    "call    sub_f20c0",
    "test    r15b, 0x8",
    "je      0xaf3af",
    "test    r15b, 0x8",
    "jne     0xaf870",
    "mov     rax, qword [rbp-0x38 {var_40}]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xafdff",
    "test    r15d, 0x100",
    "jne     0xaf887",
    "mov     edi, 0x1",
    "call    rl_variable_dumper",
    "test    r15d, 0x100",
    "je      0xaf3bc",
    "xor     edi, edi  {0x0}",
    "call    rl_variable_dumper",
    "jmp     0xaf3bc",
    "test    r15b, 0x4",
    "je      0xaf3cb",
    "test    r15b, 0x10",
    "je      0xaf3de",
    "test    r14, r14",
    "jne     0xaf893",
    "xor     r12d, r12d  {0x0}",
    "mov     rax, qword [rbp-0x50 {list_optarg_4}]",
    "test    rax, rax",
    "jne     0xaf91d",
    "mov     rdi, r14",
    "call    rl_read_init_file",
    "test    eax, eax",
    "je      0xaf3cb",
    "test    r15b, 0x40",
    "je      0xaf408",
    "mov     rax, qword [rbp-0x60 {list_optarg_2}]",
    "test    rax, rax",
    "jne     0xafa07",
    "mov     rdi, rax",
    "call    rl_named_function",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xafc0c",
    "mov     rdi, r14",
    "call    ansic_shouldquote",
    "test    eax, eax",
    "jne     0xafd08",
    "test    r15d, 0x1000",
    "jne     0xafb89",
    "cmp     qword [rbp-0x48 {list_optarg_5}], 0x0",
    "jne     0xafa32",
    "mov     rdi, rax",
    "call    rl_named_function",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xafc36",
    "lea     rsi, [rel data_1211d0]  {\"`%s': unknown function name\"}",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x50 {list_optarg_4}]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "lea     rax, [rel _rl_keymap]",
    "mov     rsi, qword [rax]  {_rl_keymap}",
    "call    rl_invoking_keyseqs_in_map",
    "mov     edx, 0x5",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xafc9d",
    "cmp     byte [r14], 0x0",
    "je      0xafd9a",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "call    strerror",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1211bc]  {\"%s: cannot read: %s\"}",
    "xor     edi, edi  {0x0}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rdx, rbx",
    "mov     rsi, r14",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "mov     rdi, qword [rbp-0x68 {list_optarg_1}]",
    "call    bind_keyseq_to_unix_command",
    "mov     r12d, eax",
    "jmp     0xaf415",
    "and     r15d, 0x2000",
    "jne     0xafb43",
    "mov     rdi, qword [rbp-0x48 {list_optarg_5}]",
    "call    strlen",
    "lea     r12, [rax+rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xafddd",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1211d0]  {\"`%s': unknown function name\"}",
    "mov     r12d, 0x1",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x60 {list_optarg_2}]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "jmp     0xaf3f7",
    "lea     rax, [rel _rl_keymap]",
    "xor     r12d, r12d  {0x0}",
    "mov     rsi, qword [rax]  {_rl_keymap}",
    "call    rl_unbind_function_in_map",
    "jmp     0xaf3f7",
    "test    r15d, 0x800",
    "je      0xaf3f7",
    "xor     edi, edi  {0x0}",
    "lea     rsi, [rel data_1211ec]  {\"%s is not bound to any keys.\\n\"}",
    "call    dcgettext",
    "mov     rdx, qword [rbp-0x50 {list_optarg_4}]",
    "mov     edi, 0x2",
    "mov     rsi, rax",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "jmp     0xafc2b",
    "lea     rsi, [rel data_12120a]  {\"%s can be invoked via \"}",
    "xor     edi, edi  {0x0}",
    "mov     r12, r13",
    "call    dcgettext",
    "mov     rdx, qword [rbp-0x50 {list_optarg_4}]",
    "mov     edi, 0x2",
    "lea     r14, [rel data_121164]",
    "mov     rsi, rax",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "lea     rax, [r13+0x28]",
    "mov     qword [rbp-0x50 {var_58_2}], rbx",
    "mov     rbx, rax",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "call    strerror",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1211bc]  {\"%s: cannot read: %s\"}",
    "xor     edi, edi  {0x0}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rdx, rbx",
    "xor     esi, esi  {0x0}",
    "xor     ebx, ebx  {0x0}",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "jmp     0xafd5a",
    "xor     esi, esi  {0x0}",
    "mov     rdi, r14",
    "call    sub_d80c0",
    "mov     rbx, rax",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "call    strerror",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1211bc]  {\"%s: cannot read: %s\"}",
    "mov     r12, rax",
    "call    dcgettext",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "cmp     r14, rbx",
    "je      0xaf8e5",
    "test    rax, rax",
    "jne     0xaf90c",
    "lea     rdx, [rel _rl_keymap]",
    "mov     qword [rdx], rcx  {_rl_keymap}",
    "test    rax, rax",
    "je      0xaf788",
    "lea     r15, [rel _rl_keymap]",
    "mov     r13, qword [r15]  {_rl_keymap}",
    "mov     rdi, r13",
    "call    sub_9d860",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0xafc04",
    "test    rbx, rbx",
    "je      0xaf756",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, qword [rbp-0x48 {list_optarg_5}]",
    "lea     rdx, [rbp-0x40 {var_48}]",
    "mov     rsi, rax",
    "call    rl_translate_keyseq",
    "mov     r12d, eax  {0x0}",
    "test    eax, eax",
    "jne     0xafbae  {0x0}",
    "mov     r12d, 0x1",
    "jmp     0xaf3e1",
    "mov     rbx, qword [rbp-0x50 {var_58_2}]",
    "jmp     0xaf9d8",
    "cmp     qword [r12+0x8], 0x0",
    "lea     rcx, [rel data_122a6f[2]]  {\".\\n\"}",
    "mov     edi, 0x2",
    "cmovne  rcx, r14  {data_121164}",
    "lea     rsi, [rel data_121221]  {\"\"%s\"%s\"}",
    "xor     eax, eax  {0x0}",
    "add     r12, 0x8",
    "call    __printf_chk",
    "cmp     rbx, r12",
    "jne     0xaf987",
    "mov     rdi, rbx",
    "call    free",
    "mov     rcx, qword [rbp-0x80 {_rl_keymap_5}]",
    "test    rcx, rcx",
    "je      0xafc81",
    "mov     rcx, qword [rbp-0x80 {_rl_keymap_5}]",
    "mov     rax, qword [rel data_161a50]",
    "test    rcx, rcx",
    "je      0xafd8c",
    "jmp     0xaf788",
    "mov     rsi, qword [r15]  {_rl_keymap}",
    "jmp     0xafb64",
    "mov     qword [r15], rax  {_rl_keymap}",
    "mov     rcx, qword [rbp-0x80 {_rl_keymap_5}]",
    "test    rcx, rcx",
    "je      0xaf769",
    "lea     r15, [rel _rl_keymap]",
    "mov     r13, qword [r15]  {_rl_keymap}",
    "mov     rdi, rbx",
    "mov     r12d, 0x1",
    "call    free",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121228]  {\"`%s': cannot unbind\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x48 {list_optarg_5}]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "jmp     0xafaca",
    "movsxd  rsi, dword [rbp-0x40 {var_48}]",
    "lea     rcx, [rbp-0x3c {var_44}]",
    "xor     edx, edx  {0x0}",
    "mov     rdi, rbx",
    "call    sub_ee140",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xafac2",
    "mov     rdi, qword [r13]",
    "lea     r12, [r13+0x8]",
    "test    rdi, rdi",
    "je      0xaf9fa",
    "mov     rdx, qword [r12]",
    "test    rdx, rdx",
    "je      0xafc94",
    "cmp     qword [r13+0x28], 0x0",
    "mov     rbx, qword [rbp-0x50 {var_58_2}]",
    "je      0xaf9d8",
    "cmp     qword [rel data_161a50], 0x0",
    "jne     0xaf90c  {data_161a50}",
    "lea     rax, [rel _rl_keymap]",
    "cmp     qword [rel data_161a50], 0x0",
    "mov     qword [rax], rcx  {_rl_keymap}",
    "jne     0xaf90c",
    "xor     edx, edx  {0x0}",
    "mov     edi, 0x1",
    "call    sub_f20c0",
    "test    r13, r13",
    "je      0xafbf0",
    "test    rbx, rbx",
    "je      0xafcc3",
    "mov     qword [r15], r13  {_rl_keymap}",
    "test    rbx, rbx",
    "je      0xafcc3",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0xaf77f  {data_161a50}",
    "lea     rax, [rel _rl_keymap]",
    "mov     qword [rax], rcx  {_rl_keymap}",
    "mov     qword [rbp-0x48 {var_50_1}], rax",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "call    rl_parse_and_bind",
    "mov     rax, qword [rbp-0x68 {var_70}]  {_rl_keymap}",
    "lea     rdi, [rel bash_execute_unix_command]",
    "mov     rsi, qword [rax]  {_rl_keymap}",
    "call    rl_invoking_keyseqs_in_map",
    "mov     rdx, qword [rbp-0x48 {var_50_1}]",
    "test    rax, rax",
    "mov     r14, rax",
    "je      0xaf5ba",
    "mov     rax, qword [rbx+0x8]",
    "cmp     qword [rdx], 0x0",
    "mov     rdi, qword [rax]",
    "je      0xafb02",
    "mov     rcx, qword [rbp-0x80 {_rl_keymap_5}]",
    "mov     rax, qword [rel data_161a50]",
    "test    rcx, rcx",
    "je      0xafbe2",
    "mov     rdi, rbx",
    "call    free",
    "cmp     dword [rbp-0x3c {var_44}], 0x1",
    "jne     0xafa96",
    "mov     rdi, r13",
    "call    free",
    "jmp     0xaf3de",
    "nop     dword [rax]",
    "lea     rdi, [rel data_120268]  {\"...\"}",
    "call    puts",
    "jmp     0xaf788",
    "cmp     qword [rbp-0x80 {_rl_keymap_5}], 0x0",
    "mov     rax, qword [rel data_161a50]",
    "je      0xafdcf",
    "mov     r13, qword [r15]  {_rl_keymap}",
    "xor     r12d, r12d  {0x0}",
    "jmp     0xaf435",
    "xor     r12d, r12d  {0x0}",
    "jmp     0xaf435",
    "test    r12d, r12d",
    "jns     0xaf2f1",
    "lea     rdi, [rel data_121180]  {\"bind_builtin\"}",
    "call    sub_113ed0",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "je      0xaf756",
    "mov     rdi, qword [rax]",
    "xor     r15d, r15d  {0x0}",
    "test    rdi, rdi",
    "je      0xaf5b2",
    "mov     qword [rbp-0x48 {var_50_1}], rdx",
    "call    rl_parse_and_bind",
    "mov     rax, qword [rbp-0x68 {var_70}]  {_rl_keymap}",
    "lea     rdi, [rel bash_execute_unix_command]",
    "mov     rsi, qword [rax]  {_rl_keymap}",
    "call    rl_invoking_keyseqs_in_map",
    "mov     rdx, qword [rbp-0x48 {var_50_1}]",
    "test    rax, rax",
    "mov     r14, rax",
    "jne     0xafb9a",
    "mov     eax, 0x1",
    "nop     ",
    "test    rax, rax",
    "jne     0xafaf1",
    "lea     rdx, [rel _rl_keymap]",
    "mov     qword [rdx], rcx  {_rl_keymap}",
    "test    rax, rax",
    "je      0xaf2f1",
    "lea     rax, [rel _rl_keymap]",
    "mov     rsi, qword [rbp-0x48 {list_optarg_5}]",
    "xor     edx, edx  {0x0}",
    "xor     edi, edi  {0x0}",
    "mov     rcx, qword [rax]  {_rl_keymap}",
    "call    rl_generic_bind",
    "test    eax, eax",
    "jne     0xafbae",
    "mov     r13, qword [rax+0x1008]",
    "call    free",
    "mov     rdi, qword [r12]",
    "add     r12, 0x8",
    "test    rdi, rdi",
    "jne     0xaf9e8",
    "test    rax, rax",
    "jne     0xafce6",
    "mov     rax, qword [rbp-0x80 {_rl_keymap_5}]",
    "cmp     qword [rel data_161a50], 0x0",
    "mov     qword [r15], rax  {_rl_keymap}",
    "je      0xafcf2",
    "mov     qword [rbp-0x68 {var_70}], r15  {_rl_keymap}",
    "mov     rsi, r13",
    "nop     dword [rax]",
    "mov     rax, qword [rbp-0x68 {var_70}]  {_rl_keymap}",
    "mov     rsi, qword [rax]  {_rl_keymap}",
    "jmp     0xaf440",
    "mov     rdi, r14",
    "call    free",
    "mov     eax, 0x1",
    "nop     ",
    "mov     rdi, qword [rax]",
    "xor     r15d, r15d  {0x0}",
    "test    rdi, rdi",
    "jne     0xaf6fa",
    "mov     rdi, qword [rdx]",
    "test    rdi, rdi",
    "jne     0xaf566",
    "mov     r13, rax",
    "add     rax, 0x1",
    "cmp     qword [rdx+rax*8-0x8], 0x0",
    "jne     0xaf470",
    "mov     qword [rbp-0x48 {var_50_1}], rdx",
    "mov     r15d, r13d",
    "call    rl_parse_and_bind",
    "mov     rax, qword [rbp-0x68 {var_70}]  {_rl_keymap}",
    "lea     rdi, [rel bash_execute_unix_command]",
    "mov     rsi, qword [rax]  {_rl_keymap}",
    "call    rl_invoking_keyseqs_in_map",
    "mov     rdx, qword [rbp-0x48 {var_50_1}]",
    "test    rax, rax",
    "mov     r14, rax",
    "jne     0xaf740",
    "lea     rdi, [rel data_121180]  {\"bind_builtin\"}",
    "call    sub_113ed0",
    "jmp     0xaf2f1",
    "jmp     0xaf2f1",
    "cmp     r13, qword [rel data_157f58]",
    "je      0xafcfa  {data_157f58}",
    "lea     rdi, [rel data_121180]  {\"bind_builtin\"}",
    "call    sub_113ed0",
    "jmp     0xafcf2",
    "xor     r12d, r12d  {0x0}",
    "jmp     0xaf2f1",
    "lea     rdi, [rel bash_execute_unix_command]",
    "call    rl_invoking_keyseqs_in_map",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0xaf6b8",
    "mov     rsi, rax",
    "add     rax, 0x1",
    "cmp     qword [r14+rax*8-0x8], 0x0",
    "jne     0xaf700",
    "mov     r9d, esi",
    "cmp     r15d, esi",
    "jg      0xaf74b",
    "jmp     0xaf720",
    "lea     r13, [rdx+0x8]",
    "mov     r15, rdx",
    "nop     dword [rax]",
    "mov     rdi, rdx",
    "call    free",
    "jmp     0xaf5ba",
    "mov     rdi, qword [rax]",
    "xor     r9d, r9d  {0x0}",
    "test    rdi, rdi",
    "jne     0xaf6fa",
    "mov     edi, r13d",
    "xor     r9d, r9d  {0x0}",
    "mov     rdi, qword [rbp-0x48 {list_optarg_5}]",
    "call    unbind_unix_command",
    "jmp     0xafac2",
    "mov     edi, r15d",
    "sub     r15d, r9d",
    "jmp     0xaf4b4",
    "test    rdx, rdx",
    "je      0xaf59a",
    "mov     rdi, qword [rdx]",
    "test    rdi, rdi",
    "jne     0xaf566",
    "call    free",
    "mov     rdi, qword [r13]",
    "add     r13, 0x8",
    "test    rdi, rdi",
    "jne     0xaf570",
    "mov     rdx, r15",
    "mov     rdi, r12",
    "call    unbind_unix_command",
    "sub     dword [rbp-0x48 {var_50_1}], 0x1",
    "jmp     0xaf538",
    "mov     rsi, qword [rbx]",
    "test    rsi, rsi",
    "je      0xaf6a0",
    "mov     dword [rbp-0x6c {var_74_1}], r12d",
    "mov     r8d, 0x1",
    "mov     dword [rbp-0x48 {var_50_1}], r15d",
    "mov     dword [rbp-0x58 {list_optarg_3}], r9d",
    "mov     qword [rbp-0x50 {var_58_1}], rdx",
    "mov     dword [rbp-0x60 {list_optarg_2}], edi",
    "mov     qword [rbp-0x78 {var_80_1}], rbx",
    "mov     rbx, r14",
    "mov     r14, r8  {0x1}",
    "nop     word [rax+rax]",
    "lea     r13, [r14+0x8]",
    "nop     ",
    "mov     rdi, rdx",
    "call    free",
    "jmp     0xaf592",
    "mov     rdi, qword [r14]",
    "test    rdi, rdi",
    "je      0xaf5b2",
    "mov     eax, dword [rbp-0x48 {var_50_1}]",
    "cmp     dword [rbp-0x60 {list_optarg_2}], r14d",
    "setg    dl",
    "test    eax, eax",
    "setg    al",
    "add     r14, 0x1",
    "test    dl, al",
    "jne     0xaf4e0",
    "movzx   r15d, byte [r12]",
    "xor     r13d, r13d  {0x0}",
    "jmp     0xaf521",
    "call    free",
    "mov     rdi, qword [r13]",
    "add     r13, 0x8",
    "test    rdi, rdi",
    "jne     0xaf5a0",
    "mov     rax, qword [rbp-0x50 {var_58_1}]",
    "mov     edx, dword [rbp-0x58 {list_optarg_3}]",
    "mov     r12, qword [rax+r14*8-0x8]",
    "test    edx, edx",
    "je      0xaf6a0",
    "mov     rdx, qword [rbp-0x50 {var_58_1}]",
    "mov     r14, rbx",
    "mov     r12d, dword [rbp-0x6c {var_74_1}]",
    "mov     rbx, qword [rbp-0x78 {var_80_1}]",
    "mov     rdi, qword [rdx]",
    "test    rdi, rdi",
    "je      0xaf585",
    "cmp     r15b, byte [rsi]",
    "jne     0xaf510",
    "mov     rdi, rdx",
    "call    free",
    "test    r14, r14",
    "je      0xaf5ba",
    "add     r13, 0x1",
    "mov     rsi, qword [rbx+r13*8]",
    "test    rsi, rsi",
    "je      0xaf6a0",
    "mov     rdi, r12",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xaf510",
    "nop     word [rax+rax]"
  ],
  "high level IL": [
    "void* fsbase",
    "int64_t rax = *(fsbase + 0x28)",
    "if (no_line_editing != 0)",
    "builtin_warning(dcgettext(nullptr, \"line editing not enabled\", 5), 0)",
    "if (bash_readline_initialized == 0)",
    "sub_a65a0()",
    "if (bash_readline_initialized == 0)",
    "sub_a65a0()",
    "begin_unwind_frame(\"bind_builtin\")",
    "int64_t* rax_1 = malloc(0x24)",
    "if (rax_1 == 0)",
    "sub_a7f00()",
    "noreturn",
    "rax_1[3].d = 8",
    "uint64_t list_optarg_6 = 0",
    "int64_t rdx = data_161a50",
    "rax_1[1] = sub_872f0",
    "int32_t r15 = 0",
    "*rax_1 = rdx",
    "data_161a50 = rax_1",
    "uint64_t rl_outstream_1 = rl_outstream",
    "rax_1[2] = &rl_outstream",
    "data_168d30 = 0",
    "*(rax_1 + 0x1c) = rl_outstream_1",
    "data_168d28 = 1",
    "uint64_t rax_2 = *stdout",
    "uint64_t list_optarg_1",
    "__builtin_memset(&list_optarg_1, 0, 0x28)",
    "rl_outstream = rax_2",
    "loptend = 0",
    "lcurrent = 0",
    "label_af2ae:",
    "int32_t rax_3 = internal_getopt(arg1, \"lvpVPsSXf:q:u:m:r:x:\")",
    "int32_t r12_1",
    "uint64_t list_optarg_2",
    "uint64_t list_optarg_3",
    "uint64_t list_optarg_4",
    "uint64_t list_optarg_5",
    "if (rax_3 == 0xffffffff)",
    "label_af34f:",
    "uint64_t loptend_1 = loptend",
    "uint64_t _rl_keymap_5",
    "if ((r15.b & 0x20) == 0 || list_optarg_3 == 0)",
    "_rl_keymap_5 = 0",
    "if ((r15.b & 1) == 0)",
    "label_af377:",
    "if ((r15.b & 2) != 0)",
    "goto label_af80d",
    "goto label_af381",
    "label_af7f9:",
    "rl_list_funmap_names()",
    "if ((r15.b & 2) != 0)",
    "label_af80d:",
    "rl_function_dumper(1)",
    "if ((r15.b & 0x80) == 0)",
    "goto label_af38b",
    "goto label_af81e",
    "label_af381:",
    "if ((r15.b & 0x80) == 0)",
    "label_af38b:",
    "if ((r15 & 0x200) != 0)",
    "goto label_af841",
    "goto label_af398",
    "label_af81e:",
    "rl_function_dumper(0)",
    "if ((r15 & 0x200) != 0)",
    "label_af841:",
    "sub_f20c0(1, _rl_keymap, nullptr)",
    "if ((r15 & 0x400) == 0)",
    "goto label_af3a5",
    "goto label_af861",
    "label_af398:",
    "if ((r15 & 0x400) != 0)",
    "label_af861:",
    "sub_f20c0(0, _rl_keymap, nullptr)",
    "if ((r15.b & 8) != 0)",
    "label_af875:",
    "rl_variable_dumper(1)",
    "if ((r15 & 0x100) == 0)",
    "goto label_af3c5",
    "goto label_af889",
    "label_af3a5:",
    "if ((r15.b & 8) != 0)",
    "goto label_af875",
    "if ((r15 & 0x100) == 0)",
    "goto label_af3c5",
    "label_af889:",
    "rl_variable_dumper(0)",
    "label_af3c5:",
    "int32_t rax_29",
    "if ((r15.b & 4) != 0 && list_optarg_6 != 0)",
    "rax_29 = rl_read_init_file(list_optarg_6)",
    "if ((r15.b & 4) == 0 || list_optarg_6 == 0 || rax_29 == 0)",
    "if ((r15.b & 0x10) == 0 || list_optarg_4 == 0)",
    "r12_1 = 0",
    "char* domainname = rl_named_function(list_optarg_4)",
    "if (domainname == 0)",
    "builtin_error(dcgettext(domainname, \"`%s': unknown function name\", 5), 0)",
    "r12_1 = 1",
    "int64_t* rax_35 = rl_invoking_keyseqs_in_map(domainname, _rl_keymap)",
    "if (rax_35 == 0)",
    "__printf_chk(2, dcgettext(nullptr, \"%s is not bound to any keys.\\n\", 5), list_optarg_4)",
    "r12_1 = 1",
    "int64_t* r12_3 = rax_35",
    "__printf_chk(2, dcgettext(nullptr, \"%s can be invoked via \", 5), list_optarg_4)",
    "while (true)",
    "int64_t rdx_8 = *r12_3",
    "if (rdx_8 == 0)",
    "break",
    "char const* const rcx_5 = \".\\n\"",
    "if (r12_3[1] != 0)",
    "rcx_5 = &data_121164",
    "r12_3 = &r12_3[1]",
    "__printf_chk(2, \"\"%s\"%s\", rdx_8, rcx_5)",
    "if (&rax_35[5] == r12_3)",
    "if (rax_35[5] != 0)",
    "puts(\"...\")",
    "break",
    "int64_t i = *rax_35",
    "void* r12_4 = &rax_35[1]",
    "while (i != 0)",
    "free(i)",
    "i = *r12_4",
    "r12_4 += 8",
    "free(rax_35)",
    "r12_1 = 0",
    "if ((r15 & 0x800) != 0 && list_optarg_2 != 0)",
    "char* domainname_1 = rl_named_function(list_optarg_2)",
    "if (domainname_1 == 0)",
    "r12_1 = 1",
    "builtin_error(dcgettext(domainname_1, \"`%s': unknown function name\", 5), 0)",
    "r12_1 = 0",
    "rl_unbind_function_in_map(domainname_1, _rl_keymap)",
    "if ((r15.b & 0x40) == 0 || list_optarg_5 == 0)",
    "if ((r15 & 0x1000) != 0)",
    "r12_1 = bind_keyseq_to_unix_command(list_optarg_1)",
    "uint64_t _rl_keymap_4",
    "if ((r15 & 0x2000) != 0)",
    "_rl_keymap_4 = _rl_keymap",
    "uint64_t _rl_keymap_6 = sub_9d860(_rl_keymap_4)",
    "uint64_t _rl_keymap_3 = _rl_keymap_6",
    "if (_rl_keymap_6 == 0)",
    "_rl_keymap_3 = _rl_keymap",
    "_rl_keymap = _rl_keymap_6",
    "sub_f20c0(1, _rl_keymap_3, nullptr)",
    "if (_rl_keymap_4 != 0)",
    "_rl_keymap = _rl_keymap_4",
    "if (loptend_1 == 0)",
    "goto label_afccf",
    "r12_1 = 0",
    "goto label_af439",
    "if (loptend_1 != 0)",
    "_rl_keymap_4 = _rl_keymap",
    "r12_1 = 0",
    "goto label_af439",
    "label_afccf:",
    "if (_rl_keymap_5 != 0)",
    "bool cond:7_1 = data_161a50 == 0",
    "_rl_keymap = _rl_keymap_5",
    "if (not(cond:7_1))",
    "sub_113ed0(\"bind_builtin\")",
    "if (data_161a50 != 0)",
    "sub_113ed0(\"bind_builtin\")",
    "r12_1 = 0",
    "if (loptend_1 != 0)",
    "_rl_keymap_4 = _rl_keymap",
    "label_af439:",
    "uint64_t _rl_keymap_2 = _rl_keymap_4",
    "while (true)",
    "int64_t* rax_13 = rl_invoking_keyseqs_in_map(bash_execute_unix_command, _rl_keymap_2)",
    "int64_t* rdx_3",
    "char* i_1",
    "int32_t r9_2",
    "char** r14",
    "int32_t r15_2",
    "if (rax_13 == 0)",
    "rl_parse_and_bind(**(loptend_1 + 8))",
    "char** rax_25 = rl_invoking_keyseqs_in_map(bash_execute_unix_command, _rl_keymap)",
    "rdx_3 = rax_13",
    "r14 = rax_25",
    "if (rax_25 != 0)",
    "i_1 = *rax_25",
    "r15_2 = 0",
    "if (i_1 == 0)",
    "free(r14)",
    "label_af6fa:",
    "int64_t rax_26 = 1",
    "int32_t rsi_5",
    "rsi_5 = rax_26.d",
    "rax_26 += 1",
    "do while (r14[rax_26 - 1] != 0)",
    "r9_2 = rsi_5",
    "if (r15_2 s> rsi_5)",
    "goto label_af74b",
    "if (rdx_3 != 0)",
    "goto label_af720",
    "label_af59a:",
    "char** r13_4 = &r14[1]",
    "free(i_1)",
    "i_1 = *r13_4",
    "r13_4 = &r13_4[1]",
    "do while (i_1 != 0)",
    "free(r14)",
    "char* rdi_5 = **(loptend_1 + 8)",
    "int64_t i_2",
    "if (*rax_13 == 0)",
    "rl_parse_and_bind(rdi_5)",
    "char** rax_45 = rl_invoking_keyseqs_in_map(bash_execute_unix_command, _rl_keymap)",
    "rdx_3 = rax_13",
    "r14 = rax_45",
    "if (rax_45 != 0)",
    "i_1 = *rax_45",
    "r15_2 = 0",
    "if (i_1 != 0)",
    "goto label_af6fa",
    "label_af720:",
    "i_2 = *rdx_3",
    "if (i_2 != 0)",
    "goto label_af566",
    "free(rdx_3)",
    "label_af592:",
    "i_1 = *r14",
    "if (i_1 != 0)",
    "goto label_af59a",
    "free(r14)",
    "i_2 = *rdx_3",
    "if (i_2 != 0)",
    "label_af566:",
    "void* r13_3 = &rdx_3[1]",
    "free(i_2)",
    "i_2 = *r13_3",
    "r13_3 += 8",
    "do while (i_2 != 0)",
    "goto label_af588",
    "free(rdx_3)",
    "int64_t rax_15 = 1",
    "int32_t r13_1",
    "r13_1 = rax_15.d",
    "rax_15 += 1",
    "do while (rax_13[rax_15 - 1] != 0)",
    "r15_2 = r13_1",
    "rl_parse_and_bind(rdi_5)",
    "char** rax_16 = rl_invoking_keyseqs_in_map(bash_execute_unix_command, _rl_keymap)",
    "rdx_3 = rax_13",
    "r14 = rax_16",
    "int32_t rdi_6",
    "if (rax_16 != 0)",
    "i_1 = *rax_16",
    "r9_2 = 0",
    "if (i_1 != 0)",
    "goto label_af6fa",
    "label_af74b:",
    "rdi_6 = r15_2",
    "r15_2 -= r9_2",
    "rdi_6 = r13_1",
    "r9_2 = 0",
    "int64_t* var_50_1",
    "var_50_1.d = r15_2",
    "list_optarg_3.d = r9_2",
    "list_optarg_2.d = rdi_6",
    "int64_t r14_1 = 1",
    "int32_t rax_19",
    "bool rdx_5",
    "char* r12_2 = rdx_3[r14_1 - 1]",
    "char* rsi_3",
    "if (list_optarg_3.d != 0)",
    "rsi_3 = *r14",
    "if (list_optarg_3.d == 0 || rsi_3 == 0)",
    "label_af6a3:",
    "unbind_unix_command(r12_2)",
    "var_50_1.d -= 1",
    "char i_3 = *r12_2",
    "int64_t r13_2 = 0",
    "while (i_3 != *rsi_3 || strcmp(r12_2, rsi_3) != 0)",
    "r13_2 += 1",
    "rsi_3 = r14[r13_2]",
    "if (rsi_3 == 0)",
    "goto label_af6a3",
    "rdx_5 = list_optarg_2.d s> r14_1.d",
    "rax_19.b = var_50_1.d s> 0",
    "r14_1 += 1",
    "do while ((rdx_5 & rax_19.b) != 0)",
    "i_2 = *rdx_3",
    "if (i_2 != 0)",
    "goto label_af566",
    "label_af588:",
    "free(rdx_3)",
    "if (r14 != 0)",
    "goto label_af592",
    "loptend_1 = *loptend_1",
    "if (loptend_1 == 0)",
    "break",
    "_rl_keymap_2 = _rl_keymap",
    "if (_rl_keymap_5 != 0)",
    "_rl_keymap = _rl_keymap_5",
    "if (data_161a50 != 0)",
    "sub_113ed0(\"bind_builtin\")",
    "if (r12_1 s< 0)",
    "r12_1 = 1",
    "char* rax_41 = malloc(strlen(list_optarg_5) * 2 + 1)",
    "if (rax_41 == 0)",
    "sub_a7f00()",
    "noreturn",
    "int32_t var_48",
    "rl_translate_keyseq(list_optarg_5, rax_41, &var_48)",
    "r12_1 = 0",
    "int32_t var_44",
    "struct Elf64_Header* rax_42",
    "int32_t r8_2",
    "char r10_2",
    "rax_42, r8_2, r10_2 = sub_ee140(rax_41, sx.q(var_48), nullptr, &var_44)",
    "struct Elf64_Header* r13_6 = rax_42",
    "if (rax_42 == 0)",
    "free(rax_41)",
    "if (var_44 == 1)",
    "r13_6 = rax_42->__offset(0x1008).q",
    "if (rl_generic_bind(0, list_optarg_5, nullptr, _rl_keymap, r8_2, r10_2) != 0)",
    "r12_1 = 1",
    "free(rax_41)",
    "builtin_error(dcgettext(nullptr, \"`%s': cannot unbind\", 5), 0)",
    "if (r13_6 == bash_execute_unix_command)",
    "unbind_unix_command(list_optarg_5)",
    "free(rax_41)",
    "int64_t rax_44 = data_161a50",
    "if (_rl_keymap_5 != 0)",
    "_rl_keymap = _rl_keymap_5",
    "if (rax_44 != 0)",
    "sub_113ed0(\"bind_builtin\")",
    "if (rax_44 != 0)",
    "sub_113ed0(\"bind_builtin\")",
    "if (ansic_shouldquote(list_optarg_6) != 0)",
    "int16_t* rbx_5",
    "if (*list_optarg_6 == 0)",
    "strerror(*__errno_location())",
    "rbx_5 = nullptr",
    "builtin_error(dcgettext(nullptr, \"%s: cannot read: %s\", 5), 0)",
    "rbx_5 = sub_d80c0(list_optarg_6, nullptr)",
    "strerror(*__errno_location())",
    "builtin_error(dcgettext(nullptr, \"%s: cannot read: %s\", 5), 0)",
    "if (list_optarg_6 == rbx_5)",
    "goto label_af8e9",
    "free(rbx_5)",
    "if (_rl_keymap_5 == 0)",
    "goto label_afc81",
    "bool cond:2_1 = data_161a50 != 0",
    "_rl_keymap = _rl_keymap_5",
    "if (cond:2_1)",
    "sub_113ed0(\"bind_builtin\")",
    "r12_1 = 1",
    "r12_1 = 1",
    "strerror(*__errno_location())",
    "builtin_error(dcgettext(nullptr, \"%s: cannot read: %s\", 5), 0)",
    "label_af8e9:",
    "int64_t rax_34 = data_161a50",
    "if (_rl_keymap_5 != 0)",
    "_rl_keymap = _rl_keymap_5",
    "if (rax_34 == 0)",
    "r12_1 = 1",
    "sub_113ed0(\"bind_builtin\")",
    "r12_1 = 1",
    "if (rax_34 != 0)",
    "sub_113ed0(\"bind_builtin\")",
    "r12_1 = 1",
    "r12_1 = 1",
    "char* rax_28 = rl_get_keymap_by_name(list_optarg_3)",
    "if (rax_28 != 0)",
    "uint64_t _rl_keymap_1 = _rl_keymap",
    "_rl_keymap = rax_28",
    "_rl_keymap_5 = _rl_keymap_1",
    "if ((r15.b & 1) == 0)",
    "goto label_af377",
    "goto label_af7f9",
    "builtin_error(dcgettext(nullptr, \"`%s': invalid keymap name\", 5), 0)",
    "label_afc81:",
    "if (data_161a50 != 0)",
    "sub_113ed0(\"bind_builtin\")",
    "r12_1 = 1",
    "r12_1 = 1",
    "while (true)",
    "uint64_t rax_4 = zx.q(rax_3 - 0x50)",
    "if (rax_4.d u<= 0x28)",
    "switch (rax_4)",
    "case 0",
    "r15.b |= 0x80",
    "goto label_af2ae",
    "case 3",
    "r15 |= 0x400",
    "goto label_af2ae",
    "case 6",
    "r15 |= 0x100",
    "goto label_af2ae",
    "case 8",
    "r15 |= 0x2000",
    "goto label_af2ae",
    "case 0x16",
    "r15 |= 4",
    "list_optarg_6 = list_optarg",
    "goto label_af2ae",
    "case 0x1c",
    "r15 |= 1",
    "goto label_af2ae",
    "case 0x1d",
    "r15 |= 0x20",
    "list_optarg_3 = list_optarg",
    "goto label_af2ae",
    "case 0x20",
    "r15 |= 2",
    "goto label_af2ae",
    "case 0x21",
    "r15 |= 0x10",
    "list_optarg_4 = list_optarg",
    "goto label_af2ae",
    "case 0x22",
    "r15 |= 0x40",
    "list_optarg_5 = list_optarg",
    "goto label_af2ae",
    "case 0x23",
    "r15 |= 0x200",
    "goto label_af2ae",
    "case 0x25",
    "r15 |= 0x800",
    "list_optarg_2 = list_optarg",
    "goto label_af2ae",
    "case 0x26",
    "r15 |= 8",
    "goto label_af2ae",
    "case 0x28",
    "r15 |= 0x1000",
    "list_optarg_1 = list_optarg",
    "rax_3 = internal_getopt(arg1, \"lvpVPsSXf:q:u:m:r:x:\")",
    "if (rax_3 == 0xffffffff)",
    "goto label_af34f",
    "continue",
    "builtin_usage()",
    "if (data_161a50 != 0)",
    "sub_113ed0(\"bind_builtin\")",
    "r12_1 = 0x102",
    "break",
    "*(fsbase + 0x28)",
    "if (rax == *(fsbase + 0x28))",
    "return sh_chkwrite(r12_1) __tailcall",
    "__stack_chk_fail()",
    "noreturn"
  ]
}
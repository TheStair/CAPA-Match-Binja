{
  "address": "0x1071f0",
  "rules": [
    "check OS version/a792de506c61438eae0e98a59003db67",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "log keystrokes via raw input data/5b32ff98460e406e86dc2ef8d82ba1a5",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "contain loop",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15d, ecx",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x48",
    "mov     qword [rbp-0x60], rsi",
    "mov     ebx, dword [rsi]",
    "mov     dword [rbp-0x44], edx",
    "mov     dword [rbp-0x6c], ecx",
    "mov     esi, ebx",
    "mov     qword [rbp-0x68], r8",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rbp-0x40]",
    "mov     qword [rbp-0x40], 0x0",
    "mov     rdx, rax",
    "mov     qword [rbp-0x58], rax",
    "call    _rl_adjust_point",
    "movsxd  rax, ebx",
    "mov     edx, r15d",
    "mov     r15d, ebx",
    "lea     r14, [r12+rax]",
    "mov     qword [rbp-0x50], rax",
    "mov     r13, rax",
    "and     edx, 0x1",
    "movsx   eax, byte [r14]",
    "mov     byte [rbp-0x45], dl",
    "test    al, al",
    "jne     0x1072a1",
    "mov     ecx, dword [rbp-0x44]",
    "cmp     eax, ecx",
    "je      0x107300",
    "jmp     0x1073e8",
    "cmp     ebx, r15d",
    "jl      0x107356",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x107270",
    "mov     eax, dword [rbp-0x6c]",
    "xor     r8d, r8d",
    "test    eax, eax",
    "je      0x107316",
    "mov     eax, r15d",
    "sub     eax, ebx",
    "add     eax, 0x1",
    "cdqe    ",
    "mov     rdi, rax",
    "mov     r13, rax",
    "call    malloc",
    "mov     r8, rax",
    "test    rax, rax",
    "je      0x10741e",
    "xor     r8d, r8d",
    "cmp     byte [rbp-0x45], 0x0",
    "jne     0x107356",
    "cmp     byte [r14], 0x5c",
    "jne     0x10728a",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x107270",
    "mov     rax, qword [rbp-0x60]",
    "mov     dword [rax], r15d",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x107419",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x10743c",
    "mov     qword [rbp-0x58], rax",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "cmp     ebx, r15d",
    "jge     0x107412",
    "cmp     byte [r14], 0x1",
    "sbb     r15d, 0xffffffff",
    "add     r15d, 0x1",
    "movsxd  r13, r15d",
    "lea     r14, [r12+r13]",
    "movsx   eax, byte [r14]",
    "test    al, al",
    "je      0x107348",
    "movsx   eax, byte [r12+r13+0x1]",
    "mov     edx, dword [rbp-0x44]",
    "cmp     eax, edx",
    "sete    al",
    "movzx   eax, al",
    "add     r15d, eax",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdi, r14",
    "call    _rl_get_char_len",
    "cmp     eax, 0x1",
    "jle     0x1072e0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x48",
    "mov     rax, r8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r15d, ebx",
    "mov     r8, r12",
    "xor     esi, esi",
    "jmp     0x1073d8",
    "mov     r12, r8",
    "xor     esi, esi",
    "jmp     0x1073d8",
    "mov     eax, 0x1",
    "jmp     0x1073ab",
    "cmp     ebx, r15d",
    "jl      0x107356",
    "cmp     byte [r14], 0x5c",
    "jne     0x10728a",
    "lea     r15d, [rax+r15-0x1]",
    "jmp     0x10728a",
    "mov     rax, qword [rbp-0x68]",
    "mov     byte [r12], 0x0",
    "mov     dword [rax], esi",
    "jmp     0x10730e",
    "mov     rdx, qword [rbp-0x50]",
    "movzx   esi, byte [r12+rdx]",
    "cmp     sil, 0x5c",
    "jne     0x107390",
    "xor     r8d, r8d",
    "cmp     byte [rbp-0x45], 0x0",
    "je      0x107316",
    "movsx   eax, byte [r12+r13+0x1]",
    "mov     edi, dword [rbp-0x44]",
    "cmp     eax, edi",
    "sete    al",
    "movzx   eax, al",
    "add     r15d, eax",
    "jmp     0x10728a",
    "add     ebx, 0x1",
    "mov     byte [r8+rax-0x1], sil",
    "lea     rsi, [rax+0x1]",
    "cmp     ebx, r15d",
    "jge     0x1073d0",
    "movsx   r9d, byte [r12+rdx+0x1]",
    "mov     edx, dword [rbp-0x44]",
    "cmp     r9d, edx",
    "jne     0x107390",
    "mov     esi, eax",
    "cdqe    ",
    "lea     r12, [r8+rax]",
    "movsxd  rdi, ebx",
    "mov     rax, rsi",
    "mov     qword [rbp-0x50], rdi",
    "add     ebx, 0x1",
    "mov     esi, r9d",
    "jmp     0x107390"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
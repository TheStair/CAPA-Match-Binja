{
  "address": "0x60e00",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r12",
    "push    rbx",
    "mov     ebx, edi",
    "sub     rsp, 0x10",
    "call    get_name_for_error",
    "mov     r12, rax",
    "test    ebx, ebx",
    "je      0x60e26",
    "mov     rax, qword [rel stderr]",
    "mov     rcx, r12",
    "mov     esi, 0x2",
    "lea     rdx, [rel data_1201c3]  {\"%s: \"}",
    "mov     rdi, qword [rax]",
    "add     rsp, 0x10",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "jmp     __fprintf_chk",
    "lea     rax, [rel interactive_shell]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x60e50",
    "call    executing_line_number",
    "mov     r9d, eax",
    "test    eax, eax",
    "jle     0x60e26",
    "lea     rax, [rel gnu_error_format]",
    "lea     r8, [rel data_122e02]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x60ea0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1201bc]  {\" line \"}",
    "xor     edi, edi",
    "mov     dword [rbp-0x14], r9d",
    "call    dcgettext",
    "mov     r9d, dword [rbp-0x14]",
    "mov     r8, rax",
    "jmp     0x60e70",
    "mov     rax, qword [rel stderr]",
    "mov     rcx, r12",
    "mov     esi, 0x2",
    "lea     rdx, [rel data_1202b0[4]]  {\"%s:%s%d: \"}",
    "mov     rdi, qword [rax]",
    "add     rsp, 0x10",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "jmp     __fprintf_chk"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
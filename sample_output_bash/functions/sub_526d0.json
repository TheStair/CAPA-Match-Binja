{
  "address": "0x526d0",
  "rules": [
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15d, edx",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x168",
    "lea     rax, [rel funcnest_max]",
    "mov     qword [rbp-0x78], rsi",
    "mov     qword [rbp-0x70], rcx",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x38], r8d",
    "mov     dword [rbp-0x34], r9d",
    "test    eax, eax",
    "jle     0x5271b",
    "lea     rdi, [rel data_11f2f1]  {\"FUNCNAME\"}",
    "call    find_variable",
    "mov     qword [rbp-0x58], 0x0",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x52741",
    "lea     r12, [rel funcnest]",
    "mov     r13d, dword [r12]",
    "cmp     eax, r13d",
    "jle     0x53aa8",
    "lea     rdi, [rel data_11f2fa]  {\"BASH_SOURCE\"}",
    "call    find_variable",
    "mov     qword [rbp-0x60], 0x0",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x52767",
    "test    byte [rax+0x28 {Elf64_Header::section_header_offset.b}], 0x4",
    "jne     0x52f70",
    "mov     rbx, qword [rdi]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_132b48]  {\"%s: maximum function nesting lev\u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     edx, r13d",
    "mov     rdi, rax",
    "mov     rsi, rbx",
    "xor     eax, eax",
    "call    internal_error",
    "xor     eax, eax",
    "mov     edi, 0x2",
    "mov     dword [r12], eax",
    "call    jump_to_top_level",
    "{ Does not return }",
    "lea     rdi, [rel data_11f306]  {\"BASH_LINENO\"}",
    "call    find_variable",
    "mov     qword [rbp-0x68], 0x0",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x5278d",
    "test    byte [rax+0x28 {Elf64_Header::section_header_offset.b}], 0x4",
    "jne     0x52f60",
    "mov     rax, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     qword [rbp-0x58], rax",
    "jmp     0x52741",
    "mov     rdi, qword [rbx+0x8]",
    "call    copy_command",
    "mov     qword [rbp-0x48], rax",
    "test    rax, rax",
    "je      0x527b7",
    "test    byte [rax+0x28 {Elf64_Header::section_header_offset.b}], 0x4",
    "jne     0x52f50",
    "mov     rax, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x52767",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     qword [rbp-0x50], rax",
    "test    rax, rax",
    "je      0x53a90",
    "test    r15b, 0x8",
    "je      0x527ad",
    "mov     rax, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     qword [rbp-0x68], rax",
    "jmp     0x5278d",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel sh_optarg]",
    "mov     rcx, qword [rbp-0x50]",
    "movd    xmm1, dword [rel data_162bb0]",
    "mov     rax, qword [rax]",
    "mov     dword [rcx+0x1c], 0x0",
    "mov     qword [rcx], rax",
    "lea     rax, [rel sh_optind]",
    "movd    xmm0, dword [rax]",
    "mov     rax, qword [rel data_162ba8]",
    "mov     qword [rcx+0x10], rax",
    "mov     eax, dword [rel data_162ba0]",
    "punpckldq xmm0, xmm1",
    "movq    qword [rcx+0x8], xmm0",
    "mov     dword [rcx+0x18], eax",
    "mov     eax, dword [rbp-0x34]",
    "test    eax, eax",
    "jne     0x52c20",
    "and     r15d, 0x40",
    "jne     0x52f30",
    "mov     rax, qword [rbp-0x48]",
    "or      dword [rax+0x4], 0x8",
    "lea     rax, [rel temporary_env]",
    "mov     rdi, qword [rbx]",
    "mov     esi, 0x4",
    "mov     rdx, qword [rax]",
    "lea     rax, [rel variable_context]",
    "add     dword [rax], 0x1",
    "call    push_var_context",
    "lea     rdi, [rel data_11fe7b]  {\"function_calling\"}",
    "call    begin_unwind_frame",
    "lea     rax, [rel temporary_env]",
    "mov     rdi, qword [rbx]",
    "mov     r15, qword [rax]",
    "mov     qword [rbp-0x80], rdi",
    "call    push_dollar_vars",
    "lea     rax, [rel variable_context]",
    "mov     rdi, qword [rbp-0x80]",
    "mov     esi, 0x4",
    "mov     rdx, r15",
    "add     dword [rax], 0x1",
    "call    push_var_context",
    "lea     rdx, [rel uwcache]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0x53550",
    "lea     rax, [rel subshell_environment]",
    "test    byte [rax], 0x4",
    "je      0x527b7",
    "mov     eax, dword [rel data_1612a4]",
    "xor     r8d, r8d",
    "test    al, 0x1",
    "jne     0x532e8",
    "cmp     qword [rax+0x18 {Elf64_Header::entry}], 0x0",
    "je      0x52c78",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x53baf",
    "mov     rsi, qword [rdx]",
    "lea     ecx, [rax-0x1]",
    "movsxd  rdi, ecx",
    "mov     dword [rdx+0xc], ecx",
    "mov     r15, qword [rsi+rdi*8]",
    "mov     rsi, qword [rel data_161a50]",
    "mov     qword [r15], rsi",
    "lea     rsi, [rel sub_4f4b0]",
    "mov     qword [r15+0x8], rsi",
    "mov     rsi, qword [rbp-0x50]",
    "mov     qword [rel data_161a50], r15",
    "mov     qword [r15+0x10], rsi",
    "test    ecx, ecx",
    "je      0x5358a",
    "mov     rdi, qword [rbp-0x48]",
    "call    optimize_shell_function",
    "jmp     0x527b7",
    "test    al, 0x40",
    "jne     0x52c89",
    "mov     edx, dword [rel data_1612ac]",
    "mov     eax, dword [rel data_1612a8]",
    "mov     ecx, edx",
    "and     ecx, 0x1",
    "test    al, 0x1",
    "jne     0x530d8",
    "and     dword [rax+0x28 {Elf64_Header::section_header_offset.d}], 0xffffefff {Elf64_Header::section_header_offset.d}",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_161a50]",
    "mov     qword [rel data_161a50], r15",
    "mov     qword [r15], rax",
    "lea     rax, [rel sub_4f4b0]",
    "mov     qword [r15+0x8], rax",
    "mov     rax, qword [rbp-0x50]",
    "mov     qword [r15+0x10], rax",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rdx, rax",
    "test    rax, rax",
    "jne     0x528bb",
    "sub     eax, 0x2",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rdx, qword [rcx+rax*8]",
    "lea     rax, [rel trap_list]",
    "mov     r8, qword [rax+0x208]",
    "jmp     0x52c89",
    "test    al, 0x40",
    "jne     0x53488",
    "test    ecx, ecx",
    "jne     0x533d0",
    "lea     rax, [rel pop_context]",
    "mov     qword [rdx], r15",
    "mov     edi, 0x20",
    "mov     qword [rdx+0x10], 0x0",
    "mov     qword [rdx+0x8], rax",
    "mov     qword [rel data_161a50], rdx",
    "mov     qword [rbp-0x88], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x88]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x53c47",
    "mov     qword [rbp-0x100], rax",
    "mov     esi, 0x20",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel sub_872f0]",
    "mov     qword [r15], rdx",
    "mov     edi, 0x20",
    "mov     qword [r15+0x8], rax",
    "lea     rax, [rel line_number]",
    "mov     dword [r15+0x18], 0x4",
    "mov     qword [r15+0x10], rax",
    "mov     eax, dword [rax]",
    "mov     qword [rel data_161a50], r15",
    "mov     dword [r15+0x1c], eax",
    "call    malloc",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0x53d08",
    "test    ecx, ecx",
    "jne     0x53870",
    "lea     rax, [rel trap_list]",
    "mov     rsi, qword [rax+0x210]",
    "mov     qword [rbp-0xb0], rsi",
    "test    ecx, ecx",
    "jne     0x53830",
    "and     edx, 0x40",
    "je      0x534f8",
    "test    r8, r8",
    "je      0x52cd0",
    "mov     qword [rbp-0x108], rax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel sub_872f0]",
    "mov     qword [rdx], r15",
    "mov     edi, 0x20",
    "mov     qword [rdx+0x8], rax",
    "lea     rax, [rel line_number_for_err_trap]",
    "mov     dword [rdx+0x18], 0x4",
    "mov     qword [rdx+0x10], rax",
    "mov     eax, dword [rax]",
    "mov     qword [rel data_161a50], rdx",
    "mov     dword [rdx+0x1c], eax",
    "mov     qword [rbp-0x90], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x90]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x53af6",
    "and     edx, 0x40",
    "jne     0x52caa",
    "test    r8, r8",
    "je      0x52cd0",
    "and     edx, 0x40",
    "je      0x538c5",
    "xor     r15d, r15d",
    "test    r8, r8",
    "je      0x53980",
    "lea     rax, [rel trap_list]",
    "mov     r15, qword [rax+0x218]",
    "test    r8, r8",
    "je      0x531fd",
    "test    r8, r8",
    "je      0x52cd0",
    "lea     rax, [rel funcnest]",
    "xor     edx, edx",
    "add     dword [rax], 0x1",
    "lea     rax, [rel shell_function_defs]",
    "mov     rbx, qword [rax]",
    "lea     rax, [rel this_shell_function]",
    "mov     rax, qword [rax]",
    "mov     rsi, rbx",
    "mov     rdi, qword [rax]",
    "call    hash_search",
    "test    rax, rax",
    "je      0x53398",
    "test    byte [rbx+0x28], 0x80",
    "jne     0x52cd0",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel sub_872f0]",
    "mov     qword [r15], rdx",
    "mov     edi, 0x20",
    "mov     qword [r15+0x8], rax",
    "lea     rax, [rel data_1619c8]",
    "mov     qword [r15+0x10], rax",
    "mov     eax, dword [rel data_1619c8]",
    "mov     dword [r15+0x18], 0x4",
    "mov     dword [r15+0x1c], eax",
    "mov     qword [rel data_161a50], r15",
    "call    malloc",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0x53b55",
    "lea     rax, [rel trap_list]",
    "mov     r15, qword [rax+0x218]",
    "test    r8, r8",
    "je      0x531fd",
    "test    byte [rbx+0x28], 0x80",
    "jne     0x52cd0",
    "mov     r15, qword [rax+0x218]",
    "test    r8, r8",
    "je      0x53113",
    "xor     r15d, r15d",
    "test    r8, r8",
    "jne     0x53109",
    "test    rsi, rsi",
    "jne     0x53853",
    "test    byte [rbx+0x28], 0x80",
    "je      0x53523",
    "test    r15, r15",
    "je      0x52cd0",
    "test    byte [rbx+0x28], 0x80",
    "jne     0x531fd",
    "test    byte [rbx+0x28], 0x80",
    "jne     0x52cd0",
    "lea     rbx, [rel data_122e02]",
    "jmp     0x52d1c",
    "mov     rax, qword [rax+0x10]",
    "mov     qword [rel data_1619d8], rbx",
    "test    rax, rax",
    "je      0x53398",
    "lea     rax, [rel function_trace_mode]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x534d8",
    "mov     qword [rbp-0x110], rax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel sub_872f0]",
    "mov     qword [rdx], r15",
    "mov     edi, 0xe4",
    "mov     qword [rdx+0x8], rax",
    "lea     rax, [rel return_catch_flag]",
    "mov     dword [rdx+0x18], 0x4",
    "mov     qword [rdx+0x10], rax",
    "mov     eax, dword [rax]",
    "mov     qword [rel data_161a50], rdx",
    "mov     dword [rdx+0x1c], eax",
    "mov     qword [rbp-0x98], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x98]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x53bce",
    "test    byte [rbx+0x28], 0x80",
    "jne     0x531fd",
    "lea     rax, [rel function_trace_mode]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "jne     0x52cd0",
    "cmp     qword [rbp-0xb0], 0x0",
    "je      0x531fd",
    "jmp     0x53109",
    "cmp     qword [rbp-0xb0], 0x0",
    "je      0x52cd0",
    "lea     rax, [rel error_trace_mode]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x53132",
    "jmp     0x52cd0",
    "lea     rax, [rel function_trace_mode]",
    "cmp     dword [rax], 0x0",
    "jne     0x53113",
    "test    byte [rel data_1612a4], 0x10",
    "jne     0x53226",
    "xor     r11d, r11d",
    "mov     qword [rbp-0xb0], r11",
    "lea     rax, [rel function_trace_mode]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x534ed",
    "lea     rax, [rel this_shell_function]",
    "mov     rdi, qword [rbp-0x58]",
    "mov     esi, 0x1",
    "mov     rax, qword [rax]",
    "mov     rdx, qword [rax]",
    "call    array_rshift",
    "mov     rdi, qword [rbp-0x60]",
    "mov     rdx, rbx",
    "mov     esi, 0x1",
    "call    array_rshift",
    "test    byte [rel data_1612a8], 0x10",
    "je      0x52d61",
    "mov     rbx, qword [rax+0x18]",
    "mov     esi, dword [rbp-0x34]",
    "test    esi, esi",
    "je      0x536a0",
    "nop     word [rax+rax]",
    "mov     esi, 0xe4",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel sub_872f0]",
    "mov     qword [r15], rdx",
    "mov     qword [r15+0x8], rax",
    "lea     rax, [rel return_catch]",
    "mov     dword [r15+0x18], 0xc8",
    "movdqa  xmm2, xmmword [rax]",
    "movdqa  xmm3, xmmword [rax+0x10]",
    "mov     qword [r15+0x10], rax",
    "movdqa  xmm4, xmmword [rax+0x20]",
    "movdqa  xmm5, xmmword [rax+0x30]",
    "mov     qword [rel data_161a50], r15",
    "movdqa  xmm6, xmmword [rax+0x40]",
    "movdqa  xmm7, xmmword [rax+0x50]",
    "movups  xmmword [r15+0x1c], xmm2",
    "movups  xmmword [r15+0x2c], xmm3",
    "movdqa  xmm2, xmmword [rax+0x60]",
    "movdqa  xmm3, xmmword [rax+0x70]",
    "movups  xmmword [r15+0x3c], xmm4",
    "movdqa  xmm4, xmmword [rax+0x80]",
    "movups  xmmword [r15+0x4c], xmm5",
    "movdqa  xmm5, xmmword [rax+0x90]",
    "movups  xmmword [r15+0x5c], xmm6",
    "movdqa  xmm6, xmmword [rax+0xa0]",
    "movups  xmmword [r15+0x6c], xmm7",
    "movdqa  xmm7, xmmword [rax+0xb0]",
    "mov     rax, qword [rax+0xc0]",
    "movups  xmmword [r15+0x7c], xmm2",
    "mov     qword [r15+0xdc], rax",
    "movups  xmmword [r15+0x8c], xmm3",
    "movups  xmmword [r15+0x9c], xmm4",
    "movups  xmmword [r15+0xac], xmm5",
    "movups  xmmword [r15+0xbc], xmm6",
    "movups  xmmword [r15+0xcc], xmm7",
    "lea     rdx, [rel uwcache]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0x535d0",
    "lea     rax, [rel function_trace_mode]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x531fd",
    "mov     r9d, dword [rbp-0x34]",
    "test    r9d, r9d",
    "je      0x536a0",
    "lea     rax, [rel error_trace_mode]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "jne     0x531fd",
    "mov     esi, dword [rbp-0x34]",
    "test    esi, esi",
    "jne     0x531f3",
    "jmp     0x52cd0",
    "jmp     0x5340b",
    "mov     ecx, dword [rbp-0x34]",
    "test    ecx, ecx",
    "jne     0x532d4",
    "mov     eax, dword [rbx+0x28]",
    "lea     rdx, [rel function_trace_mode]",
    "and     eax, 0x80",
    "or      eax, dword [rdx]",
    "jne     0x52cd0",
    "xor     r15d, r15d",
    "jmp     0x531fd",
    "mov     qword [rbp-0xb0], 0x0",
    "xor     r15d, r15d",
    "call    executing_line_number",
    "lea     rax, [rel running_trap]",
    "cmp     dword [rax], 0x43",
    "je      0x53540",
    "mov     qword [rbp-0xb0], 0x0",
    "xor     r15d, r15d",
    "mov     edi, 0x41",
    "call    restore_default_signal",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "jne     0x52b11",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rcx, qword [rcx+rax*8]",
    "mov     edx, dword [rbp-0x34]",
    "test    edx, edx",
    "je      0x53a80",
    "mov     edi, 0x41",
    "call    restore_default_signal",
    "jmp     0x52cd0",
    "mov     edi, 0x42",
    "call    restore_default_signal",
    "mov     rdi, qword [rbp-0xb0]",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0xb8], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0xb8]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x53ca9",
    "mov     r10d, dword [rbp-0x34]",
    "test    r10d, r10d",
    "je      0x536ae",
    "mov     edi, 0x43",
    "call    restore_default_signal",
    "jmp     0x52cd0",
    "mov     rdi, r15",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x53c85",
    "mov     rdi, r8",
    "mov     qword [rbp-0xc8], r8",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0xc0], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0xc0]",
    "mov     r8, qword [rbp-0xc8]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x53b15",
    "mov     edi, 0x41",
    "call    restore_default_signal",
    "cmp     qword [rbp-0xb0], 0x0",
    "je      0x5343f",
    "mov     esi, 0x30",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x40]",
    "mov     rsi, qword [rbp-0x60]",
    "mov     rbx, qword [rbp-0x58]",
    "mov     edx, dword [rbp-0x34]",
    "mov     qword [rax+0x10], rsi",
    "mov     rsi, qword [rbp-0x68]",
    "mov     qword [rax+0x18], r13",
    "mov     qword [rax+0x20], rsi",
    "mov     qword [rax+0x28], r14",
    "mov     qword [rax], rbx",
    "mov     qword [rax+0x8], r12",
    "test    edx, edx",
    "je      0x53348",
    "lea     rax, [rel line_number_for_err_trap]",
    "mov     eax, dword [rax]",
    "jmp     0x52d66",
    "mov     qword [rbp-0x140], rax",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x138], r8",
    "mov     qword [rbp-0x130], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r8",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "lea     rcx, [rel uwcache]",
    "mov     r8, rax",
    "mov     eax, dword [rcx+0xc]",
    "test    eax, eax",
    "jle     0x539c8",
    "lea     rax, [rel dispose_command]",
    "mov     qword [rcx], r15",
    "mov     edi, 0x24",
    "mov     qword [rel data_161a50], rcx",
    "mov     qword [rcx+0x8], rax",
    "mov     rax, qword [rbp-0x48]",
    "mov     qword [rbp-0xa0], rcx",
    "mov     qword [rcx+0x10], rax",
    "call    malloc",
    "mov     rcx, qword [rbp-0xa0]",
    "test    rax, rax",
    "mov     rdx, rax",
    "je      0x53bed",
    "mov     qword [rbp-0x118], rax",
    "mov     esi, 0x20",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbp-0x120], rax",
    "mov     esi, 0x24",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel sub_872f0]",
    "mov     qword [rdx], rcx",
    "mov     edi, 0x20",
    "mov     qword [rdx+0x8], rax",
    "lea     rax, [rel this_shell_function]",
    "mov     dword [rdx+0x18], 0x8",
    "mov     qword [rdx+0x10], rax",
    "mov     rax, qword [rax]",
    "mov     qword [rel data_161a50], rdx",
    "mov     qword [rdx+0x1c], rax",
    "mov     qword [rbp-0xa8], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0xa8]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x53c66",
    "mov     qword [rbp-0xb0], 0x0",
    "jmp     0x536ae",
    "mov     edi, 0x41",
    "call    restore_default_signal",
    "jmp     0x5343f",
    "mov     qword [rbp-0x168], rax",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x160], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, qword [rbp-0xb0]",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "lea     rsi, [rel uwcache]",
    "mov     rcx, rax",
    "mov     eax, dword [rsi+0xc]",
    "test    eax, eax",
    "jle     0x538e0",
    "mov     qword [rbp-0x180], rax",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r15",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "lea     rdx, [rel uwcache]",
    "mov     r15, rax",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0x537b0",
    "test    r15, r15",
    "je      0x52cd0",
    "lea     rax, [rel error_trace_mode]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "je      0x531f3",
    "lea     rdx, [rel uwcache]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0x53680",
    "lea     rax, [rel debugging_mode]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x52dec",
    "movsxd  rdi, eax",
    "call    itos",
    "mov     rdi, qword [rbp-0x68]",
    "mov     esi, 0x1",
    "mov     rdx, rax",
    "mov     rbx, rax",
    "call    array_rshift",
    "mov     rdi, rbx",
    "call    free",
    "mov     edi, 0x30",
    "call    malloc",
    "mov     qword [rbp-0x40], rax",
    "test    rax, rax",
    "je      0x53ade",
    "mov     edi, 0x20",
    "mov     qword [rbp-0xe8], r8",
    "call    malloc",
    "mov     r8, qword [rbp-0xe8]",
    "test    rax, rax",
    "mov     rdx, rax",
    "je      0x53c1a",
    "mov     rdx, qword [rcx]",
    "lea     esi, [rax-0x1]",
    "movsxd  rdi, esi",
    "mov     dword [rcx+0xc], esi",
    "mov     rdx, qword [rdx+rdi*8]",
    "mov     rdi, qword [rel data_161a50]",
    "mov     qword [rdx], rdi",
    "lea     rdi, [rel xfree]",
    "mov     qword [rdx+0x10], r8",
    "mov     qword [rdx+0x8], rdi",
    "mov     qword [rel data_161a50], rdx",
    "test    esi, esi",
    "je      0x53a0c",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel sub_872f0]",
    "mov     qword [r15], rdx",
    "mov     edi, 0x20",
    "mov     qword [r15+0x8], rax",
    "lea     rax, [rel funcnest]",
    "mov     dword [r15+0x18], 0x4",
    "mov     qword [r15+0x10], rax",
    "mov     eax, dword [rax]",
    "mov     qword [rel data_161a50], r15",
    "mov     dword [r15+0x1c], eax",
    "call    malloc",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0x53cdb",
    "mov     edi, 0x20",
    "mov     qword [rbp-0xd0], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0xd0]",
    "test    rax, rax",
    "mov     rdx, rax",
    "je      0x53b82",
    "mov     rdx, qword [rsi]",
    "lea     edi, [rax-0x1]",
    "movsxd  r8, edi",
    "mov     dword [rsi+0xc], edi",
    "mov     rdx, qword [rdx+r8*8]",
    "mov     r8, qword [rel data_161a50]",
    "mov     qword [rdx], r8",
    "lea     r8, [rel xfree]",
    "mov     qword [rdx+0x10], rcx",
    "mov     qword [rdx+0x8], r8",
    "mov     qword [rel data_161a50], rdx",
    "test    edi, edi",
    "je      0x53924",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x539a4",
    "mov     rsi, qword [rdx]",
    "lea     ecx, [rax-0x1]",
    "movsxd  rdi, ecx",
    "mov     dword [rdx+0xc], ecx",
    "mov     rbx, qword [rsi+rdi*8]",
    "mov     rsi, qword [rel data_161a50]",
    "mov     qword [rbx], rsi",
    "lea     rsi, [rel xfree]",
    "mov     qword [rbx+0x10], r15",
    "mov     qword [rbx+0x8], rsi",
    "mov     qword [rel data_161a50], rbx",
    "test    ecx, ecx",
    "je      0x537e6",
    "test    byte [rel data_1612a4], 0x10",
    "jne     0x532d4",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x53369",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "lea     rbx, [rel bash_argv_initialized]",
    "mov     eax, dword [rbx]",
    "test    eax, eax",
    "je      0x53460",
    "lea     rax, [rel shell_compatibility_level]",
    "cmp     dword [rax], 0x2c",
    "jg      0x52dfd",
    "mov     qword [rbp-0x148], rax",
    "mov     esi, 0x20",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_161a50]",
    "mov     qword [rdx+0x10], r8",
    "mov     qword [rel data_161a50], rdx",
    "mov     qword [rdx], rax",
    "lea     rax, [rel xfree]",
    "mov     qword [rdx+0x8], rax",
    "mov     edi, 0x20",
    "mov     qword [rbp-0xf8], rdx",
    "mov     qword [rbp-0xf0], r8",
    "call    malloc",
    "mov     r8, qword [rbp-0xf0]",
    "mov     rdx, qword [rbp-0xf8]",
    "test    rax, rax",
    "mov     rcx, rax",
    "jne     0x53751",
    "sub     eax, 0x2",
    "mov     rsi, qword [rcx]",
    "mov     dword [rcx+0xc], eax",
    "cdqe    ",
    "mov     rcx, qword [rsi+rax*8]",
    "mov     qword [rbp-0x128], rax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel sub_872f0]",
    "mov     qword [rdx], r15",
    "mov     qword [rdx+0x8], rax",
    "lea     rax, [rel loop_level]",
    "mov     dword [rdx+0x18], 0x4",
    "mov     qword [rdx+0x10], rax",
    "mov     eax, dword [rax]",
    "mov     qword [rel data_161a50], rdx",
    "mov     dword [rdx+0x1c], eax",
    "jmp     0x52c41",
    "mov     qword [rbp-0x170], rax",
    "mov     esi, 0x20",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_161a50]",
    "mov     qword [rdx+0x10], rcx",
    "mov     qword [rel data_161a50], rdx",
    "mov     qword [rdx], rax",
    "lea     rax, [rel xfree]",
    "mov     qword [rdx+0x8], rax",
    "mov     edi, 0x20",
    "mov     qword [rbp-0xe0], rdx",
    "mov     qword [rbp-0xd8], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0xd8]",
    "mov     rdx, qword [rbp-0xe0]",
    "test    rax, rax",
    "jne     0x531da",
    "sub     eax, 0x2",
    "mov     rdi, qword [rsi]",
    "mov     dword [rsi+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rdi+rax*8]",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_161a50]",
    "mov     qword [rbx+0x10], r15",
    "mov     qword [rel data_161a50], rbx",
    "mov     qword [rbx], rax",
    "lea     rax, [rel xfree]",
    "mov     qword [rbx+0x8], rax",
    "mov     edi, 0x20",
    "call    malloc",
    "test    rax, rax",
    "jne     0x532bb",
    "sub     eax, 0x2",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "jmp     0x5320f",
    "mov     rdx, qword [rel data_161a50]",
    "mov     rbx, qword [rbp-0x40]",
    "mov     qword [rax], rdx",
    "lea     rdx, [rel restore_funcarray_state]",
    "mov     qword [rax+0x10], rbx",
    "mov     qword [rax+0x8], rdx",
    "mov     qword [rel data_161a50], rax",
    "jmp     0x52dd3",
    "jmp     0x539a4",
    "call    list_rest_of_args",
    "mov     r12, rax",
    "mov     rdi, rax",
    "call    push_args",
    "mov     rdi, r12",
    "call    dispose_words",
    "mov     dword [rbx], 0x1",
    "jmp     0x52dfd",
    "mov     rax, qword [rbp-0x78]",
    "mov     esi, 0x1",
    "mov     rdi, qword [rax]",
    "call    remember_args",
    "lea     rax, [rel debugging_mode]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x53308",
    "lea     rax, [rel maybe_set_debug_trap]",
    "mov     qword [rcx], rdx",
    "mov     edi, 0x41",
    "mov     qword [rcx+0x10], r8",
    "mov     qword [rcx+0x8], rax",
    "mov     qword [rel data_161a50], rcx",
    "call    restore_default_signal",
    "cmp     qword [rbp-0xb0], 0x0",
    "je      0x53791",
    "mov     qword [rbp-0x158], rax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x150], r8",
    "call    sub_a7f00",
    "{ Does not return }",
    "test    r15, r15",
    "je      0x52cd0",
    "lea     rax, [rel error_trace_mode]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "je      0x5313d",
    "lea     rax, [rel temporary_env]",
    "lea     rdi, [rel data_11f2f1]  {\"FUNCNAME\"}",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel this_shell_function]",
    "mov     qword [rax], rbx",
    "call    find_variable",
    "test    rax, rax",
    "je      0x52c78",
    "mov     qword [rax], rdx",
    "lea     rdx, [rel maybe_set_error_trap]",
    "mov     qword [rax+0x10], rcx",
    "mov     qword [rax+0x8], rdx",
    "mov     qword [rel data_161a50], rax",
    "mov     qword [rbp-0x178], rax",
    "mov     esi, 0x20",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rdx, [rel maybe_set_return_trap]",
    "mov     qword [rax], rbx",
    "mov     qword [rax+0x10], r15",
    "mov     qword [rax+0x8], rdx",
    "mov     qword [rel data_161a50], rax",
    "mov     qword [rbp-0x188], rax",
    "mov     esi, 0x20",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x78]",
    "mov     rdi, qword [rax]",
    "call    push_args",
    "mov     eax, dword [rbp-0x34]",
    "test    eax, eax",
    "je      0x53618",
    "mov     rax, qword [rbp-0x48]",
    "lea     rdx, [rel line_number]",
    "mov     eax, dword [rax+0x8]",
    "mov     dword [rel data_1619c8], eax",
    "mov     dword [rdx], eax",
    "mov     eax, dword [rbp-0x34]",
    "test    eax, eax",
    "jne     0x53335",
    "test    byte [rel data_1612a4], 0x10",
    "jne     0x53231",
    "lea     rdx, [rel uwcache]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0x5398e",
    "mov     rax, qword [rbp-0x48]",
    "lea     rdx, [rel line_number]",
    "mov     eax, dword [rax+0x8]",
    "mov     dword [rel data_1619c8], eax",
    "mov     dword [rdx], eax",
    "mov     edi, dword [rbp-0x38]",
    "xor     esi, esi",
    "call    stop_pipeline",
    "jmp     0x52e40",
    "lea     rax, [rel shell_compatibility_level]",
    "cmp     dword [rax], 0x2b",
    "jle     0x52e59",
    "jmp     0x5320f",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x53639",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "lea     rax, [rel from_return_trap]",
    "lea     rdi, [rel return_catch]",
    "xor     esi, esi",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel return_catch_flag]",
    "add     dword [rax], 0x1",
    "call    __sigsetjmp",
    "endbr64 ",
    "mov     r12, qword [rel data_161a20]",
    "test    eax, eax",
    "je      0x52ff0",
    "lea     rax, [rel loop_level]",
    "mov     dword [rax], 0x0",
    "mov     rdx, qword [rel data_161a50]",
    "mov     qword [rax+0x10], 0x0",
    "mov     qword [rax], rdx",
    "lea     rdx, [rel pop_args]",
    "mov     qword [rel data_161a50], rax",
    "mov     qword [rax+0x8], rdx",
    "mov     rax, qword [rbp-0x48]",
    "lea     rdx, [rel line_number]",
    "mov     eax, dword [rax+0x8]",
    "mov     dword [rel data_1619c8], eax",
    "mov     dword [rdx], eax",
    "jmp     0x52e40",
    "mov     dword [rel data_161a2c], 0x1",
    "mov     eax, dword [rel data_1612a4]",
    "and     eax, 0x51",
    "cmp     eax, 0x1",
    "je      0x530b0",
    "lea     rax, [rel return_catch_value]",
    "mov     ebx, dword [rax]",
    "lea     rax, [rel from_return_trap]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x53070",
    "call    sub_8f3f0",
    "mov     ebx, eax",
    "lea     rax, [rel debugging_mode]",
    "mov     r15d, dword [rax]",
    "test    r15d, r15d",
    "je      0x5300c",
    "mov     r8, qword [rbp-0x70]",
    "mov     rdi, qword [rbp-0x48]",
    "mov     ecx, 0xffffffff",
    "xor     esi, esi",
    "mov     edx, 0xffffffff",
    "mov     qword [rel data_161a20], r12",
    "mov     dword [rel data_161a2c], 0x0",
    "call    execute_command_internal",
    "mov     r12, qword [rel data_161a20]",
    "mov     ebx, eax",
    "mov     eax, dword [rel data_1612ac]",
    "and     eax, 0x51",
    "cmp     eax, 0x1",
    "je      0x533a8",
    "mov     eax, dword [rel data_1612ac]",
    "and     eax, 0x51",
    "cmp     eax, 0x1",
    "jne     0x52eab",
    "mov     qword [rel data_161a20], r12",
    "test    ebx, ebx",
    "jne     0x53058",
    "lea     r13, [rel last_command_exit_value]",
    "lea     rsi, [rel data_11fe8c]  {\"return trap\"}",
    "mov     edi, 0x43",
    "mov     r14d, dword [r13]",
    "call    sub_8e640",
    "mov     dword [r13], r14d",
    "jmp     0x53051",
    "mov     qword [rel data_161a20], r12",
    "lea     r13, [rel last_command_exit_value]",
    "lea     rsi, [rel data_11fe8c]  {\"return trap\"}",
    "mov     edi, 0x43",
    "mov     r14d, dword [r13]",
    "call    sub_8e640",
    "mov     dword [r13], r14d",
    "jmp     0x52eab",
    "mov     r14d, dword [rbp-0x34]",
    "test    r14d, r14d",
    "jne     0x52fc0",
    "lea     rdx, [rel variable_context]",
    "mov     esi, dword [rdx]",
    "cmp     dword [rax+0x2c {Elf64_Header::section_header_offset+4.d}], esi",
    "jne     0x52ed9",
    "mov     dword [rel data_161a2c], 0x0",
    "jmp     0x52eb2",
    "jmp     0x5300c",
    "lea     rdi, [rel data_11fe98]  {\"OPTIND\"}",
    "call    find_variable",
    "test    rax, rax",
    "je      0x52ed9",
    "mov     rdi, qword [rbp-0x40]",
    "call    restore_funcarray_state",
    "lea     rax, [rel debugging_mode]",
    "mov     r12d, dword [rax]",
    "test    r12d, r12d",
    "je      0x52efc",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0x52efc",
    "mov     rax, qword [rbp-0x50]",
    "or      dword [rax+0x1c], 0x1",
    "lea     rax, [rel variable_context]",
    "mov     r13d, dword [rax]",
    "test    r13d, r13d",
    "je      0x52f80",
    "call    pop_args",
    "jmp     0x52efc",
    "lea     rdi, [rel data_11fe7b]  {\"function_calling\"}",
    "call    sub_113ed0",
    "lea     rdi, [rel data_11f2f1]  {\"FUNCNAME\"}",
    "call    find_variable",
    "test    rax, rax",
    "je      0x52f9f",
    "lea     rax, [rel this_shell_function]",
    "cmp     qword [rax], 0x0",
    "je      0x52f80",
    "mov     r11d, dword [rel data_161064]",
    "test    r11d, r11d",
    "je      0x52f18",
    "cmp     qword [rax+0x18 {Elf64_Header::entry}], 0x0",
    "je      0x52f9f",
    "add     rsp, 0x168",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "call    sub_875b0",
    "jmp     0x52f18",
    "or      dword [rax+0x28 {Elf64_Header::section_header_offset.d}], 0x1000 {Elf64_Header::section_header_offset.d}"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
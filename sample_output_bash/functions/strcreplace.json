{
  "address": "0xa7fc0",
  "rules": [
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     eax, ecx",
    "mov     r10d, esi",
    "and     eax, 0x1",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "mov     ebx, ecx",
    "and     ebx, 0x2",
    "sub     rsp, 0x38",
    "mov     qword [rbp-0x50], rdx",
    "mov     dword [rbp-0x40], eax",
    "mov     dword [rbp-0x3c], ebx",
    "mov     qword [rbp-0x38], 0x0",
    "test    rdx, rdx",
    "je      0xa8008",
    "mov     rdi, r13",
    "mov     dword [rbp-0x48], r10d",
    "call    strlen",
    "mov     rsi, qword [rbp-0x38]",
    "lea     r12, [rsi+rax+0x2]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xa831f",
    "cmp     byte [rdx], 0x0",
    "mov     rdi, rdx",
    "jne     0xa81e0",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movzx   eax, byte [r13]",
    "mov     r10d, dword [rbp-0x48]",
    "mov     rbx, r14",
    "test    al, al",
    "jne     0xa807c",
    "cmp     byte [rdx+0x1], 0x0",
    "mov     qword [rbp-0x38], 0x1",
    "je      0xa8008",
    "movsx   edx, al",
    "cmp     edx, r10d",
    "je      0xa8100",
    "jmp     0xa8160",
    "cmp     byte [rdx+0x2], 0x0",
    "mov     qword [rbp-0x38], 0x2",
    "je      0xa8008",
    "cmp     qword [rbp-0x38], 0x0",
    "je      0xa814f",
    "cmp     al, 0x5c",
    "jne     0xa8050",
    "mov     byte [rbx], 0x0",
    "add     rsp, 0x38",
    "mov     rax, r14",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     dword [rbp-0x48], esi",
    "call    strlen",
    "mov     r10d, dword [rbp-0x48]",
    "mov     qword [rbp-0x38], rax",
    "jmp     0xa8008",
    "movzx   eax, byte [r13+0x1]",
    "add     r13, 0x1",
    "test    al, al",
    "jne     0xa807c",
    "mov     ecx, dword [rbp-0x40]",
    "mov     r15, rbx",
    "sub     r15, r14",
    "test    ecx, ecx",
    "jne     0xa8220",
    "mov     r15, rbx",
    "sub     r15, r14",
    "lea     rax, [r15+0x2]",
    "cmp     rax, r12",
    "jae     0xa80c0",
    "movsx   edx, byte [r13+0x1]",
    "mov     eax, edx",
    "cmp     edx, r10d",
    "je      0xa81b8",
    "mov     rdi, qword [rbp-0x50]",
    "mov     dword [rbp-0x48], r10d",
    "call    glob_pattern_p",
    "mov     r10d, dword [rbp-0x48]",
    "test    eax, eax",
    "jne     0xa8250",
    "mov     rax, qword [rbp-0x38]",
    "add     rax, r15",
    "cmp     rax, r12",
    "jae     0xa8178",
    "add     r12, r12",
    "cmp     rax, r12",
    "jae     0xa80c0",
    "movzx   eax, byte [r13]",
    "add     r13, 0x1",
    "add     rbx, 0x1",
    "mov     byte [rbx-0x1], al",
    "movzx   eax, byte [r13]",
    "test    al, al",
    "je      0xa8160",
    "add     r13, 0x1",
    "jmp     0xa8050",
    "mov     edx, dword [rbp-0x3c]",
    "test    edx, edx",
    "je      0xa8050",
    "mov     rdi, qword [rbp-0x50]",
    "mov     dword [rbp-0x54], r10d",
    "call    quote_globbing_chars",
    "mov     rdi, rax",
    "mov     qword [rbp-0x48], rax",
    "call    strlen",
    "mov     r10d, dword [rbp-0x54]",
    "mov     rcx, rax",
    "lea     rax, [r15+rax]",
    "cmp     rax, r12",
    "jae     0xa82c0",
    "mov     rdi, qword [rbp-0x50]",
    "mov     esi, 0x5c",
    "call    strchr",
    "mov     r10d, dword [rbp-0x48]",
    "test    rax, rax",
    "je      0xa8118",
    "add     r12, r12",
    "cmp     rax, r12",
    "jae     0xa8178",
    "cmp     r12, r15",
    "mov     rax, r15",
    "mov     rsi, qword [rbp-0x50]",
    "mov     rdi, rbx",
    "cmovae  rax, r12",
    "mov     dword [rbp-0x48], r10d",
    "sub     rax, r15",
    "mov     rdx, rax",
    "call    __strcpy_chk",
    "mov     rax, qword [rbp-0x38]",
    "mov     r10d, dword [rbp-0x48]",
    "add     rbx, rax",
    "mov     dword [rbp-0x48], r10d",
    "test    r14, r14",
    "je      0xa81c8",
    "cmp     al, 0x5c",
    "mov     r15, rbx",
    "sete    al",
    "sub     r15, r14",
    "movzx   eax, al",
    "add     r13, rax",
    "lea     rax, [r15+0x2]",
    "cmp     rax, r12",
    "jb      0xa805f",
    "add     r12, r12",
    "cmp     rax, r12",
    "jae     0xa82c0",
    "cmp     r12, r15",
    "mov     rax, r15",
    "mov     rdi, rbx",
    "mov     dword [rbp-0x54], r10d",
    "cmovae  rax, r12",
    "mov     qword [rbp-0x60], rcx",
    "sub     rax, r15",
    "mov     r15, qword [rbp-0x48]",
    "mov     rdx, rax",
    "mov     rsi, r15",
    "call    __strcpy_chk",
    "mov     rcx, qword [rbp-0x60]",
    "mov     rdi, r15",
    "add     rbx, rcx",
    "call    free",
    "mov     r10d, dword [rbp-0x54]",
    "jmp     0xa814f",
    "mov     dword [rbp-0x48], r10d",
    "test    r14, r14",
    "je      0xa830b",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r10d, dword [rbp-0x48]",
    "mov     r14, rax",
    "jmp     0xa80e7",
    "mov     rdi, r14",
    "mov     rsi, r12",
    "call    realloc",
    "mov     r10d, dword [rbp-0x48]",
    "mov     r14, rax",
    "nop     dword [rax]",
    "mov     qword [rbp-0x60], rcx",
    "mov     dword [rbp-0x54], r10d",
    "test    r14, r14",
    "je      0xa82f6",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r10d, dword [rbp-0x48]",
    "mov     r14, rax",
    "jmp     0xa819f",
    "mov     rdi, r14",
    "mov     rsi, r12",
    "call    realloc",
    "mov     r10d, dword [rbp-0x48]",
    "mov     r14, rax",
    "test    r14, r14",
    "je      0xa8330",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rbx, [r14+r15]",
    "jmp     0xa805f",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rcx, qword [rbp-0x60]",
    "mov     r10d, dword [rbp-0x54]",
    "mov     r14, rax",
    "jmp     0xa82eb",
    "mov     rdi, r14",
    "mov     rsi, r12",
    "call    realloc",
    "mov     r10d, dword [rbp-0x54]",
    "mov     rcx, qword [rbp-0x60]",
    "mov     r14, rax",
    "test    r14, r14",
    "je      0xa8330",
    "lea     rbx, [r14+r15]",
    "jmp     0xa8124",
    "test    r14, r14",
    "je      0xa8330",
    "lea     rbx, [r14+r15]",
    "jmp     0xa8279"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
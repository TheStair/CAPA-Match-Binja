{
  "address": "0xc4830",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "test    rdi, rdi",
    "je      0xc48f0",
    "lea     rax, [rel this_command_name]",
    "mov     ebx, 0x1",
    "mov     rax, qword [rax]",
    "cmp     byte [rax], 0x5b",
    "jne     0xc48e0",
    "mov     rbx, rdi",
    "mov     rdx, rdi",
    "xor     eax, eax",
    "nop     word [rax+rax]",
    "add     rsp, 0x8",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "cmp     byte [rax+0x1], 0x0",
    "jne     0xc48e0",
    "mov     rdx, qword [rdx]",
    "mov     ecx, eax",
    "add     eax, 0x1",
    "test    rdx, rdx",
    "jne     0xc4858",
    "lea     r13d, [rcx+0x3]",
    "movsxd  r13, r13d",
    "shl     r13, 0x3",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xc492e",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120b1b]  {\"missing `]'\"}",
    "xor     edi, edi",
    "mov     ebx, 0x2",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xc48e0",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r12], 0x0",
    "mov     eax, 0x2",
    "nop     dword [rax]",
    "mov     rdx, qword [rbx+0x8]",
    "mov     rbx, qword [rbx]",
    "mov     rdx, qword [rdx]",
    "mov     qword [r12+rax*8-0x8], rdx",
    "mov     rdx, rax",
    "add     rax, 0x1",
    "test    rbx, rbx",
    "jne     0xc4898",
    "lea     rax, [rel this_command_name]",
    "mov     edi, edx",
    "movsxd  rdx, edx",
    "mov     rsi, r12",
    "mov     qword [r12+rdx*8], 0x0",
    "mov     rax, qword [rax]",
    "mov     qword [r12], rax",
    "call    test_command",
    "mov     rdi, r12",
    "mov     ebx, eax",
    "call    free"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
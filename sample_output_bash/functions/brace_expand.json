{
  "address": "0x99ec0",
  "rules": [
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/4f0637c1ae9b445ca3ec93a4b4e0bb6d",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/9710d9ee76a4466b954966f2a98c40ba",
    "encrypt data using TEA/f68c13fdd9924dacbb04fb3766fcc8ea/b98afe217679411c944f0cab12b002af",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "encrypt data using RSA via embedded library/8bc479b14953434c9835ec8295d733a3",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/bee29d5f30484915bb6e92fdf1038d2c",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/af1fc90a7adf4a2ea648cfac1c599984",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "decrypt data using TEA/e3455f541322464e87e33d73effdac9c/c9ea650c1ee846d4b0844b5a3685e146",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using XXTEA/c3f2a9482f0d43a8bf071fa39e1b4168/ea2ab02de6a64ee191b417bab5bfc302",
    "hash data using aphash/2602c80a9b3846b9ae92e2e83b13e866"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "lea     r15, [rbp-0x74]",
    "push    r13",
    "push    r12",
    "push    rbx",
    "xor     ebx, ebx",
    "sub     rsp, 0xb8",
    "mov     qword [rbp-0x88], rdi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x58], 0x0",
    "call    strlen",
    "mov     r13, rax",
    "lea     rax, [rbp-0x78]",
    "mov     qword [rbp-0x90], rax",
    "movsxd  rcx, ebx",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x98], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x98]",
    "test    rax, rax",
    "mov     qword [rbp-0x90], rax",
    "je      0x9b249",
    "mov     rdx, qword [rbp-0x90]",
    "mov     rdi, qword [rbp-0x88]",
    "mov     rsi, r13",
    "mov     dword [rbp-0x78], ebx",
    "mov     ecx, 0x7d",
    "call    sub_99950",
    "test    eax, eax",
    "je      0x99f0f",
    "mov     rsi, rcx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  rax, r14d",
    "mov     qword [rbp-0x98], rax",
    "test    r14d, r14d",
    "jle     0x99fa8",
    "mov     rdi, qword [rbp-0x88]",
    "mov     rdx, r15",
    "mov     rsi, r13",
    "mov     dword [rbp-0x74], ebx",
    "mov     ecx, 0x7b",
    "call    sub_99950",
    "mov     r14d, dword [rbp-0x74]",
    "mov     r12d, eax",
    "lea     ebx, [r14+0x1]",
    "test    eax, eax",
    "je      0x99f5a",
    "mov     rax, qword [rbp-0x90]",
    "mov     rsi, qword [rbp-0x98]",
    "mov     edi, 0x10",
    "mov     byte [rax+rsi], 0x0",
    "call    malloc",
    "mov     r9, rax",
    "test    rax, rax",
    "je      0x9b223",
    "mov     rsi, qword [rbp-0x88]",
    "mov     rdi, qword [rbp-0x90]",
    "mov     rdx, rax",
    "call    __strncpy_chk",
    "mov     qword [rbp-0xa0], rax",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x90]",
    "mov     qword [r9+0x8], 0x0",
    "mov     qword [r9], rax",
    "cmp     r12d, 0x7b",
    "je      0x9a010",
    "mov     rdi, qword [rbp-0x88]",
    "mov     rdx, r15",
    "mov     rsi, r13",
    "mov     dword [rbp-0x74], ebx",
    "mov     ecx, 0x7d",
    "mov     qword [rbp-0xa0], r9",
    "call    sub_99950",
    "mov     r9, qword [rbp-0xa0]",
    "test    eax, eax",
    "je      0x9a610",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x9b21e",
    "mov     qword [rbp-0x98], r9",
    "mov     r14d, dword [rbp-0x74]",
    "mov     rdi, qword [rbp-0x88]",
    "mov     esi, ebx",
    "xor     r13d, r13d",
    "mov     qword [rbp-0xa0], r9",
    "lea     r12, [rbp-0x58]",
    "mov     edx, r14d",
    "mov     dword [rbp-0xbc], r14d",
    "sub     r14d, ebx",
    "call    substring",
    "mov     qword [rbp-0x58], 0x0",
    "xor     edx, edx",
    "mov     r9, qword [rbp-0xa0]",
    "mov     r15, rax",
    "movsxd  rax, r14d",
    "mov     dword [rbp-0x78], 0x0",
    "movzx   ecx, byte [r15]",
    "mov     qword [rbp-0xa8], rax",
    "mov     rsi, r15",
    "test    cl, cl",
    "je      0x9a23d",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xb8",
    "mov     rax, r9",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x90], r9",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, qword [rbp-0x88]",
    "mov     rdx, rbx",
    "mov     rdi, r12",
    "mov     qword [rbp-0x90], r9",
    "call    __strcpy_chk",
    "mov     r9, qword [rbp-0x90]",
    "mov     qword [r9], r12",
    "jmp     0x99fe8",
    "lea     rsi, [rel data_120268[1]]  {\"..\"}",
    "mov     rdi, r15",
    "mov     qword [rbp-0xa0], r9",
    "call    strstr",
    "mov     r9, qword [rbp-0xa0]",
    "test    rax, rax",
    "je      0x9b000",
    "mov     dword [rbp-0xa0], r14d",
    "mov     rbx, r9",
    "mov     r14, r15",
    "jmp     0x9a0e2",
    "movsxd  rax, dword [rbp-0xbc]",
    "jmp     0x9ab9d",
    "sub     rax, r15",
    "xor     esi, esi",
    "mov     rdi, r15",
    "mov     qword [rbp-0xa0], r9",
    "mov     edx, eax",
    "mov     rbx, rax",
    "call    substring",
    "lea     esi, [rbx+0x2]",
    "mov     edx, r14d",
    "mov     rdi, r15",
    "mov     r12, rax",
    "mov     qword [rbp-0xc8], rax",
    "call    substring",
    "cmp     byte [r12], 0x0",
    "mov     r9, qword [rbp-0xa0]",
    "mov     qword [rbp-0xb8], rax",
    "je      0x9ab70",
    "cmp     cl, 0x5c",
    "je      0x9a150",
    "mov     rbx, qword [rbp-0x88]",
    "lea     rbx, [rbx+rax+0x1]",
    "cmp     byte [rbx], 0x0",
    "je      0x9acf1",
    "mov     qword [rbp-0xa0], r9",
    "cmp     byte [rax], 0x0",
    "je      0x9ab70",
    "lea     rax, [rel locale_mb_cur_max]",
    "lea     r15d, [r13+0x1]",
    "mov     dword [rbp-0x78], r15d",
    "cmp     dword [rax], 0x1",
    "jle     0x9a210",
    "cmp     cl, 0x2c",
    "je      0x9a680",
    "mov     rdi, r15",
    "mov     qword [rbp-0x98], r9",
    "call    free",
    "jmp     0x9a617",
    "mov     edi, 0x10",
    "mov     qword [rbp-0x90], r9",
    "call    malloc",
    "mov     r9, qword [rbp-0x90]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0x9b2e7",
    "mov     rdi, qword [rbp-0xc8]",
    "lea     rsi, [rbp-0x70]",
    "mov     qword [rbp-0xd0], r9",
    "call    legal_number",
    "mov     r9, qword [rbp-0xd0]",
    "test    eax, eax",
    "mov     dword [rbp-0xa0], eax",
    "je      0x9aca3",
    "add     r13d, 0x2",
    "movsxd  rdx, r13d",
    "mov     dword [rbp-0x78], r13d",
    "lea     rsi, [r14+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "jne     0x9a0e2",
    "movsxd  rdx, r15d",
    "lea     rdi, [rel is_basic_table]",
    "lea     rsi, [r14+rdx]",
    "movzx   ecx, byte [rsi]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "jne     0x9a200",
    "lea     rax, [rbp-0x60]",
    "mov     r9, rbx",
    "mov     dword [rbp-0x60], 0x0",
    "xor     ebx, ebx",
    "mov     qword [rbp-0xb0], rax",
    "lea     rax, [rbp-0x50]",
    "mov     r15, r14",
    "xor     r12d, r12d",
    "mov     qword [rbp-0x50], 0x0",
    "mov     qword [rbp-0xc8], rax",
    "mov     qword [rbp-0xd0], r9",
    "jmp     0x9a6fb",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jg      0x9a0b0",
    "mov     rdi, qword [rbp-0x90]",
    "call    free",
    "mov     rdi, qword [rbp-0x88]",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0x98]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0x9b298",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x98]",
    "mov     r13, qword [rbp-0x88]",
    "mov     qword [rbp-0x90], r9",
    "add     r13, rax",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r9, qword [rbp-0x90]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x9b2bc",
    "mov     qword [rbp-0xd0], r9",
    "mov     r14d, 0x1",
    "call    __ctype_b_loc",
    "mov     rsi, qword [rbp-0xc8]",
    "mov     r9, qword [rbp-0xd0]",
    "mov     rdx, qword [rax]",
    "movzx   eax, byte [rsi]",
    "test    byte [rdx+rax*2+0x1], 0x4",
    "je      0x9a2fe",
    "call    __ctype_b_loc",
    "mov     r9, qword [rbp-0xd0]",
    "xor     r14d, r14d",
    "mov     dword [rbp-0xa0], 0x1",
    "mov     rdx, qword [rax]",
    "nop     word [rax+rax]",
    "lea     r13d, [r15+rax]",
    "jmp     0x9a0cc",
    "lea     rax, [rel locale_utf8locale]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0x9a1c8",
    "mov     rdx, qword [rbp-0xb0]",
    "mov     rsi, qword [rbp-0xa8]",
    "mov     ecx, 0x2c",
    "mov     rdi, r15",
    "call    sub_99950",
    "mov     r14d, dword [rbp-0x60]",
    "mov     dword [rbp-0xa0], eax",
    "mov     edx, r14d",
    "sub     edx, ebx",
    "lea     ecx, [rdx+0x1]",
    "mov     dword [rbp-0x98], edx",
    "movsxd  rcx, ecx",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x90], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x90]",
    "movsxd  rdx, dword [rbp-0x98]",
    "test    rax, rax",
    "mov     r13, rax",
    "je      0x9b1ec",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x9a108",
    "add     r13d, 0x1",
    "jmp     0x9a0cc",
    "mov     qword [rbp-0x88], rax",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r13",
    "mov     rdx, r14",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x88], r9",
    "call    __strcpy_chk",
    "mov     rsi, qword [rbp-0xa8]",
    "mov     qword [r12+0x8], 0x0",
    "mov     qword [r12], rax",
    "mov     r9, qword [rbp-0x88]",
    "mov     byte [rax+rsi+0x2], 0x0",
    "jmp     0x9a923",
    "mov     rsi, qword [rbp-0xb8]",
    "mov     qword [rbp-0x68], 0x0",
    "movzx   ecx, byte [rsi]",
    "mov     rax, rcx",
    "movzx   ecx, word [rdx+rcx*2]",
    "test    ch, 0x8",
    "jne     0x9a336",
    "movzx   eax, byte [rsi+0x1]",
    "xor     ecx, ecx",
    "test    al, al",
    "sete    cl",
    "setne   r14b",
    "lea     esi, [rcx+rcx]",
    "mov     dword [rbp-0xa0], esi",
    "jmp     0x9a2fe",
    "mov     qword [rbp-0xd0], r9",
    "call    __errno_location",
    "mov     rdi, qword [rbp-0xb8]",
    "lea     rsi, [rbp-0x68]",
    "mov     edx, 0xa",
    "mov     dword [rax], 0x0",
    "mov     r12, rax",
    "call    __isoc23_strtol",
    "cmp     dword [r12], 0x22",
    "mov     r9, qword [rbp-0xd0]",
    "mov     qword [rbp-0xb0], rax",
    "je      0x9add9",
    "sub     eax, 0x2b",
    "test    al, 0xfd",
    "jne     0x9adb9",
    "movsxd  rdx, r13d",
    "mov     dword [rbp-0x78], r13d",
    "lea     rsi, [r14+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x9a230",
    "mov     rax, qword [rbp-0x58]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x58]",
    "mov     qword [rbp-0xb8], rax",
    "mov     rax, qword [rbp-0xa8]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0x9ac8f",
    "test    cl, cl",
    "js      0x9a1c8",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "mov     qword [rbp-0x88], rcx",
    "call    dcgettext",
    "mov     rdx, qword [rbp-0x88]",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "movsxd  rsi, ebx",
    "mov     rdi, rax",
    "mov     qword [rbp-0x90], rdx",
    "add     rsi, r15",
    "call    __memcpy_chk",
    "mov     rdx, qword [rbp-0x90]",
    "mov     rdi, r13",
    "mov     byte [r13+rdx], 0x0",
    "call    brace_expand",
    "mov     rcx, rax",
    "test    r12, r12",
    "jne     0x9a7b0",
    "lea     rax, [rel locale_utf8locale]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "je      0x9a120",
    "add     r13d, eax",
    "mov     rdi, qword [r9]",
    "test    rdi, rdi",
    "je      0x9a990",
    "mov     eax, dword [rbp-0xa0]",
    "test    eax, eax",
    "jne     0x9ab70",
    "mov     r13, qword [rbp-0x68]",
    "test    r13, r13",
    "je      0x9b0b5",
    "and     ch, 0x4",
    "je      0x9add9",
    "movzx   eax, byte [rsi+0x1]",
    "test    byte [rdx+rax*2+0x1], 0x8",
    "je      0x9adb9",
    "mov     r15, r14",
    "mov     r14d, dword [rbp-0xa0]",
    "mov     r9, rbx",
    "mov     rax, qword [rbp-0xb8]",
    "add     r13d, 0x2",
    "mov     qword [rbp-0x58], rax",
    "jmp     0x9a0cc",
    "test    rax, rax",
    "je      0x9a1a5",
    "mov     eax, 0x1",
    "jne     0x9a200",
    "cmp     qword [r12], 0x0",
    "je      0x9adb1",
    "mov     r12, rax",
    "mov     rax, qword [rbp-0xa8]",
    "xor     edi, edi",
    "mov     rcx, r12",
    "mov     r15, qword [rbp-0x58]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x9a1b0",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x9a0c9",
    "mov     rdi, r9",
    "mov     rsi, r12",
    "call    sub_92f20",
    "mov     rdi, r15",
    "mov     qword [rbp-0x88], rax",
    "call    free",
    "mov     r9, qword [rbp-0x88]",
    "cmp     r9, r12",
    "je      0x9a960",
    "cmp     byte [rdi], 0x0",
    "jne     0x9a990",
    "test    r14b, r14b",
    "jne     0x9ab70",
    "mov     dword [r12], 0x0",
    "mov     ecx, 0x1",
    "movzx   edx, byte [0x0]",
    "jmp     0x9a3b2",
    "movzx   eax, byte [r13]",
    "cmp     al, 0x2e",
    "je      0x9a397",
    "mov     rax, qword [rbp-0xb8]",
    "movzx   eax, byte [rax+0x1]",
    "test    al, al",
    "je      0x9b086",
    "add     r13d, 0x2",
    "jmp     0x9a0cc",
    "nop     word [rax+rax]",
    "xor     r9d, r9d",
    "jmp     0x9a7cf",
    "mov     eax, 0x1",
    "movsxd  rdx, r14d",
    "lea     rdi, [rel is_basic_table]",
    "lea     rsi, [r15+rdx]",
    "movzx   ecx, byte [rsi]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     ebx, dword [rdi+rax*4]",
    "shr     ebx, cl",
    "and     ebx, 0x1",
    "je      0x9a890",
    "lea     ebx, [r14+0x1]",
    "jmp     0x9a6ea",
    "test    rax, rax",
    "jne     0x9a0c9",
    "mov     qword [rbp-0x58], r15",
    "add     r13d, 0x1",
    "jmp     0x9a0cc",
    "mov     r9, r12",
    "mov     rdi, qword [r12]",
    "lea     r13, [r12+0x8]",
    "mov     r14, r9",
    "test    rdi, rdi",
    "je      0x9a9e5",
    "cmp     qword [r9+0x8], 0x0",
    "jne     0x9a990",
    "mov     rax, qword [rbp-0xa8]",
    "mov     r10d, 0x1",
    "mov     rax, qword [rbp-0xa8]",
    "mov     r10d, 0x1",
    "test    dl, dl",
    "je      0x9a3c5",
    "mov     ecx, 0x1",
    "test    al, al",
    "jne     0x9add9",
    "mov     rax, qword [rbp-0xb8]",
    "mov     qword [rbp-0xd0], r9",
    "lea     r13, [rax+0x1]",
    "mov     qword [rbp-0x68], r13",
    "call    __errno_location",
    "mov     r9, qword [rbp-0xd0]",
    "mov     ecx, 0x2",
    "mov     r12, rax",
    "jmp     0x9a39c",
    "cmp     al, 0x2e",
    "je      0x9b086",
    "cmp     qword [rcx], 0x0",
    "je      0x9ac50",
    "mov     r9, rax",
    "add     rax, 0x1",
    "cmp     qword [r12+rax*8-0x8], 0x0",
    "jne     0x9a7c0",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x9a8b8",
    "add     ebx, r14d",
    "mov     edx, dword [rbp-0xa0]",
    "mov     dword [rbp-0x60], ebx",
    "test    edx, edx",
    "je      0x9a900",
    "add     r13d, 0x1",
    "jmp     0x9a0cc",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x88], r9",
    "call    brace_expand",
    "mov     r9, qword [rbp-0x88]",
    "mov     r12, rax",
    "jmp     0x9aa26",
    "mov     rdi, r12",
    "mov     qword [rbp-0x88], r9",
    "call    free",
    "cmp     byte [rbx], 0x0",
    "mov     r9, qword [rbp-0x88]",
    "je      0x99fe8",
    "nop     word [rax+rax]",
    "lea     r13, [r9+0x8]",
    "mov     r14, r9",
    "mov     dword [rbp-0xd0], 0x0",
    "mov     dword [rbp-0xa0], 0x1",
    "mov     rsi, qword [rbp-0xc8]",
    "movzx   edx, byte [rsi]",
    "cmp     dl, 0x30",
    "je      0x9b071",
    "cmp     dword [rbp-0xa0], ecx",
    "jne     0x9ab70",
    "xor     ecx, ecx",
    "cmp     byte [r13+0x1], 0x2e",
    "je      0x9b132",
    "mov     dword [r12], 0x0",
    "movzx   edx, byte [r13]",
    "cmp     dl, 0x2e",
    "je      0x9b104",
    "lea     esi, [r9+0x1]",
    "mov     rdi, r12",
    "mov     qword [rbp-0x90], rcx",
    "movsxd  rsi, esi",
    "mov     dword [rbp-0x98], r9d",
    "shl     rsi, 0x3",
    "call    realloc",
    "mov     rcx, qword [rbp-0x90]",
    "test    rax, rax",
    "mov     rdx, rax",
    "je      0x9aed2",
    "lea     rdx, [rcx+0x8]",
    "xor     eax, eax",
    "nop     ",
    "mov     rax, qword [rbp-0xa8]",
    "mov     rcx, qword [rbp-0xc8]",
    "xor     edi, edi",
    "mov     r13, qword [rbp-0x50]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "mov     rbx, rax",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x9a8f0",
    "test    cl, cl",
    "js      0x9a8b8",
    "mov     r9, qword [rbp-0xd0]",
    "test    r12, r12",
    "je      0x9af92",
    "test    r12, r12",
    "je      0x99fe8",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x88], r9",
    "call    brace_expand",
    "mov     r9, qword [rbp-0x88]",
    "mov     r12, rax",
    "test    r9, r9",
    "je      0x9b069",
    "call    free",
    "mov     rdi, qword [r13]",
    "add     r13, 0x8",
    "test    rdi, rdi",
    "jne     0x9a9d0",
    "mov     r9, r14",
    "call    free",
    "mov     rdi, qword [r13]",
    "add     r13, 0x8",
    "test    rdi, rdi",
    "jne     0x9a93e",
    "mov     rdi, r14",
    "call    free",
    "mov     rdi, r15",
    "call    free",
    "mov     rsi, qword [rbp-0xb8]",
    "movzx   edx, byte [rsi]",
    "mov     esi, dword [rbp-0xd0]",
    "cmp     eax, esi",
    "setg    cl",
    "cmp     dl, 0x30",
    "jne     0x9ae71",
    "cmp     dword [rbp-0xa0], 0x3",
    "sete    dl",
    "jmp     0x9aea2",
    "mov     dword [rbp-0xd0], ebx",
    "mov     dword [rbp-0xa0], 0x3",
    "jmp     0x9ae4a",
    "cmp     ebx, 0x2",
    "je      0x9ae36",
    "test    r14b, r14b",
    "jne     0x9ab70",
    "cmp     byte [r13+0x2], 0x0",
    "je      0x9b10b",
    "mov     rax, qword [rbp-0xa8]",
    "mov     r10d, 0x1",
    "jmp     0x9a3c3",
    "mov     r9, qword [rbp-0xd0]",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "mov     rbx, rcx",
    "lea     rsi, [rel data_133890]  {\"brace expansion: cannot allocate\u2026\"}",
    "mov     qword [rbp-0x90], r9",
    "call    dcgettext",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "mov     rdi, r13",
    "lea     r13, [rbx+0x8]",
    "call    free",
    "mov     rdi, qword [rbx]",
    "mov     r9, qword [rbp-0x90]",
    "test    rdi, rdi",
    "je      0x9af3d",
    "mov     ebx, dword [rbp-0x98]",
    "jmp     0x9a861",
    "add     rdx, 0x8",
    "mov     r8d, eax",
    "add     eax, 0x1",
    "cmp     qword [rdx-0x8], 0x0",
    "jne     0x9a7e0",
    "lea     ebx, [rax+r9]",
    "mov     rdi, r12",
    "mov     dword [rbp-0xb8], r8d",
    "lea     esi, [rbx+0x1]",
    "mov     qword [rbp-0x98], rcx",
    "movsxd  rsi, esi",
    "mov     dword [rbp-0x90], r9d",
    "shl     rsi, 0x3",
    "call    realloc",
    "movsxd  r9, dword [rbp-0x90]",
    "mov     rcx, qword [rbp-0x98]",
    "test    rax, rax",
    "mov     r8d, dword [rbp-0xb8]",
    "mov     rdx, rax",
    "je      0x9aed2",
    "test    rax, rax",
    "je      0x9a7a7",
    "mov     qword [rbp-0x50], r13",
    "lea     ebx, [r14+0x1]",
    "jmp     0x9a6ea",
    "mov     ebx, 0x1",
    "jne     0x9a6e7",
    "mov     rdi, r15",
    "mov     qword [rbp-0x90], r9",
    "call    free",
    "movsxd  rax, dword [rbp-0xbc]",
    "mov     rbx, qword [rbp-0x88]",
    "mov     r9, qword [rbp-0x90]",
    "lea     rbx, [rbx+rax+0x1]",
    "jmp     0x9a963",
    "movsxd  rax, dword [rbp-0xbc]",
    "mov     rbx, qword [rbp-0x88]",
    "lea     rbx, [rbx+rax+0x1]",
    "mov     rdi, qword [r9]",
    "test    rdi, rdi",
    "je      0x9aa47",
    "mov     r9, rax",
    "jmp     0x99fe8",
    "cmp     eax, 0x2",
    "je      0x9ae7f",
    "test    cl, cl",
    "jne     0x9b0e8",
    "mov     ebx, dword [rbp-0xd0]",
    "cmp     eax, ebx",
    "jle     0x9a40d",
    "cmp     eax, 0x1",
    "jle     0x9ae7f",
    "mov     dword [rbp-0xd0], 0x0",
    "mov     dword [rbp-0xa0], 0x1",
    "cmp     dl, 0x2d",
    "jne     0x9ae36",
    "cmp     dword [rbp-0xa0], 0x2",
    "jne     0x9adfd",
    "lea     rsi, [rbp-0x68]",
    "lea     rdi, [r13+0x2]",
    "mov     edx, 0xa",
    "mov     qword [rbp-0xd8], r9",
    "mov     dword [rbp-0xd0], ecx",
    "call    __isoc23_strtol",
    "mov     ecx, dword [rbp-0xd0]",
    "mov     r9, qword [rbp-0xd8]",
    "mov     r10, rax",
    "mov     rax, qword [rbp-0x68]",
    "cmp     byte [rax], 0x0",
    "jne     0x9b264",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x90], r9",
    "lea     rbx, [r12+0x8]",
    "call    free",
    "mov     rdi, qword [r12]",
    "mov     r9, qword [rbp-0x90]",
    "test    rdi, rdi",
    "je      0x9af7c",
    "mov     r14, r9",
    "nop     dword [rax]",
    "movsxd  rax, ebx",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x90], rdx",
    "mov     qword [rdx+rax*8], 0x0",
    "call    free",
    "mov     r12, qword [rbp-0x90]",
    "jmp     0x9a78f",
    "add     r8d, 0x1",
    "lea     rdi, [rax+r9*8]",
    "xor     eax, eax",
    "movsxd  r8, r8d",
    "shl     r8, 0x3",
    "nop     ",
    "jmp     0x9a6e7",
    "lea     ebx, [r14+0x1]",
    "jmp     0x9a6ea",
    "cmp     byte [rbx], 0x0",
    "je      0x99fe8",
    "mov     rdi, r9",
    "mov     rsi, r12",
    "call    sub_92f20",
    "mov     r9, rax",
    "cmp     rax, r12",
    "je      0x99fe8",
    "cmp     byte [rdi], 0x0",
    "jne     0x9aa47",
    "mov     esi, dword [rbp-0xd0]",
    "cmp     dword [rbp-0xa0], 0x3",
    "sete    dl",
    "cmp     ebx, esi",
    "setg    cl",
    "and     cl, dl",
    "cmove   ebx, esi",
    "cmovne  edx, ecx",
    "mov     dword [rbp-0xd0], ebx",
    "cmp     dl, 0x2d",
    "je      0x9b0cf",
    "mov     dword [rbp-0xa0], 0x3",
    "mov     edx, ebx",
    "cmp     eax, ebx",
    "cmovge  edx, eax",
    "mov     dword [rbp-0xd0], edx",
    "jmp     0x9a40d",
    "test    r10, r10",
    "je      0x9afc0",
    "test    dl, dl",
    "cmove   eax, ebx",
    "mov     dword [rbp-0xd0], eax",
    "mov     eax, 0x3",
    "cmove   eax, dword [rbp-0xa0]",
    "mov     dword [rbp-0xa0], eax",
    "jmp     0x9a40d",
    "cmp     byte [rsi+0x1], 0x30",
    "je      0x9b11d",
    "sub     eax, ebx",
    "mov     r13, qword [rbp-0x70]",
    "sub     eax, 0x2",
    "cmp     ebx, 0x1",
    "jle     0x9b00c",
    "mov     rax, qword [rbp-0xc8]",
    "mov     dword [rbp-0xd0], 0x1",
    "movzx   r13d, byte [rax]",
    "mov     rax, qword [rbp-0xb8]",
    "movzx   eax, byte [rax]",
    "mov     qword [rbp-0xb0], rax",
    "sub     rax, r13",
    "mov     rdx, rax",
    "mov     rax, qword [rbp-0xa8]",
    "sub     rax, rdx",
    "jmp     0x9a3c3",
    "sub     rax, r13",
    "mov     rdx, rax",
    "mov     rax, qword [rbp-0xa8]",
    "sub     rax, rdx",
    "cmp     dword [r12], 0x22",
    "je      0x9a3c3",
    "mov     rdi, r12",
    "mov     qword [rbp-0x90], r9",
    "call    free",
    "mov     r9, qword [rbp-0x90]",
    "mov     r13, r9",
    "nop     dword [rax]",
    "call    free",
    "mov     rdi, qword [r13]",
    "add     r13, 0x8",
    "test    rdi, rdi",
    "jne     0x9af28",
    "mov     r9, r14",
    "mov     rdi, r13",
    "call    free",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jg      0x9a6c0",
    "mov     rsi, qword [rcx+rax]",
    "mov     qword [rdi+rax], rsi",
    "add     rax, 0x8",
    "cmp     rax, r8",
    "jne     0x9a850",
    "mov     rdi, qword [r12]",
    "lea     rbx, [r12+0x8]",
    "mov     r13, rax",
    "test    rdi, rdi",
    "je      0x9aa84",
    "cmp     qword [r9+0x8], 0x0",
    "je      0x9b198",
    "mov     rsi, qword [rbp-0xb8]",
    "cmp     byte [rsi+0x1], 0x30",
    "jne     0x9ae7f",
    "mov     rax, qword [rbp-0xb0]",
    "xor     r10d, r10d",
    "cmp     r13, rax",
    "setle   r10b",
    "lea     r10, [r10+r10-0x1]",
    "jmp     0x9a42f",
    "jle     0x9b038",
    "mov     dword [rbp-0xd0], ebx",
    "mov     dword [rbp-0xa0], 0x3",
    "jmp     0x9b020",
    "jmp     0x9a3c5",
    "call    free",
    "mov     rdi, qword [rbx]",
    "add     rbx, 0x8",
    "test    rdi, rdi",
    "jne     0x9af68",
    "mov     r9, r13",
    "mov     rdi, r12",
    "mov     qword [rbp-0x88], r9",
    "call    free",
    "mov     r9, qword [rbp-0x88]",
    "jmp     0x99fe8",
    "nop     ",
    "lea     rbx, [r9+0x8]",
    "mov     r13, r9",
    "test    cl, cl",
    "je      0x9ae7f",
    "test    r13, r13",
    "jle     0x9afdb",
    "mov     rax, qword [rbp-0xb0]",
    "cmp     r13, rax",
    "jge     0x9a42f",
    "mov     rax, qword [rbp-0xb0]",
    "cmp     r13, rax",
    "jle     0x9b038",
    "cmp     eax, 0x1",
    "jg      0x9ae4f",
    "call    free",
    "mov     rdi, qword [rbx]",
    "add     rbx, 0x8",
    "test    rdi, rdi",
    "jne     0x9aa70",
    "mov     r9, r13",
    "call    free",
    "mov     rdi, qword [rbx]",
    "add     rbx, 0x8",
    "test    rdi, rdi",
    "jne     0x9b19f",
    "mov     rdi, r13",
    "call    free",
    "mov     r9, r12",
    "jmp     0x99fe8",
    "je      0x9a452",
    "mov     rax, 0x8000000000000003",
    "add     rax, r13",
    "cmp     qword [rbp-0xb0], rax",
    "jl      0x9ab70",
    "test    r10, r10",
    "jns     0x9a42f",
    "neg     r10",
    "mov     rdx, qword [rbp-0xb0]",
    "mov     rcx, r10",
    "sub     rdx, r13",
    "mov     rax, rdx",
    "neg     rax",
    "cmovs   rax, rdx",
    "neg     rcx",
    "cmovs   rcx, r10",
    "cqo     ",
    "idiv    rcx",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x9a49d",
    "mov     rax, 0x7ffffffffffffffd",
    "add     rax, r13",
    "cmp     qword [rbp-0xb0], rax",
    "jle     0x9a452",
    "mov     rax, 0x8000000000000000",
    "cmp     r10, rax",
    "jne     0x9a42c",
    "lea     edi, [rbx+0x2]",
    "mov     qword [rbp-0xe0], r9",
    "shl     rdi, 0x3",
    "mov     qword [rbp-0xd8], r10",
    "call    malloc",
    "mov     r10, qword [rbp-0xd8]",
    "mov     r9, qword [rbp-0xe0]",
    "test    rax, rax",
    "je      0x9b1c0",
    "mov     rax, 0x7fffffffffffffff",
    "cmp     rbx, rax",
    "je      0x9ab70",
    "jmp     0x9ab70",
    "jmp     0x9ab70",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133818]  {\"brace expansion: failed to alloc\u2026\"}",
    "mov     qword [rbp-0xa0], r9",
    "call    dcgettext",
    "lea     esi, [rbx+0x1]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "jmp     0x9ab77",
    "mov     qword [rbp-0xd8], r15",
    "xor     ebx, ebx",
    "mov     r12, r10",
    "mov     qword [rbp-0xe0], r9",
    "mov     r14d, ebx",
    "mov     rbx, rax",
    "nop     word [rax+rax]",
    "cmp     rbx, 0x7ffffffc",
    "jg      0x9ab70",
    "mov     rdi, qword [rbp-0xc8]",
    "call    free",
    "mov     rdi, qword [rbp-0xb8]",
    "call    free",
    "movsxd  rax, dword [rbp-0xbc]",
    "mov     r9, qword [rbp-0xa0]",
    "movsxd  rax, r14d",
    "mov     qword [rbx+rax*8], 0x0",
    "test    rbx, rbx",
    "je      0x9ad99",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x9ad40",
    "xor     ebx, ebx",
    "jmp     0x9a501",
    "mov     rdi, qword [rbx]",
    "lea     r15, [rbx+0x8]",
    "test    rdi, rdi",
    "je      0x9ad91",
    "lea     rax, [rel terminating_signal]",
    "mov     r9d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r9d, r9d",
    "jne     0x9a512",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x9ad30",
    "mov     rdi, rbx",
    "call    free",
    "nop     dword [rax]",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0x9a523",
    "movsxd  rax, r14d",
    "add     r14d, 0x1",
    "cmp     dword [rbp-0xa0], 0x1",
    "lea     r15, [rbx+rax*8]",
    "je      0x9ada0",
    "call    free",
    "mov     rdi, qword [r15]",
    "add     r15, 0x8",
    "test    rdi, rdi",
    "jne     0x9ad80",
    "mov     rdi, r13",
    "call    itos",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x9aac4",
    "cmp     dword [rbp-0xa0], 0x3",
    "je      0x9aaa0",
    "mov     qword [r15], rax",
    "test    rax, rax",
    "jne     0x9a569",
    "mov     ecx, dword [rbp-0xd0]",
    "lea     rdi, [rbp-0x60]",
    "mov     r8d, r13d",
    "xor     eax, eax",
    "lea     rdx, [rel data_120b90]  {\"%0*d\"}",
    "mov     esi, 0x2",
    "call    __asprintf_chk",
    "mov     rax, qword [rbp-0x60]",
    "mov     edi, 0x2",
    "call    malloc",
    "mov     qword [rbp-0x60], rax",
    "test    rax, rax",
    "je      0x9b279",
    "test    r13, r13",
    "jle     0x9ad08",
    "mov     r15, qword [rbp-0xd8]",
    "mov     r9, qword [rbp-0xe0]",
    "mov     r12, rbx",
    "mov     r14, r15",
    "xor     r8d, r8d",
    "mov     r15, qword [rbp-0xd8]",
    "mov     r12, rbx",
    "mov     qword [r14], r8",
    "mov     r9, qword [rbp-0xe0]",
    "jmp     0x9aae1",
    "mov     byte [rax], r13b",
    "mov     byte [rax+0x1], 0x0",
    "mov     qword [r15], rax",
    "je      0x9a584",
    "mov     rax, 0x7fffffffffffffff",
    "sub     rax, r13",
    "cmp     r12, rax",
    "jg      0x9a5ab",
    "mov     rdi, qword [r12]",
    "lea     rbx, [r12+0x8]",
    "mov     r13, r9",
    "test    rdi, rdi",
    "je      0x9ab55",
    "xor     r8d, r8d",
    "mov     ecx, 0x16",
    "lea     rdx, [rbp-0x50]",
    "mov     rdi, r13",
    "mov     esi, 0xa",
    "mov     qword [rbp-0xa0], r9",
    "call    fmtulong",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133858]  {\"brace expansion: failed to alloc\u2026\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "test    r12, r12",
    "mov     r9, qword [rbp-0xa0]",
    "je      0x9ab70",
    "add     r13, r12",
    "test    r12, r12",
    "jns     0x9a595",
    "mov     rax, 0x8000000000000000",
    "sub     rax, r13",
    "cmp     r12, rax",
    "jge     0x9a584",
    "mov     r12, rbx",
    "movsxd  rbx, r14d",
    "mov     r9, qword [rbp-0xe0]",
    "mov     rdi, qword [rbp-0xc8]",
    "mov     qword [r12+rbx*8], 0x0",
    "mov     r15, qword [rbp-0xd8]",
    "mov     qword [rbp-0xa0], r9",
    "call    free",
    "mov     rdi, qword [rbp-0xb8]",
    "call    free",
    "movsxd  rax, dword [rbp-0xbc]",
    "test    r12, r12",
    "mov     rbx, qword [rbp-0x88]",
    "mov     r9, qword [rbp-0xa0]",
    "lea     rbx, [rbx+rax+0x1]",
    "jne     0x9a923",
    "mov     rdi, r12",
    "mov     qword [rbp-0xa0], r9",
    "call    free",
    "mov     r9, qword [rbp-0xa0]",
    "nop     dword [rax+rax]",
    "call    free",
    "mov     rdi, qword [rbx]",
    "add     rbx, 0x8",
    "test    rdi, rdi",
    "jne     0x9ab41",
    "test    r12, r12",
    "jle     0x9a4f0",
    "cmp     qword [rbp-0xb0], r13",
    "jg      0x9a5ab",
    "jmp     0x9a5ab",
    "jmp     0x9ab9d",
    "mov     r9, r13",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x9ad60",
    "cmp     qword [rbp-0xb0], r13",
    "jge     0x9a4f0"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
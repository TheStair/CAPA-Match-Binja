{
  "address": "0xe15e0",
  "rules": [
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "encrypt data using Curve25519/7d070d905d0942e295bbb2c9df72fc86",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "encrypt data using Curve25519/a423aa5d0923438c8eac88d5abe4fcd5",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14d, edx",
    "push    r13",
    "mov     r13, rsi",
    "push    r12",
    "push    rbx",
    "mov     ebx, edi",
    "sub     rsp, 0x28",
    "lea     rdx, [rel rl_readline_state]",
    "test    qword [rdx], 0x1000",
    "jne     0xe1870",
    "lea     rax, [rel _rl_convert_meta_chars_to_ascii]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "jne     0xe1790",
    "mov     edi, ebx",
    "call    _rl_add_macro_char",
    "lea     rdx, [rel rl_readline_state]",
    "jmp     0xe162c",
    "movsxd  r12, ebx",
    "shl     r12, 0x4",
    "add     r12, r13",
    "movzx   eax, byte [r12]",
    "cmp     al, 0x1",
    "je      0xe1890",
    "cmp     byte [r13+0x1b0], 0x1",
    "jne     0xe19a0",
    "cmp     qword [r12+0x8], 0x0",
    "je      0xe1f06",
    "cmp     al, 0x2",
    "je      0xe1808",
    "call    rl_ding",
    "lea     rax, [rel rl_readline_state]",
    "mov     rax, qword [rax]",
    "test    ah, 0x10",
    "jne     0xe1d28",
    "call    _rl_abort_internal",
    "{ Does not return }",
    "lea     rax, [rel rl_editing_mode]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xe18b2",
    "xor     r15d, r15d",
    "cmp     qword [r12+0x8], 0x0",
    "je      0xe1750",
    "test    al, al",
    "jne     0xe1888",
    "add     rsp, 0x28",
    "mov     eax, r15d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     edi, 0x1b",
    "call    _rl_add_macro_char",
    "jmp     0xe17b1",
    "lea     rcx, [rel rl_key_sequence_length]",
    "lea     rdx, [rel _rl_executing_keyseq_size]",
    "lea     r8, [rel rl_executing_keyseq]",
    "movsxd  rax, dword [rcx]",
    "mov     r12d, dword [rdx]",
    "mov     r14, qword [r8]",
    "lea     esi, [rax+0x2]",
    "cmp     esi, r12d",
    "jge     0xe1ce0",
    "lea     rcx, [rel rl_key_sequence_length]",
    "lea     rsi, [rel _rl_executing_keyseq_size]",
    "lea     r8, [rel rl_executing_keyseq]",
    "movsxd  rax, dword [rcx]",
    "mov     r15d, dword [rsi]",
    "mov     r9, qword [r8]",
    "lea     edi, [rax+0x2]",
    "cmp     edi, r15d",
    "jge     0xe1a68",
    "cmp     ebx, 0x1b",
    "je      0xe1b88",
    "lea     rax, [rel rl_editing_mode]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xe177c",
    "lea     rax, [rel rl_key_sequence_length]",
    "lea     rdx, [rel rl_executing_keyseq]",
    "movsxd  rax, dword [rax]",
    "mov     rdx, qword [rdx]",
    "mov     byte [rdx+rax], 0x0",
    "mov     r13, qword [r12+0x8]",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xe1fb6",
    "xor     r15d, r15d",
    "jmp     0xe1750",
    "mov     r15, qword [r12+0x8]",
    "test    r15, r15",
    "je      0xe1ab8",
    "add     r12d, 0x10",
    "mov     qword [rbp-0x40], rcx",
    "mov     dword [rdx], r12d",
    "movsxd  r12, r12d",
    "mov     qword [rbp-0x38], r8",
    "test    r14, r14",
    "je      0xe1e90",
    "lea     edx, [rax+0x1]",
    "and     bl, 0x7f",
    "mov     dword [rcx], edx",
    "mov     byte [r14+rax], 0x1b",
    "mov     r13, qword [r13+0x1b8]",
    "add     r15d, 0x10",
    "mov     qword [rbp-0x40], rcx",
    "mov     dword [rsi], r15d",
    "movsxd  r15, r15d",
    "mov     qword [rbp-0x38], r8",
    "test    r9, r9",
    "je      0xe1e58",
    "lea     esi, [rax+0x1]",
    "mov     dword [rcx], esi",
    "mov     byte [r9+rax], bl",
    "lea     rax, [rel _rl_vi_redoing]",
    "mov     r9, qword [r12+0x8]",
    "lea     r12, [rel _rl_dispatching_keymap]",
    "mov     edi, dword [rax]",
    "mov     rsi, qword [rdx]",
    "mov     qword [r12], r9",
    "test    edi, edi",
    "jne     0xe19b0",
    "cmp     r13, qword [rel data_157fe8]",
    "jne     0xe18b2",
    "lea     rdx, [rel _rl_keymap]",
    "lea     rax, [rel vi_movement_keymap]",
    "cmp     qword [rdx], rax",
    "jne     0xe177c",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, r12",
    "mov     rdx, rbx",
    "mov     rsi, r13",
    "call    __strcpy_chk",
    "mov     rdi, r12",
    "call    _rl_with_macro_input",
    "jmp     0xe19a5",
    "cmp     qword [r13+0x1008], 0x0",
    "mov     rax, qword [rdx]",
    "je      0xe1c50",
    "cmp     r15, qword [rel data_157f28]",
    "je      0xe1e28",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rcx, qword [rbp-0x40]",
    "mov     r8, qword [rbp-0x38]",
    "mov     r14, rax",
    "jmp     0xe1d11",
    "mov     rdi, r14",
    "mov     rsi, r12",
    "call    realloc",
    "mov     r8, qword [rbp-0x38]",
    "mov     rcx, qword [rbp-0x40]",
    "mov     r14, rax",
    "lea     eax, [rbx-0x80]",
    "cmp     eax, 0x7f",
    "ja      0xe1618",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rcx, qword [rbp-0x40]",
    "lea     rdx, [rel rl_readline_state]",
    "mov     r8, qword [rbp-0x38]",
    "mov     r9, rax",
    "jmp     0xe1aa0",
    "mov     rdi, r9",
    "mov     rsi, r15",
    "call    realloc",
    "mov     r8, qword [rbp-0x38]",
    "lea     rdx, [rel rl_readline_state]",
    "mov     rcx, qword [rbp-0x40]",
    "mov     r9, rax",
    "test    esi, 0x80000",
    "je      0xe1915",
    "test    esi, 0x80000",
    "jne     0xe19ca",
    "test    qword [rdx], 0x20800",
    "je      0xe1f17",
    "test    ebx, 0xfffffeff",
    "jne     0xe1b20",
    "xor     r15d, r15d",
    "jmp     0xe177c",
    "test    r14d, r14d",
    "je      0xe1ecf",
    "test    ah, 0x8",
    "je      0xe1e80",
    "call    __ctype_b_loc",
    "movzx   r12d, bl",
    "movzx   ebx, bl",
    "mov     rax, qword [rax]",
    "test    byte [rax+r12*2+0x1], 0x1",
    "je      0xe17ef",
    "lea     rax, [rel rl_executing_keymap]",
    "lea     rcx, [rel rl_key_sequence_length]",
    "lea     rsi, [rel _rl_executing_keyseq_size]",
    "lea     r8, [rel rl_executing_keyseq]",
    "mov     qword [rax], r13",
    "lea     rax, [rel rl_executing_key]",
    "mov     r13d, dword [rsi]",
    "mov     r14, qword [r8]",
    "mov     dword [rax], ebx",
    "lea     rax, [rel _rl_executing_func]",
    "mov     qword [rax], r15",
    "movsxd  rax, dword [rcx]",
    "lea     edi, [rax+0x2]",
    "cmp     edi, r13d",
    "jge     0xe1d68",
    "test    r14, r14",
    "je      0xe1ffa",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], rcx",
    "mov     qword [rbp-0x38], r8",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r8], r14",
    "movsxd  rax, dword [rcx]",
    "jmp     0xe17db",
    "test    r9, r9",
    "je      0xe1f81",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x48], rcx",
    "mov     qword [rbp-0x40], r8",
    "mov     qword [rbp-0x38], r9",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r8], r9",
    "movsxd  rax, dword [rcx]",
    "jmp     0xe18dc",
    "lea     rax, [rel _rl_keyseq_timeout]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jle     0xe192e",
    "cmp     qword [r13+0x1008], 0x0",
    "jne     0xe1cc8",
    "mov     rax, rsi",
    "mov     edi, 0x30",
    "mov     qword [rbp-0x40], r9",
    "and     eax, 0x200000",
    "mov     qword [rbp-0x38], rsi",
    "neg     rax",
    "sbb     r15d, r15d",
    "call    malloc",
    "and     r15d, 0xfffffffd",
    "mov     rsi, qword [rbp-0x38]",
    "mov     r9, qword [rbp-0x40]",
    "test    rax, rax",
    "lea     rdx, [rel rl_readline_state]",
    "mov     rcx, rax",
    "je      0xe1fcc",
    "mov     ecx, dword [rel data_16a508]",
    "cmp     dword [rel data_16a50c], ecx",
    "jne     0xe1ba2",
    "mov     rax, qword [rdx]",
    "test    eax, 0x20000",
    "jne     0xe18b2",
    "lea     rdx, [rel _rl_dispatching_keymap]",
    "cmp     qword [rdx], rax",
    "jne     0xe177c",
    "lea     r12, [rel _rl_kscxt]",
    "and     rax, 0xffffffffffdfffff",
    "mov     qword [rdx], rax",
    "mov     rdi, qword [r12]",
    "test    rdi, rdi",
    "je      0xe1f06",
    "test    ah, 0x8",
    "je      0xe1f0b",
    "mov     edi, ebx",
    "call    _rl_unget_char",
    "jmp     0xe1af2",
    "lea     rax, [rel rl_executing_macro]",
    "cmp     qword [rax], 0x0",
    "je      0xe1af2",
    "lea     rax, [rel _rl_dispatching_keymap]",
    "xor     r14d, r14d",
    "mov     qword [rax], r13",
    "jmp     0xe15fd",
    "call    __ctype_tolower_loc",
    "mov     rax, qword [rax]",
    "mov     ebx, dword [rax+r12*4]",
    "jmp     0xe17ef",
    "add     r13d, 0x10",
    "mov     qword [rbp-0x40], rcx",
    "mov     dword [rsi], r13d",
    "movsxd  r13, r13d",
    "mov     qword [rbp-0x38], r8",
    "test    r14, r14",
    "je      0xe1eb0",
    "lea     esi, [rax+0x1]",
    "lea     r13, [rel rl_dispatching]",
    "mov     dword [rcx], esi",
    "mov     esi, ebx",
    "mov     byte [r14+rax], bl",
    "movsxd  rax, dword [rcx]",
    "mov     rcx, qword [r8]",
    "mov     byte [rcx+rax], 0x0",
    "lea     rax, [rel rl_numeric_arg]",
    "or      qword [rdx], 0x20",
    "mov     edi, dword [rax]",
    "lea     rax, [rel rl_arg_sign]",
    "mov     dword [r13], 0x1",
    "imul    edi, dword [rax]",
    "call    r15",
    "lea     rdx, [rel rl_readline_state]",
    "mov     dword [r13], 0x0",
    "mov     r15d, eax",
    "lea     rax, [rel rl_pending_input]",
    "and     qword [rdx], 0xffffffffffffffdf",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "jne     0xe1739",
    "cmp     ebx, 0x1b",
    "je      0xe1d40",
    "test    esi, 0x20800",
    "je      0xe1db8",
    "mov     ecx, r14d",
    "mov     edx, ebx",
    "mov     rsi, r13",
    "mov     edi, 0xfffffffe",
    "jmp     0xe1988",
    "mov     qword [rbp-0x38], rax",
    "mov     esi, 0x30",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     r12, [rel _rl_kscxt]",
    "mov     dword [rcx+0x8], 0x0",
    "mov     qword [rcx], 0x0",
    "mov     rax, qword [r12]",
    "mov     dword [rcx+0x28], 0x2a",
    "mov     qword [rcx+0x20], rax",
    "test    r14d, r14d",
    "jne     0xe1c30",
    "lea     rcx, [rel _rl_keyseq_timeout]",
    "mov     r15d, dword [rel data_160314]",
    "mov     esi, dword [rcx]",
    "test    esi, esi",
    "jle     0xe1f43",
    "test    ah, 0x8",
    "je      0xe18b2",
    "mov     esi, ebx",
    "lea     rdi, [rel data_122096]  {\"_*\\AaIiCcDdPpYyRrSsXx~\"}",
    "call    strchr",
    "test    rax, rax",
    "je      0xe177c",
    "nop     dword [rax+rax]",
    "mov     edi, ebx",
    "call    _rl_unget_char",
    "jmp     0xe1c82",
    "lea     rax, [rel rl_executing_macro]",
    "cmp     qword [rax], 0x0",
    "je      0xe1c82",
    "lea     rdx, [rel rl_key_sequence_length]",
    "mov     eax, dword [rdx]",
    "test    eax, eax",
    "jle     0xe1b14",
    "mov     eax, dword [rel data_16a4f8]",
    "test    eax, eax",
    "je      0xe1af2",
    "mov     rdi, r13",
    "call    malloc",
    "mov     rcx, qword [rbp-0x40]",
    "lea     rdx, [rel rl_readline_state]",
    "mov     r8, qword [rbp-0x38]",
    "mov     r14, rax",
    "jmp     0xe1da0",
    "mov     rdi, r14",
    "mov     rsi, r13",
    "call    realloc",
    "mov     r8, qword [rbp-0x38]",
    "lea     rdx, [rel rl_readline_state]",
    "mov     rcx, qword [rbp-0x40]",
    "mov     r14, rax",
    "lea     rax, [rel _rl_caught_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xe1b78",
    "mov     rax, qword [r12+0x8]",
    "cmp     rax, qword [rel data_157ec0]",
    "je      0xe1739",
    "or      rsi, 0x50",
    "mov     qword [rdx], rsi",
    "call    rl_read_key",
    "lea     rdx, [rel rl_readline_state]",
    "mov     edi, eax",
    "mov     rax, qword [rdx]",
    "and     rax, 0xffffffffffffffaf",
    "jmp     0xe1953",
    "or      rsi, 0x40",
    "mov     qword [rdx], rsi",
    "call    rl_read_key",
    "lea     rdx, [rel rl_readline_state]",
    "mov     edi, eax",
    "mov     rax, qword [rdx]",
    "and     rax, 0xffffffffffffffbf",
    "mov     qword [rbp-0x40], rcx",
    "mov     ecx, dword [rel data_16a508]",
    "cmp     dword [rel data_16a50c], ecx",
    "mov     qword [rbp-0x38], r8",
    "jne     0xe192e",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sub_e2070",
    "mov     dword [rcx], 0x2",
    "mov     eax, 0x1",
    "mov     dword [rcx+0xc], ebx",
    "mov     qword [rcx+0x18], r13",
    "mov     qword [rcx+0x10], r9",
    "jmp     0xe1a4e",
    "mov     dword [rcx+0xc], ebx",
    "xor     eax, eax",
    "cmp     qword [r9+0x1008], 0x0",
    "mov     qword [rcx+0x18], r13",
    "setne   al",
    "mov     qword [rcx+0x10], r9",
    "mov     dword [rel data_160314], eax",
    "call    _rl_input_available",
    "test    r15d, r15d",
    "lea     rdx, [rel rl_readline_state]",
    "js      0xe1f61",
    "imul    eax, esi, 0x3e8",
    "call    _rl_peek_macro_key",
    "lea     rdx, [rel rl_readline_state]",
    "test    eax, eax",
    "jne     0xe18b2",
    "lea     rax, [rel rl_arg_sign]",
    "lea     rdx, [rel rl_numeric_arg]",
    "lea     rcx, [rel _rl_vi_last_command]",
    "mov     eax, dword [rax]",
    "mov     edx, dword [rdx]",
    "mov     dword [rcx], ebx",
    "mov     dword [rel data_15a14c], edx",
    "mov     dword [rel data_15a148], eax",
    "jmp     0xe177c",
    "mov     rax, qword [rdi+0x20]",
    "mov     qword [r12], rax",
    "call    free",
    "mov     rdi, qword [r12]",
    "test    rdi, rdi",
    "jne     0xe1ef0",
    "lea     rdx, [rel rl_key_sequence_length]",
    "mov     eax, dword [rdx]",
    "test    eax, eax",
    "jle     0xe1ca4",
    "mov     eax, dword [rel data_16a4f8]",
    "test    eax, eax",
    "je      0xe1c82",
    "mov     r15d, 0xfffffffe",
    "jmp     0xe177c",
    "lea     rcx, [rel rl_executing_keyseq]",
    "sub     eax, 0x1",
    "mov     dword [rdx], eax",
    "cdqe    ",
    "mov     rcx, qword [rcx]",
    "mov     byte [rcx+rax], 0x0",
    "sub     eax, 0x1",
    "mov     dword [rel data_16a4f8], eax",
    "test    r14, r14",
    "je      0xe2020",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], rcx",
    "mov     qword [rbp-0x38], r8",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r8], r14",
    "movsxd  rax, dword [rcx]",
    "jmp     0xe16b5",
    "mov     edi, dword [rax]",
    "call    _rl_signal_handler",
    "jmp     0xe1750",
    "nop     word [rax+rax]",
    "cmp     rax, qword [rel data_157dd8]",
    "je      0xe1739",
    "mov     qword [rdx], rax",
    "test    edi, edi",
    "js      0xe1f06",
    "mov     edx, 0x1",
    "test    r14d, r14d",
    "jne     0xe1975",
    "cmp     qword [r9+0x1008], 0x0",
    "je      0xe192e",
    "or      rsi, 0x200000",
    "mov     dword [rcx+0x4], eax",
    "mov     qword [rdx], rsi",
    "mov     qword [r12], rcx",
    "jmp     0xe177c",
    "test    eax, eax",
    "je      0xe1c0a",
    "mov     dword [rel data_160314], r15d",
    "call    _rl_any_typein",
    "lea     rdx, [rel rl_readline_state]",
    "test    eax, eax",
    "mov     edi, eax",
    "jne     0xe18b2",
    "mov     r15d, 0xffffffff",
    "jmp     0xe177c",
    "lea     rcx, [rel rl_executing_keyseq]",
    "sub     eax, 0x1",
    "mov     dword [rdx], eax",
    "cdqe    ",
    "mov     rcx, qword [rcx]",
    "mov     byte [rcx+rax], 0x0",
    "sub     eax, 0x1",
    "mov     dword [rel data_16a4f8], eax",
    "lea     rdx, [rel rl_last_func]",
    "mov     qword [rdx], rax",
    "mov     rsi, qword [r12]",
    "call    _rl_dispatch_subseq",
    "mov     ecx, r14d",
    "mov     edx, ebx",
    "mov     rsi, r13",
    "mov     edi, eax",
    "xor     edx, edx",
    "cmp     qword [r13+0x1008], 0x0",
    "setne   dl",
    "imul    eax, eax, 0x3e8",
    "mov     r15d, dword [rel data_160314]",
    "mov     dword [rel data_160314], eax",
    "call    _rl_input_available",
    "test    r15d, r15d",
    "mov     r8, qword [rbp-0x38]",
    "mov     rcx, qword [rbp-0x40]",
    "lea     rdx, [rel rl_readline_state]",
    "js      0xe1e13",
    "mov     rsi, qword [r12+0x8]",
    "add     rsp, 0x28",
    "mov     edi, 0x100",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     _rl_dispatch",
    "lea     rax, [rel rl_editing_mode]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "jne     0xe18b2",
    "lea     rax, [rel _rl_keyseq_timeout]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jle     0xe1bf6",
    "test    eax, eax",
    "je      0xe1caf",
    "mov     dword [rel data_160314], r15d",
    "jmp     0xe1ba2",
    "call    _rl_input_queued",
    "lea     rdx, [rel rl_readline_state]",
    "test    eax, eax",
    "jne     0xe18b2",
    "imul    edi, eax, 0x3e8",
    "mov     eax, dword [rcx]",
    "test    eax, eax",
    "jle     0xe1cc8",
    "mov     rsi, qword [rdx]",
    "jmp     0xe192e",
    "sub     eax, 0x1",
    "mov     rdx, qword [r8]",
    "mov     dword [rcx], eax",
    "cdqe    ",
    "mov     byte [rdx+rax], 0x0",
    "nop     dword [rax+rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
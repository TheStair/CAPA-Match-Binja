{
  "address": "0x5c9e0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "mov     r13d, edi",
    "push    r12",
    "lea     r12, [rbp-0x130]",
    "push    rbx",
    "lea     rbx, [rbp-0xb0]",
    "mov     rdi, rbx",
    "sub     rsp, 0x118",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     rsi, rbx",
    "mov     rdx, r12",
    "xor     edi, edi",
    "call    sigprocmask",
    "mov     edi, 0x10",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x5cab3",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel the_pipeline]",
    "movq    xmm0, qword [rax]",
    "movhps  xmm0, qword [rel data_166eb8]",
    "mov     qword [rel data_166eb8], rbx",
    "movups  xmmword [rbx], xmm0",
    "test    r13d, r13d",
    "je      0x5ca78",
    "lea     rax, [rel already_making_children]",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "mov     eax, dword [rax]",
    "mov     dword [rel data_166f48], eax",
    "call    sigprocmask",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x5cac8",
    "mov     qword [rax], 0x0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x118",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    "
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
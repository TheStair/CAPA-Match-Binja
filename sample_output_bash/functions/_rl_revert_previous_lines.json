{
  "address": "0x10c3d0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "lea     rax, [rel rl_line_buffer]",
    "mov     r13, qword [rax]",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x10c601",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "mov     rdx, rbx",
    "call    __strcpy_chk",
    "lea     r13, [rel history_offset]",
    "lea     rax, [rel history_length]",
    "mov     qword [rbp-0x48], r12",
    "lea     r12, [rel rl_undo_list]",
    "mov     ecx, dword [r13]",
    "mov     eax, dword [rax]",
    "mov     r14, qword [r12]",
    "mov     dword [rbp-0x3c], ecx",
    "cmp     eax, ecx",
    "je      0x10c5ba",
    "test    eax, eax",
    "je      0x10c4bb",
    "mov     rdx, qword [rel data_1688b8]",
    "test    rdx, rdx",
    "je      0x10c4a9",
    "cmp     qword [rel data_1688b8], 0x0",
    "je      0x10c4cc",
    "lea     edx, [rax-0x1]",
    "mov     rcx, qword [rel data_1688b8]",
    "mov     dword [r13], edx",
    "movsxd  rdx, edx",
    "mov     rbx, qword [rcx+rdx*8]",
    "jmp     0x10c45f",
    "mov     ecx, dword [rbp-0x3c]",
    "mov     qword [r12], r14",
    "cmp     eax, ecx",
    "jl      0x10c4cc",
    "movsxd  rcx, dword [rbp-0x3c]",
    "mov     rbx, qword [rdx+rcx*8]",
    "mov     rdi, qword [rbp-0x48]",
    "xor     esi, esi",
    "call    rl_replace_line",
    "lea     rax, [rel rl_line_buffer]",
    "mov     rdi, qword [rbp-0x48]",
    "mov     rax, qword [rax]",
    "mov     qword [rel data_169168], rax",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     free",
    "mov     eax, dword [rbp-0x3c]",
    "mov     dword [r13], eax",
    "test    rbx, rbx",
    "je      0x10c4a9",
    "mov     eax, dword [rbp-0x3c]",
    "test    eax, eax",
    "js      0x10c4cc",
    "nop     dword [rax]",
    "cmp     rax, r14",
    "mov     rdi, qword [rbx]",
    "mov     eax, 0x0",
    "cmove   r14, rax",
    "xor     esi, esi",
    "call    rl_replace_line",
    "lea     rdx, [rel rl_end]",
    "mov     rax, qword [rbx+0x10]",
    "lea     rdi, [rel rl_editing_mode]",
    "lea     rsi, [rel rl_point]",
    "mov     ecx, dword [rdx]",
    "lea     rdx, [rel rl_mark]",
    "mov     qword [r12], rax",
    "mov     edi, dword [rdi]",
    "mov     dword [rsi], ecx",
    "mov     dword [rdx], 0x0",
    "test    edi, edi",
    "jne     0x10c552",
    "mov     eax, dword [r13]",
    "test    eax, eax",
    "je      0x10c4a0",
    "mov     qword [rbx+0x10], 0x0",
    "test    rax, rax",
    "je      0x10c56c",
    "mov     dword [rsi], 0x0",
    "mov     dword [rdx], ecx",
    "lea     rax, [rel history_length]",
    "mov     eax, dword [rax]",
    "sub     eax, 0x1",
    "mov     rdx, qword [rel data_1688b8]",
    "mov     dword [r13], eax",
    "cdqe    ",
    "mov     rbx, qword [rdx+rax*8]",
    "test    rbx, rbx",
    "jne     0x10c468",
    "mov     rdi, qword [rbx]",
    "test    rdi, rdi",
    "je      0x10c579",
    "nop     ",
    "mov     rax, qword [rbx+0x10]",
    "test    rax, rax",
    "jne     0x10c500",
    "nop     word [rax+rax]",
    "lea     rax, [rel rl_line_buffer]",
    "mov     rsi, qword [rax]",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x38], rsi",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rsi, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0x10c5dc",
    "call    free",
    "call    rl_do_undo",
    "cmp     qword [r12], 0x0",
    "jne     0x10c560",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "call    dcgettext",
    "mov     rdx, r15",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     rcx, r15",
    "mov     rdx, r15",
    "call    __memcpy_chk",
    "mov     qword [rbx], rax",
    "jmp     0x10c475"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
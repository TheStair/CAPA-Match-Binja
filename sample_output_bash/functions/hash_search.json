{
  "address": "0x87b00",
  "rules": [
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249",
    "decompress data using aPLib/b79fa41969a648e5912d52a379978f68",
    "encode data using XOR",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/dcaeaf6452d04e9abeab247e18cee1ca"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "test    rsi, rsi",
    "je      0x87c68",
    "xor     r15d, r15d",
    "jmp     0x87be8",
    "mov     r12d, edx",
    "mov     r8, rdi",
    "mov     r14, rsi",
    "and     r12d, 0x2",
    "mov     dword [rbp-0x3c], r12d",
    "jne     0x87b3c",
    "add     rsp, 0x28",
    "mov     rax, r15",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "movzx   r12d, byte [r8]",
    "mov     rsi, r8",
    "mov     ebx, 0x811c9dc5",
    "mov     r13d, 0x811c9dc5",
    "movsx   edx, r12b",
    "test    r12b, r12b",
    "je      0x87b8b",
    "mov     edx, dword [rsi+0xc]",
    "test    edx, edx",
    "je      0x87c68",
    "mov     eax, dword [r14+0x8]",
    "mov     dword [rbp-0x40], eax",
    "sub     eax, 0x1",
    "mov     dword [rbp-0x44], eax",
    "and     r13d, eax",
    "mov     rax, qword [r14]",
    "test    rax, rax",
    "je      0x87c00",
    "nop     word [rax+rax]",
    "mov     eax, dword [rbp-0x3c]",
    "xor     r15d, r15d",
    "test    eax, eax",
    "je      0x87be8",
    "movsxd  rdx, r13d",
    "mov     r15, qword [rax+rdx*8]",
    "test    r15, r15",
    "jne     0x87bc0",
    "mov     eax, ebx",
    "lea     r10d, [rbx+rbx*8]",
    "mov     edi, ebx",
    "add     rsi, 0x1",
    "shl     eax, 0x7",
    "shl     edi, 0x18",
    "lea     eax, [rax+r10*2]",
    "add     eax, ebx",
    "shl     ebx, 0x8",
    "add     ebx, eax",
    "add     ebx, edi",
    "xor     ebx, edx",
    "movsx   edx, byte [rsi]",
    "test    dl, dl",
    "jne     0x87b60",
    "mov     r13d, ebx",
    "mov     eax, dword [rbp-0x40]",
    "add     eax, eax",
    "cmp     dword [r14+0xc], eax",
    "jge     0x87c70",
    "cmp     ebx, dword [r15+0x18]",
    "jne     0x87bb8",
    "jmp     0x87c00",
    "mov     esi, dword [rbp-0x40]",
    "shl     esi, 0x2",
    "test    esi, esi",
    "jle     0x87c98",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x38], r8",
    "call    malloc",
    "mov     r8, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x87cf2",
    "mov     r15, qword [r15]",
    "test    r15, r15",
    "je      0x87c00",
    "mov     rdi, qword [r15+0x8]",
    "cmp     byte [rdi], r12b",
    "jne     0x87bb8",
    "test    r12b, r12b",
    "je      0x87ce5",
    "mov     rdi, r14",
    "mov     qword [rbp-0x38], r8",
    "call    sub_871c0",
    "mov     eax, dword [r14+0x8]",
    "mov     r8, qword [rbp-0x38]",
    "sub     eax, 0x1",
    "movzx   r12d, byte [r8]",
    "mov     dword [rbp-0x44], eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [r14]",
    "movsxd  r13, r13d",
    "lea     rax, [rax+r13*8]",
    "mov     rsi, qword [rax]",
    "mov     qword [r15], rsi",
    "mov     qword [rax], r15",
    "add     dword [r14+0xc], 0x1",
    "mov     qword [r15+0x10], 0x0",
    "mov     qword [r15+0x8], r8",
    "mov     dword [r15+0x18], ebx",
    "mov     dword [r15+0x1c], 0x0",
    "jmp     0x87be8",
    "mov     rsi, r8",
    "mov     qword [rbp-0x38], r8",
    "call    strcmp",
    "mov     r8, qword [rbp-0x38]",
    "test    eax, eax",
    "jne     0x87bb8",
    "mov     r13d, 0x811c9dc5",
    "mov     ebx, 0x811c9dc5",
    "jmp     0x87cd7",
    "mov     rdx, r8",
    "mov     ebx, 0x811c9dc5",
    "nop     dword [rax]",
    "add     dword [r15+0x1c], 0x1",
    "mov     eax, dword [rbp-0x44]",
    "and     eax, r13d",
    "mov     r13d, eax",
    "jmp     0x87c15",
    "mov     eax, ebx",
    "lea     edi, [rbx+rbx*8]",
    "mov     esi, ebx",
    "add     rdx, 0x1",
    "shl     eax, 0x7",
    "shl     esi, 0x18",
    "lea     eax, [rax+rdi*2]",
    "add     eax, ebx",
    "shl     ebx, 0x8",
    "add     eax, ebx",
    "movsx   ebx, r12b",
    "movzx   r12d, byte [rdx]",
    "add     eax, esi",
    "xor     ebx, eax",
    "test    r12b, r12b",
    "jne     0x87ca8",
    "mov     r13d, ebx"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
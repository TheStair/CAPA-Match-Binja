{
  "address": "0x37110",
  "rules": [
    "write file on Linux",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "contain loop",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "lea     r13, [rel terminating_signal]",
    "mov     dword [rbp-0x38], edi",
    "mov     eax, dword [r13]",
    "test    eax, eax",
    "jne     0x37950",
    "mov     r8d, dword [rel data_161100]",
    "mov     edi, dword [r13]",
    "test    r8d, r8d",
    "jne     0x3713b",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x37940",
    "jmp     0x375a4",
    "call    throw_to_top_level",
    "jmp     0x3714c",
    "lea     rax, [rel sigwinch_received]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x37928",
    "call    sub_8e2b0",
    "{ Does not return }",
    "xor     edx, edx",
    "xor     esi, esi",
    "xor     edi, edi",
    "mov     dword [rax], 0x0",
    "call    get_new_window_size",
    "jmp     0x3715d",
    "mov     eax, dword [rel data_160940]",
    "test    eax, eax",
    "jne     0x37908",
    "mov     dword [rel data_160940], 0x0",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, qword [rel data_160958]",
    "test    rdi, rdi",
    "je      0x37308",
    "lea     rax, [rel line_number]",
    "add     dword [rax], 0x1",
    "mov     rdx, qword [rel data_160d88]",
    "mov     dword [rbp-0x34], 0x0",
    "movzx   eax, byte [rdi+rdx]",
    "test    al, al",
    "jne     0x371a2",
    "mov     esi, dword [rel data_161100]",
    "mov     edi, dword [r13]",
    "test    esi, esi",
    "jne     0x3732c",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x37780",
    "movzx   r15d, byte [rbp-0x38]",
    "and     r15d, 0x1",
    "lea     rcx, [rel pushed_string_list]",
    "cmp     qword [rcx], 0x0",
    "je      0x379b3",
    "jmp     0x375a4",
    "call    throw_to_top_level",
    "jmp     0x3733d",
    "lea     rax, [rel interactive_shell]",
    "lea     rbx, [rel bash_input]",
    "mov     dword [rel data_1616d4], 0x0",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0x37688",
    "test    al, al",
    "jne     0x377b0",
    "mov     dword [rel data_1616c0], 0x0",
    "lea     rax, [rel line_number]",
    "add     dword [rax], 0x1",
    "cmp     qword [rel data_160950], 0x7fff",
    "jbe     0x37312",
    "mov     r15d, dword [rel data_160908]",
    "test    r15d, r15d",
    "jne     0x37699",
    "lea     rdx, [rel interactive]",
    "mov     eax, dword [rbx]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "je      0x376f0",
    "mov     esi, dword [rel data_1616c0]",
    "test    esi, esi",
    "sete    sil",
    "xor     ecx, ecx",
    "cmp     al, 0x5c",
    "sete    cl",
    "add     rdx, 0x1",
    "and     ecx, esi",
    "mov     dword [rel data_1616c0], ecx",
    "jmp     0x37220",
    "lea     r12, [rel pushed_string_list]",
    "mov     rax, qword [r12]",
    "test    rax, rax",
    "je      0x372be",
    "mov     dword [rbp-0x34], 0x0",
    "nop     dword [rax]",
    "call    free",
    "mov     qword [rel data_160958], 0x0",
    "mov     qword [rel data_160950], 0x0",
    "jmp     0x37312",
    "lea     rdx, [rel no_line_editing]",
    "mov     eax, dword [rbx]",
    "mov     r14d, dword [rdx]",
    "test    r14d, r14d",
    "je      0x376f0",
    "call    sub_6ad40",
    "cmp     eax, 0x2",
    "jne     0x3737e",
    "sub     eax, 0x1",
    "cmp     eax, 0x1",
    "jbe     0x37688",
    "mov     qword [rel data_160d88], rdx",
    "cmp     al, 0x5c",
    "jne     0x372f2",
    "mov     rax, qword [r12]",
    "test    rax, rax",
    "je      0x372d1",
    "mov     eax, dword [rax+0x3c]",
    "sub     eax, 0x2",
    "and     eax, 0xfffffffd",
    "je      0x372be",
    "lea     rdx, [rel interactive]",
    "mov     r12d, dword [rdx]",
    "test    r12d, r12d",
    "je      0x376f0",
    "xor     r15d, r15d",
    "xor     r12d, r12d",
    "mov     rax, qword [rel stdin]",
    "mov     rdi, qword [rax]",
    "call    clearerr",
    "jmp     0x3737e",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    r15b, r15b",
    "je      0x372f2",
    "mov     edx, dword [rel data_1616d4]",
    "cmp     edx, 0xffffffff",
    "je      0x37c10",
    "cmp     dword [rax+0x3c], 0x4",
    "jne     0x371f0",
    "jmp     0x37a20",
    "sub     eax, 0x1",
    "cmp     eax, 0x1",
    "ja      0x3737e",
    "mov     r11d, dword [rel data_161100]",
    "mov     edi, dword [r13]",
    "test    r11d, r11d",
    "jne     0x37396",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x375b0",
    "cmp     byte [rdi+rdx], 0xa",
    "jne     0x378b0",
    "cmp     qword [rel data_160d88], 0x1",
    "sbb     eax, eax",
    "or      eax, 0xa",
    "jmp     0x372f2",
    "lea     rbx, [rel bash_input]",
    "xor     eax, eax",
    "cmp     dword [rbx], 0x3",
    "je      0x37984",
    "lea     rax, [rel parser_state]",
    "and     dword [rax], 0xffdfffff",
    "call    sub_34650",
    "mov     rdx, qword [rel data_160d88]",
    "mov     rdi, qword [rel data_160958]",
    "movzx   eax, byte [rdi+rdx]",
    "test    al, al",
    "je      0x372d1",
    "lea     rcx, [rel parser_state]",
    "mov     eax, dword [rcx]",
    "test    eax, 0x300000",
    "jne     0x372be",
    "mov     r12, qword [rel stderr]",
    "mov     rdi, qword [rel data_160948]",
    "mov     rsi, qword [r12]",
    "call    fputs",
    "mov     rdi, qword [r12]",
    "call    fflush",
    "mov     eax, dword [rbx]",
    "nop     word [rax+rax]",
    "call    throw_to_top_level",
    "jmp     0x373a7",
    "test    r14d, r14d",
    "jne     0x374d0",
    "add     rsp, 0x28",
    "mov     eax, 0x5c",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     rdx, 0x1",
    "jbe     0x3725a",
    "mov     rcx, qword [rbx+0x10]",
    "cmp     byte [rcx], 0x0",
    "je      0x372f2",
    "add     rdx, 0x1",
    "test    rdx, rdx",
    "je      0x372be",
    "mov     rcx, qword [rel data_160950]",
    "cmp     rcx, 0xfffffffffffffeff",
    "jbe     0x375c0",
    "cmp     dword [rbx], 0x3",
    "jne     0x37384",
    "lea     rdx, [rel interactive]",
    "lea     r12, [rel pushed_string_list]",
    "mov     ecx, dword [rdx]",
    "mov     rax, qword [r12]",
    "test    ecx, ecx",
    "je      0x37287",
    "mov     rax, qword [rel data_160910]",
    "cmp     byte [rax+rdx-0x1], 0x0",
    "je      0x378b0",
    "mov     rcx, qword [r12]",
    "test    rcx, rcx",
    "je      0x372f2",
    "movzx   r9d, byte [rdi+rdx-0x1]",
    "lea     rdi, [rel sh_syntaxtab]",
    "lea     r8, [rdx-0x1]",
    "mov     edi, dword [rdi+r9*4]",
    "cmp     r9b, 0xa",
    "je      0x372be",
    "lea     eax, [r12+0x2]",
    "cdqe    ",
    "cmp     rax, rcx",
    "jb      0x3754f",
    "movsxd  r9, r12d",
    "cmp     r9, 0xfffffffffffffffc",
    "jbe     0x3750f",
    "call    qword [rbx+0x18]",
    "mov     r14d, eax",
    "mov     eax, dword [r13]",
    "test    eax, eax",
    "jne     0x37590",
    "test    r12d, r12d",
    "jne     0x373c4",
    "lea     rdx, [rel line_number]",
    "add     dword [rdx], 0x1",
    "test    rax, rax",
    "je      0x37320",
    "lea     rbx, [rel bash_input]",
    "mov     edx, dword [rbx]",
    "sub     edx, 0x1",
    "cmp     edx, 0x1",
    "jbe     0x37710",
    "cmp     dword [rcx+0x3c], 0x4",
    "jne     0x379ac",
    "and     edi, 0x2001",
    "or      edi, dword [rel data_1616c0]",
    "jne     0x372be",
    "cmp     r14d, 0xffffffff",
    "je      0x37ae0",
    "mov     rdx, rax",
    "sub     rdx, rcx",
    "add     rcx, 0x100",
    "shr     rdx, 0x8",
    "and     edx, 0x1",
    "cmp     rax, rcx",
    "jb      0x3760c",
    "cmp     rcx, 0xffffffffffffffff",
    "je      0x3754f",
    "test    r15d, r15d",
    "je      0x378c8",
    "mov     rax, qword [rel data_160958]",
    "mov     r14d, 0xffffffff",
    "mov     byte [rax+r12], 0x0",
    "mov     dword [rel data_1616d4], 0xffffffff",
    "mov     eax, dword [r13]",
    "test    eax, eax",
    "jne     0x37790",
    "cmp     qword [rax+0x18], 0x0",
    "je      0x37740",
    "test    rax, rax",
    "je      0x377d8",
    "xor     eax, eax",
    "jmp     0x372f2",
    "test    edx, edx",
    "je      0x37cdd",
    "lea     rdi, [rel dstack]",
    "movsxd  rsi, dword [rdi+0x8]",
    "test    esi, esi",
    "je      0x37a99",
    "cmp     dword [rbx], 0x2",
    "je      0x37ced",
    "test    r15d, r15d",
    "je      0x37660",
    "mov     rdi, qword [rel data_160958]",
    "mov     qword [rel data_160950], rcx",
    "test    rdi, rdi",
    "je      0x37ac0",
    "test    rdx, rdx",
    "je      0x37600",
    "mov     rdi, qword [rel data_160958]",
    "mov     qword [rel data_160950], 0xffffffffffffffff",
    "test    rdi, rdi",
    "je      0x37970",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_123330]  {\"shell_getc: shell_input_line_siz\u2026\"}",
    "xor     edi, edi",
    "mov     qword [rbp-0x48], r9",
    "mov     qword [rbp-0x40], rcx",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x40]",
    "mov     rdx, 0xffffffffffffffff",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_warning",
    "mov     r9, qword [rbp-0x48]",
    "jmp     0x374f6",
    "mov     rax, qword [rel data_160958]",
    "mov     r15d, 0x1",
    "mov     byte [rax+r9], 0x0",
    "mov     rcx, qword [rel data_160950]",
    "test    r15, r15",
    "jne     0x37bae",
    "test    rdi, rdi",
    "je      0x37469",
    "cmp     qword [rax+0x18], 0x0",
    "je      0x37320",
    "mov     rdi, qword [rel data_160958]",
    "mov     rdx, qword [rel data_160d88]",
    "cmp     byte [rdi+rdx+0x1], 0x0",
    "jne     0x37740",
    "call    sub_44ac0",
    "mov     rax, qword [r12]",
    "jmp     0x37287",
    "cmp     qword [rax+0x18], 0x0",
    "je      0x377d8",
    "mov     qword [rel data_160d88], 0x0",
    "jmp     0x37320",
    "or      eax, 0x200000",
    "cmp     qword [rel data_160d90], rdx",
    "mov     dword [rcx], eax",
    "jne     0x37ab3",
    "mov     rdi, qword [rdi]",
    "movzx   esi, byte [rdi+rsi-0x1]",
    "cmp     sil, 0x27",
    "je      0x372be",
    "mov     rax, qword [rel stdin]",
    "mov     rdi, qword [rax]",
    "call    clearerr",
    "jmp     0x37ae9",
    "test    r12d, r12d",
    "jne     0x37af8",
    "mov     rax, qword [rel data_160958]",
    "lea     edx, [r12+0x1]",
    "add     rax, r12",
    "mov     byte [rax], r14b",
    "cmp     r14d, 0xa",
    "je      0x37bfc",
    "cmp     r14d, 0xa",
    "je      0x37660",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x40], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x40]",
    "mov     rdx, rax",
    "jmp     0x37636",
    "mov     rsi, rcx",
    "mov     qword [rbp-0x40], rcx",
    "call    realloc",
    "mov     rcx, qword [rbp-0x40]",
    "mov     rdx, rax",
    "add     rcx, 0x200",
    "cmp     rax, rcx",
    "jae     0x37600",
    "add     rcx, 0x100",
    "cmp     rax, rcx",
    "jb      0x3760c",
    "mov     rdi, 0xffffffffffffffff",
    "call    malloc",
    "mov     rdx, rax",
    "jmp     0x3753f",
    "mov     rsi, 0xffffffffffffffff",
    "call    realloc",
    "mov     rdx, rax",
    "lea     rax, [rel echo_input_at_read]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "je      0x37b21",
    "lea     rax, [rel prompt_string_pointer]",
    "lea     rdx, [rel current_prompt_string]",
    "mov     qword [rel data_160950], 0x0",
    "mov     qword [rax], rdx",
    "lea     rax, [rel interactive]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x37320",
    "cmp     byte [rdi], 0x0",
    "jne     0x377f0",
    "mov     rax, qword [rel data_160d88]",
    "mov     rdi, qword [rel data_160958]",
    "lea     rdx, [rax+0x1]",
    "lea     rax, [rdi+rdx]",
    "cmp     byte [rax], 0x0",
    "je      0x37320",
    "lea     rdx, [rel line_number]",
    "add     dword [rdx], 0x1",
    "mov     rdx, qword [rel data_160d88]",
    "cmp     byte [rdi+rdx+0x1], 0x0",
    "je      0x372be",
    "mov     eax, 0x20",
    "jmp     0x372f2",
    "sub     rdx, 0x1",
    "jne     0x37d8e",
    "cmp     sil, 0x22",
    "je      0x372be",
    "mov     rax, qword [rel data_160958]",
    "mov     byte [rax+r12], 0x0",
    "jmp     0x373d6",
    "mov     dword [rel data_1616d4], 0xffffffff",
    "mov     byte [rax], 0x0",
    "lea     rax, [rel current_command_line_count]",
    "add     dword [rax], 0x1",
    "jmp     0x373d6",
    "movsxd  r12, edx",
    "jmp     0x3756c",
    "mov     edx, dword [rbp-0x34]",
    "cmp     r14d, 0x5c",
    "sete    al",
    "xor     edx, 0x1",
    "and     edx, eax",
    "mov     dword [rbp-0x34], edx",
    "call    qword [rbx+0x18]",
    "mov     r14d, eax",
    "mov     eax, dword [r13]",
    "test    eax, eax",
    "je      0x37396",
    "test    rdx, rdx",
    "jne     0x37548",
    "mov     qword [rel data_160958], rdx",
    "mov     rsi, rcx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "nop     word [rax+rax]",
    "test    rdx, rdx",
    "je      0x37d59",
    "or      rsi, 0xffffffffffffffff",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "cmp     dword [rel data_1616d4], 0xffffffff",
    "je      0x37bec",
    "cmp     byte [r15], 0x0",
    "je      0x37bdf",
    "mov     eax, dword [rbx]",
    "sub     eax, 0x1",
    "cmp     eax, 0x1",
    "ja      0x37320",
    "lea     rcx, [rel dstack]",
    "xor     eax, eax",
    "movsxd  rdx, dword [rcx+0x8]",
    "test    edx, edx",
    "je      0x37823",
    "lea     rax, [rel current_command_line_count]",
    "cmp     dword [rax], 0x1",
    "jle     0x37b10",
    "mov     qword [rel data_160d88], rdx",
    "movzx   eax, byte [rax]",
    "jmp     0x371ab",
    "add     r8, qword [rel data_160910]",
    "cmp     byte [r8], 0x0",
    "jne     0x37ab3",
    "mov     qword [rel data_160d88], 0x0",
    "mov     qword [rel data_160d90], r12",
    "call    sub_44790",
    "lea     rax, [rel remember_on_history]",
    "mov     rdi, qword [rel data_160958]",
    "mov     r10d, dword [rax]",
    "mov     r15, rdi",
    "test    r10d, r10d",
    "je      0x37460",
    "mov     rdx, qword [rel data_160d88]",
    "movzx   eax, byte [rdi+rdx]",
    "jmp     0x371a2",
    "mov     r12, qword [rel data_160950]",
    "mov     rax, qword [rel data_160d90]",
    "mov     r15, rdi",
    "cmp     r12, 0xfffffffffffffffb",
    "ja      0x37b52",
    "cmp     dword [rel data_1616d4], 0xffffffff",
    "jne     0x37c93",
    "lea     rax, [rel shell_eof_token]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "jne     0x37b21",
    "lea     rax, [rel pushed_string_list]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x374be",
    "lea     r12, [rel history_quoting_state]",
    "mov     edx, 0x1",
    "mov     esi, 0x1",
    "mov     dword [r12], eax",
    "call    pre_process_line",
    "mov     rdi, qword [rel data_160958]",
    "mov     dword [r12], 0x0",
    "mov     r15, rax",
    "cmp     rdi, rax",
    "je      0x37460",
    "mov     rax, qword [rcx]",
    "movzx   edx, byte [rax+rdx-0x1]",
    "mov     eax, 0x27",
    "cmp     dl, 0x27",
    "je      0x37823",
    "lea     rax, [rel echo_input_at_read]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x37bdf",
    "lea     rdx, [rel dstack]",
    "movsxd  rax, dword [rdx+0x8]",
    "test    eax, eax",
    "je      0x37441",
    "test    rdx, rdx",
    "jne     0x371ba",
    "mov     byte [r8], 0x1",
    "jmp     0x37ab3",
    "cmp     dword [rbx], 0x3",
    "je      0x37c22",
    "lea     rdx, [rax+0x3]",
    "cmp     r12, rdx",
    "jb      0x37d01",
    "lea     rax, [rel shell_eof_token]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x37b2e",
    "jmp     0x37ca4",
    "call    sub_44ac0",
    "jmp     0x37320",
    "cmp     qword [rax+0x18], 0x0",
    "jne     0x37320",
    "call    free",
    "mov     qword [rel data_160958], r15",
    "test    r15, r15",
    "je      0x379ee",
    "cmp     dl, 0x22",
    "mov     eax, 0x22",
    "mov     edx, 0x0",
    "cmovne  eax, edx",
    "call    history_delimiting_chars",
    "mov     rdi, qword [rel data_160958]",
    "mov     r15, rdi",
    "test    rax, rax",
    "je      0x37460",
    "mov     rdx, qword [rdx]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "jne     0x37a0a",
    "lea     rdx, [rel pushed_string_list]",
    "mov     rdx, qword [rdx]",
    "test    rdx, rdx",
    "je      0x37c3c",
    "mov     byte [r15+rax], 0xa",
    "lea     rax, [r12+0x2]",
    "add     r12, 0x3",
    "mov     qword [rel data_160950], rax",
    "test    rdi, rdi",
    "je      0x37d39",
    "mov     rax, qword [rel stderr]",
    "mov     rcx, r15",
    "mov     esi, 0x2",
    "lea     rdx, [rel data_1212aa[4]]  {\"%s\\n\"}",
    "mov     rdi, qword [rax]",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "mov     rdi, qword [rel data_160958]",
    "jmp     0x37b21",
    "mov     qword [rel data_160d90], 0x0",
    "mov     rdi, r15",
    "call    strlen",
    "mov     qword [rel data_160d90], rax",
    "test    rax, rax",
    "je      0x379f9",
    "cmp     byte [rax], 0x3b",
    "je      0x37a0a",
    "call    maybe_add_history",
    "mov     rdi, qword [rel data_160958]",
    "mov     r15, rdi",
    "jmp     0x37460",
    "cmp     r14d, 0xffffffff",
    "sete    dl",
    "test    byte [rbp-0x34], dl",
    "je      0x37b5b",
    "cmp     qword [rdx+0x18], 0x0",
    "jne     0x37b5b",
    "mov     rdi, qword [rel data_160910]",
    "mov     qword [rel data_160918], rbx",
    "test    rdi, rdi",
    "je      0x37cd0",
    "mov     r12, qword [rel data_160910]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r15, rax",
    "jmp     0x37d21",
    "mov     rsi, r12",
    "call    realloc",
    "mov     r15, rax",
    "mov     qword [rel data_160950], rax",
    "call    sub_44790",
    "mov     rdi, qword [rel data_160958]",
    "mov     r15, rdi",
    "test    r15, r15",
    "je      0x37469",
    "lea     rax, [rel current_command_line_count]",
    "sub     dword [rax], 0x1",
    "xor     eax, eax",
    "jmp     0x37885",
    "nop     ",
    "test    byte [rbp-0x38], 0x1",
    "je      0x37b5b",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "jmp     0x37c7e",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r12, rax",
    "test    r15, r15",
    "je      0x37d46",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_160958], r15",
    "mov     rax, qword [rel data_160d90]",
    "jmp     0x37b52",
    "jmp     0x37bae",
    "mov     byte [r15+rax], 0x5c",
    "jmp     0x37b60",
    "test    r12, r12",
    "je      0x37d78",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_160910], r12",
    "jmp     0x37b8b",
    "mov     rax, qword [rel data_160d90]",
    "mov     rdx, qword [rel data_160958]",
    "lea     rbx, [rax+0x2]",
    "mov     byte [rdx+rax+0x1], 0x0",
    "cmp     qword [rel data_160918], rbx",
    "jb      0x37c60",
    "mov     rax, qword [rel data_160d90]",
    "mov     byte [r12+rax], 0x1",
    "mov     rdx, qword [rel data_160d88]",
    "mov     rdi, qword [rel data_160958]",
    "movzx   eax, byte [rdi+rdx]",
    "jmp     0x371a2"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
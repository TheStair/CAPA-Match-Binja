{
  "address": "0xe2d50",
  "rules": [
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/bfdff12b2adb42709a78f0e77631902b",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "contain loop",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "hash data using aphash/416ed7212e694999bd9567d4aa818bae",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "encrypt data using HC-128/e8f9b1d76e624bf6b554df630e614cdc"
  ],
  "disassembly": [
    "endbr64 ",
    "test    edi, edi",
    "je      0xe309a",
    "xor     eax, eax",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     dword [rbp-0x38], edi",
    "lea     r12, [rel rl_point]",
    "nop     word [rax+rax]",
    "add     rsp, 0x18",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     r14, [rel rl_line_buffer]",
    "movsxd  rax, ebx",
    "mov     rsi, qword [r14]",
    "movzx   edx, byte [rsi+rax]",
    "cmp     dl, 0x20",
    "je      0xe2dbf",
    "mov     byte [rbp-0x31], dl",
    "call    __ctype_b_loc",
    "movzx   esi, byte [rbp-0x31]",
    "mov     r13, rax",
    "mov     rax, qword [rax]",
    "movzx   r15d, word [rax+rsi*2]",
    "shr     r15w, 0x3",
    "and     r15d, 0x1",
    "cmp     sil, 0x5f",
    "sete    al",
    "or      r15d, eax",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xe2e05",
    "cmp     dl, 0x9",
    "je      0xe2dbf",
    "mov     eax, dword [r12]",
    "lea     edx, [rax-0x1]",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0xe3040",
    "lea     rsi, [rsi+rax-0x1]",
    "movzx   eax, byte [rsi]",
    "cmp     al, 0x20",
    "je      0xe2ed0",
    "mov     dword [r12], ebx",
    "jmp     0xe2e62",
    "mov     ebx, edx",
    "mov     ebx, dword [r12]",
    "mov     rdi, qword [r14]",
    "test    ebx, ebx",
    "jle     0xe3061",
    "sub     ebx, 0x1",
    "mov     dword [r12], ebx",
    "je      0xe2eb6",
    "cmp     al, 0x9",
    "je      0xe2ed0",
    "movsxd  rbx, ebx",
    "movzx   eax, byte [rax+rbx]",
    "cmp     al, 0x20",
    "je      0xe2e71",
    "jmp     0xe2eac",
    "mov     rax, qword [r14]",
    "mov     rdx, qword [r13]",
    "mov     dword [r12], 0x0",
    "movzx   edi, byte [rax]",
    "movzx   edx, word [rdx+rdi*2]",
    "shr     dx, 0x3",
    "and     edx, 0x1",
    "cmp     dil, 0x5f",
    "sete    sil",
    "or      edx, esi",
    "cmp     r15b, dl",
    "jne     0xe2eac",
    "mov     edx, 0x1",
    "mov     esi, ebx",
    "call    _rl_find_prev_mbchar_internal",
    "mov     edx, eax",
    "test    eax, eax",
    "jns     0xe2e0c",
    "movzx   edx, byte [rsi]",
    "jmp     0xe2dbf",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xe2e50",
    "cmp     al, 0x9",
    "jne     0xe2ee8",
    "sub     dword [rbp-0x38], 0x1",
    "jne     0xe2d80",
    "mov     dword [r12], ebx",
    "jmp     0xe2e40",
    "mov     rax, qword [r14]",
    "movsxd  rsi, edx",
    "mov     dword [r12], edx",
    "movzx   r8d, byte [rax+rsi]",
    "mov     rsi, qword [r13]",
    "movzx   esi, word [rsi+r8*2]",
    "shr     si, 0x3",
    "and     esi, 0x1",
    "cmp     r8b, 0x5f",
    "sete    dil",
    "or      esi, edi",
    "cmp     r15b, sil",
    "je      0xe309d",
    "mov     eax, dword [r12]",
    "lea     ebx, [rax-0x1]",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0xe2e50",
    "mov     rax, qword [r14]",
    "mov     rdx, qword [r13]",
    "mov     r15d, dword [r12]",
    "movzx   esi, byte [rax+rbx]",
    "test    byte [rdx+rsi*2], 0x8",
    "jne     0xe2fb0",
    "mov     ebx, dword [r12]",
    "test    ebx, ebx",
    "jle     0xe2eb6",
    "test    ebx, ebx",
    "jg      0xe2e62",
    "mov     rax, qword [r14]",
    "mov     esi, dword [r12]",
    "test    esi, esi",
    "jle     0xe2ea4",
    "test    r15d, r15d",
    "jle     0xe2f10",
    "cmp     sil, 0x5f",
    "je      0xe2fb0",
    "mov     dword [r12], 0x0",
    "mov     rdi, qword [r14]",
    "mov     edx, 0x1",
    "call    _rl_find_prev_mbchar_internal",
    "mov     ebx, eax",
    "test    eax, eax",
    "jns     0xe2e57",
    "test    r15d, r15d",
    "jne     0xe2ea4",
    "nop     dword [rax]",
    "test    r15d, r15d",
    "jg      0xe2f6a",
    "mov     dword [r12], ebx",
    "test    ebx, ebx",
    "jle     0xe2eac",
    "jmp     0xe2eac",
    "mov     eax, dword [r12]",
    "mov     ebx, r15d",
    "lea     r15d, [rax-0x1]",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0xe3018",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xe2f20",
    "mov     rdx, qword [r14]",
    "movsxd  rax, r15d",
    "movzx   esi, byte [rdx+rax]",
    "mov     rdx, qword [r13]",
    "test    byte [rdx+rsi*2], 0x8",
    "jne     0xe2fc0",
    "mov     ebx, dword [r12]",
    "test    ebx, ebx",
    "jle     0xe2ea4",
    "mov     eax, dword [r12]",
    "mov     ebx, r15d",
    "lea     r15d, [rax-0x1]",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xe2f20",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xe2fd8",
    "cmp     sil, 0x5f",
    "je      0xe2fc0",
    "mov     rdi, qword [r14]",
    "mov     edx, 0x1",
    "mov     esi, ebx",
    "call    _rl_find_prev_mbchar_internal",
    "mov     r15d, eax",
    "test    eax, eax",
    "js      0xe2ea4",
    "mov     rdx, qword [r14]",
    "movsxd  rax, r15d",
    "movzx   esi, byte [rdx+rax]",
    "mov     rdx, qword [r13]",
    "test    byte [rdx+rsi*2], 0x8",
    "jne     0xe300a",
    "mov     ebx, dword [r12]",
    "test    ebx, ebx",
    "jle     0xe2ea4",
    "mov     dword [r12], ebx",
    "jmp     0xe2eac",
    "jmp     0xe2fe3",
    "cmp     sil, 0x5f",
    "je      0xe300a",
    "mov     rdi, qword [r14]",
    "mov     edx, 0x1",
    "mov     esi, ebx",
    "call    _rl_find_prev_mbchar_internal",
    "mov     r15d, eax",
    "test    eax, eax",
    "js      0xe2ea4",
    "mov     dword [r12], r15d",
    "test    r15d, r15d",
    "jle     0xe2f10",
    "cmp     sil, 0x20",
    "je      0xe300a",
    "jmp     0xe2f2b",
    "cmp     sil, 0x9",
    "je      0xe300a",
    "mov     dword [r12], r15d",
    "test    r15d, r15d",
    "jle     0xe2f10"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
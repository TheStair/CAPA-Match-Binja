{
  "address": "0x71720",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/4f0637c1ae9b445ca3ec93a4b4e0bb6d",
    "hash data using aphash/2602c80a9b3846b9ae92e2e83b13e866",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/af1fc90a7adf4a2ea648cfac1c599984",
    "contain loop",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/bee29d5f30484915bb6e92fdf1038d2c",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/9710d9ee76a4466b954966f2a98c40ba",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdx",
    "movsxd  rdx, esi",
    "push    r14",
    "push    r13",
    "mov     r13d, ecx",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "mov     ebx, esi",
    "lea     rsi, [rdi+rdx]",
    "mov     rdi, rsi",
    "sub     rsp, 0x58",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x58], rdx",
    "mov     qword [rbp-0x60], rsi",
    "mov     qword [rbp-0x48], 0x0",
    "call    strlen",
    "mov     rdx, qword [rbp-0x58]",
    "mov     rsi, qword [rbp-0x60]",
    "add     rax, rdx",
    "and     r13d, 0x1",
    "mov     qword [rbp-0x58], rax",
    "lea     rax, [rel no_longjmp_on_fatal_error]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x74], eax",
    "je      0x7179c",
    "movsx   eax, byte [rsi]",
    "mov     ecx, eax",
    "test    eax, eax",
    "je      0x71a0c",
    "lea     rax, [rel no_longjmp_on_fatal_error]",
    "mov     dword [rax], 0x1",
    "lea     rax, [rel no_longjmp_on_fatal_error]",
    "mov     edi, dword [rbp-0x74]",
    "mov     dword [rax], edi",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x71c70",
    "mov     rdi, r15",
    "xor     r10d, r10d",
    "mov     dword [rbp-0x60], 0x0",
    "xor     r9d, r9d",
    "xor     r14d, r14d",
    "mov     r15d, r10d",
    "mov     r8, rdi",
    "jmp     0x71801",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x58",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    r15d, r15d",
    "je      0x717c8",
    "cmp     eax, 0x5c",
    "je      0x71980",
    "lea     r11, [rel locale_mb_cur_max]",
    "cmp     dword [r11], 0x1",
    "jle     0x718d8",
    "add     ebx, 0x1",
    "mov     r15d, 0x1",
    "movsxd  rdx, ebx",
    "jmp     0x717f0",
    "cmp     eax, 0x60",
    "jne     0x718a0",
    "add     ebx, 0x1",
    "jmp     0x71832",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x71840",
    "lea     rsi, [r12+rdx]",
    "movsx   eax, byte [rsi]",
    "mov     ecx, eax",
    "test    eax, eax",
    "je      0x71a0c",
    "movzx   edi, byte [r8]",
    "test    r10d, r10d",
    "je      0x71900",
    "test    r14d, r14d",
    "je      0x718e0",
    "xor     r15d, r15d",
    "movsxd  rdx, ebx",
    "jmp     0x717f0",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x71856",
    "add     ebx, eax",
    "cmp     cl, dil",
    "je      0x71a0c",
    "cmp     cl, dil",
    "je      0x71a00",
    "cmp     eax, 0x60",
    "jne     0x718a0",
    "add     ebx, 0x1",
    "mov     r10d, r9d",
    "xor     r14d, r14d",
    "movsxd  rdx, ebx",
    "nop     ",
    "mov     rax, qword [rbp-0x58]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x48]",
    "mov     qword [rbp-0x70], r8",
    "mov     dword [rbp-0x68], r9d",
    "mov     r15, qword [rbp-0x48]",
    "sub     rax, rdx",
    "mov     dword [rbp-0x64], r10d",
    "mov     rdx, rax",
    "call    mbrtowc",
    "mov     r10d, dword [rbp-0x64]",
    "mov     r9d, dword [rbp-0x68]",
    "cmp     rax, 0xfffffffffffffffd",
    "mov     r8, qword [rbp-0x70]",
    "jbe     0x718c8",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x71830",
    "cmp     eax, 0x27",
    "je      0x71a40",
    "cmp     byte [r12+rdx+0x1], 0x22",
    "je      0x718b7",
    "cmp     eax, 0x27",
    "jne     0x71912",
    "add     ebx, 0x1",
    "mov     r9d, r10d",
    "mov     r14d, 0x1",
    "xor     r10d, r10d",
    "movsxd  rdx, ebx",
    "jmp     0x717f0",
    "test    rax, rax",
    "jne     0x71830",
    "mov     qword [rbp-0x48], r15",
    "add     ebx, 0x1",
    "jmp     0x71832",
    "add     ebx, 0x1",
    "mov     qword [rbp-0x40], 0x0",
    "lea     r15, [rbp-0x40]",
    "movsxd  rdx, ebx",
    "lea     rsi, [r12+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x71afb",
    "lea     rdi, [rel posixly_correct]",
    "mov     r11d, dword [rdi]",
    "test    r11d, r11d",
    "jne     0x71998",
    "add     ebx, 0x1",
    "movsxd  rdx, ebx",
    "jmp     0x717f0",
    "nop     dword [rax]",
    "xor     r15d, r15d",
    "jmp     0x717f0",
    "cmp     cl, 0x27",
    "je      0x71bf8",
    "cmp     eax, 0x22",
    "jne     0x7192a",
    "cmp     eax, 0x22",
    "je      0x71c10",
    "test    cl, cl",
    "je      0x71afb",
    "lea     r11, [rel locale_mb_cur_max]",
    "mov     eax, ebx",
    "mov     dword [rbp-0x64], r14d",
    "mov     rbx, r12",
    "mov     r14, r15",
    "mov     dword [rbp-0x68], r10d",
    "mov     r12d, eax",
    "mov     dword [rbp-0x70], r9d",
    "mov     r15, r11",
    "mov     qword [rbp-0x80], r8",
    "jmp     0x71acb",
    "cmp     cl, 0x3e",
    "ja      0x719d8",
    "mov     rsi, qword [rbp-0x58]",
    "lea     edx, [rbx+0x1]",
    "xor     ecx, ecx",
    "mov     rdi, r12",
    "mov     qword [rbp-0x70], r8",
    "mov     dword [rbp-0x68], r9d",
    "mov     dword [rbp-0x64], r10d",
    "call    sub_6f5f0",
    "mov     r10d, dword [rbp-0x64]",
    "mov     r9d, dword [rbp-0x68]",
    "movsxd  rdx, eax",
    "mov     r8, qword [rbp-0x70]",
    "mov     rbx, rdx",
    "jmp     0x717f0",
    "add     ebx, 0x1",
    "xor     r10d, 0x1",
    "xor     r15d, r15d",
    "movsxd  rdx, ebx",
    "jmp     0x717f0",
    "add     ebx, 0x1",
    "xor     r15d, r15d",
    "movsxd  rdx, ebx",
    "jmp     0x717f0",
    "cmp     dword [r15], 0x1",
    "jg      0x71a98",
    "mov     edi, dword [rbp-0x60]",
    "test    edi, edi",
    "je      0x71953",
    "mov     rdi, 0x5000001000000000",
    "bt      rdi, rcx",
    "jae     0x719d8",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x71b08",
    "add     r12d, 0x1",
    "lea     r11, [rel locale_mb_cur_max]",
    "mov     eax, dword [r11]",
    "test    r14d, r14d",
    "jne     0x71b68",
    "cmp     eax, 0x29",
    "jne     0x71953",
    "cmp     byte [r12+rdx+0x1], 0x28",
    "je      0x71bb0",
    "lea     rax, [rel locale_utf8locale]",
    "mov     r13d, dword [rax]",
    "test    r13d, r13d",
    "je      0x71b20",
    "add     r12d, eax",
    "cmp     cl, 0x27",
    "je      0x71be0",
    "mov     eax, r12d",
    "mov     r14d, dword [rbp-0x64]",
    "mov     r10d, dword [rbp-0x68]",
    "mov     r12, rbx",
    "mov     r9d, dword [rbp-0x70]",
    "mov     r8, qword [rbp-0x80]",
    "mov     ebx, eax",
    "cmp     eax, 0x1",
    "jle     0x718b7",
    "cmp     eax, 0x1",
    "jg      0x71817",
    "sub     edi, 0x1",
    "add     ebx, 0x1",
    "mov     r10d, r9d",
    "mov     dword [rbp-0x60], edi",
    "movsxd  rdx, ebx",
    "jmp     0x717f0",
    "movzx   eax, byte [r12+rdx+0x2]",
    "cmp     al, 0x28",
    "je      0x71953",
    "mov     rax, qword [rbp-0x58]",
    "xor     edi, edi",
    "mov     rcx, r14",
    "mov     r13, qword [rbp-0x40]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x71b50",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x71ab1",
    "mov     eax, r12d",
    "mov     r14d, dword [rbp-0x64]",
    "mov     r10d, dword [rbp-0x68]",
    "mov     r12, rbx",
    "mov     r9d, dword [rbp-0x70]",
    "mov     r8, qword [rbp-0x80]",
    "mov     ebx, eax",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "jne     0x71ba4",
    "add     ebx, 0x1",
    "jmp     0x71832",
    "add     ebx, 0x2",
    "test    al, al",
    "je      0x71a0c",
    "test    rax, rax",
    "jne     0x71ab1",
    "mov     qword [rbp-0x40], r13",
    "add     r12d, 0x1",
    "jmp     0x71ab4",
    "add     ebx, eax",
    "movsxd  rdx, ebx",
    "jmp     0x717f0",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x71c22",
    "mov     r9d, r10d",
    "add     dword [rbp-0x60], 0x1",
    "xor     r10d, r10d",
    "movsxd  rdx, ebx",
    "jmp     0x717f0",
    "add     r12d, 0x1",
    "jmp     0x71ad5",
    "movsxd  rdx, r12d",
    "lea     rsi, [rbx+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x71ae3",
    "mov     rax, qword [rbp-0x58]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x48]",
    "mov     qword [rbp-0x70], r8",
    "mov     dword [rbp-0x68], r9d",
    "mov     r13, qword [rbp-0x48]",
    "sub     rax, rdx",
    "mov     dword [rbp-0x64], r10d",
    "mov     rdx, rax",
    "call    mbrtowc",
    "mov     r10d, dword [rbp-0x64]",
    "mov     r9d, dword [rbp-0x68]",
    "cmp     rax, 0xfffffffffffffffd",
    "mov     r8, qword [rbp-0x70]",
    "jbe     0x71c62",
    "mov     eax, 0x1",
    "test    cl, cl",
    "js      0x71c22",
    "movsxd  rdx, r12d",
    "lea     rsi, [rbx+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "jne     0x71ac2",
    "test    rax, rax",
    "je      0x718b7",
    "mov     qword [rbp-0x48], r13",
    "jmp     0x718b7",
    "jmp     0x71ba4"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
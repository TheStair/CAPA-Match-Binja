{
  "address": "0x5c4a0",
  "rules": [
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "lea     r12, [rel want_pending_command]",
    "push    rbx",
    "lea     rbx, [rel read_from_stdin]",
    "movsxd  rax, dword [r12]",
    "movsxd  rdx, dword [rbx]",
    "lea     r14, [rdx+rax+0x17]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x5c54b",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel shell_flags]",
    "xor     ecx, ecx",
    "mov     edx, 0x61",
    "add     rax, 0x8",
    "nop     dword [rax+rax]",
    "movzx   edx, byte [rax+0x8]",
    "add     rax, 0x10",
    "test    dl, dl",
    "jne     0x5c4f0",
    "movsxd  rsi, ecx",
    "add     ecx, 0x1",
    "mov     byte [r13+rsi], dl",
    "mov     rsi, qword [rax]",
    "mov     esi, dword [rsi]",
    "test    esi, esi",
    "je      0x5c504",
    "mov     edx, dword [r12]",
    "test    edx, edx",
    "je      0x5c524",
    "mov     eax, dword [rbx]",
    "test    eax, eax",
    "je      0x5c536",
    "movsxd  rax, ecx",
    "add     ecx, 0x1",
    "mov     byte [r13+rax], 0x63",
    "movsxd  rcx, ecx",
    "mov     rax, r13",
    "mov     byte [r13+rcx], 0x0",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "movsxd  rax, ecx",
    "add     ecx, 0x1",
    "mov     byte [r13+rax], 0x73"
  ]
}
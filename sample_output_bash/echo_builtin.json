{
  "address": "0xb1a20",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "write file on Linux",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "contain loop",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     r13, qword [rel stdout]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel xpg_echo]",
    "mov     ecx, dword [rax]",
    "mov     rax, qword [r13]",
    "mov     qword [rbp-0x50], rax",
    "lea     rax, [rel posixly_correct]",
    "mov     dword [rbp-0x44], ecx",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0xb1a77",
    "test    r12, r12",
    "je      0xb1dfd",
    "test    ecx, ecx",
    "jne     0xb1ddf",
    "mov     rdi, qword [rbp-0x50]",
    "call    clearerr",
    "jmp     0xb1c73",
    "mov     dword [rbp-0x48], 0x1",
    "lea     r14, [rel data_1212dd]",
    "mov     rdi, qword [rbp-0x50]",
    "call    clearerr",
    "mov     dword [rbp-0x48], 0x1",
    "test    r12, r12",
    "jne     0xb1aec",
    "mov     rsi, qword [r13]",
    "mov     edi, 0xa",
    "call    putc",
    "mov     rdi, qword [rbp-0x50]",
    "call    clearerr",
    "cmp     byte [rbx], 0x2d",
    "jne     0xb1ae3",
    "lea     r14, [rel terminating_signal]",
    "nop     dword [rax+rax]",
    "jmp     0xb1c73",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    rbx, rbx",
    "je      0xb1b96",
    "test    rbx, rbx",
    "je      0xb1cb0",
    "mov     dword [rbp-0x3c], 0x0",
    "movsx   esi, byte [rbx+0x1]",
    "test    sil, sil",
    "je      0xb1ae3",
    "mov     eax, dword [r14]",
    "test    eax, eax",
    "jne     0xb1c36",
    "mov     rdx, rbx",
    "lea     rsi, [rel data_1217ad[6]]  {\"%s\"}",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "mov     eax, dword [r14]",
    "test    eax, eax",
    "je      0xb1ba1",
    "xor     ebx, ebx",
    "jmp     0xb1b96",
    "cmp     byte [rbx], 0x0",
    "je      0xb1cb0",
    "mov     r15d, 0x1",
    "jmp     0xb1ad6",
    "mov     r8d, dword [rel data_161100]",
    "mov     edi, dword [r14]",
    "test    r8d, r8d",
    "jne     0xb1ba1",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xb1cc0",
    "cmp     byte [rbx+0x1], 0x0",
    "mov     esi, 0x1",
    "je      0xb1b47",
    "mov     rdi, r14",
    "call    strchr",
    "test    rax, rax",
    "jne     0xb1ac0",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0xb1bb2",
    "mov     edi, dword [rbp-0x44]",
    "test    edi, edi",
    "je      0xb1bc6",
    "mov     rdi, rbx",
    "lea     rcx, [rbp-0x3c]",
    "lea     r8, [rbp-0x40]",
    "mov     edx, 0x1",
    "call    sub_de090",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xb1cb0",
    "cmp     byte [rbx+0x2], 0x0",
    "mov     esi, 0x2",
    "jne     0xb1dd0",
    "mov     dword [rbp-0x3c], r15d",
    "add     r15, 0x1",
    "movsx   esi, byte [rbx+r15]",
    "test    sil, sil",
    "je      0xb1d50",
    "mov     esi, dword [rbp-0x3c]",
    "mov     r12, qword [r12]",
    "test    esi, esi",
    "jne     0xb1c81",
    "test    rbx, rbx",
    "je      0xb1bc6",
    "mov     r9d, dword [rbp-0x40]",
    "mov     r15, rbx",
    "test    r9d, r9d",
    "jle     0xb1b96",
    "mov     rdi, rbx",
    "call    strlen",
    "mov     esi, eax",
    "jmp     0xb1b47",
    "movzx   eax, byte [rbx+0x1]",
    "test    al, al",
    "je      0xb1ae3",
    "xor     edi, edi",
    "call    sh_chkwrite",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xb1e0b",
    "test    r12, r12",
    "je      0xb1c50",
    "mov     rdi, rbx",
    "call    free",
    "nop     dword [rax]",
    "movsx   edx, al",
    "add     rbx, 0x2",
    "mov     dword [rbp-0x3c], edx",
    "mov     eax, dword [r14]",
    "test    eax, eax",
    "jne     0xb1d08",
    "mov     rsi, qword [r13]",
    "mov     edi, 0x20",
    "call    putc",
    "mov     eax, dword [r14]",
    "test    eax, eax",
    "jne     0xb1cd0",
    "mov     rsi, qword [r13]",
    "movsx   edi, byte [r15]",
    "add     r15, 0x1",
    "call    putc",
    "mov     eax, dword [rbp-0x40]",
    "sub     eax, 0x1",
    "mov     dword [rbp-0x40], eax",
    "test    eax, eax",
    "jg      0xb1b78",
    "mov     dword [rbp-0x44], 0x1",
    "jmp     0xb1d7d",
    "cmp     al, 0x6e",
    "je      0xb1dc0",
    "mov     ecx, dword [rel data_161100]",
    "mov     edi, dword [r14]",
    "test    ecx, ecx",
    "je      0xb1c49",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xb1d40",
    "mov     edx, dword [rel data_161100]",
    "mov     edi, dword [r14]",
    "test    edx, edx",
    "je      0xb1c49",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xb1af8",
    "movsx   edx, byte [rbx]",
    "add     rbx, 0x1",
    "mov     dword [rbp-0x3c], edx",
    "mov     eax, edx",
    "test    edx, edx",
    "jne     0xb1d66",
    "mov     dword [rbp-0x48], 0x0",
    "jmp     0xb1d7d",
    "cmp     al, 0x45",
    "jne     0xb1ae3",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xb1c6c",
    "call    throw_to_top_level",
    "jmp     0xb1c6c",
    "mov     eax, dword [rbp-0x48]",
    "test    eax, eax",
    "je      0xb1c81",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xb1af8",
    "mov     rax, qword [r12+0x8]",
    "mov     r10d, dword [rbp-0x44]",
    "mov     dword [rbp-0x40], 0x0",
    "mov     dword [rbp-0x3c], 0x0",
    "mov     rbx, qword [rax]",
    "test    r10d, r10d",
    "je      0xb1c10",
    "call    throw_to_top_level",
    "jmp     0xb1af8",
    "cmp     al, 0x65",
    "je      0xb1db0",
    "mov     r12, qword [r12]",
    "test    r12, r12",
    "jne     0xb1a8e",
    "mov     dword [rbp-0x44], 0x0",
    "call    throw_to_top_level",
    "test    r12, r12",
    "jne     0xb1af8",
    "call    throw_to_top_level",
    "test    r12, r12",
    "jne     0xb1af8",
    "mov     rax, qword [r12+0x8]",
    "mov     rbx, qword [rax]",
    "test    rbx, rbx",
    "je      0xb1ae3",
    "mov     rdi, qword [rbp-0x50]",
    "call    clearerr",
    "jmp     0xb1c6c",
    "jmp     0xb1c6c",
    "jmp     0xb1c6c"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
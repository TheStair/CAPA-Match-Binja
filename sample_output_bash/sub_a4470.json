{
  "address": "0xa4470",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "contain loop",
    "get file attributes",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check if file exists/e724fb9dd0e04bc2af009f8be857642c/229a7b83bcc7454aa2d6f8d97a1a725e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13d, esi",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "mov     rbx, rdx",
    "sub     rsp, 0xc8",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "movzx   eax, byte [rdx]",
    "mov     dword [rbp-0xd8], 0x0",
    "mov     dword [rbp-0xd4], 0x0",
    "test    al, al",
    "jne     0xa45b0",
    "cmp     al, 0x22",
    "je      0xa46a0",
    "lea     rax, [rel dircomplete_expand]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0xa4580",
    "lea     rax, [rel history_expansion]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "jne     0xa46d0",
    "movzx   edx, byte [r12]",
    "cmp     al, 0x27",
    "je      0xa44eb",
    "lea     rcx, [rbp-0xd8]",
    "lea     rdx, [rbp-0xd4]",
    "xor     esi, esi",
    "mov     rdi, r12",
    "call    sub_1138d0",
    "mov     r14d, eax",
    "test    eax, eax",
    "jne     0xa4730",
    "mov     esi, 0xa",
    "mov     rdi, r12",
    "call    strchr",
    "movzx   edx, byte [r12]",
    "test    rax, rax",
    "je      0xa45c5",
    "lea     rax, [rel history_expansion_inhibited]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0xa46ad",
    "cmp     byte [r12], 0x7e",
    "je      0xa4870",
    "cmp     dl, 0x7e",
    "je      0xa47a0",
    "lea     rax, [rel complete_fullquote]",
    "lea     rsi, [rbp-0xd0]",
    "mov     rdi, r12",
    "call    stat",
    "test    eax, eax",
    "je      0xa45a3",
    "movzx   eax, byte [rbx]",
    "test    al, al",
    "je      0xa44d0",
    "mov     esi, 0x21",
    "mov     rdi, r12",
    "call    strchr",
    "test    rax, rax",
    "je      0xa46ad",
    "cmp     r13d, 0x1",
    "jne     0xa46b8",
    "mov     rdi, r12",
    "call    sh_double_quote",
    "cmp     r13d, 0x2",
    "mov     rbx, rax",
    "sete    r14b",
    "jmp     0xa4507",
    "cmp     r13d, 0x1",
    "jne     0xa493e",
    "mov     rdi, r12",
    "call    sh_single_quote",
    "cmp     r13d, 0x2",
    "mov     rbx, rax",
    "sete    r14b",
    "lea     rsi, [rel data_168c20]",
    "jmp     0xa45d8",
    "xor     esi, esi",
    "lea     rax, [rel rl_filename_quote_characters]",
    "mov     rcx, qword [rel data_168aa0]",
    "cmp     qword [rax], rcx",
    "je      0xa476e",
    "nop     ",
    "mov     byte [rbx], 0x0",
    "cmp     byte [r12], 0x7e",
    "lea     rax, [rel complete_fullquote]",
    "jne     0xa45cc",
    "xor     esi, esi",
    "mov     rdi, r12",
    "xor     r14d, r14d",
    "call    bash_tilde_expand",
    "mov     rdi, rax",
    "mov     r13, rax",
    "call    sh_double_quote",
    "mov     rbx, rax",
    "cmp     r12, r13",
    "je      0xa4507",
    "test    rbx, rbx",
    "je      0xa4673",
    "cmp     r13d, 0x2",
    "mov     rdi, r12",
    "sete    r14b",
    "call    sh_single_quote",
    "mov     rbx, rax",
    "jmp     0xa4507",
    "xor     esi, esi",
    "mov     rdi, r12",
    "call    bash_tilde_expand",
    "mov     rdi, rax",
    "mov     r13, rax",
    "call    sh_single_quote",
    "mov     rbx, rax",
    "cmp     r12, r13",
    "je      0xa4667",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xa4926",
    "mov     rdi, rbx",
    "call    strlen",
    "movsxd  r13, eax",
    "add     eax, 0x1",
    "movsxd  r12, eax",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xa4910",
    "xor     edx, edx",
    "mov     rdi, r12",
    "call    sh_backslash_quote",
    "mov     rbx, rax",
    "xor     r14d, r14d",
    "jmp     0xa4673",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r13, [rel rl_completer_word_break_characters]",
    "cmp     qword [r13], 0x0",
    "je      0xa4828",
    "lea     rax, [rel complete_fullquote]",
    "mov     dword [rax], 0x0",
    "cmp     byte [r12], 0x7e",
    "je      0xa45cc",
    "mov     edx, dword [rbp-0xd8]",
    "mov     esi, dword [rbp-0xd4]",
    "mov     edi, r14d",
    "call    sub_9cb20",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xa4790",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xa45d6",
    "mov     rdi, r13",
    "call    free",
    "jmp     0xa4507",
    "xor     r14d, r14d",
    "test    rbx, rbx",
    "jne     0xa4510",
    "mov     rdi, r13",
    "call    free",
    "jmp     0xa4667",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r15], 0x0",
    "xor     ebx, ebx",
    "mov     r13d, 0x1",
    "jmp     0xa4543",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "xor     r14d, r14d",
    "jmp     0xa4510",
    "lea     r14d, [rax+rax+0x1]",
    "movsxd  r14, r14d",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xa48d6",
    "nop     word [rax+rax]",
    "xor     edx, edx",
    "lea     rsi, [rel data_168c20]",
    "mov     rdi, r12",
    "call    sh_backslash_quote",
    "mov     rbx, rax",
    "jmp     0xa45e5",
    "test    r14b, r14b",
    "je      0xa454e",
    "mov     rdi, rbx",
    "call    free",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa490b",
    "mov     byte [r15+r13-0x1], 0x0",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsx   esi, byte [rbx]",
    "test    sil, sil",
    "je      0xa48b0",
    "test    rbx, rbx",
    "je      0xa4903",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xc8",
    "mov     rax, r15",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     byte [rax], 0x0",
    "mov     rdi, rbx",
    "xor     r14d, r14d",
    "mov     rbx, r12",
    "call    free",
    "jmp     0xa4510",
    "mov     r15, rbx",
    "mov     r14, r12",
    "mov     rdi, qword [r13]",
    "call    mbschr",
    "mov     rdx, r14",
    "test    rax, rax",
    "je      0xa47f9",
    "movzx   eax, byte [r15+0x1]",
    "mov     byte [r14], 0x5c",
    "lea     rdx, [r14+0x2]",
    "mov     byte [r14+0x1], al",
    "test    al, al",
    "jne     0xa4830",
    "movzx   eax, byte [r15]",
    "cmp     r15, rbx",
    "je      0xa4840",
    "mov     byte [r14], 0x5c",
    "add     rdx, 0x1",
    "lea     rax, [r15+0x1]",
    "mov     r14, rdx",
    "jmp     0xa480b",
    "mov     byte [rdx], 0x0",
    "mov     rdi, rbx",
    "mov     rbx, r12",
    "call    free",
    "cmp     al, 0x7e",
    "jne     0xa4802",
    "mov     byte [rdx], al",
    "lea     r14, [rdx+0x1]",
    "mov     rax, r15",
    "movsx   esi, byte [rax+0x1]",
    "lea     r15, [rax+0x1]",
    "test    sil, sil",
    "jne     0xa4636",
    "lea     rsi, [rbp-0xd0]",
    "mov     rdi, r15",
    "mov     qword [rbp-0xe8], rdx",
    "call    stat",
    "mov     rdx, qword [rbp-0xe8]",
    "test    eax, eax",
    "je      0xa48c6",
    "cmp     sil, 0x5c",
    "jne     0xa47e0",
    "mov     rdx, r14",
    "jmp     0xa4659",
    "mov     byte [rdx], 0x5c",
    "movzx   eax, byte [r15]",
    "add     rdx, 0x1",
    "jmp     0xa4802",
    "movzx   eax, byte [r15]",
    "jmp     0xa4802"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xe7200",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     rax, [rel rl_end]",
    "mov     r15d, dword [rdi+0x20]",
    "mov     qword [rbp-0x38], rdi",
    "lea     r12, [rel rl_line_buffer_len]",
    "lea     r14, [rel rl_line_buffer]",
    "movsxd  rax, dword [rax]",
    "mov     dword [rel data_16a4c4], r15d",
    "mov     ebx, dword [r12]",
    "mov     rdi, qword [r14]",
    "lea     r13d, [rax+0x1]",
    "cmp     r13d, ebx",
    "jl      0xe72ce",
    "lea     rcx, [rel rl_end]",
    "mov     qword [rel data_169168], rdi",
    "mov     dword [rcx], r13d",
    "mov     byte [rdi+rax], 0x20",
    "movsxd  rax, dword [rcx]",
    "mov     edi, r15d",
    "mov     rdx, qword [r14]",
    "mov     byte [rdx+rax], 0x0",
    "lea     rax, [rel _rl_keymap]",
    "xor     edx, edx",
    "mov     rsi, qword [rax]",
    "lea     rax, [rel _rl_dispatching_keymap]",
    "mov     qword [rax], rsi",
    "call    _rl_dispatch_subseq",
    "lea     rax, [rel rl_readline_state]",
    "mov     rax, qword [rax]",
    "test    eax, 0x80000",
    "je      0xe7338",
    "add     ebx, 0x100",
    "mov     dword [r12], ebx",
    "movsxd  rbx, ebx",
    "test    rdi, rdi",
    "jne     0xe7287",
    "mov     rsi, qword [rbp-0x38]",
    "add     rsp, 0x18",
    "mov     edi, r15d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     _rl_vi_domove_motion_cleanup",
    "test    eax, 0x800000",
    "je      0xe7338",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     rdi, rax",
    "test    rdi, rdi",
    "jne     0xe726e",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rdi, rax",
    "test    rdi, rdi",
    "je      0xe7297",
    "add     rsp, 0x18",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     ebx, dword [r12]",
    "mov     qword [r14], rdi",
    "cmp     r13d, ebx",
    "jl      0xe72c0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "call    dcgettext",
    "mov     rdx, rbx",
    "lea     rsi, [rel data_11f045]  {\"xrealloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "lea     rax, [rel rl_end]",
    "movsxd  rax, dword [rax]",
    "lea     r13d, [rax+0x1]",
    "add     ebx, 0x100",
    "mov     dword [r12], ebx",
    "movsxd  rbx, ebx"
  ]
}
{
  "address": "0xdec00",
  "rules": [
    "write file on Linux"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "lea     rax, [rel rl_instream]",
    "mov     rbp, rsp",
    "push    r12",
    "lea     r12, [rel _rl_out_stream]",
    "push    rbx",
    "mov     rdx, qword [rax]",
    "lea     rax, [rel _rl_in_stream]",
    "mov     qword [rax], rdx",
    "lea     rax, [rel rl_outstream]",
    "lea     rdx, [rel rl_readline_state]",
    "mov     rax, qword [rax]",
    "mov     qword [r12], rax",
    "lea     rax, [rel _rl_enable_meta]",
    "movsxd  rax, dword [rax]",
    "and     rax, qword [rdx]",
    "test    al, 0x4",
    "jne     0xdedc0",
    "mov     edi, dword [rel data_169180]",
    "test    edi, edi",
    "je      0xdec50",
    "lea     rax, [rel rl_startup_hook]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xdec61",
    "mov     rdi, qword [rel data_169178]",
    "test    rdi, rdi",
    "je      0xdec50",
    "lea     rax, [rel _rl_internal_startup_hook]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xdec72",
    "call    rax",
    "lea     rdx, [rel _rl_output_character_function]",
    "mov     esi, 0x1",
    "call    tputs",
    "mov     dword [rel data_169170], 0x1",
    "jmp     0xdec50",
    "lea     rdx, [rel rl_editing_mode]",
    "lea     rax, [rel _rl_show_mode_in_prompt]",
    "mov     dword [rel data_169190], 0x0",
    "lea     rbx, [rel rl_prompt]",
    "mov     esi, dword [rdx]",
    "mov     eax, dword [rax]",
    "mov     rdi, qword [rbx]",
    "test    esi, esi",
    "je      0xded80",
    "call    rax",
    "lea     rdx, [rel _rl_keymap]",
    "lea     rcx, [rel vi_insertion_keymap]",
    "mov     dword [rel data_168a0c], 0x69",
    "mov     qword [rdx], rcx",
    "test    eax, eax",
    "je      0xdeca8",
    "test    eax, eax",
    "jne     0xdeda3",
    "lea     rax, [rel _rl_echoing_p]",
    "mov     rdi, qword [rbx]",
    "lea     rbx, [rel rl_redisplay_function]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0xdeccf",
    "call    rl_expand_prompt",
    "lea     rdx, [rel rl_visible_prompt_length]",
    "mov     dword [rdx], eax",
    "jmp     0xdeca8",
    "test    rdi, rdi",
    "je      0xdece5",
    "lea     rax, [rel rl_redisplay]",
    "cmp     qword [rbx], rax",
    "je      0xdee10",
    "mov     rax, qword [rel data_15a1c8]",
    "mov     rdx, qword [rax]",
    "test    rdx, rdx",
    "je      0xdecf7",
    "lea     rax, [rel rl_already_prompted]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xded70",
    "test    rdi, rdi",
    "je      0xded44",
    "lea     rdx, [rel _rl_last_v_pos]",
    "mov     rax, qword [rax+0x10]",
    "mov     dword [rel data_168a38], 0x0",
    "mov     dword [rdx], 0x0",
    "lea     rdx, [rel _rl_last_c_pos]",
    "mov     dword [rdx], 0x0",
    "lea     rdx, [rel _rl_vis_botlin]",
    "mov     dword [rdx], 0x0",
    "test    rax, rax",
    "je      0xded38",
    "mov     byte [rdx], 0x0",
    "call    rl_on_new_line_with_prompt",
    "jmp     0xded42",
    "lea     rax, [rel rl_pre_input_hook]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xded55",
    "lea     rax, [rel rl_already_prompted]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xded44",
    "mov     dword [rel data_168a30], 0x0",
    "mov     qword [rax], 0x0",
    "call    qword [rbx]",
    "lea     rax, [rel _rl_caught_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xdee00",
    "call    rax",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "xor     esi, esi",
    "call    sub_f3d00",
    "mov     rsi, qword [r12]",
    "mov     rdi, rax",
    "mov     rbx, rax",
    "call    fputs",
    "mov     rdi, qword [r12]",
    "call    fflush",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0xded44",
    "mov     edi, dword [rax]",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "jmp     _rl_signal_handler",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    "
  ]
}
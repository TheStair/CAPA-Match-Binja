{
  "address": "0x73d80",
  "rules": [
    "hash data using murmur3/9fd798ad644d45268aaff0d2aba3b296/af60147b5efb49279ab0229b6297e392",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/0d50c454f5994bb894701c3c95f625c2",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using RC4 KSA/89b7ba675fcb4f4eac2317f83c0a9436",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x78",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    rdi, rdi",
    "je      0x743ea",
    "mov     qword [rbp-0x68], 0x0",
    "jmp     0x73fbd",
    "movzx   ecx, byte [rdi]",
    "mov     rbx, rdi",
    "test    cl, cl",
    "je      0x743ea",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x7447e",
    "mov     r15, rsi",
    "mov     r14d, edx",
    "test    rsi, rsi",
    "je      0x73eb1",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x68]",
    "add     rsp, 0x78",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rax, [rel ifs_value]",
    "mov     dword [rbp-0x80], 0x0",
    "xor     esi, esi",
    "mov     rdx, qword [rax]",
    "test    rdx, rdx",
    "jne     0x73ded",
    "cmp     byte [rsi], 0x20",
    "mov     dword [rbp-0x80], 0x0",
    "je      0x74408",
    "movzx   eax, byte [rdx]",
    "xor     esi, esi",
    "test    al, al",
    "jne     0x73e16",
    "cmp     byte [rbx+0x1], 0x0",
    "mov     qword [rbp-0x70], 0x1",
    "jne     0x7442d",
    "cmp     byte [rsi+0x1], 0x9",
    "jne     0x73dda",
    "lea     rax, [rel ifs_value]",
    "mov     rdx, qword [rax]",
    "test    rdx, rdx",
    "je      0x74464",
    "cmp     al, 0x1",
    "jne     0x73e00",
    "jmp     0x73e29",
    "cmp     byte [rbx+0x2], 0x0",
    "mov     qword [rbp-0x70], 0x2",
    "je      0x73edf",
    "lea     rax, [rbp-0x44]",
    "mov     dword [rbp-0x44], 0x0",
    "and     r14d, 0x3",
    "mov     qword [rbp-0x78], rax",
    "movzx   eax, byte [rbp-0x80]",
    "mov     qword [rbp-0x68], 0x0",
    "and     eax, 0x1",
    "mov     dword [rbp-0x7c], esi",
    "mov     byte [rbp-0x81], al",
    "mov     dword [rbp-0x94], r14d",
    "mov     r14, r15",
    "nop     dword [rax]",
    "cmp     byte [rsi+0x2], 0xa",
    "jne     0x73dda",
    "xor     esi, esi",
    "jmp     0x73e29",
    "mov     edi, esi",
    "or      edi, 0x20",
    "cmp     al, 0x7f",
    "cmove   esi, edi",
    "movzx   eax, byte [rdx+0x1]",
    "add     rdx, 0x1",
    "test    al, al",
    "je      0x73e29",
    "movzx   eax, byte [rdx+0x1]",
    "add     rdx, 0x1",
    "or      esi, 0x10",
    "test    al, al",
    "jne     0x73e16",
    "test    r14d, r14d",
    "jne     0x73ecd",
    "mov     rdi, rbx",
    "mov     dword [rbp-0x58], esi",
    "call    strlen",
    "mov     esi, dword [rbp-0x58]",
    "mov     qword [rbp-0x70], rax",
    "jmp     0x73edf",
    "mov     rcx, qword [rbp-0x68]",
    "test    rcx, rcx",
    "je      0x743ea",
    "movzx   eax, byte [rax]",
    "cmp     al, 0x7f",
    "je      0x74240",
    "xor     eax, eax",
    "cmp     byte [rsi+0x3], 0x0",
    "sete    al",
    "mov     dword [rbp-0x80], eax",
    "jmp     0x73dda",
    "test    r15, r15",
    "je      0x73ecd",
    "mov     rax, qword [rcx]",
    "test    rax, rax",
    "je      0x73fbd",
    "cmp     byte [r12+0x1], 0x0",
    "je      0x74310",
    "test    al, al",
    "jne     0x7424c",
    "movzx   edx, byte [r15]",
    "test    dl, dl",
    "je      0x73ecd",
    "mov     qword [rcx], 0x0",
    "nop     dword [rax]",
    "call    alloc_word_desc",
    "mov     edi, 0x3",
    "mov     r13, rax",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x74483",
    "mov     rdi, r12",
    "call    remove_quoted_nulls",
    "call    alloc_word_desc",
    "mov     rsi, qword [rbp-0x68]",
    "mov     qword [rax], r12",
    "mov     rdi, rax",
    "call    make_word_list",
    "mov     r10d, dword [rbp-0x94]",
    "mov     rdx, qword [rax+0x8]",
    "mov     qword [rbp-0x68], rax",
    "mov     eax, dword [rdx+0x8]",
    "and     eax, 0xfffbffff",
    "mov     ecx, eax",
    "or      ecx, 0x2",
    "test    r10d, r10d",
    "cmovne  eax, ecx",
    "mov     dword [rdx+0x8], eax",
    "cmp     byte [r12], 0x0",
    "jne     0x73f76",
    "mov     r9d, dword [rbp-0x80]",
    "test    r9d, r9d",
    "jne     0x73f6e",
    "mov     dword [rbp-0x58], esi",
    "movzx   r12d, byte [r15+0x1]",
    "mov     r13d, edx",
    "mov     dword [rbp-0x68], r14d",
    "jmp     0x73e9e",
    "mov     rdx, rax",
    "mov     rax, qword [rax]",
    "mov     qword [rdx], rcx",
    "mov     rcx, rdx",
    "test    rax, rax",
    "jne     0x73fa8",
    "mov     qword [rbp-0x68], rdx",
    "mov     esi, 0x3",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r8d, 0x7f",
    "mov     rdi, r13",
    "mov     word [r15], r8w",
    "mov     rsi, qword [rbp-0x68]",
    "or      dword [r13+0x8], 0x40002",
    "mov     qword [r13], r15",
    "call    make_word_list",
    "mov     qword [rbp-0x68], rax",
    "jmp     0x73f6e",
    "movsxd  rdx, dword [rbp-0x44]",
    "lea     rsi, [rbx+rdx]",
    "mov     r13, rdx",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "jne     0x73fe8",
    "or      dword [rdx+0x8], 0x200000",
    "jmp     0x73f76",
    "mov     rdi, r12",
    "call    free",
    "call    __ctype_b_loc",
    "movsxd  rdx, dword [rbp-0x44]",
    "mov     rax, qword [rax]",
    "movzx   edx, byte [rbx+rdx]",
    "test    byte [rax+rdx*2+0x1], 0x20",
    "je      0x74310",
    "test    r12b, r12b",
    "jne     0x73e60",
    "test    r14, r14",
    "sete    r12b",
    "or      r12b, byte [rbp-0x81]",
    "je      0x742d0",
    "lea     rsi, [rel ifs_cmap]",
    "movzx   eax, cl",
    "mov     r14, rax",
    "cmp     byte [rsi+rax], 0x0",
    "je      0x743da",
    "cmp     r13b, cl",
    "jne     0x743da",
    "mov     byte [rbp-0x60], cl",
    "mov     qword [rbp-0x90], rsi",
    "mov     qword [rbp-0x58], rdx",
    "call    __ctype_b_loc",
    "mov     rsi, qword [rbp-0x90]",
    "mov     rdx, qword [rbp-0x58]",
    "mov     rdi, rax",
    "movzx   eax, byte [rbp-0x60]",
    "mov     rdi, qword [rdi]",
    "mov     rcx, rax",
    "movzx   eax, word [rdi+rax*2]",
    "shr     ax, 0xd",
    "and     eax, 0x1",
    "mov     dword [rbp-0x60], eax",
    "jmp     0x74013",
    "lea     eax, [rcx-0x9]",
    "cmp     al, 0x1",
    "setbe   dil",
    "cmp     cl, 0x20",
    "sete    al",
    "or      eax, edi",
    "movzx   eax, al",
    "mov     dword [rbp-0x60], eax",
    "cmp     byte [rbx], 0x0",
    "mov     esi, dword [rbp-0x58]",
    "mov     r14d, dword [rbp-0x68]",
    "jne     0x7446b",
    "call    __ctype_b_loc",
    "movzx   ecx, r14b",
    "mov     rax, qword [rax]",
    "test    byte [rax+rcx*2+0x1], 0x20",
    "je      0x743da",
    "mov     r14d, r13d",
    "jmp     0x73e77",
    "lea     rdi, [rel locale_mb_cur_max]",
    "mov     qword [rbp-0x40], 0x0",
    "lea     rax, [rbp-0x40]",
    "lea     r15d, [r13+0x1]",
    "cmp     dword [rdi], 0x1",
    "jle     0x74053",
    "movsxd  rax, r15d",
    "mov     dword [rbp-0x44], r15d",
    "movzx   r13d, byte [rbx+rax]",
    "test    r13b, r13b",
    "je      0x73f88",
    "mov     edi, ecx",
    "lea     r11, [rel is_basic_table]",
    "shr     dil, 0x5",
    "and     edi, 0x7",
    "mov     edi, dword [r11+rdi*4]",
    "shr     edi, cl",
    "and     edi, 0x1",
    "je      0x74359",
    "cmp     byte [rbx+0x1], 0x0",
    "jne     0x7442d",
    "movzx   ecx, byte [rbx+0x1]",
    "add     rbx, 0x1",
    "test    cl, cl",
    "je      0x743ea",
    "add     r15d, 0x1",
    "xor     ecx, ecx",
    "mov     rsi, rbx",
    "mov     ebx, r12d",
    "movsxd  r15, r15d",
    "mov     r12d, ecx",
    "jmp     0x740d7",
    "lea     rdi, [rel locale_utf8locale]",
    "mov     edi, dword [rdi]",
    "test    edi, edi",
    "je      0x74373",
    "lea     r15d, [r13+rdi]",
    "mov     qword [rbp-0x70], 0x1",
    "jmp     0x73edf",
    "test    bl, bl",
    "jne     0x74080",
    "mov     rdi, qword [rbp-0x70]",
    "mov     rcx, rax",
    "lea     r15d, [r13+0x1]",
    "sub     rdi, rdx",
    "mov     rdx, rdi",
    "xor     edi, edi",
    "call    mbrtowc",
    "mov     rdi, rax",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0x74053",
    "mov     edi, 0x1",
    "test    cl, cl",
    "jns     0x7404e",
    "lea     eax, [r13-0x9]",
    "cmp     al, 0x1",
    "jbe     0x7408e",
    "mov     qword [rbp-0x58], rsi",
    "call    __ctype_b_loc",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdx, rax",
    "movzx   eax, r13b",
    "mov     rdx, qword [rdx]",
    "test    byte [rdx+rax*2+0x1], 0x20",
    "jne     0x7408e",
    "test    rax, rax",
    "je      0x74053",
    "movzx   eax, byte [r14]",
    "test    al, al",
    "je      0x742a8",
    "cmp     r13b, 0x20",
    "jne     0x740f9",
    "mov     rbx, rsi",
    "test    r12b, r12b",
    "je      0x74107",
    "jmp     0x7404e",
    "mov     rbx, rsi",
    "test    r12b, r12b",
    "je      0x74120",
    "cmp     byte [r14+0x1], 0x0",
    "je      0x74138",
    "movzx   eax, byte [rbp-0x60]",
    "and     eax, 0x1",
    "test    al, al",
    "jne     0x743f7",
    "mov     eax, dword [rbp-0x5c]",
    "mov     dword [rbp-0x44], eax",
    "movsxd  rax, dword [rbp-0x44]",
    "movzx   eax, byte [rbx+rax]",
    "mov     eax, dword [rbp-0x5c]",
    "mov     dword [rbp-0x44], eax",
    "jmp     0x74120",
    "cmp     al, r13b",
    "je      0x740ba",
    "lea     rdi, [rel ifs_cmap]",
    "movzx   edx, r13b",
    "cmp     byte [rdi+rdx], 0x0",
    "je      0x74141",
    "movzx   eax, byte [r14]",
    "test    al, al",
    "jne     0x7415a",
    "nop     word [rax+rax]",
    "mov     r8d, dword [rbp-0x7c]",
    "mov     rdx, qword [rbp-0x78]",
    "mov     rcx, r14",
    "mov     rdi, rbx",
    "mov     rsi, qword [rbp-0x70]",
    "call    sub_6d5e0",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x73f88",
    "jmp     0x73f88",
    "mov     dword [rbp-0x5c], r15d",
    "add     r15, 0x1",
    "mov     r12d, 0x1",
    "movzx   r13d, byte [rsi+r15-0x1]",
    "test    r13b, r13b",
    "je      0x742c0",
    "mov     rbx, rsi",
    "test    r12b, r12b",
    "je      0x7414f",
    "cmp     byte [r14+0x1], 0x0",
    "je      0x743cc",
    "jmp     0x74120",
    "mov     eax, dword [rbp-0x5c]",
    "mov     rbx, rsi",
    "mov     dword [rbp-0x44], eax",
    "jmp     0x74120",
    "movzx   edx, byte [rbp-0x60]",
    "and     edx, 0x1",
    "test    dl, dl",
    "je      0x74120",
    "mov     ecx, dword [rbp-0x5c]",
    "mov     dword [rbp-0x44], ecx",
    "cmp     r13b, al",
    "je      0x74176",
    "lea     rcx, [rel ifs_cmap]",
    "movzx   eax, r13b",
    "cmp     byte [rcx+rax], 0x0",
    "je      0x74120",
    "mov     eax, dword [rbp-0x80]",
    "test    eax, eax",
    "je      0x743b0",
    "jmp     0x74120",
    "call    __ctype_b_loc",
    "movzx   edx, r13b",
    "mov     rax, qword [rax]",
    "test    byte [rax+rdx*2+0x1], 0x20",
    "je      0x7418f",
    "lea     eax, [r13-0x9]",
    "cmp     al, 0x1",
    "jbe     0x74120",
    "movsxd  rax, r15d",
    "mov     dword [rbp-0x44], r15d",
    "movzx   r12d, byte [rbx+rax]",
    "test    r12b, r12b",
    "je      0x73f88",
    "jmp     0x74120",
    "cmp     r13b, 0x20",
    "je      0x74120",
    "lea     eax, [r15+0x1]",
    "xor     r15d, r15d",
    "mov     qword [rbp-0x58], r14",
    "movsxd  r13, eax",
    "mov     r14d, r15d",
    "mov     r15, r13",
    "mov     r13d, dword [rbp-0x80]",
    "jmp     0x741fd",
    "test    r13d, r13d",
    "jne     0x741c0",
    "lea     eax, [r12-0x9]",
    "cmp     al, 0x1",
    "jbe     0x741cf",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movzx   eax, r12b",
    "mov     rdx, qword [rdx]",
    "test    byte [rdx+rax*2+0x1], 0x20",
    "jne     0x741cf",
    "lea     rax, [rel ifs_cmap]",
    "cmp     byte [rax+r12], 0x0",
    "je      0x74218",
    "cmp     r12b, 0x20",
    "jne     0x74218",
    "mov     r15d, r14d",
    "mov     r14, qword [rbp-0x58]",
    "test    r15b, r15b",
    "je      0x73f18",
    "mov     dword [rbp-0x88], r15d",
    "add     r15, 0x1",
    "mov     r14d, 0x1",
    "movzx   r12d, byte [rbx+r15-0x1]",
    "test    r12b, r12b",
    "je      0x74456",
    "movsxd  rax, dword [rbp-0x88]",
    "mov     dword [rbp-0x44], eax",
    "movzx   eax, byte [rbx+rax]",
    "jmp     0x74128",
    "mov     eax, dword [rbp-0x88]",
    "mov     dword [rbp-0x44], eax",
    "jmp     0x73f88",
    "test    al, al",
    "jne     0x73f18"
  ]
}
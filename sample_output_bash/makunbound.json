{
  "address": "0x5de40",
  "rules": [
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "test    rsi, rsi",
    "je      0x5e099",
    "mov     eax, 0xffffffff",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "mov     r12, rsi",
    "push    rbx",
    "sub     rsp, 0x18",
    "jmp     0x5de7e",
    "mov     rsi, qword [r12+0x20]",
    "xor     edx, edx",
    "mov     rdi, r13",
    "call    hash_remove",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x5de70",
    "mov     r12, qword [r12+0x18]",
    "test    r12, r12",
    "je      0x5e028",
    "mov     r14, qword [rax+0x10]",
    "test    r14, r14",
    "je      0x5dfc8",
    "mov     eax, 0xffffffff",
    "jmp     0x5dfb2",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x5e09f",
    "mov     eax, dword [r14+0x28]",
    "test    al, 0x1",
    "je      0x5deb4",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, r13",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "mov     rdi, qword [rbx+0x8]",
    "call    free",
    "mov     rdi, rbx",
    "call    free",
    "mov     rdi, r14",
    "call    dispose_variable",
    "mov     rdi, r15",
    "call    stupidly_hack_special_variables",
    "mov     rdi, r15",
    "call    free",
    "jmp     0x5dfb0",
    "test    al, 0x20",
    "je      0x5dfc8",
    "lea     rdx, [rel array_needs_making]",
    "add     dword [rdx], 0x1",
    "xor     eax, eax",
    "lea     rdx, [rel variable_context]",
    "mov     ecx, dword [r14+0x2c]",
    "mov     edx, dword [rdx]",
    "cmp     ecx, edx",
    "je      0x5dee6",
    "test    eax, 0x20000",
    "jne     0x5df0e",
    "lea     rsi, [rel localvar_unset]",
    "mov     esi, dword [rsi]",
    "test    esi, esi",
    "je      0x5dfc8",
    "mov     eax, dword [r14+0x28]",
    "mov     rdi, qword [r14+0x10]",
    "mov     qword [r14+0x8], 0x0",
    "not     eax",
    "test    eax, 0x100001",
    "sete    al",
    "movzx   eax, al",
    "or      eax, 0x1020",
    "mov     dword [r14+0x28], eax",
    "test    rdi, rdi",
    "je      0x5df46",
    "mov     r13, qword [r14+0x8]",
    "test    al, 0x4",
    "jne     0x5e02f",
    "cmp     ecx, edx",
    "jge     0x5dfc8",
    "mov     r13, qword [r14]",
    "mov     rax, qword [r12+0x20]",
    "mov     rdi, r13",
    "mov     qword [rbp-0x38], rax",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x5e0b5",
    "call    free",
    "mov     qword [r14+0x10], 0x0",
    "test    r13, r13",
    "je      0x5df0e",
    "test    al, 0x40",
    "jne     0x5e068",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, r13",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "mov     rsi, qword [rbp-0x38]",
    "xor     edx, edx",
    "mov     rdi, r15",
    "call    hash_insert",
    "mov     rdi, qword [r14]",
    "mov     qword [rax+0x10], r14",
    "call    stupidly_hack_special_variables",
    "mov     rdi, qword [rbx+0x8]",
    "call    free",
    "mov     rdi, rbx",
    "call    free",
    "nop     dword [rax+rax]",
    "mov     rdi, r13",
    "call    array_flush",
    "mov     r15, qword [r13+0x10]",
    "test    r15, r15",
    "je      0x5df06",
    "test    r13, r13",
    "je      0x5df0e",
    "test    r13, r13",
    "je      0x5df0e",
    "mov     rdi, r13",
    "call    free",
    "mov     rdi, qword [r15+0x8]",
    "test    rdi, rdi",
    "je      0x5e05b",
    "mov     eax, dword [r13+0xc]",
    "test    eax, eax",
    "je      0x5e083",
    "mov     rdi, r15",
    "call    free",
    "jmp     0x5df06",
    "call    free",
    "mov     rdi, qword [r13]",
    "call    free",
    "mov     rdi, r13",
    "call    free",
    "jmp     0x5df0e",
    "xor     esi, esi",
    "mov     rdi, r13",
    "call    sub_87820"
  ]
}
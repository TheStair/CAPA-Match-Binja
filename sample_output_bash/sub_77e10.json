{
  "address": "0x77e10",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     qword [rbp-0x38], rsi",
    "mov     dword [rbp-0x3c], edx",
    "mov     dword [rbp-0x40], ecx",
    "mov     dword [rbp-0x44], r8d",
    "test    rdi, rdi",
    "je      0x77f80",
    "xor     r15d, r15d",
    "jmp     0x77f31",
    "lea     rbx, [rel wdcache]",
    "mov     r14, rdi",
    "xor     r12d, r12d",
    "jmp     0x77eac",
    "mov     edx, dword [rbp-0x44]",
    "mov     edi, dword [rbp-0x40]",
    "mov     rsi, r15",
    "xor     ecx, ecx",
    "call    string_list_pos_params",
    "mov     rdi, r15",
    "mov     rbx, rax",
    "call    dispose_words",
    "add     rsp, 0x28",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [r14+0x8]",
    "mov     edx, dword [rbp-0x3c]",
    "mov     rsi, qword [rbp-0x38]",
    "mov     rdi, qword [rax]",
    "call    sub_778e0",
    "mov     edx, dword [rbx+0xc]",
    "mov     r15, rax",
    "test    edx, edx",
    "jg      0x77e50",
    "sub     edx, 0x1",
    "mov     rcx, qword [rbx]",
    "mov     dword [rbx+0xc], edx",
    "movsxd  rdx, edx",
    "mov     r13, qword [rcx+rdx*8]",
    "mov     edi, 0x10",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "jne     0x77e60",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x77f85",
    "lea     rcx, [rel wlcache]",
    "mov     qword [r13], r15",
    "mov     eax, dword [rcx+0xc]",
    "test    eax, eax",
    "jle     0x77ee0",
    "mov     dword [r13+0x8], 0x0",
    "mov     qword [r13], 0x0",
    "test    r15, r15",
    "je      0x77f60",
    "jmp     0x32198",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r15], 0x0",
    "jmp     0x77e79",
    "mov     edi, 0x10",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x321b6",
    "mov     rsi, qword [rcx]",
    "sub     eax, 0x1",
    "mov     dword [rcx+0xc], eax",
    "cdqe    ",
    "mov     r15, qword [rsi+rax*8]",
    "mov     qword [r15], r12",
    "mov     r14, qword [r14]",
    "mov     qword [r15+0x8], r13",
    "test    r14, r14",
    "je      0x77f05",
    "xor     eax, eax",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r15], r12",
    "mov     r14, qword [r14]",
    "mov     qword [r15+0x8], r13",
    "test    r14, r14",
    "jne     0x77ea9",
    "test    r12, r12",
    "je      0x77f31",
    "mov     r12, r15",
    "mov     qword [r15], 0x0",
    "mov     rdx, r15",
    "mov     r15, r12",
    "jmp     0x77f23",
    "mov     rax, qword [r15]",
    "mov     qword [r15], rdx",
    "mov     rdx, r15",
    "test    rax, rax",
    "jne     0x77f20",
    "mov     r15, rax"
  ]
}
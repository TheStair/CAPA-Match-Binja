{
  "address": "0xf8be0",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "mov     r14d, edi",
    "push    r13",
    "lea     r13, [rbp-0x160]",
    "push    r12",
    "mov     r12, rsi",
    "push    rbx",
    "mov     rbx, rdx",
    "sub     rsp, 0x140",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "xor     eax, eax",
    "cmp     edi, 0x1c",
    "lea     rdi, [rbp-0x158]",
    "sete    al",
    "mov     qword [rbp-0x160], rsi",
    "shl     eax, 0x1c",
    "mov     dword [rbp-0xd8], eax",
    "call    sigemptyset",
    "lea     rdi, [rbx+0x8]",
    "call    sigemptyset",
    "lea     rdx, [rbp-0xc0]",
    "mov     rsi, r13",
    "mov     edi, r14d",
    "call    sigaction",
    "lea     rax, [rel sub_f8940]",
    "cmp     r12, rax",
    "je      0xf8cf0",
    "cmp     qword [rbp-0xc0], r12",
    "jne     0xf8c60",
    "movdqa  xmm0, xmmword [rbp-0xc0]",
    "mov     rax, qword [rbp-0x30]",
    "movdqa  xmm1, xmmword [rbp-0xb0]",
    "movdqa  xmm2, xmmword [rbp-0xa0]",
    "movdqa  xmm3, xmmword [rbp-0x90]",
    "movdqa  xmm4, xmmword [rbp-0x80]",
    "movaps  xmmword [rbx], xmm0",
    "movdqa  xmm5, xmmword [rbp-0x70]",
    "movdqa  xmm6, xmmword [rbp-0x60]",
    "mov     qword [rbx+0x90], rax",
    "movdqa  xmm7, xmmword [rbp-0x50]",
    "movdqa  xmm0, xmmword [rbp-0x40]",
    "movaps  xmmword [rbx+0x10], xmm1",
    "movaps  xmmword [rbx+0x20], xmm2",
    "movaps  xmmword [rbx+0x30], xmm3",
    "movaps  xmmword [rbx+0x40], xmm4",
    "movaps  xmmword [rbx+0x50], xmm5",
    "movaps  xmmword [rbx+0x60], xmm6",
    "movaps  xmmword [rbx+0x70], xmm7",
    "movaps  xmmword [rbx+0x80], xmm0",
    "jmp     0xf8cca",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x140",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [rbx]",
    "mov     rdx, qword [rbp-0x28]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xf8cff"
  ]
}
{
  "address": "0x9b310",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "contain loop"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x58",
    "mov     dword [rbp-0x48], ecx",
    "cmp     esi, edx",
    "je      0x9b6ad",
    "movsxd  rax, esi",
    "mov     rax, qword [rdi+rax*8]",
    "test    rax, rax",
    "je      0x9b6e9",
    "mov     edi, 0x10",
    "mov     r14d, edx",
    "mov     dword [rbp-0x38], esi",
    "call    malloc",
    "mov     r8d, dword [rbp-0x38]",
    "test    rax, rax",
    "mov     rdx, rax",
    "je      0x9b728",
    "mov     rdi, qword [rdi]",
    "jmp     0x9b6c0",
    "movsxd  rcx, ecx",
    "lea     rdi, [rax+rcx]",
    "mov     qword [rbp-0x38], rax",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x40], r8d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [rdx], 0x0",
    "cmp     r8d, r14d",
    "jge     0x9b6d7",
    "add     rsp, 0x58",
    "xor     edx, edx",
    "xor     esi, esi",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sh_backslash_quote",
    "mov     esi, dword [rbp-0x48]",
    "test    esi, esi",
    "jne     0x9b5c2",
    "movsxd  rax, dword [rbp-0x48]",
    "mov     dword [rbp-0x40], r8d",
    "mov     dword [rbp-0x6c], 0x0",
    "mov     dword [rbp-0x44], 0x10",
    "test    eax, eax",
    "mov     qword [rbp-0x68], rax",
    "mov     qword [rbp-0x38], rdx",
    "mov     dword [rbp-0x60], r8d",
    "sete    byte [rbp-0x59]",
    "add     rsp, 0x58",
    "mov     rax, rdx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "xor     ebx, ebx",
    "jmp     0x9b5ae",
    "mov     esi, dword [rbp-0x60]",
    "cmp     dword [rbp-0x40], esi",
    "sete    al",
    "test    byte [rbp-0x59], al",
    "je      0x9b5e6",
    "mov     r8d, dword [rbp-0x48]",
    "movsxd  r10, ebx",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x38], rdx",
    "call    strlen",
    "mov     rdx, qword [rbp-0x38]",
    "mov     byte [rdx+rax-0x1], bl",
    "mov     rax, qword [rbp-0x68]",
    "add     r12, rax",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x9b769",
    "cmp     r14d, ebx",
    "je      0x9b5e6",
    "cmp     r8d, esi",
    "jge     0x9b418",
    "movzx   edx, byte [r12]",
    "xor     eax, eax",
    "test    dl, dl",
    "jne     0x9b3e1",
    "mov     qword [rbp-0x40], rax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, rcx",
    "mov     rdx, r15",
    "mov     rsi, r12",
    "call    __strcpy_chk",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rdi, rax",
    "mov     r15, rax",
    "call    sh_backslash_quote",
    "mov     rdi, r15",
    "mov     r12, rax",
    "call    free",
    "mov     rdi, r12",
    "call    strlen",
    "mov     edi, dword [rbp-0x44]",
    "mov     dword [rbp-0x40], ebx",
    "lea     eax, [rdi+rax+0x1]",
    "mov     dword [rbp-0x44], eax",
    "movsxd  r15, eax",
    "jmp     0x9b547",
    "mov     r12d, dword [rbp-0x40]",
    "lea     r12d, [rbx-0x1]",
    "lea     rax, [r10+0x1]",
    "cmp     r14d, eax",
    "jle     0x9b5d4",
    "movzx   ecx, byte [rdi+rax]",
    "mov     esi, eax",
    "cmp     cl, dl",
    "je      0x9b3d0",
    "jmp     0x9b3ed",
    "mov     rdi, qword [rbp-0x38]",
    "mov     rsi, r15",
    "call    realloc",
    "mov     qword [rbp-0x38], rax",
    "test    rax, rax",
    "je      0x9b714",
    "mov     rsi, qword [rbp-0x58]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38]",
    "movzx   esi, word [rel data_136aa6[8]]  {\"{\"}",
    "add     dword [rbp-0x6c], 0x1",
    "mov     word [rax], si",
    "jmp     0x9b433",
    "cmp     dword [rbp-0x40], r12d",
    "je      0x9b5e3",
    "cmp     ebx, r14d",
    "jne     0x9b669",
    "mov     r12d, ebx",
    "mov     r9d, esi",
    "lea     ebx, [r10+0x1]",
    "jmp     0x9b41c",
    "mov     r10, rax",
    "mov     r9d, esi",
    "jmp     0x9b3b0",
    "test    cl, cl",
    "je      0x9b3eb",
    "mov     esi, eax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, qword [rbp-0x38]",
    "mov     rdx, r15",
    "mov     rsi, r12",
    "call    __strcat_chk",
    "mov     rdi, qword [rbp-0x38]",
    "mov     rdx, r15",
    "lea     rsi, [rel data_120b95]",
    "call    __strcat_chk",
    "mov     rdi, r12",
    "call    free",
    "cmp     r14d, ebx",
    "jg      0x9b383",
    "mov     r12, qword [r15]",
    "mov     eax, dword [rbp-0x48]",
    "mov     r12d, r9d",
    "mov     dword [rbp-0x58], r9d",
    "sub     r12d, eax",
    "lea     ecx, [r12+0x1]",
    "movsxd  rcx, ecx",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x50], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x50]",
    "mov     r9d, dword [rbp-0x58]",
    "test    rax, rax",
    "mov     r10, rax",
    "je      0x9b6ee",
    "add     dword [rbp-0x44], 0x1",
    "movsxd  rax, dword [rbp-0x44]",
    "mov     rdi, qword [rbp-0x38]",
    "mov     dword [rbp-0x50], r9d",
    "mov     rsi, rax",
    "mov     qword [rbp-0x58], rax",
    "call    realloc",
    "mov     r9d, dword [rbp-0x50]",
    "test    rax, rax",
    "mov     qword [rbp-0x38], rax",
    "je      0x9b750",
    "mov     edi, dword [rbp-0x60]",
    "cmp     dword [rbp-0x40], edi",
    "sete    al",
    "test    byte [rbp-0x59], al",
    "je      0x9b433",
    "mov     rdi, qword [r13+r10*8]",
    "mov     ebx, r10d",
    "xor     esi, esi",
    "test    rdi, rdi",
    "je      0x9b3ed",
    "add     rax, 0x1",
    "movzx   edx, byte [r12+rax]",
    "test    dl, dl",
    "je      0x9b410",
    "movsxd  rax, dword [rbp-0x40]",
    "lea     r15, [r13+rax*8]",
    "mov     rbx, rax",
    "mov     r12, qword [r15]",
    "add     ebx, 0x1",
    "mov     rdi, r12",
    "call    strlen",
    "mov     r9d, eax",
    "cmp     r14d, ebx",
    "jle     0x9b652",
    "mov     ecx, dword [rbp-0x48]",
    "mov     rdx, qword [rbp-0x38]",
    "test    ecx, ecx",
    "jne     0x9b5c2",
    "mov     qword [rbp-0x78], rax",
    "mov     rsi, rcx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  r12, r12d",
    "mov     rdi, r10",
    "mov     rsi, qword [rbp-0x68]",
    "add     rsi, qword [r15]",
    "mov     rdx, r12",
    "mov     dword [rbp-0x58], r9d",
    "call    __strncpy_chk",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     byte [rax+r12], 0x0",
    "mov     rdi, rax",
    "mov     qword [rbp-0x50], rax",
    "call    sh_backslash_quote",
    "mov     rdi, qword [rbp-0x50]",
    "mov     r12, rax",
    "call    free",
    "mov     rdi, r12",
    "call    strlen",
    "mov     edi, dword [rbp-0x44]",
    "lea     eax, [rdi+rax+0x1]",
    "mov     rdi, qword [rbp-0x38]",
    "movsxd  r15, eax",
    "mov     dword [rbp-0x44], eax",
    "mov     rsi, r15",
    "call    realloc",
    "mov     r9d, dword [rbp-0x58]",
    "test    rax, rax",
    "mov     qword [rbp-0x38], rax",
    "je      0x9b787",
    "add     esi, 0x1",
    "cmp     r8d, esi",
    "jl      0x9b3f2",
    "mov     eax, dword [rbp-0x6c]",
    "mov     ebx, 0x7d",
    "test    eax, eax",
    "je      0x9b6e2",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "mov     dword [rbp-0x50], r9d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, qword [rbp-0x38]",
    "mov     rdx, r15",
    "mov     rsi, r12",
    "mov     dword [rbp-0x50], r9d",
    "call    __strcat_chk",
    "mov     rdi, r12",
    "call    free",
    "mov     rdi, qword [rbp-0x38]",
    "mov     rdx, r15",
    "lea     rsi, [rel data_11ff9f[3]]  {\"{\"}",
    "call    __strcat_chk",
    "mov     esi, dword [rbp-0x40]",
    "mov     ecx, dword [rbp-0x50]",
    "mov     edx, ebx",
    "mov     rdi, r13",
    "xor     eax, eax",
    "call    sub_9b310",
    "mov     rdi, rax",
    "mov     r12, rax",
    "call    strlen",
    "mov     rdi, r12",
    "mov     byte [r12+rax-0x1], 0x7d",
    "call    strlen",
    "mov     esi, dword [rbp-0x44]",
    "mov     dword [rbp-0x40], ebx",
    "lea     eax, [rsi+rax+0x1]",
    "mov     dword [rbp-0x44], eax",
    "movsxd  r15, eax"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xbcc90",
  "rules": [
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "encrypt data using XXTEA/8b51ac557ada4334b6544ffbf490740a/33e90fccc3014d20a84f729899796186",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "decrypt data using TEA/b2f1d7a7bfa04984a8dca63866a95e23/984e354f362243e4a3c29794ab375d51",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "encrypt data using TEA/6daa315fd3424f3e9ddc04a16106b42a/cc31b12fa45348f89da50dd0ea5d26bd",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     edi, 0x22",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r14 {__saved_r14}",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xbcd9a",
    "mov     esi, 0x22",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel o_options]",
    "mov     r13, rbx",
    "xor     r14d, r14d  {0x0}",
    "lea     rdi, [rel data_11f68a]  {\"allexport\"}",
    "lea     r12, [rax+0x8]  {data_155a08}",
    "jmp     0xbccf9",
    "mov     esi, dword [r12]",
    "test    esi, esi",
    "je      0xbccd0",
    "mov     rax, qword [r12+0x18]",
    "test    rax, rax",
    "je      0xbcd48",
    "lea     rdi, [rel shell_flags]",
    "xor     ecx, ecx  {0x0}",
    "mov     eax, 0x61",
    "lea     rdx, [rdi+0x10]  {data_1558b0}",
    "jmp     0xbcd2a",
    "mov     rax, qword [r12+0x8]",
    "movzx   eax, byte [rax]",
    "jmp     0xbccdc",
    "call    rax",
    "cmp     esi, eax",
    "jne     0xbcd18",
    "mov     byte [r13], al",
    "movsxd  rdx, eax",
    "lea     rcx, [rel interactive_comments]",
    "xor     eax, eax  {0x0}",
    "lea     rsi, [rel data_156600]",
    "lea     rdi, [rbx+rdx]",
    "nop     ",
    "mov     r14d, eax",
    "movsx   eax, byte [rdx]",
    "add     rdx, 0x10",
    "add     ecx, 0x1",
    "test    al, al",
    "je      0xbcdb2",
    "movsxd  rcx, ecx",
    "shl     rcx, 0x4",
    "mov     rax, qword [rdi+rcx+0x8]",
    "mov     eax, dword [rax]",
    "mov     byte [r13], al",
    "jmp     0xbcce0",
    "mov     edx, dword [rcx]",
    "mov     byte [rdi+rax], dl",
    "add     rax, 0x1",
    "mov     rcx, qword [rsi+rax*8]",
    "test    rcx, rcx",
    "jne     0xbcd70",
    "add     r14d, 0x6",
    "mov     rax, rbx",
    "movsxd  r14, r14d",
    "mov     byte [rbx+r14], 0x0",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "jmp     0x32432",
    "mov     rdi, qword [r12+0x20]",
    "lea     eax, [r14+0x1]",
    "add     r12, 0x28",
    "add     r13, 0x1",
    "test    rdi, rdi",
    "je      0xbcd58",
    "mov     eax, dword [0x0]  {0x464c457f}",
    "ud2     ",
    "{ Does not return }"
  ]
}
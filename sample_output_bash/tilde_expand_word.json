{
  "address": "0x1124c0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "get password database entry on Linux",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "test    rdi, rdi",
    "je      0x1126f8",
    "xor     ebx, ebx",
    "jmp     0x112593",
    "cmp     byte [rdi], 0x7e",
    "mov     r12, rdi",
    "jne     0x1125e0",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x11272f",
    "movzx   ebx, byte [rdi+0x1]",
    "test    bl, bl",
    "je      0x1125a0",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "pop     rbx",
    "mov     rdi, r13",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "lea     rdi, [rel data_11f154]  {\"HOME\"}",
    "call    find_variable",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x112690",
    "cmp     bl, 0x2f",
    "je      0x1125a0",
    "lea     rbx, [rel current_user]",
    "mov     rdi, qword [rbx+0x20]",
    "test    rdi, rdi",
    "jne     0x1125c9",
    "call    get_variable_value",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x112690",
    "call    strlen",
    "mov     rdi, rax",
    "mov     r14, rax",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x1126ff",
    "pop     rbx",
    "mov     rsi, r12",
    "mov     edx, 0x1",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "jmp     sub_1104c0",
    "cmp     qword [rbx+0x10], 0x0",
    "jne     0x1125c9",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     eax, 0x2",
    "nop     word [rax+rax]",
    "call    sub_347e0",
    "mov     rdi, qword [rbx+0x20]",
    "jmp     0x1125c9",
    "mov     ebx, edx",
    "lea     rax, [r13+rdx-0x1]",
    "mov     byte [rax], 0x0",
    "lea     rax, [rel tilde_expansion_preexpansion_hook]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x112564",
    "cmp     bl, 0x2f",
    "jne     0x112520",
    "mov     rdi, r13",
    "call    getpwnam",
    "test    rax, rax",
    "je      0x112618",
    "mov     rdi, r13",
    "call    rax",
    "mov     r14, rax",
    "test    rax, rax",
    "jne     0x1126c0",
    "mov     byte [r13+rax-0x2], bl",
    "movzx   ebx, byte [r12+rax]",
    "mov     rdx, rax",
    "add     rax, 0x1",
    "test    bl, bl",
    "je      0x11253a",
    "lea     rax, [rel tilde_expansion_failure_hook]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x112658",
    "mov     rdi, qword [rax+0x20 {passwd::pw_dir}]",
    "mov     edx, ebx",
    "mov     rsi, r12",
    "call    sub_1104c0",
    "mov     rbx, rax",
    "mov     edx, ebx",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "call    sub_1104c0",
    "mov     rbx, rax",
    "test    r13, r13",
    "je      0x1126dd",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x112745",
    "mov     rdi, r13",
    "call    rax",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x112658",
    "mov     rdi, r14",
    "call    free",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r13",
    "call    free",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "mov     rdi, r14",
    "mov     rbx, r14",
    "call    __strcpy_chk",
    "jmp     0x112586",
    "mov     edx, ebx",
    "mov     rdi, rax",
    "mov     rsi, r12",
    "call    sub_1104c0",
    "mov     rdi, r14",
    "mov     rbx, rax",
    "call    free",
    "test    rbx, rbx",
    "jne     0x112586",
    "mov     rdi, r13",
    "call    free",
    "call    endpwent",
    "nop     dword [rax]"
  ]
}
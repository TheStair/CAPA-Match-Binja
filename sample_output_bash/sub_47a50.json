{
  "address": "0x47a50",
  "rules": [
    "contain loop"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "movzx   eax, byte [rdi]",
    "test    al, al",
    "je      0x47a80",
    "mov     rbx, qword [rel data_161050]",
    "test    rbx, rbx",
    "je      0x47b06",
    "cmp     al, 0x3b",
    "jne     0x47b20",
    "mov     qword [rel data_161050], 0x0",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "lea     r12, [rel data_120c5d[9]]  {\"\\n\"}",
    "xor     eax, eax",
    "lea     r14, [rel data_11fbd6[2]]  {\"%s%s\"}",
    "mov     rdi, r12",
    "call    sub_473b0",
    "nop     dword [rax]",
    "mov     rsi, r13",
    "lea     rdi, [rel data_1217ad[6]]  {\"%s\"}",
    "xor     eax, eax",
    "call    sub_473b0",
    "jmp     0x47a80",
    "cmp     byte [rdi+0x1], 0x0",
    "jne     0x47b20",
    "mov     rax, qword [rbx+0x20]",
    "mov     rdx, qword [rbx+0x28]",
    "mov     rdi, r14",
    "mov     rsi, qword [rax]",
    "xor     eax, eax",
    "call    sub_473b0",
    "mov     rdi, r12",
    "xor     eax, eax",
    "call    sub_473b0",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0x47aa8",
    "mov     dword [rel data_16105c], 0x1",
    "movzx   eax, byte [r13]",
    "test    al, al",
    "je      0x47af0",
    "nop     word [rax+rax]",
    "mov     rdi, qword [rel data_161050]",
    "call    dispose_redirects",
    "mov     dword [rel data_16105c], 0x1",
    "cmp     al, 0x3b",
    "jne     0x47b40",
    "lea     rdi, [rel data_1204ae[4]]  {\" \"}",
    "xor     eax, eax",
    "call    sub_473b0",
    "jmp     0x47af0",
    "cmp     byte [r13+0x1], 0x0",
    "jne     0x47b40",
    "nop     dword [rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
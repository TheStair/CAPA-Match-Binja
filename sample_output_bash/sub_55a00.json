{
  "address": "0x55a00",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdi",
    "push    r14",
    "mov     r14, rdx",
    "push    r13",
    "mov     r13, rsi",
    "push    r12",
    "mov     r12d, r8d",
    "push    rbx",
    "sub     rsp, 0x18",
    "test    ecx, ecx",
    "je      0x55b90",
    "xor     edx, edx",
    "mov     rsi, r14",
    "mov     dword [rbp-0x38], ecx",
    "call    hash_search",
    "test    rax, rax",
    "je      0x55a29",
    "mov     rsi, r14",
    "mov     rdi, r15",
    "mov     rbx, qword [rax+0x10]",
    "mov     qword [rel data_1619d8], r14",
    "test    rbx, rbx",
    "je      0x55a29",
    "test    al, 0x1",
    "jne     0x55a63",
    "or      eax, 0x1",
    "mov     dword [rbx+0x28], eax",
    "mov     eax, dword [rbx+0x28]",
    "mov     r9d, dword [rbp-0x38]",
    "mov     edx, eax",
    "and     edx, 0x1800",
    "cmp     edx, 0x800",
    "je      0x55d10",
    "lea     rax, [rel array_needs_making]",
    "mov     dword [rax], 0x1",
    "jmp     0x55b78",
    "add     rsp, 0x18",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rdx, [rel global_variables]",
    "mov     rdx, qword [rdx]",
    "cmp     qword [rdx+0x20], r14",
    "jne     0x55bdd",
    "cmp     edx, 0x1800",
    "je      0x55c30",
    "test    ah, 0x8",
    "jne     0x55db8",
    "mov     rdi, qword [rbx]",
    "call    find_global_variable",
    "mov     r9d, dword [rbp-0x38]",
    "test    rax, rax",
    "mov     rbx, rax",
    "je      0x5618f",
    "test    r12b, 0x20",
    "jne     0x55cf0",
    "mov     rbx, qword [rbx+0x8]",
    "test    rbx, rbx",
    "je      0x55dee",
    "cmp     qword [rbx+0x20], 0x0",
    "je      0x55a78",
    "xor     esi, esi",
    "mov     rdi, r15",
    "mov     dword [rbp-0x38], r9d",
    "call    find_variable_last_nameref",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x55c6e",
    "mov     eax, dword [rax+0x28]",
    "mov     edx, eax",
    "and     edx, 0x1800",
    "jmp     0x55bd5",
    "test    al, 0x2",
    "je      0x55a83",
    "test    r13, r13",
    "je      0x56000",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, rbx",
    "xor     ebx, ebx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0x55b78",
    "cmp     byte [rbx], 0x0",
    "mov     dword [rbp-0x38], r9d",
    "je      0x55dee",
    "mov     eax, dword [rbx+0x28]",
    "test    al, 0x2",
    "jne     0x55f40",
    "test    al, 0x2",
    "je      0x55c78",
    "xor     ebx, ebx",
    "jmp     0x55b78",
    "mov     eax, dword [rax+0x28 {Elf64_Header::section_header_offset.d}]",
    "mov     r9d, dword [rbp-0x38]",
    "mov     edx, eax",
    "and     edx, 0x1800",
    "jmp     0x55bd5",
    "test    ah, 0x40",
    "jne     0x55b78",
    "test    ah, 0x40",
    "je      0x55a8c",
    "test    al, 0x2",
    "jne     0x55c08",
    "cmp     byte [r13], 0x0",
    "jne     0x55f50",
    "mov     rdi, rbx",
    "call    legal_identifier",
    "mov     r9d, dword [rbp-0x38]",
    "test    eax, eax",
    "jne     0x55e18",
    "test    r12b, 0x20",
    "jne     0x55cf8",
    "test    ah, 0x40",
    "jne     0x55b78",
    "test    r12b, 0x20",
    "je      0x55c08",
    "mov     edx, eax",
    "and     dh, 0xef",
    "mov     dword [rbx+0x28], edx",
    "mov     edx, eax",
    "and     edx, 0x44",
    "test    r12b, 0x1",
    "je      0x55d50",
    "jmp     0x55c08",
    "mov     r12, qword [rbx]",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fcf9]  {\"%s: readonly variable\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "mov     rsi, r12",
    "xor     eax, eax",
    "call    report_error",
    "jmp     0x55b78",
    "jmp     0x55a83",
    "mov     rdi, r13",
    "call    legal_identifier",
    "test    eax, eax",
    "jne     0x55f70",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rdi, rbx",
    "mov     dword [rbp-0x38], r9d",
    "call    tokenize_array_reference",
    "test    eax, eax",
    "je      0x55f10",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rdi, rbx",
    "call    tokenize_array_reference",
    "mov     r9d, dword [rbp-0x38]",
    "test    eax, eax",
    "jne     0x55e18",
    "jmp     0x55c08",
    "mov     rdi, qword [rbx+0x10]",
    "test    rdi, rdi",
    "je      0x55c97",
    "test    ah, 0x40",
    "je      0x55c81",
    "test    edx, edx",
    "jne     0x55f20",
    "test    edx, edx",
    "jne     0x55f20",
    "mov     eax, dword [rbx+0x28]",
    "test    al, 0x2",
    "jne     0x55c08",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rdi, r13",
    "call    tokenize_array_reference",
    "test    eax, eax",
    "je      0x55c4e",
    "mov     rsi, r14",
    "mov     rdi, rbx",
    "jmp     0x55a2f",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rdi, rbx",
    "call    array_variable_name",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x55ed8",
    "mov     r14, r13",
    "test    r12b, 0x1",
    "jne     0x56078",
    "call    free",
    "mov     qword [rbx+0x10], 0x0",
    "nop     dword [rax]",
    "mov     r8d, r12d",
    "mov     rcx, r13",
    "lea     rdx, [rel data_121b60]  {\"0\"}",
    "xor     esi, esi",
    "mov     rdi, rbx",
    "call    make_array_variable_value",
    "mov     r12, rax",
    "jmp     0x55d71",
    "nop     dword [rax+rax]",
    "test    eax, 0x4712",
    "jne     0x55d60",
    "jmp     0x55a83",
    "call    sub_54b40",
    "mov     edx, r12d",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "mov     rbx, rax",
    "call    make_variable_value",
    "mov     qword [rbx+0x8], rax",
    "mov     eax, dword [rbx+0x28]",
    "mov     rdi, r15",
    "call    free",
    "mov     edx, r12d",
    "mov     rdi, rbx",
    "xor     ecx, ecx",
    "or      edx, 0x10",
    "mov     rsi, r13",
    "call    assign_array_element",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x55c6e",
    "lea     rax, [rel expanding_redir]",
    "mov     r9d, dword [rbp-0x38]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "jne     0x55e76",
    "mov     edx, r12d",
    "mov     rsi, r13",
    "mov     rdi, rbx",
    "call    make_variable_value",
    "mov     r14, rax",
    "jmp     0x55ca4",
    "mov     eax, dword [rbx+0x28]",
    "mov     r12, qword [rbx+0x20]",
    "test    al, 0x40",
    "jne     0x56050",
    "mov     rdi, qword [rbx+0x10]",
    "test    rdi, rdi",
    "je      0x55d87",
    "mov     eax, dword [rbx+0x28]",
    "test    al, 0x40",
    "jne     0x56010",
    "call    free",
    "mov     qword [rbx+0x10], 0x0",
    "mov     edx, r12d",
    "mov     rsi, r13",
    "mov     rdi, rbx",
    "call    make_variable_value",
    "mov     r12, rax",
    "mov     rdi, qword [rbx+0x10]",
    "test    rdi, rdi",
    "je      0x55acc",
    "mov     eax, dword [rbx+0x28]",
    "jmp     0x55a4c",
    "mov     esi, r9d",
    "mov     rdi, r15",
    "call    sub_502c0",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x55ed8",
    "lea     rax, [rel assigning_in_environment]",
    "lea     rdx, [rel executing_builtin]",
    "xor     r9d, r9d",
    "mov     eax, dword [rax]",
    "or      eax, dword [rdx]",
    "setne   r9b",
    "mov     edi, 0x2",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x56201",
    "xor     ecx, ecx",
    "test    al, 0x4",
    "jne     0x55f80",
    "mov     edi, 0x2",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x561e9",
    "mov     rdi, qword [rbx+0x8]",
    "test    al, 0x4",
    "jne     0x55f98",
    "mov     r12, qword [rbx+0x8]",
    "test    r12, r12",
    "je      0x55fb0",
    "call    free",
    "mov     qword [rbx+0x10], 0x0",
    "lea     rdx, [rel mark_modified_vars]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "je      0x55b70",
    "test    byte [rax+0x29 {Elf64_Header::section_header_offset+1.b}], 0x8",
    "je      0x55ed8",
    "mov     qword [rbp-0x38], rax",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     edi, 0x30",
    "mov     word [rcx], di",
    "jmp     0x55cbd",
    "mov     rdi, rbx",
    "xor     edx, edx",
    "mov     rsi, r14",
    "call    r12",
    "mov     rbx, rax",
    "jmp     0x55cd0",
    "mov     rdi, rbx",
    "mov     rdx, 0xffffffffffffffff",
    "mov     rsi, r14",
    "call    r12",
    "mov     rbx, rax",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     ecx, 0x30",
    "mov     rdx, r12",
    "mov     rsi, r13",
    "mov     word [r13], cx",
    "mov     rdi, qword [rbx+0x8]",
    "call    assoc_insert",
    "mov     rdi, r12",
    "call    free",
    "mov     eax, dword [rbx+0x28]",
    "jmp     0x55a4c",
    "mov     rdx, r12",
    "xor     esi, esi",
    "call    array_insert",
    "mov     rdi, r12",
    "call    free",
    "jmp     0x55eff",
    "test    rdi, rdi",
    "je      0x55dab",
    "test    r13, r13",
    "je      0x560e8",
    "cmp     byte [r12], 0x0",
    "jne     0x560b0",
    "mov     rax, qword [rax {Elf64_Header::ident.signature[0]}] {Elf64_Header::ident.signature[1]} {Elf64_Header::ident.signature[2]} {Elf64_Header::ident.signature[3]} {Elf64_Header::ident.file_class} {Elf64_Header::ident.encoding} {Elf64_Header::ident.version} {Elf64_Header::ident.os}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_132b80]  {\"%s: removing nameref attribute\"}",
    "xor     edi, edi",
    "mov     qword [rbp-0x38], rax",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x38]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_warning",
    "mov     rdi, qword [r14+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    rdi, rdi",
    "je      0x55ec5",
    "cmp     r14, r13",
    "je      0x55b78",
    "mov     rdi, r14",
    "call    free",
    "jmp     0x55b78",
    "mov     qword [rbx+0x8], r12",
    "jmp     0x55a4c",
    "call    free",
    "mov     eax, dword [rbx+0x28]",
    "mov     r14d, 0x8",
    "xor     edx, edx",
    "xor     r15d, r15d",
    "jmp     0x55fe0",
    "cmp     byte [r13], 0x0",
    "je      0x560e8",
    "cmp     byte [r12+0x1], 0x0",
    "jne     0x560f8",
    "xor     r15d, r15d",
    "mov     r14d, 0x8",
    "xor     edx, edx",
    "test    r13, r13",
    "je      0x55b18",
    "and     dword [r14+0x28 {Elf64_Header::section_header_offset.d}], 0xfffff7ff {Elf64_Header::section_header_offset.d}",
    "mov     qword [r14+0x8 {Elf64_Header::ident.abi_version}], 0x0 {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "nop     dword [rax]",
    "call    free",
    "mov     rdi, r14",
    "mov     qword [rbp-0x38], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x38]",
    "mov     r12, rax",
    "jmp     0x55b2e",
    "cmp     byte [r13+0x1], 0x0",
    "jne     0x5611c",
    "cmp     byte [r12+0x2], 0x0",
    "jne     0x56149",
    "mov     r15d, 0x1",
    "mov     r14d, 0x9",
    "xor     edx, edx",
    "test    r13, r13",
    "jne     0x55af4",
    "mov     rdi, r12",
    "mov     rsi, r14",
    "mov     qword [rbp-0x38], rdx",
    "call    realloc",
    "mov     rdx, qword [rbp-0x38]",
    "mov     r12, rax",
    "cmp     byte [r13], 0x0",
    "je      0x560d8",
    "test    r12, r12",
    "je      0x561cb",
    "xor     r15d, r15d",
    "mov     r14d, 0x9",
    "mov     edx, 0x1",
    "xor     r15d, r15d",
    "nop     dword [rax]",
    "mov     rdi, r12",
    "call    strlen",
    "mov     r15, rax",
    "test    r13, r13",
    "je      0x560d8",
    "mov     r15d, 0x2",
    "mov     r14d, 0xa",
    "xor     edx, edx",
    "test    r13, r13",
    "jne     0x55af4",
    "jmp     0x55b18",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x38], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rdi, [r12+r15]",
    "cmp     rdx, 0x1",
    "jne     0x56090",
    "lea     r14, [r15+0x8]",
    "xor     edx, edx",
    "jmp     0x55b18",
    "cmp     byte [r13+0x1], 0x0",
    "jne     0x5611f",
    "lea     r14, [r15+rdx+0x8]",
    "test    r12, r12",
    "jne     0x55b18",
    "mov     rdi, r13",
    "call    strlen",
    "mov     rdx, rax",
    "cmp     byte [r13], 0x0",
    "je      0x560d8",
    "jmp     0x55b18",
    "cmp     r15, r14",
    "mov     rdx, r14",
    "mov     rsi, r13",
    "cmovae  rdx, r15",
    "sub     rdx, r15",
    "call    __strcpy_chk",
    "jmp     0x55b52",
    "movzx   eax, byte [r13]",
    "mov     byte [rdi], al",
    "mov     byte [r12+r15+0x1], 0x0",
    "cmp     byte [r13+0x2], 0x0",
    "mov     edx, 0x2",
    "je      0x56136",
    "lea     r14, [r15+0x9]",
    "mov     edx, 0x1",
    "nop     dword [rax+rax]",
    "jmp     0x55fe0",
    "cmp     byte [r13+0x1], 0x0",
    "je      0x55b0a",
    "lea     rdx, [rel mark_modified_vars]",
    "mov     eax, dword [rbx+0x28]",
    "mov     qword [rbx+0x8], r12",
    "mov     esi, dword [rdx]",
    "test    esi, esi",
    "jne     0x55a5d",
    "nop     word [rax+rax]",
    "cmp     byte [r13+0x2], 0x0",
    "je      0x561bd",
    "lea     r14, [r15+0xa]",
    "mov     edx, 0x2",
    "jmp     0x55b18",
    "mov     rdi, r13",
    "call    strlen",
    "mov     rdx, rax",
    "lea     r14, [r15+rax+0x8]",
    "jmp     0x55b18"
  ]
}
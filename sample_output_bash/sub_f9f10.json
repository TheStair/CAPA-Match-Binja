{
  "address": "0xf9f10",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     dword [rbp-0x60], esi",
    "mov     dword [rbp-0x54], edx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], 0x0",
    "test    esi, esi",
    "jne     0xfa090",
    "mov     edi, dword [rbp-0x60]",
    "mov     r14d, dword [rbp-0x54]",
    "xor     r13d, r13d",
    "test    edi, edi",
    "jle     0xf9fa8",
    "and     ecx, 0x1",
    "je      0xfa090",
    "mov     eax, dword [rbp-0x60]",
    "mov     r15d, r13d",
    "sub     r15d, eax",
    "cmp     dword [rbp-0x54], r13d",
    "jle     0xfa060",
    "lea     rbx, [rel _rl_utf8locale]",
    "lea     r15, [rbp-0x40]",
    "jmp     0xfa0dc",
    "mov     r15d, dword [rel data_16a72c]",
    "cmp     r15d, edx",
    "je      0xfa180",
    "mov     eax, dword [rbp-0x54]",
    "mov     r8d, r13d",
    "sub     r8d, eax",
    "lea     eax, [r8+r15]",
    "lea     rax, [rbp-0x40]",
    "lea     rbx, [rel _rl_utf8locale]",
    "mov     qword [rbp-0x60], rax",
    "jmp     0xfa00d",
    "mov     ecx, dword [rbx]",
    "movsxd  rsi, r13d",
    "add     rsi, r12",
    "test    ecx, ecx",
    "je      0xfa0b0",
    "mov     rsi, qword [rel data_16a738]",
    "movsxd  rdx, r15d",
    "mov     r14d, r15d",
    "xor     r13d, r13d",
    "call    memcmp",
    "test    eax, eax",
    "jne     0xf9fa8",
    "test    r15d, r15d",
    "jle     0xfa170",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     edx, dword [rbx]",
    "movsxd  rsi, r13d",
    "add     rsi, r12",
    "test    edx, edx",
    "jne     0xf9fd0",
    "xor     edi, edi",
    "movsxd  rdx, r14d",
    "mov     rcx, r15",
    "call    mbrtowc",
    "cmp     eax, 0xfffffffe",
    "jae     0xfa100",
    "cmp     byte [rsi], 0x0",
    "js      0xfa0b0",
    "mov     eax, dword [rel data_16a700]",
    "add     eax, dword [rel data_16a720]",
    "jmp     0xfa06d",
    "mov     r14d, dword [rbp-0x54]",
    "xor     r13d, r13d",
    "jmp     0xf9fa8",
    "mov     eax, dword [rbp-0x54]",
    "cmp     r15d, eax",
    "jge     0xfa170",
    "movsx   edi, byte [rsi]",
    "test    dil, dil",
    "js      0xfa019",
    "mov     rcx, qword [rbp-0x60]",
    "movsxd  rdx, r14d",
    "lea     rdi, [rbp-0x44]",
    "call    mbrtowc",
    "cmp     eax, 0xfffffffe",
    "jae     0xfa118",
    "mov     qword [r15], 0x0",
    "add     r13d, 0x1",
    "sub     r14d, 0x1",
    "jmp     0xfa0d2",
    "mov     edx, eax",
    "test    eax, eax",
    "je      0xf9fa8",
    "mov     qword [r15], 0x0",
    "mov     edx, 0x1",
    "jmp     0xfa0cc",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xfa1fc",
    "mov     rsi, qword [rel data_16a738]",
    "mov     r14d, eax",
    "xor     r13d, r13d",
    "test    rsi, rsi",
    "je      0xf9fa8",
    "mov     dword [rbp-0x44], edi",
    "add     r13d, 0x1",
    "sub     r14d, 0x1",
    "mov     rax, qword [rbp-0x60]",
    "add     r13d, 0x1",
    "sub     r14d, 0x1",
    "add     r15d, 0x1",
    "mov     qword [rax], 0x0",
    "jmp     0xfa007",
    "test    eax, eax",
    "je      0xfa060",
    "cmp     dword [rbp-0x60], r13d",
    "jle     0xf9fa8",
    "add     r13d, edx",
    "sub     r14d, edx",
    "movsxd  rdx, r15d",
    "xor     r13d, r13d",
    "call    memcmp",
    "mov     r14d, dword [rbp-0x54]",
    "test    eax, eax",
    "je      0xfa1ae",
    "lea     eax, [rdi-0x61]",
    "cmp     eax, 0x1d",
    "jbe     0xfa003",
    "cmp     edi, 0x40",
    "jg      0xfa003",
    "cmp     dword [rbp-0x54], r13d",
    "jle     0xfa060",
    "add     r13d, eax",
    "sub     r14d, eax",
    "mov     eax, dword [rbx]",
    "mov     edi, dword [rbp-0x44]",
    "test    eax, eax",
    "je      0xf9fe3",
    "mov     eax, dword [rel data_16a700]",
    "add     eax, dword [rel data_16a720]",
    "mov     ebx, eax",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xfa1f3",
    "nop     dword [rax]",
    "add     r15d, 0x1",
    "call    wcwidth",
    "lea     edx, [r15+rax]",
    "add     r15d, 0x1",
    "test    eax, eax",
    "cmovns  r15d, edx",
    "jmp     0xfa007",
    "cmp     edi, 0x23",
    "jg      0xfa160",
    "cmp     edi, 0x5f",
    "jg      0xfa138",
    "lea     eax, [rdi-0x300]",
    "cmp     eax, 0x6f",
    "ja      0xf9fe3",
    "mov     r13d, dword [rbp-0x54]",
    "sub     r13d, r15d",
    "jmp     0xfa1ea",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "jne     0xfa1f3",
    "lea     eax, [rdi-0x25]",
    "cmp     eax, 0x1a",
    "jbe     0xfa003",
    "cmp     edi, 0x1f",
    "jle     0xfa144",
    "cmp     dword [rbp-0x54], r13d",
    "jg      0xfa00d",
    "lea     eax, [rbx+r13]",
    "jmp     0xfa06d",
    "mov     edx, dword [rbp-0x54]",
    "mov     ecx, 0x1",
    "mov     esi, r15d",
    "mov     rdi, r12",
    "call    sub_f9f10",
    "mov     r13d, eax",
    "jmp     0xfa144",
    "nop     word [rax+rax]"
  ]
}
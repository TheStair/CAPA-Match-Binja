{
  "address": "0x1132c0",
  "rules": [
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check for trap flag exception/7da32d506824459ca912c2b975c8e4be",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "xor     r15d, r15d  {0x0}",
    "push    r14 {__saved_r14}",
    "lea     r14, [rel data_1349e8]",
    "push    r13 {__saved_r13}",
    "xor     r13d, r13d  {0x0}",
    "push    r12 {__saved_r12}",
    "mov     r12, rdi",
    "push    rbx {__saved_rbx}",
    "mov     rdi, r12",
    "lea     rbx, [rel jump_table_138d74]",
    "sub     rsp, 0x68",
    "mov     qword [rbp-0x68 {var_70}], rsi",
    "mov     rsi, r14  {data_1349e8, \"abcdefgjko:prsuvA:G:W:P:S:X:F:C:\u2026\"}",
    "mov     qword [rbp-0x80 {var_88}], rdx",
    "mov     qword [rbp-0x88 {var_90}], rcx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38 {var_40}], rax",
    "lea     rax, [rel loptend]",
    "mov     qword [rbp-0x78 {var_80}], 0x0",
    "mov     qword [rel data_168d30], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rax], 0x0  {loptend}",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rax], 0x0  {lcurrent}",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0x1133fa",
    "mov     rax, qword [rbp-0x80 {var_88}]",
    "mov     rcx, qword [rbp-0x78 {var_80}]",
    "mov     qword [rax], r15",
    "mov     rax, qword [rbp-0x88 {var_90}]",
    "mov     qword [rax], rcx",
    "mov     eax, r13d",
    "xor     eax, 0x1",
    "jmp     0x1133b0",
    "nop     dword [rax]",
    "mov     rdx, qword [rbp-0x38 {var_40}]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x1138c4",
    "call    builtin_help",
    "jmp     0x1133a5",
    "sub     eax, 0x41",
    "cmp     eax, 0x35",
    "ja      0x1133a0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x68",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "mov     eax, 0x102",
    "nop     word [rax+rax]",
    "{Case 0x1, 0x7, 0x9-0xe, 0x10-0x11, 0x13-0x15, 0x18-0x1f, 0x27-0x28, 0x2b-0x2d, 0x30, 0x33}",
    "call    builtin_usage",
    "movsxd  rax, dword [rbx+rax*4]",
    "add     rax, rbx",
    "jmp     rax",
    "{Case 0x35}",
    "or      r15, 0x800000",
    "nop     ",
    "{Case 0x34}",
    "or      r15, 0x400000",
    "jmp     0x1133e0",
    "{Case 0x32}",
    "or      r15, 0x20000",
    "jmp     0x1133e0",
    "{Case 0x31}",
    "mov     rax, qword [rbp-0x68 {var_70}]",
    "test    rax, rax",
    "je      0x113856",
    "{Case 0x2f}",
    "mov     rax, qword [rbp-0x68 {var_70}]",
    "test    rax, rax",
    "je      0x113373",
    "{Case 0x2e}",
    "lea     rax, [rel list_optarg]",
    "lea     rdx, [rel data_1551d0]",
    "xor     r13d, r13d  {0x0}",
    "lea     rsi, [rel data_121bb2]  {\"bashdefault\"}",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rbp-0x70 {var_78_1}], rax",
    "movzx   r8d, byte [rax]",
    "mov     eax, 0x62",
    "jmp     0x1134c7",
    "{Case 0x2a}",
    "or      r15, 0x8000",
    "jmp     0x1133e0",
    "{Case 0x26}",
    "or      r15, 0x800",
    "jmp     0x1133e0",
    "{Case 0x25}",
    "or      r15, 0x200",
    "jmp     0x1133e0",
    "{Case 0x29}",
    "or      r15, 0x4000",
    "jmp     0x1133e0",
    "{Case 0x24}",
    "or      r15, 0x100",
    "jmp     0x1133e0",
    "{Case 0x23}",
    "or      r15, 0x20",
    "jmp     0x1133e0",
    "{Case 0x22}",
    "or      r15, 0x10",
    "jmp     0x1133e0",
    "{Case 0x21}",
    "or      r15, 0x8",
    "jmp     0x1133e0",
    "{Case 0x20}",
    "or      r15, 0x1",
    "jmp     0x1133e0",
    "{Case 0x17}",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rel data_168fc0], rax",
    "jmp     0x1133e0",
    "{Case 0x16}",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rel data_168fa8], rax",
    "jmp     0x1133e0",
    "{Case 0x12}",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rel data_168fb8], rax",
    "jmp     0x1133e0",
    "{Case 0xf}",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rel data_168fb0], rax",
    "jmp     0x1133e0",
    "{Case 0x8}",
    "mov     rax, qword [rbp-0x68 {var_70}]",
    "test    rax, rax",
    "je      0x113896",
    "{Case 0x6}",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rel data_168fa0], rax",
    "jmp     0x1133e0",
    "{Case 0x5}",
    "lea     rax, [rel list_optarg]",
    "lea     rdi, [rbp-0x50 {list_optarg_4}]",
    "mov     dword [rbp-0x48 {var_50_1}], 0x0",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rel data_168fc8], rax",
    "mov     qword [rbp-0x50 {list_optarg_4}], rax",
    "lea     rax, [rel posixly_correct]",
    "mov     esi, dword [rax]  {posixly_correct}",
    "call    check_identifier",
    "mov     r13, qword [rel data_168fc8]",
    "test    eax, eax",
    "je      0x1136b1",
    "{Case 0x4}",
    "mov     rax, qword [rbp-0x68 {var_70}]",
    "test    rax, rax",
    "je      0x1137d2",
    "{Case 0x3}",
    "mov     rax, qword [rbp-0x68 {var_70}]",
    "test    rax, rax",
    "je      0x113800",
    "{Case 0x2}",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rel data_168fd0], rax",
    "jmp     0x1133e0",
    "{Case 0x0}",
    "lea     rax, [rel list_optarg]",
    "lea     rdx, [rel data_155278]",
    "xor     r13d, r13d  {0x0}",
    "lea     rsi, [rel data_11fa38]  {\"alias\"}",
    "mov     rax, qword [rax]  {list_optarg}",
    "mov     qword [rbp-0x70 {var_78_1}], rax",
    "movzx   r8d, byte [rax]",
    "mov     eax, 0x61",
    "jmp     0x113787",
    "cmp     eax, 0xffffff9d",
    "je      0x1137c8",
    "mov     rsi, r14  {data_1349e8, \"abcdefgjko:prsuvA:G:W:P:S:X:F:C:\u2026\"}",
    "mov     rdi, r12",
    "mov     r13d, 0x1",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "jne     0x113358",
    "mov     edx, 0x5",
    "xor     edi, edi  {0x0}",
    "lea     rsi, [rel data_11f222]  {\"%s: invalid option\"}",
    "call    dcgettext",
    "lea     rsi, [rel data_122f4e]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "call    builtin_usage",
    "jmp     0x1133a5",
    "mov     dword [rax+0x4], 0x1",
    "jmp     0x1133e0",
    "lea     rsi, [rel data_11f222]  {\"%s: invalid option\"}",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "call    dcgettext",
    "lea     rsi, [rel data_11f753]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "nop     word [rax+rax]",
    "mov     dword [rax], 0x1",
    "jmp     0x1133e0",
    "cmp     r8b, al",
    "jne     0x1134b0",
    "mov     edx, 0x5",
    "xor     edi, edi  {0x0}",
    "lea     rsi, [rel data_11f222]  {\"%s: invalid option\"}",
    "call    dcgettext",
    "lea     rsi, [rel data_121baf]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "call    builtin_usage",
    "jmp     0x1133a5",
    "mov     dword [rax+0x10], 0x1",
    "jmp     0x1133e0",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "call    dcgettext",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "jmp     0x1133a5",
    "lea     rsi, [rel data_120c5d]  {\"()<>;&| \\t\\n\"}",
    "mov     rdi, r13",
    "call    strpbrk",
    "test    rax, rax",
    "je      0x1133e0",
    "mov     edx, 0x5",
    "xor     edi, edi  {0x0}",
    "lea     rsi, [rel data_11f222]  {\"%s: invalid option\"}",
    "call    dcgettext",
    "lea     rsi, [rel data_121bac]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "call    builtin_usage",
    "jmp     0x1133a5",
    "mov     dword [rax+0xc], 0x1",
    "jmp     0x1133e0",
    "mov     edx, 0x5",
    "xor     edi, edi  {0x0}",
    "lea     rsi, [rel data_11f222]  {\"%s: invalid option\"}",
    "call    dcgettext",
    "lea     rsi, [rel data_121ba9]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "call    builtin_usage",
    "jmp     0x1133a5",
    "mov     dword [rax+0x8], 0x1",
    "jmp     0x1133e0",
    "cmp     al, r8b",
    "jne     0x113770",
    "mov     rsi, qword [rdx]",
    "add     rdx, 0x10",
    "add     r13d, 0x1",
    "test    rsi, rsi",
    "je      0x113888",
    "mov     rdi, qword [rbp-0x70 {var_78_1}]",
    "mov     qword [rbp-0x60 {var_68_1}], rdx",
    "mov     byte [rbp-0x51 {var_59_1}], r8b",
    "call    strcmp",
    "movzx   r8d, byte [rbp-0x51 {var_59_1}]",
    "mov     rdx, qword [rbp-0x60 {var_68_1}]",
    "test    eax, eax",
    "jne     0x1134b0",
    "mov     rsi, qword [rdx]",
    "add     rdx, 0x18",
    "add     r13d, 0x1",
    "test    rsi, rsi",
    "je      0x113830",
    "mov     rdi, qword [rbp-0x70 {var_78_1}]",
    "mov     qword [rbp-0x60 {var_68_2}], rdx",
    "mov     byte [rbp-0x51 {var_59_2}], r8b",
    "call    strcmp",
    "movzx   r8d, byte [rbp-0x51 {var_59_2}]",
    "mov     rdx, qword [rbp-0x60 {var_68_2}]",
    "test    eax, eax",
    "jne     0x113770",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1210b0]  {\"%s: invalid option name\"}",
    "jmp     0x11383c",
    "movzx   eax, byte [rsi]",
    "movsxd  rcx, r13d",
    "lea     rax, [rel data_1551c0]",
    "shl     rcx, 0x4",
    "mov     rax, qword [rax+rcx+0x8]",
    "or      qword [rbp-0x78 {var_80}], rax",
    "jmp     0x1133e0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_122f51]  {\"%s: invalid action name\"}",
    "movzx   eax, byte [rsi]",
    "movsxd  rcx, r13d",
    "lea     rax, [rel data_155260]",
    "lea     rdx, [rcx+rcx*2]",
    "or      r15, qword [rax+rdx*8+0x8]",
    "jmp     0x1133e0",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x70 {var_78_1}]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "jmp     0x1133a5"
  ]
}
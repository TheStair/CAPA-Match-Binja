{
  "address": "0x9dcf0",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "contain loop",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdi",
    "mov     rdi, rsi",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdx",
    "sub     rsp, 0x58",
    "mov     qword [rbp-0x40], rsi",
    "mov     qword [rbp-0x60], rdx",
    "mov     dword [rbp-0x64], ecx",
    "call    strlen",
    "mov     rdi, rbx",
    "mov     r13, rax",
    "call    strlen",
    "mov     rsi, rax",
    "movzx   eax, byte [r15]",
    "test    al, al",
    "je      0x9df98",
    "mov     rdi, r15",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x9dfe1",
    "xor     ecx, ecx",
    "xor     r14d, r14d",
    "xor     r12d, r12d",
    "xor     ebx, ebx",
    "mov     edx, 0x1",
    "test    r13, r13",
    "mov     qword [rbp-0x38], r13",
    "mov     r10, r15",
    "cmovne  rdx, r13",
    "mov     r11d, 0x1",
    "mov     qword [rbp-0x58], rsi",
    "mov     r13d, r11d",
    "mov     qword [rbp-0x70], rdx",
    "jmp     0x9dd8e",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "add     rsp, 0x58",
    "mov     rdx, rbx",
    "mov     rsi, r15",
    "mov     rdi, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "test    r13d, r13d",
    "je      0x9ddaa",
    "lea     rdx, [rbx+0x1]",
    "cmp     rdx, r12",
    "jb      0x9dd70",
    "cmp     qword [rbp-0x38], 0x0",
    "je      0x9de80",
    "movzx   eax, byte [r15]",
    "add     r14, 0x1",
    "lea     r15, [r10+r14]",
    "mov     byte [rcx+rbx], al",
    "movzx   eax, byte [r15]",
    "mov     rbx, rdx",
    "test    al, al",
    "je      0x9dee8",
    "mov     rax, rdx",
    "sub     rax, r12",
    "add     r12, 0x10",
    "shr     rax, 0x4",
    "and     eax, 0x1",
    "cmp     rdx, r12",
    "jb      0x9dde9",
    "mov     rax, qword [rbp-0x58]",
    "test    rax, rax",
    "je      0x9de95",
    "mov     rdi, qword [rbp-0x40]",
    "cmp     byte [rdi], al",
    "je      0x9de50",
    "mov     r15, r10",
    "test    rcx, rcx",
    "je      0x9df98",
    "mov     qword [rbp-0x50], r10",
    "mov     qword [rbp-0x48], rdx",
    "test    rcx, rcx",
    "je      0x9df10",
    "test    rax, rax",
    "je      0x9dde0",
    "mov     rdi, qword [rbp-0x60]",
    "movzx   eax, byte [rdi]",
    "test    al, al",
    "je      0x9dec0",
    "add     rax, rbx",
    "cmp     rax, r12",
    "jae     0x9df30",
    "mov     rdx, qword [rbp-0x38]",
    "mov     rsi, rdi",
    "mov     rdi, r15",
    "mov     qword [rbp-0x50], r10",
    "mov     qword [rbp-0x48], rcx",
    "call    strncmp",
    "mov     rcx, qword [rbp-0x48]",
    "mov     r10, qword [rbp-0x50]",
    "test    eax, eax",
    "jne     0x9ddaa",
    "mov     byte [rcx+rbx], 0x0",
    "add     rsp, 0x58",
    "mov     rax, rcx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r10, qword [rbp-0x50]",
    "mov     rdx, qword [rbp-0x48]",
    "mov     rcx, rax",
    "jmp     0x9de10",
    "mov     rdi, rcx",
    "mov     rsi, r12",
    "call    realloc",
    "mov     rdx, qword [rbp-0x48]",
    "mov     r10, qword [rbp-0x50]",
    "mov     rcx, rax",
    "add     r12, 0x20",
    "cmp     rdx, r12",
    "jae     0x9dde0",
    "add     r12, 0x10",
    "cmp     rdx, r12",
    "jb      0x9dde9",
    "mov     rax, qword [rbp-0x70]",
    "xor     r13d, r13d",
    "add     r14, rax",
    "mov     eax, dword [rbp-0x64]",
    "lea     r15, [r10+r14]",
    "test    eax, eax",
    "movzx   eax, byte [r15]",
    "setne   r13b",
    "test    al, al",
    "jne     0x9dd8e",
    "sub     rdi, rbx",
    "mov     rdx, rdi",
    "nop     word [rax+rax]",
    "mov     rsi, qword [rbp-0x58]",
    "lea     rdx, [rsi+rsi]",
    "nop     dword [rax+rax]",
    "nop     word [rax+rax]",
    "test    rcx, rcx",
    "jne     0x9dd70",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x78], r10",
    "mov     qword [rbp-0x50], rcx",
    "mov     qword [rbp-0x48], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "nop     word [rax+rax]",
    "nop     dword [rax+rax]",
    "add     rbx, 0x1",
    "mov     byte [rcx+rbx-0x1], al",
    "movzx   eax, byte [rdx+rbx]",
    "test    al, al",
    "jne     0x9deb0",
    "add     r12, rdx",
    "cmp     rax, r12",
    "jae     0x9df40",
    "mov     qword [rbp-0x48], r10",
    "test    rcx, rcx",
    "je      0x9dfd0",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r10, qword [rbp-0x48]",
    "mov     rcx, rax",
    "jmp     0x9df63",
    "mov     rdi, rcx",
    "mov     rsi, r12",
    "call    realloc",
    "mov     r10, qword [rbp-0x48]",
    "mov     rcx, rax",
    "test    rcx, rcx",
    "jne     0x9de95",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x50], r10",
    "mov     qword [rbp-0x48], rcx",
    "call    sub_a7f00",
    "{ Does not return }"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
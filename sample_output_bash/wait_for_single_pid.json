{
  "address": "0x6bbd0",
  "rules": [
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "contain loop",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "inject pe/3f5cef47f45844dcbc97c901f875fe48"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15d, edi",
    "push    r14",
    "push    r13",
    "push    r12",
    "lea     r12, [rbp-0x140]",
    "push    rbx",
    "lea     rbx, [rbp-0xc0]",
    "mov     rdi, rbx",
    "sub     rsp, 0x128",
    "mov     dword [rbp-0x144], esi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r12",
    "call    sigemptyset",
    "xor     edi, edi",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "call    sigprocmask",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     edi, r15d",
    "call    sub_67850",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "mov     r14, rax",
    "call    sigprocmask",
    "test    r14, r14",
    "je      0x6be30",
    "lea     rax, [rel bgpids]",
    "mov     rdx, qword [rax]",
    "test    rdx, rdx",
    "je      0x6be8d",
    "xor     esi, esi",
    "mov     edi, r15d",
    "call    wait_for",
    "mov     r13d, eax",
    "test    byte [rbp-0x144], 0x2",
    "je      0x6bcd5",
    "test    byte [rbp-0x144], 0x1",
    "jne     0x6bed9",
    "mov     r9d, dword [rax+0xc]",
    "test    r9d, r9d",
    "je      0x6be8d",
    "mov     rdi, rbx",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     rsi, rbx",
    "mov     rdx, r12",
    "xor     edi, edi",
    "call    sigprocmask",
    "lea     rbx, [rel js]",
    "mov     eax, dword [rbx+0x1c]",
    "test    eax, eax",
    "jle     0x6bd38",
    "nop     dword [rax]",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133240]  {\"wait: pid %ld is not a child of \u2026\"}",
    "call    dcgettext",
    "movsxd  rsi, r15d",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "jmp     0x6be96",
    "mov     r13d, 0x101",
    "jmp     0x6bd90",
    "mov     r8d, dword [rax+0x10]",
    "test    r8d, r8d",
    "je      0x6be8d",
    "mov     edi, 0x2",
    "xor     edx, edx",
    "mov     rsi, r12",
    "call    sigprocmask",
    "lea     rax, [rel posixly_correct]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "jne     0x6be08",
    "lea     rdx, [rel jobs]",
    "movsxd  rcx, eax",
    "mov     rdi, qword [rdx]",
    "xor     edx, edx",
    "call    sigprocmask",
    "xor     esi, esi",
    "mov     edi, r15d",
    "call    wait_for",
    "mov     r13d, eax",
    "jmp     0x6bc78",
    "cmp     byte [r14+0xc], 0x7f",
    "jne     0x6bcd0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x6befb",
    "lea     rax, [rel pidstat_table]",
    "mov     ecx, r15d",
    "and     ecx, 0xfff",
    "mov     ecx, dword [rax+rcx*4]",
    "mov     ebx, ecx",
    "jmp     0x6be88",
    "mov     esi, dword [rbx+0x1c]",
    "test    esi, esi",
    "je      0x6be1e",
    "lea     rax, [rel wait_intr_flag]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x6bd90",
    "mov     rsi, qword [rax+0x8]",
    "mov     rax, rsi",
    "cmp     r15d, dword [rax+0x8]",
    "je      0x6bddf",
    "add     rdx, 0x1",
    "cmp     rdx, rcx",
    "jne     0x6bd1c",
    "mov     rdi, rbx",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r12",
    "call    sigemptyset",
    "xor     edi, edi",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "call    sigprocmask",
    "xor     edx, edx",
    "cmp     dword [r14+0x10], 0x1",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "je      0x6bcba",
    "call    sigprocmask",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x128",
    "mov     eax, r13d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     ebx, 0xffffffff",
    "jne     0x6be70",
    "mov     edi, r15d",
    "call    sub_114060",
    "jmp     0x6bd58",
    "mov     ecx, dword [rel data_160908]",
    "test    ecx, ecx",
    "jne     0x6be1e",
    "lea     rax, [rel wait_signal_received]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6bd90",
    "movsxd  rdx, edx",
    "mov     rax, qword [rdi+rdx*8]",
    "test    rax, rax",
    "je      0x6bd38",
    "mov     rax, qword [rax]",
    "cmp     rsi, rax",
    "je      0x6bd29",
    "mov     rax, qword [rdi+rdx*8]",
    "test    rax, rax",
    "jne     0x6bdc0",
    "nop     word [rax+rax]",
    "movsxd  rax, ebx",
    "shl     rax, 0x4",
    "add     rax, rdx",
    "cmp     r15d, dword [rax+0x8]",
    "je      0x6bea1",
    "call    sub_6aab0",
    "lea     rax, [rel this_shell_builtin]",
    "mov     rax, qword [rax]",
    "cmp     rax, qword [rel data_157ec8]",
    "jne     0x6bd90",
    "cmp     dword [rax+0x14], 0x4",
    "jne     0x6bd38",
    "cmp     r15d, dword [rax+0x8]",
    "jne     0x6bdcd",
    "movsx   r13d, word [rax+0xc]",
    "test    r13d, r13d",
    "jns     0x6bd90",
    "mov     eax, dword [rax]",
    "cmp     ecx, eax",
    "je      0x6beb8",
    "test    rax, rax",
    "jne     0x6bf00",
    "or      dword [rax+0x18], 0x2",
    "jmp     0x6bd38",
    "jmp     0x6be8d",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133208]  {\"bgp_search: LOOP: psi (%d) == st\u2026\"}",
    "call    dcgettext",
    "mov     esi, ebx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_warning",
    "jmp     0x6be8d",
    "mov     ebx, eax",
    "lea     rdi, [rel wait_intr_buf]",
    "mov     esi, 0x1",
    "call    __longjmp_chk",
    "{ Does not return }",
    "nop     "
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
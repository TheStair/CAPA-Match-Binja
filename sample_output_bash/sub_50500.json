{
  "address": "0x50500",
  "rules": [
    "contain loop"
  ],
  "disassembly": [
    "test    rdi, rdi",
    "je      0x505a0",
    "xor     eax, eax",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "mov     r13d, 0x8",
    "push    r12",
    "mov     r12, rsi",
    "push    rbx",
    "mov     rbx, rdi",
    "test    byte [rbx+0x29], 0x8",
    "je      0x50567",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "sub     r13d, 0x1",
    "je      0x50578",
    "pop     rbx",
    "lea     rax, [rel data_162e20]",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     rdi, qword [rbx+0x8]",
    "test    rdi, rdi",
    "je      0x50590",
    "pop     rbx",
    "xor     eax, eax",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "cmp     byte [rdi], 0x0",
    "je      0x50590",
    "mov     r14, qword [r12+0x20]",
    "xor     edx, edx",
    "mov     rsi, r14",
    "call    hash_search",
    "test    rax, rax",
    "je      0x50567",
    "mov     rax, qword [rax+0x10]",
    "mov     qword [rel data_1619d8], r14",
    "test    rax, rax",
    "je      0x50567",
    "mov     rbx, rax",
    "test    byte [rbx+0x29], 0x8",
    "jne     0x50526"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
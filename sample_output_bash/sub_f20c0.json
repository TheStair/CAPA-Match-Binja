{
  "address": "0xf20c0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "lea     rax, [rel data_122e02]",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "lea     r12, [rsi+0x8]",
    "push    rbx",
    "sub     rsp, 0x28",
    "test    rdx, rdx",
    "mov     dword [rbp-0x3c], edi",
    "cmovne  rax, rdx",
    "mov     qword [rbp-0x38], rdx",
    "xor     ebx, ebx",
    "mov     qword [rbp-0x48], rax",
    "jmp     0xf2186",
    "movzx   eax, byte [r12-0x8]",
    "cmp     al, 0x1",
    "jne     0xf2100",
    "cmp     al, 0x2",
    "jne     0xf2173",
    "cmp     qword [rbp-0x38], 0x0",
    "je      0xf2250",
    "add     ebx, 0x1",
    "add     r12, 0x10",
    "cmp     ebx, 0x101",
    "je      0xf2302",
    "mov     edi, ebx",
    "call    sub_eb3c0",
    "mov     rdi, qword [r12]",
    "xor     esi, esi",
    "mov     r13, rax",
    "call    _rl_untranslate_macro_value",
    "lea     r9, [rel data_122e02]",
    "mov     rcx, qword [rbp-0x48]",
    "mov     r8, r13",
    "mov     r14, rax",
    "test    rax, rax",
    "lea     rax, [rel rl_outstream]",
    "cmovne  r9, r14",
    "mov     rdi, qword [rax]",
    "mov     eax, dword [rbp-0x3c]",
    "test    eax, eax",
    "je      0xf2230",
    "cmp     ebx, 0x1b",
    "je      0xf22e0",
    "mov     rdi, qword [rbp-0x38]",
    "call    strlen",
    "mov     r15, rax",
    "cmp     ebx, 0x1b",
    "je      0xf2280",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rdx, [rel data_122a11]  {\"%s%s outputs %s\\n\"}",
    "mov     esi, 0x2",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "jmp     0xf2159",
    "lea     rdx, [rel data_122a03]  {\"\"%s%s\": \"%s\"\\n\"}",
    "mov     esi, 0x2",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "mov     edi, 0x3",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xf2338",
    "mov     edi, ebx",
    "call    sub_eb3c0",
    "mov     rsi, qword [r12]",
    "mov     edi, dword [rbp-0x3c]",
    "mov     rdx, rax",
    "mov     r14, rax",
    "call    sub_f20c0",
    "jmp     0xf2166",
    "lea     r14d, [rax+0x3]",
    "movsxd  r13, r14d",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xf2369",
    "mov     edi, ebx",
    "movsxd  r15, r15d",
    "call    sub_eb3c0",
    "mov     rdi, rax",
    "mov     qword [rbp-0x50], rax",
    "call    strlen",
    "lea     r13, [r15+rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xf2311",
    "test    r13, r13",
    "je      0xf2166",
    "test    r14, r14",
    "je      0xf2173",
    "mov     rdi, r13",
    "call    free",
    "mov     ecx, 0x3",
    "mov     rdx, rax",
    "mov     r13d, 0x2",
    "mov     eax, 0x1",
    "jmp     0xf22bd",
    "mov     rcx, r13",
    "jmp     0xf233d",
    "mov     rsi, qword [rbp-0x38]",
    "lea     rdx, [r15+0x1]",
    "mov     rcx, r13",
    "mov     rdi, rax",
    "movsxd  r13, r15d",
    "call    __memcpy_chk",
    "lea     rdx, [r14+r13]",
    "lea     rax, [r13+0x1]",
    "add     r13, 0x2",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, r13",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     rsi, qword [rbp-0x38]",
    "mov     rdx, r13",
    "mov     rdi, rax",
    "call    __strcpy_chk",
    "cmp     r15, r13",
    "mov     rdx, r13",
    "lea     rdi, [r14+r15]",
    "cmovae  rdx, r15",
    "sub     rdx, r15",
    "mov     r15, qword [rbp-0x50]",
    "mov     rsi, r15",
    "call    __strcpy_chk",
    "mov     rdi, r15",
    "call    free",
    "mov     rsi, qword [r12]",
    "mov     edi, dword [rbp-0x3c]",
    "mov     rdx, r14",
    "call    sub_f20c0",
    "jmp     0xf216b",
    "mov     rdi, r14",
    "call    free",
    "mov     rsi, qword [r12]",
    "mov     edi, dword [rbp-0x3c]",
    "mov     byte [rdx], 0x5c",
    "mov     rdx, r14",
    "mov     byte [r14+rax], 0x65",
    "mov     byte [r14+r13], 0x0",
    "call    sub_f20c0",
    "jmp     0xf216b",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "mov     qword [rbp-0x38], rcx",
    "call    dcgettext",
    "mov     rdx, qword [rbp-0x38]",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }"
  ]
}
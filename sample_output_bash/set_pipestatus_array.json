{
  "address": "0x5fbb0",
  "rules": [
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13d, esi",
    "push    r12",
    "lea     r12, [rel data_11f1a4]  {\"PIPESTATUS\"}",
    "push    rbx",
    "mov     rbx, rdi",
    "mov     rdi, r12",
    "sub     rsp, 0x38",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    find_variable",
    "test    rax, rax",
    "je      0x5fd88",
    "mov     rdi, r12",
    "call    make_new_array_variable",
    "jmp     0x5fbf2",
    "test    byte [rax+0x28 {Elf64_Header::section_header_offset.b}], 0x4",
    "je      0x5fc70",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x5fdc1",
    "mov     r12, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    r12, r12",
    "je      0x5fc98",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "movsxd  rax, r13d",
    "xor     r15d, r15d",
    "lea     r14, [rbp-0x44]",
    "mov     qword [rbp-0x58], rax",
    "test    r13d, r13d",
    "jle     0x5fc70",
    "mov     rax, qword [r12+0x8]",
    "test    rax, rax",
    "je      0x5fc98",
    "nop     dword [rax+rax]",
    "movsxd  r15, r13d",
    "cmp     rax, r15",
    "je      0x5fce8",
    "movsxd  rdi, dword [rbx+r15*4]",
    "xor     r8d, r8d",
    "mov     ecx, 0xc",
    "mov     rdx, r14",
    "mov     esi, 0xa",
    "call    fmtulong",
    "mov     rsi, r15",
    "mov     rdi, r12",
    "add     r15, 0x1",
    "mov     rdx, rax",
    "call    array_insert",
    "cmp     qword [rbp-0x58], r15",
    "jne     0x5fcb0",
    "jmp     0x5fc70",
    "cmp     r13d, 0x1",
    "je      0x5fd95",
    "jle     0x5fcf2",
    "mov     rax, qword [r12+0x10]",
    "mov     r12, qword [rax+0x10]",
    "mov     rdi, qword [r12+0x8]",
    "call    free",
    "movsxd  rdi, dword [rbx]",
    "call    itos",
    "mov     qword [r12+0x8], rax",
    "jmp     0x5fc70",
    "mov     r15, qword [r12+0x10]",
    "test    rax, rax",
    "jle     0x5fdba",
    "mov     rdi, r12",
    "call    array_flush",
    "test    r13d, r13d",
    "jle     0x5fc70",
    "xor     eax, eax",
    "jmp     0x5fd33",
    "xor     r14d, r14d",
    "nop     dword [rax+rax]",
    "xor     r13d, r13d",
    "lea     r14, [rbp-0x44]",
    "nop     dword [rax]",
    "cmp     r13d, eax",
    "jle     0x5fc70",
    "mov     r15, qword [r15+0x10]",
    "mov     rdi, qword [r15+0x8]",
    "call    free",
    "movsxd  rdi, dword [rbx+r14*4]",
    "call    itos",
    "mov     qword [r15+0x8], rax",
    "mov     rax, r14",
    "add     r14, 0x1",
    "cmp     qword [r12+0x8], r14",
    "jg      0x5fd08",
    "add     eax, 0x1",
    "movsxd  rdi, dword [rbx+r13*4]",
    "xor     r8d, r8d",
    "mov     ecx, 0xc",
    "mov     rdx, r14",
    "mov     esi, 0xa",
    "call    fmtulong",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "add     r13, 0x1",
    "mov     rdx, rax",
    "call    array_insert",
    "cmp     r15, r13",
    "jne     0x5fc40",
    "movsxd  r15, eax",
    "sub     r13d, eax",
    "lea     r14, [rbp-0x44]",
    "add     r13, r15",
    "nop     dword [rax]",
    "movsxd  rdi, dword [rbx+r15*4]",
    "xor     r8d, r8d",
    "mov     ecx, 0xc",
    "mov     rdx, r14",
    "mov     esi, 0xa",
    "call    fmtulong",
    "mov     rsi, r15",
    "mov     rdi, r12",
    "add     r15, 0x1",
    "mov     rdx, rax",
    "call    array_insert",
    "cmp     r13, r15",
    "jne     0x5fd50",
    "jmp     0x5fc70"
  ]
}
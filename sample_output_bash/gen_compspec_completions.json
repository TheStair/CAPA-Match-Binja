{
  "address": "0xac340",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "contain loop",
    "allocate or change RWX memory/86c3cb3db3894fa491c471a42be563f5",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdi",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     ebx, ecx",
    "sub     rsp, 0x88",
    "mov     qword [rbp-0x58], rdi",
    "mov     rdi, qword [rdi+0x8]",
    "mov     qword [rbp-0x68], rsi",
    "mov     rsi, rdx",
    "mov     qword [rbp-0x78], rdx",
    "mov     dword [rbp-0x80], r8d",
    "mov     qword [rbp-0x98], r9",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    sub_11a880",
    "mov     r15, qword [r15+0x18]",
    "mov     qword [rbp-0x60], rax",
    "test    r15, r15",
    "je      0xac454",
    "mov     rax, qword [rbp-0x58]",
    "mov     r12, qword [rax+0x20]",
    "test    r12, r12",
    "je      0xac61c",
    "mov     edi, 0x10",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xacf2d",
    "mov     rax, qword [rbp-0x58]",
    "cmp     qword [rax+0x40], 0x0",
    "je      0xacc80",
    "cmp     byte [r12], 0x0",
    "je      0xac61c",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rax], 0x0",
    "xor     esi, esi",
    "mov     rdi, r15",
    "mov     qword [rax+0x8], 0x0",
    "lea     rax, [rel glob_star]",
    "mov     r13d, dword [rax]",
    "test    r13d, r13d",
    "setne   sil",
    "shl     esi, 0xa",
    "call    glob_filename",
    "cmp     rax, qword [rel data_157f70]",
    "je      0xacdeb",
    "cmp     qword [rax+0x38], 0x0",
    "jne     0xac62b",
    "lea     rax, [rel pcomp_line]",
    "mov     r15d, dword [rbp-0x80]",
    "mov     esi, ebx",
    "mov     rdi, qword [rax]",
    "mov     edx, r15d",
    "call    substring",
    "sub     rsp, 0x8",
    "mov     esi, r15d",
    "lea     r9, [rbp-0x3c]",
    "mov     qword [rbp-0x88], rax",
    "mov     rdi, rax",
    "mov     r8d, 0x104",
    "sub     esi, ebx",
    "lea     rax, [rel rl_completer_word_break_characters]",
    "lea     r12, [rel pcomp_ind]",
    "mov     rdx, qword [rax]",
    "lea     rax, [rbp-0x40]",
    "mov     ecx, dword [r12]",
    "push    rax",
    "sub     ecx, ebx",
    "call    split_at_delims",
    "mov     qword [rbp-0x80], rax",
    "pop     r8",
    "pop     r9",
    "test    rax, rax",
    "je      0xac6b0",
    "mov     rdi, r12",
    "call    strlen",
    "sub     rsp, 0x8",
    "mov     rdi, r12",
    "xor     r9d, r9d",
    "push    0x0",
    "xor     r8d, r8d",
    "mov     ecx, 0xffffffff",
    "xor     edx, edx",
    "mov     esi, eax",
    "call    split_at_delims",
    "pop     r10",
    "pop     r11",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xac61c",
    "mov     qword [r12], 0x0",
    "jmp     0xac42f",
    "mov     qword [r12], rax",
    "test    rax, rax",
    "je      0xac42f",
    "cmp     qword [rbp-0x98], 0x0",
    "je      0xacbac",
    "mov     rax, qword [rbp-0x58]",
    "mov     rdi, qword [rax+0x38]",
    "test    rdi, rdi",
    "je      0xacd18",
    "mov     rax, qword [rax+0x8]",
    "test    rax, rax",
    "je      0xac6b0",
    "mov     esi, 0xe",
    "mov     rdi, rax",
    "call    sub_85ef0",
    "mov     rdi, r12",
    "mov     r15, rax",
    "mov     qword [rbp-0x90], rax",
    "call    dispose_words",
    "mov     rdx, r15",
    "test    r15, r15",
    "je      0xacf04",
    "mov     rdi, qword [rbp-0x60]",
    "mov     rsi, r12",
    "call    strlist_append",
    "mov     rdi, r12",
    "mov     qword [rbp-0x60], rax",
    "call    strlist_dispose",
    "lea     rax, [rel rl_filename_completion_desired]",
    "mov     dword [rax], 0x1",
    "cmp     qword [rax], 0x0",
    "je      0xacf0e",
    "mov     rax, qword [rbp-0x58]",
    "mov     rsi, qword [rax+0x50]",
    "test    rsi, rsi",
    "je      0xacbf2",
    "mov     rax, qword [rbp-0x98]",
    "mov     dword [rax], 0x1",
    "jmp     0xacbac",
    "mov     dword [rbp-0x90], 0x1",
    "mov     rax, qword [rax+0x40]",
    "test    rax, rax",
    "jne     0xac736",
    "lea     rax, [rbp-0x44]",
    "mov     r8d, dword [r12]",
    "mov     rsi, qword [rbp-0x68]",
    "mov     dword [rbp-0x44], 0x0",
    "mov     rcx, qword [rbp-0x88]",
    "mov     r9, qword [rbp-0x80]",
    "push    rax",
    "mov     eax, dword [rbp-0x40]",
    "mov     rdx, qword [rbp-0x78]",
    "sub     r8d, ebx",
    "push    rax",
    "call    sub_1191f0",
    "mov     ecx, dword [rbp-0x44]",
    "pop     rsi",
    "mov     r13, rax",
    "mov     eax, 0x1",
    "pop     rdi",
    "test    ecx, ecx",
    "cmovne  eax, ecx",
    "mov     dword [rbp-0x90], eax",
    "test    r13, r13",
    "je      0xac725",
    "mov     rcx, qword [rbp-0x68]",
    "cmp     byte [rcx], 0x0",
    "jne     0xac6b0",
    "mov     edi, 0x1",
    "jmp     0xac4e8",
    "xor     eax, eax",
    "nop     word [rax+rax]",
    "pxor    xmm0, xmm0",
    "jmp     0xac423",
    "mov     edx, 0x1",
    "nop     dword [rax+rax]",
    "mov     rax, qword [rbp-0x58]",
    "mov     rsi, qword [rax+0x28]",
    "mov     rdx, qword [rax+0x30]",
    "test    rsi, rsi",
    "je      0xaccb0",
    "mov     r15, qword [rbp-0x60]",
    "mov     rdx, qword [rbp-0x78]",
    "xor     eax, eax",
    "mov     rdi, r15",
    "call    filter_stringlist",
    "mov     rbx, rax",
    "test    r15, r15",
    "je      0xacbee",
    "mov     r13d, dword [rbp-0x40]",
    "mov     r15, qword [rbp-0x80]",
    "mov     r8d, 0x1",
    "mov     esi, dword [r12]",
    "mov     rdi, qword [rbp-0x88]",
    "mov     ecx, r13d",
    "mov     rdx, r15",
    "sub     esi, ebx",
    "call    sub_abda0",
    "mov     rbx, qword [rbp-0x58]",
    "mov     rdx, qword [rbp-0x78]",
    "mov     r8d, r13d",
    "mov     rsi, qword [rbp-0x68]",
    "mov     rcx, r15",
    "mov     rdi, qword [rbx+0x40]",
    "call    sub_ac110",
    "mov     r15, qword [rbx+0x40]",
    "mov     r14, rax",
    "mov     qword [rbp-0xa0], rax",
    "mov     rdi, r15",
    "call    strlen",
    "mov     r14, qword [r14]",
    "lea     ebx, [rax+0x1]",
    "mov     r12, rax",
    "mov     r13d, ebx",
    "test    r14, r14",
    "je      0xac7e3",
    "mov     rax, qword [rbp-0x58]",
    "cmp     qword [rax+0x38], 0x0",
    "jne     0xacb63",
    "mov     rax, qword [rbp-0x58]",
    "mov     rax, qword [rax+0x40]",
    "test    rax, rax",
    "je      0xacd2f",
    "mov     rdi, qword [rbp-0x60]",
    "mov     rsi, r13",
    "call    strlist_append",
    "mov     rdi, r13",
    "mov     qword [rbp-0x60], rax",
    "call    strlist_dispose",
    "mov     rax, qword [rax]",
    "cmp     byte [rax], 0x0",
    "jne     0xacdf8",
    "call    strlist_create",
    "mov     r12, rax",
    "mov     rax, qword [rbp-0x78]",
    "movzx   eax, byte [rax]",
    "cmp     al, 0x22",
    "sete    dl",
    "je      0xac503",
    "mov     rdx, qword [rdx]",
    "mov     ecx, eax",
    "add     eax, 0x1",
    "test    rdx, rdx",
    "jne     0xac4d8",
    "lea     edi, [rcx+0x2]",
    "pshufd  xmm0, xmm0, 0xe0",
    "movq    qword [r12+0x8], xmm0",
    "mov     rcx, rdx",
    "add     rdx, 0x1",
    "cmp     qword [rax+rdx*8-0x8], 0x0",
    "jne     0xac410",
    "movd    xmm0, ecx",
    "test    rdx, rdx",
    "jne     0xacc07",
    "mov     rcx, qword [rbp-0x60]",
    "test    rcx, rcx",
    "je      0xaccc4",
    "mov     qword [rbp-0x60], rbx",
    "cmp     rax, r15",
    "je      0xacbee",
    "lea     eax, [r13+0x2]",
    "add     r13d, 0x3",
    "movsxd  r13, r13d",
    "mov     dword [rbp-0x68], eax",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xacf17",
    "nop     ",
    "mov     rax, qword [rbp-0x80]",
    "test    rax, rax",
    "je      0xacb74",
    "jmp     0xacb88",
    "mov     rdi, rcx",
    "call    make_bare_word",
    "mov     rsi, qword [rbp-0x80]",
    "mov     rdi, rax",
    "call    make_word_list",
    "add     dword [rbp-0x3c], 0x1",
    "add     dword [rbp-0x40], 0x1",
    "mov     qword [rbp-0x80], rax",
    "jmp     0xac6b0",
    "nop     dword [rax]",
    "mov     rdi, qword [rbp-0x78]",
    "movsx   esi, al",
    "xor     r15d, r15d",
    "call    sub_9ca20",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0xace33",
    "cmp     al, 0x27",
    "cmovne  eax, edx",
    "cmp     qword [rbp-0x60], 0x0",
    "jne     0xacc2e",
    "mov     rax, qword [rbp-0x58]",
    "mov     rax, qword [rax+0x10]",
    "test    al, 0x8",
    "je      0xacc48",
    "cmp     qword [rcx], 0x0",
    "mov     eax, dword [rcx+0xc]",
    "je      0xacc2e",
    "mov     rdi, qword [r15]",
    "test    rdi, rdi",
    "je      0xacbe5",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rdx, [r12+0x1]",
    "mov     rsi, r15",
    "mov     rcx, r13",
    "mov     rdi, rax",
    "call    __memcpy_chk",
    "mov     rax, qword [rbp-0xa0]",
    "movsxd  r12, r12d",
    "mov     byte [r14+r12], 0x20",
    "mov     r15, qword [rax]",
    "test    r15, r15",
    "je      0xac900",
    "mov     r14, qword [r14]",
    "add     r13d, eax",
    "test    r14, r14",
    "jne     0xac7a0",
    "cmp     byte [rdi], 0x0",
    "je      0xac7d8",
    "mov     rax, qword [rbp-0x88]",
    "test    rax, rax",
    "je      0xacb88",
    "mov     rdi, rax",
    "call    dispose_words",
    "mov     rax, qword [rbp-0x98]",
    "test    rax, rax",
    "je      0xacb9c",
    "cmp     qword [rbp-0x90], 0x0",
    "jne     0xac55c",
    "cmp     byte [rax], 0x0",
    "je      0xac54e",
    "mov     rax, qword [rbp-0x58]",
    "mov     rsi, qword [rbp-0x60]",
    "mov     rdx, qword [rax+0x10]",
    "mov     ecx, dword [rsi+0xc]",
    "mov     rax, rdx",
    "test    ecx, ecx",
    "je      0xacd50",
    "test    al, 0x80",
    "jne     0xacd9c",
    "call    compspec_create",
    "mov     edi, 0x20",
    "mov     qword [rax+0x8], 0x20",
    "mov     rbx, rax",
    "jmp     0xacd79",
    "test    eax, eax",
    "je      0xacd48",
    "mov     rdi, qword [rbp-0x60]",
    "call    free",
    "call    free",
    "movsxd  rbx, ebx",
    "mov     rdi, r14",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     byte [r14+rbx], 0x0",
    "call    command_substitute",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xace6e",
    "mov     qword [rbp-0x70], r13",
    "jmp     0xac886",
    "mov     rax, qword [r14+0x8]",
    "mov     rdi, qword [rax]",
    "mov     eax, 0x3",
    "test    rdi, rdi",
    "je      0xac7d8",
    "cmp     byte [rdi+0x1], 0x0",
    "mov     eax, 0x4",
    "je      0xac7d8",
    "mov     rdi, rax",
    "call    free",
    "test    dword [rbp-0x90], 0x200",
    "jne     0xace1d",
    "mov     ecx, dword [rbp-0x90]",
    "mov     dword [rax], ecx",
    "mov     r14, qword [rbp-0x90]",
    "xor     r13d, r13d",
    "movsxd  rax, r15d",
    "mov     qword [rbp-0x70], rcx",
    "mov     dword [rbp-0xa4], ebx",
    "mov     ebx, r13d",
    "mov     qword [rbp-0xa0], rax",
    "mov     r13, r14",
    "jmp     0xac5a1",
    "mov     dword [r12+0xc], 0x0",
    "mov     rax, qword [r12]",
    "xor     edi, edi",
    "mov     qword [rax], 0x0",
    "call    dispose_words",
    "jmp     0xac604",
    "cmp     qword [rbp-0x90], 0x0",
    "je      0xacedc",
    "cmp     byte [rax+0x1], 0x0",
    "mov     r15d, 0x1",
    "je      0xac54e",
    "mov     rax, rdx",
    "and     edx, 0x8",
    "je      0xacc48",
    "call    compspec_create",
    "mov     rsi, qword [rbp-0x78]",
    "mov     edi, 0x20",
    "mov     qword [rax+0x8], 0x20",
    "mov     rbx, rax",
    "call    sub_11a880",
    "mov     rdi, qword [rbp-0x60]",
    "mov     r12, rax",
    "mov     rsi, rax",
    "call    strlist_append",
    "mov     rdi, r12",
    "mov     qword [rbp-0x60], rax",
    "call    strlist_dispose",
    "sub     dword [rbx], 0x1",
    "jne     0xacc50",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xacf28",
    "mov     rsi, qword [rbp-0x78]",
    "call    sub_11a880",
    "mov     qword [rbp-0x60], rax",
    "sub     dword [rbx], 0x1",
    "jne     0xacc50",
    "mov     rax, qword [rbp-0x58]",
    "mov     rdx, qword [rax+0x10]",
    "mov     rdi, qword [rbp-0x60]",
    "call    sub_dc960",
    "mov     rdi, qword [rbp-0xa0]",
    "call    dispose_words",
    "mov     rdi, r14",
    "call    free",
    "lea     rdi, [rel data_120fff]  {\"COMP_LINE\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_121009]  {\"COMP_POINT\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_121014]  {\"COMP_TYPE\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_12101e]  {\"COMP_KEY\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_121027]  {\"COMP_WORDS\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_121032]  {\"COMP_CWORD\"}",
    "call    unbind_variable_noref",
    "lea     rax, [rel array_needs_making]",
    "mov     dword [rax], 0x1",
    "jmp     0xacb54",
    "mov     rbx, qword [rax]",
    "call    dispose_word_desc",
    "mov     rdi, qword [rbp-0xa0]",
    "call    dispose_words",
    "mov     rdi, r14",
    "call    free",
    "lea     rdi, [rel data_120fff]  {\"COMP_LINE\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_121009]  {\"COMP_POINT\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_121014]  {\"COMP_TYPE\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_12101e]  {\"COMP_KEY\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_121027]  {\"COMP_WORDS\"}",
    "call    unbind_variable_noref",
    "lea     rdi, [rel data_121032]  {\"COMP_CWORD\"}",
    "call    unbind_variable_noref",
    "lea     rax, [rel array_needs_making]",
    "mov     dword [rax], 0x1",
    "test    rbx, rbx",
    "je      0xacb54",
    "mov     rax, qword [r15+0x8]",
    "mov     rdi, qword [rax]",
    "lea     rax, [rel data_122e02]",
    "test    rdi, rdi",
    "cmove   rdi, rax",
    "call    sh_single_quote",
    "mov     rdi, rax",
    "mov     r12, rax",
    "call    strlen",
    "mov     ecx, dword [rbp-0x68]",
    "mov     r13, rax",
    "lea     eax, [rbx+rax+0x2]",
    "cmp     eax, ecx",
    "jl      0xac840",
    "cmp     byte [rdi+0x2], 0x0",
    "mov     eax, 0x5",
    "je      0xac7d8",
    "mov     rdi, qword [rbp-0x60]",
    "call    strlist_dispose",
    "mov     qword [rbp-0x60], 0x0",
    "jmp     0xacc50",
    "mov     rax, qword [r13+0x8]",
    "mov     r14, qword [rax]",
    "test    r15d, r15d",
    "jne     0xac588",
    "mov     rdi, qword [rbp-0x60]",
    "mov     rsi, r12",
    "call    strlist_append",
    "mov     rdi, r12",
    "mov     qword [rbp-0x60], rax",
    "call    strlist_dispose",
    "mov     rax, qword [r12]",
    "xor     edi, edi",
    "mov     qword [rbp-0x70], rcx",
    "mov     dword [r12+0xc], 0x0",
    "mov     qword [rax], 0x0",
    "call    dispose_words",
    "mov     rcx, qword [rbp-0x70]",
    "jmp     0xac5fc",
    "cmp     byte [rax+0x2], 0x0",
    "mov     r15d, 0x2",
    "je      0xac54e",
    "call    compspec_create",
    "mov     rdi, qword [rbp-0x60]",
    "mov     qword [rax+0x8], 0x20",
    "mov     rbx, rax",
    "call    free",
    "mov     rdi, qword [rbx+0x8]",
    "mov     rdi, rbx",
    "call    sub_a7690",
    "jmp     0xacc50",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x60]",
    "lea     rsp, [rbp-0x28]",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, rbx",
    "call    sub_a7690",
    "jmp     0xacc50",
    "mov     rax, qword [rbp-0x58]",
    "cmp     qword [rax+0x40], 0x0",
    "je      0xacd2f",
    "cmp     byte [rbx], 0x0",
    "je      0xace61",
    "mov     rax, qword [rbp-0x70]",
    "movsxd  rdi, ebx",
    "mov     rsi, r12",
    "cmp     rax, rdi",
    "mov     rdx, rax",
    "cmovb   rdx, rdi",
    "sub     rdx, rdi",
    "add     rdi, r14",
    "call    __strcpy_chk",
    "lea     ecx, [rbx+r13]",
    "cmp     qword [r15], 0x0",
    "mov     ebx, ecx",
    "je      0xac876",
    "sub     eax, ecx",
    "and     eax, 0xffffffc0",
    "lea     eax, [rcx+rax+0x40]",
    "movsxd  rsi, eax",
    "mov     dword [rbp-0x68], eax",
    "mov     qword [rbp-0x70], rsi",
    "test    r14, r14",
    "je      0xacd00",
    "call    strlen",
    "add     eax, 0x3",
    "nop     dword [rax]",
    "mov     rax, qword [rbp-0x70]",
    "movzx   eax, byte [rax]",
    "cmp     byte [r14], al",
    "je      0xacac8",
    "test    r14, r14",
    "jne     0xacae3",
    "mov     rdi, rcx",
    "call    free",
    "mov     rdi, rax",
    "mov     qword [rbp-0x70], rax",
    "call    strlen",
    "mov     rcx, qword [rbp-0x70]",
    "mov     r15d, eax",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0xacb54",
    "mov     edi, 0x10",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xacf2d",
    "mov     rdi, r12",
    "call    free",
    "mov     r15, qword [r15]",
    "test    r15, r15",
    "je      0xac900",
    "movsxd  rcx, ecx",
    "add     ebx, 0x1",
    "mov     byte [r14+rcx], 0x20",
    "mov     rdi, qword [rbp-0x70]",
    "call    malloc",
    "mov     r14, rax",
    "jmp     0xac8e0",
    "mov     rdi, r14",
    "call    realloc",
    "mov     r14, rax",
    "mov     rdx, qword [rbp-0xa0]",
    "mov     rsi, qword [rbp-0x70]",
    "mov     rdi, r14",
    "call    strncmp",
    "test    eax, eax",
    "jne     0xac598",
    "mov     r13, qword [r13]",
    "test    r13, r13",
    "je      0xac5cd",
    "mov     rdi, r14",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x88], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x88]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0xacf40",
    "mov     rax, qword [r12]",
    "mov     r13, qword [r13]",
    "movsxd  rdx, ebx",
    "add     ebx, 0x1",
    "mov     qword [rax+rdx*8], r14",
    "test    r13, r13",
    "jne     0xac5a1",
    "mov     edi, 0x88",
    "call    malloc",
    "mov     rdx, rax",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0xacf51",
    "test    r14, r14",
    "jne     0xac840",
    "mov     rsi, qword [rbp-0x70]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [r12]",
    "movsxd  r9, ebx",
    "mov     rdi, qword [rbp-0x90]",
    "mov     dword [r12+0xc], r9d",
    "mov     ebx, dword [rbp-0xa4]",
    "mov     qword [rax+r9*8], 0x0",
    "call    dispose_words",
    "mov     rcx, qword [rbp-0x70]",
    "test    rcx, rcx",
    "je      0xac604",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r14",
    "mov     rcx, rdx",
    "call    __memcpy_chk",
    "mov     r14, rax",
    "jmp     0xac5b6",
    "mov     esi, 0x88",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r12], rax",
    "mov     ecx, 0x10",
    "xor     eax, eax",
    "mov     rdi, rdx",
    "rep stosq qword [rdi]",
    "mov     qword [r12+0x8], 0x10",
    "movzx   eax, byte [rbx]",
    "test    al, al",
    "je      0xacb2d",
    "mov     qword [rsi], 0x0",
    "mov     rdi, rbx",
    "call    free",
    "mov     rdi, qword [rbp-0x60]",
    "mov     rsi, r12",
    "call    strlist_append",
    "mov     rdi, r12",
    "mov     qword [rbp-0x60], rax",
    "call    strlist_dispose",
    "xor     edx, edx",
    "xor     edi, edi",
    "mov     r14, rbx",
    "xor     r13d, r13d",
    "cmp     al, 0xa",
    "je      0xaca40",
    "mov     esi, edi",
    "mov     edx, r13d",
    "mov     rdi, rbx",
    "call    substring",
    "mov     esi, dword [r12+0x8]",
    "mov     r15, rax",
    "movsxd  rax, dword [r12+0xc]",
    "lea     edx, [rsi-0x1]",
    "cmp     eax, edx",
    "jge     0xacab0",
    "nop     dword [rax]",
    "add     esi, 0x10",
    "mov     rdi, r12",
    "call    strlist_resize",
    "movsxd  rax, dword [r12+0xc]",
    "jmp     0xaca61",
    "mov     rcx, qword [r12]",
    "lea     edx, [rax+0x1]",
    "lea     rsi, [rax*8]",
    "mov     dword [r12+0xc], edx",
    "mov     qword [rcx+rax*8], r15",
    "movzx   eax, byte [r14]",
    "cmp     al, 0xa",
    "jne     0xaccf0",
    "cmp     al, 0x5c",
    "jne     0xaca10",
    "mov     edi, r13d",
    "jmp     0xacaa0",
    "lea     edx, [r13+0x1]",
    "movsxd  rdx, edx",
    "nop     dword [rax]",
    "add     r13d, 0x1",
    "movsxd  rdx, r13d",
    "lea     r14, [rbx+rdx]",
    "movzx   eax, byte [r14]",
    "test    al, al",
    "je      0xaca40",
    "cmp     byte [rbx+rdx+0x1], 0xa",
    "jne     0xaca10",
    "test    al, al",
    "je      0xacb28",
    "mov     rdi, rdx",
    "add     rdx, 0x1",
    "movzx   eax, byte [rbx+rdx-0x1]",
    "cmp     al, 0xa",
    "je      0xaca90",
    "cmp     al, 0xa",
    "je      0xaca40",
    "add     r13d, 0x1",
    "jmp     0xaca10",
    "lea     rsi, [rcx+rsi+0x8]",
    "movsxd  rdx, edi",
    "jmp     0xaca08",
    "mov     r13d, edi",
    "jmp     0xaca27"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
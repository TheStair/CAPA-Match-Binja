{
  "address": "0x4a280",
  "rules": [
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using djb2/9bc6b91561f04ebca409510ba6653174",
    "log keystrokes via raw input data/5b32ff98460e406e86dc2ef8d82ba1a5",
    "contain loop",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "encrypt data using XXTEA/c3f2a9482f0d43a8bf071fa39e1b4168/481b6ec2656e407ab150ed0bda08a037",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "validate payment card number using luhn algorithm with no lookup table/c7424b8f4dd24e28bdb38bbfd0000b7d/5cd90ca8b31f4cdd8124133557051a20",
    "validate payment card number using luhn algorithm with no lookup table/d1aa048b20f94c0db48b1ae538432626",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "encrypt data using XXTEA/c3f2a9482f0d43a8bf071fa39e1b4168/ea2ab02de6a64ee191b417bab5bfc302",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249",
    "encrypt data using TEA/f68c13fdd9924dacbb04fb3766fcc8ea/b98afe217679411c944f0cab12b002af",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/85d53756af1244948e9b515ea3abe5ce",
    "terminate process",
    "hash data using jshash/495bfd597bd14a45826758e92f604bf6",
    "decrypt data using TEA/e3455f541322464e87e33d73effdac9c/c9ea650c1ee846d4b0844b5a3685e146",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "encrypt data using TEA/f68c13fdd9924dacbb04fb3766fcc8ea/e4e2447ff58f442591f5a975122a3a44",
    "check if file exists/e9b7e5653fc74459b4a2998e8ac0c76d/291bac4dc2fd4faeafd7747b61108764",
    "write file on Linux",
    "encrypt data using Curve25519/a423aa5d0923438c8eac88d5abe4fcd5",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "64-bit execution via heavens gate/60cabeb435b14393adc864c969c82de8",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "decrypt data using TEA/e3455f541322464e87e33d73effdac9c/1ab3f365715b4aafbc5c343f04b2711f",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "parse credit card information/c752047d2aae412595c3e7950d2fcdc4",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0xd8",
    "mov     dword [rbp-0x70], edx",
    "mov     dword [rbp-0x68], ecx",
    "mov     qword [rbp-0x78], r8",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel breaking]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "jne     0x4a480",
    "lea     rax, [rel last_command_exit_value]",
    "mov     r13d, dword [rax]",
    "jmp     0x4a407",
    "lea     rax, [rel continuing]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "jne     0x4a480",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x4ceaa",
    "lea     r12, [rel read_but_dont_execute]",
    "mov     r13d, dword [r12]",
    "test    r13d, r13d",
    "jne     0x4a480",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "lea     rsp, [rbp-0x28]",
    "mov     eax, r13d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    rdi, rdi",
    "je      0x4a407",
    "mov     r15, 0x40ffffffff",
    "mov     dword [rbp-0x80], r13d",
    "mov     ebx, esi",
    "mov     r14, 0x400000000d",
    "mov     r13, rdi",
    "lea     rax, [rel terminating_signal]",
    "mov     esi, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    esi, esi",
    "jne     0x4a320",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4a4c0",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0x4a331",
    "call    run_pending_traps",
    "mov     eax, dword [r13+0x4]",
    "lea     rdi, [rel exit_immediately_on_error]",
    "mov     qword [rel data_161a20], r13",
    "mov     r10d, eax",
    "mov     ecx, dword [rdi]",
    "and     r10d, 0x4",
    "setne   dl",
    "test    ecx, ecx",
    "je      0x4a360",
    "mov     rax, qword [r13]",
    "and     rax, r15",
    "cmp     rax, r14",
    "je      0x4a830",
    "test    dl, dl",
    "jne     0x4a490",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x4ceaa",
    "mov     eax, dword [r13]",
    "cmp     eax, 0xe",
    "je      0x4a868",
    "or      eax, 0x8",
    "mov     dword [r13+0x4], eax",
    "jmp     0x4a360",
    "mov     r8, qword [rbp-0x78]",
    "mov     ecx, dword [rbp-0x68]",
    "mov     esi, ebx",
    "mov     rdi, r13",
    "mov     edx, dword [rbp-0x70]",
    "lea     rsp, [rbp-0x28]",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sub_4df40",
    "mov     rcx, qword [rbp-0x78]",
    "mov     edx, dword [rbp-0x68]",
    "mov     rdi, r13",
    "mov     esi, dword [rbp-0x70]",
    "call    sub_4e5e0",
    "mov     r13d, eax",
    "lea     rax, [rel last_command_exit_value]",
    "mov     dword [rax], r13d",
    "jmp     0x4a407",
    "cmp     eax, 0xd",
    "je      0x4a4e0",
    "lea     rdx, [rel line_number]",
    "mov     r9, r13",
    "test    ebx, ebx",
    "mov     r13d, dword [rbp-0x80]",
    "setne   r12b",
    "mov     eax, dword [rdx]",
    "mov     qword [rbp-0x80], rdx",
    "mov     dword [rbp-0x44], eax",
    "mov     rax, qword [r9+0x18]",
    "mov     eax, dword [rax+0x4]",
    "mov     dword [rdx], eax",
    "test    byte [rel data_1612a8], 0x10",
    "jne     0x4a528",
    "mov     esi, dword [r13+0x4]",
    "mov     ecx, esi",
    "and     ecx, 0x3",
    "jne     0x4d845",
    "mov     ecx, 0x1",
    "lea     rdx, [rel running_trap]",
    "cmp     dword [rdx], 0x43",
    "je      0x4a528",
    "lea     rax, [rel line_number]",
    "mov     r9, r13",
    "mov     r13d, dword [rbp-0x80]",
    "and     esi, 0x1",
    "test    ebx, ebx",
    "mov     ecx, esi",
    "mov     qword [rbp-0x80], rax",
    "mov     eax, dword [rax]",
    "setne   r12b",
    "mov     dword [rbp-0x44], eax",
    "jmp     0x4a52d",
    "cmp     eax, 0xc",
    "ja      0x4a430",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x98], r9",
    "mov     dword [rbp-0x90], ecx",
    "mov     qword [rbp-0x88], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r14",
    "mov     qword [rbp-0x90], r9",
    "mov     dword [rbp-0x88], ecx",
    "call    __strcpy_chk",
    "mov     esi, r12d",
    "mov     rdi, rax",
    "mov     r14, rax",
    "call    make_child",
    "mov     ecx, dword [rbp-0x88]",
    "mov     r9, qword [rbp-0x90]",
    "mov     r10d, eax",
    "test    ecx, ecx",
    "je      0x4a6f2",
    "lea     rdx, [rel line_number_for_err_trap]",
    "mov     dword [rdx], eax",
    "nop     dword [rax]",
    "lea     rax, [rel command_string_index]",
    "mov     rdi, r9",
    "movzx   r12d, r12b",
    "mov     dword [rbp-0x98], ecx",
    "mov     qword [rbp-0x90], r9",
    "mov     dword [rax], 0x0",
    "mov     dword [rel data_16105c], 0x0",
    "mov     qword [rel data_161050], 0x0",
    "call    sub_48540",
    "lea     r15, [rel the_printed_command]",
    "mov     r14, qword [r15]",
    "mov     rdi, r14",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x88], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x88]",
    "mov     r9, qword [rbp-0x90]",
    "test    rax, rax",
    "mov     ecx, dword [rbp-0x98]",
    "mov     rdi, rax",
    "je      0x4d98a",
    "test    sil, 0x80",
    "je      0x4a88c",
    "mov     r8d, 0x1faf",
    "mov     edi, eax",
    "bt      r8, rax",
    "jae     0x4a430",
    "test    r10d, r10d",
    "jne     0x4a750",
    "test    byte [rel data_1612a8], 0x1",
    "jne     0x4be01",
    "mov     r9, r13",
    "cmp     eax, 0xc",
    "ja      0x4a8e7",
    "test    ebx, ebx",
    "je      0x4a4d0",
    "mov     eax, dword [rbp-0x68]",
    "mov     r11d, dword [rbp-0x70]",
    "test    ebx, ebx",
    "mov     r9, r13",
    "setne   r12b",
    "mov     r13d, dword [rbp-0x80]",
    "and     eax, r11d",
    "cmp     eax, 0xffffffff",
    "jne     0x4a638",
    "xor     ecx, ecx",
    "mov     rdi, r14",
    "mov     qword [rbp-0x80], r9",
    "call    free",
    "mov     r9, qword [rbp-0x80]",
    "cmp     dword [r9], 0x9",
    "jne     0x4a60e",
    "test    byte [rel data_1612a4], 0x10",
    "jne     0x4a5f5",
    "test    r10d, r10d",
    "jne     0x4a752",
    "lea     r15, [rel variable_context]",
    "lea     rdi, [rel executing_list]",
    "mov     eax, dword [r15]",
    "or      eax, dword [rdi]",
    "jne     0x4bc80",
    "mov     edi, eax",
    "mov     r9, r13",
    "jmp     0x4a3e7",
    "lea     rax, [rel breaking]",
    "or      esi, 0x2",
    "mov     dword [r13+0x4], esi",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "jne     0x4a480",
    "lea     rax, [rel line_number]",
    "mov     rdi, r9",
    "movzx   r12d, r12b",
    "mov     dword [rbp-0x98], ecx",
    "mov     qword [rbp-0x90], r9",
    "mov     qword [rbp-0x80], rax",
    "mov     eax, dword [rax]",
    "mov     dword [rel data_16105c], 0x0",
    "mov     dword [rbp-0x44], eax",
    "lea     rax, [rel command_string_index]",
    "mov     qword [rel data_161050], 0x0",
    "mov     dword [rax], 0x0",
    "call    sub_48540",
    "lea     r15, [rel the_printed_command]",
    "mov     r14, qword [r15]",
    "mov     rdi, r14",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x88], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x88]",
    "mov     r9, qword [rbp-0x90]",
    "test    rax, rax",
    "mov     ecx, dword [rbp-0x98]",
    "mov     rdi, rax",
    "je      0x4d98a",
    "test    r12b, r12b",
    "jne     0x4a638",
    "mov     eax, dword [rbp-0x68]",
    "test    eax, eax",
    "jns     0x4bd30",
    "mov     qword [rbp-0x88], r9",
    "mov     dword [rbp-0x78], ecx",
    "mov     dword [rbp-0x70], r10d",
    "call    close",
    "mov     r9, qword [rbp-0x88]",
    "mov     ecx, dword [rbp-0x78]",
    "mov     r10d, dword [rbp-0x70]",
    "mov     r8, qword [rbp-0x78]",
    "mov     ecx, dword [rbp-0x68]",
    "mov     esi, ebx",
    "mov     rdi, r9",
    "mov     edx, dword [rbp-0x70]",
    "call    sub_4df40",
    "lea     r15, [rel last_command_exit_value]",
    "mov     dword [r15], eax",
    "mov     eax, dword [rbp-0x68]",
    "mov     edx, dword [rbp-0x70]",
    "and     eax, edx",
    "cmp     eax, 0xffffffff",
    "je      0x4c2c9",
    "lea     rax, [rel running_trap]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4a5f5",
    "mov     edi, dword [rbp-0x70]",
    "test    edi, edi",
    "js      0x4a77a",
    "mov     rdi, r14",
    "mov     qword [rbp-0x80], r9",
    "call    free",
    "mov     r9, qword [rbp-0x80]",
    "mov     eax, dword [rel data_161064]",
    "lea     rdi, [rbp-0x50]",
    "mov     byte [rbp-0x88], dl",
    "mov     qword [rbp-0x90], r9",
    "mov     dword [rbp-0x80], r10d",
    "mov     dword [rbp-0x48], eax",
    "call    copy_fifo_list",
    "lea     rdi, [rel data_11fd1a]  {\"internal_fifos\"}",
    "mov     r14, rax",
    "mov     qword [rbp-0xb8], rax",
    "call    begin_unwind_frame",
    "test    r14, r14",
    "mov     r10d, dword [rbp-0x80]",
    "movzx   edx, byte [rbp-0x88]",
    "mov     r9, qword [rbp-0x90]",
    "je      0x4bd18",
    "mov     dword [rbp-0x54], 0x0",
    "mov     rdi, qword [r9+0x10]",
    "test    rdi, rdi",
    "je      0x4a8e7",
    "mov     rcx, qword [rbp-0x78]",
    "mov     edx, dword [rbp-0x68]",
    "mov     rdi, r9",
    "mov     esi, dword [rbp-0x70]",
    "call    sub_1183f0",
    "mov     qword [rel data_161a20], 0x0",
    "mov     r13d, eax",
    "lea     rax, [rel continuing]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "jne     0x4a480",
    "mov     rsi, r14",
    "mov     rcx, rdx",
    "mov     qword [rbp-0x88], r9",
    "call    __memcpy_chk",
    "mov     esi, r12d",
    "mov     rdi, rax",
    "mov     r14, rax",
    "call    make_child",
    "mov     r9, qword [rbp-0x88]",
    "mov     r10d, eax",
    "mov     ebx, esi",
    "and     ebx, 0x80",
    "je      0x4a896",
    "mov     edi, eax",
    "call    close",
    "lea     rax, [rel variable_context]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4a407",
    "lea     rax, [rel variable_context]",
    "mov     r15d, dword [rax]",
    "test    r15d, r15d",
    "je      0x4bfbe",
    "test    ebx, ebx",
    "je      0x4a60e",
    "mov     r8, qword [rbp-0x78]",
    "mov     ecx, dword [rbp-0x68]",
    "mov     esi, ebx",
    "mov     rdi, r9",
    "mov     edx, dword [rbp-0x70]",
    "call    sub_4df40",
    "lea     r15, [rel last_command_exit_value]",
    "mov     dword [r15], eax",
    "test    ebx, ebx",
    "jne     0x4a62c",
    "lea     rax, [rel the_printed_command_except_trap]",
    "mov     rdi, qword [rax]",
    "mov     qword [rbp-0x90], rax",
    "test    rdi, rdi",
    "je      0x4be62",
    "mov     dword [rbp-0x54], 0x1",
    "mov     esi, dword [r9+0x4]",
    "jmp     0x4a907",
    "lea     rcx, [rel uwcache]",
    "mov     eax, dword [rcx+0xc]",
    "test    eax, eax",
    "jle     0x4c2f4",
    "xor     r13d, r13d",
    "test    al, 0x40",
    "sete    r13b",
    "jmp     0x4a91a",
    "and     esi, 0x8",
    "mov     rdi, qword [r9+0x10]",
    "mov     qword [rbp-0x80], r9",
    "mov     r14d, esi",
    "mov     esi, 0x3",
    "mov     byte [rbp-0x98], dl",
    "mov     dword [rbp-0x90], r10d",
    "call    do_redirections",
    "mov     r9, qword [rbp-0x80]",
    "mov     r10d, dword [rbp-0x90]",
    "test    eax, eax",
    "mov     dword [rbp-0x88], eax",
    "movzx   edx, byte [rbp-0x98]",
    "jne     0x4befb",
    "mov     qword [rbp-0x98], r9",
    "mov     dword [rbp-0x90], esi",
    "mov     byte [rbp-0x88], dl",
    "mov     dword [rbp-0x80], r10d",
    "call    stdin_redirects",
    "lea     rcx, [rel stdin_redir]",
    "mov     r10d, dword [rbp-0x80]",
    "mov     r9, qword [rbp-0x98]",
    "mov     esi, dword [rbp-0x90]",
    "mov     dword [rcx], eax",
    "movzx   edx, byte [rbp-0x88]",
    "mov     r10d, dword [r12]",
    "mov     ebx, 0x1",
    "test    r10d, r10d",
    "je      0x4a30f",
    "mov     eax, 0x1faf",
    "bt      rax, rdi",
    "jae     0x4a8e7",
    "mov     eax, dword [rel data_161064]",
    "test    eax, eax",
    "je      0x4a407",
    "mov     r14d, dword [rel data_161064]",
    "test    r14d, r14d",
    "je      0x4a798",
    "cmp     dword [rbp-0x68], 0xffffffff",
    "mov     qword [rbp-0x88], r9",
    "mov     dword [rbp-0x78], ecx",
    "mov     dword [rbp-0x70], r10d",
    "jne     0x4a407",
    "mov     r8, qword [rbp-0x78]",
    "mov     ecx, dword [rbp-0x68]",
    "mov     esi, ebx",
    "mov     rdi, r9",
    "mov     edx, dword [rbp-0x70]",
    "call    sub_4df40",
    "lea     r15, [rel last_command_exit_value]",
    "mov     dword [r15], eax",
    "jmp     0x4a748",
    "mov     edi, dword [r15]",
    "call    exit",
    "{ Does not return }",
    "mov     edi, dword [r15]",
    "call    subshell_exit",
    "{ Does not return }",
    "mov     r12, qword [r15]",
    "mov     qword [rbp-0xa0], r9",
    "mov     dword [rbp-0x98], ecx",
    "mov     rdi, r12",
    "mov     dword [rbp-0x88], r10d",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     r10d, dword [rbp-0x88]",
    "mov     ecx, dword [rbp-0x98]",
    "test    rax, rax",
    "mov     r9, qword [rbp-0xa0]",
    "mov     r11, rax",
    "je      0x4d8e7",
    "mov     qword [rbp-0xa0], r9",
    "mov     dword [rbp-0x98], ecx",
    "mov     dword [rbp-0x88], r10d",
    "call    free",
    "mov     r9, qword [rbp-0xa0]",
    "mov     ecx, dword [rbp-0x98]",
    "mov     r10d, dword [rbp-0x88]",
    "mov     eax, dword [rel data_1612a8]",
    "mov     r13d, eax",
    "and     r13d, 0x1",
    "jne     0x4bfb0",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x90], r9",
    "mov     byte [rbp-0x88], dl",
    "mov     dword [rbp-0x80], r10d",
    "call    malloc",
    "test    rax, rax",
    "je      0x31e1d",
    "sub     eax, 0x1",
    "mov     rsi, qword [rcx]",
    "mov     dword [rcx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rsi+rax*8]",
    "lea     rbx, [rel redirection_undo_list]",
    "mov     r15, qword [rbx]",
    "test    r15, r15",
    "je      0x4bf2e",
    "lea     rax, [rel redirection_undo_list]",
    "mov     rsi, qword [rax]",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel exec_redirection_undo_list]",
    "mov     qword [rbp-0xb0], rsi",
    "mov     rdi, qword [rax]",
    "mov     qword [rax], 0x0",
    "or      rsi, rdi",
    "mov     qword [rbp-0xa0], rdi",
    "jne     0x4c0e8",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4a4a0",
    "nop     word [rax+rax]",
    "call    sub_875b0",
    "jmp     0x4a407",
    "mov     qword [rbp-0x88], r9",
    "mov     dword [rbp-0x78], ecx",
    "mov     dword [rbp-0x70], r10d",
    "call    sub_875b0",
    "mov     r9, qword [rbp-0x88]",
    "mov     ecx, dword [rbp-0x78]",
    "mov     r10d, dword [rbp-0x70]",
    "jmp     0x4a798",
    "xor     esi, esi",
    "mov     edi, ebx",
    "call    stop_pipeline",
    "mov     eax, dword [rbp-0x44]",
    "mov     rdx, qword [rbp-0x80]",
    "test    ebx, ebx",
    "mov     r10d, dword [rbp-0x70]",
    "mov     dword [rdx], eax",
    "jne     0x4c010",
    "mov     rsi, r15",
    "mov     qword [rbp-0x98], rax",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     qword [rbp-0xa8], r9",
    "mov     dword [rbp-0xa0], ecx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r15",
    "mov     rsi, r12",
    "mov     rdi, r11",
    "mov     qword [rbp-0xa0], r9",
    "mov     dword [rbp-0x98], ecx",
    "mov     dword [rbp-0x88], r10d",
    "call    __strcpy_chk",
    "mov     r10d, dword [rbp-0x88]",
    "mov     rdx, qword [rbp-0x90]",
    "mov     ecx, dword [rbp-0x98]",
    "mov     r9, qword [rbp-0xa0]",
    "test    r10d, r10d",
    "mov     qword [rdx], rax",
    "jne     0x4a752",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r10d, dword [rbp-0x80]",
    "movzx   edx, byte [rbp-0x88]",
    "mov     r9, qword [rbp-0x90]",
    "jmp     0x4bcf1",
    "lea     rbx, [rel exec_redirection_undo_list]",
    "mov     rdi, qword [rbx]",
    "test    rdi, rdi",
    "je      0x4bf51",
    "mov     esi, 0x1",
    "mov     rdi, r15",
    "mov     dword [rbp-0x78], r10d",
    "call    do_redirections",
    "mov     rdi, r15",
    "call    dispose_redirects",
    "mov     qword [rbx], 0x0",
    "mov     r10d, dword [rbp-0x78]",
    "lea     rdi, [rel data_11fd29]  {\"loop_redirections\"}",
    "mov     qword [rbp-0x98], r9",
    "mov     byte [rbp-0x90], dl",
    "mov     dword [rbp-0x80], r10d",
    "call    begin_unwind_frame",
    "mov     r10d, dword [rbp-0x80]",
    "cmp     qword [rbp-0xb0], 0x0",
    "movzx   edx, byte [rbp-0x90]",
    "mov     r9, qword [rbp-0x98]",
    "je      0x4c165",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c0c5",
    "lea     rax, [rel interactive]",
    "mov     r12d, dword [rax]",
    "test    r12d, r12d",
    "jne     0x4c502",
    "mov     r9, qword [rbp-0x88]",
    "mov     ecx, dword [rbp-0x78]",
    "mov     esi, 0x0",
    "mov     edi, r10d",
    "mov     r12d, dword [rel data_1612a8]",
    "mov     r13d, dword [r9+0x4]",
    "mov     dword [rbp-0x68], ecx",
    "mov     r14d, r13d",
    "and     r14d, 0x4",
    "test    r12b, 0x1",
    "jne     0x4c50f",
    "jmp     0x4a5fe",
    "mov     rcx, qword [rel data_161a50]",
    "mov     rsi, qword [rbp-0xb8]",
    "mov     qword [rax], rcx",
    "lea     rcx, [rel xfree]",
    "mov     qword [rax+0x10], rsi",
    "mov     qword [rax+0x8], rcx",
    "mov     qword [rel data_161a50], rax",
    "mov     eax, dword [rbp-0x54]",
    "test    eax, eax",
    "jne     0x4c292",
    "mov     dword [rbp-0x78], r10d",
    "call    dispose_redirects",
    "mov     qword [rbx], 0x0",
    "mov     r10d, dword [rbp-0x78]",
    "lea     rcx, [rel uwcache]",
    "mov     eax, dword [rcx+0xc]",
    "test    eax, eax",
    "jle     0x4c32f",
    "mov     rsi, qword [rbp-0xb0]",
    "lea     rdi, [rel sub_49840]",
    "mov     byte [rbp-0x90], dl",
    "mov     qword [rbp-0x98], r9",
    "mov     dword [rbp-0x80], r10d",
    "call    sub_891b0",
    "mov     r10d, dword [rbp-0x80]",
    "cmp     qword [rbp-0xa0], 0x0",
    "movzx   edx, byte [rbp-0x90]",
    "mov     r9, qword [rbp-0x98]",
    "je      0x4a998",
    "lea     rax, [rel terminating_signal]",
    "mov     r8d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r8d, r8d",
    "jne     0x4a9a9",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c098",
    "mov     edi, r10d",
    "call    describe_pid",
    "jmp     0x4c023",
    "call    run_pending_traps",
    "lea     rax, [rel last_command_exit_value]",
    "mov     dword [rax], 0x0",
    "jmp     0x4a407",
    "call    wait_for",
    "mov     ecx, dword [rbp-0x68]",
    "mov     ebx, eax",
    "xor     eax, eax",
    "and     r12d, 0x40",
    "sete    al",
    "and     eax, ecx",
    "test    r14d, r14d",
    "jne     0x4ceaf",
    "call    wait_for",
    "test    r14d, r14d",
    "mov     ecx, dword [rbp-0x68]",
    "mov     ebx, eax",
    "je      0x4c5e0",
    "mov     rdi, qword [rbp-0xb8]",
    "mov     dword [rbp-0x78], r10d",
    "call    free",
    "cmp     qword [rel data_161a50], 0x0",
    "mov     r10d, dword [rbp-0x78]",
    "je      0x4bf5c",
    "lea     r15, [rel last_command_exit_value]",
    "or      r10d, r14d",
    "mov     dword [r15], 0x1",
    "jne     0x4a828",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x98], r9",
    "mov     byte [rbp-0x90], dl",
    "mov     dword [rbp-0x80], r10d",
    "call    malloc",
    "test    rax, rax",
    "je      0x31e1d",
    "sub     eax, 0x1",
    "mov     rsi, qword [rcx]",
    "mov     dword [rcx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rsi+rax*8]",
    "jmp     0x4a4b7",
    "mov     qword [rbp-0x98], r9",
    "mov     byte [rbp-0x90], dl",
    "mov     dword [rbp-0x80], r10d",
    "call    throw_to_top_level",
    "mov     r9, qword [rbp-0x98]",
    "movzx   edx, byte [rbp-0x90]",
    "mov     r10d, dword [rbp-0x80]",
    "jmp     0x4a9ba",
    "movzx   eax, dl",
    "mov     edx, dword [r9]",
    "mov     dword [rbp-0xa8], eax",
    "cmp     edx, 0xc",
    "ja      0x4c65f",
    "test    ebx, ebx",
    "lea     r15, [rel last_command_exit_value]",
    "sete    bl",
    "movzx   ebx, bl",
    "mov     dword [r15], ebx",
    "test    eax, eax",
    "jne     0x4c53f",
    "lea     r15, [rel last_command_exit_value]",
    "mov     dword [r15], ebx",
    "test    eax, eax",
    "je      0x4c5ea",
    "lea     r15, [rel last_command_exit_value]",
    "mov     dword [r15], ebx",
    "xor     eax, eax",
    "lea     r15, [rel last_command_exit_value]",
    "test    ebx, ebx",
    "sete    al",
    "mov     dword [r15], eax",
    "nop     dword [rax+rax]",
    "lea     rdi, [rel data_11fd1a]  {\"internal_fifos\"}",
    "call    sub_113da0",
    "mov     r10d, dword [rbp-0x78]",
    "jmp     0x4bf5c",
    "mov     r13d, dword [r15]",
    "jmp     0x4a407",
    "mov     r12d, dword [rbp-0x68]",
    "mov     eax, dword [rbp-0x70]",
    "and     r12d, eax",
    "cmp     r12d, 0xffffffff",
    "jne     0x4a828",
    "mov     r10d, dword [rbp-0x80]",
    "movzx   edx, byte [rbp-0x90]",
    "mov     r9, qword [rbp-0x98]",
    "jmp     0x4c186",
    "xor     ecx, ecx",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11fda6]  {\"execute_command\"}",
    "call    command_error",
    "{ Does not return }",
    "lea     rcx, [rel jump_table_1366b4]",
    "mov     eax, edx",
    "movsxd  rax, dword [rcx+rax*4]",
    "add     rax, rcx",
    "jmp     rax",
    "and     r13d, 0xc",
    "jne     0x4a828",
    "jmp     0x4a828",
    "and     r13d, 0xc",
    "jne     0x4a828",
    "and     ecx, 0x1",
    "jne     0x4c572",
    "test    r13d, r13d",
    "jne     0x4c71f",
    "mov     rcx, qword [rel data_161a50]",
    "mov     rsi, qword [rbp-0xa0]",
    "mov     qword [rax], rcx",
    "lea     rcx, [rel dispose_redirects]",
    "mov     qword [rax+0x10], rsi",
    "mov     qword [rax+0x8], rcx",
    "mov     qword [rel data_161a50], rax",
    "jmp     0x4a998",
    "{Case 0x7, 0xa-0xb}",
    "mov     ecx, dword [rel data_1612a8]",
    "mov     eax, ecx",
    "and     eax, 0x1",
    "mov     dword [rbp-0x68], eax",
    "jne     0x4ce59",
    "{Case 0x6}",
    "mov     rax, qword [r9+0x18]",
    "mov     r14d, dword [r9+0x4]",
    "mov     edx, dword [rax+0x18]",
    "mov     r12d, r14d",
    "and     r12d, 0x8",
    "cmp     edx, 0x3b",
    "je      0x4d21a",
    "{Case 0x4}",
    "lea     rax, [rel line_number]",
    "mov     qword [rbp-0x80], rax",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x44], eax",
    "mov     eax, dword [rel data_1612a8]",
    "mov     r15d, eax",
    "and     r15d, 0x1",
    "jne     0x4ce69",
    "{Case 0x3}",
    "mov     rbx, qword [r9+0x18]",
    "test    r14d, r14d",
    "je      0x4af64",
    "{Case 0x9}",
    "test    ebx, ebx",
    "jne     0x4ce77",
    "{Case 0x8}",
    "mov     rdi, qword [r9+0x18]",
    "test    r14d, r14d",
    "je      0x4b032",
    "{Case 0x2}",
    "mov     rdi, qword [r9+0x18]",
    "test    r14d, r14d",
    "je      0x4b05f",
    "{Case 0x1}",
    "mov     r13, qword [r9+0x18]",
    "test    r14d, r14d",
    "je      0x4b08b",
    "{Case 0x0}",
    "mov     rbx, qword [r9+0x18]",
    "test    r14d, r14d",
    "je      0x4b3fc",
    "{Case 0xc}",
    "mov     r13, qword [r9+0x18]",
    "test    r14d, r14d",
    "je      0x4b46e",
    "{Case 0x5}",
    "mov     rax, qword [r9+0x18]",
    "mov     qword [rbp-0xe0], rax",
    "test    r14d, r14d",
    "je      0x4b66b",
    "test    ebx, ebx",
    "je      0x4a828",
    "lea     rax, [rel exit_immediately_on_error]",
    "mov     r13d, dword [rax]",
    "test    r13d, r13d",
    "je      0x4a828",
    "jmp     0x4a828",
    "lea     rbx, [rel line_number]",
    "mov     eax, dword [rbx]",
    "mov     dword [rbp-0x44], eax",
    "lea     rax, [rel line_number_for_err_trap]",
    "mov     eax, dword [rax]",
    "mov     dword [rbx], eax",
    "call    run_error_trap",
    "mov     eax, dword [rbp-0x44]",
    "mov     dword [rbx], eax",
    "jmp     0x4bf90",
    "lea     rax, [rel exit_immediately_on_error]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "je      0x4a828",
    "xor     eax, eax",
    "test    cl, 0x40",
    "sete    al",
    "mov     dword [rbp-0x68], eax",
    "jmp     0x4a9f6",
    "lea     rax, [rel line_number]",
    "mov     rbx, qword [r9+0x18]",
    "mov     qword [rbp-0x80], rax",
    "mov     eax, dword [rax]",
    "test    r14d, r14d",
    "je      0x4c80d",
    "test    r12d, r12d",
    "je      0x4d239",
    "jle     0x4cece",
    "xor     r15d, r15d",
    "test    al, 0x40",
    "sete    r15b",
    "jmp     0x4adab",
    "mov     rdi, qword [r9+0x18]",
    "test    r14d, r14d",
    "je      0x4adbc",
    "mov     rdi, qword [rbx+0x8]",
    "lea     r12, [rel line_number]",
    "mov     qword [rbp-0x68], r9",
    "or      dword [rdi+0x4], 0x8",
    "mov     r13d, dword [r12]",
    "call    execute_command",
    "mov     dword [r12], r13d",
    "mov     r9, qword [rbp-0x68]",
    "test    eax, eax",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "jne     0x4c7e2",
    "or      dword [rbx], 0x8",
    "or      dword [r9+0x4], 0x2",
    "mov     ecx, dword [rbp-0x68]",
    "mov     rdi, r9",
    "mov     esi, 0x1",
    "mov     r8, qword [rbp-0x78]",
    "mov     edx, dword [rbp-0x70]",
    "mov     qword [rbp-0x68], r9",
    "call    execute_command_internal",
    "lea     r15, [rel last_command_exit_value]",
    "mov     r9, qword [rbp-0x68]",
    "mov     r13d, eax",
    "jmp     0x4acd8",
    "mov     rax, qword [r9+0x18]",
    "mov     rdi, qword [rax+0x8]",
    "test    r14d, r14d",
    "je      0x4affe",
    "mov     esi, 0x1",
    "mov     qword [rbp-0x68], r9",
    "call    sub_4dd70",
    "lea     r15, [rel last_command_exit_value]",
    "mov     r9, qword [rbp-0x68]",
    "mov     r13d, eax",
    "jmp     0x4acd8",
    "or      dword [rdi], 0x8",
    "xor     esi, esi",
    "mov     qword [rbp-0x68], r9",
    "call    sub_4dd70",
    "lea     r15, [rel last_command_exit_value]",
    "mov     r9, qword [rbp-0x68]",
    "mov     r13d, eax",
    "jmp     0x4acd8",
    "or      dword [rdi], 0x8",
    "lea     rdx, [rel line_number]",
    "lea     rdi, [rel data_11fbb8]  {\"case %s in \"}",
    "mov     qword [rbp-0x68], r9",
    "mov     eax, dword [rdx]",
    "mov     qword [rbp-0x80], rdx",
    "mov     dword [rbp-0x98], eax",
    "mov     eax, dword [r13+0x4]",
    "mov     dword [rdx], eax",
    "lea     rax, [rel command_string_index]",
    "mov     dword [rax], 0x0",
    "mov     rax, qword [r13+0x8]",
    "mov     rsi, qword [rax]",
    "xor     eax, eax",
    "call    sub_473b0",
    "lea     rax, [rel echo_command_at_execute]",
    "mov     r9, qword [rbp-0x68]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "jne     0x4c888",
    "or      dword [r13], 0x8",
    "lea     rax, [rel line_number]",
    "mov     rdi, qword [rbx+0x8]",
    "mov     esi, 0x1",
    "mov     qword [rbp-0x68], r9",
    "mov     qword [rbp-0x80], rax",
    "mov     r12d, dword [rax]",
    "call    check_identifier",
    "mov     r9, qword [rbp-0x68]",
    "test    eax, eax",
    "jne     0x4c8e8",
    "or      dword [rbx], 0x8",
    "lea     rax, [rel loop_level]",
    "add     dword [rax], 0x1",
    "mov     qword [rbp-0xc8], rax",
    "lea     rax, [rel line_number]",
    "mov     qword [rbp-0x80], rax",
    "mov     r12d, dword [rax]",
    "test    byte [r13], 0x8",
    "je      0x4b49c",
    "or      dword [r13], 0x8",
    "mov     r15, qword [rbp-0xe0]",
    "mov     esi, 0x1",
    "mov     qword [rbp-0x68], r9",
    "mov     rdi, qword [r15+0x8]",
    "call    check_identifier",
    "mov     r9, qword [rbp-0x68]",
    "test    eax, eax",
    "je      0x4b444",
    "or      dword [rax], 0x8",
    "mov     r14, qword [rbp-0x80]",
    "mov     eax, dword [r14]",
    "mov     dword [rbp-0x44], eax",
    "lea     rax, [rel line_number_for_err_trap]",
    "mov     eax, dword [rax]",
    "mov     dword [r14], eax",
    "call    run_error_trap",
    "mov     eax, dword [rbp-0x44]",
    "mov     dword [r14], eax",
    "test    ebx, ebx",
    "je      0x4a828",
    "jmp     0x4ac0a",
    "lea     r12, [rel line_number_for_err_trap]",
    "mov     dword [rbp-0x44], eax",
    "mov     dword [r12], eax",
    "cmp     edx, 0xa",
    "je      0x4d0cb",
    "cmp     edx, 0xa",
    "je      0x4d0ba",
    "lea     rdx, [rel executing_list]",
    "add     dword [rdx], 0x1",
    "lea     rdx, [rel terminating_signal]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "jne     0x4d7f5",
    "mov     rdx, qword [rax+0x8]",
    "test    rdx, rdx",
    "je      0x4d22c",
    "cmp     edx, 0xa",
    "je      0x4d21a",
    "cmp     edx, 0x7c",
    "je      0x4cfd6",
    "test    byte [r9+0x5], 0x4",
    "je      0x4adc9",
    "test    rdi, rdi",
    "je      0x4adbc",
    "test    eax, eax",
    "jne     0x4d18c",
    "test    eax, eax",
    "jne     0x4d139",
    "mov     rbx, qword [rbp-0xb0]",
    "test    rbx, rbx",
    "je      0x4bff4",
    "mov     r8, qword [rbp-0x78]",
    "mov     ecx, dword [rbp-0x68]",
    "xor     esi, esi",
    "mov     qword [rbp-0x80], r9",
    "mov     edx, dword [rbp-0x70]",
    "call    execute_command_internal",
    "lea     r15, [rel last_command_exit_value]",
    "mov     r9, qword [rbp-0x80]",
    "mov     r13d, eax",
    "jmp     0x4acd8",
    "test    rdi, rdi",
    "je      0x4affe",
    "mov     rdi, r13",
    "call    xtrace_print_case_command_head",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4b0df",
    "mov     eax, dword [rel data_1612a4]",
    "lea     rdx, [rel running_trap]",
    "and     eax, 0x10",
    "or      eax, dword [rdx]",
    "jne     0x4b168",
    "lea     rax, [rel loop_level]",
    "mov     rdx, qword [rbp-0x80]",
    "mov     esi, 0x1e",
    "mov     qword [rbp-0x70], r9",
    "mov     rdi, qword [rbx+0x10]",
    "add     dword [rax], 0x1",
    "mov     qword [rbp-0xc8], rax",
    "mov     rax, qword [rbx+0x8]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x68], rax",
    "mov     eax, dword [rbx+0x4]",
    "mov     dword [rdx], eax",
    "call    sub_85ef0",
    "lea     rdi, [rel data_11f578]",
    "mov     qword [rbp-0x98], rax",
    "call    begin_unwind_frame",
    "lea     rcx, [rel uwcache]",
    "mov     r9, qword [rbp-0x70]",
    "mov     eax, dword [rcx+0xc]",
    "test    eax, eax",
    "jle     0x4d792",
    "lea     rax, [rel posixly_correct]",
    "cmp     dword [rax], 0x0",
    "je      0x4b444",
    "lea     rdx, [rel data_11f57c[4]]  {\"((\"}",
    "lea     rax, [rel this_command_name]",
    "mov     ebx, dword [r13+0x4]",
    "mov     r10d, dword [r15]",
    "mov     qword [rax], rdx",
    "mov     rdx, qword [rbp-0x80]",
    "mov     dword [rdx], ebx",
    "test    r10d, r10d",
    "je      0x4b4ee",
    "mov     rax, qword [r13+0x20]",
    "or      dword [rax+0x4], 0x8",
    "lea     r15, [rel last_command_exit_value]",
    "mov     r13d, 0x1",
    "jmp     0x4acd8",
    "lea     rdx, [rel line_number]",
    "mov     eax, dword [r15+0x4]",
    "xor     r8d, r8d",
    "mov     rdi, r15",
    "mov     ebx, dword [rdx]",
    "mov     dword [rdx], eax",
    "lea     rax, [rel command_string_index]",
    "mov     qword [rbp-0x80], rdx",
    "mov     dword [rax], r8d",
    "call    print_select_command_head",
    "lea     rax, [rel echo_command_at_execute]",
    "mov     r9, qword [rbp-0x68]",
    "cmp     dword [rax], 0x0",
    "jne     0x4d124",
    "jmp     0x4ac0a",
    "call    run_pending_traps",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], r10d",
    "call    sub_49f50",
    "lea     r15, [rel last_command_exit_value]",
    "mov     r10d, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "mov     r13d, eax",
    "jmp     0x4abaf",
    "cmp     edx, 0xb",
    "je      0x4aa39",
    "lea     r12, [rel line_number_for_err_trap]",
    "or      dword [rbx], 0x8",
    "mov     dword [rbp-0x44], eax",
    "mov     dword [r12], eax",
    "cmp     edx, 0xb",
    "jne     0x4d639",
    "lea     rdx, [rel terminating_signal]",
    "cmp     dword [rel data_161100], 0x0",
    "mov     edi, dword [rdx]",
    "jne     0x4d254",
    "lea     rdx, [rel interrupt_state]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "jne     0x4d7df",
    "mov     rdx, qword [rax+0x10]",
    "test    rdx, rdx",
    "je      0x4d239",
    "or      dword [rdx+0x4], 0x8",
    "cmp     edx, 0x26",
    "jne     0x4da9e",
    "mov     eax, dword [rel data_1612a8]",
    "mov     r15d, eax",
    "and     r15d, 0x1",
    "jne     0x4d76f",
    "lea     ecx, [rdx-0x120]",
    "cmp     ecx, 0x1",
    "ja      0x4da9e",
    "mov     eax, dword [rdi+0x4]",
    "mov     rdx, qword [rbp-0x80]",
    "mov     dword [rdx], eax",
    "test    byte [rel data_1612a8], 0x10",
    "jne     0x4adf0",
    "or      dword [rdi], 0x400",
    "or      dword [rdi], 0x8",
    "lea     rax, [rel terminating_signal]",
    "mov     qword [rbp-0x68], r9",
    "mov     edi, dword [rax]",
    "call    termsig_handler",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4c7ea",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4d17a",
    "lea     rax, [rel terminating_signal]",
    "mov     edi, dword [rax]",
    "call    termsig_handler",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4afa1",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4d208",
    "cmp     qword [rbp-0xa0], 0x0",
    "je      0x4ad41",
    "mov     esi, 0x1",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x68], r9",
    "call    do_redirections",
    "mov     rdi, rbx",
    "call    dispose_redirects",
    "cmp     qword [rbp-0xa0], 0x0",
    "mov     r9, qword [rbp-0x68]",
    "je      0x4ad23",
    "or      dword [rdi+0x4], 0x8",
    "mov     eax, dword [rel data_1612a4]",
    "and     eax, 0x51",
    "cmp     eax, 0x1",
    "je      0x4d1d2",
    "lea     rax, [rel the_printed_command_except_trap]",
    "mov     rdi, qword [rax]",
    "mov     qword [rbp-0x90], rax",
    "test    rdi, rdi",
    "je      0x4b116",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x70], r9",
    "call    malloc",
    "test    rax, rax",
    "je      0x31e1d",
    "sub     eax, 0x1",
    "mov     rsi, qword [rcx]",
    "mov     dword [rcx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rsi+rax*8]",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x0",
    "je      0x4d82e",
    "mov     rdi, qword [r13+0x8]",
    "lea     r14, [rbp-0x40]",
    "mov     qword [rbp-0x68], r9",
    "mov     rsi, r14",
    "call    sub_49ce0",
    "mov     r9d, dword [rbp-0x40]",
    "test    r9d, r9d",
    "mov     r9, qword [rbp-0x68]",
    "je      0x4c8e0",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x0",
    "je      0x4b4ee",
    "mov     rdi, qword [rbp-0xe0]",
    "call    xtrace_print_select_command_head",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4b6cc",
    "mov     eax, dword [rel data_1612a4]",
    "lea     rdx, [rel running_trap]",
    "and     eax, 0x10",
    "or      eax, dword [rdx]",
    "jne     0x4b755",
    "mov     eax, dword [rbp-0x44]",
    "mov     rbx, qword [rbp-0x80]",
    "mov     dword [rbx], eax",
    "test    r14d, r14d",
    "jne     0x4c6f9",
    "mov     eax, dword [rbx+0x4]",
    "mov     rdx, qword [rbp-0x80]",
    "and     cl, 0x10",
    "lea     r13, [rel running_trap]",
    "mov     dword [rdx], eax",
    "jne     0x4aa59",
    "lea     rax, [rel posixly_correct]",
    "mov     r13, qword [rbx+0x8]",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], r10d",
    "mov     esi, dword [rax]",
    "mov     rdi, r13",
    "call    check_identifier",
    "mov     r10d, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "test    eax, eax",
    "jne     0x4d4dc",
    "lea     r12, [rel line_number_for_err_trap]",
    "mov     dword [rbp-0x44], eax",
    "mov     dword [r12], eax",
    "jmp     0x4c82d",
    "lea     r12, [rel line_number_for_err_trap]",
    "or      dword [rbx], 0x8",
    "mov     dword [rbp-0x44], eax",
    "mov     ecx, dword [rel data_1612a8]",
    "mov     dword [r12], eax",
    "jmp     0x4a4b7",
    "mov     qword [rbp-0x80], r9",
    "call    throw_to_top_level",
    "mov     r9, qword [rbp-0x80]",
    "mov     rax, qword [r9+0x18]",
    "jmp     0x4d265",
    "mov     rdi, qword [rax+0x8]",
    "mov     qword [rbp-0x80], r9",
    "call    execute_command",
    "lea     rax, [rel terminating_signal]",
    "mov     r9, qword [rbp-0x80]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4d7c4",
    "or      dword [rdx+0x4], 0x8",
    "xor     ecx, ecx",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11fd62]  {\"execute_connection\"}",
    "call    command_error",
    "{ Does not return }",
    "mov     r14, qword [rax+0x8]",
    "test    r14, r14",
    "je      0x4d9ca",
    "xor     r15d, r15d",
    "test    al, 0x40",
    "sete    r15b",
    "jmp     0x4cfe9",
    "test    al, 0x10",
    "jne     0x4d00b",
    "test    ebx, ebx",
    "jne     0x4d395",
    "mov     edx, dword [rbp-0x68]",
    "mov     r8, qword [rbp-0x78]",
    "mov     ecx, ebx",
    "mov     qword [rbp-0x88], r9",
    "mov     esi, dword [rbp-0x70]",
    "call    sub_57140",
    "mov     rdx, qword [rbp-0x80]",
    "mov     r9, qword [rbp-0x88]",
    "mov     r13d, eax",
    "mov     eax, dword [rbp-0x44]",
    "mov     dword [rdx], eax",
    "lea     rax, [rel temporary_env]",
    "cmp     qword [rax], 0x0",
    "je      0x4ae51",
    "lea     rdx, [rel running_trap]",
    "cmp     dword [rdx], 0x43",
    "je      0x4adf0",
    "mov     qword [rbp-0x68], r9",
    "call    throw_to_top_level",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4c7fb",
    "mov     rdi, qword [rbx+0x18]",
    "test    rdi, rdi",
    "jne     0x4afbb",
    "mov     qword [rbp-0x68], r9",
    "call    throw_to_top_level",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4afb2",
    "mov     rdi, qword [rbx+0x10]",
    "test    rdi, rdi",
    "je      0x4afc4",
    "mov     eax, dword [rbp-0x54]",
    "test    eax, eax",
    "jne     0x4c1b2",
    "jmp     0x4ad0f",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0x4ad41",
    "mov     rdi, qword [rbp-0xa0]",
    "mov     qword [rbp-0x68], r9",
    "call    dispose_redirects",
    "mov     r9, qword [rbp-0x68]",
    "mov     qword [rbp-0x68], r9",
    "call    sub_8f3f0",
    "lea     rdx, [rel debugging_mode]",
    "mov     r9, qword [rbp-0x68]",
    "cmp     dword [rdx], 0x0",
    "je      0x4b17a",
    "mov     rdi, qword [r13+0x8]",
    "xor     esi, esi",
    "mov     qword [rbp-0x68], r9",
    "call    expand_word_leave_quoted",
    "mov     r9, qword [rbp-0x68]",
    "test    rax, rax",
    "mov     rbx, rax",
    "je      0x4d1a7",
    "lea     rax, [rel the_printed_command]",
    "mov     qword [rbp-0x68], r9",
    "mov     r12, qword [rax]",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0x68]",
    "test    rax, rax",
    "mov     r14, rax",
    "je      0x4daf2",
    "mov     qword [rbp-0x68], r9",
    "call    free",
    "mov     r9, qword [rbp-0x68]",
    "mov     r9, qword [rbp-0x70]",
    "jmp     0x4c957",
    "mov     rax, qword [rbp-0x98]",
    "lea     r13, [rel data_11fbd6[2]]  {\"%s%s\"}",
    "lea     r14, [rel data_122e02]",
    "lea     r15, [rel data_1204ae[4]]  {\" \"}",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0x4cc21",
    "mov     rax, qword [rbx+0x18]",
    "or      dword [rax+0x4], 0x8",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edi, 0x4",
    "mov     dword [rax], 0x2",
    "call    jump_to_top_level",
    "{ Does not return }",
    "mov     r13d, 0x1",
    "jmp     0x4c8cd",
    "mov     qword [rbp-0x70], r9",
    "mov     r15, qword [rbp-0x80]",
    "jmp     0x4b5b1",
    "lea     rax, [rel sourcelevel]",
    "cmp     dword [rax], 0x0",
    "jne     0x4b4ee",
    "mov     eax, dword [rel data_1612a4]",
    "and     eax, 0x51",
    "sub     eax, 0x1",
    "je      0x4d745",
    "lea     rax, [rel the_printed_command_except_trap]",
    "mov     rdi, qword [rax]",
    "mov     qword [rbp-0x90], rax",
    "test    rdi, rdi",
    "je      0x4b703",
    "or      r10d, r14d",
    "jne     0x4acd8",
    "cmp     dword [rbp-0x68], 0x0",
    "je      0x4c6f9",
    "cmp     dword [r15], 0x0",
    "je      0x4aa90",
    "cmp     dword [r13], 0x43",
    "je      0x4aa59",
    "mov     r15, qword [r13]",
    "mov     esi, 0x1",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], r10d",
    "mov     rdi, r15",
    "call    strchr",
    "mov     r10d, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "test    rax, rax",
    "je      0x4d522",
    "lea     rax, [rel posixly_correct]",
    "cmp     dword [rax], 0x0",
    "je      0x4c876",
    "lea     rax, [rel terminating_signal]",
    "cmp     dword [rel data_161100], 0x0",
    "mov     edi, dword [rax]",
    "jne     0x4d287",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4d7b2",
    "lea     r15, [rel last_command_exit_value]",
    "jmp     0x4d0b2",
    "test    r12d, r12d",
    "je      0x4cef7",
    "mov     ecx, dword [rbp-0x68]",
    "mov     r8, qword [rbp-0x78]",
    "mov     rdi, r9",
    "mov     esi, ebx",
    "mov     edx, dword [rbp-0x70]",
    "mov     qword [rbp-0x68], r9",
    "call    sub_4ea00",
    "test    ebx, ebx",
    "mov     r9, qword [rbp-0x68]",
    "mov     r13d, eax",
    "jne     0x4d66a",
    "lea     rax, [rel running_trap]",
    "cmp     dword [rax], 0x43",
    "je      0x4d00b",
    "or      r14d, 0x2",
    "mov     r8, qword [rbp-0x78]",
    "mov     ecx, dword [rbp-0x68]",
    "mov     rdi, r9",
    "mov     dword [r9+0x4], r14d",
    "mov     edx, dword [rbp-0x70]",
    "mov     esi, 0x1",
    "mov     qword [rbp-0x68], r9",
    "call    execute_command_internal",
    "xor     r8d, r8d",
    "lea     r15, [rel last_command_exit_value]",
    "mov     r9, qword [rbp-0x68]",
    "mov     dword [rbp-0xa8], r8d",
    "mov     r13d, eax",
    "jmp     0x4acd8",
    "lea     rdx, [rel executing_list]",
    "mov     rdi, qword [rax+0x8]",
    "add     dword [rdx], 0x1",
    "test    rdi, rdi",
    "je      0x4ac78",
    "lea     rax, [rel already_making_children]",
    "cmp     dword [rbp-0x68], 0xffffffff",
    "sete    r12b",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x4ae6f",
    "lea     rdi, [rel sub_5d790]",
    "mov     qword [rbp-0x78], r9",
    "call    sub_5c040",
    "lea     rax, [rel array_needs_making]",
    "mov     r9, qword [rbp-0x78]",
    "cmp     dword [rax], 0x0",
    "je      0x4ae51",
    "lea     rdx, [rel line_number_for_err_trap]",
    "mov     dword [rdx], eax",
    "test    byte [rbx], 0x8",
    "je      0x4afc4",
    "jmp     0x4afc4",
    "mov     qword [rbp-0x68], r9",
    "call    execute_command",
    "lea     r15, [rel last_command_exit_value]",
    "mov     r9, qword [rbp-0x68]",
    "mov     r13d, eax",
    "jmp     0x4acd8",
    "mov     eax, dword [rel data_161064]",
    "mov     dword [rbp-0x4c], eax",
    "mov     ecx, dword [rbp-0x4c]",
    "mov     eax, dword [rbp-0x48]",
    "cmp     ecx, eax",
    "jg      0x4c598",
    "mov     edx, dword [rbp-0xa8]",
    "test    edx, edx",
    "je      0x4ad61",
    "lea     rdi, [rel data_11fd29]  {\"loop_redirections\"}",
    "mov     qword [rbp-0x68], r9",
    "call    sub_113da0",
    "mov     r9, qword [rbp-0x68]",
    "test    eax, eax",
    "je      0x4b17a",
    "mov     edi, 0x1",
    "mov     qword [rbp-0x68], r9",
    "call    malloc",
    "mov     r9, qword [rbp-0x68]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0x4db0c",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "mov     rdi, rax",
    "call    string_list_internal",
    "mov     r14, rax",
    "mov     rdi, rax",
    "call    dequote_string",
    "mov     rdi, r14",
    "mov     r15, rax",
    "call    free",
    "mov     r9, qword [rbp-0x68]",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "mov     rdi, r14",
    "mov     qword [rbp-0x68], r9",
    "call    __strcpy_chk",
    "mov     rdx, qword [rbp-0x90]",
    "mov     r9, qword [rbp-0x68]",
    "mov     qword [rdx], r14",
    "mov     rcx, qword [rel data_161a50]",
    "mov     rdx, qword [rbp-0x98]",
    "mov     qword [rax], rcx",
    "lea     rcx, [rel dispose_words]",
    "mov     qword [rax+0x10], rdx",
    "mov     qword [rax+0x8], rcx",
    "mov     qword [rel data_161a50], rax",
    "test    byte [rbx], 0x8",
    "je      0x4c98b",
    "mov     rax, qword [rbp-0xc8]",
    "mov     rdi, qword [rbp-0x98]",
    "mov     qword [rbp-0x68], r9",
    "sub     dword [rax], 0x1",
    "mov     rax, qword [rbp-0x80]",
    "mov     dword [rax], r12d",
    "call    dispose_words",
    "cmp     qword [rel data_161a50], 0x0",
    "mov     r9, qword [rbp-0x68]",
    "je      0x4bdbc",
    "mov     dword [rbp-0x78], r12d",
    "mov     qword [rbp-0x70], rdx",
    "mov     qword [rbp-0x90], r9",
    "mov     rax, qword [rbp-0x80]",
    "lea     r15, [rel last_command_exit_value]",
    "mov     dword [rax], r12d",
    "jmp     0x4acd8",
    "mov     rdi, qword [r13+0x10]",
    "mov     rsi, r14",
    "mov     dword [r15], ebx",
    "call    sub_49ce0",
    "mov     r8d, dword [rbp-0x40]",
    "mov     dword [r15], r12d",
    "test    r8d, r8d",
    "je      0x4c8ae",
    "mov     eax, ebx",
    "sub     eax, dword [rel data_1619c8]",
    "mov     ecx, 0x1",
    "add     eax, 0x1",
    "test    eax, eax",
    "cmovle  eax, ecx",
    "mov     dword [rdx], eax",
    "mov     qword [rbp-0x68], r9",
    "call    sub_8f3f0",
    "lea     rdx, [rel debugging_mode]",
    "mov     r9, qword [rbp-0x68]",
    "cmp     dword [rdx], 0x0",
    "je      0x4b767",
    "lea     rax, [rel this_command_name]",
    "xor     esi, esi",
    "mov     rdx, qword [rbp-0xe0]",
    "mov     qword [rbp-0x68], r9",
    "mov     qword [rax], rsi",
    "lea     rax, [rel loop_level]",
    "mov     esi, 0x1e",
    "mov     rdi, qword [rdx+0x10]",
    "add     dword [rax], 0x1",
    "mov     qword [rbp-0xc8], rax",
    "mov     rax, qword [rdx+0x8]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0xf0], rax",
    "call    sub_85ef0",
    "xor     edi, edi",
    "mov     r9, qword [rbp-0x68]",
    "test    rax, rax",
    "mov     qword [rbp-0x98], rax",
    "mov     dword [rbp-0x70], edi",
    "je      0x4c899",
    "lea     rax, [rel the_printed_command]",
    "mov     qword [rbp-0x68], r9",
    "mov     r13, qword [rax]",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r9, qword [rbp-0x68]",
    "test    rax, rax",
    "mov     r14, rax",
    "je      0x4d970",
    "mov     qword [rbp-0x68], r9",
    "call    free",
    "mov     r9, qword [rbp-0x68]",
    "lea     rax, [rel exit_immediately_on_error]",
    "cmp     dword [rax], 0x0",
    "jne     0x4d0fc",
    "test    r10d, r10d",
    "jne     0x4c6f9",
    "lea     rax, [rel command_string_index]",
    "xor     edi, edi",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], r10d",
    "mov     dword [rax], edi",
    "xor     eax, eax",
    "lea     rdi, [rel data_11fb05]",
    "call    sub_473b0",
    "mov     rdi, rbx",
    "call    sub_478a0",
    "xor     eax, eax",
    "lea     rdi, [rel 0x11f5f5]",
    "call    sub_473b0",
    "mov     eax, dword [rel data_1612a4]",
    "mov     r10d, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "and     eax, 0x10",
    "or      eax, dword [r13]",
    "jne     0x4ab67",
    "lea     rdx, [rel interactive_shell]",
    "cmp     dword [rdx], 0x0",
    "je      0x4aa90",
    "mov     dword [r12], eax",
    "lea     rax, [rel posixly_correct]",
    "cmp     dword [rax], 0x0",
    "je      0x4d568",
    "mov     rdi, r15",
    "call    dequote_escapes",
    "mov     rdi, qword [r13]",
    "mov     r15, rax",
    "call    free",
    "mov     qword [r13], r15",
    "mov     r9, qword [rbp-0x78]",
    "mov     r10d, dword [rbp-0x70]",
    "lea     r15, [rel last_command_exit_value]",
    "mov     r13d, 0x1",
    "jmp     0x4abaf",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x0",
    "je      0x4d82e",
    "jmp     0x4a4b7",
    "mov     qword [rbp-0x80], r9",
    "call    throw_to_top_level",
    "mov     r9, qword [rbp-0x80]",
    "jmp     0x4d298",
    "mov     rdi, r9",
    "mov     qword [rbp-0x80], r9",
    "call    optimize_connection_fork",
    "mov     r9, qword [rbp-0x80]",
    "mov     r8, qword [rbp-0x78]",
    "mov     esi, ebx",
    "mov     ecx, dword [rbp-0x68]",
    "mov     edx, dword [rbp-0x70]",
    "mov     rax, qword [r9+0x18]",
    "mov     rdi, qword [rax+0x10]",
    "call    execute_command_internal",
    "lea     r15, [rel last_command_exit_value]",
    "mov     r9, qword [rbp-0x80]",
    "mov     r13d, eax",
    "lea     rax, [rel executing_list]",
    "sub     dword [rax], 0x1",
    "jmp     0x4cfc0",
    "xor     r13d, r13d",
    "jmp     0x4cfc0",
    "mov     eax, dword [r14+0x4]",
    "mov     edx, eax",
    "or      dh, 0x2",
    "mov     dword [r14+0x4], edx",
    "lea     rdx, [rel subshell_environment]",
    "cmp     dword [rdx], 0x0",
    "jne     0x4cf1c",
    "or      dword [r14+0x4], 0x8",
    "test    r12d, r12d",
    "jne     0x4d601",
    "test    r12d, r12d",
    "jne     0x4d654",
    "lea     rax, [rel line_number]",
    "mov     edx, dword [rax]",
    "lea     rax, [rel line_number_for_err_trap]",
    "mov     dword [rax], edx",
    "mov     qword [rbp-0x68], r9",
    "call    execute_command",
    "mov     r9, qword [rbp-0x68]",
    "mov     r13d, eax",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4d497",
    "or      dword [rdi+0x4], 0x8",
    "test    r14d, r14d",
    "jne     0x4ae96",
    "test    r12b, r12b",
    "jne     0x4d308",
    "call    sub_5ea30",
    "mov     r9, qword [rbp-0x78]",
    "or      dword [rdi+0x4], 0x8",
    "mov     esi, dword [rbp-0x50]",
    "mov     rdi, qword [rbp-0xb8]",
    "mov     qword [rbp-0x68], r9",
    "call    close_new_fifos",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4c1c9",
    "mov     rdi, qword [rbp-0xb8]",
    "mov     qword [rbp-0x68], r9",
    "call    free",
    "cmp     qword [rel data_161a50], 0x0",
    "mov     r9, qword [rbp-0x68]",
    "je      0x4ad4c",
    "mov     eax, dword [r9]",
    "sub     eax, 0xa",
    "cmp     eax, 0x1",
    "jbe     0x4c230",
    "test    r13d, r13d",
    "sete    r13b",
    "movzx   r13d, r13b",
    "mov     rax, qword [rbp-0x80]",
    "mov     edx, dword [rbp-0x98]",
    "mov     dword [rax], edx",
    "jmp     0x4c89f",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r12], 0x0",
    "mov     r15, r12",
    "jmp     0x4b1c2",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x68], r9",
    "call    malloc",
    "test    rax, rax",
    "je      0x31e1d",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "mov     r13d, dword [rbp-0x88]",
    "lea     r15, [rel last_command_exit_value]",
    "jmp     0x4acd8",
    "lea     rdi, [rel data_11f578]",
    "call    sub_113da0",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4bdbc",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    edx, edx",
    "jne     0x4c9d3",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4cc70",
    "mov     dword [rbp-0x88], 0x1",
    "mov     r9, qword [rbp-0x70]",
    "lea     rdx, [rel job_control]",
    "mov     edi, dword [rdx]",
    "test    edi, edi",
    "je      0x4b5ea",
    "test    eax, eax",
    "jne     0x4c89f",
    "mov     rax, qword [rbp-0x80]",
    "mov     dword [rax], ebx",
    "xor     edx, edx",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, r13",
    "mov     rdi, r14",
    "mov     qword [rbp-0x68], r9",
    "call    __strcpy_chk",
    "mov     rdx, qword [rbp-0x90]",
    "mov     r9, qword [rbp-0x68]",
    "mov     qword [rdx], r14",
    "xor     ecx, ecx",
    "mov     dword [rbp-0xa8], ecx",
    "test    r13d, r13d",
    "je      0x4acd8",
    "xor     esi, esi",
    "mov     dword [rbp-0xa8], esi",
    "jmp     0x4acd8",
    "test    r13d, r13d",
    "je      0x4c6f9",
    "mov     eax, dword [rel data_1612a4]",
    "and     eax, 0x51",
    "sub     eax, 0x1",
    "je      0x4d86c",
    "lea     rax, [rel the_printed_command_except_trap]",
    "mov     rdi, qword [rax]",
    "mov     qword [rbp-0x90], rax",
    "test    rdi, rdi",
    "je      0x4ab05",
    "lea     rdx, [rel sourcelevel]",
    "cmp     dword [rdx], 0x0",
    "jne     0x4aa90",
    "lea     rax, [rel shell_functions]",
    "xor     edx, edx",
    "mov     rdi, r15",
    "mov     dword [rbp-0x78], r10d",
    "mov     qword [rbp-0x88], r9",
    "mov     rcx, qword [rax]",
    "mov     rsi, rcx",
    "mov     qword [rbp-0x70], rcx",
    "call    hash_search",
    "mov     r10d, dword [rbp-0x78]",
    "mov     r9, qword [rbp-0x88]",
    "test    rax, rax",
    "je      0x4d5c1",
    "xor     esi, esi",
    "mov     rdi, r15",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], r10d",
    "call    builtin_address_internal",
    "lea     rdx, [rel current_builtin]",
    "mov     r10d, dword [rbp-0x70]",
    "test    rax, rax",
    "mov     r9, qword [rbp-0x78]",
    "mov     qword [rdx], rax",
    "je      0x4d568",
    "xor     eax, eax",
    "test    ebx, ebx",
    "cmove   eax, dword [rbp-0xa8]",
    "mov     dword [rbp-0xa8], eax",
    "jmp     0x4acd8",
    "lea     rdx, [rel stdin_redir]",
    "cmp     dword [rdx], 0x0",
    "jne     0x4cf2f",
    "lea     rdx, [rel job_control]",
    "cmp     dword [rdx], 0x0",
    "jne     0x4cf2f",
    "xor     eax, eax",
    "lea     r15, [rel last_command_exit_value]",
    "xor     r13d, r13d",
    "mov     dword [rbp-0xa8], eax",
    "jmp     0x4acd8",
    "lea     r15, [rel last_command_exit_value]",
    "jmp     0x4d099",
    "and     r14b, 0xc",
    "lea     r15, [rel last_command_exit_value]",
    "jne     0x4acd8",
    "test    r15d, r15d",
    "je      0x4d654",
    "lea     rax, [rel terminating_signal]",
    "cmp     dword [rel data_161100], 0x0",
    "mov     edi, dword [rax]",
    "jne     0x4ac99",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4d485",
    "lea     r15, [rel last_command_exit_value]",
    "test    r15d, r15d",
    "je      0x4ae96",
    "xor     esi, esi",
    "mov     edi, ebx",
    "mov     qword [rbp-0x78], r9",
    "call    stop_pipeline",
    "test    ebx, ebx",
    "mov     r9, qword [rbp-0x78]",
    "je      0x4da43",
    "lea     rdi, [rel data_11fd1a]  {\"internal_fifos\"}",
    "call    sub_113da0",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4ad4c",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_158490]",
    "mov     dword [rel data_158490], r13d",
    "call    set_pipestatus_array",
    "jmp     0x4ad70",
    "mov     dword [r15], r13d",
    "call    run_pending_traps",
    "mov     qword [rel data_161a20], 0x0",
    "jmp     0x4a828",
    "xor     r13d, r13d",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x68], r9",
    "call    dispose_words",
    "mov     eax, dword [r13]",
    "lea     rdi, [rel data_122678]  {\"case\"}",
    "and     eax, 0x8",
    "mov     dword [rbp-0x70], eax",
    "call    begin_unwind_frame",
    "lea     rdx, [rel uwcache]",
    "mov     r9, qword [rbp-0x68]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0x4d2e8",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4b209",
    "mov     rdi, r15",
    "mov     qword [rbp-0x68], r9",
    "call    free",
    "cmp     qword [rel data_161a50], 0x0",
    "mov     r9, qword [rbp-0x68]",
    "je      0x4bdb0",
    "mov     qword [rbp-0x78], r9",
    "mov     rcx, r14",
    "jmp     0x4a4b7",
    "call    throw_to_top_level",
    "jmp     0x4c9e4",
    "mov     eax, dword [rbx+0x4]",
    "mov     rdx, qword [rbp-0x80]",
    "lea     rdi, [rel data_11fb28]  {\"for %s in \"}",
    "mov     dword [rdx], eax",
    "lea     rax, [rel command_string_index]",
    "mov     dword [rax], 0x0",
    "mov     rax, qword [rbx+0x8]",
    "mov     rsi, qword [rax]",
    "xor     eax, eax",
    "call    sub_473b0",
    "mov     r12, qword [rbx+0x10]",
    "test    r12, r12",
    "je      0x4ca47",
    "xor     edi, edi",
    "mov     qword [rbp-0x68], rax",
    "call    sub_67080",
    "lea     rdx, [rel js]",
    "mov     rax, qword [rbp-0x68]",
    "mov     ecx, dword [rdx+0x1c]",
    "test    ecx, ecx",
    "je      0x4b61a",
    "lea     rdx, [rel interactive_shell]",
    "mov     esi, dword [rdx]",
    "test    esi, esi",
    "jne     0x4b61a",
    "jmp     0x4b767",
    "mov     rax, qword [rax]",
    "add     edx, 0x1",
    "test    rax, rax",
    "jne     0x4b7c6",
    "lea     rdi, [rel data_11f583]  {\"select\"}",
    "mov     dword [rbp-0x70], edx",
    "mov     qword [rbp-0x68], r9",
    "call    begin_unwind_frame",
    "lea     rdx, [rel uwcache]",
    "mov     r9, qword [rbp-0x68]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0x4d89e",
    "jmp     0x4ac07",
    "mov     dword [r15], r13d",
    "mov     dword [rbp-0x44], eax",
    "mov     eax, dword [r12]",
    "mov     qword [rbp-0x68], r9",
    "mov     dword [rbx], eax",
    "call    run_error_trap",
    "mov     eax, dword [rbp-0x44]",
    "mov     dword [rbx], eax",
    "lea     rax, [rel exit_immediately_on_error]",
    "cmp     dword [rax], 0x0",
    "je      0x4d4d3",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], r10d",
    "call    sub_8f3f0",
    "lea     rdx, [rel debugging_mode]",
    "mov     r10d, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "cmp     dword [rdx], 0x0",
    "je      0x4ab79",
    "lea     rax, [rel this_command_name]",
    "lea     rdx, [rel data_11f797]",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], r10d",
    "mov     qword [rax], rdx",
    "call    sub_4fba0",
    "lea     r15, [rel last_command_exit_value]",
    "mov     r10d, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "mov     r13d, eax",
    "mov     dword [r15], eax",
    "lea     rax, [rel the_printed_command]",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], r10d",
    "mov     r15, qword [rax]",
    "mov     rdi, r15",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r10d, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x4da6e",
    "call    free",
    "mov     r9, qword [rbp-0x78]",
    "mov     r10d, dword [rbp-0x70]",
    "sub     eax, dword [rel data_1619c8]",
    "mov     edx, 0x1",
    "add     eax, 0x1",
    "test    eax, eax",
    "cmovle  eax, edx",
    "mov     rdx, qword [rbp-0x80]",
    "mov     dword [rdx], eax",
    "mov     rdi, qword [r13]",
    "mov     edx, 0x1",
    "mov     rsi, rbx",
    "mov     qword [rbp-0x70], r9",
    "mov     dword [rbp-0x68], r10d",
    "call    bind_function_def",
    "mov     rsi, qword [rbx+0x10]",
    "mov     rdi, qword [r13]",
    "call    bind_function",
    "mov     r10d, dword [rbp-0x68]",
    "mov     r9, qword [rbp-0x70]",
    "mov     rcx, qword [rbp-0x70]",
    "mov     rax, qword [rax+0x10]",
    "mov     qword [rel data_1619d8], rcx",
    "test    rax, rax",
    "je      0x4d5c1",
    "test    byte [rax+0x10], 0x8",
    "je      0x4d568",
    "mov     r8, qword [rbp-0x78]",
    "mov     ecx, dword [rbp-0x68]",
    "mov     esi, 0x1",
    "mov     rdi, r14",
    "mov     edx, dword [rbp-0x70]",
    "mov     qword [rbp-0x80], r9",
    "call    execute_command_internal",
    "mov     r9, qword [rbp-0x80]",
    "mov     r13d, eax",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4d699",
    "or      ah, 0x6",
    "mov     dword [r14+0x4], eax",
    "lea     rax, [rel exit_immediately_on_error]",
    "cmp     dword [rax], 0x0",
    "je      0x4d64c",
    "jmp     0x4d096",
    "test    r14b, 0x4",
    "jne     0x4d654",
    "jmp     0x4a4b7",
    "mov     qword [rbp-0x68], r9",
    "call    throw_to_top_level",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4acaa",
    "mov     rbx, qword [r9+0x18]",
    "mov     eax, dword [rbx+0x18]",
    "cmp     eax, 0x120",
    "je      0x4d445",
    "lea     rax, [rel posixly_correct]",
    "cmp     dword [rax], 0x0",
    "je      0x4aed2",
    "mov     eax, dword [rbp-0xa8]",
    "xor     eax, 0x1",
    "cmp     dword [rbp-0x70], 0xffffffff",
    "sete    cl",
    "test    cl, al",
    "je      0x4ae96",
    "lea     rax, [rel last_made_pid]",
    "mov     ecx, dword [rax]",
    "add     ecx, 0x1",
    "je      0x4ae6f",
    "lea     rax, [rel interactive]",
    "cmp     dword [rax], 0x0",
    "jne     0x4da2c",
    "mov     rdx, qword [rel data_161a50]",
    "mov     r14, qword [r13+0x10]",
    "mov     qword [rax+0x10], r15",
    "mov     qword [rax], rdx",
    "lea     rdx, [rel xfree]",
    "mov     qword [rel data_161a50], rax",
    "mov     qword [rax+0x8], rdx",
    "test    r14, r14",
    "je      0x4bd86",
    "mov     rax, qword [rbp-0x80]",
    "mov     edx, dword [rbp-0x98]",
    "mov     dword [rax], edx",
    "lea     rdi, [rel data_122678]  {\"case\"}",
    "call    sub_113da0",
    "mov     r9, qword [rbp-0x68]",
    "lea     rax, [rel terminating_signal]",
    "mov     esi, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    esi, esi",
    "jne     0x4b24e",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c200",
    "lea     rax, [rel echo_command_at_execute]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4cca0",
    "nop     dword [rax+rax]",
    "test    rax, rax",
    "je      0x4d171",
    "mov     edx, dword [rel data_160908]",
    "test    edx, edx",
    "jne     0x4b61a",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x68], r9",
    "call    malloc",
    "test    rax, rax",
    "je      0x31e1d",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "mov     dword [r15], r13d",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4c712",
    "test    eax, eax",
    "jne     0x4d5ef",
    "mov     qword [rbp-0x78], rax",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x88], r9",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r13",
    "mov     rsi, r15",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x78], r9",
    "mov     dword [rbp-0x70], r10d",
    "call    __strcpy_chk",
    "mov     rdx, qword [rbp-0x90]",
    "mov     r9, qword [rbp-0x78]",
    "mov     r10d, dword [rbp-0x70]",
    "mov     qword [rdx], rax",
    "mov     edx, dword [rax+0x28]",
    "test    edx, 0x4002",
    "jne     0x4dab1",
    "cmp     qword [rax+0x8], 0x0",
    "jne     0x4d92c",
    "lea     rax, [rel terminating_signal]",
    "cmp     dword [rel data_161100], 0x0",
    "mov     edi, dword [rax]",
    "jne     0x4cf62",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4d687",
    "mov     r13d, r12d",
    "jmp     0x4cfc0",
    "test    r12d, r12d",
    "jne     0x4db8d",
    "mov     r12d, r13d",
    "test    eax, eax",
    "je      0x4d654",
    "test    r13d, r13d",
    "jne     0x4acc7",
    "cmp     eax, 0x121",
    "je      0x4d9fa",
    "lea     rax, [rel exit_immediately_on_error]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0xa8], eax",
    "test    eax, eax",
    "je      0x4acd8",
    "lea     rax, [rel interactive]",
    "cmp     dword [rax], 0x0",
    "jne     0x4aed2",
    "test    r12b, r12b",
    "jne     0x4d341",
    "mov     edi, dword [rax]",
    "xor     esi, esi",
    "mov     qword [rbp-0x78], r9",
    "call    wait_for",
    "mov     r9, qword [rbp-0x78]",
    "mov     r13d, eax",
    "jmp     0x4ae6f",
    "lea     rax, [rel last_made_pid]",
    "mov     edi, dword [rax]",
    "call    describe_pid",
    "mov     r9, qword [rbp-0x78]",
    "jmp     0x4d331",
    "xor     esi, esi",
    "xor     r13d, r13d",
    "mov     dword [rbp-0xa8], esi",
    "jmp     0x4ae6f",
    "jmp     0x4a4b7",
    "mov     qword [rbp-0x68], rcx",
    "call    throw_to_top_level",
    "mov     rcx, qword [rbp-0x68]",
    "jmp     0x4b25f",
    "mov     r12, qword [rcx+0x8]",
    "test    r12, r12",
    "je      0x4bd76",
    "mov     rdi, rbx",
    "call    xtrace_print_for_command_head",
    "jmp     0x4ca58",
    "mov     eax, dword [rel data_1612a4]",
    "lea     rdx, [rel running_trap]",
    "and     eax, 0x10",
    "or      eax, dword [rdx]",
    "jne     0x4cad7",
    "mov     rax, qword [r12+0x8]",
    "cmp     qword [r12], 0x0",
    "mov     rdx, r15",
    "mov     rdi, r13",
    "cmove   rdx, r14",
    "mov     rsi, qword [rax]",
    "xor     eax, eax",
    "call    sub_473b0",
    "mov     r12, qword [r12]",
    "test    r12, r12",
    "jne     0x4ca20",
    "mov     r9, qword [rbp-0x70]",
    "jmp     0x4c8bc",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x4b520",
    "call    sub_6aab0",
    "mov     rax, qword [rbp-0x68]",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4b809",
    "movsxd  rax, dword [rbp-0x70]",
    "mov     dword [rbp-0x68], 0x1",
    "mov     dword [rbp-0xd0], ebx",
    "mov     qword [rbp-0xf8], rax",
    "mov     qword [rbp-0xd8], r9",
    "mov     rax, qword [rax+0x18]",
    "or      dword [rax+0x4], 0x8",
    "mov     eax, dword [rbp-0x44]",
    "mov     rdx, qword [rbp-0x80]",
    "or      r10d, r14d",
    "mov     dword [rdx], eax",
    "jne     0x4c89f",
    "jmp     0x4ab79",
    "and     dl, 0x2",
    "je      0x4c876",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fd75]  {\"`%s': is a special builtin\"}",
    "call    dcgettext",
    "mov     rsi, r15",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "lea     rax, [rel last_command_exit_value]",
    "mov     dword [rax], 0x2",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x1",
    "sbb     edi, edi",
    "and     edi, 0x2",
    "add     edi, 0x2",
    "call    jump_to_top_level",
    "{ Does not return }",
    "jmp     0x4a4b7",
    "mov     qword [rbp-0x80], r9",
    "call    throw_to_top_level",
    "mov     r9, qword [rbp-0x80]",
    "jmp     0x4cf73",
    "mov     eax, dword [r14+0x4]",
    "test    ah, 0x4",
    "je      0x4cf83",
    "mov     dword [r15], r12d",
    "jmp     0x4ac0a",
    "lea     rdx, [rel line_number]",
    "lea     r15, [rel last_command_exit_value]",
    "mov     dword [r15], eax",
    "mov     eax, dword [rdx]",
    "mov     qword [rbp-0x80], rdx",
    "mov     dword [rbp-0x40], eax",
    "lea     rax, [rel line_number_for_err_trap]",
    "mov     eax, dword [rax]",
    "mov     dword [rdx], eax",
    "mov     eax, dword [rel data_1612a8]",
    "and     eax, 0x51",
    "sub     eax, 0x1",
    "je      0x4db28",
    "lea     rax, [rel executing_list]",
    "lea     r15, [rel last_command_exit_value]",
    "sub     dword [rax], 0x1",
    "mov     rdi, r9",
    "mov     qword [rbp-0x68], r9",
    "call    optimize_connection_fork",
    "test    r12d, r12d",
    "mov     rdi, qword [rbx+0x10]",
    "mov     r9, qword [rbp-0x68]",
    "je      0x4d470",
    "test    r13d, r13d",
    "je      0x4acc7",
    "mov     eax, dword [rbp-0x68]",
    "mov     edx, dword [rbp-0x70]",
    "xor     ecx, ecx",
    "mov     dword [rbp-0xa8], ecx",
    "and     eax, edx",
    "add     eax, 0x1",
    "jne     0x4acd8",
    "cmp     dword [rel data_1619e0], 0x0",
    "jne     0x4af0b",
    "mov     rax, qword [r9+0x18]",
    "mov     eax, dword [rax]",
    "test    ah, 0x8",
    "jne     0x4ae96",
    "mov     rcx, qword [rcx]",
    "test    rcx, rcx",
    "jne     0x4b23d",
    "mov     qword [rbp-0x68], rcx",
    "jmp     0x4b2c1",
    "mov     eax, dword [rel data_1612a4]",
    "and     eax, 0x51",
    "cmp     eax, 0x1",
    "je      0x4cdb0",
    "lea     rax, [rel the_printed_command_except_trap]",
    "mov     rdi, qword [rax]",
    "mov     qword [rbp-0xc0], rax",
    "test    rdi, rdi",
    "je      0x4ca87",
    "mov     rax, qword [rbp-0xc8]",
    "mov     r13d, dword [rbp-0x88]",
    "sub     dword [rax], 0x1",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c288",
    "lea     rax, [rel terminating_signal]",
    "mov     r11d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r11d, r11d",
    "jne     0x4b520",
    "mov     rdx, qword [rel data_161a50]",
    "mov     qword [rax], rdx",
    "lea     rdx, [rel dispose_words]",
    "mov     qword [rel data_161a50], rax",
    "mov     qword [rax+0x8], rdx",
    "mov     rdx, qword [rbp-0x98]",
    "mov     qword [rax+0x10], rdx",
    "mov     rax, qword [rbp-0xe0]",
    "test    byte [rax], 0x8",
    "je      0x4b844",
    "lea     rax, [rel data_11fd16]",
    "mov     qword [rbp-0xe8], rax",
    "jmp     0x4b8a0",
    "call    get_variable_value",
    "mov     qword [rbp-0xe8], rax",
    "test    rax, rax",
    "je      0x4c76a",
    "mov     rbx, qword [rax]",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "mov     qword [rbp-0x78], r9",
    "lea     rsi, [rel data_11fd90]  {\"%s: readonly function\"}",
    "mov     dword [rbp-0x70], r10d",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "mov     r10d, dword [rbp-0x70]",
    "mov     r9, qword [rbp-0x78]",
    "jmp     0x4c876",
    "mov     rax, qword [r9+0x18]",
    "mov     rdi, qword [rax+0x10]",
    "test    rdi, rdi",
    "je      0x4d67b",
    "and     ah, 0xfb",
    "mov     dword [r14+0x4], eax",
    "lea     rsi, [rel data_11fd57]  {\"error trap\"}",
    "mov     edi, 0x42",
    "mov     qword [rbp-0x68], r9",
    "call    sub_8e640",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4d08d",
    "mov     eax, dword [rbp-0x40]",
    "mov     rdx, qword [rbp-0x80]",
    "mov     dword [rdx], eax",
    "mov     qword [rbp-0x68], r9",
    "call    execute_command",
    "mov     r9, qword [rbp-0x68]",
    "mov     r13d, eax",
    "jmp     0x4acc7",
    "test    rdi, rdi",
    "je      0x4d470",
    "jmp     0x4d44e",
    "test    r13d, r13d",
    "je      0x4acd8",
    "mov     dword [r15], r13d",
    "call    run_pending_traps",
    "lea     rax, [rel exit_immediately_on_error]",
    "cmp     dword [rax], 0x0",
    "je      0x4ac0f",
    "test    r13d, r13d",
    "je      0x4ae96",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c212",
    "mov     r9, qword [rbp-0x78]",
    "lea     rdx, [rel ifs_is_null]",
    "mov     rbx, qword [r12+0x8]",
    "mov     dword [rel data_1619c4], 0x1",
    "mov     edx, dword [rdx]",
    "mov     eax, dword [rbx+0x8]",
    "test    edx, edx",
    "je      0x4b2e3",
    "call    sub_8f3f0",
    "mov     dword [rbp-0x88], eax",
    "mov     edx, eax",
    "lea     rax, [rel debugging_mode]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x4cae9",
    "lea     rax, [rel this_command_name]",
    "mov     rdi, qword [rbp-0x68]",
    "mov     esi, 0x1",
    "mov     qword [rax], 0x0",
    "call    find_variable_last_nameref",
    "mov     r8, rax",
    "test    rax, rax",
    "je      0x4cb17",
    "lea     rax, [rel the_printed_command]",
    "mov     rax, qword [rax]",
    "mov     rdi, rax",
    "mov     qword [rbp-0x88], rax",
    "call    strlen",
    "add     rax, 0x1",
    "mov     rdi, rax",
    "mov     r12, rax",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x4d9d6",
    "call    free",
    "call    throw_to_top_level",
    "jmp     0x4b531",
    "mov     rdi, qword [r13+0x20]",
    "call    execute_command",
    "mov     dword [rbp-0x88], eax",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c266",
    "jmp     0x4a4b7",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c74f",
    "lea     r15, [rel last_command_exit_value]",
    "jmp     0x4cfc0",
    "test    r12d, r12d",
    "je      0x4cf9d",
    "or      dword [rdi+0x4], 0x8",
    "mov     edi, 0x4",
    "call    jump_to_top_level",
    "{ Does not return }",
    "test    byte [rel data_1611a0], 0x1",
    "je      0x4ac0f",
    "lea     rax, [rel line_number_for_err_trap]",
    "mov     rbx, qword [rbp-0x80]",
    "mov     qword [rbp-0x78], r9",
    "lea     r15, [rel last_command_exit_value]",
    "mov     eax, dword [rax]",
    "mov     dword [r15], r13d",
    "mov     dword [rbx], eax",
    "call    run_error_trap",
    "mov     eax, dword [rbp-0x44]",
    "mov     r9, qword [rbp-0x78]",
    "mov     dword [rbx], eax",
    "jmp     0x4ae9d",
    "or      eax, 0x40",
    "xor     r8d, r8d",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "mov     dword [rbx+0x8], eax",
    "xor     esi, esi",
    "mov     rdi, rbx",
    "call    sub_83630",
    "mov     r13, rax",
    "lea     rax, [rel data_1619b0]",
    "cmp     r13, rax",
    "je      0x4d706",
    "or      eax, 0x10",
    "test    edx, edx",
    "jne     0x4cc02",
    "mov     rax, qword [rbp-0x70]",
    "mov     rdi, qword [rbp-0x68]",
    "xor     edx, edx",
    "mov     rax, qword [rax+0x8]",
    "mov     rsi, qword [rax]",
    "call    bind_variable",
    "mov     r8, rax",
    "test    byte [rax+0x29 {Elf64_Header::section_header_offset+1.b}], 0x8",
    "jne     0x4ccd8",
    "mov     qword [rbp-0xd0], rax",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, qword [rbp-0x88]",
    "mov     rdx, r12",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     rdx, qword [rbp-0xc0]",
    "mov     qword [rdx], rax",
    "lea     rax, [rel terminating_signal]",
    "mov     r10d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r10d, r10d",
    "jne     0x4b551",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c25c",
    "lea     rax, [rel terminating_signal]",
    "cmp     dword [rel data_161100], 0x0",
    "mov     edi, dword [rax]",
    "jne     0x4b8b1",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c745",
    "mov     r8, qword [rbp-0x78]",
    "mov     ecx, dword [rbp-0x68]",
    "mov     esi, ebx",
    "mov     qword [rbp-0x80], r9",
    "mov     edx, dword [rbp-0x70]",
    "call    execute_command_internal",
    "lea     r15, [rel last_command_exit_value]",
    "mov     r9, qword [rbp-0x80]",
    "mov     r13d, eax",
    "or      dword [rdi+0x4], 0x8",
    "lea     rbx, [rel data_11fd3b]  {\"saved-redirects\"}",
    "mov     rdi, rbx",
    "call    unwind_protect_tag_on_stack",
    "test    eax, eax",
    "je      0x4ac0f",
    "xor     eax, eax",
    "test    r14d, r14d",
    "setne   al",
    "or      eax, dword [rbp-0xa8]",
    "jne     0x4acd8",
    "xor     eax, eax",
    "xor     edi, edi",
    "mov     qword [rbx], rax",
    "lea     rax, [rel last_command_exit_value]",
    "mov     dword [rax], 0x1",
    "lea     rax, [rel data_1619b0]",
    "cmp     r13, rax",
    "sete    dil",
    "add     edi, 0x1",
    "call    sub_85e80",
    "{ Does not return }",
    "lea     rax, [rel data_1619a0]",
    "cmp     r13, rax",
    "je      0x4d706",
    "mov     rax, qword [rbp-0x70]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x70], rax",
    "test    rax, rax",
    "jne     0x4c9c2",
    "jmp     0x4cae9",
    "mov     r12d, dword [rbp-0x78]",
    "mov     rax, qword [rbp-0x80]",
    "mov     r9, qword [rbp-0x90]",
    "mov     dword [rax], r12d",
    "jmp     0x4cd73",
    "mov     ecx, dword [r8+0x28]",
    "test    ecx, 0x4002",
    "jne     0x4d6b4",
    "mov     rax, qword [rbp-0x70]",
    "mov     rax, qword [rax+0x8]",
    "mov     rdi, qword [rax]",
    "test    rdi, rdi",
    "je      0x4cd2e",
    "jmp     0x4a4b7",
    "call    throw_to_top_level",
    "jmp     0x4b562",
    "lea     rax, [rel breaking]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4d730",
    "jmp     0x4a4b7",
    "call    throw_to_top_level",
    "jmp     0x4b8c2",
    "call    default_columns",
    "mov     rbx, qword [rbp-0x98]",
    "xor     r14d, r14d",
    "mov     dword [rel data_161a90], 0x8",
    "mov     dword [rel data_161a94], eax",
    "nop     dword [rax]",
    "mov     rdi, rbx",
    "call    run_unwind_frame",
    "jmp     0x4ac0f",
    "mov     dword [rel data_1619c4], 0x0",
    "test    r13, r13",
    "je      0x4b346",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4cc7a",
    "mov     r12d, dword [rbp-0x78]",
    "mov     r9, qword [rbp-0x90]",
    "mov     rdi, qword [rbp-0x98]",
    "mov     qword [rbp-0x68], r9",
    "call    dispose_words",
    "cmp     qword [rel data_161a50], 0x0",
    "mov     r9, qword [rbp-0x68]",
    "je      0x4cda1",
    "mov     r12d, dword [rbp-0x78]",
    "mov     rax, qword [rbp-0x80]",
    "and     cl, 0x2",
    "mov     r9, qword [rbp-0x90]",
    "mov     dword [rax], r12d",
    "je      0x4cd73",
    "mov     rax, qword [rbp-0x68]",
    "cmp     byte [rax], 0x49",
    "jne     0x4cb5c",
    "mov     rdx, qword [rbp-0x70]",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "xor     edi, edi",
    "mov     r12d, dword [rbp-0x78]",
    "mov     r9, qword [rbp-0x90]",
    "mov     rax, qword [rdx+0x8]",
    "mov     edx, 0x5",
    "mov     qword [rbp-0x68], r9",
    "mov     rbx, qword [rax]",
    "call    dcgettext",
    "mov     rdi, rax",
    "mov     rsi, rbx",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     rax, qword [rbp-0x80]",
    "mov     r9, qword [rbp-0x68]",
    "mov     dword [rax], r12d",
    "cmp     byte [rdi], 0x0",
    "mov     qword [rbp-0x88], r8",
    "je      0x4cd2e",
    "lea     rdx, [rel breaking]",
    "sub     eax, 0x1",
    "mov     r9, qword [rbp-0x70]",
    "mov     dword [rdx], eax",
    "jmp     0x4c8bc",
    "lea     rax, [rel continuing]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x4b592",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "call    sub_41390",
    "mov     rbx, qword [rbx]",
    "cmp     r14d, eax",
    "cmovl   r14d, eax",
    "test    rbx, rbx",
    "jne     0x4b8e8",
    "mov     eax, dword [rbp-0x70]",
    "cmp     eax, 0x9",
    "jle     0x4c63d",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x4d8be",
    "mov     rax, qword [r13+0x8]",
    "test    rax, rax",
    "je      0x4b346",
    "mov     rax, qword [rbp-0xc8]",
    "sub     dword [rax], 0x1",
    "jmp     0x4b444",
    "lea     rdi, [rel data_11f578]",
    "call    sub_113da0",
    "mov     r9, qword [rbp-0x68]",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x0",
    "jne     0x4cd73",
    "mov     rdi, qword [rbp-0x68]",
    "call    stupidly_hack_special_variables",
    "cmp     byte [rax+0x1], 0x46",
    "je      0x4ce18",
    "mov     qword [rbp-0xc0], rdi",
    "call    legal_identifier",
    "mov     r8, qword [rbp-0x88]",
    "test    eax, eax",
    "jne     0x4cddb",
    "mov     rdi, qword [r13+0x18]",
    "mov     rsi, r14",
    "mov     dword [r15], ebx",
    "call    sub_49ce0",
    "mov     r9d, dword [rbp-0x40]",
    "mov     dword [r15], r12d",
    "test    r9d, r9d",
    "je      0x4c8ae",
    "lea     rdx, [rel continuing]",
    "sub     eax, 0x1",
    "mov     dword [rdx], eax",
    "jne     0x4d171",
    "mov     ecx, dword [rbp-0x68]",
    "add     r14d, 0x5",
    "test    ecx, ecx",
    "jne     0x4d389",
    "cmp     eax, 0x63",
    "jg      0x4bb0a",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     edx, 0x1",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     byte [rax], 0x0",
    "mov     rdi, qword [rax]",
    "test    rdi, rdi",
    "je      0x4b346",
    "lea     rax, [rel posixly_correct]",
    "cmp     dword [rax], 0x0",
    "je      0x4cd73",
    "xor     edi, edi",
    "call    sub_67080",
    "lea     rax, [rel js]",
    "mov     eax, dword [rax+0x1c]",
    "test    eax, eax",
    "je      0x4cbb4",
    "lea     rax, [rel interactive_shell]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4cbb4",
    "cmp     byte [rax+0x2], 0x53",
    "jne     0x4cb5c",
    "test    byte [r8+0x28], 0x2",
    "je      0x4ce39",
    "mov     rdi, qword [rbp-0xc0]",
    "xor     edx, edx",
    "xor     esi, esi",
    "call    tokenize_array_reference",
    "mov     r8, qword [rbp-0x88]",
    "test    eax, eax",
    "jne     0x4cddb",
    "mov     r13, qword [rel stderr]",
    "jmp     0x4b9c4",
    "mov     dword [rbp-0x68], 0x1",
    "mov     r13, qword [rel stderr]",
    "jmp     0x4b934",
    "mov     eax, dword [rbp-0x70]",
    "cmp     eax, 0x3e7",
    "jle     0x4d150",
    "add     r14d, 0x6",
    "cmp     dword [rbp-0x68], 0x0",
    "mov     r13, qword [rel stderr]",
    "mov     dword [rbp-0x68], 0x2",
    "jne     0x4bb4a",
    "mov     ebx, 0x1",
    "jmp     0x4b3a7",
    "test    r14, r14",
    "je      0x4bc30",
    "cmp     byte [rdi], 0x0",
    "jne     0x4bd60",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edi, 0x1",
    "mov     dword [rax], 0x1",
    "call    jump_to_top_level",
    "{ Does not return }",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4ccb7",
    "mov     r12d, dword [rel data_160908]",
    "test    r12d, r12d",
    "jne     0x4cbb4",
    "cmp     byte [rax+0x3], 0x0",
    "jne     0x4cb5c",
    "mov     rax, qword [rbp-0x70]",
    "mov     rdi, r8",
    "mov     edx, 0x10",
    "mov     rax, qword [rax+0x8]",
    "mov     rsi, qword [rax]",
    "call    bind_variable_value",
    "mov     r8, rax",
    "jmp     0x4cb30",
    "mov     r12, qword [r8]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fcf9]  {\"%s: readonly variable\"}",
    "xor     edi, edi",
    "mov     qword [rbp-0x88], r8",
    "call    dcgettext",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    report_error",
    "mov     r8, qword [rbp-0x88]",
    "jmp     0x4cb39",
    "test    r14d, r14d",
    "jne     0x4bb53",
    "mov     rsi, qword [r13]",
    "mov     rdi, qword [rbp-0xe8]",
    "call    fputs",
    "mov     rdi, qword [r13]",
    "call    fflush",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c5be",
    "add     r14d, 0x7",
    "cmp     dword [rbp-0x68], 0x0",
    "mov     r13, qword [rel stderr]",
    "mov     dword [rbp-0x68], 0x3",
    "je      0x4b934",
    "cmp     eax, 0x270f",
    "jle     0x4d4b2",
    "test    r14d, r14d",
    "je      0x4b9d7",
    "mov     rdi, r14",
    "call    free",
    "mov     rdi, r13",
    "call    dispose_words",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x4b278",
    "lea     rax, [rel extended_glob]",
    "xor     edx, edx",
    "mov     rsi, r15",
    "mov     rdi, r14",
    "mov     ebx, dword [rax]",
    "lea     rax, [rel match_ignore_case]",
    "test    ebx, ebx",
    "mov     eax, dword [rax]",
    "setne   dl",
    "shl     edx, 0x5",
    "test    eax, eax",
    "setne   al",
    "movzx   eax, al",
    "shl     eax, 0x4",
    "or      edx, eax",
    "call    xstrmatch",
    "mov     ebx, eax",
    "mov     esi, 0x9",
    "call    quote_string_for_globbing",
    "mov     r14, rax",
    "jmp     0x4b35f",
    "lea     rax, [rel terminating_signal]",
    "mov     r11d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r11d, r11d",
    "jne     0x4cbc5",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4ccad",
    "call    sub_6aab0",
    "mov     rdi, r8",
    "call    setifs",
    "jmp     0x4cb65",
    "test    r8, r8",
    "je      0x4db76",
    "mov     eax, dword [rel data_161a94]",
    "cdq     ",
    "idiv    r14d",
    "mov     ecx, eax",
    "test    eax, eax",
    "je      0x4d810",
    "cmp     dword [rbp-0x70], 0x1",
    "je      0x4bba9",
    "lea     rax, [rel terminating_signal]",
    "mov     r11d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r11d, r11d",
    "jne     0x4b95e",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c5b4",
    "jmp     0x4bb4a",
    "add     r14d, 0x8",
    "cmp     dword [rbp-0x68], 0x0",
    "mov     r13, qword [rel stderr]",
    "mov     dword [rbp-0x68], 0x4",
    "je      0x4b934",
    "cmp     eax, 0x1869f  {\"s_mode_str\"}",
    "jle     0x4d618",
    "xor     r14d, r14d",
    "cmp     dword [rbp-0x70], 0x9",
    "mov     r9d, dword [rbp-0x70]",
    "mov     r8d, 0x1",
    "jle     0x4ba2a",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4bc40",
    "lea     rax, [rel terminating_signal]",
    "mov     r11d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r11d, r11d",
    "jne     0x4b278",
    "test    r15, r15",
    "je      0x4bc30",
    "jmp     0x4a4b7",
    "call    throw_to_top_level",
    "jmp     0x4cbd6",
    "lea     rax, [rel breaking]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x4d77d",
    "mov     rdi, qword [rbx+0x18]",
    "call    execute_command",
    "mov     dword [rbp-0x88], eax",
    "lea     rax, [rel job_control]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x4cb8e",
    "cmp     dword [rbp-0x70], 0x1",
    "je      0x4bba9",
    "mov     eax, dword [rbp-0x70]",
    "cdq     ",
    "idiv    ecx",
    "mov     ecx, eax",
    "mov     eax, dword [rbp-0x70]",
    "cmp     edx, 0x1",
    "sbb     ecx, 0xffffffff",
    "cdq     ",
    "idiv    ecx",
    "cmp     edx, 0x1",
    "sbb     eax, 0xffffffff",
    "cmp     ecx, 0x1",
    "mov     r9d, eax",
    "cmovne  r9d, ecx",
    "cmp     r9d, 0x9",
    "jg      0x4b9ea",
    "mov     r9d, 0x1",
    "mov     r8d, 0x1",
    "jmp     0x4ba2a",
    "jmp     0x4a4b7",
    "call    throw_to_top_level",
    "jmp     0x4b96f",
    "lea     r12, [rel executing_builtin]",
    "xor     edi, edi",
    "mov     r15d, dword [r12]",
    "mov     dword [r12], 0x1",
    "call    read_builtin",
    "mov     dword [r12], r15d",
    "test    eax, eax",
    "jne     0x4c77d",
    "jmp     0x4bb4a",
    "add     r14d, 0x9",
    "cmp     dword [rbp-0x68], 0x0",
    "mov     r13, qword [rel stderr]",
    "mov     dword [rbp-0x68], 0x5",
    "je      0x4b934",
    "add     r14d, 0xa",
    "cmp     dword [rbp-0x68], 0x0",
    "mov     r13, qword [rel stderr]",
    "mov     dword [rbp-0x68], 0x6",
    "je      0x4b934",
    "mov     dword [rbp-0x88], r9d",
    "xor     r12d, r12d",
    "mov     dword [rbp-0x90], r8d",
    "mov     qword [rbp-0x100], rbx",
    "mov     ebx, r12d",
    "mov     r8d, 0x2",
    "cmp     r9d, 0x63",
    "jle     0x4ba2a",
    "call    throw_to_top_level",
    "jmp     0x4b289",
    "cmp     ebx, 0x1",
    "jne     0x4c03a",
    "jmp     0x4a4b7",
    "sub     ecx, 0x1",
    "mov     r12d, dword [rbp-0x78]",
    "mov     r9, qword [rbp-0x90]",
    "mov     dword [rax], ecx",
    "jmp     0x4cc21",
    "lea     rax, [rel continuing]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x4cc02",
    "mov     eax, dword [rbp-0x70]",
    "mov     r9d, eax",
    "cmp     eax, 0x9",
    "jg      0x4b9ea",
    "test    r9d, r9d",
    "jle     0x4b934",
    "mov     rax, qword [rel stdout]",
    "mov     edi, 0xa",
    "mov     rsi, qword [rax]",
    "call    putc",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x4c683",
    "lea     rdi, [rel data_122fcf[4]]  {\"REPLY\"}",
    "call    find_variable",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x4c672",
    "jmp     0x4bb4a",
    "mov     rbx, qword [rbp-0x98]",
    "nop     dword [rax]",
    "mov     rbx, qword [rbp-0x98]",
    "mov     eax, r15d",
    "jmp     0x4ba81",
    "mov     r8d, 0x3",
    "cmp     r9d, 0x3e7",
    "jle     0x4ba2a",
    "mov     r10d, dword [rbp-0x70]",
    "mov     rcx, qword [rbp-0x68]",
    "test    r10d, r10d",
    "mov     r12, rcx",
    "setne   bl",
    "jmp     0x4c05d",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4bc60",
    "lea     rdx, [rel continuing]",
    "sub     eax, 0x1",
    "mov     dword [rdx], eax",
    "jne     0x4cc16",
    "jmp     0x4bb9e",
    "mov     r8d, 0x1",
    "jmp     0x4ba2a",
    "lea     rax, [rel interrupt_state]",
    "mov     ebx, dword [rbp-0xd0]",
    "mov     r9, qword [rbp-0xd8]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4d112",
    "lea     rax, [rel terminating_signal]",
    "cmp     dword [rel data_161100], 0x0",
    "mov     edi, dword [rax]",
    "jne     0x4c3d2",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c7a2",
    "call    get_variable_value",
    "test    rax, rax",
    "je      0x4c672",
    "mov     edx, dword [rbp-0x88]",
    "lea     eax, [r12+rax+0x2]",
    "add     r15d, edx",
    "cmp     dword [rbp-0x70], r15d",
    "jle     0x4bdd0",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0x4ba78",
    "mov     r8d, 0x4",
    "cmp     r9d, 0x270f",
    "jle     0x4ba2a",
    "mov     rdi, qword [r12+0x10]",
    "test    rdi, rdi",
    "je      0x4c06f",
    "lea     rax, [rel terminating_signal]",
    "mov     r9d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r9d, r9d",
    "jne     0x4b2a3",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4bc50",
    "mov     qword [rbp-0x68], r9",
    "call    throw_to_top_level",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4c6a1",
    "mov     r13d, 0x1",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4d2de",
    "jmp     0x4a4b7",
    "cmp     byte [rax], 0x0",
    "jne     0x4c36a",
    "mov     rsi, qword [r13]",
    "mov     ebx, dword [rbp-0xc0]",
    "mov     edi, 0xa",
    "call    putc",
    "mov     eax, dword [rbp-0x88]",
    "add     ebx, 0x1",
    "cmp     ebx, eax",
    "jl      0x4ba45",
    "lea     ebx, [r14+r10]",
    "lea     r12d, [rax+r10]",
    "cmp     r14d, eax",
    "jg      0x4badc",
    "sub     eax, 0x1",
    "je      0x4bbe0",
    "xor     eax, eax",
    "mov     r8d, 0x6",
    "cmp     r9d, 0x1869f  {\"s_mode_str\"}",
    "mov     eax, 0x5",
    "cmovle  r8d, eax",
    "call    execute_command",
    "mov     edx, dword [r12+0x18]",
    "test    dl, 0x1",
    "jne     0x4c050",
    "test    bl, bl",
    "je      0x4c06f",
    "jmp     0x4a4b7",
    "call    throw_to_top_level",
    "jmp     0x4b2b4",
    "mov     r12, qword [r12]",
    "test    r12, r12",
    "je      0x4bd72",
    "lea     r15, [rel last_command_exit_value]",
    "jmp     0x4acd8",
    "lea     rdi, [rel data_11f583]  {\"select\"}",
    "mov     qword [rbp-0x68], r9",
    "call    sub_113da0",
    "lea     r15, [rel last_command_exit_value]",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x4acd8",
    "call    throw_to_top_level",
    "jmp     0x4c3e3",
    "test    rbx, rbx",
    "je      0x4db46",
    "lea     rsi, [rbp-0x40]",
    "mov     rdi, rax",
    "call    legal_number",
    "test    eax, eax",
    "je      0x4c608",
    "mov     r15d, dword [rbp-0x90]",
    "mov     dword [rbp-0xc0], ebx",
    "xor     r10d, r10d",
    "mov     r12d, r15d",
    "mov     r15d, ebx",
    "nop     dword [rax+rax]",
    "mov     rbx, qword [rbp-0x100]",
    "jmp     0x4b934",
    "mov     ecx, dword [rel data_161a90]",
    "mov     eax, ebx",
    "mov     rdi, qword [r13]",
    "cdq     ",
    "idiv    ecx",
    "mov     esi, eax",
    "mov     eax, r12d",
    "cdq     ",
    "idiv    ecx",
    "cmp     esi, eax",
    "mov     rsi, rdi",
    "jg      0x4bab8",
    "jmp     0x4bbc0",
    "mov     rax, qword [rbx+0x8]",
    "sub     rsp, 0x8",
    "mov     dword [rbp-0x78], r10d",
    "lea     r8d, [r15+0x1]",
    "mov     rdi, qword [r13]",
    "lea     rdx, [rel data_11fd4f]  {\"%*d%s%s\"}",
    "mov     ecx, r12d",
    "mov     esi, 0x2",
    "push    qword [rax]",
    "lea     r9, [rel data_11fcec]",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "call    sub_41390",
    "pop     rbx",
    "mov     r10d, dword [rbp-0x78]",
    "pop     rdx",
    "jmp     0x4ba8b",
    "mov     r12, qword [r12]",
    "test    r12, r12",
    "je      0x4c24d",
    "mov     dword [rbp-0x88], eax",
    "mov     rcx, r12",
    "test    dl, 0x2",
    "jne     0x4bd76",
    "or      dword [rdi+0x4], 0x8",
    "mov     rcx, qword [rbp-0x68]",
    "mov     ebx, dword [rbp-0xd0]",
    "mov     r9, qword [rbp-0xd8]",
    "jmp     0x4c6a1",
    "mov     rdi, qword [rbp-0xf0]",
    "xor     edx, edx",
    "mov     rsi, rbx",
    "call    bind_variable",
    "test    rax, rax",
    "je      0x4da08",
    "lea     rax, [rel terminating_signal]",
    "lea     rbx, [rel data_122e02]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c7a2",
    "mov     rax, qword [rbp-0x40]",
    "test    rax, rax",
    "jle     0x4c608",
    "mov     edi, 0x9",
    "call    putc",
    "mov     eax, r12d",
    "mov     ecx, dword [rel data_161a90]",
    "cdq     ",
    "idiv    ecx",
    "sub     ecx, edx",
    "add     r12d, ecx",
    "mov     edi, 0x20",
    "add     r12d, 0x1",
    "call    putc",
    "jmp     0x4bad3",
    "mov     r12d, dword [rbp-0x68]",
    "test    ebx, ebx",
    "mov     r10d, ebx",
    "cmove   r12d, dword [rbp-0x90]",
    "jmp     0x4ba60",
    "mov     dword [rbp-0x88], eax",
    "mov     r9, qword [rbp-0x78]",
    "jmp     0x4bd86",
    "jmp     0x4bd82",
    "mov     ebx, dword [rbp-0xd0]",
    "mov     r9, qword [rbp-0xd8]",
    "jmp     0x4d402",
    "mov     eax, dword [rax+0x28]",
    "test    eax, 0x4002",
    "jne     0x4d3d5",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4d0f2",
    "mov     rbx, qword [rbp-0xf8]",
    "mov     rdx, qword [rbp-0x98]",
    "cmp     rax, rbx",
    "jle     0x4c3b4",
    "cmp     ebx, r12d",
    "jle     0x4bbc0",
    "test    r15d, r15d",
    "je      0x4bbd6",
    "mov     rdi, qword [rbp-0x98]",
    "mov     qword [rbp-0x68], r9",
    "call    dispose_words",
    "cmp     qword [rel data_161a50], 0x0",
    "mov     r9, qword [rbp-0x68]",
    "je      0x4d430",
    "mov     ebx, dword [rbp-0xd0]",
    "mov     r9, qword [rbp-0xd8]",
    "test    al, 0x2",
    "je      0x4d402",
    "mov     rdi, qword [rbp-0xf0]",
    "call    stupidly_hack_special_variables",
    "mov     rax, qword [rbp-0xe0]",
    "mov     rdi, qword [rax+0x18]",
    "call    execute_command",
    "mov     r13d, eax",
    "lea     rax, [rel job_control]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "je      0x4c451",
    "call    throw_to_top_level",
    "jmp     0x4c631",
    "lea     rbx, [rel data_122e02]",
    "jmp     0x4c3ec",
    "sub     rax, 0x1",
    "jne     0x4c3a8",
    "jmp     0x4c608",
    "mov     rax, qword [rbp-0xc8]",
    "sub     dword [rax], 0x1",
    "mov     rax, qword [rbp-0x80]",
    "mov     dword [rax], ebx",
    "jmp     0x4b444",
    "lea     rdi, [rel data_11f583]  {\"select\"}",
    "call    sub_113da0",
    "mov     r9, qword [rbp-0x68]",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x0",
    "jne     0x4d402",
    "xor     edi, edi",
    "call    sub_67080",
    "lea     rax, [rel js]",
    "mov     r8d, dword [rax+0x1c]",
    "test    r8d, r8d",
    "je      0x4c476",
    "lea     rax, [rel interactive_shell]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "jne     0x4c476",
    "mov     rdx, qword [rdx]",
    "test    rdx, rdx",
    "je      0x31e0f",
    "mov     rax, qword [rdx+0x8]",
    "mov     rbx, qword [rax]",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c7a2",
    "lea     rax, [rel posixly_correct]",
    "cmp     dword [rax], 0x0",
    "jne     0x4d6ef",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c7c7",
    "cmp     dword [rel data_160908], 0x0",
    "jne     0x4c476",
    "mov     qword [rbp-0x40], rax",
    "mov     rax, qword [0x8]",
    "ud2     ",
    "{ Does not return }",
    "lea     rax, [rel terminating_signal]",
    "cmp     dword [rel data_161100], 0x0",
    "mov     edi, dword [rax]",
    "jne     0x4c487",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x4c7bd",
    "call    sub_6aab0",
    "jmp     0x4a4b7",
    "call    throw_to_top_level",
    "jmp     0x4c498",
    "lea     rax, [rel breaking]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x68], eax",
    "test    eax, eax",
    "jne     0x4db58",
    "lea     rdx, [rel breaking]",
    "sub     eax, 0x1",
    "mov     ebx, dword [rbp-0xd0]",
    "mov     r9, qword [rbp-0xd8]",
    "mov     dword [rdx], eax",
    "jmp     0x4c6a7",
    "lea     rax, [rel continuing]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x4c4cb",
    "mov     rax, qword [rbp-0xc8]",
    "mov     rdi, qword [rbp-0x98]",
    "mov     qword [rbp-0x68], r9",
    "sub     dword [rax], 0x1",
    "mov     rax, qword [rbp-0x80]",
    "mov     dword [rax], ebx",
    "call    dispose_words",
    "cmp     qword [rel data_161a50], 0x0",
    "mov     r9, qword [rbp-0x68]",
    "je      0x4c8a2",
    "lea     rdi, [rel data_122fcf[4]]  {\"REPLY\"}",
    "call    find_variable",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x4b863",
    "lea     rdx, [rel continuing]",
    "sub     eax, 0x1",
    "mov     dword [rdx], eax",
    "jne     0x4da1a",
    "mov     rax, qword [rbp-0xe0]",
    "mov     rdx, qword [rbp-0x80]",
    "lea     rdi, [rel data_11fd4b]",
    "mov     eax, dword [rax+0x4]",
    "mov     dword [rdx], eax",
    "call    find_variable",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x4c76a",
    "call    get_variable_value",
    "test    rax, rax",
    "je      0x4b863",
    "mov     ebx, dword [rbp-0xd0]",
    "mov     r9, qword [rbp-0xd8]",
    "jmp     0x4c6a7",
    "cmp     byte [rax], 0x0",
    "sete    al",
    "movzx   eax, al",
    "mov     dword [rbp-0x68], eax",
    "jmp     0x4b863"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xfd7f0",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     rbx, [rel rl_point]",
    "mov     r8d, dword [rbx]",
    "test    r8d, r8d",
    "je      0xfd8e1",
    "call    rl_ding",
    "mov     rbx, qword [rbp-0x8]",
    "xor     eax, eax",
    "leave   ",
    "retn    ",
    "mov     eax, 0x1",
    "test    edi, edi",
    "movsxd  rsi, r8d",
    "cmovle  edi, eax",
    "lea     rax, [rel rl_line_buffer]",
    "mov     rcx, qword [rax]",
    "lea     r9d, [rdi-0x1]",
    "nop     dword [rax+rax]",
    "sub     r9d, 0x1",
    "jae     0xfd830",
    "lea     edx, [rsi-0x1]",
    "lea     rdi, [rsi-0x2]",
    "movsxd  rax, edx",
    "mov     edx, edx",
    "sub     rdi, rdx",
    "jmp     0xfd856",
    "test    esi, esi",
    "je      0xfd89c",
    "mov     edi, r8d",
    "call    rl_kill_text",
    "lea     rax, [rel rl_editing_mode]",
    "cmp     dword [rax], 0x1",
    "je      0xfd8ce",
    "movzx   edx, byte [rcx+rax]",
    "cmp     dl, 0x20",
    "je      0xfd848",
    "mov     edx, dword [rbx]",
    "lea     rax, [rel rl_mark]",
    "mov     rbx, qword [rbp-0x8]",
    "mov     dword [rax], edx",
    "xor     eax, eax",
    "leave   ",
    "retn    ",
    "mov     rbx, qword [rbp-0x8]",
    "xor     eax, eax",
    "leave   ",
    "retn    ",
    "mov     dword [rbx], eax",
    "movsxd  rsi, eax",
    "sub     rax, 0x1",
    "cmp     rax, rdi",
    "je      0xfd867",
    "cmp     dl, 0x9",
    "je      0xfd848",
    "test    esi, esi",
    "je      0xfd8ee",
    "movsxd  rsi, dword [rbx]",
    "test    r9d, r9d",
    "je      0xfd8a2",
    "lea     edx, [rsi-0x1]",
    "lea     rdi, [rsi-0x2]",
    "movsxd  rax, edx",
    "mov     edx, edx",
    "sub     rdi, rdx",
    "nop     ",
    "sub     r9d, 0x2",
    "cmp     r9d, 0xffffffff",
    "jne     0xfd89c",
    "movsxd  rsi, dword [rbx]",
    "sub     r9d, 0x1",
    "jb      0xfd8a2",
    "cmp     dl, 0x9",
    "je      0xfd8c0",
    "jmp     0xfd8a2",
    "jmp     0xfd830",
    "mov     dword [rbx], eax",
    "movsxd  rsi, eax",
    "sub     rax, 0x1",
    "cmp     rdi, rax",
    "jne     0xfd880",
    "movzx   edx, byte [rcx+rax]",
    "cmp     dl, 0x20",
    "je      0xfd8c0"
  ]
}
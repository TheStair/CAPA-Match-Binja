{
  "address": "0x56800",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "terminate process",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdx",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x48",
    "mov     rax, qword [rdi+0x8]",
    "mov     r12d, dword [rbp+0x18]",
    "mov     qword [rbp-0x50], rsi",
    "mov     r14d, dword [rbp+0x18]",
    "mov     rbx, qword [rbp+0x10]",
    "mov     dword [rbp-0x34], ecx",
    "mov     rax, qword [rax]",
    "mov     dword [rbp-0x38], r8d",
    "and     r12d, 0x4000",
    "mov     dword [rbp-0x44], r9d",
    "and     r14d, 0x40",
    "mov     qword [rbp-0x40], rax",
    "lea     rax, [rel restricted]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x56a08",
    "mov     rdi, qword [rbp-0x40]",
    "mov     esi, 0x2f",
    "call    strchr",
    "test    rax, rax",
    "je      0x56859",
    "cmp     r12d, 0x1",
    "mov     rdi, qword [rbp-0x40]",
    "sbb     esi, esi",
    "and     esi, 0xfffffffe",
    "add     esi, 0x3",
    "call    search_for_command",
    "mov     r12, rax",
    "lea     rax, [rel terminating_signal]",
    "mov     qword [rbp-0x58], rax",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x56b70",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_132c68]  {\"%s: restricted: cannot specify `\u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x40]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "mov     edx, dword [rbp-0x34]",
    "mov     ecx, dword [rbp-0x38]",
    "lea     rax, [rel last_command_exit_value]",
    "and     edx, ecx",
    "mov     dword [rax], 0x1",
    "cmp     edx, 0xffffffff",
    "jne     0x56a63",
    "mov     rax, qword [rbp-0x58]",
    "mov     edi, dword [rax]",
    "mov     eax, dword [rel data_161100]",
    "test    eax, eax",
    "je      0x56a98",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x56b95",
    "lea     rax, [rel terminating_signal]",
    "mov     ebx, 0x1",
    "xor     r12d, r12d",
    "mov     qword [rbp-0x58], rax",
    "mov     rax, qword [rbp-0x58]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x56be0",
    "test    r14d, r14d",
    "jne     0x56deb",
    "call    sub_8e2b0",
    "{ Does not return }",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x56897",
    "call    throw_to_top_level",
    "jmp     0x56897",
    "mov     eax, dword [rbp-0x34]",
    "mov     ecx, dword [rbp-0x38]",
    "and     eax, ecx",
    "cmp     eax, 0xffffffff",
    "sete    al",
    "test    r14d, r14d",
    "setne   dl",
    "and     eax, edx",
    "test    r12, r12",
    "je      0x56ba0",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x56d30",
    "mov     rax, qword [rbp-0x58]",
    "mov     ecx, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    ecx, ecx",
    "jne     0x56be0",
    "mov     edi, dword [rax]",
    "call    exit",
    "{ Does not return }",
    "test    al, al",
    "je      0x568e6",
    "test    al, al",
    "jne     0x56cb0",
    "call    throw_to_top_level",
    "jmp     0x56bf1",
    "mov     eax, dword [rbp-0x34]",
    "test    eax, eax",
    "js      0x56bff",
    "mov     r9d, dword [rbp-0x44]",
    "xor     r14d, r14d",
    "mov     rdi, r15",
    "test    r9d, r9d",
    "setne   r14b",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x60], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x60]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x56dc9",
    "lea     r14, [rel subshell_environment]",
    "lea     r14, [rel subshell_environment]",
    "test    byte [r14], 0x10",
    "je      0x56d90",
    "lea     rax, [rel array_needs_making]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0x568d2",
    "mov     eax, dword [rbp-0x38]",
    "test    eax, eax",
    "js      0x56c0d",
    "mov     edi, eax",
    "call    close",
    "mov     qword [rbp-0x68], rax",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r15",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     esi, r14d",
    "mov     rdi, rax",
    "mov     r15, rax",
    "call    make_child",
    "test    eax, eax",
    "jne     0x56bd0",
    "mov     r8d, dword [rbp-0x44]",
    "test    r8d, r8d",
    "je      0x56aa0",
    "mov     edi, 0xffffffff",
    "call    adjust_shell_level",
    "jmp     0x56cc1",
    "lea     rax, [rel array_needs_making]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "je      0x56cd5",
    "mov     rdx, r12",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11fee7]",
    "call    update_export_env_inplace",
    "call    sub_5ea30",
    "test    r12, r12",
    "je      0x56c1a",
    "mov     edi, eax",
    "call    close",
    "mov     rax, qword [rbp-0x58]",
    "xor     ebx, ebx",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x56a84",
    "call    reset_terminating_signals",
    "lea     rdi, [rel sub_8a1b0]",
    "call    sub_8a7b0",
    "lea     r14, [rel subshell_environment]",
    "mov     rdi, r15",
    "and     dword [r14], 0xfffffeff",
    "call    free",
    "test    rbx, rbx",
    "je      0x56ab0",
    "test    dword [rbp+0x18], 0x400",
    "je      0x56984",
    "mov     rdx, r12",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11fee7]",
    "call    update_export_env_inplace",
    "jmp     0x56baf",
    "call    sub_5ea30",
    "add     rsp, 0x48",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r12",
    "call    free",
    "mov     esi, dword [rbp-0x38]",
    "mov     edi, dword [rbp-0x34]",
    "call    sub_51420",
    "mov     eax, dword [rbx]",
    "test    eax, eax",
    "jg      0x569a8",
    "lea     rax, [rel job_control]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x56c30",
    "cmp     dword [rbp-0x34], 0xffffffff",
    "je      0x56d60",
    "call    reset_terminating_signals",
    "lea     rdi, [rel sub_8a1b0]",
    "call    sub_8a7b0",
    "and     dword [r14], 0xfffffeff",
    "jmp     0x56964",
    "test    r12, r12",
    "jne     0x56d9f",
    "mov     rdi, qword [rbp-0x50]",
    "mov     esi, 0x1",
    "call    do_redirections",
    "test    eax, eax",
    "jne     0x56df2",
    "xor     r15d, r15d",
    "jmp     0x569b9",
    "nop     ",
    "mov     edi, 0x2",
    "call    get_original_signal",
    "mov     esi, 0x1",
    "mov     edi, 0x2",
    "call    set_signal_handler",
    "mov     edi, 0x3",
    "call    get_original_signal",
    "mov     esi, 0x1",
    "mov     edi, 0x3",
    "call    set_signal_handler",
    "test    rbx, rbx",
    "jne     0x5699e",
    "test    rbx, rbx",
    "je      0x56c6b",
    "mov     rdi, qword [rbp-0x50]",
    "call    stdin_redirects",
    "test    eax, eax",
    "jne     0x56984",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rdi, r13",
    "call    strvec_from_word_list",
    "mov     rdi, r12",
    "mov     rsi, rax",
    "lea     rax, [rel export_env]",
    "mov     rdx, qword [rax]",
    "call    shell_execve",
    "mov     edi, eax",
    "call    exit",
    "{ Does not return }",
    "lea     rax, [rel shell_functions]",
    "lea     rbx, [rel data_11feea]  {\"command_not_found_handle\"}",
    "xor     edx, edx",
    "mov     rdi, rbx",
    "mov     r12, qword [rax]",
    "mov     rsi, r12",
    "call    hash_search",
    "test    rax, rax",
    "je      0x56cf0",
    "call    unlink_all_fifos",
    "mov     edi, 0x1",
    "call    exit",
    "{ Does not return }",
    "mov     rax, qword [rbx+0x8]",
    "cmp     byte [rax+r15], 0x0",
    "je      0x569b0",
    "mov     edx, dword [rbx]",
    "test    edx, edx",
    "jle     0x56c6b",
    "mov     esi, dword [rbp-0x38]",
    "mov     edi, dword [rbp-0x34]",
    "call    sub_51420",
    "lea     rbx, [rel interactive]",
    "mov     r15d, dword [rbx]",
    "call    async_redirect_stdin",
    "jmp     0x56984",
    "mov     rdi, qword [rbp-0x40]",
    "call    ansic_shouldquote",
    "test    eax, eax",
    "jne     0x56d40",
    "mov     qword [rel data_1619d8], r12",
    "mov     r12, qword [rax+0x10]",
    "test    r12, r12",
    "je      0x56cf0",
    "add     r15, 0x1",
    "cmp     dword [rbx], r15d",
    "jle     0x569de",
    "mov     edi, r15d",
    "call    close",
    "mov     rax, qword [rbx+0x8]",
    "mov     byte [rax+r15], 0x0",
    "add     r15, 0x1",
    "cmp     dword [rbx], r15d",
    "jg      0x569b9",
    "mov     dword [rbx], r15d",
    "jmp     0x56adc",
    "mov     rdi, qword [rbp-0x50]",
    "mov     esi, 0x1",
    "call    do_redirections",
    "test    eax, eax",
    "jne     0x56df2",
    "mov     rdi, qword [rbp-0x40]",
    "test    rdi, rdi",
    "je      0x56cfd",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11ff03]  {\"%s: command not found\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x40]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "mov     edi, 0x7f",
    "call    exit",
    "{ Does not return }",
    "call    without_job_control",
    "lea     rsi, [rel sub_66230]",
    "mov     edi, 0x11",
    "call    set_signal_handler",
    "mov     rdi, rbx",
    "call    make_bare_word",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "call    make_word_flags",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "call    make_word_list",
    "mov     rdi, r12",
    "mov     rsi, rax",
    "call    execute_shell_function",
    "mov     edi, eax",
    "call    exit",
    "{ Does not return }",
    "mov     esi, dword [rbp-0x38]",
    "mov     edi, dword [rbp-0x34]",
    "call    sub_51420",
    "lea     rbx, [rel interactive]",
    "mov     esi, dword [rbp-0x44]",
    "mov     r15d, dword [rbx]",
    "test    esi, esi",
    "jne     0x56c80",
    "cmp     byte [rdi], 0x0",
    "je      0x56d7b",
    "or      dword [r14], 0x8",
    "cmp     qword [rbp-0x50], 0x0",
    "mov     dword [rbx], 0x0",
    "je      0x56ca7",
    "jmp     0x56abb",
    "mov     qword [rbp-0x40], 0x0",
    "jmp     0x56cfd",
    "xor     esi, esi",
    "call    sub_d80c0",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x56cfd",
    "or      dword [r14], 0x8",
    "cmp     qword [rbp-0x50], 0x0",
    "je      0x56adc"
  ]
}
{
  "address": "0x9f3b0",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     qword [rbp-0x40], rdi",
    "mov     r15, qword [rel data_168ad0]",
    "test    esi, esi",
    "jne     0x9f510",
    "mov     rax, qword [rel data_168ae0]",
    "movsxd  rbx, dword [rel data_168ad8]",
    "mov     qword [rbp-0x40], rax",
    "mov     eax, dword [rel data_168aec]",
    "mov     dword [rbp-0x54], eax",
    "test    eax, eax",
    "je      0x9f3f2",
    "movsxd  rdx, dword [rel data_168ae8]",
    "mov     r12, qword [r15+rdx*8]",
    "mov     rax, rdx",
    "test    r12, r12",
    "jne     0x9f530",
    "jmp     0x9f563",
    "mov     dword [rel data_168ae8], 0x0",
    "mov     edx, dword [rel data_168acc]",
    "test    edx, edx",
    "jne     0x9f60c",
    "lea     rax, [rel rl_completion_suppress_append]",
    "mov     dword [rax], 0x1",
    "mov     rdi, qword [rbp-0x40]",
    "add     eax, 0x1",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "mov     dword [rel data_168ae8], eax",
    "call    strncmp",
    "test    eax, eax",
    "je      0x9f5d0",
    "add     rsp, 0x38",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    r15, r15",
    "je      0x9f639",
    "mov     rdx, qword [rel data_1688b8]",
    "test    rdx, rdx",
    "je      0x9f59f",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x9f6be",
    "mov     rdx, qword [rel data_1688b8]",
    "xor     r15d, r15d",
    "mov     qword [rel data_168ad0], 0x0",
    "mov     dword [rel data_168acc], 0x0",
    "mov     dword [rel data_168ac8], 0x0",
    "test    rdx, rdx",
    "jne     0x9f41a",
    "mov     rdi, qword [r15]",
    "lea     rbx, [r15+0x8]",
    "test    rdi, rdi",
    "je      0x9f631",
    "mov     rax, qword [rbp-0x40]",
    "mov     rdi, rax",
    "mov     qword [rel data_168ae0], rax",
    "call    strlen",
    "mov     dword [rel data_168ad8], eax",
    "movsxd  rbx, eax",
    "jmp     0x9f522",
    "cmp     qword [rdx], 0x0",
    "je      0x9f594",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "add     rsp, 0x38",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "mov     rdi, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "jmp     0x9f59f",
    "mov     rdi, r15",
    "call    free",
    "nop     dword [rax]",
    "test    r15, r15",
    "jne     0x9f550",
    "mov     eax, dword [rbp-0x54]",
    "test    eax, eax",
    "je      0x9f670",
    "xor     eax, eax",
    "nop     word [rax+rax]",
    "call    free",
    "mov     rdi, qword [rbx]",
    "add     rbx, 0x8",
    "test    rdi, rdi",
    "jne     0x9f620",
    "movsxd  rsi, dword [rel data_168ac8]",
    "lea     rcx, [rel strvec_strcmp]",
    "mov     rdi, r15",
    "mov     edx, 0x8",
    "call    qsort",
    "mov     r15, qword [rel data_168ad0]",
    "jmp     0x9f59f",
    "mov     rcx, rax",
    "add     rax, 0x1",
    "cmp     qword [rdx+rax*8], 0x0",
    "jne     0x9f430",
    "movsxd  rax, ecx",
    "shl     rcx, 0x3",
    "shl     rax, 0x3",
    "lea     rsi, [rdx+rax]",
    "lea     rax, [rdx+rax-0x8]",
    "sub     rax, rcx",
    "mov     qword [rbp-0x38], rsi",
    "mov     qword [rbp-0x50], rax",
    "nop     dword [rax]",
    "mov     rax, qword [r13]",
    "test    rax, rax",
    "je      0x9f578",
    "jmp     0x9f578",
    "mov     rdi, qword [rbp-0x48]",
    "call    free",
    "sub     qword [rbp-0x38], 0x8",
    "mov     rax, qword [rbp-0x38]",
    "cmp     qword [rbp-0x50], rax",
    "jne     0x9f460",
    "mov     r12d, dword [rel data_168ac8]",
    "mov     ebx, dword [rel data_168acc]",
    "lea     r14d, [r12+0x1]",
    "cmp     r14d, ebx",
    "jl      0x9f490",
    "mov     rax, qword [rbp-0x38]",
    "xor     edx, edx",
    "mov     esi, 0xffffffff",
    "mov     rax, qword [rax]",
    "mov     rdi, qword [rax]",
    "call    sub_10c670",
    "mov     qword [rbp-0x48], rax",
    "mov     r13, rax",
    "test    rax, rax",
    "jne     0x9f4ab",
    "movsxd  rdx, r12d",
    "mov     dword [rel data_168ac8], r14d",
    "add     r13, 0x8",
    "mov     qword [r15+rdx*8], rax",
    "mov     qword [r15+rdx*8+0x8], 0x0",
    "add     ebx, 0xa",
    "mov     dword [rel data_168acc], ebx",
    "movsxd  rbx, ebx",
    "shl     rbx, 0x3",
    "test    r15, r15",
    "je      0x9f5c0",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r15, rax",
    "jmp     0x9f4f6",
    "mov     rdi, r15",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r15, rax",
    "test    r15, r15",
    "je      0x9f697",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, rbx",
    "lea     rsi, [rel data_11f045]  {\"xrealloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     qword [rel data_168ad0], r15",
    "mov     rax, qword [r13]",
    "jmp     0x9f490"
  ]
}
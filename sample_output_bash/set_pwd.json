{
  "address": "0x590a0",
  "rules": [
    "get file attributes",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "lea     rdi, [rel data_11f154]  {\"HOME\"}",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0xa8",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "call    find_variable",
    "test    rax, rax",
    "je      0x59230",
    "lea     r12, [rel data_11fb41[3]]  {\"PWD\"}",
    "mov     rdi, r12",
    "call    find_variable",
    "test    rax, rax",
    "je      0x59126",
    "lea     r12, [rel data_11fb41[3]]  {\"PWD\"}",
    "mov     rbx, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     rdi, r12",
    "call    find_variable",
    "test    rax, rax",
    "je      0x59110",
    "lea     rdi, [rel data_11ff5f]  {\"shell-init\"}",
    "call    get_working_directory",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x59160",
    "test    byte [rax+0x29 {Elf64_Header::section_header_offset+1.b}], 0x80",
    "je      0x59126",
    "test    rbx, rbx",
    "je      0x59126",
    "test    byte [rax+0x29 {Elf64_Header::section_header_offset+1.b}], 0x80",
    "je      0x59110",
    "lea     rbx, [rel data_11fb41]  {\"OLDPWD\"}",
    "mov     rdi, rbx",
    "call    find_variable",
    "test    rax, rax",
    "je      0x591a0",
    "xor     edx, edx",
    "mov     rsi, rbx",
    "mov     rdi, r12",
    "call    bind_variable",
    "or      dword [rax+0x28], 0x1",
    "lea     rax, [rel array_needs_making]",
    "mov     dword [rax], 0x1",
    "mov     r13, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    r13, r13",
    "je      0x59126",
    "lea     rax, [rel interactive_shell]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x591d8",
    "mov     r13, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    r13, r13",
    "je      0x59110",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rdi, rbx",
    "call    bind_variable",
    "or      dword [rax+0x28], 0x1001",
    "mov     rdi, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    rdi, rdi",
    "je      0x591a0",
    "cmp     byte [r13], 0x2f",
    "jne     0x59126",
    "lea     rax, [rel login_shell]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x59126",
    "cmp     byte [r13], 0x2f",
    "je      0x59290",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xa8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "lea     rsi, [rbp-0xc0]",
    "call    stat",
    "test    eax, eax",
    "jne     0x591a0",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "lea     rsi, [rel data_120268[2]]  {\".\"}",
    "mov     rdi, r13",
    "call    same_file",
    "test    eax, eax",
    "jne     0x592b0",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "lea     rsi, [rel data_120268[2]]  {\".\"}",
    "mov     rdi, rbx",
    "call    same_file",
    "test    eax, eax",
    "je      0x59126",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "lea     rsi, [rel data_120268[2]]  {\".\"}",
    "mov     rdi, r13",
    "call    same_file",
    "test    eax, eax",
    "je      0x59110",
    "nop     word [rax+rax]",
    "mov     eax, dword [rbp-0xa8]",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "je      0x591b3",
    "mov     esi, 0x3",
    "mov     rdi, r13",
    "call    sh_canonpath",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x592e3",
    "jmp     0x59126",
    "mov     rdi, rbx",
    "call    set_working_directory",
    "xor     edx, edx",
    "mov     rsi, rbx",
    "mov     rdi, r12",
    "call    bind_variable",
    "or      dword [rax+0x28], 0x1",
    "lea     rax, [rel array_needs_making]",
    "mov     dword [rax], 0x1",
    "jmp     0x59160",
    "nop     dword [rax+rax]",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x59311",
    "nop     ",
    "lea     rdi, [rel data_11ff54]  {\"shell_init\"}",
    "call    get_working_directory",
    "mov     rbx, rax",
    "lea     rax, [rel posixly_correct]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x59158",
    "mov     rdi, rax",
    "call    set_working_directory",
    "lea     rax, [rel posixly_correct]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x5913a",
    "mov     rdi, rbx",
    "call    free",
    "test    rbx, rbx",
    "je      0x59158",
    "jmp     0x59158",
    "jmp     0x5913a"
  ]
}
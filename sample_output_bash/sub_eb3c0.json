{
  "address": "0xeb3c0",
  "rules": [
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/bfdff12b2adb42709a78f0e77631902b",
    "encrypt data using RSA via embedded library/8bc479b14953434c9835ec8295d733a3",
    "encrypt data using Curve25519/a423aa5d0923438c8eac88d5abe4fcd5",
    "PEB access/684066f105bd43c0a5be1ea6f2b60301",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "hash data using aphash/416ed7212e694999bd9567d4aa818bae",
    "allocate or change RW memory/877cb0b79bfa432e8e79b8bd20fa354f",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "encrypt data using HC-128/e8f9b1d76e624bf6b554df630e614cdc"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12d, edi",
    "mov     edi, 0x8",
    "push    rbx",
    "sub     rsp, 0x8",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xeb5a7",
    "mov     esi, 0x8",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "cmp     r12d, 0x1b",
    "je      0xeb530",
    "mov     edx, 0x655c",
    "mov     byte [rbx+0x2], 0x0",
    "mov     word [rbx], dx",
    "jmp     0xeb455",
    "cmp     r12d, 0x7f",
    "je      0xeb588",
    "add     rsp, 0x8",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     dword [rbx], 0x3f2d435c",
    "mov     byte [rbx+0x4], 0x0",
    "jmp     0xeb455",
    "cmp     r12d, 0x1f",
    "jle     0xeb470",
    "mov     eax, 0x435c",
    "mov     byte [rbx+0x2], 0x2d",
    "mov     r14d, r12d",
    "lea     r13, [rbx+0x3]",
    "mov     word [rbx], ax",
    "or      r14d, 0x40",
    "movsx   r14, r14b",
    "call    __ctype_b_loc",
    "mov     r15, qword [rax]",
    "movzx   eax, word [r15+r14*2]",
    "test    ah, 0x2",
    "je      0xeb548",
    "lea     edx, [r12-0x80]",
    "mov     r13, rbx",
    "mov     eax, 0x1",
    "xor     ecx, ecx",
    "cmp     edx, 0x1f",
    "ja      0xeb4e1",
    "test    ah, 0x1",
    "jne     0xeb4b9",
    "call    __ctype_toupper_loc",
    "mov     rax, qword [rax]",
    "mov     r12d, dword [rax+r14*4]",
    "movzx   r14d, r12b",
    "test    byte [r15+r14*2+0x1], 0x1",
    "je      0xeb4c9",
    "cmp     r12d, 0x9f",
    "jle     0xeb560",
    "mov     esi, edx",
    "mov     byte [r13], 0x5c",
    "lea     r13d, [rcx+0x3]",
    "and     edx, 0x7",
    "mov     byte [rbx+rax], 0x32",
    "sar     esi, 0x3",
    "lea     eax, [rcx+0x2]",
    "movsxd  r13, r13d",
    "cdqe    ",
    "add     esi, 0x30",
    "lea     r12d, [rdx+0x30]",
    "add     r13, rbx",
    "mov     byte [rbx+rax], sil",
    "lea     edx, [rcx+0x4]",
    "call    __ctype_tolower_loc",
    "shl     r14, 0x2",
    "mov     rax, qword [rax]",
    "mov     r12d, dword [rax+r14]",
    "or      r12d, 0x40",
    "xor     edx, edx",
    "mov     eax, 0x4",
    "jmp     0xeb567",
    "lea     edx, [r12-0x80]",
    "mov     eax, 0x4",
    "mov     ecx, 0x3",
    "cmp     edx, 0x1f",
    "jbe     0xeb41c",
    "cmp     r12d, 0x22",
    "sete    dl",
    "mov     edx, r12d",
    "mov     byte [r13], 0x5c",
    "shr     dl, 0x6",
    "add     edx, 0x30",
    "mov     byte [rbx+rax], dl",
    "mov     eax, r12d",
    "lea     edx, [rcx+0x2]",
    "and     r12d, 0x7",
    "shr     al, 0x3",
    "movsxd  rdx, edx",
    "add     r12d, 0x30",
    "and     eax, 0x7",
    "add     eax, 0x30",
    "mov     byte [rbx+rdx], al",
    "lea     eax, [rcx+0x3]",
    "lea     edx, [rcx+0x4]",
    "cdqe    ",
    "lea     r13, [rbx+rax]",
    "jmp     0xeb44a",
    "cmp     r12d, 0x5c",
    "je      0xeb571",
    "mov     byte [r13], 0x5c",
    "lea     edx, [rax+0x1]",
    "lea     r13, [rbx+rax]",
    "jmp     0xeb44a",
    "test    dl, dl",
    "je      0xeb5a0",
    "movsxd  rdx, edx",
    "mov     byte [r13], r12b",
    "mov     byte [rbx+rdx], 0x0",
    "mov     edx, eax",
    "jmp     0xeb44a"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
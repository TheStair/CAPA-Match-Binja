{
  "address": "0x96f80",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rsi",
    "push    r13",
    "movsxd  r13, edx",
    "push    r12",
    "mov     rdi, r13",
    "mov     r12, r13",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x9709a",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     edx, [r12-0x1]",
    "mov     rcx, r13",
    "mov     rsi, r14",
    "mov     rdi, rbx",
    "movsxd  rdx, edx",
    "call    __strncpy_chk",
    "mov     byte [rbx+r13-0x1], 0x0",
    "mov     esi, 0x301",
    "mov     rdi, rbx",
    "call    expand_arith_string",
    "lea     r14, [rel this_command_name]",
    "xor     esi, esi",
    "lea     rdx, [rbp-0x3c]",
    "mov     r12, rax",
    "lea     rax, [rel shell_compatibility_level]",
    "mov     r15, qword [r14]",
    "mov     rdi, r12",
    "mov     qword [r14], 0x0",
    "cmp     dword [rax], 0x33",
    "setle   sil",
    "call    evalexp",
    "mov     qword [r14], r15",
    "mov     r13, rax",
    "cmp     r12, rbx",
    "je      0x9702d",
    "mov     rdi, rbx",
    "call    free",
    "mov     edx, dword [rbp-0x3c]",
    "test    edx, edx",
    "je      0x97060",
    "mov     rdi, r12",
    "call    free",
    "lea     rax, [rel last_command_exit_value]",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_158490]",
    "mov     dword [rel data_158490], 0x1",
    "mov     dword [rax], 0x1",
    "call    set_pipestatus_array",
    "lea     rax, [rel no_longjmp_on_fatal_error]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x970b5",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x970b0",
    "call    top_level_cleanup",
    "mov     edi, 0x2",
    "call    jump_to_top_level",
    "{ Does not return }",
    "xor     r13d, r13d",
    "jmp     0x9703c",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x18",
    "mov     rax, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    "
  ]
}
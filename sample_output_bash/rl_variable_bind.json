{
  "address": "0xf48d0",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "lea     r15, [rel data_156f58]",
    "push    r14 {__saved_r14}",
    "mov     r14, rsi",
    "lea     rsi, [rel data_122981]  {\"bind-tty-special-chars\"}",
    "push    r13 {__saved_r13}",
    "mov     r13, rdi",
    "push    r12 {__saved_r12}",
    "xor     r12d, r12d  {0x0}",
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0x18",
    "jmp     0xf4910",
    "mov     rdi, r13",
    "call    strcasecmp",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0xf4900",
    "mov     rsi, qword [r15]",
    "add     r15, 0x18",
    "add     r12d, 0x1",
    "test    rsi, rsi",
    "je      0xf4968",
    "movsxd  r12, r12d",
    "lea     r13, [rel data_156f40]",
    "lea     rax, [r12+r12*2]",
    "mov     r15, qword [r13+rax*8+0x8]",
    "test    r14, r14",
    "je      0xf4945",
    "lea     rbx, [rel data_155638]",
    "xor     r12d, r12d  {0x0}",
    "lea     rsi, [rel data_122998]  {\"active-region-end-color\"}",
    "jmp     0xf4994",
    "mov     ebx, 0x1",
    "movzx   edx, byte [r14]",
    "test    dl, dl",
    "mov     byte [rbp-0x31 {var_39_1}], dl",
    "jne     0xf49e0",
    "mov     rdi, r13",
    "call    strcasecmp",
    "test    eax, eax",
    "jne     0xf4980",
    "mov     rbx, qword [rax]",
    "lea     rsi, [rel data_122a7d]  {\"blink-matching-paren\"}",
    "mov     rdi, rbx",
    "call    strcasecmp",
    "test    eax, eax",
    "je      0xf4ae6",
    "xor     ebx, ebx  {0x0}",
    "jmp     0xf49c7",
    "lea     rsi, [rel data_122c8a[0x12]]  {\"on\"}",
    "mov     rdi, r14",
    "call    strcasecmp",
    "test    eax, eax",
    "je      0xf4945",
    "mov     rsi, qword [rbx]",
    "add     rbx, 0x18",
    "add     r12d, 0x1",
    "test    rsi, rsi",
    "je      0xf4ab0",
    "movsxd  r12, r12d",
    "lea     rax, [rel data_155620]",
    "lea     rdx, [r12+r12*2]",
    "mov     rax, qword [rax+rdx*8+0x10]",
    "test    rax, rax",
    "je      0xf4960",
    "lea     rax, [rel rl_blink_matching_paren]",
    "xor     ebx, ebx  {0x0}",
    "mov     edi, dword [rax]  {rl_blink_matching_paren}",
    "call    _rl_enable_paren_matching",
    "jmp     0xf49c7",
    "lea     rsi, [rel data_122a92]  {\"prefer-visible-bell\"}",
    "mov     rdi, rbx",
    "call    strcasecmp",
    "test    eax, eax",
    "je      0xf4ac8",
    "add     rsp, 0x18",
    "mov     eax, ebx",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "movzx   edx, byte [rbp-0x31 {var_39_1}]",
    "cmp     dl, 0x31",
    "jne     0xf494a",
    "mov     rsi, r13",
    "lea     rdi, [rel data_122ad1]  {\"%s: unknown variable name\"}",
    "xor     eax, eax  {0x0}",
    "xor     ebx, ebx  {0x0}",
    "call    sub_eb6a0",
    "jmp     0xf49c7",
    "mov     rdi, r14",
    "call    rax",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0xf4a90",
    "mov     edx, dword [rel data_1604c4]",
    "lea     rax, [rel _rl_bell_preference]",
    "test    edx, edx",
    "je      0xf4afb",
    "lea     rsi, [rel data_122aa6]  {\"show-mode-in-prompt\"}",
    "mov     rdi, rbx",
    "call    strcasecmp",
    "test    eax, eax",
    "je      0xf4b08",
    "lea     rax, [r12+r12*2]",
    "mov     dword [r15], ebx",
    "lea     rax, [r13+rax*8]",
    "test    byte [rax+0x10], 0x1",
    "jne     0xf4a18",
    "xor     ebx, ebx  {0x0}",
    "cmp     byte [r14+0x1], 0x0",
    "sete    bl",
    "jmp     0xf494a",
    "mov     rdx, r14",
    "mov     rsi, r13",
    "lea     rdi, [rel data_134818]  {\"%s: could not set value to `%s'\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_eb6a0",
    "jmp     0xf49c7",
    "mov     dword [rax], 0x1  {_rl_bell_preference}",
    "xor     ebx, ebx  {0x0}",
    "jmp     0xf49c7",
    "mov     dword [rax], 0x2  {_rl_bell_preference}",
    "xor     ebx, ebx  {0x0}",
    "jmp     0xf49c7",
    "lea     rax, [rel rl_prompt]",
    "xor     ebx, ebx  {0x0}",
    "mov     rdi, qword [rax]  {rl_prompt}",
    "call    rl_expand_prompt",
    "lea     rdx, [rel rl_visible_prompt_length]",
    "mov     dword [rdx], eax  {rl_visible_prompt_length}",
    "jmp     0xf49c7",
    "lea     rsi, [rel data_122aba]  {\"enable-bracketed-paste\"}",
    "mov     rdi, rbx",
    "call    strcasecmp",
    "test    eax, eax",
    "jne     0xf4960",
    "lea     rax, [rel _rl_enable_bracketed_paste]",
    "xor     ebx, ebx  {0x0}",
    "mov     edx, dword [rax]  {_rl_enable_bracketed_paste}",
    "lea     rax, [rel _rl_enable_active_region]",
    "mov     dword [rax], edx  {_rl_enable_active_region}",
    "jmp     0xf49c7"
  ],
  "high level IL": [
    "char const (** const r15)[0x15] = &data_156f58",
    "char const* const rsi = \"bind-tty-special-chars\"",
    "int32_t r12 = 0",
    "int32_t rbx_3",
    "while (true)",
    "int32_t rax_1 = strcasecmp(arg1, rsi)",
    "int32_t rbx_1 = rax_1",
    "if (rax_1 == 0)",
    "int64_t r12_1 = sx.q(r12)",
    "int32_t* r15_1 = (&data_156f48)[r12_1 * 3]",
    "if (arg2 == 0)",
    "rbx_1 = 1",
    "char rdx_1 = *arg2",
    "if (rdx_1 != 0)",
    "if (strcasecmp(arg2, \"on\") == 0)",
    "rbx_1 = 1",
    "if (rdx_1 == 0x31)",
    "rbx_1.b = arg2[1] == 0",
    "rbx_1 = 1",
    "*r15_1 = rbx_1",
    "if ((*(r12_1 * 0x18 + 0x156f50) & 1) != 0)",
    "char* rbx_4 = (&data_156f40)[r12_1 * 3]",
    "if (strcasecmp(rbx_4, \"blink-matching-paren\") == 0)",
    "rbx_3 = 0",
    "_rl_enable_paren_matching(rl_blink_matching_paren)",
    "if (strcasecmp(rbx_4, \"prefer-visible-bell\") != 0)",
    "if (strcasecmp(rbx_4, \"show-mode-in-prompt\") == 0)",
    "rbx_3 = 0",
    "rl_visible_prompt_length = rl_expand_prompt(rl_prompt)",
    "if (strcasecmp(rbx_4, \"enable-bracketed-paste\") != 0)",
    "label_f4960:",
    "rbx_3 = 0",
    "rbx_3 = 0",
    "_rl_enable_active_region = _rl_enable_bracketed_paste",
    "if (data_1604c4 == 0)",
    "_rl_bell_preference = 1",
    "rbx_3 = 0",
    "_rl_bell_preference = 2",
    "rbx_3 = 0",
    "label_f4960_1:",
    "rbx_3 = 0",
    "break",
    "rsi = *r15",
    "r15 = &r15[3]",
    "r12 += 1",
    "if (rsi == 0)",
    "char** rbx_2 = &data_155638",
    "int32_t r12_2 = 0",
    "char* i = \"active-region-end-color\"",
    "while (i != 0)",
    "if (strcasecmp(arg1, i) == 0)",
    "int64_t rax_6 = (&data_155630)[sx.q(r12_2) * 3]",
    "if (rax_6 == 0)",
    "goto label_f4960_1",
    "int32_t rax_7 = rax_6(arg2)",
    "rbx_3 = rax_7",
    "if (rax_7 != 0)",
    "sub_eb6a0(\"%s: could not set value to `%s'\", 0)",
    "goto label_f49d7",
    "i = *rbx_2",
    "rbx_2 = &rbx_2[3]",
    "r12_2 += 1",
    "rbx_3 = 0",
    "sub_eb6a0(\"%s: unknown variable name\", 0)",
    "break",
    "label_f49d7:",
    "return zx.q(rbx_3)"
  ]
}
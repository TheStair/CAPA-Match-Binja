{
  "address": "0xad0f0",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "xor     r14d, r14d",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "lea     r12, [rbp-0x40]",
    "push    rbx",
    "mov     ebx, edx",
    "sub     rsp, 0x98",
    "mov     qword [rbp-0x60], rsi",
    "lea     rsi, [rel pcomp_line]",
    "mov     qword [rbp-0x90], rdi",
    "lea     rdx, [rel pcomp_ind]",
    "mov     dword [rbp-0x54], ecx",
    "mov     qword [rbp-0xa8], r8",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rel rl_line_buffer]",
    "mov     dword [rbp-0x44], 0x0",
    "mov     qword [rbp-0x40], 0x0",
    "mov     rax, qword [rax]",
    "mov     qword [rsi], rax",
    "lea     rax, [rel rl_point]",
    "mov     eax, dword [rax]",
    "mov     dword [rdx], eax",
    "lea     rax, [rbp-0x44]",
    "mov     qword [rbp-0x70], rax",
    "lea     rax, [rbp-0x48]",
    "mov     qword [rbp-0x68], rax",
    "nop     dword [rax]",
    "add     r14d, 0x1",
    "cmp     r14d, 0x21",
    "je      0xad594",
    "mov     esi, 0x2f",
    "mov     rdi, r13",
    "call    strrchr",
    "test    rax, rax",
    "je      0xad1d3",
    "mov     dword [rbp-0x58], eax",
    "jmp     0xad224",
    "mov     edx, dword [rbp-0x48]",
    "test    edx, edx",
    "jne     0xad180",
    "push    r12",
    "mov     r9, qword [rbp-0x70]",
    "mov     ecx, ebx",
    "mov     rsi, r13",
    "push    qword [rbp-0x68]",
    "mov     r8d, dword [rbp-0x54]",
    "lea     rdi, [rel data_12104a]  {\"_DefaultCmD_\"}",
    "mov     rdx, qword [rbp-0x60]",
    "call    sub_acfb0",
    "pop     r8",
    "pop     r9",
    "mov     r15, rax",
    "mov     eax, dword [rbp-0x44]",
    "mov     ecx, eax",
    "or      ecx, dword [rbp-0x48]",
    "mov     dword [rbp-0x58], ecx",
    "jne     0xad330",
    "cmp     byte [rax+0x1], 0x0",
    "jne     0xad300",
    "lea     rsi, [rel data_133b98]  {\"programmable_completion: %s: pos\u2026\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x90]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_warning",
    "mov     dword [rbp-0x48], 0x0",
    "mov     r9, qword [rbp-0x70]",
    "mov     ecx, ebx",
    "mov     rsi, r13",
    "mov     r8d, dword [rbp-0x54]",
    "mov     rdx, qword [rbp-0x60]",
    "push    r12",
    "mov     rdi, r13",
    "push    qword [rbp-0x68]",
    "call    sub_acfb0",
    "pop     r10",
    "pop     r11",
    "mov     r15, rax",
    "mov     eax, dword [rbp-0x44]",
    "test    eax, eax",
    "jne     0xad330",
    "mov     dword [rbp-0x58], eax",
    "jmp     0xad248",
    "lea     rax, [rel progcomp_alias]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0xad358",
    "push    r12",
    "mov     r9, qword [rbp-0x70]",
    "lea     rdi, [rax+0x1]",
    "mov     rsi, r13",
    "mov     r8d, dword [rbp-0x54]",
    "mov     rdx, qword [rbp-0x60]",
    "push    qword [rbp-0x68]",
    "mov     ecx, ebx",
    "call    sub_acfb0",
    "pop     rsi",
    "pop     rdi",
    "mov     r15, rax",
    "mov     eax, dword [rbp-0x44]",
    "test    eax, eax",
    "je      0xad1d3",
    "mov     rax, qword [rbp-0x90]",
    "cmp     r13, rax",
    "je      0xad277",
    "call    free",
    "lea     rax, [rel pcomp_line]",
    "mov     rdi, qword [rax]",
    "lea     rax, [rel rl_line_buffer]",
    "cmp     rdi, qword [rax]",
    "je      0xad263",
    "lea     rax, [rel aliases]",
    "mov     rsi, qword [rax]",
    "test    rsi, rsi",
    "je      0xad21e",
    "cmp     r14d, 0x20",
    "jne     0xad248",
    "nop     ",
    "xor     ebx, ebx",
    "test    r15, r15",
    "je      0xad289",
    "mov     rdi, r13",
    "call    free",
    "xor     edx, edx",
    "mov     rdi, r13",
    "call    hash_search",
    "test    rax, rax",
    "je      0xad21e",
    "mov     rax, qword [rbp-0xa8]",
    "test    rax, rax",
    "je      0xad29a",
    "mov     rdi, r15",
    "mov     rbx, qword [r15]",
    "call    free",
    "mov     rax, qword [rax+0x10]",
    "test    rax, rax",
    "je      0xad21e",
    "mov     rdi, qword [rbp-0x40]",
    "test    rdi, rdi",
    "je      0xad2ac",
    "mov     edx, dword [rbp-0x58]",
    "mov     dword [rax], edx",
    "mov     rax, qword [rax+0x8]",
    "mov     rdi, rax",
    "mov     qword [rbp-0x88], rax",
    "call    strlen",
    "lea     rsi, [rel pcomp_line]",
    "mov     qword [rbp-0x80], rax",
    "mov     rdx, qword [rsi]",
    "mov     qword [rbp-0x98], rdx",
    "test    rax, rax",
    "je      0xad248",
    "lea     rax, [rel rl_line_buffer]",
    "lea     rsi, [rel pcomp_line]",
    "lea     rdx, [rel pcomp_ind]",
    "mov     rax, qword [rax]",
    "mov     qword [rsi], rax",
    "lea     rax, [rel rl_point]",
    "mov     eax, dword [rax]",
    "mov     dword [rdx], eax",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xad580",
    "sub     dword [rdi], 0x1",
    "je      0xad568",
    "mov     rdi, r13",
    "call    strlen",
    "mov     edx, dword [rbp-0x80]",
    "mov     rdi, qword [rbp-0x98]",
    "mov     qword [rbp-0xb0], rax",
    "sub     edx, eax",
    "mov     dword [rbp-0x9c], edx",
    "call    strlen",
    "movsxd  rdx, dword [rbp-0x9c]",
    "lea     r9, [rdx+rax+0x1]",
    "mov     rdi, r9",
    "mov     qword [rbp-0xb8], r9",
    "call    malloc",
    "mov     r9, qword [rbp-0xb8]",
    "test    rax, rax",
    "mov     qword [rbp-0x78], rax",
    "je      0xad585",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "lea     rsp, [rbp-0x28]",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "call    sub_a7690",
    "jmp     0xad2ac",
    "mov     rsi, r9",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  r10, ebx",
    "test    ebx, ebx",
    "jle     0xad44a",
    "cmp     r9, r10",
    "mov     rcx, r10",
    "mov     rax, qword [rbp-0x78]",
    "mov     rdx, qword [rbp-0x80]",
    "cmovae  rcx, r9",
    "mov     rsi, qword [rbp-0x88]",
    "mov     qword [rbp-0xc0], r9",
    "lea     rdi, [rax+r10]",
    "mov     qword [rbp-0xb8], r10",
    "sub     rcx, r10",
    "call    __strncpy_chk",
    "mov     r10, qword [rbp-0xb8]",
    "mov     rcx, qword [rbp-0x80]",
    "mov     r9, qword [rbp-0xc0]",
    "mov     rdi, qword [rbp-0xb0]",
    "add     rcx, r10",
    "mov     rsi, qword [rbp-0x98]",
    "mov     rax, qword [rbp-0x78]",
    "cmp     r9, rcx",
    "mov     rdx, r9",
    "cmovb   rdx, rcx",
    "add     rdi, r10",
    "add     rsi, rdi",
    "lea     rdi, [rax+rcx]",
    "sub     rdx, rcx",
    "call    __strcpy_chk",
    "mov     rdi, qword [rbp-0x88]",
    "lea     rdx, [rel data_120c5d]  {\"()<>;&| \\t\\n\"}",
    "xor     esi, esi",
    "mov     ecx, 0x101",
    "call    skip_to_delim",
    "mov     edx, eax",
    "test    eax, eax",
    "jle     0xad572",
    "mov     rsi, qword [rbp-0x98]",
    "mov     rdi, qword [rbp-0x78]",
    "mov     rcx, r9",
    "mov     rdx, r10",
    "mov     qword [rbp-0xc0], r9",
    "mov     qword [rbp-0xb8], r10",
    "call    __strncpy_chk",
    "mov     r9, qword [rbp-0xc0]",
    "mov     r10, qword [rbp-0xb8]",
    "mov     rdi, qword [rbp-0x78]",
    "call    free",
    "jmp     0xad248",
    "mov     rdi, qword [rbp-0x88]",
    "xor     esi, esi",
    "call    substring",
    "lea     rdx, [rel pcomp_ind]",
    "mov     qword [rbp-0x80], rax",
    "mov     eax, dword [rbp-0x9c]",
    "add     dword [rdx], eax",
    "add     dword [rbp-0x54], eax",
    "mov     rax, qword [rbp-0x90]",
    "cmp     r13, rax",
    "je      0xad51c",
    "lea     rax, [rel pcomp_line]",
    "mov     rdi, qword [rax]",
    "lea     rax, [rel rl_line_buffer]",
    "cmp     rdi, qword [rax]",
    "je      0xad537",
    "mov     rdi, r13",
    "call    free",
    "lea     rax, [rel pcomp_line]",
    "mov     rsi, qword [rbp-0x78]",
    "add     r14d, 0x1",
    "mov     dword [rbp-0x48], 0x1",
    "mov     r13, qword [rbp-0x80]",
    "mov     qword [rax], rsi",
    "cmp     r14d, 0x21",
    "jne     0xad180",
    "call    free",
    "jmp     0xad224"
  ]
}
{
  "address": "0x90060",
  "rules": [
    "check for kernel debugger via shared user data structure/47a8170337e74f7ca5a6c64253eb43bf",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rsi",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "mov     ebx, edx",
    "sub     rsp, 0x28",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "and     ecx, 0x2",
    "je      0x900e0",
    "lea     rsi, [rbp-0x40]",
    "call    legal_number",
    "test    eax, eax",
    "je      0x901ac",
    "lea     rax, [rel shell_compatibility_level]",
    "xor     r14d, r14d",
    "lea     r15, [rbp-0x4c]",
    "mov     rdx, r15",
    "cmp     dword [rax], 0x33",
    "setle   r14b",
    "mov     esi, r14d",
    "call    evalexp",
    "mov     ecx, dword [rbp-0x4c]",
    "mov     qword [rbp-0x40], rax",
    "test    ecx, ecx",
    "jne     0x90130",
    "mov     rdi, r12",
    "call    sub_87420",
    "{ Does not return }",
    "lea     rsi, [rbp-0x48]",
    "mov     rdi, r13",
    "call    legal_number",
    "test    eax, eax",
    "je      0x901b9",
    "mov     rdx, r15",
    "mov     esi, r14d",
    "mov     rdi, r13",
    "call    evalexp",
    "mov     edx, dword [rbp-0x4c]",
    "mov     qword [rbp-0x48], rax",
    "test    edx, edx",
    "jne     0x90109",
    "xor     eax, eax",
    "mov     rdi, r13",
    "call    sub_87420",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x48]",
    "mov     rsi, qword [rbp-0x40]",
    "cmp     ebx, 0x5",
    "ja      0x9019e",
    "jmp     0x900b8",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "{Case 0x0}",
    "cmp     rax, rsi",
    "sete    al",
    "movzx   eax, al",
    "jmp     0x900ba",
    "lea     rcx, [rel jump_table_136f0c]",
    "movsxd  rdx, dword [rcx+rbx*4]",
    "add     rdx, rcx",
    "jmp     rdx",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x901b4",
    "{Case 0x5}",
    "cmp     rax, rsi",
    "setle   al",
    "movzx   eax, al",
    "jmp     0x900ba",
    "{Case 0x4}",
    "cmp     rax, rsi",
    "setge   al",
    "movzx   eax, al",
    "jmp     0x900ba",
    "{Case 0x3}",
    "cmp     rax, rsi",
    "setl    al",
    "movzx   eax, al",
    "jmp     0x900ba",
    "{Case 0x2}",
    "cmp     rax, rsi",
    "setg    al",
    "movzx   eax, al",
    "jmp     0x900ba",
    "{Case 0x1}",
    "cmp     rax, rsi",
    "setne   al",
    "movzx   eax, al",
    "jmp     0x900ba"
  ]
}
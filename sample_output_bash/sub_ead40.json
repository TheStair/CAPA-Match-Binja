{
  "address": "0xead40",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "write file on Linux",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     rax, [rel _rl_vis_botlin]",
    "mov     edi, dword [rax]",
    "call    _rl_move_vert",
    "mov     rdi, qword [r13+0x8]",
    "test    rdi, rdi",
    "je      0xeae70",
    "lea     rax, [rel rl_filename_completion_desired]",
    "mov     rbx, qword [r13]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0xeae8c",
    "lea     r14, [rel rl_filename_completion_desired]",
    "mov     r12d, 0x2",
    "xor     ebx, ebx",
    "jmp     0xead8b",
    "lea     r12, [rel _rl_out_stream]",
    "mov     edi, 0xa",
    "mov     rsi, qword [r12]",
    "call    putc",
    "mov     rsi, qword [r13]",
    "xor     edx, edx",
    "mov     rdi, rbx",
    "call    sub_e9fa0",
    "mov     rsi, qword [r12]",
    "mov     rdi, rbx",
    "call    sub_ebc80",
    "mov     rbx, rax",
    "mov     eax, dword [r14]",
    "test    eax, eax",
    "je      0xead9a",
    "call    sub_dfdb0",
    "cmp     ebx, eax",
    "cmovl   ebx, eax",
    "lea     rax, [r12+0x1]",
    "mov     rdi, qword [r13+rax*8-0x8]",
    "test    rdi, rdi",
    "jne     0xead88",
    "call    sub_ebc80",
    "mov     rdi, rax",
    "mov     r12, rax",
    "lea     rax, [rel rl_completion_display_matches_hook]",
    "sub     r12d, 0x1",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xeade0",
    "lea     rax, [rel rl_completion_query_items]",
    "mov     eax, dword [rax]",
    "cmp     eax, r12d",
    "jg      0xeadf2",
    "add     rsp, 0x8",
    "mov     edx, ebx",
    "mov     esi, r12d",
    "mov     rdi, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "\u2753jmp     rax",
    "mov     edx, ebx",
    "mov     esi, r12d",
    "mov     rdi, r13",
    "call    rl_display_match_list",
    "call    rl_forced_update_display",
    "lea     rax, [rel rl_display_fixed]",
    "mov     dword [rax], 0x1",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    eax, eax",
    "jg      0xeae20",
    "lea     r15, [rel _rl_out_stream]",
    "mov     edi, 0xa",
    "mov     rsi, qword [r15]",
    "call    putc",
    "mov     ecx, r12d",
    "mov     esi, 0x2",
    "xor     eax, eax",
    "lea     r14, [rel rl_outstream]",
    "lea     rdx, [rel data_1345c0]  {\"Display all %d possibilities? (y\u2026\"}",
    "mov     rdi, qword [r14]",
    "call    __fprintf_chk",
    "mov     rdi, qword [r14]",
    "call    fflush",
    "xor     edi, edi",
    "call    sub_e1510",
    "test    eax, eax",
    "jne     0xeadf2",
    "mov     rsi, qword [r15]",
    "jmp     0xeaeb3",
    "mov     edi, 0xa",
    "call    putc",
    "call    rl_forced_update_display",
    "lea     rax, [rel rl_display_fixed]",
    "mov     dword [rax], 0x1",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    "
  ]
}
{
  "address": "0x61690",
  "rules": [
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     rdx, [rel shell_variables]",
    "mov     r13, qword [rdx]",
    "test    byte [r13+0xc], 0x18",
    "je      0x61850",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_132e58]  {\"pop_scope: head of shell_variabl\u2026\"}",
    "call    dcgettext",
    "add     rsp, 0x18",
    "pop     rbx",
    "mov     rdi, rax",
    "pop     r12",
    "xor     eax, eax",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     internal_error",
    "mov     rax, qword [r13+0x18]",
    "mov     ebx, edi",
    "test    rax, rax",
    "je      0x616cd",
    "mov     rdi, qword [r13]",
    "mov     qword [rdx], rax",
    "test    rdi, rdi",
    "je      0x616de",
    "mov     qword [rax+0x10], 0x0",
    "mov     r12, qword [r13+0x20]",
    "test    r12, r12",
    "je      0x61798",
    "call    free",
    "mov     rdi, r13",
    "call    free",
    "lea     rdi, [rel data_11ffb1]",
    "call    find_variable",
    "add     rsp, 0x18",
    "pop     rbx",
    "mov     rdi, rax",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     setifs",
    "mov     edx, dword [r12+0xc]",
    "mov     rax, qword [r12]",
    "test    ebx, ebx",
    "je      0x617c8",
    "test    edx, edx",
    "je      0x61787",
    "test    edx, edx",
    "je      0x61787",
    "mov     rdi, qword [r12]",
    "call    free",
    "mov     rdi, r12",
    "call    free",
    "mov     edx, dword [r12+0x8]",
    "test    edx, edx",
    "jle     0x6187b",
    "mov     ecx, dword [r12+0x8]",
    "test    ecx, ecx",
    "jle     0x6187b",
    "mov     rax, r12",
    "jmp     0x6177b",
    "xor     r14d, r14d",
    "nop     dword [rax]",
    "xor     r14d, r14d",
    "nop     dword [rax]",
    "mov     dword [r12+0xc], 0x0",
    "mov     r12, rax",
    "mov     qword [rdx], 0x0",
    "add     r14, 0x1",
    "cmp     dword [r12+0x8], r14d",
    "jg      0x617e0",
    "nop     dword [rax+rax]",
    "mov     qword [rdx], 0x0",
    "add     r14, 0x1",
    "cmp     dword [r12+0x8], r14d",
    "jg      0x61718",
    "mov     r15, rbx",
    "mov     esi, 0x1",
    "mov     rbx, qword [rbx]",
    "mov     rdi, qword [r15+0x10]",
    "call    sub_5ef40",
    "mov     rdi, qword [r15+0x8]",
    "call    free",
    "mov     rdi, r15",
    "call    free",
    "test    rbx, rbx",
    "jne     0x61730",
    "lea     rcx, [r14*8]",
    "lea     rdx, [rax+rcx]",
    "mov     qword [rbp-0x38], rcx",
    "mov     rbx, qword [rdx]",
    "test    rbx, rbx",
    "je      0x61830",
    "jmp     0x61777",
    "mov     r15, rbx",
    "mov     rbx, qword [rbx]",
    "mov     rdi, qword [r15+0x10]",
    "call    sub_5c280",
    "mov     rdi, qword [r15+0x8]",
    "call    free",
    "mov     rdi, r15",
    "call    free",
    "test    rbx, rbx",
    "jne     0x61800",
    "mov     rax, qword [r12]",
    "mov     rdx, qword [rbp-0x38]",
    "add     rdx, rax",
    "lea     rcx, [r14*8]",
    "lea     rdx, [rax+rcx]",
    "mov     qword [rbp-0x38], rcx",
    "mov     rbx, qword [rdx]",
    "test    rbx, rbx",
    "je      0x61765",
    "mov     rax, qword [r13+0x20]",
    "mov     rax, qword [r12]",
    "mov     rdx, qword [rbp-0x38]",
    "add     rdx, rax"
  ]
}
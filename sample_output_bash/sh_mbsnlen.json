{
  "address": "0xd99d0",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "xor     r14d, r14d",
    "push    r13",
    "mov     r13d, edx",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "xor     ebx, ebx",
    "sub     rsp, 0x28",
    "mov     qword [rbp-0x48], rsi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rbp-0x40]",
    "mov     qword [rbp-0x40], 0x0",
    "mov     qword [rbp-0x50], rax",
    "nop     dword [rax+rax]",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xd9acd",
    "lea     rax, [rel locale_mb_cur_max]",
    "add     r14d, 0x1",
    "cmp     dword [rax], 0x1",
    "jle     0xd9ac8",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "mov     eax, r14d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "add     ebx, 0x1",
    "jmp     0xd9a55",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0xd9a80",
    "cmp     ebx, r13d",
    "jle     0xd9a18",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xd9a96",
    "add     ebx, eax",
    "movsxd  rdx, ebx",
    "lea     rsi, [r12+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0xd9a5a",
    "mov     rax, qword [rbp-0x48]",
    "mov     rcx, qword [rbp-0x50]",
    "xor     edi, edi",
    "mov     r15, qword [rbp-0x40]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0xd9ac0",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0xd9a53",
    "test    rax, rax",
    "jne     0xd9a53",
    "mov     qword [rbp-0x40], r15",
    "add     ebx, 0x1",
    "jmp     0xd9a55",
    "nop     dword [rax]"
  ]
}
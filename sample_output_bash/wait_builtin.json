{
  "address": "0xc62a0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hide graphical window from taskbar/b4bfaf95e3d84a8f881eeaebe3fd856e",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae",
    "parse credit card information/0de73c67bdda475293f0af787196471d"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "xor     r12d, r12d",
    "push    rbx",
    "lea     rbx, [rel data_1219d0]  {\"fnp:\"}",
    "sub     rsp, 0x278",
    "mov     qword [rbp-0x288], rdi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rel loptend]",
    "mov     dword [rbp-0x27c], 0x0",
    "mov     qword [rel data_168d30], 0x0",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel lcurrent]",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rax], 0x0",
    "mov     qword [rbp-0x290], 0x0",
    "mov     dword [rbp-0x294], 0x0",
    "lea     rax, [rel loptend]",
    "cmp     qword [rbp-0x290], 0x0",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x288], rax",
    "je      0xc64b0",
    "cmp     eax, 0x6e",
    "je      0xc63e0",
    "lea     rax, [rel wait_intr_flag]",
    "lea     rdi, [rel wait_intr_buf]",
    "mov     esi, 0x1",
    "mov     dword [rax], 0x1",
    "call    __sigsetjmp",
    "endbr64 ",
    "mov     ebx, eax",
    "test    eax, eax",
    "je      0xc6568",
    "lea     rax, [rel assoc_expand_once]",
    "xor     ebx, ebx",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x298], eax",
    "test    eax, eax",
    "je      0xc644d",
    "mov     dword [rbp-0x294], 0x1",
    "jmp     0xc6328",
    "jg      0xc6370",
    "lea     rdx, [rel pending_traps]",
    "mov     eax, 0x1",
    "jmp     0xc658a",
    "lea     rax, [rel wait_signal_received]",
    "lea     r12, [rel waiting_for_child]",
    "mov     dword [rel data_1680c4], 0x0",
    "mov     rsi, qword [rel data_159c50]",
    "lea     r13, [rel wait_for_background_pids]",
    "mov     ebx, dword [rax]",
    "lea     rax, [rel last_command_exit_signal]",
    "mov     dword [r12], 0x0",
    "mov     dword [rax], ebx",
    "sub     ebx, 0xffffff80",
    "cmp     rsi, r13",
    "je      0xc6536",
    "mov     r14, qword [rbp-0x290]",
    "mov     rdi, r14",
    "call    legal_identifier",
    "test    eax, eax",
    "jne     0xc6474",
    "and     r12d, 0x200",
    "cmp     r12d, 0x1",
    "sbb     ebx, ebx",
    "and     ebx, 0xfffffffe",
    "add     ebx, 0x3",
    "cmp     r12d, 0x1",
    "sbb     eax, eax",
    "and     eax, 0xfffff000",
    "add     eax, 0x1080",
    "mov     dword [rbp-0x298], eax",
    "mov     rdi, qword [rbp-0x288]",
    "mov     rsi, rbx",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xc63f0",
    "cmp     eax, 0x70",
    "jne     0xc6398",
    "cmp     eax, 0xffffff9d",
    "je      0xc63d0",
    "mov     r9d, dword [rdx+rax*4]",
    "test    r9d, r9d",
    "je      0xc6580",
    "mov     eax, dword [rbp-0x27c]",
    "test    al, 0x8",
    "je      0xc6545",
    "mov     edi, 0x2",
    "call    set_signal_handler",
    "mov     qword [rel data_159c50], r13",
    "mov     dword [r12], 0x0",
    "mov     rdi, qword [rbp-0x290]",
    "call    builtin_unbind_variable",
    "cmp     eax, 0xfffffffe",
    "jne     0xc64b0",
    "xor     edx, edx",
    "mov     esi, ebx",
    "mov     rdi, r14",
    "call    tokenize_array_reference",
    "test    eax, eax",
    "je      0xc6a60",
    "call    builtin_usage",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x290], rax",
    "lea     rax, [rel list_optflags]",
    "mov     r12d, dword [rax]",
    "jmp     0xc6328",
    "call    builtin_help",
    "jmp     0xc639d",
    "cmp     eax, 0x66",
    "jne     0xc6398",
    "add     rax, 0x1",
    "cmp     rax, 0x41",
    "je      0xc65de",
    "mov     edx, eax",
    "cmp     eax, 0x11",
    "jne     0xc694f",
    "lea     rax, [rel wait_signal_received]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel wait_intr_flag]",
    "mov     dword [rax], 0x0",
    "jmp     0xc63a2",
    "call    sub_bc400",
    "lea     rax, [rel wait_signal_received]",
    "mov     ebx, 0x1",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel wait_intr_flag]",
    "mov     dword [rax], 0x0",
    "jmp     0xc63a2",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x290]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xc6485",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x278",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     ebx, 0x102",
    "mov     eax, dword [rbp-0x27c]",
    "or      eax, 0x2",
    "mov     dword [rbp-0x27c], eax",
    "jmp     0xc6328",
    "mov     esi, dword [rbp-0x294]",
    "test    esi, esi",
    "je      0xc66f1",
    "lea     ebx, [rdx+0x80]",
    "jmp     0xc65b6",
    "lea     rax, [rel posixly_correct]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "je      0xc6926",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xc6ba5",
    "cmp     qword [rbp-0x288], 0x0",
    "je      0xc6b7a",
    "mov     rax, qword [rbp-0x288]",
    "test    rax, rax",
    "je      0xc6984",
    "lea     rax, [rel last_command_exit_signal]",
    "mov     dword [rax], edx",
    "lea     rax, [rel wait_signal_received]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel wait_intr_flag]",
    "mov     dword [rax], 0x0",
    "jmp     0xc63a2",
    "lea     rdx, [rel pending_traps]",
    "mov     eax, 0x12",
    "jmp     0xc6946",
    "mov     ebx, 0x91",
    "lea     rdi, [rbp-0x268]",
    "call    wait_for_background_pids",
    "lea     rax, [rel wait_signal_received]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel wait_intr_flag]",
    "mov     dword [rax], 0x0",
    "jmp     0xc63a2",
    "lea     r14, [rel data_133c20]  {\"`%s': not a pid or valid job spe\u2026\"}",
    "lea     r13, [rbp-0x1c0]",
    "lea     r12, [rbp-0x240]",
    "jmp     0xc678f",
    "mov     edi, dword [rbp-0x27c]",
    "lea     rsi, [rbp-0x268]",
    "call    wait_for_any_job",
    "mov     r15, qword [rbp-0x290]",
    "mov     ebx, eax",
    "test    r15, r15",
    "je      0xc6a89",
    "lea     r12, [rbp-0x140]",
    "lea     r14, [rbp-0xc0]",
    "mov     r13, rax",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     rdi, r14",
    "call    sigemptyset",
    "mov     rsi, r12",
    "mov     rdx, r14",
    "xor     edi, edi",
    "call    sigprocmask",
    "lea     r12, [rel 0x12111a]  {\"%s: no such job\"}",
    "jmp     0xc666d",
    "mov     edi, dword [rdx+rax*4]",
    "test    edi, edi",
    "je      0xc6938",
    "mov     rax, qword [rbp-0x288]",
    "mov     rax, qword [rax+0x8]",
    "mov     rbx, qword [rax]",
    "movzx   eax, byte [rbx]",
    "lea     edx, [rax-0x30]",
    "cmp     dl, 0x9",
    "ja      0xc6720",
    "test    ebx, ebx",
    "mov     eax, 0x7f",
    "cmovs   ebx, eax",
    "jmp     0xc69ec",
    "test    eax, eax",
    "js      0xc6a89",
    "mov     rax, qword [r13+0x8]",
    "lea     rsi, [rbp-0x270]",
    "mov     rdi, qword [rax]",
    "call    legal_number",
    "test    eax, eax",
    "je      0xc6699",
    "add     rax, 0x1",
    "cmp     rax, 0x41",
    "je      0xc65de",
    "mov     edx, eax",
    "cmp     al, 0x25",
    "je      0xc6818",
    "lea     rsi, [rbp-0x278]",
    "mov     rdi, rbx",
    "call    legal_number",
    "test    eax, eax",
    "je      0xc6b2c",
    "cmp     qword [rbp-0x288], 0x0",
    "jne     0xc6540",
    "mov     r12d, dword [rbp-0x298]",
    "movsxd  rdi, dword [rbp-0x268]",
    "mov     esi, 0xa",
    "xor     r8d, r8d",
    "lea     rdx, [rbp-0x260]",
    "mov     ecx, 0x16",
    "call    fmtulong",
    "or      r12d, 0x800",
    "mov     rdi, r15",
    "mov     rsi, rax",
    "mov     edx, r12d",
    "call    bind_int_variable",
    "mov     rdi, r13",
    "call    get_job_spec",
    "cmp     eax, 0xffffffff",
    "je      0xc66c9",
    "mov     rax, qword [rbp-0x270]",
    "movsxd  rdx, eax",
    "mov     ecx, eax",
    "cmp     rax, rdx",
    "je      0xc69ff",
    "mov     rdi, r13",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, r13",
    "call    sigaddset",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     rdx, r12",
    "mov     rsi, r13",
    "xor     edi, edi",
    "call    sigprocmask",
    "mov     rdi, qword [rbp-0x288]",
    "call    get_job_spec",
    "mov     ebx, eax",
    "test    eax, eax",
    "js      0xc68b3",
    "mov     edx, 0x5",
    "mov     rsi, r14",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     ebx, 0x1",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     eax, 0x7f",
    "mov     dword [rbp-0x268], 0xffffffff",
    "mov     word [rbp-0x264], ax",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133c20]  {\"`%s': not a pid or valid job spe\u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     ebx, 0x1",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xc6545",
    "mov     r15, qword [rbp-0x278]",
    "movsxd  rax, r15d",
    "mov     edi, r15d",
    "cmp     r15, rax",
    "jne     0xc6b2c",
    "jmp     0xc6545",
    "mov     rax, qword [r13+0x8]",
    "mov     rsi, r12",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "mov     r14, qword [rax]",
    "call    dcgettext",
    "mov     rdi, rax",
    "mov     rsi, r14",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xc6660",
    "lea     rdx, [rel jobs]",
    "mov     rdx, qword [rdx]",
    "test    rdx, rdx",
    "je      0xc66c9",
    "lea     rax, [rel js]",
    "mov     eax, dword [rax+0x1c]",
    "test    eax, eax",
    "jle     0xc66c9",
    "cmp     eax, 0xfffffffe",
    "je      0xc68e6",
    "lea     rax, [rel js]",
    "cmp     dword [rax+0x1c], ebx",
    "jle     0xc68b8",
    "lea     rdx, [rel last_command_exit_signal]",
    "lea     r12, [rel waiting_for_child]",
    "mov     dword [rel data_1680c4], 0x0",
    "lea     ebx, [rax+0x80]",
    "mov     rsi, qword [rel data_159c50]",
    "lea     r13, [rel wait_for_background_pids]",
    "mov     dword [rdx], eax",
    "mov     dword [r12], 0x0",
    "cmp     rsi, r13",
    "je      0xc6545",
    "mov     rax, qword [rbp-0x288]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x288], rax",
    "mov     esi, dword [rbp-0x27c]",
    "or      esi, 0x1",
    "call    wait_for_single_pid",
    "mov     ebx, eax",
    "cmp     eax, 0x100",
    "jle     0xc68a0",
    "mov     r13, qword [r13]",
    "test    r13, r13",
    "je      0xc695a",
    "test    eax, eax",
    "js      0xc66c9",
    "lea     rdx, [rel jobs]",
    "movsxd  rsi, eax",
    "xor     eax, eax",
    "mov     r8, qword [rdx]",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "mov     ebx, 0x7f",
    "call    sigprocmask",
    "mov     rax, qword [rbp-0x288]",
    "mov     edx, 0x7f",
    "mov     dword [rbp-0x268], 0xffffffff",
    "mov     word [rbp-0x264], dx",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x288], rax",
    "jmp     0xc6781",
    "mov     rax, qword [rbp-0x288]",
    "lea     rsi, [rel 0x12111a]  {\"%s: no such job\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "mov     rax, qword [rax+0x8]",
    "mov     rbx, qword [rax]",
    "call    dcgettext",
    "mov     rdi, rax",
    "mov     rsi, rbx",
    "xor     eax, eax",
    "call    builtin_error",
    "lea     rdx, [rel jobs]",
    "movsxd  rax, ebx",
    "mov     rdx, qword [rdx]",
    "cmp     qword [rdx+rax*8], 0x0",
    "je      0xc68b8",
    "mov     edi, 0x2",
    "call    set_signal_handler",
    "mov     qword [rel data_159c50], r13",
    "mov     dword [r12], 0x0",
    "jmp     0xc6545",
    "cmp     qword [rbp-0x290], 0x0",
    "je      0xc6545",
    "mov     dword [rbp-0x268], r15d",
    "mov     word [rbp-0x264], ax",
    "jmp     0xc675f",
    "mov     ecx, 0x7f",
    "mov     ebx, 0x7f",
    "mov     dword [rbp-0x268], 0xffffffff",
    "mov     word [rbp-0x264], cx",
    "jmp     0xc675f",
    "xor     edx, edx",
    "lea     rsi, [rbp-0xc0]",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "test    ebx, ebx",
    "je      0xc6b56",
    "lea     rcx, [rel js]",
    "cmp     dword [rcx+0x1c], eax",
    "jg      0xc6640",
    "mov     rdi, qword [rdx+0x8]",
    "mov     rdx, rdi",
    "add     rax, 0x1",
    "cmp     rsi, rax",
    "jne     0xc6a20",
    "cmp     qword [rbp-0x288], 0x0",
    "je      0xc6a98",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "mov     esi, dword [rbp-0x27c]",
    "mov     edi, ebx",
    "lea     rdx, [rbp-0x268]",
    "call    wait_for_job",
    "mov     ebx, eax",
    "jmp     0xc675f",
    "mov     eax, dword [rbp-0x268]",
    "cmp     eax, 0xffffffff",
    "je      0xc6545",
    "lea     rax, [rel wait_signal_received]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xc6acf",
    "lea     rax, [rel wait_signal_received]",
    "mov     ebx, 0x7f",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel wait_intr_flag]",
    "mov     dword [rax], 0x0",
    "jmp     0xc63a2",
    "mov     eax, dword [rbp-0x27c]",
    "or      eax, 0x8",
    "mov     dword [rbp-0x27c], eax",
    "cdqe    ",
    "mov     rax, qword [rdx+rax*8]",
    "test    rax, rax",
    "je      0xc66c9",
    "mov     rdx, qword [rdx]",
    "cmp     rdi, rdx",
    "jne     0xc6a47",
    "mov     rdx, qword [r8+rax*8]",
    "test    rdx, rdx",
    "jne     0xc6a40",
    "jmp     0xc66c9",
    "mov     edx, dword [rbp-0x298]",
    "mov     rdi, qword [rbp-0x290]",
    "movsxd  rsi, eax",
    "call    builtin_bind_var_to_int",
    "jmp     0xc6545",
    "mov     edx, dword [rax+0x18]",
    "test    dl, 0x80",
    "jne     0xc6660",
    "cmp     ecx, dword [rdx+0x8]",
    "je      0xc66a6",
    "jmp     0xc6a29",
    "or      dl, 0x80",
    "add     ebx, 0x1",
    "mov     dword [rax+0x18], edx",
    "nop     dword [rax]"
  ]
}
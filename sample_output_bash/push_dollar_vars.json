{
  "address": "0x5bd10",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "mov     r12d, dword [rel data_166f14]",
    "mov     eax, dword [rel data_168084]",
    "mov     r14, qword [rel data_166f18]",
    "lea     edx, [r12+0x1]",
    "cmp     edx, eax",
    "jge     0x5bdf8",
    "add     eax, 0xa",
    "mov     dword [rel data_168084], eax",
    "cdqe    ",
    "lea     rbx, [rax+rax*2]",
    "shl     rbx, 0x3",
    "test    r14, r14",
    "je      0x5be36",
    "lea     rbx, [rel posparam_count]",
    "movsxd  rax, r12d",
    "mov     edi, 0x50",
    "lea     rax, [rax+rax*2]",
    "lea     r15, [r14+rax*8]",
    "mov     eax, dword [rbx]",
    "mov     dword [r15+0x10], eax",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x5be43",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r14, rax",
    "jmp     0x5be1e",
    "mov     rdi, r14",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r14, rax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     esi, 0x50",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, r15",
    "lea     rsi, [rel dollar_vars]",
    "lea     rdx, [r13+0x8]",
    "lea     rax, [rsi+0x8]",
    "add     rsi, 0x50",
    "nop     word [rax+rax]",
    "test    r14, r14",
    "je      0x5be73",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_166f18], r14",
    "mov     r12d, dword [rel data_166f14]",
    "jmp     0x5bd46",
    "mov     rcx, qword [rax]",
    "mov     qword [rax], 0x0",
    "add     rax, 0x8",
    "add     rdx, 0x8",
    "mov     qword [rdx-0x8], rcx",
    "cmp     rsi, rax",
    "jne     0x5bd90",
    "lea     rax, [rel rest_of_args]",
    "add     r12d, 0x1",
    "mov     qword [r15], r13",
    "pxor    xmm0, xmm0",
    "mov     dword [rel data_166f14], r12d",
    "movsxd  r12, r12d",
    "mov     rdx, qword [rax]",
    "mov     qword [rax], 0x0",
    "lea     rax, [r12+r12*2]",
    "mov     dword [rbx], 0x0",
    "mov     qword [rdi+0x8], rdx",
    "movups  xmmword [r14+rax*8], xmm0",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    "
  ]
}
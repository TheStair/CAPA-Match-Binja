{
  "address": "0x68b70",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "encrypt data using Curve25519/71854cb5ec3d414da844548a1a695b22",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "check for kernel debugger via shared user data structure/47a8170337e74f7ca5a6c64253eb43bf",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "movsxd  r12, edi",
    "push    rbx",
    "mov     ebx, esi",
    "sub     rsp, 0x18",
    "lea     rax, [rel jobs]",
    "and     esi, 0x1",
    "mov     dword [rbp-0x3c], edi",
    "mov     rax, qword [rax]",
    "mov     r14, qword [rax+r12*8]",
    "je      0x68bb1",
    "lea     rax, [rel jobs]",
    "mov     rax, qword [rax]",
    "mov     r14, qword [rax+r12*8]",
    "test    r14, r14",
    "je      0x68cb0",
    "lea     rax, [rel subshell_environment]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x68da0",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "and     ebx, 0x2",
    "je      0x68d60",
    "cmp     dword [r14+0x14], 0x2",
    "jne     0x68bc8",
    "mov     eax, dword [r14+0x18]",
    "and     eax, 0x21",
    "cmp     eax, 0x20",
    "jne     0x68bd1",
    "lea     rax, [rel jobs]",
    "mov     rax, qword [rax]",
    "mov     qword [rax+r12*8], 0x0",
    "lea     r12, [rel js]",
    "cmp     qword [r12+0x38], r14",
    "je      0x68de0",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1330e0]  {\"deleting stopped job %d with pro\u2026\"}",
    "movsxd  r13, dword [r14+0x10]",
    "call    dcgettext",
    "mov     rdi, rax",
    "mov     eax, dword [rbp-0x3c]",
    "mov     rdx, r13",
    "lea     esi, [rax+0x1]",
    "xor     eax, eax",
    "call    internal_warning",
    "jmp     0x68bb1",
    "mov     rcx, qword [r14+0x8]",
    "mov     rax, rcx",
    "jmp     0x68d8f",
    "mov     qword [r12+0x38], 0x0",
    "jmp     0x68c00",
    "cmp     qword [r12+0x40], r14",
    "je      0x68df0",
    "test    rax, rax",
    "jne     0x68d80",
    "mov     rdi, qword [r14]",
    "xor     ebx, ebx",
    "call    free",
    "mov     rax, qword [r14+0x8]",
    "mov     qword [rbp-0x38], rax",
    "mov     r15, rax",
    "nop     dword [rax]",
    "mov     qword [r12+0x40], 0x0",
    "jmp     0x68c00",
    "mov     rdx, qword [rax]",
    "cmp     rcx, rdx",
    "je      0x68e4e",
    "jmp     0x68bd1",
    "mov     rdi, r13",
    "add     ebx, 0x1",
    "call    free",
    "cmp     qword [rbp-0x38], r15",
    "jne     0x68c18",
    "call    free",
    "mov     edx, dword [rax+0xc]",
    "mov     ecx, edx",
    "and     ecx, 0x7f",
    "add     ecx, 0x1",
    "cmp     cl, 0x1",
    "jg      0x68ec0",
    "mov     rax, rdx",
    "mov     r13, r15",
    "mov     r15, qword [r15]",
    "mov     rdi, qword [r13+0x18]",
    "test    rdi, rdi",
    "je      0x68c2c",
    "sub     dword [r12+0x10], ebx",
    "cmp     dword [r14+0x14], 0x4",
    "jne     0x68c62",
    "and     edx, 0x7f",
    "lea     ebx, [rdx+0x80]",
    "jmp     0x68e67",
    "movzx   ecx, dh",
    "cmp     dl, 0x7f",
    "cmovne  ebx, ecx",
    "mov     rdi, qword [r14+0x20]",
    "test    rdi, rdi",
    "je      0x68c70",
    "mov     eax, dword [r12+0xc]",
    "xor     edx, edx",
    "sub     dword [r12+0x2c], 0x1",
    "sub     eax, ebx",
    "test    eax, eax",
    "cmovs   eax, edx",
    "mov     dword [r12+0xc], eax",
    "mov     edi, dword [rax+0x8]",
    "mov     esi, ebx",
    "call    sub_112420",
    "jmp     0x68bd1",
    "mov     rdi, r14",
    "call    free",
    "sub     dword [r12+0x28], 0x1",
    "jne     0x68cc0",
    "call    dispose_command",
    "lea     rax, [rel jobs]",
    "mov     rcx, qword [rax]",
    "movsxd  rax, dword [r12+0x24]",
    "cmp     qword [rcx+rax*8], 0x0",
    "mov     rdx, rax",
    "je      0x68dfe",
    "mov     qword [r12+0x20], 0x0",
    "mov     r8d, dword [r12+0x1c]",
    "lea     eax, [rax+0x1]",
    "mov     dword [r12+0x24], eax",
    "cmp     edx, r8d",
    "lea     esi, [r8-0x1]",
    "cmovge  edx, esi",
    "xor     edi, edi",
    "jmp     0x68e3d",
    "movsxd  rax, dword [r12+0x20]",
    "cmp     qword [rcx+rax*8], 0x0",
    "mov     rdx, rax",
    "jne     0x68c89",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sub_668f0",
    "cmp     eax, dword [r12+0x34]",
    "jne     0x68cb0",
    "cmp     eax, r8d",
    "jl      0x68e20",
    "mov     eax, dword [rbp-0x3c]",
    "cmp     eax, dword [r12+0x30]",
    "je      0x68c9a",
    "xor     esi, esi",
    "test    edx, edx",
    "lea     eax, [rax-0x1]",
    "cmovs   edx, esi",
    "mov     dword [r12+0x20], eax",
    "cmp     eax, edx",
    "je      0x68d4c",
    "movsxd  rsi, eax",
    "lea     rsi, [rcx+rsi*8]",
    "mov     rsi, rcx",
    "mov     edi, 0x1",
    "xor     eax, eax",
    "jmp     0x68e27",
    "mov     dword [r12+0x28], 0x0",
    "jmp     0x68c80",
    "mov     esi, dword [r12+0x1c]",
    "xor     edi, edi",
    "lea     r8d, [rsi-0x1]",
    "jmp     0x68d20",
    "test    dil, dil",
    "je      0x68cdd  {\"IcD$ H\"}",
    "cmp     eax, edx",
    "je      0x68e76",
    "cmp     qword [rsi], 0x0",
    "jne     0x68e76",
    "test    eax, eax",
    "jns     0x68d2c",
    "mov     dword [r12+0x24], eax",
    "cmp     eax, edx",
    "jne     0x68cdd  {\"IcD$ H\"}",
    "add     eax, 0x1",
    "mov     edi, 0x1",
    "cmp     eax, edx",
    "je      0x68e8c",
    "movsxd  rsi, eax",
    "cmp     qword [rcx+rsi*8], 0x0",
    "je      0x68d10",
    "mov     eax, r8d",
    "mov     edi, 0x1",
    "mov     dword [r12+0x28], 0x0",
    "cmp     qword [rcx], 0x0",
    "mov     qword [r12+0x20], 0x0",
    "jne     0x68c89",
    "cmp     eax, edx",
    "je      0x68d36",
    "test    dil, dil",
    "je      0x68c89",
    "mov     dword [r12+0x20], 0xffffffff",
    "xor     edx, edx",
    "or      eax, 0xffffffff",
    "jmp     0x68cff",
    "sub     eax, 0x1",
    "mov     edi, 0x1",
    "cmp     eax, edx",
    "je      0x68d4c",
    "mov     dword [r12+0x20], eax",
    "cmp     eax, edx",
    "jne     0x68c89"
  ]
}
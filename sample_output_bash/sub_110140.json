{
  "address": "0x110140",
  "rules": [
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "parse credit card information/3375d6c43054451cb36d19c4d5da62ae",
    "decompress data using LZO/eb3121acf7214c64b84ac9b7cddcf413",
    "search for credit card data/6acc81a026f04eebb934cf95ebf5d6c3",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "contain loop",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a"
  ],
  "disassembly": [
    "push    rbp",
    "mov     r11, rsi",
    "mov     eax, edx",
    "xor     r10d, r10d",
    "xor     r9d, r9d",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14d, edx",
    "push    r13",
    "lea     r13, [rel jump_table_138c50]",
    "push    r12",
    "mov     r12, rcx",
    "push    rbx",
    "mov     r8, qword [rsi]",
    "mov     rbx, rdi",
    "xor     esi, esi",
    "mov     r15, qword [rdi]",
    "movzx   ecx, byte [r8]",
    "cmp     r10d, 0x2",
    "jne     0x1101d7",
    "test    cl, cl",
    "je      0x110330",
    "cmp     cl, 0x5c",
    "je      0x110210",
    "lea     r8d, [rcx-0x30]",
    "cmp     r8b, 0x7",
    "jbe     0x110230",
    "add     r8, 0x1",
    "mov     rdi, r15",
    "xor     eax, eax",
    "jmp     0x1101fa",
    "lea     esi, [rcx-0x30]",
    "cmp     sil, 0x48",
    "ja      0x1101a0",
    "movzx   ecx, byte [rdx+0x1]",
    "lea     r8, [rdx+0x1]",
    "mov     r10d, 0x1",
    "jg      0x110270",
    "lea     esi, [rcx+rsi*8-0x30]",
    "add     rdx, 0x1",
    "movzx   ecx, byte [rdx]",
    "jmp     0x1101bf",
    "mov     byte [rdi], sil",
    "movzx   ecx, byte [rdx]",
    "add     r9, 0x1",
    "add     rdi, 0x1",
    "mov     qword [rbx], rdi",
    "mov     qword [r11], r8",
    "mov     qword [r12], r9",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "{Case 0x8-0xe, 0x10-0x27, 0x29-0x2e, 0x30, 0x33-0x34, 0x37-0x3d, 0x3f-0x41, 0x43, 0x45, 0x47}",
    "mov     esi, ecx",
    "movzx   edx, sil",
    "movsxd  rdx, dword [r13+rdx*4]",
    "add     rdx, r13",
    "jmp     rdx",
    "mov     rdx, r8",
    "mov     rdi, r15",
    "cmp     r10d, 0x1",
    "jne     0x1101b9",
    "cmp     cl, 0x5e",
    "jne     0x110250",
    "cmp     cl, 0x3d",
    "je      0x110240",
    "{Case 0x0-0x7}",
    "mov     rdi, r15",
    "mov     r10d, 0x2",
    "jmp     0x1101b0",
    "{Case 0xf}",
    "mov     esi, 0x7f",
    "jmp     0x1101a2",
    "{Case 0x42}",
    "mov     esi, 0xd",
    "jmp     0x1101a2",
    "{Case 0x2f}",
    "mov     esi, 0x20",
    "jmp     0x1101a2",
    "{Case 0x44}",
    "mov     esi, 0x9",
    "jmp     0x1101a2",
    "{Case 0x46}",
    "mov     esi, 0xb",
    "jmp     0x1101a2",
    "{Case 0x35}",
    "mov     esi, 0x1b",
    "jmp     0x1101a2",
    "{Case 0x36}",
    "mov     esi, 0xc",
    "jmp     0x1101a2",
    "{Case 0x3e}",
    "mov     esi, 0xa",
    "jmp     0x1101a2",
    "{Case 0x28, 0x48}",
    "movzx   ecx, byte [r8+0x1]",
    "lea     rdx, [r8+0x1]",
    "xor     esi, esi",
    "nop     dword [rax]",
    "{Case 0x32}",
    "mov     esi, 0x8",
    "jmp     0x1101a2",
    "{Case 0x31}",
    "mov     esi, 0x7",
    "jmp     0x1101a2",
    "mov     byte [rdi], cl",
    "add     r9, 0x1",
    "movzx   ecx, byte [rdx+0x1]",
    "add     rdi, 0x1",
    "add     rdx, 0x1",
    "jmp     0x1101d7",
    "movzx   ecx, byte [rdx+0x1]",
    "lea     r8d, [rcx-0x40]",
    "cmp     r8b, 0x3e",
    "ja      0x1102a0",
    "test    r14b, r14b",
    "je      0x110250",
    "jg      0x110250",
    "movzx   ecx, byte [r8+0x1]",
    "lea     rdx, [r8+0x1]",
    "mov     byte [r15], sil",
    "lea     rdi, [r15+0x1]",
    "add     r9, 0x1",
    "xor     r10d, r10d",
    "lea     edi, [rcx-0x61]",
    "cmp     dil, 0x5",
    "ja      0x1103a8",
    "cmp     cl, 0x40",
    "jg      0x1103c0",
    "lea     r8, [rdx+0x1]",
    "cmp     cl, 0x3f",
    "je      0x1102b0",
    "and     ecx, 0x1f",
    "lea     r8, [rdx+0x2]",
    "add     r9, 0x1",
    "add     rdi, 0x1",
    "mov     byte [rdi-0x1], cl",
    "xor     r10d, r10d",
    "movzx   ecx, byte [rdx+0x2]",
    "jmp     0x11021e",
    "mov     r8, rdx",
    "jmp     0x1101fa",
    "test    cl, cl",
    "je      0x1101f2",
    "mov     byte [r15], sil",
    "lea     rdi, [r15+0x1]",
    "movzx   ecx, byte [rdx]",
    "add     r9, 0x1",
    "xor     r10d, r10d",
    "jmp     0x1101b9",
    "shl     esi, 0x4",
    "add     rdx, 0x1",
    "lea     esi, [rcx+rsi-0x57]",
    "movzx   ecx, byte [rdx]",
    "jmp     0x110350",
    "shl     esi, 0x4",
    "add     rdx, 0x1",
    "lea     esi, [rcx+rsi-0x37]",
    "movzx   ecx, byte [rdx]",
    "jmp     0x110350",
    "lea     edi, [rcx-0x30]",
    "cmp     dil, 0x9",
    "ja      0x1103a8",
    "mov     byte [rdi], 0x7f",
    "add     r9, 0x1",
    "movzx   ecx, byte [rdx+0x1]",
    "add     rdi, 0x1",
    "xor     r10d, r10d",
    "jmp     0x11021e",
    "xor     eax, eax",
    "jmp     0x1101fa",
    "mov     r15, rdi",
    "jmp     0x110174",
    "mov     r8, rdx",
    "mov     eax, 0x1",
    "cmp     cl, 0x3a",
    "jne     0x110250",
    "cmp     cl, 0x46",
    "jg      0x110376",
    "shl     esi, 0x4",
    "add     rdx, 0x1",
    "lea     esi, [rcx+rsi-0x30]",
    "movzx   ecx, byte [rdx]",
    "cmp     cl, 0x46",
    "jle     0x110355"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xf29a0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "mov     r12d, esi",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "test    esi, esi",
    "jns     0xf2a20",
    "movsxd  rdx, dword [rdi+0x38]",
    "mov     rax, qword [rdi+0x18]",
    "xor     esi, esi",
    "mov     rdi, qword [rax+rdx*8]",
    "call    rl_replace_line",
    "call    rl_restore_prompt",
    "mov     rdi, qword [rel data_16a818]",
    "test    rdi, rdi",
    "je      0xf2a49",
    "mov     rdi, qword [rbx+0x8]",
    "test    rdi, rdi",
    "je      0xf29c9",
    "mov     rax, qword [rbx+0x8]",
    "mov     edx, dword [rbx+0x38]",
    "mov     qword [rbx+0x8], 0x0",
    "mov     qword [rel data_16a818], rax",
    "mov     eax, dword [rbx+0x10]",
    "mov     qword [rbx+0x10], 0x0",
    "mov     dword [rel data_16a814], eax",
    "mov     eax, dword [rbx+0x3c]",
    "cmp     eax, edx",
    "jge     0xf2ae8",
    "call    free",
    "mov     rdi, qword [rbx+0x20]",
    "test    rdi, rdi",
    "je      0xf29d7",
    "call    free",
    "sub     eax, edx",
    "xor     esi, esi",
    "mov     edi, eax",
    "call    rl_get_next_history",
    "jmp     0xf2a82",
    "sub     edx, eax",
    "xor     esi, esi",
    "mov     edi, edx",
    "call    rl_get_previous_history",
    "mov     rdi, qword [rbx+0x18]",
    "test    rdi, rdi",
    "je      0xf29e5",
    "call    free",
    "lea     rdx, [rel rl_end]",
    "mov     eax, dword [rbx+0x9c]",
    "mov     r13d, dword [rdx]",
    "test    eax, eax",
    "js      0xf2af8",
    "mov     eax, dword [rbx+0x38]",
    "cmp     dword [rbx+0x3c], eax",
    "je      0xf2b60",
    "lea     rdx, [rel rl_point]",
    "mov     dword [rdx], eax",
    "cmp     eax, r13d",
    "jg      0xf2ae0",
    "mov     rdi, rbx",
    "call    free",
    "lea     rax, [rel _rl_iscxt]",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel rl_readline_state]",
    "and     qword [rax], 0xffffffffffffff7f",
    "xor     eax, eax",
    "test    r12d, r12d",
    "setne   al",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "call    free",
    "mov     eax, dword [rbx+0x30]",
    "jmp     0xf2b0f",
    "lea     rax, [rel rl_line_buffer]",
    "mov     rdi, qword [rax]",
    "call    strlen",
    "mov     dword [rdx], r13d",
    "jmp     0xf2aa4",
    "lea     rax, [rel rl_prompt]",
    "mov     dword [rel data_169190], 0x0",
    "mov     rdx, qword [rax]",
    "lea     rax, [rel rl_display_prompt]",
    "mov     qword [rax], rdx",
    "mov     eax, dword [rel data_16a4b0]",
    "test    eax, eax",
    "jne     0xf2b48",
    "lea     rdx, [rel rl_mark]",
    "mov     ecx, dword [rbx+0x34]",
    "mov     dword [rbx+0x9c], eax",
    "mov     dword [rdx], ecx",
    "lea     rdx, [rel rl_point]",
    "mov     dword [rdx], eax",
    "cmp     eax, r13d",
    "jg      0xf2ae0",
    "test    eax, eax",
    "jns     0xf2aa4",
    "call    rl_restore_prompt",
    "mov     dword [rel data_16a4b0], 0x0",
    "jmp     0xf2acc",
    "lea     rax, [rel rl_redisplay_function]",
    "call    qword [rax]",
    "jmp     0xf29bb",
    "mov     dword [rdx], 0x0",
    "jmp     0xf2aa4"
  ]
}
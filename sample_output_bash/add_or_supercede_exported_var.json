{
  "address": "0x5d8a0",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "allocate or change RW memory/877cb0b79bfa432e8e79b8bd20fa354f",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     dword [rbp-0x44], esi",
    "xor     esi, esi",
    "call    assignment",
    "test    eax, eax",
    "je      0x5d9c0",
    "lea     rax, [rel export_env]",
    "mov     rax, qword [rax]",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "movsxd  rdx, eax",
    "cmp     byte [r12+rdx+0x1], 0x28",
    "je      0x5d990",
    "lea     rdx, [r12+rdx+0x2]",
    "cmp     byte [rdx], 0x29",
    "jne     0x5d8d9",
    "mov     ecx, dword [rel data_166f34]",
    "mov     dword [rbp-0x48], ecx",
    "test    ecx, ecx",
    "jle     0x5d9d9",
    "cmp     byte [rdx+0x1], 0x20",
    "jne     0x5d8d9",
    "lea     rax, [rel export_env]",
    "mov     qword [rbp-0x50], rax",
    "nop     dword [rax]",
    "lea     rcx, [rel export_env]",
    "mov     r9, qword [rcx]",
    "mov     qword [rbp-0x50], rcx",
    "mov     r14, qword [r9]",
    "cmp     eax, 0xffffffff",
    "je      0x5daff",
    "lea     ecx, [rax+0x4]",
    "cmp     byte [rdx+0x2], 0x7b",
    "cmove   eax, ecx",
    "jmp     0x5d8d9",
    "mov     rdx, qword [rbp-0x50]",
    "add     eax, 0x10",
    "mov     dword [rel data_166f30], eax",
    "cdqe    ",
    "mov     rdi, qword [rdx]",
    "lea     rbx, [rax*8]",
    "test    rdi, rdi",
    "je      0x5daf2",
    "mov     eax, dword [rbp-0x44]",
    "test    eax, eax",
    "jne     0x5da38",
    "xor     r13d, r13d",
    "jmp     0x5d959",
    "movsxd  r8, dword [rbp-0x48]",
    "add     eax, 0x1",
    "movzx   ebx, byte [r12]",
    "xor     r13d, r13d",
    "cdqe    ",
    "mov     qword [rbp-0x40], rax",
    "lea     r15, [r8*8]",
    "jmp     0x5d935",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r14, rax",
    "jmp     0x5da9a",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r14, rax",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x5db07",
    "mov     rax, qword [rbp-0x50]",
    "movsxd  rdx, dword [rel data_166f34]",
    "mov     rax, qword [rax]",
    "lea     ecx, [rdx+0x1]",
    "mov     dword [rel data_166f34], ecx",
    "mov     qword [rax+rdx*8], r12",
    "mov     qword [rax+rdx*8+0x8], 0x0",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r14",
    "call    free",
    "mov     edx, dword [rbp-0x44]",
    "test    edx, edx",
    "jne     0x5dac0",
    "mov     r14, qword [r9+r13]",
    "cmp     bl, byte [r14]",
    "jne     0x5d928",
    "test    r14, r14",
    "je      0x5db30",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x50]",
    "mov     qword [rax], r14",
    "mov     rax, qword [rel environ]",
    "mov     qword [rax], r14",
    "jmp     0x5d9f8",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rdx, rbx",
    "mov     rdi, r13",
    "mov     r12, r13",
    "call    __strcpy_chk",
    "jmp     0x5d9ff",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x5db1d",
    "mov     rax, qword [rbp-0x50]",
    "mov     rax, qword [rax]",
    "mov     qword [rax+r13], r12",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "add     r13, 0x8",
    "cmp     r13, r15",
    "je      0x5d9e8",
    "mov     rdx, qword [rbp-0x40]",
    "mov     rsi, r14",
    "mov     rdi, r12",
    "mov     qword [rbp-0x38], r9",
    "call    strncmp",
    "mov     r9, qword [rbp-0x38]",
    "test    eax, eax",
    "jne     0x5d928",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rdx, rbx",
    "mov     rdi, r14",
    "mov     r12, r14",
    "call    __strcpy_chk",
    "jmp     0x5d96c",
    "mov     eax, dword [rel data_166f30]",
    "mov     edi, dword [rbp-0x48]",
    "lea     edx, [rax-0x1]",
    "cmp     edx, edi",
    "jle     0x5da70"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
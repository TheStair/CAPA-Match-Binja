{
  "address": "0x77fa0",
  "rules": [
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "hash data using djb2/9bc6b91561f04ebca409510ba6653174",
    "hash data using jshash/495bfd597bd14a45826758e92f604bf6",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "contain loop",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdi",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rsi",
    "sub     rsp, 0x38",
    "movzx   r13d, byte [rsi]",
    "mov     dword [rbp-0x40], edx",
    "mov     qword [rbp-0x50], rcx",
    "mov     qword [rbp-0x58], r8",
    "test    r13b, r13b",
    "je      0x78030",
    "lea     rax, [rel extended_glob]",
    "mov     r12d, 0x3",
    "mov     qword [rbp-0x38], rax",
    "movzx   r14d, byte [rsi+0x1]",
    "test    r14b, r14b",
    "je      0x782b0",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38]",
    "cmp     dword [rbp-0x40], 0x1",
    "movzx   ecx, byte [rbx]",
    "mov     esi, dword [rax]",
    "je      0x78260",
    "cmp     r13b, 0x2a",
    "jne     0x78596",
    "cmp     byte [rsi+0x2], 0x0",
    "mov     r12d, 0x2",
    "je      0x77ff4",
    "mov     rdx, r14",
    "mov     rax, rbx",
    "test    cl, cl",
    "jne     0x78081",
    "cmp     cl, 0x2a",
    "je      0x78318",
    "lea     rax, [rel extended_glob]",
    "mov     r12d, 0x4",
    "mov     qword [rbp-0x38], rax",
    "jmp     0x78041",
    "lea     rax, [rel extended_glob]",
    "mov     qword [rbp-0x38], rax",
    "cmp     r13b, 0x2a",
    "jne     0x783f0",
    "mov     rdi, rsi",
    "call    strlen",
    "mov     r12, rax",
    "mov     rax, rbx",
    "nop     dword [rax]",
    "jmp     0x7809f",
    "cmp     byte [rbx+0x1], 0x28",
    "mov     rdx, r14",
    "jne     0x78081",
    "mov     byte [r14], 0x2a",
    "lea     rdx, [r14+0x1]",
    "test    cl, cl",
    "je      0x7855a",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x785ac",
    "xor     eax, eax",
    "test    edx, edx",
    "mov     rsi, r15",
    "mov     rdi, rbx",
    "setne   dl",
    "movzx   edx, dl",
    "shl     edx, 0x5",
    "test    eax, eax",
    "setne   al",
    "movzx   eax, al",
    "shl     eax, 0x4",
    "or      edx, eax",
    "call    xstrmatch",
    "mov     r12d, eax",
    "lea     rax, [rel extended_glob]",
    "add     r12, 0x3",
    "mov     qword [rbp-0x38], rax",
    "jmp     0x78041",
    "cmp     r14b, 0x28",
    "je      0x783d0",
    "add     rax, 0x1",
    "mov     byte [rdx], cl",
    "add     rdx, 0x1",
    "movzx   ecx, byte [rax]",
    "test    cl, cl",
    "jne     0x78088",
    "cmp     dword [rbp-0x40], 0x2",
    "je      0x780b0",
    "cmp     byte [rax-0x1], 0x2a",
    "je      0x78388",
    "test    esi, esi",
    "je      0x78081",
    "mov     rax, rbx",
    "jmp     0x78099",
    "cmp     byte [r15], 0x0",
    "movzx   edx, byte [rbx]",
    "jne     0x78278",
    "jmp     0x7824d",
    "lea     rax, [rel extended_glob]",
    "mov     qword [rbp-0x38], rax",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x78021",
    "lea     rsi, [rel extended_glob]",
    "movzx   eax, byte [rbx+r12-0x1]",
    "mov     qword [rbp-0x38], rsi",
    "lea     r13, [rel match_ignore_case]",
    "mov     byte [rdx], 0x0",
    "mov     eax, dword [r13]",
    "test    r15, r15",
    "je      0x78240",
    "cmp     byte [rax-0x2], 0x5c",
    "jne     0x780b0",
    "mov     byte [rdx], 0x2a",
    "add     rdx, 0x1",
    "mov     byte [r14], 0x2a",
    "lea     rdx, [r14+0x1]",
    "jmp     0x78081",
    "cmp     byte [r15+0x1], 0x0",
    "je      0x78340",
    "mov     r12, r15",
    "test    dl, dl",
    "je      0x78360",
    "add     r12, 0x3",
    "jmp     0x78041",
    "movzx   eax, byte [rbx+r12-0x1]",
    "jmp     0x78019",
    "mov     rax, qword [rbp-0x38]",
    "lea     r13, [rel match_ignore_case]",
    "mov     edx, dword [rax]",
    "mov     eax, dword [r13]",
    "test    r15, r15",
    "je      0x7824d",
    "cmp     rbx, r14",
    "je      0x7824d",
    "test    r14, r14",
    "je      0x78240",
    "sub     rax, 0x3",
    "cmp     rax, rbx",
    "jb      0x780a9",
    "lea     r12, [r15+0x1]",
    "test    dl, dl",
    "je      0x78360",
    "cmp     byte [r15+0x2], 0x0",
    "jne     0x78530",
    "mov     eax, dword [rbp-0x40]",
    "cmp     eax, 0x1",
    "je      0x7856d",
    "mov     dword [rbp-0x44], 0x0",
    "mov     qword [rbp-0x60], 0x0",
    "cmp     al, 0x2a",
    "je      0x782c5",
    "mov     rdi, r14",
    "call    free",
    "xor     edx, edx",
    "test    esi, esi",
    "mov     rdi, r14",
    "mov     rsi, r15",
    "setne   dl",
    "shl     edx, 0x5",
    "test    eax, eax",
    "setne   al",
    "movzx   eax, al",
    "shl     eax, 0x4",
    "or      edx, eax",
    "call    xstrmatch",
    "mov     r12d, eax",
    "cmp     rbx, r14",
    "je      0x78305",
    "lea     rdi, [rbx-0x1]",
    "mov     ecx, 0x1",
    "jmp     0x783b8",
    "mov     dword [rbp-0x44], 0x1",
    "mov     qword [rbp-0x60], 0x1",
    "jmp     0x78137",
    "mov     rdi, r15",
    "mov     byte [rbp-0x45], dl",
    "xor     r14d, r14d",
    "call    strlen",
    "movzx   edx, byte [rbp-0x45]",
    "mov     qword [rbp-0x60], rax",
    "lea     r12, [r15+rax]",
    "mov     dword [rbp-0x44], eax",
    "test    dl, dl",
    "jne     0x78137",
    "lea     r12, [r15+0x2]",
    "test    dl, dl",
    "je      0x78360",
    "mov     eax, dword [r13]",
    "xor     edx, edx",
    "mov     rsi, r15",
    "mov     rdi, rbx",
    "test    eax, eax",
    "setne   dl",
    "xor     r14d, r14d",
    "shl     edx, 0x4",
    "call    match_pattern_char",
    "test    eax, eax",
    "jne     0x784a8",
    "cmp     eax, 0x2",
    "je      0x78562",
    "mov     eax, dword [rbp-0x40]",
    "cmp     eax, 0x1",
    "je      0x78480",
    "cmp     r12d, 0x1",
    "jne     0x78110",
    "mov     rdi, r14",
    "call    free",
    "cmp     r12d, 0x1",
    "je      0x7824d",
    "sub     rax, 0x1",
    "cmp     byte [rax+0x1], 0x5c",
    "je      0x783b0",
    "mov     rdi, rbx",
    "xor     eax, eax",
    "call    sub_d4b60",
    "mov     r14d, eax",
    "jmp     0x78144",
    "mov     dword [rbp-0x44], 0x2",
    "mov     qword [rbp-0x60], 0x2",
    "jmp     0x78137",
    "movsxd  r12, r14d",
    "add     r12, r15",
    "jmp     0x7824d",
    "mov     r15, r12",
    "xor     r14d, r14d",
    "jmp     0x7843d",
    "test    eax, eax",
    "jne     0x7824d",
    "mov     r9d, dword [r13]",
    "xor     edx, edx",
    "mov     rsi, r15",
    "mov     rdi, rbx",
    "test    r9d, r9d",
    "setne   dl",
    "shl     edx, 0x4",
    "call    match_pattern_char",
    "test    eax, eax",
    "je      0x7824d",
    "cmp     eax, 0x2",
    "je      0x78408",
    "xor     ecx, 0x1",
    "cmp     rax, rdi",
    "je      0x783c2",
    "test    ecx, ecx",
    "je      0x780b0",
    "mov     eax, dword [rbp-0x44]",
    "cmp     r14d, eax",
    "jg      0x7824d",
    "movzx   ecx, byte [r12]",
    "mov     rax, qword [rbp-0x38]",
    "mov     byte [r12], 0x0",
    "xor     edx, edx",
    "mov     edi, dword [r13]",
    "mov     rsi, r15",
    "mov     r8d, dword [rax]",
    "mov     byte [rbp-0x40], cl",
    "test    edi, edi",
    "mov     rdi, rbx",
    "setne   dl",
    "xor     eax, eax",
    "shl     edx, 0x4",
    "test    r8d, r8d",
    "setne   al",
    "shl     eax, 0x5",
    "or      edx, eax",
    "call    xstrmatch",
    "movzx   ecx, byte [rbp-0x40]",
    "test    eax, eax",
    "mov     byte [r12], cl",
    "je      0x7822b",
    "jmp     0x7824d",
    "mov     rax, qword [rbp-0x38]",
    "mov     esi, dword [r13]",
    "xor     edx, edx",
    "mov     rdi, rbx",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "setne   dl",
    "xor     eax, eax",
    "shl     edx, 0x5",
    "test    esi, esi",
    "mov     rsi, r15",
    "setne   al",
    "shl     eax, 0x4",
    "or      edx, eax",
    "call    xstrmatch",
    "test    eax, eax",
    "je      0x7822b",
    "xor     r14d, r14d",
    "jmp     0x7816d",
    "cmp     r14d, 0xffffffff",
    "je      0x784ae",
    "mov     rsi, qword [rbp-0x60]",
    "mov     rax, r12",
    "movsxd  rdx, r14d",
    "mov     r9, r12",
    "sub     r9, rdx",
    "sub     rax, rsi",
    "cmp     r14d, 0xffffffff",
    "cmovne  rax, r9",
    "mov     r15, rax",
    "cmp     r12, rax",
    "jae     0x7843d",
    "test    eax, eax",
    "jne     0x7824d",
    "jmp     0x780a9",
    "mov     rax, qword [rbp-0x50]",
    "mov     qword [rax], r15",
    "mov     rax, qword [rbp-0x58]",
    "mov     qword [rax], r12",
    "mov     eax, 0x1",
    "jmp     0x7824f",
    "cmp     r14d, 0xffffffff",
    "je      0x784c0",
    "cmp     r14d, 0xffffffff",
    "je      0x78430",
    "cmp     r12, r15",
    "jb      0x7824d",
    "cmp     r12, r15",
    "jae     0x784cd",
    "jmp     0x7824d",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "sub     r12, 0x1",
    "cmp     r12, r15",
    "jb      0x7824d",
    "jmp     0x7824d",
    "add     r15, 0x1",
    "cmp     r12, r15",
    "jb      0x7824d",
    "jmp     0x7824d",
    "movsxd  rax, r14d",
    "mov     qword [rbp-0x60], rax",
    "jmp     0x7818d",
    "mov     eax, dword [r13]",
    "xor     edx, edx",
    "mov     rsi, r15",
    "mov     rdi, rbx",
    "test    eax, eax",
    "setne   dl",
    "shl     edx, 0x4",
    "call    match_pattern_char",
    "test    eax, eax",
    "je      0x78180",
    "add     r15, 0x1",
    "cmp     r12, r15",
    "jb      0x7824d",
    "cmp     r14d, 0xffffffff",
    "je      0x78528",
    "mov     rcx, r12",
    "jmp     0x781c5",
    "mov     rax, qword [rbp-0x60]",
    "lea     rcx, [r15+rax]",
    "cmp     r12, rcx",
    "jb      0x7824d",
    "cmp     rcx, r15",
    "jae     0x781df",
    "movzx   eax, byte [rcx]",
    "mov     byte [rcx], 0x0",
    "xor     edx, edx",
    "mov     rsi, r15",
    "mov     r11d, dword [r13]",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x40], rcx",
    "mov     byte [rbp-0x44], al",
    "mov     rax, qword [rbp-0x38]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "setne   dl",
    "xor     eax, eax",
    "shl     edx, 0x5",
    "test    r11d, r11d",
    "setne   al",
    "shl     eax, 0x4",
    "or      edx, eax",
    "call    xstrmatch",
    "mov     rcx, qword [rbp-0x40]",
    "test    eax, eax",
    "movzx   eax, byte [rbp-0x44]",
    "mov     byte [rcx], al",
    "jne     0x781d0",
    "jmp     0x78180",
    "cmp     r14d, 0xffffffff",
    "jne     0x78180",
    "mov     r12, rcx",
    "sub     rcx, 0x1",
    "cmp     rcx, r15",
    "jb      0x78180"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
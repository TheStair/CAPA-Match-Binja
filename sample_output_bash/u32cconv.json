{
  "address": "0xdde60",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rsi",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x50",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "cmp     rdi, 0x7fffffff",
    "ja      0xddec0",
    "mov     esi, dword [rel data_168da0]",
    "test    esi, esi",
    "jne     0xddef6",
    "mov     esi, edi",
    "mov     rdi, r12",
    "call    wctomb",
    "cmp     eax, 0xffffffff",
    "je      0xddec0",
    "mov     rsi, r12",
    "mov     rdi, rbx",
    "xor     eax, eax",
    "call    u32toutf8",
    "mov     edx, dword [rel data_168d94]",
    "test    edx, edx",
    "jne     0xddea0",
    "lea     rax, [rel locale_utf8locale]",
    "mov     qword [rel data_168d98], 0xffffffffffffffff",
    "mov     eax, dword [rax]",
    "mov     dword [rel data_168d94], eax",
    "test    eax, eax",
    "je      0xddf88",
    "mov     rdx, qword [rbp-0x28]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xde088",
    "mov     rdi, qword [rel data_168d98]",
    "cmp     rdi, 0xffffffffffffffff",
    "je      0xddea0",
    "lea     rdi, [rel data_12043a]  {\"LC_CTYPE\"}",
    "call    get_locale_var",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xde008",
    "mov     dword [rel data_168da0], 0x1",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x50",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "xor     r8d, r8d",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "xor     esi, esi",
    "cdqe    ",
    "lea     r13, [rbp-0x50]",
    "mov     qword [rbp-0x60], 0x19",
    "mov     qword [rbp-0x58], r13",
    "mov     qword [rbp-0x68], r12",
    "mov     qword [rbp-0x70], rax",
    "call    iconv",
    "mov     rdi, qword [rel data_168d98]",
    "lea     rcx, [rbp-0x58]",
    "lea     rdx, [rbp-0x70]",
    "lea     rsi, [rbp-0x68]",
    "lea     r8, [rbp-0x60]",
    "call    iconv",
    "cmp     rax, 0xffffffffffffffff",
    "je      0xddff0",
    "mov     ecx, 0x49",
    "lea     r14, [rel data_1691c0]",
    "mov     dword [rel data_1691c0], 0x49435341",
    "mov     word [rel data_1691c4], cx",
    "cmp     byte [rax], 0x0",
    "je      0xde008",
    "mov     rsi, r12",
    "mov     rdi, rbx",
    "xor     eax, eax",
    "call    u32tocesc",
    "jmp     0xddea0",
    "mov     rax, qword [rbp-0x58]",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "mov     byte [rax], 0x0",
    "call    strcpy",
    "mov     eax, dword [rbp-0x58]",
    "sub     eax, r13d",
    "jmp     0xddea0",
    "mov     rsi, r13",
    "lea     rdi, [rel data_12203d]  {\"ASCII\"}",
    "call    iconv_open",
    "mov     qword [rel data_168d98], rax",
    "jmp     0xddeec",
    "mov     esi, 0x2e",
    "mov     rdi, rax",
    "call    strrchr",
    "test    rax, rax",
    "je      0xde068",
    "lea     r14, [rel data_1691c0]",
    "mov     edx, 0x27",
    "mov     rsi, r13",
    "mov     rdi, r14",
    "call    strncpy",
    "mov     byte [rel data_1691e7], 0x0",
    "jmp     0xde025",
    "lea     r14, [rel data_1691c0]",
    "lea     rsi, [rax+0x1]",
    "mov     edx, 0x27",
    "mov     rdi, r14",
    "call    strncpy",
    "mov     esi, 0x40",
    "mov     rdi, r14",
    "mov     byte [rel data_1691e7], 0x0",
    "call    strchr",
    "test    rax, rax",
    "je      0xde025",
    "lea     r13, [rel data_122037]  {\"UTF-8\"}",
    "mov     rdi, r14",
    "mov     rsi, r13",
    "call    iconv_open",
    "mov     qword [rel data_168d98], rax",
    "cmp     rax, 0xffffffffffffffff",
    "jne     0xddeec",
    "mov     byte [rax], 0x0",
    "jmp     0xde025"
  ]
}
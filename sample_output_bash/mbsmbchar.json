{
  "address": "0xda050",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "contain loop",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x10",
    "lea     r14, [rel locale_utf8locale]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x30], 0x0",
    "mov     edx, dword [r14]",
    "test    edx, edx",
    "jne     0xda140",
    "movzx   eax, byte [rbx]",
    "test    al, al",
    "jne     0xda130",
    "call    __ctype_get_mb_cur_max",
    "movzx   ecx, byte [rbx]",
    "test    cl, cl",
    "je      0xda110",
    "and     eax, 0xc0",
    "cmp     eax, 0x80",
    "je      0xda150",
    "jmp     0xda110",
    "xor     eax, eax",
    "lea     r12, [rel is_basic_table]",
    "movsxd  r13, eax",
    "jmp     0xda0de",
    "mov     rax, rbx",
    "jmp     0xda112",
    "add     rbx, 0x1",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x10",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [r12+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "jne     0xda0d2",
    "mov     rdx, qword [rbp-0x28]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xda155",
    "movzx   ecx, byte [rbx+0x1]",
    "add     rbx, 0x1",
    "test    cl, cl",
    "je      0xda110",
    "mov     eax, dword [r14]",
    "test    eax, eax",
    "jne     0xda0b0",
    "mov     rsi, r13",
    "mov     rdi, rbx",
    "call    utf8_mblen",
    "cdqe    ",
    "test    rax, rax",
    "je      0xda110",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x30]",
    "mov     rdx, r13",
    "mov     rsi, rbx",
    "call    mbrtowc",
    "test    rax, rax",
    "jne     0xda0c2",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0xda0d2",
    "nop     dword [rax]",
    "cmp     rax, 0x1",
    "jne     0xda150"
  ]
}
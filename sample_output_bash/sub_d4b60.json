{
  "address": "0xd4b60",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "movzx   eax, byte [rdi]",
    "test    al, al",
    "je      0xd4dd7",
    "xor     eax, eax",
    "retn    ",
    "push    rbp",
    "lea     rdx, [rdi+0x1]",
    "xor     r11d, r11d",
    "xor     r10d, r10d",
    "xor     r9d, r9d",
    "mov     rbp, rsp",
    "push    r12",
    "lea     r12, [rel jump_table_138560]",
    "push    rbx",
    "xor     ebx, ebx",
    "nop     dword [rax]",
    "cmp     al, 0x5b",
    "je      0xd4c00",
    "cmp     al, 0x20",
    "jle     0xd4bba",
    "movzx   eax, byte [rdi+0x1]",
    "lea     rdx, [rdi+0x2]",
    "mov     r8d, 0x1",
    "jmp     0xd4c3c",
    "cmp     al, 0x5c",
    "jne     0xd4bba",
    "{Case 0x1-0x8, 0xb-0x1d}",
    "movzx   eax, byte [rdx]",
    "mov     rdi, rdx",
    "add     r9d, 0x1",
    "add     rdx, 0x1",
    "sub     eax, 0x21",
    "cmp     al, 0x1f",
    "ja      0xd4bba",
    "test    al, al",
    "je      0xd4d90",
    "add     r9d, 0x1",
    "cmp     byte [rdi+0x1], 0x0",
    "je      0xd4bcc",
    "cmp     al, 0x40",
    "jg      0xd4bd8",
    "pop     rbx",
    "mov     eax, r9d",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "movzx   eax, al",
    "movsxd  rax, dword [r12+rax*4]",
    "add     rax, r12",
    "jmp     rax",
    "movzx   eax, byte [rdx-0x1]",
    "lea     rdi, [rdx-0x1]",
    "add     r9d, r8d",
    "jmp     0xd4bc8",
    "movzx   ecx, byte [rdx]",
    "lea     rsi, [rdx+0x1]",
    "lea     edi, [r8+0x1]",
    "cmp     al, 0x5c",
    "jne     0xd4c10  {\"<[tt<:\"}",
    "movzx   eax, byte [rdi+0x2]",
    "lea     rdx, [rdi+0x3]",
    "add     rdi, 0x2",
    "jmp     0xd4bc8",
    "{Case 0x0, 0xa, 0x1e-0x1f}",
    "cmp     byte [rdi+0x1], 0x28",
    "je      0xd4dab",
    "{Case 0x9}",
    "mov     r9d, 0xffffffff",
    "pop     rbx",
    "pop     r12",
    "mov     eax, r9d",
    "pop     rbp",
    "retn    ",
    "test    al, al",
    "jne     0xd4b90",
    "cmp     al, 0x5b",
    "je      0xd4c88",
    "test    cl, cl",
    "je      0xd4da0",
    "cmp     cl, 0x3a",
    "je      0xd4d20",
    "cmp     al, 0x3a",
    "jne     0xd4cc0",
    "add     r9d, edi",
    "pop     rbx",
    "pop     r12",
    "mov     eax, r9d",
    "pop     rbp",
    "retn    ",
    "movzx   eax, byte [rdx+0x1]",
    "test    al, al",
    "je      0xd4da0",
    "movzx   eax, byte [rdx+0x1]",
    "mov     r10d, 0x1",
    "jmp     0xd4c67",
    "cmp     cl, 0x2e",
    "je      0xd4d40",
    "cmp     al, 0x2e",
    "jne     0xd4ce0",
    "test    r10d, r10d",
    "je      0xd4cc0",
    "lea     rdx, [rsi+0x1]",
    "cmp     al, 0x5d",
    "jne     0xd4c39",
    "movzx   eax, byte [rdx+0x1]",
    "cmp     al, 0x5d",
    "je      0xd4d70",
    "mov     eax, ecx",
    "mov     rsi, rdx",
    "cmp     cl, 0x3d",
    "jne     0xd4c67",
    "cmp     al, 0x3d",
    "jne     0xd4dda",
    "test    ebx, ebx",
    "je      0xd4ce0",
    "cmp     cl, 0x5d",
    "je      0xd4d10",
    "mov     r8d, edi",
    "mov     rdi, rdx",
    "movzx   eax, byte [rsi+0x1]",
    "add     r9d, 0x1",
    "lea     rdx, [rsi+0x2]",
    "jmp     0xd4bc8",
    "movzx   eax, byte [rdx+0x2]",
    "lea     rsi, [rdx+0x2]",
    "lea     edi, [r8+0x2]",
    "mov     ebx, 0x1",
    "jmp     0xd4c67",
    "add     rdx, 0x2",
    "mov     ebx, 0x1",
    "jmp     0xd4c39",
    "movzx   eax, byte [rdx+0x1]",
    "cmp     al, 0x5d",
    "je      0xd4dc0",
    "mov     eax, ecx",
    "mov     rsi, rdx",
    "jmp     0xd4c67",
    "test    r11d, r11d",
    "je      0xd4dda",
    "cmp     cl, 0x5d",
    "je      0xd4d30",
    "movzx   eax, byte [rdx+0x1]",
    "xor     r10d, r10d",
    "jmp     0xd4c67",
    "mov     rdx, rsi",
    "mov     eax, ecx",
    "mov     r10d, 0x1",
    "movzx   eax, byte [rdx+0x2]",
    "add     rsi, 0x2",
    "lea     edi, [r8+0x2]",
    "mov     r11d, 0x1",
    "jmp     0xd4c67",
    "add     rdx, 0x2",
    "mov     r11d, 0x1",
    "jmp     0xd4c39",
    "cmp     cl, 0x5d",
    "je      0xd4d60",
    "movzx   eax, byte [rdx+0x1]",
    "xor     ebx, ebx",
    "jmp     0xd4c67",
    "mov     rdx, rsi",
    "mov     eax, ecx",
    "mov     ebx, 0x1",
    "jmp     0xd4c39",
    "movzx   eax, byte [rdx+0x1]",
    "xor     r11d, r11d",
    "jmp     0xd4c67",
    "mov     rdx, rsi",
    "mov     eax, ecx",
    "mov     r11d, 0x1",
    "jmp     0xd4c39"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
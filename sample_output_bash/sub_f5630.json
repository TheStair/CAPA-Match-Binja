{
  "address": "0xf5630",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "create or open file",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "read file on Linux",
    "contain loop",
    "get file attributes",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "push    r14 {__saved_r14}",
    "push    r13 {__saved_r13}",
    "mov     r13, rdi",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0xc8",
    "mov     dword [rbp-0xd4 {var_dc}], esi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38 {var_40}], rax",
    "xor     eax, eax  {0x0}",
    "mov     qword [rel data_16a860], rdi",
    "mov     dword [rel data_16a858], esi",
    "call    tilde_expand",
    "xor     esi, esi  {0x0}",
    "mov     edx, 0x1b6",
    "mov     r14, rax",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    open",
    "test    eax, eax",
    "js      0xf5880",
    "mov     rdi, r14",
    "call    free",
    "lea     r12, [rel _rl_caught_signal]",
    "mov     eax, dword [r12]  {_rl_caught_signal}",
    "test    eax, eax",
    "jne     0xf58ec",
    "lea     rsi, [rbp-0xd0 {var_d8}]",
    "mov     edi, eax",
    "mov     r12d, eax",
    "call    fstat",
    "test    eax, eax",
    "js      0xf5878",
    "mov     edi, dword [r12]  {_rl_caught_signal}",
    "call    _rl_signal_handler",
    "jmp     0xf5897",
    "call    __errno_location",
    "mov     rbx, rax",
    "mov     edi, r12d",
    "call    close",
    "mov     rdx, qword [rbp-0xa0 {nbytes}]",
    "cmp     rdx, 0xffffffffffffffff",
    "je      0xf58bf",
    "mov     rdx, qword [rbp-0x38 {var_40}]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xf5904",
    "mov     edi, r12d",
    "call    close",
    "call    __errno_location",
    "mov     rdi, r14",
    "mov     dword [rax], 0x1b",
    "mov     rbx, rax",
    "call    free",
    "lea     r12, [rel _rl_caught_signal]",
    "mov     eax, dword [r12]  {_rl_caught_signal}",
    "test    eax, eax",
    "je      0xf589f",
    "lea     r15, [rdx+0x1]",
    "mov     qword [rbp-0xe0 {var_e8_1}], rdx",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rdx, qword [rbp-0xe0 {var_e8_1}]",
    "test    rax, rax",
    "mov     rbx, rax",
    "je      0xf591f",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xc8",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "mov     eax, dword [rbx]",
    "jmp     0xf5845",
    "mov     rsi, r15",
    "xor     eax, eax  {0x0}",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, rax",
    "mov     edi, r12d",
    "call    read",
    "mov     edi, r12d",
    "mov     dword [rbp-0xe0 {var_e8_1}], eax",
    "mov     qword [rbp-0xe8 {var_f0_1}], rax",
    "call    close",
    "mov     rdx, qword [rbp-0xe8 {var_f0_1}]",
    "test    edx, edx",
    "js      0xf58f7",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0xf5880",
    "lea     r12, [rel _rl_caught_signal]",
    "mov     eax, dword [r12]  {_rl_caught_signal}",
    "test    eax, eax",
    "jne     0xf58a3",
    "mov     edi, dword [r12]  {_rl_caught_signal}",
    "call    _rl_signal_handler",
    "jmp     0xf571c",
    "movsxd  rcx, dword [rbp-0xe0 {var_e8_1}]",
    "mov     rdi, r14",
    "lea     r15, [rbx+rcx]",
    "mov     byte [r15], 0x0",
    "call    free",
    "mov     eax, dword [r12]  {_rl_caught_signal}",
    "test    eax, eax",
    "jne     0xf58b1",
    "mov     edi, dword [r12]  {_rl_caught_signal}",
    "call    _rl_signal_handler",
    "jmp     0xf573f",
    "test    rbx, rbx",
    "je      0xf5897",
    "mov     eax, dword [rbp-0xd4 {var_dc}]",
    "test    eax, eax",
    "jne     0xf579d",
    "mov     dword [rel data_16a854], 0x1",
    "mov     r13, rbx",
    "mov     dword [rel data_16a850], 0x1",
    "cmp     rbx, r15",
    "jae     0xf5831",
    "mov     rdi, qword [rel data_16a868]",
    "cmp     rdi, r13",
    "je      0xf579d",
    "mov     rdi, rbx",
    "call    free",
    "xor     eax, eax  {0x0}",
    "mov     dword [rel data_16a854], 0x0",
    "nop     dword [rax]",
    "test    rdi, rdi",
    "je      0xf5768",
    "cmp     byte [rax], 0xa",
    "jne     0xf57d0",
    "jmp     0xf57e6",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xf5909",
    "call    free",
    "add     rax, 0x1",
    "add     r12d, 0x1",
    "cmp     r15, rax",
    "je      0xf5870",
    "mov     byte [rax], 0x0",
    "movzx   eax, byte [r13]",
    "test    al, al",
    "jne     0xf5809",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, r13",
    "mov     rdi, r14",
    "call    __strcpy_chk",
    "mov     qword [rel data_16a868], r14",
    "mov     rax, r15",
    "jmp     0xf57e6",
    "cmp     al, 0x20",
    "je      0xf57f8",
    "jmp     0xf581d",
    "movzx   eax, byte [r13+0x1]",
    "add     r13, 0x1",
    "sub     r12d, 0x1",
    "test    al, al",
    "je      0xf581d",
    "cmp     al, 0x9",
    "je      0xf57f8",
    "movsxd  r12, r12d",
    "add     dword [rel data_16a850], 0x1",
    "lea     r13, [r13+r12+0x1]",
    "cmp     r13, r15",
    "jb      0xf57c0",
    "cmp     al, 0x23",
    "je      0xf581d",
    "mov     rax, r13",
    "xor     r12d, r12d  {0x0}",
    "cmp     r13, r15",
    "jne     0xf57e1",
    "mov     rdi, r13",
    "call    rl_parse_and_bind"
  ]
}
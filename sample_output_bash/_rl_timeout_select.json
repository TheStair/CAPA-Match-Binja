{
  "address": "0xfc4c0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, r9",
    "push    r14",
    "mov     r14, rcx",
    "push    r13",
    "mov     r13, rdx",
    "push    r12",
    "mov     r12, rsi",
    "lea     rsi, [rbp-0x58]",
    "push    rbx",
    "mov     rbx, r8",
    "sub     rsp, 0x48",
    "mov     dword [rbp-0x64], edi",
    "lea     rdi, [rbp-0x54]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    rl_timeout_remaining",
    "mov     ecx, dword [rbp-0x54]",
    "mov     edx, dword [rbp-0x58]",
    "test    eax, eax",
    "je      0xfc5a0",
    "lea     rax, [rel rl_timeout_event_hook]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xfc5b1",
    "cmp     eax, 0x1",
    "je      0xfc570",
    "lea     rax, [rel rl_readline_state]",
    "or      qword [rax], 0x4000000",
    "call    _rl_abort_internal",
    "{ Does not return }",
    "call    rax",
    "test    rbx, rbx",
    "jne     0xfc5c8",
    "test    rbx, rbx",
    "je      0xfc5e0",
    "mov     rsi, qword [rbx]",
    "cmp     rcx, rsi",
    "je      0xfc5f0",
    "imul    rdx, rdx, 0x3e8",
    "mov     edi, dword [rbp-0x64]",
    "mov     r9, r15",
    "mov     rsi, r12",
    "mov     qword [rbp-0x50], rcx",
    "lea     r8, [rbp-0x50]",
    "mov     rcx, r14",
    "mov     qword [rbp-0x48], rdx",
    "mov     rdx, r13",
    "call    pselect",
    "test    eax, eax",
    "jne     0xfc54d",
    "mov     r9, r15",
    "xor     r8d, r8d",
    "jmp     0xfc53c",
    "mov     rsi, qword [rbx]",
    "mov     rax, qword [rbx+0x8]",
    "cmp     rdx, rax",
    "jl      0xfc575",
    "jl      0xfc575",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xfc602",
    "mov     edi, dword [rbp-0x64]",
    "mov     rcx, r14",
    "mov     rdx, r13",
    "mov     rsi, r12",
    "call    pselect",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x48",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "jmp     0xfc526",
    "jmp     0xfc522",
    "imul    rax, rax, 0x3e8",
    "mov     qword [rbp-0x50], rsi",
    "mov     r9, r15",
    "lea     r8, [rbp-0x50]",
    "mov     qword [rbp-0x48], rax",
    "mov     rax, qword [rbx+0x8]"
  ]
}
{
  "address": "0xf2b70",
  "rules": [
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae",
    "empty recycle bin quietly/31390d7f6c22447cbafb7a06099c11cf",
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "allocate or change RWX memory/f8438e12365d41b4912976c2d37f5e13",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "encrypt data using Curve25519/71854cb5ec3d414da844548a1a695b22"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rdi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    esi, esi",
    "js      0xf2c40",
    "mov     eax, dword [rdi+0x3c]",
    "or      dword [rdi+0x4], 0x4",
    "mov     dword [rdi+0x60], eax",
    "mov     edi, esi",
    "mov     ebx, esi",
    "call    _rl_add_executing_keyseq",
    "lea     rax, [rel _rl_enable_bracketed_paste]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0xf2bbe",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xf3ca2",
    "movsxd  r12, ebx",
    "shl     r12, 0x4",
    "cmp     ebx, 0x1b",
    "je      0xf2e9e",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r13d, dword [r14+0x6c]",
    "mov     rdi, qword [r14+0xa0]",
    "mov     qword [rbp-0x48], rcx",
    "mov     esi, r13d",
    "call    strchr",
    "mov     rcx, qword [rbp-0x48]",
    "test    rax, rax",
    "je      0xf36a5",
    "test    al, al",
    "je      0xf2c51",
    "mov     rdi, qword [r14+0xa0]",
    "mov     esi, 0x1b",
    "call    strchr",
    "test    rax, rax",
    "je      0xf2ec2",
    "lea     rax, [rel _rl_keyseq_timeout]",
    "mov     rdx, qword [r15+0x8]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jle     0xf371a",
    "mov     eax, dword [r14+0x4]",
    "xor     r12d, r12d",
    "jmp     0xf2be8",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xf2c6d",
    "mov     r13d, dword [r14+0x6c]",
    "mov     eax, dword [r14+0x4]",
    "xor     r12d, r12d",
    "mov     r12d, 0x1b0",
    "mov     ebx, 0x1b",
    "jmp     0xf2bc5",
    "call    _rl_nchars_available",
    "cmp     eax, 0x5",
    "jg      0xf348f",
    "or      dword [r14+0x4], 0x8",
    "mov     qword [r14+0x58], rcx",
    "mov     qword [r14+0x50], rdx",
    "mov     dword [r14+0x68], ebx",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xf30ed",
    "lea     rsi, [rel rl_readline_state]",
    "test    qword [rsi], 0xa0000",
    "jne     0xf371a",
    "test    al, 0x8",
    "jne     0xf2dc4",
    "mov     r13, qword [r14+0x50]",
    "mov     r12, qword [r13+r12+0x8]",
    "cmp     r12, qword [rel data_157f28]",
    "je      0xf38ea",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0xf345f",
    "mov     rdx, qword [r14+0x58]",
    "and     eax, 0xfffffff7",
    "mov     dword [r14+0x4], eax",
    "mov     qword [r14+0x50], rdx",
    "test    r13d, r13d",
    "jle     0xf2d21",
    "test    r13d, r13d",
    "jle     0xf2d21",
    "mov     rcx, qword [r14+0x50]",
    "lea     r15, [rcx+r12]",
    "movzx   eax, byte [r15]",
    "cmp     al, 0x1",
    "je      0xf2e6e",
    "mov     edi, 0x1b",
    "call    _rl_read_bracketed_paste_prefix",
    "cmp     eax, 0x1",
    "je      0xf2f56",
    "mov     eax, 0x1",
    "jmp     0xf2c1d",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "jne     0xf30ed",
    "mov     edi, dword [rel data_16a508]",
    "cmp     dword [rel data_16a50c], edi",
    "jne     0xf371a",
    "call    __ctype_b_loc",
    "movzx   r15d, bl",
    "mov     rax, qword [rax]",
    "test    byte [rax+r15*2+0x1], 0x1",
    "je      0xf2c83",
    "mov     eax, dword [r14+0x4]",
    "mov     edx, eax",
    "or      edx, 0xfffffffe",
    "cmp     r12, qword [rel data_157e80]",
    "je      0xf2d0a",
    "cmp     byte [r14+0x71], 0x0",
    "je      0xf2c6d",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xf2d8a",
    "mov     eax, dword [r14+0x68]",
    "cmp     eax, 0x1f",
    "jg      0xf2ed2",
    "mov     rdi, qword [r14+0xa0]",
    "mov     esi, r13d",
    "call    strchr",
    "test    rax, rax",
    "je      0xf2d21",
    "mov     dword [r14+0x6c], 0xfffffff9",
    "mov     eax, dword [rel data_16a508]",
    "cmp     dword [rel data_16a50c], eax",
    "jne     0xf3aaf",
    "cmp     byte [r14+0x71], 0x0",
    "jne     0xf3b38",
    "cmp     qword [rdx+0x1008], 0x0",
    "je      0xf371a",
    "call    __ctype_tolower_loc",
    "mov     rax, qword [rax]",
    "movsxd  rax, dword [rax+r15*4]",
    "shl     rax, 0x4",
    "mov     r12, qword [r13+rax+0x8]",
    "jmp     0xf2c83",
    "mov     dword [r14+0x6c], edx",
    "test    al, 0x8",
    "je      0xf2d21",
    "cmp     r12, qword [rel data_157e30]",
    "je      0xf2d03",
    "lea     r12, [r14+0x70]",
    "mov     rdi, r12",
    "call    strlen",
    "mov     rdx, qword [r14+0x50]",
    "mov     rdi, r12",
    "xor     ecx, ecx",
    "mov     rsi, rax",
    "call    sub_ee140",
    "mov     r12, rax",
    "jmp     0xf2c83",
    "mov     eax, dword [r14+0x6c]",
    "test    eax, eax",
    "js      0xf2d4f",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xf2d8a",
    "lea     ecx, [rax-0x7f]",
    "cmp     ecx, 0x80",
    "ja      0xf2dfe",
    "test    al, 0x80",
    "jne     0xf2df6",
    "cmp     r13d, 0x1b",
    "je      0xf2f19",
    "mov     ecx, dword [r14+0x10]",
    "mov     eax, dword [r14+0x4]",
    "mov     dword [rbp-0x54], ecx",
    "jmp     0xf2fdd",
    "cmp     byte [rax], 0x0",
    "je      0xf2fca",
    "call    rl_read_key",
    "mov     dword [r14+0x6c], eax",
    "mov     ebx, eax",
    "jmp     0xf34b8",
    "mov     ebx, dword [r14+0x6c]",
    "movdqu  xmm1, xmmword [r14+0x70]",
    "movups  xmmword [r14+0x80], xmm1",
    "jmp     0xf30ed",
    "mov     byte [r14+0x80], bl",
    "mov     byte [r14+0x81], 0x0",
    "jmp     0xf30ed",
    "imul    eax, eax, 0x3e8",
    "mov     r13d, dword [rel data_160314]",
    "mov     dword [rel data_160314], eax",
    "call    _rl_input_available",
    "test    r13d, r13d",
    "js      0xf3702",
    "mov     rdx, qword [r14+0x58]",
    "and     eax, 0xfffffff7",
    "mov     dword [r14+0x4], eax",
    "mov     qword [r14+0x50], rdx",
    "mov     edx, eax",
    "and     edx, 0x1",
    "not     edx",
    "cmp     r12, qword [rel data_157e40]",
    "je      0xf39cc",
    "lea     rax, [rel rl_key_sequence_length]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel rl_executing_keyseq]",
    "mov     rax, qword [rax]",
    "mov     byte [rax], 0x0",
    "mov     edx, dword [r14+0x6c]",
    "lea     eax, [rdx+0x7]",
    "cmp     edx, 0xfffffff9",
    "jb      0xf376a",
    "cmp     eax, 0x1f",
    "jle     0xf2f0b",
    "mov     eax, dword [r14+0x6c]",
    "test    eax, eax",
    "js      0xf2d4f",
    "movsxd  rcx, eax",
    "shl     rcx, 0x4",
    "cmp     byte [rdx+rcx], 0x1",
    "je      0xf3870",
    "mov     edi, r13d",
    "call    rl_stuff_char",
    "lea     rax, [rel rl_pending_input]",
    "mov     edx, dword [r14+0x68]",
    "mov     dword [rax], edx",
    "lea     rax, [rel rl_readline_state]",
    "or      qword [rax], 0x20000",
    "xor     eax, eax",
    "jmp     0xf2c1d",
    "test    eax, eax",
    "jle     0xf2bf9",
    "cmp     eax, 0x7",
    "jne     0xf2ee1",
    "mov     eax, dword [rel data_16a508]",
    "cmp     dword [rel data_16a50c], eax",
    "jne     0xf2f34",
    "xor     eax, eax",
    "mov     edi, dword [rbp-0x54]",
    "and     eax, 0xfffffff9",
    "mov     dword [rbp-0x58], eax",
    "mov     dword [r14+0x4], eax",
    "test    edi, edi",
    "je      0xf3623",
    "mov     rdi, r12",
    "call    free",
    "mov     ecx, dword [r14+0x10]",
    "mov     eax, dword [r14+0x4]",
    "mov     dword [rbp-0x54], ecx",
    "lea     rax, [rel _rl_enable_active_region]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "jne     0xf3b02",
    "test    ebx, ebx",
    "js      0xf2bdd",
    "jmp     0xf2bbe",
    "mov     rcx, qword [r14+0x50]",
    "lea     rdx, [rcx+r12]",
    "test    eax, eax",
    "jne     0xf3716",
    "mov     dword [rel data_160314], r13d",
    "mov     edx, 0xfffffffd",
    "jmp     0xf2d0a",
    "cmp     ebx, 0x7",
    "je      0xf3937",
    "cmp     byte [r14+0x70], 0x0",
    "mov     r12d, 0x1",
    "je      0xf3797",
    "lea     rdx, [rel jump_table_138b10]",
    "movsxd  rax, dword [rdx+rax*4]",
    "add     rax, rdx",
    "jmp     rax",
    "cmp     eax, 0x7",
    "je      0xf2d4f",
    "lea     edx, [rax-0x7f]",
    "cmp     edx, 0x80",
    "ja      0xf2d4f",
    "cmp     byte [r14+0x70], 0x0",
    "je      0xf2d4f",
    "cmp     r12, qword [rel data_157e68]",
    "je      0xf3882",
    "test    r12, r12",
    "je      0xf2bf9",
    "lea     rax, [rel rl_pending_input]",
    "mov     dword [rax], 0x1b",
    "lea     rax, [rel rl_readline_state]",
    "or      qword [rax], 0x20000",
    "xor     eax, eax",
    "jmp     0xf2c1d",
    "call    _rl_input_available",
    "test    eax, eax",
    "je      0xf2c1b",
    "mov     eax, dword [rbp-0x58]",
    "or      eax, 0x4",
    "mov     dword [r14+0x4], eax",
    "lea     rax, [rel _rl_keymap]",
    "movq    xmm0, qword [rax]",
    "punpcklqdq xmm0, xmm0",
    "jmp     0xf358d",
    "mov     eax, dword [r14+0x98]",
    "mov     ecx, dword [rbp-0x54]",
    "mov     r15d, dword [rbp-0x58]",
    "mov     ebx, dword [r14+0x9c]",
    "sub     eax, ecx",
    "mov     dword [rbp-0x50], eax",
    "and     r15d, 0x1",
    "je      0xf3039",
    "lea     rax, [rel _rl_keep_mark_active]",
    "mov     dword [rel data_169190], 0x1",
    "add     dword [rax], 0x1",
    "jmp     0xf2f8b",
    "movsxd  rax, dword [r14+0x10]",
    "mov     rdx, qword [rbp-0x40]",
    "movsxd  rsi, dword [r14+0x14]",
    "mov     rbx, qword [r14+0x8]",
    "lea     rdi, [rax+rdx+0x1]",
    "cmp     rdi, rsi",
    "jae     0xf3ac9",
    "mov     rdx, qword [rdx+0x8]",
    "movzx   eax, byte [rdx]",
    "jmp     0xf2bd9",
    "mov     edx, 0xfffffffc",
    "jmp     0xf2d0a",
    "cmp     r12, qword [rel data_157f98]",
    "je      0xf3937",
    "mov     eax, dword [r14+0x10]",
    "mov     ebx, dword [r14+0x14]",
    "add     eax, r12d",
    "add     eax, 0x1",
    "cmp     eax, ebx",
    "jge     0xf3a04",
    "cmp     byte [r14+0x71], 0x0",
    "je      0xf3797",
    "{Case 0x0}",
    "lea     rdi, [rbp-0x40]",
    "call    _rl_bracketed_text",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xf33a8",
    "{Case 0x6}",
    "mov     eax, dword [r14+0x10]",
    "mov     dword [rbp-0x54], eax",
    "test    eax, eax",
    "jne     0xf398a",
    "{Case 0x5}",
    "mov     edx, dword [r14+0x64]",
    "mov     eax, edx",
    "neg     eax",
    "mov     dword [r14+0x64], eax",
    "mov     eax, dword [r14+0x10]",
    "mov     dword [rbp-0x54], eax",
    "mov     eax, dword [r14+0x4]",
    "mov     ecx, eax",
    "and     eax, 0xfffffffe",
    "or      ecx, 0x1",
    "test    edx, edx",
    "cmovg   eax, ecx",
    "jmp     0xf2fdd",
    "{Case 0x4}",
    "mov     eax, dword [r14+0x10]",
    "test    eax, eax",
    "jne     0xf3954",
    "{Case 0x3}",
    "movsxd  rdx, dword [r14+0x38]",
    "mov     rax, qword [r14+0x18]",
    "xor     esi, esi",
    "mov     rdi, qword [rax+rdx*8]",
    "call    rl_replace_line",
    "mov     eax, dword [r14+0x30]",
    "lea     rbx, [rel rl_point]",
    "mov     dword [rel data_169190], 0x0",
    "lea     r12, [rel rl_mark]",
    "mov     dword [rbx], eax",
    "mov     eax, dword [r14+0x34]",
    "mov     dword [r12], eax",
    "call    rl_restore_prompt",
    "lea     rax, [rel rl_prompt]",
    "mov     rdx, qword [rax]",
    "lea     rax, [rel rl_display_prompt]",
    "mov     qword [rax], rdx",
    "mov     eax, dword [rel data_16a4b0]",
    "test    eax, eax",
    "jne     0xf3a42",
    "{Case 0x2}",
    "lea     rax, [rel rl_point]",
    "lea     r13, [rel rl_end]",
    "mov     r15d, dword [rax]",
    "add     r15d, dword [r14+0x10]",
    "cmp     dword [r13], r15d",
    "jle     0xf3690",
    "{Case 0x1}",
    "lea     rdx, [rel rl_point]",
    "lea     r13, [rel rl_end]",
    "movsxd  rax, dword [r14+0x10]",
    "mov     r15d, dword [rdx]",
    "mov     edx, dword [r13]",
    "add     r15d, eax",
    "cmp     edx, r15d",
    "jle     0xf3690",
    "jmp     0xf2da6",
    "lea     rdx, [rel rl_pending_input]",
    "mov     dword [rdx], eax",
    "lea     rax, [rel rl_readline_state]",
    "or      qword [rax], 0x20000",
    "xor     eax, eax",
    "jmp     0xf2c1d",
    "cmp     byte [r14+0x71], 0x0",
    "je      0xf2d92",
    "lea     rdx, [rel rl_pending_input]",
    "mov     dword [r14+0x6c], eax",
    "mov     dword [rdx], r13d",
    "lea     rdx, [rel rl_readline_state]",
    "or      qword [rdx], 0x20000",
    "call    __ctype_get_mb_cur_max",
    "mov     r13d, dword [r14+0x6c]",
    "cmp     rax, 0x1",
    "jbe     0xf38d1",
    "test    r12, r12",
    "jne     0xf2e25",
    "cmp     r12, qword [rel data_157e68]",
    "je      0xf2bf9",
    "movups  xmmword [r14+0x50], xmm0",
    "call    rl_ding",
    "mov     eax, dword [r14+0x3c]",
    "mov     esi, dword [r14+0x4]",
    "mov     dword [rel data_169190], 0x0",
    "mov     rdi, qword [r14+0x8]",
    "mov     dword [r14+0x60], eax",
    "call    sub_119640",
    "jmp     0xf30ed",
    "mov     eax, dword [rbp-0x50]",
    "xor     r15d, r15d",
    "cmp     ebx, eax",
    "jg      0xf3618",
    "test    ebx, ebx",
    "jns     0xf3047",
    "lea     r13d, [rsi+rdx+0x2]",
    "mov     dword [r14+0x14], r13d",
    "movsxd  r13, r13d",
    "test    rbx, rbx",
    "je      0xf3b1b",
    "lea     rdi, [rbx+rax]",
    "mov     rsi, r12",
    "call    memcpy",
    "mov     eax, dword [r14+0x10]",
    "mov     rdx, qword [r14+0x8]",
    "add     eax, dword [rbp-0x40]",
    "mov     dword [r14+0x10], eax",
    "cdqe    ",
    "mov     byte [rdx+rax], 0x0",
    "cmp     ebx, 0x17",
    "je      0xf3a38",
    "mov     rdi, qword [r14+0x8]",
    "sub     ebx, 0xffffff80",
    "mov     dword [r14+0x14], ebx",
    "movsxd  rbx, ebx",
    "test    rdi, rdi",
    "je      0xf3bca",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xf391c",
    "cmp     byte [r14+0x72], 0x0",
    "mov     r12d, 0x2",
    "je      0xf3797",
    "mov     edx, dword [r14+0x4]",
    "mov     eax, dword [r14+0x9c]",
    "test    dl, 0x1",
    "je      0xf39d6",
    "mov     r15, qword [rel data_16a818]",
    "test    r15, r15",
    "je      0xf30ed",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xf3970",
    "call    rl_ding",
    "call    rl_restore_prompt",
    "mov     dword [rel data_16a4b0], 0x0",
    "jmp     0xf3234",
    "lea     rax, [rel rl_redisplay_function]",
    "call    qword [rax]",
    "lea     rax, [rel rl_end]",
    "mov     edx, dword [rbx]",
    "mov     eax, dword [rax]",
    "cmp     edx, eax",
    "jle     0xf3941",
    "call    rl_ding",
    "mov     ecx, dword [r14+0x10]",
    "mov     eax, dword [r14+0x4]",
    "mov     dword [rbp-0x54], ecx",
    "jmp     0xf2fdd",
    "lea     r12, [rel rl_line_buffer]",
    "mov     esi, r15d",
    "mov     rdi, qword [r12]",
    "call    _rl_char_value",
    "mov     edi, eax",
    "mov     ebx, eax",
    "call    iswalnum",
    "test    eax, eax",
    "jne     0xf32d1",
    "sub     edx, r15d",
    "mov     ecx, dword [r14+0x14]",
    "mov     rbx, qword [r14+0x8]",
    "lea     esi, [rax+rdx+0x2]",
    "cmp     esi, ecx",
    "jge     0xf3a56",
    "mov     dword [r14+0x68], 0x0",
    "jmp     0xf2bf0",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xf38d1",
    "lea     rax, [rel rl_key_sequence_length]",
    "lea     rdx, [rel rl_executing_keyseq]",
    "movsxd  rax, dword [rax]",
    "mov     rdx, qword [rdx]",
    "mov     byte [rdx+rax], 0x0",
    "lea     rax, [rel _rl_pending_command]",
    "mov     rdx, qword [r14+0x50]",
    "mov     dword [rax+0x8], 0x1",
    "mov     qword [rax], rdx",
    "mov     edx, dword [r14+0x6c]",
    "mov     qword [rax+0x10], r12",
    "mov     dword [rax+0xc], edx",
    "lea     rdx, [rel _rl_command_to_execute]",
    "mov     qword [rdx], rax",
    "xor     eax, eax",
    "jmp     0xf2c1d",
    "mov     r13d, dword [r14+0x64]",
    "xor     ebx, ebx",
    "jmp     0xf34d6",
    "mov     rdi, qword [r14+0x8]",
    "mov     r12, qword [r14+0x90]",
    "jmp     0xf38de",
    "mov     rdi, r13",
    "call    malloc",
    "mov     rbx, rax",
    "jmp     0xf3ae8",
    "mov     rdi, rbx",
    "mov     rsi, r13",
    "call    realloc",
    "mov     rbx, rax",
    "mov     edx, 0xfffffffb",
    "jmp     0xf2d0a",
    "cmp     r12, qword [rel data_157ed8]",
    "je      0xf3a38",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "jmp     0xf3a26",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r13, rax",
    "movsxd  rax, dword [r14+0x10]",
    "mov     ecx, dword [r14+0x6c]",
    "mov     rdx, qword [r14+0x8]",
    "lea     esi, [rax+0x1]",
    "mov     dword [r14+0x10], esi",
    "mov     byte [rdx+rax], cl",
    "jmp     0xf339c",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "jne     0xf391c",
    "lea     rdi, [r14+0x70]",
    "call    strlen",
    "mov     r12d, eax",
    "cmp     dword [r14+0x98], eax",
    "je      0xf3690",
    "test    eax, eax",
    "js      0xf39d6",
    "mov     r13d, dword [rel data_16a814]",
    "mov     rdi, qword [r14+0x8]",
    "lea     r12d, [r13+0x40]",
    "mov     dword [r14+0x14], r12d",
    "movsxd  r12, r12d",
    "test    rdi, rdi",
    "je      0xf3b28",
    "mov     eax, dword [r14+0x10]",
    "mov     rdx, qword [r14+0x8]",
    "sub     eax, 0x1",
    "mov     dword [r14+0x10], eax",
    "cdqe    ",
    "mov     byte [rdx+rax], 0x0",
    "jmp     0xf31b2",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xf3ba1",
    "mov     eax, dword [r14+0x4]",
    "and     eax, 0xfffffff9",
    "mov     dword [rbp-0x58], eax",
    "mov     dword [r14+0x4], eax",
    "jmp     0xf2ff2",
    "test    edx, edx",
    "jns     0xf3252",
    "mov     dword [rbx], eax",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xf32ed",
    "lea     rax, [rel _rl_allow_pathname_alphabetic_chars]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xf3690",
    "lea     eax, [rdx+rcx+0x2]",
    "mov     dword [r14+0x14], eax",
    "movsxd  r12, eax",
    "test    rbx, rbx",
    "je      0xf3bda",
    "lea     r12, [rel rl_line_buffer]",
    "lea     ecx, [rax+0x1]",
    "movsxd  rdx, r15d",
    "mov     dword [r14+0x10], ecx",
    "add     rdx, qword [r12]",
    "movzx   edx, byte [rdx]",
    "mov     byte [rbx+rax], dl",
    "lea     eax, [r15+0x1]",
    "movsxd  rdx, eax",
    "cmp     dword [r13], eax",
    "jle     0xf3443",
    "cmp     byte [r14+0x81], 0x0",
    "jne     0xf3ca7",
    "movsxd  rcx, dword [r14+0x60]",
    "movsxd  rax, r13d",
    "lea     rdi, [rax*8]",
    "lea     edx, [r13+rcx]",
    "add     rcx, rax",
    "mov     qword [rbp-0x60], rdi",
    "lea     r15, [rcx*8]",
    "jmp     0xf3557",
    "mov     r13d, dword [r14+0x64]",
    "add     ebx, r13d",
    "mov     dword [r14+0x9c], ebx",
    "js      0xf34c8",
    "movsxd  rdx, dword [rbp-0x54]",
    "mov     qword [rbp-0x48], rdi",
    "call    strncmp",
    "mov     rdi, qword [rbp-0x48]",
    "test    eax, eax",
    "jne     0xf3020",
    "mov     r13d, dword [r14+0x64]",
    "mov     ebx, r15d",
    "jmp     0xf34d6",
    "test    rbx, rbx",
    "je      0xf3c7c",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, qword [rbp-0x40]",
    "movsxd  rax, dword [r14+0x10]",
    "mov     qword [r14+0x8], rbx",
    "jmp     0xf2fa9",
    "cmp     r12, qword [rel data_157e98]",
    "je      0xf3abf",
    "test    r13, r13",
    "je      0xf3bfe",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r14+0x8], r13",
    "jmp     0xf37ad",
    "movsxd  rax, dword [r14+0x10]",
    "movzx   edx, byte [r14+0x70]",
    "test    dl, dl",
    "je      0xf3a98",
    "add     eax, 0x1",
    "jmp     0xf39a1",
    "sub     eax, 0x1",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rbx, rax",
    "jmp     0xf313c",
    "mov     rsi, r12",
    "call    realloc",
    "mov     rbx, rax",
    "mov     eax, dword [r14+0x10]",
    "mov     dword [rbp-0x54], eax",
    "test    eax, eax",
    "je      0xf3690",
    "mov     esi, dword [r14+0x10]",
    "mov     rdi, qword [r14+0x8]",
    "mov     edx, 0x1",
    "call    _rl_find_prev_mbchar_internal",
    "test    eax, eax",
    "js      0xf3bea",
    "mov     edx, dword [r12]",
    "cmp     eax, edx",
    "jge     0xf39b7",
    "mov     dword [rbx], 0x0",
    "jmp     0xf3252",
    "test    edx, edx",
    "jns     0xf2c4a",
    "mov     dword [r12], eax",
    "jmp     0xf2c4a",
    "lea     ebx, [r15+0x1]",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "je      0xf3b4b",
    "and     ebx, 0x7f",
    "lea     rdi, [rel data_122a74]  {\"/-_=~.#$\"}",
    "mov     esi, ebx",
    "call    strchr",
    "test    rax, rax",
    "je      0xf3690",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rbx, rax",
    "jmp     0xf3a78",
    "mov     rdi, rbx",
    "mov     rsi, r12",
    "call    realloc",
    "mov     rbx, rax",
    "mov     rbx, qword [r14+0x8]",
    "movsxd  rax, dword [r14+0x10]",
    "movsxd  rax, dword [r14+0x10]",
    "mov     rsi, qword [r12]",
    "mov     rcx, qword [r14+0x8]",
    "add     rsi, rdx",
    "lea     edi, [rax+0x1]",
    "add     rdx, 0x1",
    "mov     dword [r14+0x10], edi",
    "movzx   esi, byte [rsi]",
    "mov     byte [rcx+rax], sil",
    "cmp     dword [r13], edx",
    "jg      0xf341c",
    "movdqu  xmm2, xmmword [r14+0x80]",
    "movups  xmmword [r14+0x70], xmm2",
    "jmp     0xf38d1",
    "mov     byte [r14+0x70], r13b",
    "mov     byte [r14+0x71], 0x0",
    "mov     dword [r14+0x60], edx",
    "test    ebx, ebx",
    "jne     0xf3500",
    "mov     dword [r14+0x9c], 0x0",
    "mov     ebx, r15d",
    "test    r15d, r15d",
    "jne     0xf3052",
    "mov     eax, dword [rbp-0x58]",
    "movsxd  rdx, dword [r14+0x60]",
    "xor     esi, esi",
    "or      eax, 0x2",
    "mov     dword [r14+0x4], eax",
    "lea     rax, [rel _rl_keymap]",
    "movq    xmm0, qword [rax]",
    "mov     rax, qword [r14+0x18]",
    "mov     rdi, qword [rax+rdx*8]",
    "punpcklqdq xmm0, xmm0",
    "movups  xmmword [r14+0x50], xmm0",
    "mov     qword [r14+0x40], rdi",
    "call    rl_replace_line",
    "lea     rax, [rel _rl_enable_active_region]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "jne     0xf3830",
    "mov     edx, 0xfffffffa",
    "jmp     0xf2d0a",
    "cmp     ebx, 0x19",
    "je      0xf3abf",
    "movsxd  rax, dword [r14+0x10]",
    "mov     rcx, qword [r14+0x8]",
    "lea     esi, [rax+0x1]",
    "mov     dword [r14+0x10], esi",
    "mov     byte [rcx+rax], dl",
    "jmp     0xf339c",
    "cmp     byte [r14+0x71], 0x0",
    "je      0xf3a98",
    "and     edx, 0xfffffff9",
    "mov     dword [r14+0x9c], eax",
    "mov     dword [rbp-0x58], edx",
    "mov     dword [r14+0x4], edx",
    "jmp     0xf2ff2",
    "test    rbx, rbx",
    "je      0xf3c42",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r14+0x8], rbx",
    "mov     rdx, r12",
    "mov     rsi, r15",
    "mov     rdi, rbx",
    "call    __strcpy_chk",
    "mov     dword [r14+0x10], r13d",
    "mov     esi, dword [r14+0x4]",
    "mov     rdi, qword [r14+0x8]",
    "call    sub_119640",
    "mov     ecx, dword [r14+0x10]",
    "mov     eax, dword [r14+0x4]",
    "mov     dword [rbp-0x54], ecx",
    "jmp     0xf2fdd",
    "mov     rax, qword [r14+0x8]",
    "mov     dword [r14+0x10], 0x0",
    "mov     byte [rax], 0x0",
    "jmp     0xf31b2",
    "mov     rdx, qword [r14+0x8]",
    "mov     dword [r14+0x10], eax",
    "cdqe    ",
    "mov     byte [rdx+rax], 0x0",
    "jmp     0xf31b2",
    "mov     eax, 0xffffffff",
    "jmp     0xf2c1d",
    "mov     dword [r12], 0x0",
    "jmp     0xf2c4a",
    "movsxd  rax, dword [r14+0x10]",
    "mov     ecx, ebx",
    "mov     edx, dword [r14+0x14]",
    "sub     ecx, r15d",
    "mov     r8, qword [r14+0x8]",
    "lea     esi, [rcx+rax+0x2]",
    "cmp     esi, edx",
    "jge     0xf3b68",
    "mov     rdi, qword [r12]",
    "mov     esi, ebx",
    "call    _rl_char_value",
    "mov     edi, eax",
    "mov     dword [rbp-0x48], eax",
    "call    iswalnum",
    "test    eax, eax",
    "jne     0xf365c",
    "mov     rdi, qword [r12]",
    "mov     ecx, 0x1",
    "mov     edx, 0x1",
    "mov     esi, r15d",
    "call    sub_107460",
    "mov     ebx, eax",
    "jmp     0xf32f1",
    "test    rbx, rbx",
    "je      0xf3c66",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r14+0x8], rbx",
    "movsxd  rax, dword [r14+0x10]",
    "cmp     r15d, dword [r13]",
    "jl      0xf33f4",
    "test    edx, edx",
    "js      0xf3565",
    "cmp     edx, dword [r14+0x28]",
    "jne     0xf3504",
    "movsxd  rsi, ebx",
    "add     rsi, r12",
    "movzx   eax, byte [rsi]",
    "cmp     byte [rdi], al",
    "jne     0xf3020",
    "lea     rax, [rel _rl_keep_mark_active]",
    "lea     rdx, [rel rl_point]",
    "mov     dword [rel data_169190], 0x1",
    "add     dword [rax], 0x1",
    "mov     eax, dword [r14+0x9c]",
    "mov     dword [rdx], eax",
    "lea     rdx, [rel rl_point]",
    "mov     eax, dword [r14+0x9c]",
    "mov     dword [rdx], eax",
    "mov     edx, dword [rel data_169190]",
    "test    edx, edx",
    "jne     0xf3854",
    "cmp     r12, qword [rel data_157f08]",
    "je      0xf3c98",
    "lea     rax, [r14+0x70]",
    "movsxd  rcx, r12d",
    "add     rcx, rax",
    "test    r12d, r12d",
    "jle     0xf339c",
    "lea     r13d, [rcx+rdx+0x2]",
    "mov     dword [r14+0x14], r13d",
    "movsxd  r13, r13d",
    "test    r8, r8",
    "je      0xf3c32",
    "cmp     r15d, ebx",
    "jge     0xf33a0",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xf367a",
    "lea     rax, [rel _rl_allow_pathname_alphabetic_chars]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "jne     0xf3641",
    "cmp     dword [r13], ebx",
    "jle     0xf3327",
    "jmp     0xf344b",
    "mov     eax, dword [rbp-0x58]",
    "mov     ecx, dword [r14+0x9c]",
    "or      eax, 0x4",
    "mov     dword [r14+0x4], eax",
    "test    ecx, ecx",
    "js      0xf3820",
    "mov     rax, qword [r14+0x18]",
    "mov     dword [rbp-0x48], edx",
    "mov     rsi, qword [rax+r15]",
    "mov     qword [r14+0x90], rsi",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x50], rsi",
    "call    strlen",
    "mov     rdi, qword [r14+0x40]",
    "mov     edx, dword [rbp-0x48]",
    "mov     dword [r14+0x98], eax",
    "mov     r12, rax",
    "test    rdi, rdi",
    "je      0xf3543",
    "mov     eax, dword [r14+0x60]",
    "mov     esi, dword [r14+0x4]",
    "mov     rdi, qword [r14+0x8]",
    "mov     dword [r14+0x3c], eax",
    "call    sub_119640",
    "add     eax, edx",
    "lea     rdx, [rel rl_mark]",
    "mov     dword [rdx], eax",
    "jmp     0xf30d8",
    "mov     edx, dword [r14+0x10]",
    "test    edx, edx",
    "jle     0xf30d8",
    "mov     edx, 0xfffffff9",
    "jmp     0xf2d0a",
    "mov     r13d, dword [r14+0x6c]",
    "jmp     0xf2be8",
    "movsxd  rdx, dword [r14+0x10]",
    "mov     rsi, qword [r14+0x8]",
    "add     rax, 0x1",
    "lea     edi, [rdx+0x1]",
    "mov     dword [r14+0x10], edi",
    "movzx   edi, byte [rax-0x1]",
    "mov     byte [rsi+rdx], dil",
    "cmp     rcx, rax",
    "jne     0xf37fa",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r8, rax",
    "jmp     0xf3b8b",
    "mov     rdi, r8",
    "mov     rsi, r13",
    "call    realloc",
    "mov     r8, rax",
    "mov     rdx, qword [r14+0x8]",
    "mov     byte [rdx+rax], 0x0",
    "mov     rcx, qword [r12]",
    "movsxd  rdx, r15d",
    "lea     esi, [rax+0x1]",
    "mov     dword [r14+0x10], esi",
    "add     rcx, rdx",
    "movzx   ecx, byte [rcx]",
    "mov     byte [r8+rax], cl",
    "lea     eax, [r15+0x1]",
    "cmp     ebx, eax",
    "jle     0xf339c",
    "add     ebx, 0x1",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "je      0xf39e8",
    "mov     esi, dword [rbp-0x48]",
    "lea     rdi, [rel data_122a74]  {\"/-_=~.#$\"}",
    "and     esi, 0x7f",
    "call    strchr",
    "test    rax, rax",
    "je      0xf3327",
    "mov     byte [rbx+rax], 0x0",
    "mov     ecx, dword [r14+0x10]",
    "mov     eax, dword [r14+0x4]",
    "mov     dword [rbp-0x54], ecx",
    "jmp     0xf2fdd",
    "mov     dword [r14+0x9c], 0x0",
    "jmp     0xf357e",
    "lea     rax, [rel _rl_keymap]",
    "movq    xmm0, qword [rax]",
    "punpcklqdq xmm0, xmm0",
    "cmp     dword [rbp-0x54], r12d",
    "jle     0xf35e0",
    "mov     rsi, qword [rbp-0x50]",
    "movzx   eax, byte [rsi]",
    "cmp     byte [rdi], al",
    "je      0xf35c0",
    "jmp     0xf339c",
    "test    r8, r8",
    "je      0xf3c14",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x48], r8",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r14+0x8], r8",
    "movsxd  rax, dword [r14+0x10]",
    "jmp     0xf3344",
    "sub     ebx, r15d",
    "cdqe    ",
    "lea     ecx, [rbx-0x2]",
    "lea     r9, [rdx+rcx+0x2]",
    "jmp     0xf3327",
    "mov     rdi, qword [r12]",
    "mov     esi, ebx",
    "mov     ecx, 0x1",
    "mov     edx, 0x1",
    "call    sub_107460",
    "mov     ebx, eax",
    "jmp     0xf367d",
    "mov     eax, dword [rbp-0x54]",
    "mov     r15d, dword [rbp-0x58]",
    "sub     r12d, eax",
    "test    ebx, ebx",
    "cmovne  ebx, r12d",
    "mov     dword [rbp-0x50], r12d",
    "mov     dword [r14+0x9c], ebx",
    "and     r15d, 0x1",
    "jne     0xf3047",
    "mov     rax, qword [rbp-0x60]",
    "add     edx, r13d",
    "add     r15, rax",
    "call    strcmp",
    "mov     edx, dword [rbp-0x48]",
    "test    eax, eax",
    "je      0xf354d",
    "movsxd  rdx, dword [r14+0x10]",
    "mov     rsi, qword [r12]",
    "mov     rcx, qword [r14+0x8]",
    "add     rsi, rax",
    "lea     edi, [rdx+0x1]",
    "add     rax, 0x1",
    "mov     dword [r14+0x10], edi",
    "movzx   esi, byte [rsi]",
    "mov     byte [rcx+rdx], sil",
    "cmp     r9, rax",
    "jne     0xf3376",
    "cmp     ebx, dword [r13]",
    "jl      0xf32f7",
    "mov     eax, dword [rbp-0x50]",
    "xor     r15d, r15d",
    "cmp     ebx, eax",
    "jle     0xf3047",
    "cmp     dword [rbp-0x54], r12d",
    "jg      0xf354d",
    "nop     dword [rax+rax]",
    "nop     word [rax+rax]"
  ]
}
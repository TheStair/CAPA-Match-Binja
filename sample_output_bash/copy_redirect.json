{
  "address": "0x60030",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "mov     edi, 0x30",
    "push    rbx",
    "sub     rsp, 0x8",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x6012e",
    "mov     esi, 0x30",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movdqu  xmm0, xmmword [r12]",
    "movdqu  xmm1, xmmword [r12+0x10]",
    "movdqu  xmm2, xmmword [r12+0x20]",
    "movups  xmmword [rbx], xmm0",
    "movups  xmmword [rbx+0x10], xmm1",
    "movups  xmmword [rbx+0x20], xmm2",
    "test    byte [r12+0x10], 0x1",
    "jne     0x60110",
    "mov     r13, qword [r12+0x8]",
    "mov     rdi, qword [r13]",
    "call    make_bare_word",
    "mov     edx, dword [r13+0x8]",
    "mov     dword [rax+0x8], edx",
    "mov     qword [rbx+0x8], rax",
    "jmp     0x60089",
    "mov     ecx, dword [r12+0x18]",
    "cmp     ecx, 0x13",
    "ja      0x600fe",
    "add     rsp, 0x8",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     eax, 0x1",
    "shl     rax, cl",
    "test    eax, 0xe7c2f",
    "jne     0x600e4",
    "mov     r12, qword [r12+0x20]",
    "mov     rdi, qword [r12]",
    "call    make_bare_word",
    "mov     edx, dword [r12+0x8]",
    "mov     dword [rax+0x8], edx",
    "mov     qword [rbx+0x20], rax",
    "test    eax, 0x110",
    "je      0x600fe",
    "mov     r13, qword [r12+0x28]",
    "test    r13, r13",
    "je      0x600e0",
    "mov     qword [rbx+0x28], r13",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x60146",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r13",
    "mov     rdx, r14",
    "mov     rdi, r15",
    "mov     r13, r15",
    "call    __strcpy_chk"
  ]
}
{
  "address": "0xd5df0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using RC4 KSA/89b7ba675fcb4f4eac2317f83c0a9436",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "get file attributes",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdi",
    "push    r14",
    "push    r13",
    "mov     r13d, esi",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0xc8",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "mov     eax, esi",
    "and     eax, 0x8",
    "mov     dword [rbp-0xe0], eax",
    "je      0xd6120",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xd61d2",
    "movzx   r8d, byte [rbx]",
    "cmp     r8b, 0x2f",
    "je      0xd60d7",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r14",
    "mov     r15, r14",
    "call    __strcpy_chk",
    "jmp     0xd5e2f",
    "xor     r12d, r12d",
    "cmp     byte [rbx+0x1], 0x2f",
    "mov     r10d, 0x1",
    "jne     0xd60f9",
    "movzx   eax, byte [r15]",
    "mov     byte [rbp-0xdb], 0x2e",
    "mov     r14, r15",
    "xor     r12d, r12d",
    "test    al, al",
    "je      0xd6188",
    "lea     r14, [r15+r10]",
    "mov     byte [rbp-0xdb], 0x2f",
    "movzx   eax, byte [r14]",
    "test    al, al",
    "jne     0xd5e56",
    "xor     r12d, r12d",
    "cmp     byte [rbx+0x2], 0x2f",
    "setne   r12b",
    "lea     r10d, [r12+0x1]",
    "movsxd  r10, r10d",
    "movzx   eax, byte [rbp-0xdb]",
    "lea     rbx, [r15+0x1]",
    "mov     byte [r15], al",
    "jmp     0xd5ef1",
    "mov     byte [rbp-0xda], r8b",
    "mov     rbx, r14",
    "mov     dword [rbp-0xe4], r12d",
    "mov     r12, r14",
    "mov     qword [rbp-0xd8], r15",
    "mov     r15d, r13d",
    "mov     r13, r14",
    "nop     word [rax+rax]",
    "mov     rbx, r14",
    "jmp     0xd5ee8",
    "mov     byte [rbx], 0x0",
    "cmp     byte [r15], 0x2f",
    "je      0xd6153",
    "movzx   eax, byte [r13+0x1]",
    "add     r13, 0x1",
    "jmp     0xd5ed6",
    "cmp     al, 0x2e",
    "je      0xd5f40",
    "cmp     r15, rbx",
    "je      0xd6188",
    "cmp     byte [r15+0x1], 0x2f",
    "jne     0xd5efe",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xd61cd",
    "test    al, al",
    "jne     0xd5e80",
    "movzx   eax, byte [r13+0x1]",
    "cmp     al, 0x2f",
    "je      0xd6020",
    "cmp     r12, rbx",
    "je      0xd5e9c",
    "movzx   eax, byte [r15+0x2]",
    "cmp     al, 0x2f",
    "je      0xd5efe",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xc8",
    "mov     rax, r15",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     al, 0x2f",
    "je      0xd5f30",
    "mov     r12d, dword [rbp-0xe4]",
    "mov     r15, qword [rbp-0xd8]",
    "add     r13, 0x1",
    "jmp     0xd5ed6",
    "test    al, al",
    "je      0xd6020",
    "movzx   eax, byte [r13]",
    "test    al, al",
    "jne     0xd5ec3",
    "mov     byte [rbx], 0x2f",
    "add     rbx, 0x1",
    "test    r12d, r12d",
    "jne     0xd5efe",
    "cmp     al, 0x2e",
    "jne     0xd5e90",
    "cmp     al, 0x2f",
    "jne     0xd5eb0",
    "jmp     0xd5ec7",
    "test    al, al",
    "jne     0xd61ad",
    "movzx   eax, byte [r13+0x2]",
    "mov     esi, eax",
    "cmp     al, 0x2f",
    "je      0xd5f70",
    "add     r13, 0x1",
    "mov     byte [rbx], al",
    "add     rbx, 0x1",
    "movzx   eax, byte [r13]",
    "test    al, al",
    "je      0xd5ec7",
    "test    r15b, 0x2",
    "jne     0xd5fb0",
    "lea     rbx, [r15+0x1]",
    "mov     rdi, rbx",
    "call    strlen",
    "mov     rsi, rbx",
    "mov     rdi, r15",
    "lea     rdx, [rax+0x1]",
    "call    memmove",
    "jmp     0xd5efe",
    "mov     byte [r15+0x1], 0x0",
    "jmp     0xd5efe",
    "lea     r10, [r13+0x2]",
    "cmp     r14, rbx",
    "jae     0xd6030",
    "test    al, al",
    "jne     0xd5e90",
    "movzx   eax, byte [rbx]",
    "mov     byte [rbx], 0x0",
    "mov     byte [rbp-0xd9], al",
    "call    __errno_location",
    "mov     rdi, qword [rbp-0xd8]",
    "lea     rsi, [rbp-0xd0]",
    "mov     dword [rax], 0x0",
    "call    stat",
    "test    eax, eax",
    "jne     0xd5ff0",
    "movzx   eax, byte [r13]",
    "cmp     byte [rbp-0xda], 0x2f",
    "je      0xd6066",
    "test    r15b, 0x1",
    "je      0xd5f95",
    "mov     eax, dword [rbp-0xe0]",
    "mov     r15, qword [rbp-0xd8]",
    "test    eax, eax",
    "je      0xd61a0",
    "mov     eax, dword [rbp-0xb8]",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "je      0xd6010",
    "mov     r13, r10",
    "jmp     0xd5ed6",
    "mov     rax, r12",
    "cmp     r12, rbx",
    "je      0xd6048",
    "sub     rbx, 0x1",
    "cmp     rbx, r14",
    "jne     0xd5f90",
    "jmp     0xd606e",
    "mov     rdi, r15",
    "call    free",
    "jmp     0xd6005",
    "xor     r15d, r15d",
    "jmp     0xd5efe",
    "movzx   eax, byte [rbp-0xd9]",
    "mov     byte [rbx], al",
    "jmp     0xd5ed1",
    "movzx   edx, word [rel data_136ab8]  {\"..\\'\\CC->\"}",
    "lea     rbx, [rax+0x2]",
    "mov     r14, rbx",
    "mov     word [rax], dx",
    "movzx   eax, byte [r13+0x2]",
    "mov     r13, r10",
    "jmp     0xd5ed6",
    "mov     byte [rbx], 0x2f",
    "lea     rax, [rbx+0x1]",
    "cmp     byte [rbx], 0x2f",
    "je      0xd5f9e",
    "mov     eax, esi",
    "mov     r13, r10",
    "jmp     0xd5ed6",
    "movzx   eax, byte [rbx]",
    "mov     byte [rbx], 0x0",
    "mov     qword [rbp-0xf0], r10",
    "mov     byte [rbp-0xd9], al",
    "call    __errno_location",
    "mov     rdi, qword [rbp-0xd8]",
    "lea     rsi, [rbp-0xd0]",
    "mov     dword [rax], 0x0",
    "call    stat",
    "test    eax, eax",
    "jne     0xd5ff0",
    "mov     eax, dword [rbp-0xb8]",
    "mov     r10, qword [rbp-0xf0]",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "jne     0xd5ff0",
    "movzx   eax, byte [rbp-0xd9]",
    "mov     byte [rbx], al",
    "movzx   esi, byte [r13+0x2]",
    "jmp     0xd5f95"
  ]
}
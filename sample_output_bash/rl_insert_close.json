{
  "address": "0x112f60",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "contain loop",
    "get socket status",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13d, esi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0xb8",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel rl_explicit_arg]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x112fa2",
    "call    _rl_insert_char",
    "lea     rax, [rel rl_blink_matching_paren]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x112fd0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xb8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     edi, 0x1",
    "call    _rl_insert_char",
    "lea     rax, [rel rl_redisplay_function]",
    "call    qword [rax]",
    "lea     rax, [rel rl_point]",
    "mov     ebx, dword [rax]",
    "lea     rax, [rel rl_line_buffer]",
    "mov     rcx, qword [rax]",
    "cmp     r13d, 0x5d",
    "je      0x1130b8",
    "mov     dword [rbp-0xdc], 0x5b",
    "jmp     0x11301e",
    "cmp     r13d, 0x7d",
    "je      0x1131f0",
    "sub     ebx, 0x2",
    "js      0x1131e0",
    "mov     dword [rbp-0xdc], 0x7b",
    "jmp     0x11301e",
    "cmp     r13d, 0x29",
    "jne     0x1131e0",
    "mov     eax, 0x1",
    "jmp     0x112fa9",
    "lea     rax, [rel rl_basic_quote_characters]",
    "xor     r14d, r14d",
    "mov     dword [rbp-0xd8], 0x1",
    "mov     r12, qword [rax]",
    "movsxd  rax, ebx",
    "lea     r15, [rcx+rax]",
    "jmp     0x113081",
    "mov     dword [rbp-0xdc], 0x28",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x1131ff",
    "movsx   esi, byte [r15]",
    "test    r14d, r14d",
    "je      0x113050",
    "test    r12, r12",
    "je      0x1130d0",
    "cmp     r14d, esi",
    "je      0x1131c0",
    "cmp     r13d, esi",
    "je      0x1131d0",
    "mov     rdi, r12",
    "mov     dword [rbp-0xd4], esi",
    "call    strchr",
    "mov     esi, dword [rbp-0xd4]",
    "test    rax, rax",
    "je      0x1130d0",
    "xor     r14d, r14d",
    "jmp     0x113071",
    "test    r12, r12",
    "je      0x113071",
    "add     dword [rbp-0xd8], 0x1",
    "jmp     0x1130e8",
    "cmp     dword [rbp-0xdc], esi",
    "jne     0x113071",
    "mov     r14d, esi",
    "sub     ebx, 0x1",
    "sub     r15, 0x1",
    "cmp     ebx, 0xffffffff",
    "je      0x1131e0",
    "mov     rdi, r12",
    "mov     dword [rbp-0xd4], esi",
    "call    strchr",
    "mov     esi, dword [rbp-0xd4]",
    "test    rax, rax",
    "cmovne  r14d, esi",
    "jmp     0x113071",
    "mov     eax, dword [rbp-0xd8]",
    "test    eax, eax",
    "jne     0x113071",
    "sub     dword [rbp-0xd8], 0x1",
    "lea     r14, [rel rl_instream]",
    "lea     r13, [rbp-0xc0]",
    "xor     eax, eax",
    "mov     ecx, 0x10",
    "mov     rdi, r13",
    "rep stosq qword [rdi]",
    "mov     rdi, qword [r14]",
    "call    fileno",
    "mov     rdi, qword [r14]",
    "mov     r15d, eax",
    "call    fileno",
    "movsxd  rdi, eax",
    "call    __fdelt_chk",
    "mov     ecx, r15d",
    "mov     rdx, rax",
    "mov     eax, 0x1",
    "shl     rax, cl",
    "or      qword [rbp+rdx*8-0xc0], rax",
    "movsxd  rax, dword [rel data_160758]",
    "mov     rdx, rax",
    "imul    rax, rax, 0x431bde83",
    "mov     ecx, edx",
    "sar     ecx, 0x1f",
    "sar     rax, 0x32",
    "sub     eax, ecx",
    "movsxd  rcx, eax",
    "imul    eax, eax, 0xf4240",
    "mov     qword [rbp-0xd0], rcx",
    "sub     edx, eax",
    "lea     rax, [rel rl_point]",
    "movsxd  rdx, edx",
    "mov     r15d, dword [rax]",
    "mov     dword [rax], ebx",
    "lea     rax, [rel rl_redisplay_function]",
    "mov     qword [rbp-0xc8], rdx",
    "call    qword [rax]",
    "lea     r8, [rbp-0xd0]",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     edi, 0x1",
    "call    select",
    "lea     rax, [rel rl_point]",
    "mov     dword [rax], r15d",
    "jmp     0x112fa7",
    "xor     eax, eax"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xec2b0",
  "rules": [
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "decompress data using LZO/eb3121acf7214c64b84ac9b7cddcf413",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "contain loop",
    "enumerate PE sections/6daf36d0aacf4abd837ad173c20584ec/cb6a026a778247b1a261c9e375dba739",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "allocate or change RW memory/877cb0b79bfa432e8e79b8bd20fa354f",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "encrypt data using Curve25519/7d070d905d0942e295bbb2c9df72fc86"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "xor     ecx, ecx",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rsi",
    "xor     esi, esi",
    "push    r14",
    "push    r13",
    "xor     r13d, r13d",
    "push    r12",
    "xor     r12d, r12d",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     qword [rbp-0x50], rdx",
    "jmp     0xec383",
    "movsxd  rax, r12d",
    "lea     r14, [rdi+rax]",
    "movzx   ebx, byte [r14]",
    "test    bl, bl",
    "je      0xec2e0",
    "mov     eax, ecx",
    "mov     dword [rbp-0x38], esi",
    "or      eax, esi",
    "je      0xec40b",
    "cmp     bl, 0x5c",
    "jne     0xec480",
    "mov     rax, qword [rbp-0x50]",
    "mov     dword [rax], r13d",
    "movsxd  r13, r13d",
    "xor     eax, eax",
    "mov     byte [r15+r13], 0x0",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    ecx, ecx",
    "je      0xec430",
    "test    ecx, ecx",
    "je      0xec4b0",
    "lea     r9, [rdi+rax+0x1]",
    "movzx   edx, byte [r9]",
    "test    dl, dl",
    "jne     0xec440",
    "mov     edx, 0xffffff80",
    "mov     ebx, 0xffffff80",
    "jmp     0xec347",
    "mov     qword [rbp-0x40], rdi",
    "call    __ctype_b_loc",
    "mov     rdi, qword [rbp-0x40]",
    "mov     esi, dword [rbp-0x38]",
    "xor     edx, edx",
    "mov     rax, qword [rax]",
    "test    esi, esi",
    "jne     0xec342",
    "cmp     bl, 0x3f",
    "jne     0xecb31",
    "lea     r10d, [r12+0x1]",
    "cmp     dl, 0x43",
    "je      0xec4f8",
    "test    ecx, ecx",
    "je      0xec4d8",
    "lea     rax, [rel _rl_convert_meta_chars_to_ascii]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xec3f6",
    "and     ebx, 0x1f",
    "test    esi, esi",
    "jne     0xec342",
    "mov     qword [rbp-0x48], rdi",
    "mov     dword [rbp-0x40], esi",
    "call    __ctype_toupper_loc",
    "mov     rdx, qword [rbp-0x38]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rax, qword [rax]",
    "mov     rdi, qword [rbp-0x48]",
    "mov     ebx, dword [rax+rdx*4]",
    "and     ebx, 0x1f",
    "test    esi, esi",
    "je      0xec3f4",
    "or      ebx, 0xffffff80",
    "mov     edx, ebx",
    "mov     edx, ebx",
    "test    bl, bl",
    "js      0xec347",
    "mov     r10d, r12d",
    "jmp     0xecb04",
    "mov     edx, 0x7f",
    "test    esi, esi",
    "je      0xec3f6",
    "cmp     byte [rdi+rax+0x2], 0x2d",
    "je      0xec928",
    "cmp     dl, 0x4d",
    "je      0xec548",
    "mov     edx, 0x5c",
    "test    esi, esi",
    "je      0xec3f6",
    "mov     qword [rbp-0x40], rdi",
    "mov     dword [rbp-0x38], esi",
    "call    __ctype_b_loc",
    "mov     edx, 0x5c",
    "mov     esi, dword [rbp-0x38]",
    "mov     rdi, qword [rbp-0x40]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x38], rdx",
    "add     rax, 0xb8",
    "movzx   eax, word [rax]",
    "test    ah, 0x2",
    "jne     0xec31a",
    "movsxd  rax, r13d",
    "add     r13d, 0x1",
    "mov     byte [r15+rax], dl",
    "movsxd  rax, r13d",
    "and     ebx, 0x7f",
    "mov     byte [r15+rax], 0x1b",
    "lea     eax, [r13+0x1]",
    "add     r13d, 0x2",
    "cdqe    ",
    "mov     byte [r15+rax], bl",
    "cmp     byte [r14], 0x0",
    "je      0xec40b",
    "mov     edx, ebx",
    "movsxd  rax, r13d",
    "add     r13d, 0x1",
    "mov     byte [r15+rax], dl",
    "jmp     0xec401",
    "mov     qword [rbp-0x48], rdi",
    "mov     dword [rbp-0x38], esi",
    "mov     dword [rbp-0x40], r10d",
    "call    __ctype_b_loc",
    "movzx   edx, bl",
    "mov     r12d, dword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x48]",
    "mov     rcx, rax",
    "mov     esi, dword [rbp-0x38]",
    "lea     rax, [rdx+rdx]",
    "add     rax, qword [rcx]",
    "jmp     0xec30a",
    "mov     edx, 0xffffffff",
    "mov     ebx, 0xffffffff",
    "jmp     0xec347",
    "add     r12d, 0x2",
    "mov     ecx, 0x1",
    "jmp     0xec37f",
    "test    ecx, ecx",
    "je      0xec578",
    "cmp     byte [rdi+rax+0x2], 0x2d",
    "je      0xec940",
    "lea     eax, [rdx-0x30]",
    "cmp     al, 0x48",
    "ja      0xec478",
    "mov     edx, 0xffffffdc",
    "mov     ebx, 0xffffffdc",
    "jmp     0xec347",
    "xor     esi, esi",
    "xor     ecx, ecx",
    "cmp     byte [r14], 0x0",
    "jne     0xec37b",
    "movzx   eax, word [rax]",
    "mov     qword [rbp-0x38], rdx",
    "test    ah, 0x2",
    "je      0xec3e9",
    "add     r12d, 0x1",
    "mov     r14, r9",
    "mov     r12d, r10d",
    "test    esi, esi",
    "je      0xec3f6",
    "mov     qword [rbp-0x58], rdi",
    "mov     ebx, 0x43",
    "mov     dword [rbp-0x40], esi",
    "mov     dword [rbp-0x48], r10d",
    "mov     qword [rbp-0x38], r9",
    "call    __ctype_b_loc",
    "mov     r14, qword [rbp-0x38]",
    "mov     r12d, dword [rbp-0x48]",
    "mov     edx, 0x43",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x58]",
    "add     rax, 0x86",
    "jmp     0xec30a",
    "add     r12d, 0x2",
    "mov     esi, 0x1",
    "jmp     0xec37f",
    "test    ecx, ecx",
    "jne     0xec5f1",
    "{Case 0x8-0x12, 0x14-0x1c, 0x1e-0x2b, 0x2d-0x30, 0x33, 0x37-0x3d, 0x3f-0x41, 0x43, 0x45, 0x47}",
    "mov     r14, r9",
    "mov     ebx, edx",
    "mov     r12d, r10d",
    "lea     r11, [rel jump_table_1389d0]",
    "movzx   eax, al",
    "movsxd  rax, dword [r11+rax*4]",
    "add     rax, r11",
    "jmp     rax",
    "mov     edx, 0xffffffc3",
    "mov     ebx, 0xffffffc3",
    "jmp     0xec347",
    "mov     qword [rbp-0x58], rdi",
    "mov     ebx, 0x4d",
    "mov     dword [rbp-0x40], esi",
    "mov     dword [rbp-0x48], r10d",
    "mov     qword [rbp-0x38], r9",
    "call    __ctype_b_loc",
    "mov     r14, qword [rbp-0x38]",
    "mov     r12d, dword [rbp-0x48]",
    "mov     edx, 0x4d",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x58]",
    "add     rax, 0x9a",
    "jmp     0xec30a",
    "mov     r14, r9",
    "mov     r12d, r10d",
    "test    esi, esi",
    "je      0xec3f6",
    "{Case 0x0-0x7}",
    "lea     r9d, [r12+0x2]",
    "lea     ebx, [rdx-0x30]",
    "movsxd  rax, r9d",
    "movzx   eax, byte [rdi+rax]",
    "sub     eax, 0x30",
    "cmp     al, 0x7",
    "ja      0xecaf3",
    "{Case 0x32}",
    "test    ecx, ecx",
    "je      0xec9d5",
    "{Case 0x3e}",
    "test    ecx, ecx",
    "je      0xec9f7",
    "{Case 0x31}",
    "test    ecx, ecx",
    "je      0xec973",
    "{Case 0x2c}",
    "test    ecx, ecx",
    "je      0xec9b7",
    "{Case 0x35}",
    "test    ecx, ecx",
    "je      0xec995",
    "{Case 0x34}",
    "test    ecx, ecx",
    "je      0xec9ca",
    "{Case 0x36}",
    "test    ecx, ecx",
    "je      0xeca19",
    "{Case 0x42}",
    "test    ecx, ecx",
    "je      0xeca5d",
    "{Case 0x46}",
    "test    ecx, ecx",
    "je      0xeca3b",
    "{Case 0x44}",
    "test    ecx, ecx",
    "je      0xeca7f",
    "{Case 0x48}",
    "mov     qword [rbp-0x58], rdi",
    "lea     r14d, [r12+0x2]",
    "xor     ebx, ebx",
    "mov     byte [rbp-0x48], dl",
    "movsxd  r14, r14d",
    "mov     dword [rbp-0x40], esi",
    "mov     dword [rbp-0x38], ecx",
    "call    __ctype_b_loc",
    "mov     ecx, dword [rbp-0x38]",
    "mov     esi, dword [rbp-0x40]",
    "mov     r11d, 0x2",
    "mov     rax, qword [rax]",
    "movzx   edx, byte [rbp-0x48]",
    "mov     rdi, qword [rbp-0x58]",
    "mov     ebx, 0x4d",
    "jmp     0xec342",
    "movsxd  r14, r10d",
    "mov     r12d, r10d",
    "add     r14, rdi",
    "test    ecx, ecx",
    "je      0xec4b0",
    "lea     edx, [r12+0x3]",
    "lea     ebx, [rax+rbx*8]",
    "movsxd  r14, edx",
    "movzx   eax, byte [rdi+r14]",
    "sub     eax, 0x30",
    "cmp     al, 0x7",
    "ja      0xecae8",
    "mov     r14, r9",
    "mov     r12d, r10d",
    "mov     edx, 0x8",
    "test    esi, esi",
    "je      0xec3f6",
    "mov     qword [rbp-0x58], rdi",
    "mov     ebx, 0x8",
    "mov     dword [rbp-0x40], esi",
    "mov     dword [rbp-0x48], r10d",
    "mov     qword [rbp-0x38], r9",
    "call    __ctype_b_loc",
    "mov     r14, qword [rbp-0x38]",
    "mov     r12d, dword [rbp-0x48]",
    "mov     edx, 0x8",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x58]",
    "add     rax, 0x10",
    "jmp     0xec30a",
    "mov     r14, r9",
    "mov     r12d, r10d",
    "mov     edx, 0xa",
    "test    esi, esi",
    "je      0xec3f6",
    "mov     qword [rbp-0x58], rdi",
    "mov     ebx, 0xa",
    "mov     dword [rbp-0x40], esi",
    "mov     dword [rbp-0x48], r10d",
    "mov     qword [rbp-0x38], r9",
    "call    __ctype_b_loc",
    "mov     r14, qword [rbp-0x38]",
    "mov     r12d, dword [rbp-0x48]",
    "mov     edx, 0xa",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x58]",
    "add     rax, 0x14",
    "jmp     0xec30a",
    "mov     r14, r9",
    "mov     r12d, r10d",
    "mov     edx, 0x7",
    "test    esi, esi",
    "je      0xec3f6",
    "mov     qword [rbp-0x58], rdi",
    "mov     ebx, 0x7",
    "mov     dword [rbp-0x40], esi",
    "mov     dword [rbp-0x48], r10d",
    "mov     qword [rbp-0x38], r9",
    "call    __ctype_b_loc",
    "mov     r14, qword [rbp-0x38]",
    "mov     r12d, dword [rbp-0x48]",
    "mov     edx, 0x7",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x58]",
    "add     rax, 0xe",
    "jmp     0xec30a",
    "mov     r14, r9",
    "mov     r12d, r10d",
    "test    esi, esi",
    "jne     0xec4e5",
    "mov     qword [rbp-0x58], rdi",
    "mov     dword [rbp-0x40], esi",
    "mov     dword [rbp-0x48], r10d",
    "mov     qword [rbp-0x38], r9",
    "call    __ctype_b_loc",
    "mov     r14, qword [rbp-0x38]",
    "mov     r12d, dword [rbp-0x48]",
    "mov     edx, 0x5c",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x58]",
    "add     rax, 0xb8",
    "jmp     0xec30a",
    "mov     r14, r9",
    "mov     r12d, r10d",
    "mov     edx, 0x1b",
    "test    esi, esi",
    "je      0xec3f6",
    "mov     qword [rbp-0x58], rdi",
    "mov     ebx, 0x1b",
    "mov     dword [rbp-0x40], esi",
    "mov     dword [rbp-0x48], r10d",
    "mov     qword [rbp-0x38], r9",
    "call    __ctype_b_loc",
    "mov     r14, qword [rbp-0x38]",
    "mov     r12d, dword [rbp-0x48]",
    "mov     edx, 0x1b",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x58]",
    "add     rax, 0x36",
    "jmp     0xec30a",
    "mov     r14, r9",
    "mov     r12d, r10d",
    "jmp     0xec48d",
    "mov     qword [rbp-0x58], rdi",
    "mov     ebx, 0x7f",
    "mov     dword [rbp-0x40], esi",
    "mov     dword [rbp-0x48], r10d",
    "mov     qword [rbp-0x38], r9",
    "call    __ctype_b_loc",
    "mov     r14, qword [rbp-0x38]",
    "mov     r12d, dword [rbp-0x48]",
    "mov     edx, 0x7f",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x58]",
    "add     rax, 0xfe",
    "jmp     0xec30a",
    "mov     r14, r9",
    "mov     r12d, r10d",
    "mov     edx, 0xc",
    "test    esi, esi",
    "je      0xec3f6",
    "mov     qword [rbp-0x58], rdi",
    "mov     ebx, 0xc",
    "mov     dword [rbp-0x40], esi",
    "mov     dword [rbp-0x48], r10d",
    "mov     qword [rbp-0x38], r9",
    "call    __ctype_b_loc",
    "mov     r14, qword [rbp-0x38]",
    "mov     r12d, dword [rbp-0x48]",
    "mov     edx, 0xc",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x58]",
    "add     rax, 0x18",
    "jmp     0xec30a",
    "mov     r14, r9",
    "mov     r12d, r10d",
    "mov     edx, 0xd",
    "test    esi, esi",
    "je      0xec3f6",
    "mov     qword [rbp-0x58], rdi",
    "mov     ebx, 0xd",
    "mov     dword [rbp-0x40], esi",
    "mov     dword [rbp-0x48], r10d",
    "mov     qword [rbp-0x38], r9",
    "call    __ctype_b_loc",
    "mov     r14, qword [rbp-0x38]",
    "mov     r12d, dword [rbp-0x48]",
    "mov     edx, 0xd",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x58]",
    "add     rax, 0x1a",
    "jmp     0xec30a",
    "mov     r14, r9",
    "mov     r12d, r10d",
    "mov     edx, 0xb",
    "test    esi, esi",
    "je      0xec3f6",
    "mov     qword [rbp-0x58], rdi",
    "mov     ebx, 0xb",
    "mov     dword [rbp-0x40], esi",
    "mov     dword [rbp-0x48], r10d",
    "mov     qword [rbp-0x38], r9",
    "call    __ctype_b_loc",
    "mov     r14, qword [rbp-0x38]",
    "mov     r12d, dword [rbp-0x48]",
    "mov     edx, 0xb",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x58]",
    "add     rax, 0x16",
    "jmp     0xec30a",
    "mov     r14, r9",
    "mov     r12d, r10d",
    "mov     edx, 0x9",
    "test    esi, esi",
    "je      0xec3f6",
    "mov     qword [rbp-0x58], rdi",
    "mov     ebx, 0x9",
    "mov     dword [rbp-0x40], esi",
    "mov     dword [rbp-0x48], r10d",
    "mov     qword [rbp-0x38], r9",
    "call    __ctype_b_loc",
    "mov     r14, qword [rbp-0x38]",
    "mov     r12d, dword [rbp-0x48]",
    "mov     edx, 0x9",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x58]",
    "add     rax, 0x12",
    "jmp     0xec30a",
    "lea     r12d, [r14-0x1]",
    "cmp     r11d, 0x2",
    "jne     0xec968",
    "test    r11d, r11d",
    "je      0xec964",
    "movsxd  r14, r9d",
    "mov     rdx, r14",
    "jmp     0xec5e6",
    "lea     ebx, [rax+rbx*8]",
    "lea     eax, [r12+0x4]",
    "cdqe    ",
    "movzx   eax, byte [rdi+rax]",
    "sub     eax, 0x30",
    "cmp     al, 0x7",
    "ja      0xecae5",
    "mov     edx, 0xffffff88",
    "mov     ebx, 0xffffff88",
    "jmp     0xec347",
    "mov     edx, 0xffffff8a",
    "mov     ebx, 0xffffff8a",
    "jmp     0xec347",
    "mov     edx, 0xffffff87",
    "mov     ebx, 0xffffff87",
    "jmp     0xec347",
    "jmp     0xec3f6",
    "mov     edx, 0xffffff9b",
    "mov     ebx, 0xffffff9b",
    "jmp     0xec347",
    "mov     edx, 0xffffff8c",
    "mov     ebx, 0xffffff8c",
    "jmp     0xec347",
    "mov     edx, 0xffffff8d",
    "mov     ebx, 0xffffff8d",
    "jmp     0xec347",
    "mov     edx, 0xffffff8b",
    "mov     ebx, 0xffffff8b",
    "jmp     0xec347",
    "mov     edx, 0xffffff89",
    "mov     ebx, 0xffffff89",
    "jmp     0xec347",
    "movsxd  r14, r12d",
    "add     r14, rdi",
    "jmp     0xec480",
    "movsxd  r14, r12d",
    "add     r14, rdi",
    "test    ecx, ecx",
    "je      0xecace",
    "sub     r12d, 0x1",
    "lea     r10d, [r9-0x61]",
    "shl     ebx, 0x4",
    "cmp     r10b, 0x5",
    "ja      0xec94e",
    "add     r14, rdi",
    "mov     r12d, edx",
    "jmp     0xec480",
    "mov     r9d, edx",
    "test    esi, esi",
    "je      0xec3f6",
    "add     rax, 0xf0",
    "mov     edx, 0x78",
    "mov     ebx, 0x78",
    "jmp     0xec30a",
    "lea     r12d, [r9-0x41]",
    "lea     r10d, [r9-0x37]",
    "sub     r9d, 0x30",
    "cmp     r12b, 0x5",
    "cmovbe  r9d, r10d",
    "jmp     0xec915",
    "sub     r9d, 0x57",
    "mov     edx, 0xfffffff8",
    "mov     ebx, 0xfffffff8",
    "jmp     0xec347",
    "sub     r11d, 0x1",
    "add     ebx, r9d",
    "add     r14, 0x1",
    "jmp     0xec8e8",
    "movzx   r10d, byte [rdi+r14]",
    "mov     r12d, r14d",
    "mov     r9, r10",
    "test    byte [rax+r10*2+0x1], 0x10",
    "je      0xecaa1"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x71c80",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "xor     r15d, r15d",
    "push    r14",
    "mov     r14, rdi",
    "push    r13",
    "mov     r13, rdx",
    "push    r12",
    "mov     r12d, esi",
    "push    rbx",
    "xor     ebx, ebx",
    "sub     rsp, 0x48",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], 0x0",
    "call    strlen",
    "mov     rdi, r13",
    "mov     qword [rbp-0x48], rax",
    "call    strlen",
    "mov     r9d, eax",
    "test    r12d, r12d",
    "js      0x71d58",
    "xor     r15d, r15d",
    "jmp     0x71d00",
    "movsxd  r11, ebx",
    "lea     rdi, [r14+r11]",
    "movzx   ecx, byte [rdi]",
    "cmp     cl, 0x5c",
    "je      0x71dc6",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x71f99",
    "lea     r11d, [rbx+0x1]",
    "cmp     r12d, r11d",
    "jl      0x71d00",
    "test    r9d, r9d",
    "jne     0x71d60",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x48",
    "mov     eax, r15d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "jle     0x71d58",
    "movsxd  rax, r9d",
    "mov     qword [rbp-0x70], rax",
    "add     ebx, r9d",
    "xor     r15d, 0x1",
    "cmp     r12d, ebx",
    "jge     0x71cd7",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jle     0x71e20",
    "mov     rdx, qword [rbp-0x70]",
    "mov     rsi, r13",
    "mov     qword [rbp-0x68], r11",
    "mov     dword [rbp-0x60], r9d",
    "mov     byte [rbp-0x58], cl",
    "mov     qword [rbp-0x50], rdi",
    "call    strncmp",
    "mov     rdi, qword [rbp-0x50]",
    "movzx   ecx, byte [rbp-0x58]",
    "test    eax, eax",
    "mov     r9d, dword [rbp-0x60]",
    "mov     r11, qword [rbp-0x68]",
    "je      0x71cef",
    "cmp     cl, 0x27",
    "je      0x71f10",
    "nop     dword [rax+rax]",
    "add     ebx, 0x2",
    "cmp     r12d, ebx",
    "jge     0x71cd7",
    "movsxd  rdx, r11d",
    "lea     rdi, [rel is_basic_table]",
    "lea     rsi, [r14+rdx]",
    "movzx   ecx, byte [rsi]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x71e38",
    "cmp     cl, 0x27",
    "jne     0x71d7a",
    "add     ebx, 0x1",
    "jmp     0x71d4e",
    "cmp     cl, 0x22",
    "je      0x71d28",
    "jmp     0x71d00",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x71e58",
    "lea     ebx, [r11+rax]",
    "nop     dword [rax]",
    "cmp     ebx, r12d",
    "jle     0x71db7",
    "cmp     cl, 0x27",
    "je      0x71f10",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jle     0x71f20",
    "mov     rax, qword [rbp-0x40]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     dword [rbp-0x58], r11d",
    "mov     dword [rbp-0x50], r9d",
    "mov     qword [rbp-0x60], rax",
    "mov     rax, qword [rbp-0x48]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "mov     r9d, dword [rbp-0x50]",
    "mov     r11d, dword [rbp-0x58]",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x71f38",
    "test    cl, cl",
    "js      0x71e58",
    "jmp     0x71d00",
    "movsxd  r11, ebx",
    "lea     rdi, [r14+r11]",
    "movzx   ecx, byte [rdi]",
    "cmp     cl, 0x5c",
    "jne     0x71d67",
    "nop     dword [rax+rax]",
    "mov     rsi, qword [rbp-0x48]",
    "mov     edx, ebx",
    "mov     ecx, 0x400",
    "mov     rdi, r14",
    "mov     dword [rbp-0x50], r9d",
    "call    sub_6f5f0",
    "mov     r9d, dword [rbp-0x50]",
    "mov     ebx, eax",
    "add     ebx, 0x1",
    "cmp     r12d, ebx",
    "jge     0x71db7",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x71ea0",
    "test    rax, rax",
    "je      0x71e50",
    "mov     rax, qword [rbp-0x60]",
    "add     ebx, 0x2",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x71e08",
    "mov     eax, 0x1",
    "jne     0x71e04",
    "cmp     byte [r13], cl",
    "je      0x71ed0",
    "jmp     0x71d00",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x71f50",
    "add     ebx, eax",
    "add     ebx, 0x2",
    "jmp     0x71e08",
    "jmp     0x71e04",
    "cmp     ebx, r12d",
    "jle     0x71cd7",
    "mov     rdx, qword [rbp-0x48]",
    "mov     rax, qword [rbp-0x40]",
    "mov     rsi, rdi",
    "lea     rcx, [rbp-0x40]",
    "xor     edi, edi",
    "mov     dword [rbp-0x50], r9d",
    "sub     rdx, r11",
    "mov     qword [rbp-0x58], rax",
    "call    mbrtowc",
    "mov     r9d, dword [rbp-0x50]",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x71f8b",
    "test    cl, cl",
    "js      0x71f50",
    "test    rax, rax",
    "je      0x71ec4",
    "mov     rax, qword [rbp-0x58]",
    "add     ebx, 0x1",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x71dae",
    "mov     eax, 0x1",
    "jne     0x71dac",
    "add     ebx, 0x1",
    "jmp     0x71dae",
    "jmp     0x71dac",
    "cmp     ebx, r12d",
    "jg      0x71d00"
  ]
}
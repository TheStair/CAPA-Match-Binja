{
  "address": "0x1109d0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "write file on Linux",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     rax, [rel _rl_color_ext_list]",
    "mov     rbx, qword [rax]",
    "test    rbx, rbx",
    "je      0x110a30",
    "lea     r12, [rel _rl_color_indicator]",
    "lea     rbx, [r12+0x90]",
    "lea     r12, [rel data_134960]  {\"readline-colored-completion-pref\u2026\"}",
    "jmp     0x110a09",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "mov     edi, 0x4",
    "call    sub_1108d0",
    "test    al, al",
    "jne     0x110ac0",
    "cmp     qword [rbx], 0x22",
    "jne     0x110a00",
    "lea     r12, [rel _rl_color_indicator]",
    "lea     r13, [rel rl_outstream]",
    "mov     edx, 0x1",
    "mov     rcx, qword [r13]",
    "mov     rsi, qword [r12]",
    "mov     rdi, qword [r12+0x8]",
    "call    fwrite",
    "mov     rcx, qword [r13]",
    "mov     rsi, qword [r12+0x10]",
    "mov     edx, 0x1",
    "mov     rdi, qword [r12+0x18]",
    "call    fwrite",
    "jmp     0x110a67",
    "lea     r12, [rel _rl_color_indicator]",
    "lea     r13, [rel rl_outstream]",
    "mov     rbx, qword [rbx+0x20]",
    "test    rbx, rbx",
    "je      0x110a30",
    "mov     rdi, qword [rbx+0x8]",
    "cmp     byte [rdi], 0x72",
    "jne     0x110a00",
    "mov     rcx, qword [r13]",
    "mov     rsi, qword [r12]",
    "mov     edx, 0x1",
    "mov     rdi, qword [r12+0x8]",
    "call    fwrite",
    "mov     rcx, qword [r13]",
    "mov     rsi, qword [rbx]",
    "mov     edx, 0x1",
    "mov     rdi, qword [rbx+0x8]",
    "call    fwrite",
    "mov     rcx, qword [r13]",
    "mov     rsi, qword [r12+0x10]",
    "mov     edx, 0x1",
    "mov     rdi, qword [r12+0x18]",
    "call    fwrite",
    "xor     eax, eax",
    "mov     edx, 0x22",
    "mov     rsi, r12",
    "call    strncmp",
    "test    eax, eax",
    "jne     0x110a00",
    "add     rbx, 0x10",
    "jmp     0x110a3f",
    "cmp     qword [rbx+0x8], 0x0",
    "mov     eax, 0x1",
    "je      0x110aad"
  ]
}
{
  "address": "0xe3950",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "mov     r12d, esi",
    "push    rbx",
    "mov     ebx, edi",
    "sub     rsp, 0x8",
    "call    __ctype_b_loc",
    "movzx   edx, r12b",
    "mov     rax, qword [rax]",
    "test    byte [rax+rdx*2+0x1], 0x1",
    "jne     0xe398f",
    "test    ebx, ebx",
    "je      0xe39d5",
    "lea     r13, [rel rl_point]",
    "lea     rax, [rel rl_end]",
    "mov     esi, dword [r13]",
    "cmp     esi, dword [rax]",
    "jl      0xe39f8",
    "mov     esi, r12d",
    "mov     edi, 0x1",
    "call    rl_backward_char",
    "add     rsp, 0x8",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [rel data_16a4b8]",
    "test    rax, rax",
    "je      0xe39f0",
    "lea     rax, [rel rl_line_buffer]",
    "mov     ecx, 0x1",
    "mov     edx, 0x1",
    "mov     rdi, qword [rax]",
    "call    sub_107460",
    "mov     dword [r13], eax",
    "jmp     0xe398f",
    "call    _rl_abort_internal",
    "{ Does not return }",
    "lea     rdx, [rel rl_point]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "js      0xe39c0",
    "movsxd  rdx, dword [rel data_16a4b4]",
    "mov     rdi, qword [rax+rdx*8]",
    "call    rl_insert_text",
    "sub     ebx, 0x1",
    "jne     0xe3993",
    "lea     rcx, [rel rl_end]",
    "cmp     edx, dword [rcx]",
    "jg      0xe39c0",
    "lea     rcx, [rel rl_mark]",
    "mov     dword [rcx], edx"
  ]
}
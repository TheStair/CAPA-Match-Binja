{
  "address": "0x9e4c0",
  "rules": [
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "hash data using djb2/9bc6b91561f04ebca409510ba6653174",
    "hash data using jshash/495bfd597bd14a45826758e92f604bf6",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "contain loop",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x28",
    "lea     rax, [rel history_control]",
    "mov     dword [rbp-0x34], esi",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "je      0x9e628",
    "mov     eax, dword [rel data_159830]",
    "test    eax, eax",
    "je      0x9e7de",
    "test    bl, 0x1",
    "je      0x9e4fa",
    "mov     edx, dword [rbp-0x34]",
    "test    edx, edx",
    "je      0x9e840",
    "jle     0x9e7de",
    "test    bl, 0x2",
    "je      0x9e551",
    "cmp     byte [rdi], 0x20",
    "je      0x9e610",
    "mov     rdi, r12",
    "call    bash_add_history",
    "jmp     0x9e823",
    "lea     rax, [rel hist_last_line_added]",
    "mov     rdi, r12",
    "mov     dword [rax], 0x1",
    "lea     rax, [rel hist_last_line_pushed]",
    "mov     dword [rax], 0x0",
    "call    add_history",
    "lea     rax, [rel history_lines_this_session]",
    "add     dword [rax], 0x1",
    "lea     rax, [rel history_length]",
    "mov     edx, dword [rax]",
    "lea     rax, [rel history_offset]",
    "mov     dword [rax], edx",
    "lea     r14, [rel extended_glob]",
    "xor     r15d, r15d",
    "jmp     0x9e69b",
    "cmp     dword [rel data_159830], 0x0",
    "je      0x9e560",
    "lea     rax, [rel history_length]",
    "mov     r15d, dword [rax]",
    "test    r15d, r15d",
    "je      0x9e830",
    "xor     eax, eax",
    "mov     eax, 0x1",
    "jmp     0x9e612",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [rel data_159828]",
    "mov     r13, r15",
    "shl     r13, 0x4",
    "add     rax, r13",
    "test    r12, r12",
    "mov     rbx, qword [rax]",
    "sete    r10b",
    "test    byte [rax+0xc], 0x1",
    "je      0x9e650",
    "and     ebx, 0x4",
    "je      0x9e7de",
    "jg      0x9e63c",
    "lea     r14, [rel history_offset]",
    "jmp     0x9e54e",
    "lea     r14, [rel history_offset]",
    "lea     eax, [r15-0x1]",
    "mov     rcx, qword [rel data_1688b8]",
    "mov     dword [r14], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "test    rax, rax",
    "je      0x9e54e",
    "mov     eax, dword [r14]",
    "test    rbx, rbx",
    "je      0x9e68a",
    "lea     rax, [rel history_length]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x9e778",
    "lea     r15, [rel history_length]",
    "lea     r14, [rel history_offset]",
    "mov     ebx, dword [r15]",
    "mov     dword [r14], ebx",
    "test    ebx, ebx",
    "jne     0x9e598",
    "mov     dword [r14], r15d",
    "mov     rdi, qword [rax]",
    "movzx   eax, byte [r12]",
    "cmp     byte [rdi], al",
    "jne     0x9e54e",
    "add     r15, 0x1",
    "cmp     dword [rel data_159830], r15d",
    "jle     0x9e750",
    "test    r10b, r10b",
    "jne     0x9e68a",
    "lea     rax, [rel history_offset]",
    "mov     dword [rax], 0x0",
    "mov     rcx, qword [rel data_1688b8]",
    "lea     edx, [rax-0x1]",
    "movsxd  rdx, edx",
    "mov     rdx, qword [rcx+rdx*8]",
    "lea     rcx, [rel history_offset]",
    "mov     dword [rcx], eax",
    "test    rdx, rdx",
    "je      0x9e785",
    "sub     ebx, 0x1",
    "mov     rax, qword [rel data_1688b8]",
    "movsxd  rdx, ebx",
    "mov     dword [r14], ebx",
    "mov     rax, qword [rax+rdx*8]",
    "test    rax, rax",
    "je      0x9e7d8",
    "jmp     0x9e7db",
    "mov     rsi, r12",
    "call    strcmp",
    "test    eax, eax",
    "je      0x9e604",
    "lea     rax, [rel history_control]",
    "mov     ebx, dword [rax]",
    "jmp     0x9e560",
    "xor     edx, edx",
    "test    eax, eax",
    "mov     rsi, r12",
    "mov     rdi, rbx",
    "setne   dl",
    "shl     edx, 0x5",
    "call    xstrmatch",
    "mov     rdx, qword [rel data_159828]",
    "test    byte [rdx+r13+0xc], 0x1",
    "jne     0x9e760",
    "mov     qword [rbp-0x48], rax",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     byte [rbp-0x35], r10b",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, rbx",
    "mov     rdi, rcx",
    "mov     byte [rbp-0x40], r10b",
    "call    __strcpy_chk",
    "movzx   r10d, byte [rbp-0x40]",
    "mov     rbx, rax",
    "jmp     0x9e711",
    "mov     rdi, rbx",
    "mov     byte [rbp-0x48], r10b",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x40], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x40]",
    "movzx   r10d, byte [rbp-0x48]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x9e84a",
    "mov     rdx, qword [rdx]",
    "mov     rdi, rbx",
    "mov     ecx, 0x1",
    "mov     esi, 0x26",
    "mov     byte [rbp-0x40], r10b",
    "call    strcreplace",
    "movzx   r10d, byte [rbp-0x40]",
    "mov     rbx, rax",
    "mov     ebx, dword [r15]",
    "mov     rdi, qword [rax]",
    "movzx   eax, byte [r12]",
    "cmp     byte [rdi], al",
    "jne     0x9e590",
    "mov     dword [r14], ebx",
    "mov     dword [r14], r15d",
    "nop     word [rax+rax]",
    "mov     rdi, rbx",
    "mov     dword [rbp-0x40], eax",
    "call    free",
    "mov     eax, dword [rbp-0x40]",
    "jmp     0x9e685",
    "cmp     eax, 0x1",
    "jne     0x9e610",
    "mov     eax, dword [r14]",
    "test    rbx, rbx",
    "je      0x9e722",
    "mov     rax, qword [rel data_159828]",
    "test    byte [rax+r13+0xc], 0x1",
    "je      0x9e68a",
    "test    r10b, r10b",
    "je      0x9e65d",
    "test    ebx, ebx",
    "je      0x9e7d8",
    "mov     rsi, r12",
    "call    strcmp",
    "test    eax, eax",
    "jne     0x9e590",
    "mov     rdi, rbx",
    "add     r15, 0x1",
    "call    free",
    "cmp     dword [rel data_159830], r15d",
    "jg      0x9e69b",
    "mov     edi, ebx",
    "call    remove_history",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x9e5ff",
    "nop     ",
    "mov     ebx, dword [r14]",
    "jmp     0x9e590",
    "mov     rdi, qword [rax]",
    "test    rdi, rdi",
    "je      0x9e5e9",
    "mov     rdi, qword [rbx+0x8]",
    "test    rdi, rdi",
    "je      0x9e5f7",
    "call    free",
    "mov     rdi, rbx",
    "call    free",
    "call    free"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
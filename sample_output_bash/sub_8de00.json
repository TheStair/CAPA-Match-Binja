{
  "address": "0x8de00",
  "rules": [
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "log keystrokes via raw input data/4762f396f48d4e318a08125296476d20",
    "contain loop",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     esi, 0x2f",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x8",
    "call    strrchr",
    "test    rax, rax",
    "je      0x8de2b",
    "movzx   edx, byte [r12]",
    "mov     rax, r12",
    "cmp     dl, 0x2e",
    "je      0x8deb1",
    "movzx   edx, byte [rax+0x1]",
    "test    dl, dl",
    "jne     0x8dea8",
    "movzx   edx, byte [rax+0x1]",
    "test    dl, dl",
    "je      0x8de95",
    "lea     rax, [rel extended_glob]",
    "lea     rdx, [rel glob_ignore_case]",
    "mov     rbx, qword [rel data_159968]",
    "cmp     dword [rax], 0x1",
    "mov     edx, dword [rdx]",
    "sbb     eax, eax",
    "xor     r13d, r13d",
    "mov     rdi, qword [rbx]",
    "and     eax, 0xffffffe0",
    "add     eax, 0x21",
    "test    edx, edx",
    "setne   r13b",
    "shl     r13d, 0x4",
    "or      r13d, eax",
    "test    rdi, rdi",
    "jne     0x8de85",
    "add     rax, 0x1",
    "cmp     dl, 0x2e",
    "jne     0x8de38",
    "add     rsp, 0x8",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "cmp     dl, 0x2e",
    "jne     0x8de38",
    "mov     edx, r13d",
    "mov     rsi, r12",
    "call    xstrmatch",
    "cmp     eax, 0x1",
    "je      0x8de78",
    "jmp     0x8ded0",
    "cmp     byte [rax+0x2], 0x0",
    "jne     0x8de38",
    "mov     rdi, qword [rbx+0x10]",
    "add     rbx, 0x10",
    "test    rdi, rdi",
    "je      0x8ded0",
    "add     rsp, 0x8",
    "mov     eax, 0x1",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "jmp     0x8de95"
  ]
}
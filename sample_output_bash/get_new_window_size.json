{
  "address": "0xdd3a0",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using RC4 KSA/89b7ba675fcb4f4eac2317f83c0a9436"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r12",
    "mov     r12, rdx",
    "push    rbx",
    "mov     rbx, rsi",
    "sub     rsp, 0x10",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x18], rax",
    "lea     rax, [rel shell_tty]",
    "mov     edi, dword [rax]",
    "cmp     edi, 0xffffffff",
    "je      0xdd470",
    "mov     rax, qword [rel stderr]",
    "mov     rdi, qword [rax]",
    "call    fileno",
    "mov     edi, eax",
    "jmp     0xdd3d4",
    "test    edi, edi",
    "jns     0xdd3f8",
    "xor     eax, eax",
    "lea     rdx, [rbp-0x20]",
    "mov     esi, 0x5413",
    "call    ioctl",
    "test    eax, eax",
    "jne     0xdd3d8",
    "mov     rax, qword [rbp-0x18]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xdd49f",
    "movzx   edi, word [rbp-0x20]",
    "test    di, di",
    "je      0xdd3d8",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x10",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "movzx   esi, word [rbp-0x1e]",
    "test    si, si",
    "je      0xdd3d8",
    "call    sh_set_lines_and_columns",
    "lea     rax, [rel interactive_shell]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0xdd490",
    "lea     rax, [rel bash_readline_initialized]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xdd44a",
    "lea     rax, [rel no_line_editing]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xdd490",
    "test    rbx, rbx",
    "je      0xdd455",
    "jmp     0xdd43d",
    "movzx   esi, word [rbp-0x1e]",
    "movzx   edi, word [rbp-0x20]",
    "call    _rl_set_screen_size",
    "test    r12, r12",
    "je      0xdd3d8",
    "movzx   eax, word [rbp-0x20]",
    "mov     dword [rbx], eax",
    "movzx   eax, word [rbp-0x1e]",
    "mov     dword [r12], eax",
    "jmp     0xdd3d8"
  ]
}
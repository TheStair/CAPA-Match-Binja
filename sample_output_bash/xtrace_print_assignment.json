{
  "address": "0x45800",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "write file on Linux"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "mov     r14d, edx",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "mov     r12, rsi",
    "push    rbx",
    "lea     rbx, [rel xtrace_fp]",
    "mov     rax, qword [rbx]",
    "test    rax, rax",
    "je      0x45898",
    "mov     rax, qword [rel stderr]",
    "mov     rax, qword [rax]",
    "jmp     0x45827",
    "mov     qword [rbx], rax",
    "test    ecx, ecx",
    "jne     0x45880",
    "call    indirection_level_string",
    "mov     rsi, qword [rbx]",
    "mov     rdi, rax",
    "call    fputs",
    "jmp     0x4582e",
    "cmp     byte [r12], 0x0",
    "je      0x45870",
    "test    r14d, r14d",
    "jne     0x4583a",
    "test    r14d, r14d",
    "je      0x458a8",
    "mov     rdi, qword [rbx]",
    "mov     r8, r12",
    "mov     rcx, r13",
    "lea     rdx, [rel data_11fb1a]  {\"%s=(%s)\\n\"}",
    "mov     esi, 0x2",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "jmp     0x45919",
    "mov     rdi, r12",
    "call    sh_contains_shell_metas",
    "mov     rdi, r12",
    "test    eax, eax",
    "je      0x45910",
    "mov     rdi, qword [rbx]",
    "mov     r8, r12",
    "mov     rcx, r13",
    "lea     rdx, [rel data_1218fe[6]]  {\"%s=%s\\n\"}",
    "mov     esi, 0x2",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "jmp     0x45856",
    "call    ansic_shouldquote",
    "test    eax, eax",
    "jne     0x45940",
    "call    sh_single_quote",
    "mov     r14, rax",
    "test    rax, rax",
    "setne   al",
    "cmp     r12, r14",
    "setne   dl",
    "and     eax, edx",
    "mov     r12d, eax",
    "mov     rdi, qword [rbx]",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "jmp     fflush",
    "cmp     byte [r12], 0x0",
    "je      0x45969",
    "mov     rdi, r14",
    "call    free",
    "mov     rdi, qword [rbx]",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "jmp     fflush",
    "xor     r12d, r12d",
    "jmp     0x45919",
    "xor     esi, esi",
    "mov     rdi, r12",
    "call    sub_d80c0",
    "cmp     r12, rax",
    "mov     r14, rax",
    "setne   r12b",
    "test    rax, rax",
    "setne   al",
    "and     r12d, eax",
    "jmp     0x458d0",
    "mov     rdi, qword [rbx]",
    "xor     eax, eax",
    "mov     r8, r14",
    "mov     rcx, r13",
    "lea     rdx, [rel data_1218fe[6]]  {\"%s=%s\\n\"}",
    "mov     esi, 0x2",
    "call    __fprintf_chk",
    "test    r12b, r12b",
    "je      0x45856"
  ]
}
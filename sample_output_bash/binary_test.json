{
  "address": "0x901d0",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "hash data using djb2/8952edc10f1448bdba19a64c9f144796",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using RC4 KSA/89b7ba675fcb4f4eac2317f83c0a9436",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "hash data using jshash/a755d430eadb46a9b4c9d318a1fcf472",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b",
    "parse credit card information/0de73c67bdda475293f0af787196471d"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     r8, rdx",
    "mov     edx, ecx",
    "mov     r9, rsi",
    "and     edx, 0x1",
    "mov     rbp, rsp",
    "push    rbx",
    "sub     rsp, 0x8",
    "movzx   ebx, byte [rdi]",
    "movzx   eax, byte [rdi+0x1]",
    "cmp     bl, 0x3d",
    "je      0x902a0",
    "test    al, al",
    "je      0x90320",
    "mov     esi, ebx",
    "and     esi, 0xfffffffd",
    "cmp     sil, 0x3c",
    "jne     0x90248",
    "test    edx, edx",
    "jne     0x903d0",
    "cmp     al, 0x3d",
    "jne     0x90251",
    "cmp     bl, 0x21",
    "jne     0x90251",
    "test    al, al",
    "jne     0x90251",
    "test    r9, r9",
    "je      0x902ae",
    "movzx   eax, byte [r8]",
    "cmp     byte [r9], al",
    "jne     0x90239",
    "movzx   esi, byte [rdi+0x2]",
    "cmp     sil, 0x74",
    "je      0x90350",
    "cmp     byte [rdi+0x2], 0x0",
    "je      0x90320",
    "cmp     al, 0x3d",
    "je      0x902c0",
    "lea     rax, [rel shell_compatibility_level]",
    "mov     rsi, r8",
    "mov     rdi, r9",
    "cmp     dword [rax], 0x28",
    "jle     0x90300",
    "xor     edx, edx",
    "mov     rbx, qword [rbp-0x8]",
    "leave   ",
    "mov     eax, edx",
    "retn    ",
    "test    r8, r8",
    "je      0x902ae",
    "mov     rbx, qword [rbp-0x8]",
    "mov     eax, edx",
    "leave   ",
    "retn    ",
    "mov     rsi, r8",
    "mov     rdi, r9",
    "call    strcmp",
    "xor     edx, edx",
    "test    eax, eax",
    "sete    dl",
    "jmp     0x90239",
    "cmp     al, 0x6e",
    "je      0x90438",
    "cmp     al, 0x65",
    "je      0x90370",
    "cmp     byte [rdi+0x2], 0x0",
    "jne     0x902ae",
    "call    strcmp",
    "mov     edx, eax",
    "shr     edx, 0x1f",
    "cmp     bl, 0x3e",
    "jne     0x90239",
    "and     ecx, 0x4",
    "je      0x90300",
    "lea     rax, [rel match_ignore_case]",
    "xor     edx, edx",
    "mov     esi, dword [rax]",
    "lea     rax, [rel extended_glob]",
    "test    esi, esi",
    "mov     edi, dword [rax]",
    "mov     rsi, r9",
    "setne   dl",
    "xor     eax, eax",
    "shl     edx, 0x4",
    "test    edi, edi",
    "mov     rdi, r8",
    "setne   al",
    "shl     eax, 0x5",
    "or      edx, eax",
    "call    xstrmatch",
    "xor     edx, edx",
    "test    eax, eax",
    "sete    dl",
    "jmp     0x90239",
    "xor     edx, edx",
    "jmp     0x9039d",
    "jg      0x90390",
    "cmp     sil, 0x66",
    "je      0x90428",
    "xor     edx, edx",
    "cmp     sil, 0x65",
    "jne     0x90239",
    "test    edx, edx",
    "jne     0x9044a",
    "xor     edx, edx",
    "test    eax, eax",
    "setg    dl",
    "jmp     0x90239",
    "call    strcoll",
    "mov     edx, eax",
    "shr     edx, 0x1f",
    "cmp     bl, 0x3e",
    "je      0x90313",
    "mov     rbx, qword [rbp-0x8]",
    "mov     rsi, r8",
    "mov     rdi, r9",
    "leave   ",
    "jmp     sub_8fee0",
    "mov     edx, 0x1",
    "cmp     al, 0x6f",
    "jne     0x902ae",
    "cmp     al, 0x67",
    "je      0x903b0",
    "mov     edx, 0x2",
    "jmp     0x9039d",
    "xor     edx, edx",
    "cmp     sil, 0x71",
    "je      0x90288",
    "cmp     al, 0x6c",
    "je      0x903c0",
    "test    r9, r9",
    "je      0x90239",
    "movzx   eax, byte [r8]",
    "mov     edx, 0x1",
    "cmp     byte [r9], al",
    "jne     0x90239",
    "mov     edx, 0x3",
    "jmp     0x90288",
    "cmp     al, 0x6c",
    "jne     0x902ae",
    "mov     rbx, qword [rbp-0x8]",
    "mov     rsi, r8",
    "mov     rdi, r9",
    "leave   ",
    "jmp     sub_90060",
    "jmp     0x90239",
    "mov     edx, 0x4",
    "jmp     0x90288",
    "cmp     al, 0x6e",
    "je      0x90440",
    "test    r8, r8",
    "je      0x90239",
    "mov     rsi, r8",
    "mov     rdi, r9",
    "call    strcmp",
    "xor     edx, edx",
    "test    eax, eax",
    "setne   dl",
    "jmp     0x90239",
    "mov     edx, 0x2",
    "jmp     0x90288",
    "mov     edx, 0x1",
    "jmp     0x90288",
    "cmp     al, 0x67",
    "jne     0x90239",
    "lea     rax, [rel match_ignore_case]",
    "xor     edx, edx",
    "mov     rsi, r9",
    "mov     rdi, r8",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "lea     rax, [rel extended_glob]",
    "setne   dl",
    "mov     ecx, dword [rax]",
    "shl     edx, 0x4",
    "xor     eax, eax",
    "test    ecx, ecx",
    "setne   al",
    "shl     eax, 0x5",
    "or      edx, eax",
    "call    xstrmatch",
    "xor     edx, edx",
    "test    eax, eax",
    "setne   dl",
    "jmp     0x90239",
    "mov     edx, 0x5"
  ]
}
{
  "address": "0x102170",
  "rules": [
    "encrypt data using RC4 KSA/89b7ba675fcb4f4eac2317f83c0a9436",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "lea     rdx, [rbp-0x40]",
    "push    r13",
    "mov     r13d, esi",
    "mov     esi, 0x5413",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    ioctl",
    "test    eax, eax",
    "je      0x102370",
    "movzx   ebx, word [rbp-0x3e]",
    "movzx   edi, word [rbp-0x40]",
    "test    r13d, r13d",
    "je      0x1023c8",
    "test    r13d, r13d",
    "je      0x102288",
    "lea     rax, [rel rl_prefer_env_winsize]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "jne     0x102438",
    "lea     r12, [rel _rl_screenwidth]",
    "lea     r15, [rel _rl_screenheight]",
    "mov     dword [r12], ebx",
    "mov     dword [r15], edi",
    "test    ebx, ebx",
    "je      0x1024c8",
    "lea     rax, [rel rl_prefer_env_winsize]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x102408",
    "lea     r15, [rel _rl_screenheight]",
    "lea     r12, [rel _rl_screenwidth]",
    "mov     ebx, 0xffffffff",
    "mov     r14d, 0xffffffff",
    "mov     dword [r15], 0xffffffff",
    "mov     r14d, edi",
    "jmp     0x1022a4",
    "lea     r12, [rel _rl_screenwidth]",
    "lea     r15, [rel _rl_screenheight]",
    "mov     dword [r12], ebx",
    "mov     dword [r15], edi",
    "test    ebx, ebx",
    "je      0x1024fb",
    "mov     r14d, edi",
    "jmp     0x1021d6",
    "test    edi, edi",
    "je      0x102214",
    "lea     r12, [rel _rl_screenwidth]",
    "lea     r15, [rel _rl_screenheight]",
    "mov     ebx, 0xffffffff",
    "mov     r14d, 0xffffffff",
    "mov     dword [r12], 0xffffffff",
    "mov     dword [r15], 0xffffffff",
    "jmp     0x1022c1",
    "mov     ebx, 0xffffffff",
    "mov     r14d, 0xffffffff",
    "mov     edi, dword [r15]",
    "test    edi, edi",
    "jg      0x10230f",
    "lea     rdi, [rel data_122df4]",
    "call    tgetnum",
    "mov     dword [r12], eax",
    "lea     r15, [rel _rl_screenheight]",
    "lea     r12, [rel _rl_screenwidth]",
    "mov     dword [r15], 0xffffffff",
    "mov     dword [r12], 0xffffffff",
    "mov     r14d, edi",
    "jmp     0x1022c1",
    "test    edi, edi",
    "je      0x102440",
    "mov     dword [r12], ebx",
    "cmp     qword [rel data_16aaf8], 0x0",
    "je      0x102488",
    "mov     ebx, dword [r12]",
    "cmp     ebx, 0x1",
    "jg      0x10231c",
    "lea     rdi, [rel data_11fb48]  {\"COLUMNS\"}",
    "call    find_variable",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x1024b0",
    "mov     edx, dword [r12]",
    "jmp     0x1022fc",
    "call    get_variable_value",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x1024b0",
    "mov     ebx, dword [r12]",
    "cmp     ebx, 0x1",
    "jle     0x1023b0",
    "test    r13d, r13d",
    "je      0x102443",
    "xor     r14d, r14d",
    "cmp     ebx, 0x1",
    "jne     0x10231c",
    "mov     ebx, dword [r12]",
    "cmp     ebx, 0x1",
    "jg      0x102251",
    "lea     rdi, [rel data_122df7]",
    "call    tgetnum",
    "mov     ebx, dword [r12]",
    "mov     dword [r15], eax",
    "mov     edi, eax",
    "cmp     ebx, 0x1",
    "jg      0x102249",
    "lea     rax, [rel rl_change_environment]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x10226e",
    "nop     ",
    "test    edx, edx",
    "jle     0x1024ea",
    "mov     edx, 0xa",
    "xor     esi, esi",
    "call    __isoc23_strtol",
    "mov     dword [r12], eax",
    "mov     edx, eax",
    "mov     dword [r12], 0x50",
    "mov     ebx, 0x50",
    "jmp     0x10231c",
    "lea     rdi, [rel data_12013f]  {\"LINES\"}",
    "call    find_variable",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x1024c0",
    "mov     dword [r15], r14d",
    "test    r14d, r14d",
    "jg      0x1024d5",
    "mov     edi, dword [r15]",
    "jmp     0x102475",
    "call    get_variable_value",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x1024c0",
    "jmp     0x1023b0",
    "lea     rax, [rel rl_change_environment]",
    "mov     dword [r15], 0x18",
    "mov     edi, 0x18",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0x10232d",
    "mov     dword [r12], 0x50",
    "mov     ebx, 0x50",
    "jmp     0x102251",
    "test    edi, edi",
    "jg      0x10231c",
    "mov     dword [r12], 0x50",
    "mov     ebx, 0x50",
    "mov     esi, ebx",
    "call    sh_set_lines_and_columns",
    "mov     ebx, dword [r12]",
    "mov     edi, dword [r15]",
    "jmp     0x10232d",
    "lea     rax, [rel _rl_term_autowrap]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x102341",
    "mov     dword [r12], ebx",
    "test    ebx, ebx",
    "jle     0x1021da",
    "mov     edi, dword [r15]",
    "test    edi, edi",
    "jle     0x102443",
    "mov     ebx, dword [r12]",
    "mov     edi, r14d",
    "cmp     ebx, 0x1",
    "jg      0x10231c",
    "test    edi, edi",
    "jg      0x10230f",
    "mov     edx, 0xa",
    "xor     esi, esi",
    "call    __isoc23_strtol",
    "mov     dword [r15], eax",
    "mov     edi, eax",
    "imul    edi, ebx",
    "lea     rax, [rel _rl_screenchars]",
    "mov     dword [rax], edi",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x1024d0",
    "sub     ebx, 0x1",
    "mov     dword [r12], ebx",
    "cmp     qword [rel data_16aaf8], 0x0",
    "je      0x1021f4",
    "jmp     0x1021f4",
    "jmp     0x1023b0",
    "jmp     0x102208",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    "
  ]
}
{
  "address": "0xee140",
  "rules": [
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "contain loop",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using Curve25519/71854cb5ec3d414da844548a1a695b22",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "endbr64 ",
    "mov     r8, rsi",
    "mov     rax, rdx",
    "mov     r10, rcx",
    "test    rdx, rdx",
    "je      0xee1c0",
    "lea     rax, [rel _rl_keymap]",
    "mov     rax, qword [rax]",
    "jmp     0xee152",
    "test    rdi, rdi",
    "je      0xee201",
    "xor     eax, eax",
    "retn    ",
    "test    r8, r8",
    "je      0xee201",
    "lea     rdx, [rel _rl_convert_meta_chars_to_ascii]",
    "mov     r9d, dword [rdx]",
    "xor     edx, edx",
    "jmp     0xee198",
    "movzx   ecx, byte [rdi+rdx]",
    "test    cl, cl",
    "jns     0xee178",
    "movzx   ecx, cl",
    "add     rdx, 0x1",
    "shl     rcx, 0x4",
    "add     rcx, rax",
    "movsx   esi, byte [rcx]",
    "cmp     sil, 0x1",
    "jne     0xee1d0",
    "test    r9d, r9d",
    "je      0xee178",
    "xor     eax, eax",
    "cmp     rdx, r8",
    "jb      0xee1ed",
    "mov     rax, qword [rcx+0x8]",
    "cmp     rdx, r8",
    "je      0xee1e8",
    "movsx   esi, byte [rax+0x1b0]",
    "mov     rax, qword [rax+0x1b8]",
    "cmp     sil, 0x1",
    "jne     0xee1f8",
    "retn    ",
    "test    r10, r10",
    "je      0xee1df",
    "test    r10, r10",
    "jne     0xee1f0",
    "test    r10, r10",
    "je      0xee1ed",
    "and     ecx, 0x7f",
    "jmp     0xee178",
    "mov     rax, qword [rcx+0x8]",
    "retn    ",
    "mov     dword [r10], esi",
    "mov     dword [r10], 0x1",
    "retn    ",
    "mov     dword [r10], esi",
    "retn    "
  ]
}
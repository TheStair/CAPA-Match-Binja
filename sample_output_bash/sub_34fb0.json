{
  "address": "0x34fb0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "mov     r14, rdi",
    "mov     edi, 0x40",
    "push    r13",
    "mov     r13d, esi",
    "push    r12",
    "mov     r12, rdx",
    "push    rbx",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x350ab",
    "mov     esi, 0x40",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_160d90]",
    "movq    xmm2, r12",
    "mov     dword [rbx+0x8], r13d",
    "movq    xmm0, qword [rel data_160958]",
    "mov     dword [rbx+0x3c], 0x0",
    "movq    xmm1, qword [rel data_160950]",
    "mov     qword [rbx+0x30], rax",
    "mov     eax, dword [rel data_1616d4]",
    "punpcklqdq xmm0, xmm2",
    "movhps  xmm1, qword [rel data_160d88]",
    "movups  xmmword [rbx+0x10], xmm0",
    "mov     dword [rbx+0x38], eax",
    "lea     rax, [rel pushed_string_list]",
    "movups  xmmword [rbx+0x20], xmm1",
    "mov     rdx, qword [rax]",
    "test    r12, r12",
    "je      0x35041",
    "mov     qword [rax], rbx",
    "xor     eax, eax",
    "mov     qword [rbx], rdx",
    "mov     qword [rel data_160958], r14",
    "test    r14, r14",
    "je      0x3507b",
    "or      byte [r12+0x10], 0x2",
    "mov     dword [rbx+0x3c], 0x1",
    "pop     rbx",
    "pop     r12",
    "mov     qword [rel data_160d90], rax",
    "pop     r13",
    "pop     r14",
    "mov     qword [rel data_160950], rax",
    "mov     qword [rel data_160d88], 0x0",
    "pop     rbp",
    "mov     dword [rel data_1616d4], 0x0",
    "jmp     sub_44790",
    "cmp     byte [r14], 0x0",
    "je      0x3507b",
    "cmp     byte [r14+0x1], 0x0",
    "mov     eax, 0x1",
    "je      0x3507b",
    "cmp     byte [r14+0x2], 0x0",
    "mov     eax, 0x2",
    "je      0x3507b",
    "mov     rdi, r14",
    "call    strlen"
  ]
}
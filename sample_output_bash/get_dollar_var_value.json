{
  "address": "0x72980",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "cmp     rdi, 0x9",
    "jg      0x729e0",
    "lea     rax, [rel rest_of_args]",
    "mov     rbx, qword [rax]",
    "test    rbx, rbx",
    "je      0x72a0e",
    "lea     rax, [rel dollar_vars]",
    "mov     rbx, qword [rax+rdi*8]",
    "test    rbx, rbx",
    "je      0x72a0e",
    "add     rsp, 0x8",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "lea     rax, [rdi-0xb]",
    "cmp     rdi, 0xa",
    "jne     0x72a06",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x72a5b",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0x72a00",
    "jmp     0x72a20",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "add     rsp, 0x8",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "sub     rax, 0x1",
    "jb      0x72a20",
    "mov     rax, qword [rbx+0x8]",
    "mov     r13, qword [rax]",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x72a71",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "add     rsp, 0x8",
    "mov     rdx, rbx",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "jmp     __strcpy_chk"
  ]
}
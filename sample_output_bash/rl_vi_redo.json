{
  "address": "0xe3a90",
  "rules": [
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     ebx, edi",
    "sub     rsp, 0x8",
    "lea     rax, [rel rl_explicit_arg]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "jne     0xe3ad2",
    "lea     rax, [rel _rl_vi_last_command]",
    "lea     r12, [rel _rl_vi_redoing]",
    "mov     edi, dword [rax]",
    "mov     dword [r12], 0x1",
    "cmp     edi, 0x69",
    "je      0xe3bd0",
    "lea     rax, [rel rl_numeric_arg]",
    "mov     edx, dword [rel data_15a14c]",
    "mov     dword [rax], edx",
    "lea     rax, [rel rl_arg_sign]",
    "mov     edx, dword [rel data_15a148]",
    "mov     dword [rax], edx",
    "mov     rax, qword [rel data_16a640]",
    "test    rax, rax",
    "je      0xe3be8",
    "cmp     edi, 0x52",
    "je      0xe3b80",
    "lea     rax, [rel _rl_keymap]",
    "mov     rsi, qword [rax]",
    "cmp     byte [rax], 0x0",
    "jne     0xe3c20",
    "mov     rax, qword [rel data_16a640]",
    "test    rax, rax",
    "je      0xe3be8",
    "cmp     edi, 0x49",
    "je      0xe3c80",
    "call    rl_begin_undo_group",
    "test    ebx, ebx",
    "je      0xe3c41",
    "nop     dword [rax]",
    "cmp     byte [rax], 0x0",
    "je      0xe3be8",
    "mov     rax, qword [rel data_16a640]",
    "test    rax, rax",
    "je      0xe3be8",
    "cmp     edi, 0x61",
    "jne     0xe3cd0",
    "call    rl_end_undo_group",
    "lea     r13, [rel rl_point]",
    "mov     esi, dword [r13]",
    "test    esi, esi",
    "jle     0xe3b72",
    "nop     dword [rax]",
    "mov     rdi, rax",
    "call    strlen",
    "mov     r14d, eax",
    "call    rl_begin_undo_group",
    "lea     r13, [rel rl_point]",
    "test    ebx, ebx",
    "je      0xe3b61",
    "cmp     byte [rax], 0x0",
    "je      0xe3be8",
    "cmp     edi, 0x41",
    "jne     0xe3d52",
    "mov     rax, qword [rel data_16a640]",
    "test    rax, rax",
    "je      0xe3be8",
    "xor     eax, eax",
    "jmp     0xe3c03",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xe3c75",
    "mov     rdi, qword [rel data_16a640]",
    "call    rl_insert_text",
    "sub     ebx, 0x1",
    "jne     0xe3c30",
    "call    rl_end_undo_group",
    "mov     edx, dword [r13]",
    "test    edx, edx",
    "jg      0xe3c59",
    "nop     dword [rax]",
    "lea     r13, [rel rl_point]",
    "mov     dword [r13], 0x0",
    "call    rl_begin_undo_group",
    "test    ebx, ebx",
    "je      0xe3b61",
    "lea     rax, [rel _rl_keymap]",
    "mov     rsi, qword [rax]",
    "cmp     edi, 0x2e",
    "jne     0xe3bf2",
    "mov     rax, qword [rel data_16a640]",
    "test    rax, rax",
    "je      0xe3be8",
    "cmp     byte [rax], 0x0",
    "je      0xe3be8",
    "mov     dword [r12], 0x0",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "sub     dword [r13], 0x1",
    "xor     eax, eax",
    "jmp     0xe3c03",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xe3d80",
    "mov     esi, dword [r13]",
    "mov     rdi, qword [rel data_16a640]",
    "lea     edx, [r14+rsi-0x1]",
    "call    _rl_replace_text",
    "sub     ebx, 0x1",
    "jne     0xe3bb0",
    "jmp     0xe3b61",
    "nop     dword [rax]",
    "lea     rax, [rel _rl_dispatching_keymap]",
    "xor     edx, edx",
    "mov     qword [rax], rsi",
    "call    _rl_dispatch_subseq",
    "cmp     rsi, qword [rel data_157fb8]",
    "jne     0xe3bf2",
    "cmp     byte [rax], 0x0",
    "je      0xe3be8",
    "lea     r14, [rel rl_end]",
    "lea     r13, [rel rl_point]",
    "mov     eax, dword [r14]",
    "cmp     dword [r13], eax",
    "jl      0xe3d30",
    "lea     rax, [rel rl_line_buffer]",
    "mov     esi, dword [r13]",
    "mov     edx, 0x1",
    "mov     rdi, qword [rax]",
    "call    _rl_find_prev_mbchar_internal",
    "mov     dword [r13], eax",
    "xor     eax, eax",
    "jmp     0xe3c03",
    "mov     rdi, qword [rel data_16a640]",
    "call    rl_insert_text",
    "sub     ebx, 0x1",
    "jne     0xe3cb8",
    "jmp     0xe3b61",
    "call    rl_ding",
    "xor     eax, eax",
    "jmp     0xe3c03",
    "lea     rax, [rel rl_end]",
    "lea     r13, [rel rl_point]",
    "mov     eax, dword [rax]",
    "mov     dword [r13], eax",
    "call    rl_begin_undo_group",
    "test    ebx, ebx",
    "je      0xe3b61",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xe3d48",
    "call    rl_begin_undo_group",
    "test    ebx, ebx",
    "je      0xe3b61",
    "nop     ",
    "add     dword [r13], 0x1",
    "jmp     0xe3b42",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0xe3da3",
    "nop     dword [rax+rax]",
    "mov     rdi, qword [rel data_16a640]",
    "call    rl_insert_text",
    "sub     ebx, 0x1",
    "jne     0xe3d10",
    "jmp     0xe3b61",
    "mov     r15d, dword [r13]",
    "mov     edi, 0x1",
    "call    _rl_forward_char_internal",
    "mov     edx, dword [r14]",
    "mov     dword [r13], eax",
    "cmp     r15d, eax",
    "je      0xe3dc5",
    "mov     rdi, qword [rel data_16a640]",
    "call    rl_insert_text",
    "sub     ebx, 0x1",
    "jne     0xe3b50",
    "mov     dword [r13], edx",
    "jmp     0xe3b42",
    "cmp     eax, edx",
    "jle     0xe3b42"
  ]
}
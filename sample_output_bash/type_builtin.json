{
  "address": "0xc56f0",
  "rules": [
    "encrypt data using RSA via embedded library/8bc479b14953434c9835ec8295d733a3",
    "encrypt data using Curve25519/a423aa5d0923438c8eac88d5abe4fcd5",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "contain loop",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "test    rdi, rdi",
    "je      0xc5930",
    "xor     eax, eax",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdi",
    "push    r14",
    "push    r13",
    "push    r12",
    "lea     r12, [rel data_1203d3]  {\"type\"}",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x18",
    "jmp     0xc5768",
    "mov     rax, qword [r15+0x8]",
    "mov     r14, qword [rax]",
    "cmp     byte [r14], 0x2d",
    "jne     0xc57b0",
    "lea     r15, [rel loptend]",
    "mov     r12d, 0x2",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rel data_168d30], 0x0",
    "lea     r14, [rel data_121979]  {\"afptP\"}",
    "lea     r13, [rel jump_table_137550]",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [r15], 0x0",
    "mov     qword [rax], 0x0",
    "movzx   eax, byte [r14+0x1]",
    "lea     r13, [r14+0x1]",
    "cmp     al, 0x74",
    "jne     0xc5720",
    "mov     r15, qword [r15]",
    "test    r15, r15",
    "je      0xc59c3",
    "cmp     eax, 0xffffff9d",
    "je      0xc5920",
    "cmp     al, 0x2d",
    "je      0xc5830",
    "mov     rsi, r12",
    "mov     rdi, r13",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xc5760",
    "xor     edi, edi",
    "jmp     0xc59b0",
    "mov     r13d, r12d",
    "xor     ebx, ebx",
    "and     r13d, 0x18",
    "jmp     0xc595f",
    "call    builtin_help",
    "jmp     0xc58b5",
    "sub     eax, 0x50",
    "cmp     eax, 0x24",
    "ja      0xc58b0",
    "lea     rsi, [rel data_121968]  {\"-type\"}",
    "mov     rdi, r13",
    "call    strcmp",
    "test    eax, eax",
    "je      0xc5791",
    "cmp     al, 0x70",
    "je      0xc5880",
    "mov     r15, qword [r15]",
    "test    r15, r15",
    "je      0xc57b0",
    "mov     byte [r14+0x1], 0x74",
    "mov     rax, qword [r15+0x8]",
    "mov     rax, qword [rax]",
    "mov     byte [rax+0x2], 0x0",
    "mov     r15, qword [r15]",
    "test    r15, r15",
    "jne     0xc5768",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sh_chkwrite",
    "mov     rax, qword [r15+0x8]",
    "mov     esi, r12d",
    "mov     rdi, qword [rax]",
    "call    describe_command",
    "mov     r14d, eax",
    "or      eax, r13d",
    "jne     0xc5950",
    "add     rsp, 0x18",
    "mov     eax, 0x102",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "{Case 0x1-0x10, 0x12-0x15, 0x17-0x1f, 0x21-0x23}",
    "call    builtin_usage",
    "movsxd  rax, dword [r13+rax*4]",
    "add     rax, r13",
    "jmp     rax",
    "lea     rsi, [rel data_12196e]  {\"-path\"}",
    "mov     rdi, r13",
    "call    strcmp",
    "test    eax, eax",
    "je      0xc5897",
    "lea     rsi, [rel data_12196e[1]]  {\"path\"}",
    "mov     rdi, r13",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xc5760",
    "cmp     al, 0x61",
    "jne     0xc5760",
    "nop     dword [rax]",
    "mov     r15, qword [r15]",
    "cmp     r14d, 0x1",
    "adc     ebx, 0x0",
    "test    r15, r15",
    "je      0xc59a8",
    "mov     rax, qword [r15+0x8]",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11feba]  {\"%s: not found\"}",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x38], rax",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x38]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xc5950",
    "{Case 0x24}",
    "and     r12d, 0xffffffed",
    "or      r12d, 0x8",
    "jmp     0xc57f5",
    "{Case 0x20}",
    "and     r12d, 0xfffffff5",
    "or      r12d, 0x10",
    "jmp     0xc57f5",
    "{Case 0x16}",
    "or      r12d, 0x40",
    "jmp     0xc57f5",
    "{Case 0x11}",
    "or      r12d, 0x1",
    "jmp     0xc57f5",
    "{Case 0x0}",
    "and     r12d, 0xfffffff5",
    "or      r12d, 0x30",
    "jmp     0xc57f5",
    "mov     byte [r14+0x1], 0x70",
    "mov     rax, qword [r15+0x8]",
    "mov     rax, qword [rax]",
    "mov     byte [rax+0x2], 0x0",
    "jmp     0xc5760",
    "lea     rsi, [rel data_121974]  {\"-all\"}",
    "mov     rdi, r13",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xc5760",
    "lea     rsi, [rel data_121974[1]]  {\"all\"}",
    "mov     rdi, r13",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xc5760",
    "xor     edi, edi",
    "test    ebx, ebx",
    "setne   dil",
    "mov     rsi, r14",
    "mov     rdi, rbx",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xc5938",
    "jmp     0xc5747",
    "mov     byte [r14+0x1], 0x61",
    "mov     rax, qword [r15+0x8]",
    "mov     rax, qword [rax]",
    "mov     byte [rax+0x2], 0x0",
    "nop     word [rax+rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
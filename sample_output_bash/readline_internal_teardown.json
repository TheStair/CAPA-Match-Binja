{
  "address": "0xdee60",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12d, edi",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     rax, [rel _rl_caught_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xdf0c8",
    "mov     edi, dword [rax]",
    "call    _rl_signal_handler",
    "jmp     0xdee89",
    "test    r12d, r12d",
    "je      0xdee9c",
    "lea     r13, [rel history_offset]",
    "lea     r14, [rel history_length]",
    "mov     r15d, dword [r13]",
    "mov     eax, dword [r14]",
    "cmp     r15d, eax",
    "je      0xdf0d8",
    "lea     rax, [rel rl_readline_state]",
    "or      qword [rax], 0x8000000",
    "lea     rax, [rel _rl_revert_all_at_newline]",
    "lea     rbx, [rel rl_undo_list]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0xdefcd",
    "mov     rdx, qword [rel data_1688b8]",
    "test    rdx, rdx",
    "je      0xdf0d8",
    "cmp     qword [rbx], 0x0",
    "je      0xdefd8",
    "jmp     0xdf070",
    "movsxd  rcx, r15d",
    "lea     rbx, [rel rl_undo_list]",
    "cmp     qword [rdx+rcx*8], 0x0",
    "je      0xdefbc",
    "mov     esi, dword [rel data_169180]",
    "test    esi, esi",
    "je      0xdeffc",
    "call    rl_free_undo_list",
    "mov     eax, dword [r14]",
    "mov     r15d, dword [r13]",
    "lea     rax, [rel _rl_revert_all_at_newline]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "jne     0xdf070",
    "cmp     qword [rbx], 0x0",
    "je      0xdf058",
    "lea     rax, [rel rl_insert_mode]",
    "mov     dword [rax], 0x1",
    "test    r12d, r12d",
    "jne     0xdf0b0",
    "mov     rdi, qword [rel data_169158]",
    "test    rdi, rdi",
    "je      0xdeffc",
    "test    r15d, r15d",
    "js      0xdefcd",
    "lea     rdx, [rel _rl_revert_all_at_newline]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "je      0xdefd8",
    "mov     r15, qword [rel data_169168]",
    "mov     rdi, r15",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x38], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0xdf161",
    "add     rsp, 0x18",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r13, qword [rel data_169168]",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xdf19c",
    "mov     ecx, dword [rel data_169170]",
    "test    ecx, ecx",
    "jne     0xdf120",
    "cmp     qword [rel data_1688b8], 0x0",
    "je      0xdefcd",
    "jmp     0xdf077",
    "mov     rsi, rdx",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     qword [rbp-0x40], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rcx, rdx",
    "mov     rsi, r15",
    "call    __memcpy_chk",
    "mov     qword [rbp-0x38], rax",
    "nop     word [rax+rax]",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "add     rsp, 0x18",
    "mov     rdx, rbx",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "lea     rdx, [rel _rl_output_character_function]",
    "mov     esi, 0x1",
    "call    tputs",
    "mov     dword [rel data_169170], 0x0",
    "jmp     0xdeffc",
    "mov     dword [r13], r15d",
    "jmp     0xdefcd",
    "mov     dword [r13], eax",
    "call    _rl_revert_previous_lines",
    "cmp     r15d, dword [r14]",
    "jg      0xdefcd",
    "call    rl_do_undo",
    "cmp     qword [rbx], 0x0",
    "jne     0xdef30",
    "lea     rax, [rel rl_editing_mode]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "je      0xdf0f8",
    "lea     rax, [rel rl_mark]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel rl_point]",
    "mov     dword [rax], 0x0",
    "jmp     0xdef4e",
    "mov     edi, dword [r13]",
    "mov     rax, qword [rel data_169168]",
    "test    edi, edi",
    "js      0xdf150",
    "mov     rsi, qword [rbp-0x38]",
    "mov     rdi, rax",
    "call    strcpy",
    "jmp     0xdefb3",
    "cmp     dword [r14], edi",
    "jle     0xdf150",
    "mov     rdi, qword [rbp-0x38]",
    "call    free",
    "xor     edx, edx",
    "mov     rsi, rax",
    "call    sub_1064e0",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xdf140",
    "mov     rax, qword [rel data_169168]",
    "nop     word [rax+rax]",
    "mov     rdi, qword [rax]",
    "test    rdi, rdi",
    "je      0xdef8d",
    "mov     rdi, qword [r15+0x8]",
    "test    rdi, rdi",
    "je      0xdef9b",
    "call    free",
    "mov     rdi, r15",
    "call    free",
    "mov     rsi, qword [rbp-0x38]",
    "mov     rdi, qword [rel data_169168]",
    "call    strcpy",
    "call    free"
  ]
}
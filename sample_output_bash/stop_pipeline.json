{
  "address": "0x654b0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "encrypt data using TEA/6daa315fd3424f3e9ddc04a16106b42a/da8a9bb2a30748daa49fe239ad61edd2",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "decompress data using aPLib/38731ecee1994e99b9627ed54594e559",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "check for kernel debugger via shared user data structure/47a8170337e74f7ca5a6c64253eb43bf",
    "decrypt data using TEA/b2f1d7a7bfa04984a8dca63866a95e23/c44dc1a0c7a84803bfadfa0a28a31b83",
    "encrypt data using XXTEA/8b51ac557ada4334b6544ffbf490740a/5b90c8c385b241e7ab1fa72681f51c3f",
    "get current PID on Linux",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae",
    "encrypt data using AES MixColumns step/6bd9351b483f4ccc8171068b67c48341"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "lea     r12, [rbp-0x240]",
    "push    rbx",
    "lea     rbx, [rbp-0x1c0]",
    "sub     rsp, 0x248",
    "mov     dword [rbp-0x244], edi",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x250], rsi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     rsi, rbx",
    "xor     edi, edi",
    "mov     rdx, r12",
    "call    sigprocmask",
    "lea     rbx, [rel pgrp_pipe]",
    "mov     edi, dword [rbx]",
    "test    edi, edi",
    "js      0x6552e",
    "mov     edi, dword [rbx+0x4]",
    "test    edi, edi",
    "js      0x6553a",
    "call    close",
    "mov     qword [rbx], 0xffffffffffffffff",
    "lea     rbx, [rel js]",
    "mov     r13d, dword [rbx+0x1c]",
    "test    r13d, r13d",
    "je      0x65a00",
    "call    close",
    "mov     edi, 0x40",
    "mov     dword [rbx+0x1c], 0x8",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x65f16",
    "mov     edx, dword [rel data_160908]",
    "test    edx, edx",
    "jne     0x65571",
    "xor     eax, eax",
    "mov     esi, 0x40",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     r15, [rel jobs]",
    "mov     r13d, 0x8",
    "mov     qword [r15], rax",
    "mov     edx, r13d",
    "mov     rdi, r14",
    "xor     esi, esi",
    "shl     rdx, 0x3",
    "call    memset",
    "lea     rax, [rel interactive]",
    "mov     dword [rbx+0x28], 0x0",
    "mov     qword [rbx+0x20], 0x0",
    "mov     r14d, dword [rax]",
    "test    r14d, r14d",
    "jne     0x6585f",
    "lea     rax, [rel interactive]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x65858",
    "call    sub_6aab0",
    "mov     r13d, dword [rbx+0x1c]",
    "test    r13d, r13d",
    "je      0x65a00",
    "mov     rdx, qword [r15]",
    "movsxd  rax, r13d",
    "jmp     0x6587f",
    "jmp     0x6559a",
    "lea     r15, [rel jobs]",
    "mov     r14d, dword [rbx+0x20]",
    "cmp     r14d, 0x1",
    "sbb     r14d, 0xffffffff",
    "cmp     r14d, r13d",
    "jge     0x655c3",
    "cmp     qword [rdx+rax*8-0x8], 0x0",
    "je      0x65870",
    "mov     rdx, qword [r15]",
    "movsxd  rax, r14d",
    "lea     rax, [rdx+rax*8]",
    "jmp     0x655bd",
    "lea     rax, [rel interactive_shell]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x658a0",
    "lea     r15, [rel jobs]",
    "sub     rax, 0x1",
    "mov     r14d, eax",
    "test    eax, eax",
    "je      0x655c3",
    "mov     r14d, eax",
    "lea     rax, [rel interactive_shell]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x655d4",
    "cmp     qword [rax], 0x0",
    "jne     0x655b0",
    "cmp     r14d, r13d",
    "jne     0x655f0",
    "lea     rax, [rel subshell_environment]",
    "mov     r15d, dword [rax]",
    "test    r15d, r15d",
    "jne     0x658a0",
    "nop     dword [rax+rax]",
    "add     r14d, 0x1",
    "add     rax, 0x8",
    "cmp     r14d, r13d",
    "je      0x655c3",
    "lea     rax, [rel the_pipeline]",
    "mov     rdx, qword [rax]",
    "test    rdx, rdx",
    "mov     qword [rbp-0x258], rdx",
    "je      0x65938",
    "cmp     r13d, 0xfff",
    "jle     0x655e7",
    "cmp     r14d, r13d",
    "je      0x658d0",
    "mov     ecx, dword [rbp-0x244]",
    "test    ecx, ecx",
    "je      0x65947",
    "mov     edi, 0x38",
    "call    malloc",
    "mov     rdx, qword [rbp-0x258]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x65e78",
    "mov     r10d, dword [rel data_160908]",
    "test    r10d, r10d",
    "je      0x65b2c",
    "lea     r15, [rel jobs]",
    "lea     eax, [r13+0x8]",
    "mov     rdi, qword [r15]",
    "mov     dword [rbx+0x1c], eax",
    "cdqe    ",
    "lea     r14, [rax*8]",
    "test    rdi, rdi",
    "je      0x65ae0",
    "lea     rax, [rel already_making_children]",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "mov     dword [rax], 0x0",
    "call    sigprocmask",
    "mov     r14d, dword [rbx+0x30]",
    "jmp     0x65829",
    "call    sub_668f0",
    "xor     eax, eax",
    "mov     esi, 0x38",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rdx]",
    "cmp     rax, rdx",
    "je      0x65b10",
    "xor     edi, edi",
    "mov     dword [rbp-0x258], r10d",
    "call    sub_67080",
    "mov     r13d, dword [rbx+0x1c]",
    "mov     r10d, dword [rbp-0x258]",
    "test    r13d, r13d",
    "je      0x65b62",
    "nop     word [rax+rax]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rcx, rax",
    "jmp     0x658ff",
    "mov     rsi, r14",
    "call    realloc",
    "mov     rcx, rax",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x65e33",
    "mov     qword [rdx], 0x0",
    "mov     rsi, rdx",
    "mov     rax, rdx",
    "mov     r13d, 0x1",
    "mov     qword [r15+0x8], rdx",
    "jmp     0x65693",
    "mov     r13d, 0x1",
    "nop     dword [rax]",
    "mov     eax, dword [rbx+0x28]",
    "mov     ecx, eax",
    "lea     edx, [rax+0xe]",
    "add     ecx, 0x7",
    "cmovns  edx, ecx",
    "and     edx, 0xfffffff8",
    "mov     dword [rbp-0x258], edx",
    "test    al, 0x7",
    "je      0x65db0",
    "mov     r11d, dword [rel data_160908]",
    "test    r11d, r11d",
    "jne     0x65b62",
    "test    rcx, rcx",
    "je      0x65ec0",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x258], rcx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     eax, dword [rbx+0x1c]",
    "mov     qword [r15], rcx",
    "cmp     eax, r13d",
    "jle     0x6592d",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x248",
    "mov     eax, r14d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     qword [rax], rsi",
    "lea     rdx, [rel pipeline_pgrp]",
    "lea     rax, [rel the_pipeline]",
    "lea     rcx, [rel shell_pgrp]",
    "mov     qword [rax], 0x0",
    "mov     eax, dword [rdx]",
    "mov     dword [r15+0x10], eax",
    "cmp     eax, dword [rcx]",
    "je      0x656c2",
    "mov     rsi, rax",
    "mov     rax, qword [rax]",
    "add     r13d, 0x1",
    "cmp     rax, rdx",
    "jne     0x65640",
    "mov     qword [rsi], 0x0",
    "mov     rdi, qword [rdx]",
    "test    rdi, rdi",
    "je      0x65ad0",
    "add     dword [rbp-0x258], 0x8",
    "jmp     0x65b95",
    "cdq     ",
    "shr     edx, 0x1d",
    "add     eax, edx",
    "and     eax, 0x7",
    "sub     eax, edx",
    "cmp     eax, 0x4",
    "jg      0x65db0",
    "call    sub_6aab0",
    "mov     r10d, dword [rbp-0x258]",
    "mov     r14d, r13d",
    "jmp     0x655f0",
    "sub     eax, 0x1",
    "lea     rdi, [rcx+r14-0x40]",
    "xor     esi, esi",
    "sub     eax, r13d",
    "lea     rdx, [rax*8+0x8]",
    "call    memset",
    "lea     rax, [rel pipefail_opt]",
    "lea     rcx, [rel job_control]",
    "mov     r8d, dword [rax]",
    "xor     eax, eax",
    "mov     r9d, dword [rcx]",
    "test    r8d, r8d",
    "setne   al",
    "shl     eax, 0x6",
    "mov     dword [r15+0x18], eax",
    "test    r9d, r9d",
    "je      0x656f1",
    "mov     dword [rdx], 0x0",
    "mov     qword [r15+0x8], rax",
    "mov     rsi, rax",
    "jmp     0x65693",
    "mov     qword [rdx], 0x0",
    "jmp     0x65673",
    "lea     r15, [rbp-0x140]",
    "mov     dword [rbp-0x268], r10d",
    "mov     rdi, r15",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, r15",
    "call    sigaddset",
    "lea     rax, [rbp-0xc0]",
    "mov     r14, rax",
    "mov     rdi, rax",
    "mov     qword [rbp-0x260], rax",
    "call    sigemptyset",
    "xor     edi, edi",
    "mov     rdx, r14",
    "mov     rsi, r15",
    "call    sigprocmask",
    "mov     r13d, dword [rbx+0x1c]",
    "mov     eax, dword [rbp-0x258]",
    "mov     r10d, dword [rbp-0x268]",
    "cmp     r13d, eax",
    "je      0x65d9e",
    "mov     rax, rsi",
    "xor     edi, edi",
    "xor     edx, edx",
    "nop     dword [rax+rax]",
    "or      eax, 0x4",
    "mov     dword [r15+0x18], eax",
    "mov     rsi, rdi",
    "mov     rdi, qword [rdi]",
    "mov     qword [rsi], rdx",
    "test    rdi, rdi",
    "jne     0x65670",
    "lea     r15, [rel jobs]",
    "mov     r11, qword [r15]",
    "mov     r9, r11",
    "jmp     0x65c24",
    "movsxd  r15, eax",
    "shl     r15, 0x3",
    "mov     rdi, r15",
    "call    malloc",
    "mov     r10d, dword [rbp-0x268]",
    "test    rax, rax",
    "mov     r11, rax",
    "je      0x65e38",
    "xor     ecx, ecx",
    "cmp     dword [rax+0x10], 0x1",
    "sete    cl",
    "or      edx, ecx",
    "xor     ecx, ecx",
    "cmp     byte [rax+0xc], 0x7f",
    "mov     rax, qword [rax]",
    "sete    cl",
    "or      edi, ecx",
    "cmp     rax, rsi",
    "jne     0x65700",
    "test    edx, edx",
    "jne     0x6572d",
    "mov     rdx, rsi",
    "mov     qword [r15+0x8], rsi",
    "nop     dword [rax]",
    "mov     dword [rbx+0x2c], 0x0",
    "mov     dword [rbx+0xc], 0x0",
    "test    r13d, r13d",
    "jle     0x65e16",
    "mov     qword [rbp-0x268], rax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x248], r10d",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     r15, [rel jobs]",
    "mov     r9, qword [r15]",
    "mov     dword [r15+0x14], edx",
    "lea     rdi, [rel data_11fb41[3]]  {\"PWD\"}",
    "call    find_variable",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x65a68",
    "cmp     edi, 0x1",
    "sbb     edx, edx",
    "and     edx, 0x2",
    "add     edx, 0x2",
    "mov     rax, rdx",
    "mov     rdx, qword [rdx]",
    "test    rdx, rdx",
    "jne     0x65688",
    "xor     edx, edx",
    "mov     r14d, 0xffffffff",
    "mov     r13d, 0xffffffff",
    "jmp     0x65cc7",
    "mov     esi, dword [rbx+0x30]",
    "mov     qword [rbp-0x268], r12",
    "movsxd  r8, r13d",
    "xor     edx, edx",
    "mov     ecx, dword [rbx+0x34]",
    "xor     eax, eax",
    "mov     r14d, 0xffffffff",
    "mov     r13d, 0xffffffff",
    "mov     r12d, esi",
    "jmp     0x65c6c",
    "lea     rdi, [rel data_1203b1]  {\"job-working-directory\"}",
    "call    get_working_directory",
    "test    rax, rax",
    "jne     0x6579e",
    "call    get_variable_value",
    "test    rax, rax",
    "je      0x65a68",
    "mov     eax, dword [rbp-0x258]",
    "mov     dword [rbx+0x24], 0x0",
    "mov     dword [rbx+0x20], r10d",
    "mov     dword [rbx+0x28], edx",
    "mov     dword [rbx+0x1c], eax",
    "cmp     eax, edx",
    "jle     0x65d22",
    "mov     rsi, qword [r9+rax*8]",
    "test    rsi, rsi",
    "je      0x65c63",
    "lea     rdx, [rel jobs]",
    "cmp     dword [r15+0x14], 0x4",
    "mov     qword [r15], rax",
    "mov     rax, qword [rbp-0x250]",
    "mov     qword [r15+0x28], 0x0",
    "mov     rdx, qword [rdx]",
    "mov     qword [r15+0x30], 0x0",
    "mov     qword [r15+0x20], rax",
    "movsxd  rax, r14d",
    "mov     qword [rdx+rax*8], r15",
    "mov     eax, dword [r15+0x18]",
    "je      0x65ab8",
    "mov     edi, 0xa",
    "call    malloc",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0x65e9a",
    "mov     rdi, rax",
    "mov     qword [rbp-0x260], rax",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x258], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x258]",
    "mov     r10, qword [rbp-0x260]",
    "test    rax, rax",
    "mov     r11, rax",
    "je      0x65ee4",
    "cmp     r11, r9",
    "je      0x65d40",
    "mov     eax, dword [rbp-0x258]",
    "xor     esi, esi",
    "mov     qword [rbp-0x268], r9",
    "mov     qword [rbp-0x258], r11",
    "sub     eax, 0x1",
    "sub     eax, edx",
    "movsxd  rdx, edx",
    "lea     rax, [rax*8+0x8]",
    "lea     rdi, [r11+rdx*8]",
    "mov     rdx, rax",
    "call    memset",
    "mov     r11, qword [rbp-0x258]",
    "mov     r9, qword [rbp-0x268]",
    "add     rax, 0x1",
    "cmp     rax, r8",
    "je      0x65cb0",
    "cmp     r12d, eax",
    "movsxd  rdi, edx",
    "cmove   r13d, edx",
    "cmp     ecx, eax",
    "mov     qword [r11+rdi*8], rsi",
    "cmove   r14d, edx",
    "cmp     dword [rsi+0x14], 0x4",
    "jne     0x65c60",
    "test    al, 0x1",
    "jne     0x65af0",
    "mov     esi, dword [rbp-0x244]",
    "add     dword [rbx+0x10], r13d",
    "add     dword [rbx+0x28], 0x1",
    "mov     dword [rbx+0x20], r14d",
    "mov     qword [rbx+0x38], r15",
    "test    esi, esi",
    "je      0x65970",
    "mov     qword [rbp-0x258], rax",
    "mov     esi, 0xa",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, 0x6e776f6e6b6e753c",
    "mov     edi, 0x3e",
    "mov     qword [rdx], rax",
    "mov     rax, rdx",
    "mov     word [rdx+0x8], di",
    "jmp     0x6579e",
    "mov     qword [rbp-0x268], rax",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r10",
    "mov     rdi, r11",
    "call    __strcpy_chk",
    "cmp     r13d, 0xffffffff",
    "je      0x65dbc",
    "mov     rdi, r9",
    "mov     qword [rbp-0x258], r11",
    "call    free",
    "mov     r11, qword [rbp-0x258]",
    "mov     qword [r15], r11",
    "test    edx, edx",
    "mov     r10d, 0x1",
    "mov     r12, qword [rbp-0x268]",
    "cmovg   r10d, edx",
    "sub     r10d, 0x1",
    "add     edx, 0x1",
    "add     dword [rbx+0x2c], 0x1",
    "mov     r10, qword [rsi+0x8]",
    "xor     edi, edi",
    "mov     rsi, r10",
    "nop     dword [rax]",
    "mov     edi, r14d",
    "call    sub_688e0",
    "cmp     dword [r15+0x14], 0x4",
    "mov     eax, dword [r15+0x18]",
    "je      0x65abc",
    "add     dword [rbx+0xc], r13d",
    "add     dword [rbx+0x2c], 0x1",
    "jmp     0x657dc",
    "or      eax, 0x1",
    "mov     dword [r15+0x18], eax",
    "lea     rax, [rel job_control]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x6580d",
    "and     eax, 0xfffffffe",
    "mov     qword [rbx+0x40], r15",
    "or      eax, 0x20",
    "mov     dword [r15+0x18], eax",
    "call    sub_668f0",
    "mov     r13d, dword [rbx+0x30]",
    "cmp     r14d, 0xffffffff",
    "je      0x65dd2",
    "mov     dword [rbx+0x30], r13d",
    "cmp     r14d, 0xffffffff",
    "je      0x65dd8",
    "mov     rsi, qword [rsi]",
    "add     edi, 0x1",
    "cmp     r10, rsi",
    "jne     0x65ca0",
    "add     dword [rbx+0xc], edi",
    "jmp     0x65c60",
    "jmp     0x657dc",
    "lea     rax, [rel already_making_children]",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "mov     dword [rax], 0x0",
    "call    sigprocmask",
    "mov     ebx, dword [r15+0x10]",
    "test    ebx, ebx",
    "je      0x6580d",
    "cmp     r13d, 0xffffffff",
    "je      0x65d67",
    "mov     dword [rbx+0x34], r14d",
    "cmp     r13d, 0xffffffff",
    "je      0x65d67",
    "mov     r14d, dword [rbx+0x34]",
    "cmp     r14d, 0xffffffff",
    "je      0x65d67",
    "mov     dword [rbx+0x34], r14d",
    "lea     rax, [rel subshell_environment]",
    "test    byte [rax], 0x1",
    "jne     0x6580d",
    "call    sub_668f0",
    "jmp     0x65d58",
    "jmp     0x65d58",
    "mov     rsi, qword [rbp-0x260]",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "mov     r14d, dword [rbx+0x20]",
    "test    r14d, r14d",
    "jne     0x65d91",
    "lea     rax, [rel running_in_background]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x6580d",
    "add     r14d, 0x1",
    "mov     rax, qword [r15]",
    "cmp     qword [rax], 0x0",
    "je      0x65d95",
    "cmp     r13d, r14d",
    "mov     ecx, r14d",
    "cmovge  ecx, r13d",
    "cmp     dword [rbx+0x20], ecx",
    "jge     0x65d6c",
    "lea     rax, [rel shell_pgrp]",
    "mov     r15d, dword [rax]",
    "lea     rax, [rel shell_tty]",
    "mov     edi, dword [rax]",
    "call    tcgetpgrp",
    "mov     r13d, eax",
    "test    eax, eax",
    "js      0x65df0",
    "mov     r13d, dword [rbx+0x1c]",
    "jmp     0x655e7",
    "call    __errno_location",
    "cmp     dword [rax], 0x19",
    "jne     0x659d8",
    "cmp     ebx, r13d",
    "je      0x65e08",
    "jmp     0x6580d",
    "lea     rax, [rel terminal_pgrp]",
    "mov     dword [rax], ebx",
    "jmp     0x6580d",
    "cmp     r15d, r13d",
    "jne     0x65e29",
    "call    getpid",
    "jmp     0x6580d",
    "xor     esi, esi",
    "mov     edi, ebx",
    "call    give_terminal_to",
    "jmp     0x6580d"
  ]
}
{
  "address": "0xdb250",
  "rules": [
    "encrypt data using RC4 KSA/0769a6a7ec424e51849f265ee4bbaa36",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "contain loop",
    "encrypt data using HC-128/b1c1ea69b13249e5afc63fdf1fccf5df",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x1000",
    "or      qword [rsp], 0x0",
    "sub     rsp, 0x38",
    "mov     dword [rbp-0x1044], edi",
    "mov     edi, 0x1000",
    "mov     qword [rbp-0x1058], rsi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xdb48d",
    "mov     esi, 0x1000",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "xor     ebx, ebx",
    "mov     r15d, 0x1000",
    "lea     r13, [rbp-0x1040]",
    "jmp     0xdb2d4",
    "mov     edi, dword [rbp-0x1044]",
    "mov     edx, 0x1000",
    "mov     rsi, r13",
    "call    zread",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0xdb3a8",
    "lea     rax, [rbx+0x1]",
    "cmp     rax, r15",
    "jb      0xdb3fc",
    "js      0xdb418",
    "mov     rax, qword [rbp-0x1058]",
    "mov     byte [r12+rbx], 0x0",
    "test    rax, rax",
    "je      0xdb459",
    "mov     rdx, rax",
    "sub     rdx, r15",
    "sub     r15, 0xffffffffffffff80",
    "shr     rdx, 0x7",
    "and     edx, 0x1",
    "cmp     rax, r15",
    "jb      0xdb3e4",
    "mov     rdi, r12",
    "call    free",
    "mov     rax, qword [rbp-0x1058]",
    "test    rax, rax",
    "je      0xdb433",
    "lea     r14, [rax+rbx]",
    "cmp     r14, r15",
    "jb      0xdb2b8",
    "mov     rdi, r12",
    "call    free",
    "mov     eax, ebx",
    "jmp     0xdb438",
    "mov     qword [rax], r12",
    "mov     eax, ebx",
    "jmp     0xdb438",
    "test    r12, r12",
    "je      0xdb465",
    "test    rdx, rdx",
    "je      0xdb3d8",
    "mov     eax, 0xffffffff",
    "mov     qword [rax], 0x0",
    "cmp     r15, rbx",
    "mov     rcx, rbx",
    "lea     rdi, [r12+rbx]",
    "mov     rsi, r13",
    "cmovae  rcx, r15",
    "sub     rcx, rbx",
    "mov     rbx, r14",
    "call    __memcpy_chk",
    "mov     rax, r14",
    "sub     rax, r15",
    "add     r15, 0x1000",
    "shr     rax, 0xc",
    "and     eax, 0x1",
    "cmp     r14, r15",
    "jb      0xdb33c",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xdb488",
    "mov     rdi, r15",
    "call    malloc",
    "mov     r12, rax",
    "jmp     0xdb3f7",
    "mov     rdi, r12",
    "mov     rsi, r15",
    "call    realloc",
    "mov     r12, rax",
    "add     r15, 0x100",
    "cmp     rax, r15",
    "jae     0xdb3d8",
    "sub     r15, 0xffffffffffffff80",
    "cmp     rax, r15",
    "jb      0xdb3e4",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x1038",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     qword [rbp-0x1050], rdx",
    "test    r12, r12",
    "je      0xdb390",
    "test    rax, rax",
    "je      0xdb330",
    "test    r12, r12",
    "je      0xdb472",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "nop     dword [rax]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rdx, qword [rbp-0x1050]",
    "mov     r12, rax",
    "jmp     0xdb35d",
    "mov     rdi, r12",
    "mov     rsi, r15",
    "call    realloc",
    "mov     rdx, qword [rbp-0x1050]",
    "mov     r12, rax",
    "add     r15, 0x2000",
    "cmp     r14, r15",
    "jae     0xdb330",
    "add     r15, 0x1000",
    "cmp     r14, r15",
    "jb      0xdb33c",
    "test    r12, r12",
    "jne     0xdb2b8",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x1050], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "nop     dword [rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
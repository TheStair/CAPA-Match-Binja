{
  "address": "0x83630",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/2602c80a9b3846b9ae92e2e83b13e866",
    "log keystrokes via raw input data/5b32ff98460e406e86dc2ef8d82ba1a5",
    "contain loop",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/bee29d5f30484915bb6e92fdf1038d2c",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "encrypt data using RC4 KSA/0769a6a7ec424e51849f265ee4bbaa36",
    "encrypt data using RSA via embedded library/8bc479b14953434c9835ec8295d733a3",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/9710d9ee76a4466b954966f2a98c40ba",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/85d53756af1244948e9b515ea3abe5ce",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/4f0637c1ae9b445ca3ec93a4b4e0bb6d",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/af1fc90a7adf4a2ea648cfac1c599984",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "encrypt data using HC-128/b1c1ea69b13249e5afc63fdf1fccf5df",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "decompress data using aPLib/54aa508e15f34aa5847662ea1b5aeb9c",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "push    r14 {__saved_r14}",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0xa8",
    "mov     qword [rbp-0x68 {bytes_10}], rdi",
    "mov     r12, qword [rdi]",
    "mov     dword [rbp-0x70 {var_78}], esi",
    "mov     dword [rbp-0x78 {var_80}], edx",
    "mov     qword [rbp-0x90 {var_98}], rcx",
    "mov     qword [rbp-0x80 {var_88}], r8",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38 {var_40}], rax",
    "xor     eax, eax  {0x0}",
    "mov     qword [rbp-0x40 {ps.__count} {ps.__value}], 0x0",
    "cmp     byte [r12], 0x22",
    "jne     0x83698",
    "mov     edi, 0x70",
    "call    malloc",
    "mov     r10, rax",
    "test    rax, rax",
    "je      0x85e57",
    "mov     rbx, rdi",
    "lea     rsi, [rel data_11f198]  {\"\"$@\"\"}",
    "mov     rdi, r12",
    "call    strcmp",
    "test    eax, eax",
    "je      0x84838",
    "xor     eax, eax  {0x0}",
    "mov     esi, 0x70",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r10], 0x0",
    "mov     dword [rbp-0x4c {var_54}], 0x0",
    "mov     dword [rbp-0x48 {var_50}], 0x0",
    "cmp     dword [rbx+0x8], 0x3",
    "je      0x84c82",
    "mov     rax, qword [rbp-0x90 {var_98}]",
    "test    rax, rax",
    "je      0x83711",
    "mov     rdi, r12",
    "call    strlen",
    "mov     r10, qword [rbp-0x88 {bytes}]",
    "mov     qword [rbp-0xb8 {var_c0_1}], rax",
    "lea     rax, [rel dollar_vars]",
    "cmp     qword [rax+0x8], 0x0",
    "je      0x84842  {data_161348}",
    "mov     edi, 0x70",
    "call    malloc",
    "mov     r10, rax",
    "test    rax, rax",
    "je      0x85e57",
    "mov     dword [rbp-0x44 {var_4c}], 0x0",
    "xor     r15d, r15d  {0x0}",
    "xor     r14d, r14d  {0x0}",
    "mov     r13, r10",
    "mov     dword [rbp-0xa8 {var_b0_1}], 0xffffffff  {0xffffffff}",
    "mov     ebx, 0x70",
    "mov     dword [rbp-0x9c {var_a4_1}], 0x0",
    "mov     dword [rbp-0x94 {var_9c_1}], 0x0",
    "mov     dword [rbp-0x98 {var_a0_1}], 0x0",
    "mov     dword [rbp-0xbc {var_c4_1}], 0x0",
    "mov     dword [rbp-0xa0 {var_a8_1}], 0x0",
    "nop     word [rax+rax]",
    "mov     dword [rax], 0x0",
    "mov     rax, qword [rbp-0x90 {var_98}]",
    "test    rax, rax",
    "je      0x84ca6",
    "mov     byte [r10], 0x0",
    "mov     dword [rbp-0x4c {var_54}], 0x0",
    "mov     dword [rbp-0x48 {var_50}], 0x0",
    "test    r12, r12",
    "jne     0x836c0",
    "cmp     r8b, 0x7e",
    "jne     0x837d0",
    "test    r8b, r8b",
    "js      0x837d0",
    "mov     rax, qword [rbp-0x80 {var_88}]",
    "test    rax, rax",
    "je      0x84cb5",
    "mov     dword [rax], 0x1",
    "mov     qword [rbp-0x88 {bytes}], r10",
    "call    __ctype_get_mb_cur_max",
    "mov     r10, qword [rbp-0x88 {bytes}]",
    "mov     qword [rbp-0xb8 {var_c0_1}], 0x1",
    "cmp     eax, 0x1",
    "mov     dword [rbp-0xa4 {var_ac_1}], eax",
    "jle     0x836ff",
    "mov     rdi, r10",
    "call    free",
    "{Case 0x2-0x1f, 0x21, 0x23, 0x25-0x26, 0x28-0x39, 0x3b, 0x3f-0x5a, 0x5d-0x5f}",
    "test    byte [rbp-0x70 {var_78}], 0x3",
    "je      0x843f0",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "mov     eax, dword [rax+0x8]",
    "test    byte [rbp-0x94 {var_9c_1}], 0x1",
    "jne     0x84313",
    "cmp     r8b, 0x60",
    "ja      0x837d0",
    "mov     rdi, qword [rel data_166ee0]",
    "test    rdi, rdi",
    "je      0x8545f",
    "mov     dword [rax], 0x1",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "lea     rsp, [rbp-0x28]",
    "mov     rax, r12",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "mov     r11d, dword [rbp-0x78 {var_80}]",
    "test    r11d, r11d",
    "je      0x84e18",
    "add     r15d, 0x1",
    "cmp     dword [rbp-0xa4 {var_ac_1}], 0x1",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "mov     r15d, 0x1",
    "jg      0x83b05",
    "mov     edx, dword [rbp-0x70 {var_78}]",
    "mov     ecx, eax",
    "and     ecx, 0x1000",
    "and     edx, 0x3",
    "or      ecx, edx",
    "mov     dword [rbp-0x94 {var_9c_1}], ecx",
    "jne     0x848e0",
    "test    r15d, r15d",
    "jg      0x848e0",
    "lea     rsi, [rel jump_table_136d88]",
    "movzx   edx, r8b",
    "movsxd  rdx, dword [rsi+rdx*4]",
    "add     rdx, rsi",
    "jmp     rdx",
    "call    list_rest_of_args",
    "mov     rdi, rax",
    "call    sub_77120",
    "mov     rdi, rax",
    "mov     r12, rax",
    "call    copy_word_list",
    "mov     qword [rel data_166ee0], rax",
    "jmp     0x8487b",
    "call    copy_word_list",
    "mov     r12, rax",
    "jmp     0x8487b",
    "lea     rcx, [rel ifs_cmap]",
    "movzx   edx, r10b",
    "cmp     byte [rcx+rdx], 0x0",
    "je      0x843fd",
    "lea     rdx, [rel locale_mb_cur_max]",
    "cmp     dword [rdx], 0x1",
    "jle     0x83840  {locale_mb_cur_max}",
    "mov     eax, dword [rbp-0x44 {var_4c}]",
    "lea     rdi, [rel is_basic_table]",
    "lea     r15d, [rax-0x1]",
    "movsxd  rdx, r15d",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "lea     rsi, [r12+rdx]",
    "movzx   ecx, byte [rsi]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "jne     0x84ac0",
    "lea     rdx, [r14+0x2]",
    "cmp     rdx, rbx",
    "jae     0x839f4",
    "lea     rdx, [rel ifs_cmap]",
    "cmp     byte [rdx+0x7e], 0x0",
    "je      0x84909  {data_16863e}",
    "mov     r15d, 0x2",
    "test    ah, 0x8",
    "jne     0x84343",
    "{Case 0x20}",
    "lea     rdx, [rel ifs_is_null]",
    "mov     edi, dword [rbp-0x9c {var_a4_1}]",
    "or      edi, dword [rdx]  {ifs_is_null}",
    "jne     0x848a9",
    "{Case 0x3c, 0x3e}",
    "lea     eax, [r15+0x1]",
    "mov     dword [rbp-0x44 {var_4c}], eax",
    "cdqe    ",
    "cmp     byte [r12+rax], 0x28",
    "je      0x84490",
    "{Case 0x60}",
    "lea     eax, [r15+0x1]",
    "lea     rsi, [rbp-0x44 {var_4c}]",
    "mov     rdi, r12",
    "mov     dword [rbp-0x54 {var_5c}], r15d",
    "mov     dword [rbp-0x44 {var_4c}], eax",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "lea     rdx, [rel data_122e60]",
    "lea     r15, [rel data_1680a0]",
    "mov     byte [rbp-0xb0 {var_b8}], r8b",
    "mov     eax, dword [rax+0x8]",
    "mov     dword [rbp-0x88 {bytes}], eax",
    "and     eax, 0x8000000",
    "cmp     eax, 0x1",
    "sbb     ecx, ecx",
    "and     ecx, 0xfffffc04",
    "add     ecx, 0x400",
    "call    sub_6d3a0",
    "movzx   r8d, byte [rbp-0xb0 {var_b8}]",
    "cmp     rax, r15",
    "mov     r9, rax",
    "je      0x848c0",
    "{Case 0x5c}",
    "add     rax, 0x1",
    "lea     rsi, [r12+rax]",
    "cmp     byte [rsi], 0xa",
    "je      0x84b60",
    "{Case 0x5b}",
    "test    dword [rbp-0x70 {var_78}], 0x100",
    "jne     0x84540",
    "{Case 0x3d}",
    "mov     rdi, qword [rbp-0x68 {bytes_10}]",
    "mov     edx, dword [rdi+0x8]",
    "test    dh, 0x18",
    "je      0x84778",
    "{Case 0x3a}",
    "mov     rdi, qword [rbp-0x68 {bytes_10}]",
    "mov     ecx, dword [rdi+0x8]",
    "mov     edi, dword [rbp-0x78 {var_80}]",
    "mov     edx, ecx",
    "and     edx, 0x50",
    "or      edx, edi",
    "test    ch, 0x30",
    "je      0x84730",
    "{Case 0x27}",
    "test    byte [rbp-0x70 {var_78}], 0x3",
    "jne     0x83840",
    "{Case 0x24}",
    "mov     rax, qword [rbp-0x80 {var_88}]",
    "test    rax, rax",
    "je      0x83e02",
    "{Case 0x22}",
    "mov     eax, dword [rbp-0x70 {var_78}]",
    "test    al, 0x3",
    "je      0x83fc0",
    "{Case 0x1}",
    "add     r15d, 0x1",
    "cmp     dword [rbp-0xa4 {var_ac_1}], 0x1",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "jle     0x841db",
    "{Case 0x0}",
    "cmp     byte [r13], 0x0",
    "mov     r10, r13",
    "je      0x84a70",
    "mov     rax, qword [rbp-0x38 {var_40}]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x85de0",
    "mov     rcx, qword [rbp-0x68 {bytes_10}]",
    "test    byte [rcx+0x8], 0x50",
    "jne     0x843fd",
    "lea     rdx, [r14+0x1]",
    "cmp     rdx, rbx",
    "jae     0x83c90",
    "mov     edx, r10d",
    "lea     rcx, [rel is_basic_table]",
    "shr     dl, 0x5",
    "and     edx, 0x7",
    "mov     edx, dword [rcx+rdx*4]",
    "mov     ecx, r10d",
    "shr     edx, cl",
    "and     edx, 0x1",
    "je      0x8505f",
    "mov     edi, 0x3",
    "mov     qword [rbp-0x88 {var_90_12}], rdx",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85dd5",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edi, dword [rax]  {locale_utf8locale}",
    "test    edi, edi",
    "je      0x84ff9",
    "mov     rax, rdx",
    "sub     rax, rbx",
    "sub     rbx, 0xffffffffffffff80",
    "shr     rax, 0x7",
    "and     eax, 0x1",
    "cmp     rdx, rbx",
    "jb      0x83a2c",
    "mov     byte [r13+r14], r15b",
    "mov     r15d, dword [rbp-0x44 {var_4c}]",
    "mov     byte [r13+r14+0x1], r8b",
    "mov     r14, rdx",
    "mov     byte [r13+rdx], 0x0",
    "jmp     0x83768",
    "mov     dword [rbp-0x94 {var_9c_1}], 0x0",
    "jmp     0x83840",
    "mov     edx, dword [rbp-0x70 {var_78}]",
    "mov     edi, dword [rbp-0x78 {var_80}]",
    "and     eax, 0x50",
    "and     edx, 0x3",
    "or      edx, edi",
    "or      edx, eax",
    "mov     dword [rbp-0x94 {var_9c_1}], edx",
    "je      0x83ae1",
    "mov     rdi, r9",
    "lea     rdx, [rbp-0x54 {var_5c}]",
    "mov     esi, r15d",
    "mov     byte [rbp-0x88 {bytes}], r8b",
    "call    bash_tilde_find_word",
    "movzx   r8d, byte [rbp-0x88 {bytes}]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0x83840",
    "xor     r15d, r15d  {0x0}",
    "test    al, 0x84",
    "setne   r15b",
    "add     r15d, 0x1",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "mov     r15d, 0x1",
    "jmp     0x837f5",
    "mov     rdi, qword [rbp-0x68 {bytes_10}]",
    "mov     edx, dword [rdi+0x8]",
    "test    edx, 0x850",
    "jne     0x848a0",
    "test    byte [rbp-0x70 {var_78}], 0x3",
    "jne     0x83834",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "nop     dword [rax+rax]",
    "mov     eax, dword [rbp-0x44 {var_4c}]",
    "sub     eax, 0x1",
    "cmp     eax, dword [rbp-0x54 {var_5c}]",
    "jne     0x85793",
    "lea     rax, [rel data_1686f8]",
    "cmp     r9, rax",
    "je      0x848c0",
    "add     r15d, 0x2",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "jmp     0x83768",
    "mov     ecx, dword [rbp-0x70 {var_78}]",
    "lea     edx, [r15+0x1]",
    "mov     dword [rbp-0x44 {var_4c}], edx",
    "movzx   r8d, byte [rsi]",
    "mov     edi, ecx",
    "not     ecx",
    "and     edi, 0x80",
    "and     ecx, 0x82",
    "jne     0x83995",
    "lea     rax, [rel shell_compatibility_level]",
    "cmp     dword [rax], 0x33",
    "jle     0x83aad  {shell_compatibility_level}",
    "mov     eax, dword [rbp-0x78 {var_80}]",
    "test    eax, eax",
    "jne     0x83840",
    "test    dl, 0x4",
    "je      0x8479e",
    "and     edx, 0x50",
    "or      edx, dword [rbp-0x78 {var_80}]",
    "jne     0x83840",
    "test    ecx, 0x804",
    "je      0x83c66",
    "test    edx, edx",
    "jne     0x83840",
    "add     r15d, 0x1",
    "xor     edx, edx  {0x0}",
    "lea     rsi, [rbp-0x44 {var_4c}]",
    "mov     rdi, r12",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "mov     dword [rbp-0x54 {var_5c}], r15d",
    "call    sub_6d0a0",
    "cmp     dword [rbp-0x54 {var_5c}], 0x1",
    "mov     r15, rax",
    "je      0x84c52",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "lea     rsi, [rbp-0x44 {var_4c}]",
    "mov     rdi, r12",
    "lea     r9, [rbp-0x48 {var_50}]",
    "mov     dword [rbp-0x50 {var_58}], 0x0",
    "lea     r8, [rbp-0x50 {var_58}]",
    "mov     edx, dword [rax+0x8]",
    "mov     eax, edx",
    "sar     eax, 0xa",
    "and     eax, 0x1",
    "mov     ecx, eax",
    "or      ecx, 0x4",
    "test    dl, 0x40",
    "cmovne  eax, ecx",
    "mov     ecx, eax",
    "or      ecx, 0x8",
    "test    dh, 0x8",
    "cmovne  eax, ecx",
    "mov     ecx, eax",
    "or      ecx, 0x10",
    "and     edx, 0x8000000",
    "mov     edx, dword [rbp-0x70 {var_78}]",
    "cmovne  eax, ecx",
    "mov     rcx, qword [rbp-0x80 {var_88}]",
    "push    rax {var_e0_1}",
    "lea     rax, [rbp-0x4c {var_54}]",
    "push    rax {var_54} {var_e8_1}",
    "call    sub_82010",
    "mov     esi, dword [rbp-0x50 {var_58}]",
    "add     dword [rbp-0x98 {var_a0_1}], esi",
    "mov     rdi, rax",
    "mov     eax, dword [rax+0x8]",
    "mov     edx, eax",
    "and     edx, 0x8",
    "add     dword [rbp-0x9c {var_a4_1}], edx",
    "pop     r15 {var_e8_1}",
    "pop     rdx {var_e0}",
    "lea     rdx, [rel data_168700]",
    "cmp     rdi, rdx",
    "je      0x856d2",
    "mov     dword [rax], 0x1",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "add     r15d, 0x1",
    "mov     rdi, r12",
    "lea     rsi, [rbp-0x44 {var_4c}]",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "mov     eax, dword [rax+0x8]",
    "mov     dword [rbp-0x54 {var_5c}], r15d",
    "mov     edx, eax",
    "mov     dword [rbp-0x88 {bytes}], eax",
    "sar     edx, 0x11",
    "and     edx, 0x400",
    "call    sub_702f0",
    "cmp     dword [rbp-0x54 {var_5c}], 0x1",
    "mov     rdi, rax",
    "je      0x84e40",
    "test    ah, 0x1",
    "je      0x83840",
    "mov     edi, 0x3",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85e2d",
    "movsxd  rdx, r15d",
    "lea     rsi, [r12+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "jne     0x84d3c",
    "mov     eax, dword [rbp-0x4c {var_54}]",
    "test    eax, eax",
    "je      0x85483",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "mov     eax, dword [rax+0x8]",
    "test    al, 0x10",
    "jne     0x84e70",
    "jmp     0x83ae1",
    "mov     rax, rdx",
    "sub     rax, rbx",
    "sub     rbx, 0xffffffffffffff80",
    "shr     rax, 0x7",
    "and     eax, 0x1",
    "cmp     rdx, rbx",
    "jb      0x83cc4",
    "mov     eax, dword [rbp-0x44 {var_4c}]",
    "mov     byte [r13+r14], r8b",
    "mov     r14, rdx",
    "mov     byte [r13+rdx], 0x0",
    "lea     r15d, [rax+0x1]",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "jmp     0x83768",
    "lea     rdx, [rel locale_utf8locale]",
    "mov     edx, dword [rdx]  {locale_utf8locale}",
    "test    edx, edx",
    "je      0x8542d",
    "mov     qword [rbp-0x88 {bytes}], 0x2",
    "mov     r15d, 0x1",
    "mov     r14d, 0x3",
    "jmp     0x85cff",
    "mov     byte [rax], 0x1",
    "mov     r8d, 0x2",
    "mov     esi, 0x2",
    "mov     rdx, qword [rbp-0x88 {var_90_12}]",
    "jmp     0x83b94",
    "mov     rax, qword [rbp-0xb8 {var_c0_1}]",
    "xor     edi, edi  {0x0}",
    "lea     rcx, [rbp-0x40 {ps}]",
    "mov     r15, qword [rbp-0x40 {ps.__count} {ps.__value}]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x83b55",
    "test    cl, cl",
    "js      0x84ff9",
    "mov     qword [rbp-0xb0 {var_b8}], rdx",
    "mov     byte [rbp-0x88 {bytes}], r8b",
    "test    r13, r13",
    "je      0x84cf0",
    "test    rax, rax",
    "je      0x83a20",
    "movsxd  rax, r15d",
    "lea     r9, [r12+rax]",
    "movzx   r8d, byte [r9]",
    "mov     r10d, r8d",
    "cmp     r8b, 0x60",
    "jg      0x842f0",
    "add     dword [rbp-0xbc {var_c4_1}], 0x1",
    "cmp     byte [rax], 0x0",
    "je      0x853f0",
    "and     dh, 0x40",
    "jne     0x837d0",
    "nop     dword [rax+rax]",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "test    byte [rax+0xa], 0x10",
    "jne     0x83834",
    "lea     rax, [rel last_command_exit_value]",
    "mov     esi, 0x1",
    "mov     r14, r9",
    "mov     qword [rbp-0x68 {var_70_3}], r13",
    "lea     rdi, [rel data_158490]",
    "mov     dword [rel data_158490], 0x1",
    "mov     dword [rax], 0x1  {last_command_exit_value}",
    "call    set_pipestatus_array",
    "movsxd  rbx, dword [rbp-0x54 {var_5c}]",
    "mov     edx, 0x5",
    "xor     edi, edi  {0x0}",
    "lea     rsi, [rel data_1334d0]  {\"bad substitution: no closing \"`\"\u2026\"}",
    "call    dcgettext",
    "add     rbx, r12",
    "mov     rdi, rax",
    "mov     rsi, rbx",
    "xor     eax, eax  {0x0}",
    "call    report_error",
    "mov     rdi, r12",
    "call    free",
    "mov     rdi, qword [rbp-0x68 {var_70_3}]",
    "call    free",
    "cmp     r14, r15",
    "jne     0x856c6",
    "mov     dword [rbp-0x44 {var_4c}], eax",
    "jmp     0x83840",
    "mov     rax, qword [rbp-0x80 {var_88}]",
    "test    rax, rax",
    "je      0x838ed",
    "test    edi, edi",
    "setne   cl",
    "cmp     r8b, 0x7d",
    "sete    dil",
    "and     ecx, edi",
    "mov     edi, dword [rbp-0x70 {var_78}]",
    "test    dil, 0x2",
    "jne     0x84940",
    "cmp     r8b, 0x22",
    "je      0x85168",
    "cmp     byte [r12], 0x0",
    "movzx   edx, byte [rel data_159ea0]",
    "jne     0x8539c",
    "lea     rdx, [rel ifs_cmap]",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "cmp     byte [rdx+0x5b], 0x0",
    "mov     eax, dword [rax+0x8]",
    "je      0x83840",
    "cmp     dword [rbp-0xa8 {var_b0_1}], r15d",
    "je      0x84d18",
    "lea     rcx, [rel posixly_correct]",
    "mov     r10d, dword [rcx]  {posixly_correct}",
    "test    r10d, r10d",
    "je      0x84791",
    "lea     rax, [rel ifs_cmap]",
    "cmp     byte [rax+0x3d], 0x0",
    "je      0x83840  {data_1685fd}",
    "lea     rsi, [rel posixly_correct]",
    "mov     esi, dword [rsi]  {posixly_correct}",
    "test    esi, esi",
    "je      0x84755",
    "lea     rax, [rel ifs_cmap]",
    "cmp     byte [rax+0x3a], 0x0",
    "jne     0x83c3d  {data_1685fa}",
    "movsxd  rax, dword [rbp-0x44 {var_4c}]",
    "cmp     byte [r12+rax], 0x0",
    "jne     0x83d69",
    "cmp     byte [r15], 0x0",
    "je      0x84b00",
    "mov     r10, r13",
    "lea     r14, [rel data_168580]",
    "mov     r13, rdi",
    "jmp     0x856a8",
    "lea     rdx, [rel data_168580]",
    "cmp     rdi, rdx",
    "je      0x8569f",
    "movsxd  rax, dword [rbp-0x44 {var_4c}]",
    "cmp     byte [r12+rax], 0x0",
    "mov     r15, rax",
    "jne     0x83ffd",
    "mov     dword [rbp-0xa0 {var_a8_1}], 0x1",
    "mov     eax, dword [rbp-0x44 {var_4c}]",
    "test    rdi, rdi",
    "je      0x84dd0",
    "mov     qword [rbp-0x88 {bytes_42}], rax",
    "mov     esi, 0x3",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  rax, r15d",
    "mov     byte [rcx], 0x1",
    "movzx   eax, byte [r12+rax]",
    "mov     byte [rcx+0x2], 0x0",
    "mov     byte [rcx+0x1], al",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "jne     0x85307",
    "mov     r15d, dword [rbp-0x48 {var_50}]",
    "test    r15d, r15d",
    "jne     0x85499",
    "mov     r14d, 0x7f",
    "mov     qword [rbp-0x68 {var_70}], r10",
    "mov     word [r10], r14w  {0x7f}",
    "call    alloc_word_desc",
    "mov     r10, qword [rbp-0x68 {var_70}]",
    "xor     esi, esi  {0x0}",
    "or      dword [rax+0x8], 0x40000",
    "mov     rdi, rax",
    "mov     rbx, rax",
    "mov     qword [rax], r10",
    "call    make_word_list",
    "mov     r12, rax",
    "test    byte [rbp-0x70 {var_78}], 0x3",
    "je      0x84ab6",
    "mov     qword [rbp-0x78 {var_80}], r13",
    "call    alloc_word_desc",
    "mov     r10, qword [rbp-0x78 {var_80}]",
    "mov     r13d, dword [rbp-0x4c {var_54}]",
    "mov     rdi, rax",
    "mov     qword [rax], r10",
    "test    r13d, r13d",
    "je      0x84e96",
    "test    ah, 0x8",
    "jne     0x850a0",
    "mov     qword [rbp-0xb0 {var_b8}], rdx",
    "mov     byte [rbp-0x88 {bytes}], r8b",
    "test    r13, r13",
    "je      0x84920",
    "test    rax, rax",
    "je      0x83cb8",
    "mov     rdx, qword [rbp-0xb8 {var_c0_1}]",
    "lea     rcx, [rbp-0x40 {ps}]",
    "mov     rsi, r9",
    "xor     edi, edi  {0x0}",
    "mov     r15, qword [rbp-0x40 {ps.__count} {ps.__value}]",
    "sub     rdx, rax",
    "call    mbrtowc",
    "mov     r8, rax",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x85081",
    "test    r10b, r10b",
    "js      0x8542d",
    "mov     rsi, qword [rbp-0x88 {bytes}]",
    "mov     qword [rbp-0xb0 {var_b8}], rax",
    "xor     eax, eax  {0x0}",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  rdx, dword [rbp-0x44 {var_4c}]",
    "mov     rsi, rcx",
    "lea     eax, [rdx+0x1]",
    "lea     rdi, [r15+rdx+0x1]",
    "sub     rsi, rdx",
    "cdqe    ",
    "nop     dword [rax+rax]",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     eax, [r15+0x1]",
    "mov     rdi, rcx",
    "add     rsi, rdx",
    "cdqe    ",
    "sub     rdi, rdx",
    "nop     dword [rax+rax]",
    "test    rax, rax",
    "mov     edx, 0x1",
    "cmovne  rdx, rax",
    "lea     rax, [rdx+0x2]",
    "mov     r15, rdx",
    "mov     rdi, rax",
    "mov     qword [rbp-0x88 {var_90_1}], rax",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85da1",
    "mov     edi, 0x3",
    "mov     qword [rbp-0x40 {ps.__count} {ps.__value}], r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85dd5",
    "setne   al",
    "movzx   eax, al",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rdx, qword [rbp-0xb0 {var_b8}]",
    "movzx   r8d, byte [rbp-0x88 {bytes}]",
    "mov     r13, rax",
    "jmp     0x83a60",
    "mov     rdi, r13",
    "mov     rsi, rbx",
    "call    realloc",
    "movzx   r8d, byte [rbp-0x88 {bytes}]",
    "mov     rdx, qword [rbp-0xb0 {var_b8}]",
    "mov     r13, rax",
    "add     rbx, 0x100",
    "cmp     rdx, rbx",
    "jae     0x83a20",
    "sub     rbx, 0xffffffffffffff80",
    "cmp     rdx, rbx",
    "jb      0x83a2c",
    "cmp     dword [rbp-0xa4 {var_ac_1}], 0x1",
    "mov     r15d, 0x1",
    "jle     0x837f5",
    "mov     byte [rbp-0x88 {bytes}], r8b",
    "call    free",
    "movzx   r8d, byte [rbp-0x88 {bytes}]",
    "jmp     0x84909",
    "mov     ecx, dword [rbp-0x54 {var_5c}]",
    "test    ecx, ecx",
    "jle     0x853f0",
    "lea     rax, [rel no_longjmp_on_fatal_error]",
    "add     r15d, 0x2",
    "xor     ecx, ecx  {0x0}",
    "mov     rdi, r12",
    "mov     dword [rbp-0x54 {var_5c}], r15d",
    "movsxd  r15, r15d",
    "lea     rdx, [rbp-0x54 {var_5c}]",
    "mov     eax, dword [rax]  {no_longjmp_on_fatal_error}",
    "lea     rsi, [r12+r15]",
    "mov     byte [rbp-0x88 {bytes}], r8b",
    "test    eax, eax",
    "setne   cl",
    "shl     ecx, 0x6",
    "call    xparse_dolparen",
    "mov     r15d, dword [rbp-0x54 {var_5c}]",
    "movzx   r10d, byte [rbp-0x88 {bytes}]",
    "test    rax, rax",
    "mov     rdi, rax",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "je      0x854a8",
    "lea     r12, [rel data_1619a0]",
    "jmp     0x8487b",
    "lea     r12, [rel data_1619b0]",
    "jmp     0x8487b",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "test    byte [rax+0x9], 0x4",
    "jne     0x84bf0",
    "mov     dword [rax], 0x1",
    "mov     edi, 0x80",
    "and     edi, 0x1",
    "jne     0x84c48",
    "test    byte [rbp-0x70 {var_78}], 0x3",
    "je      0x839cb",
    "cmp     byte [r12+0x1], 0x0",
    "mov     r8d, 0x1",
    "je      0x853de",
    "xor     r8d, r8d  {0x0}",
    "cmp     dl, 0x1",
    "jne     0x854b7",
    "mov     edx, dword [rbp-0x70 {var_78}]",
    "and     eax, 0x50",
    "and     edx, 0x3",
    "or      eax, edx",
    "jne     0x83840",
    "cmp     byte [r12+rax+0x1], 0x7e",
    "mov     eax, 0x1",
    "cmovne  eax, dword [rbp-0x94 {var_9c_1}]",
    "mov     dword [rbp-0xa8 {var_b0_1}], r15d",
    "mov     dword [rbp-0x94 {var_9c_1}], eax",
    "jmp     0x847ab",
    "test    edx, 0x20000",
    "je      0x847bd",
    "cmp     dword [rbp-0xa8 {var_b0_1}], 0xffffffff",
    "je      0x84d0f",
    "test    dl, 0x80",
    "je      0x8479e",
    "test    byte [rbp-0x70 {var_78}], 0x3",
    "jne     0x837da",
    "cmp     byte [r12+rax+0x1], 0x7e",
    "mov     eax, 0x1",
    "cmovne  eax, dword [rbp-0x94 {var_9c_1}]",
    "mov     dword [rbp-0x94 {var_9c_1}], eax",
    "jmp     0x83c66",
    "and     ecx, 0x80",
    "je      0x83c66",
    "lea     rdx, [r14+0x1]",
    "cmp     rdx, rbx",
    "jb      0x8384d",
    "cmp     byte [r15], 0x0",
    "jne     0x85664",
    "mov     rdi, r15",
    "call    free",
    "mov     r15d, dword [rbp-0x70 {var_78}]",
    "mov     dword [rbp-0x4c {var_54}], 0x1",
    "test    r15d, r15d",
    "jne     0x85053",
    "mov     dword [rbp-0xa0 {var_a8_1}], 0x1",
    "mov     rdi, r12",
    "mov     qword [rbp-0x68 {var_70_2}], r10",
    "call    free",
    "mov     rdi, qword [rbp-0x68 {var_70_2}]",
    "call    free",
    "cmp     r13, r14",
    "je      0x85803",
    "mov     r10, r13",
    "mov     r14, rdx  {data_168580}",
    "mov     r13, rdi",
    "mov     rcx, qword [rbp-0x90 {var_98}]",
    "test    rcx, rcx",
    "je      0x83ebb",
    "test    rdi, rdi",
    "je      0x84a48",
    "mov     rdi, qword [rbp-0x68 {bytes_10}]",
    "mov     ecx, dword [rbp-0x70 {var_78}]",
    "mov     dword [rbp-0x4c {var_54}], 0x1",
    "mov     r15d, eax",
    "mov     edx, dword [rdi+0x8]",
    "test    ecx, ecx",
    "jne     0x84dfc",
    "cmp     byte [rdi], 0x0",
    "je      0x84a30",
    "test    rcx, rcx",
    "jne     0x8421c",
    "add     r15d, 0x1",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "test    rcx, rcx",
    "je      0x83dea",
    "mov     edi, 0x3",
    "mov     qword [rbp-0x88 {var_90_15}], rdx",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85dd5",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]  {locale_utf8locale}",
    "test    eax, eax",
    "je      0x84d6d",
    "xor     r12d, r12d  {0x0}",
    "jmp     0x84873",
    "cmp     dword [rbp-0xa0 {var_a8_1}], 0x1",
    "je      0x84a7b",
    "xor     r10d, r10d  {0x0}",
    "jmp     0x84873",
    "or      dword [rbx+0x8], 0x2",
    "mov     rbx, qword [rbp-0x68 {bytes_10}]",
    "mov     eax, dword [rbx+0x8]",
    "test    al, 0x4",
    "je      0x84ea8",
    "cmp     byte [r10], 0x7f",
    "je      0x85409",
    "mov     edx, dword [rbp-0x70 {var_78}]",
    "mov     rdi, r13",
    "lea     rsi, [rel data_122e02]",
    "mov     qword [rbp-0x78 {var_80}], r13",
    "call    list_string",
    "mov     r12d, dword [rbp-0x4c {var_54}]",
    "mov     r10, qword [rbp-0x78 {var_80}]",
    "mov     rbx, qword [rax+0x8]",
    "mov     rdi, rax",
    "test    r12d, r12d",
    "je      0x850de",
    "mov     edx, dword [rbp-0x48 {var_50}]",
    "mov     ebx, dword [rbp-0x98 {var_a0_1}]",
    "or      ebx, edx",
    "je      0x84b70",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rdx, qword [rbp-0xb0 {var_b8}]",
    "movzx   r8d, byte [rbp-0x88 {bytes}]",
    "mov     r13, rax",
    "jmp     0x83cf8",
    "mov     rdi, r13",
    "mov     rsi, rbx",
    "call    realloc",
    "movzx   r8d, byte [rbp-0x88 {bytes}]",
    "mov     rdx, qword [rbp-0xb0 {var_b8}]",
    "mov     r13, rax",
    "add     rbx, 0x100",
    "cmp     rdx, rbx",
    "jae     0x83cb8",
    "sub     rbx, 0xffffffffffffff80",
    "cmp     rdx, rbx",
    "jb      0x83cc4",
    "test    r8, r8",
    "mov     eax, 0x1",
    "cmovne  rax, r8",
    "mov     r15, rax",
    "lea     rax, [rax+0x1]",
    "mov     qword [rbp-0x88 {bytes}], rax",
    "jmp     0x8443f",
    "mov     qword [rbp-0x40 {ps.__count} {ps.__value}], r15",
    "jmp     0x8442e",
    "setne   r8b",
    "movzx   r8d, r8b",
    "mov     dword [rbp-0x44 {var_4c}], eax",
    "movzx   edx, byte [r12+rax-0x1]",
    "mov     byte [rsi+rax-0x1], dl",
    "add     rax, 0x1",
    "cmp     rax, rdi",
    "jne     0x84470",
    "mov     byte [rcx+r15], 0x0",
    "jmp     0x83de1",
    "mov     dword [rbp-0x44 {var_4c}], eax",
    "movzx   edx, byte [r12+rax-0x1]",
    "mov     byte [rdi+rax], dl",
    "add     rax, 0x1",
    "cmp     rax, rsi",
    "jne     0x83ba8",
    "mov     byte [rcx+r8], 0x0",
    "movzx   eax, byte [rcx]",
    "test    al, al",
    "jne     0x83f10",
    "mov     r14, qword [rbp-0x88 {var_90_1}]",
    "jmp     0x85cff",
    "movsxd  rdx, dword [rbp-0x44 {var_4c}]",
    "mov     byte [rax], 0x1",
    "lea     rsi, [r15+0x1]",
    "mov     r8, rsi",
    "mov     r15, rdx",
    "movsxd  rdx, dword [rbp-0x44 {var_4c}]",
    "mov     byte [rax], 0x1",
    "mov     r8d, 0x2",
    "mov     esi, 0x2",
    "mov     r15, rdx",
    "jmp     0x83b94",
    "test    r13, r13",
    "jne     0x83802",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax  {0x0}",
    "mov     qword [rbp-0xb0 {var_b8}], rdx",
    "mov     byte [rbp-0x88 {bytes}], r8b",
    "call    sub_a7f00",
    "{ Does not return }",
    "nop     dword [rax+rax]",
    "mov     esi, r15d",
    "mov     qword [rbp-0x88 {bytes}], rax",
    "call    bash_tilde_expand",
    "mov     rdi, qword [rbp-0x88 {bytes}]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x85ad5",
    "movsxd  rax, r15d",
    "xor     ecx, ecx  {0x0}",
    "movzx   eax, byte [r12+rax]",
    "jmp     0x84203",
    "xor     esi, esi  {0x0}",
    "cmp     r10b, 0x3e",
    "mov     qword [rbp-0xb0 {var_b8}], rax",
    "sete    sil",
    "call    sub_785d0",
    "mov     rdi, qword [rbp-0xb0 {var_b8}]",
    "mov     qword [rbp-0x88 {bytes}], rax",
    "mov     eax, dword [rbp-0x44 {var_4c}]",
    "mov     esi, dword [rbp-0x54 {var_5c}]",
    "mov     rdi, r12",
    "mov     qword [rbp-0x88 {bytes}], r9",
    "lea     edx, [rax+0x1]",
    "call    substring",
    "mov     r9, qword [rbp-0x88 {bytes}]",
    "mov     rcx, rax",
    "test    r9, r9",
    "jne     0x8394b",
    "mov     rdi, r9",
    "mov     qword [rbp-0x88 {bytes}], r9",
    "call    de_backslash",
    "mov     esi, dword [rbp-0x70 {var_78}]",
    "mov     edx, 0x80",
    "mov     rdi, qword [rbp-0x88 {bytes}]",
    "call    command_substitute",
    "mov     r9, qword [rbp-0x88 {bytes}]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x83942",
    "lea     rax, [rel locale_mb_cur_max]",
    "mov     r15d, 0x1",
    "cmp     dword [rax], 0x1",
    "jle     0x839e1  {locale_mb_cur_max}",
    "test    byte [rbp-0x70 {var_78}], 0x3",
    "je      0x839c2",
    "mov     edi, 0x40",
    "jmp     0x84945",
    "test    cl, cl",
    "jne     0x84f8c",
    "lea     rcx, [rel locale_mb_cur_max]",
    "mov     r15d, 0x1",
    "cmp     dword [rcx], 0x1",
    "jg      0x8552a  {locale_mb_cur_max}",
    "lea     rcx, [rel sh_syntaxtab]",
    "mov     edi, dword [rcx+0x88]  {data_158108}",
    "mov     ecx, dword [rbp-0x78 {var_80}]",
    "and     edi, 0x40",
    "or      ecx, edi",
    "jne     0x8536a",
    "cmp     dl, 0x1",
    "jne     0x845b7",
    "cmp     byte [r12+0x2], 0x0",
    "mov     r8d, 0x2",
    "je      0x853de",
    "xor     edx, edx  {0x0}",
    "mov     esi, r15d",
    "mov     rdi, r12",
    "mov     qword [rbp-0x88 {var_90_18}], r9",
    "call    sub_111360",
    "mov     r9, qword [rbp-0x88 {var_90_18}]",
    "mov     ecx, 0x20",
    "xor     eax, eax  {0x0}",
    "lea     rdi, [rel data_159ea0]",
    "mov     r11d, 0x101",
    "rep stosq qword [rdi]  {0x0}",
    "mov     byte [rel data_159efd], 0x1",
    "mov     byte [rel data_159f1e], 0x1",
    "mov     byte [rel data_159f00], 0x1",
    "mov     byte [rel data_159ec4], 0x1",
    "mov     byte [rel data_159ec7], 0x1",
    "mov     word [rel data_159efb], r11w  {0x101}",
    "mov     byte [rel data_159ec2], 0x1",
    "mov     edi, dword [rbp-0x78 {var_80}]",
    "test    edi, edi",
    "jne     0x83840",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "or      dh, 0x8",
    "mov     dword [rax+0x8], edx",
    "test    r15d, r15d",
    "jle     0x8479e",
    "jmp     0x83ae1",
    "nop     dword [rax+rax]",
    "mov     dword [rbp-0xa0 {var_a8_1}], 0x2",
    "jmp     0x83d7d",
    "mov     rdi, r15",
    "call    free",
    "mov     dword [rbp-0xa0 {var_a8_1}], 0x2",
    "jmp     0x84b4d",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "mov     eax, dword [rax+0x8]",
    "jmp     0x84b37",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "mov     eax, dword [rax+0x8]",
    "mov     edx, eax",
    "and     edx, 0x4810",
    "cmp     edx, 0x4000",
    "je      0x8580f",
    "mov     rdi, r15",
    "call    sub_87450",
    "mov     rcx, rax",
    "jmp     0x83dcb",
    "mov     edi, 0x2",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85cd6",
    "test    eax, 0x40000",
    "je      0x84800",
    "mov     r11d, dword [rbp-0x98 {var_a0_1}]",
    "test    r11d, r11d",
    "je      0x83ebb",
    "mov     dword [rbp-0xa0 {var_a8_1}], 0x2",
    "mov     dword [rbp-0xa0 {var_a8_1}], 0x2",
    "jmp     0x84013",
    "mov     dword [rbp-0xa0 {var_a8_1}], 0x1",
    "and     edx, 0x50",
    "je      0x84a52",
    "mov     ecx, edx",
    "and     ecx, 0x4810",
    "cmp     ecx, 0x4000",
    "je      0x85778",
    "call    free",
    "mov     eax, dword [rbp-0x44 {var_4c}]",
    "mov     qword [rbp-0x88 {var_90_4}], rdi",
    "call    alloc_word_desc",
    "mov     rdi, qword [rbp-0x88 {var_90_4}]",
    "mov     r15, rax",
    "mov     qword [rax], rdi",
    "mov     rdi, qword [rbp-0x68 {bytes_10}]",
    "mov     eax, dword [rdi+0x8]",
    "test    eax, 0x20000",
    "je      0x8404f",
    "movzx   eax, byte [rcx]",
    "mov     r15d, dword [rbp-0x44 {var_4c}]",
    "jmp     0x83768",
    "mov     byte [rax], 0x1",
    "mov     rdx, qword [rbp-0x88 {var_90_15}]",
    "mov     r8d, 0x2",
    "mov     esi, 0x2",
    "mov     rax, qword [rbp-0xb8 {var_c0_1}]",
    "xor     edi, edi  {0x0}",
    "lea     rcx, [rbp-0x40 {ps}]",
    "mov     r15, qword [rbp-0x40 {ps.__count} {ps.__value}]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x85911",
    "test    cl, cl",
    "jns     0x85307",
    "test    ah, 0x80",
    "je      0x84ebb",
    "or      dword [rdi+0x8], 0x4",
    "mov     eax, dword [rbx+0x8]",
    "cmp     byte [r10+0x1], 0x0",
    "jne     0x84e96",
    "mov     qword [rbp-0x78 {var_80}], r10",
    "call    free",
    "mov     rdi, qword [rbp-0x78 {var_80}]",
    "call    free",
    "cmp     byte [r10], 0x7f",
    "jne     0x850de",
    "mov     ebx, dword [rbp-0x9c {var_a4_1}]",
    "test    ebx, ebx",
    "jne     0x84f20",
    "mov     r11d, dword [rbp-0x9c {var_a4_1}]",
    "test    r11d, r11d",
    "jne     0x84f20",
    "test    r13, r13",
    "jne     0x8384d",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax  {0x0}",
    "mov     qword [rbp-0xb0 {var_b8}], rdx",
    "mov     byte [rbp-0x88 {bytes}], r8b",
    "call    sub_a7f00",
    "{ Does not return }",
    "nop     dword [rax]",
    "mov     rdi, qword [rbp-0x88 {bytes}]",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85dad",
    "cmp     byte [rcx+0x1], 0x0",
    "jne     0x84231",
    "mov     r15, r14",
    "xor     edx, edx  {0x0}",
    "call    free",
    "mov     r15d, dword [rbp-0x44 {var_4c}]",
    "add     r15d, dword [rbp-0x54 {var_5c}]",
    "jmp     0x84a52",
    "cmp     byte [rax], 0x7e",
    "jne     0x843d8",
    "test    al, al",
    "je      0x83de1",
    "mov     qword [rbp-0x88 {bytes}], rcx",
    "mov     rdi, r9",
    "jmp     0x8451d",
    "movsxd  rax, dword [rbp-0x44 {var_4c}]",
    "mov     r15, rax",
    "movzx   eax, byte [r12+rax]",
    "jmp     0x84203",
    "test    r9, r9",
    "je      0x84c1b",
    "mov     r15, qword [rax]",
    "mov     rdi, rax",
    "call    dispose_word_desc",
    "mov     r9, qword [rbp-0x88 {bytes}]",
    "mov     rcx, r15",
    "add     edx, 0x1",
    "mov     dword [rbp-0x44 {var_4c}], edx",
    "lea     rdx, [r14+0x2]",
    "cmp     rdx, rbx",
    "jb      0x83802",
    "mov     edi, 0x3",
    "mov     dword [rbp-0xb0 {var_b8}], edx",
    "mov     qword [rbp-0x88 {var_90_13}], rsi",
    "call    malloc",
    "mov     rsi, qword [rbp-0x88 {var_90_13}]",
    "mov     edx, dword [rbp-0xb0 {var_b8}]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x85de5",
    "test    r8b, r8b",
    "je      0x84fea",
    "lea     rcx, [rel sh_syntaxtab]",
    "movzx   r9d, r8b",
    "and     edi, dword [rcx+r9*4]",
    "mov     ecx, dword [rbp-0x78 {var_80}]",
    "or      ecx, edi",
    "jne     0x84f5a",
    "test    cl, cl",
    "jne     0x84f8c",
    "mov     ecx, r8d",
    "lea     rdi, [rel is_basic_table]",
    "mov     dword [rbp-0x88 {bytes}], edx",
    "shr     cl, 0x5",
    "and     ecx, 0x7",
    "mov     edi, dword [rdi+rcx*4]",
    "mov     ecx, r8d",
    "shr     edi, cl",
    "and     edi, 0x1",
    "jne     0x85569",
    "test    edi, edi",
    "jne     0x839cb",
    "lea     rcx, [rel ifs_cmap]",
    "cmp     byte [rcx+0x22], 0x0",
    "je      0x8498c  {data_1685e2}",
    "xor     edx, edx  {0x0}",
    "mov     esi, r15d",
    "mov     rdi, r12",
    "mov     qword [rbp-0xb0 {var_b8}], r8",
    "mov     qword [rbp-0x88 {var_90_8}], r9",
    "call    sub_111360",
    "mov     r8, qword [rbp-0xb0 {var_b8}]",
    "mov     r9, qword [rbp-0x88 {var_90_8}]",
    "mov     dword [rbp-0xc8 {var_d0}], eax",
    "mov     edx, eax",
    "cdqe    ",
    "cmp     rax, r8",
    "jae     0x854d2",
    "jmp     0x8456e",
    "mov     rdi, r12",
    "mov     byte [rbp-0xb0 {var_b8}], dl",
    "mov     qword [rbp-0x88 {var_90_17}], r9",
    "call    strlen",
    "movzx   edx, byte [rbp-0xb0 {var_b8}]",
    "mov     r9, qword [rbp-0x88 {var_90_17}]",
    "mov     r8, rax",
    "mov     qword [rbp-0xb0 {var_b8}], rax",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "movzx   eax, byte [r9]",
    "add     r15d, 0x1",
    "mov     byte [rcx+0x1], 0x0",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "mov     byte [rcx], al",
    "jmp     0x8421f",
    "mov     edi, 0x2",
    "mov     qword [rbp-0x88 {var_90_19}], r9",
    "call    malloc",
    "mov     r9, qword [rbp-0x88 {var_90_19}]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x85d1a",
    "cmp     byte [r12+rax], 0x5d",
    "jne     0x854d2",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "test    byte [rax+0x8], 0x50",
    "jne     0x83840",
    "mov     rdi, r15",
    "call    dequote_escapes",
    "mov     rdi, r15",
    "mov     rsi, rax",
    "mov     qword [rbp-0x88 {var_90_2}], rax",
    "call    strcpy",
    "mov     rdi, qword [rbp-0x88 {var_90_2}]",
    "call    free",
    "sub     dword [rbp-0x44 {var_4c}], 0x1",
    "mov     r8d, 0x7f",
    "jmp     0x83840",
    "mov     dword [rbp-0xa0 {var_a8_1}], 0x1",
    "mov     r15d, dword [rbp-0x44 {var_4c}]",
    "test    al, 0x50",
    "jne     0x83768",
    "sub     dword [rbp-0x44 {var_4c}], 0x1",
    "mov     r8d, 0x7f",
    "mov     dword [rbp-0xa0 {var_a8_1}], 0x1",
    "jmp     0x83840",
    "mov     rdi, r15",
    "mov     qword [rbp-0x88 {bytes}], rcx",
    "call    free",
    "mov     rcx, qword [rbp-0x88 {bytes}]",
    "mov     qword [rbp-0x88 {bytes_40}], rax",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     eax, 0x7f",
    "mov     word [rcx], ax  {0x7f}",
    "test    eax, 0x200000",
    "jne     0x83ed4",
    "mov     dword [rbp-0x4c {var_54}], 0x1",
    "test    eax, 0x200000",
    "je      0x83edb",
    "mov     dword [rcx], 0x1",
    "mov     eax, dword [rdi+0x8]",
    "sub     r15d, 0x1",
    "mov     dword [rbp-0x4c {var_54}], 0x1",
    "mov     r8d, 0x7f",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "jmp     0x83840",
    "jmp     0x83768",
    "sub     eax, 0x1",
    "mov     r8d, 0x7f",
    "mov     dword [rbp-0xa0 {var_a8_1}], 0x1",
    "mov     dword [rbp-0x44 {var_4c}], eax",
    "jmp     0x83840",
    "test    eax, 0x8000000",
    "je      0x84065",
    "and     eax, 0x20800",
    "or      dword [r15+0x8], eax",
    "mov     eax, dword [rdi+0x8]",
    "cmp     byte [rcx+0x1], 0x0",
    "je      0x83f1a",
    "mov     dword [rbp-0x44 {var_4c}], eax",
    "movzx   edx, byte [r12+rax-0x1]",
    "mov     byte [rdi+rax], dl",
    "add     rax, 0x1",
    "cmp     rsi, rax",
    "jne     0x85350",
    "jmp     0x83bbd",
    "test    rax, rax",
    "mov     edx, 0x1",
    "cmovne  rdx, rax",
    "mov     r15, rdx",
    "lea     rdx, [rdx+0x2]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x88 {var_90_21}], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x88 {var_90_21}]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x85cfc",
    "mov     edi, 0x3",
    "mov     qword [rbp-0x40 {ps.__count} {ps.__value}], r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85dd5",
    "test    al, 0x20",
    "je      0x84eca",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "or      dword [rdi+0x8], 0x8000",
    "mov     eax, dword [rax+0x8]",
    "or      dword [rax+0x8], 0x40000",
    "jmp     0x84e96",
    "cmp     dword [rbp-0xa0 {var_a8_1}], 0x2",
    "jne     0x850fe",
    "or      dword [rbx+0x8], 0x2",
    "cmp     byte [r10+0x1], 0x0",
    "jne     0x850de",
    "lea     rax, [rel ifs_is_set]",
    "mov     edx, 0x1",
    "lea     rsi, [rel data_120c5d[7]]  {\" \\t\\n\"}",
    "mov     r9d, dword [rax]  {ifs_is_set}",
    "test    r9d, r9d",
    "je      0x84f42",
    "mov     qword [rbp-0x78 {var_80}], r10",
    "call    alloc_word_desc",
    "mov     r12d, dword [rbp-0x4c {var_54}]",
    "mov     r10, qword [rbp-0x78 {var_80}]",
    "mov     rbx, rax",
    "mov     rax, qword [rbp-0x80 {var_88}]",
    "test    rax, rax",
    "je      0x84baf",
    "mov     r8d, dword [rbp-0x98 {var_a0_1}]",
    "test    r8d, r8d",
    "je      0x84b7e",
    "cmp     byte [rcx+0x2], 0x0",
    "je      0x84c30",
    "mov     r15, r14",
    "mov     rax, rbx",
    "mov     edx, 0x1",
    "add     r14, 0x1",
    "sub     rax, r15",
    "cmp     rdx, rax",
    "jb      0x83be1",
    "mov     rbx, r14",
    "mov     qword [rbp-0xb0 {var_b8}], rdx",
    "and     rbx, 0xffffffffffffff80",
    "mov     qword [rbp-0x88 {var_90_3}], rcx",
    "sub     rbx, 0xffffffffffffff80",
    "test    r13, r13",
    "je      0x84cd2",
    "lea     rdi, [r13+r15]",
    "mov     rsi, rcx",
    "mov     qword [rbp-0x88 {bytes}], rcx",
    "call    memcpy",
    "mov     byte [r13+r14], 0x0",
    "mov     rdi, qword [rbp-0x88 {bytes}]",
    "call    free",
    "mov     r15d, dword [rbp-0x44 {var_4c}]",
    "jmp     0x83768",
    "call    free",
    "mov     eax, dword [rbp-0x54 {var_5c}]",
    "add     dword [rbp-0x44 {var_4c}], eax",
    "jmp     0x83da3",
    "movzx   r8d, byte [rdi]",
    "cmp     r8b, 0x7e",
    "mov     byte [rbp-0xb0 {var_b8}], r8b",
    "jne     0x843d8",
    "call    free",
    "movsxd  rax, dword [rbp-0x44 {var_4c}]",
    "mov     rcx, qword [rbp-0x88 {bytes}]",
    "mov     r15, rax",
    "movzx   eax, byte [r12+rax]",
    "jmp     0x84203",
    "mov     qword [rbp-0x88 {bytes_41}], rax",
    "mov     esi, 0x3",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "add     edx, 0x1",
    "mov     byte [rcx], 0x1",
    "mov     dword [rbp-0x44 {var_4c}], edx",
    "movzx   eax, byte [rsi]",
    "mov     byte [rcx+0x2], 0x0",
    "mov     byte [rcx+0x1], al",
    "jmp     0x83f10",
    "mov     dword [rbp-0x44 {var_4c}], r15d",
    "mov     r8d, 0x7f",
    "jmp     0x83840",
    "test    r8b, r8b",
    "jne     0x8536a",
    "lea     rcx, [rel ifs_cmap]",
    "cmp     byte [rcx+r9], 0x0",
    "jne     0x8519e",
    "mov     edi, 0x3",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85dd5",
    "lea     rcx, [rel locale_utf8locale]",
    "mov     r15d, dword [rcx]  {locale_utf8locale}",
    "test    r15d, r15d",
    "je      0x8595c",
    "jmp     0x8498c",
    "lea     rcx, [rel locale_mb_cur_max]",
    "mov     r15d, r10d",
    "cmp     dword [rcx], 0x1",
    "jle     0x839e1  {locale_mb_cur_max}",
    "lea     r9, [r14+0x2]",
    "cmp     r9, rbx",
    "jae     0x85828",
    "test    al, al",
    "je      0x83bcd",
    "mov     eax, edx",
    "sub     eax, r15d",
    "cmp     eax, 0x1",
    "je      0x854d2",
    "lea     rax, [rel ifs_cmap]",
    "cmp     byte [rax+0x3d], 0x0",
    "je      0x83840  {data_1685fd}",
    "mov     dword [rbp-0x4c {var_54}], 0x1",
    "mov     rcx, qword [rdi]",
    "mov     r15d, dword [rbp-0x4c {var_54}]",
    "mov     qword [rbp-0x88 {bytes}], rcx",
    "call    dispose_word_desc",
    "test    r15d, r15d",
    "mov     rcx, qword [rbp-0x88 {bytes}]",
    "je      0x83de1",
    "mov     rcx, qword [rdi]",
    "mov     qword [rbp-0x88 {bytes}], rcx",
    "call    dispose_word_desc",
    "mov     rcx, qword [rbp-0x88 {bytes}]",
    "test    ah, 0x4",
    "je      0x84079",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "or      dword [r15+0x8], 0x8000000",
    "mov     eax, dword [rax+0x8]",
    "mov     r14, rdx",
    "movsxd  rdx, dword [rbp-0x44 {var_4c}]",
    "lea     rsi, [r15+0x1]",
    "mov     byte [rax], 0x1",
    "mov     r8, rsi",
    "mov     r15, rdx",
    "jmp     0x85339",
    "movsxd  rdx, dword [rbp-0x44 {var_4c}]",
    "mov     byte [rax], 0x1",
    "mov     r8d, 0x2",
    "mov     esi, 0x2",
    "mov     r15, rdx",
    "jmp     0x85339",
    "test    eax, 0x4000000",
    "je      0x84edf",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "or      dword [rdi+0x8], 0x20",
    "mov     eax, dword [rax+0x8]",
    "mov     rsi, qword [rbp-0x68 {bytes_10}]",
    "mov     eax, dword [rsi+0x8]",
    "test    al, 0x4",
    "je      0x85110",
    "jmp     0x850fa",
    "test    ah, 0x80",
    "je      0x85123",
    "or      dword [rbx+0x8], 0x4",
    "mov     eax, dword [rsi+0x8]",
    "or      dword [rbx+0x8], 0x40000",
    "mov     rdi, r10",
    "mov     qword [rbp-0x68 {var_70_1}], r10",
    "call    list_string",
    "mov     r10, qword [rbp-0x68 {var_70_1}]",
    "mov     r12, rax",
    "jmp     0x84873",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "mov     qword [rbx], r10",
    "test    r12d, r12d",
    "je      0x850f0",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x84baf",
    "lea     rcx, [rel ifs_value]",
    "mov     rsi, qword [rcx]  {ifs_value}",
    "test    rsi, rsi",
    "setne   cl",
    "test    edx, edx",
    "je      0x85296",
    "mov     r15, r14",
    "mov     edx, 0x2",
    "add     r14, 0x2",
    "jmp     0x83bd2",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x88 {var_90_7}], rcx",
    "mov     r15, r14",
    "call    strlen",
    "mov     rcx, qword [rbp-0x88 {var_90_7}]",
    "mov     rdx, rax",
    "add     r14, rax",
    "jmp     0x83bd2",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rdx, qword [rbp-0xb0 {var_b8}]",
    "mov     rcx, qword [rbp-0x88 {var_90_3}]",
    "mov     r13, rax",
    "jmp     0x83f73",
    "mov     rdi, r13",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     rcx, qword [rbp-0x88 {var_90_3}]",
    "mov     rdx, qword [rbp-0xb0 {var_b8}]",
    "mov     r13, rax",
    "cmp     byte [r15], 0x0",
    "jne     0x84f08",
    "mov     rsi, rax",
    "call    strcmp",
    "mov     rdi, qword [rbp-0x88 {bytes}]",
    "movzx   r8d, byte [rbp-0xb0 {var_b8}]",
    "test    eax, eax",
    "je      0x85b45",
    "lea     rcx, [r14+0x2]",
    "cmp     rcx, rbx",
    "jae     0x856e1",
    "test    r8b, r8b",
    "je      0x84f63",
    "mov     byte [rax], 0x1",
    "movsxd  rdx, dword [rbp-0x88 {bytes}]",
    "mov     r8d, 0x2",
    "mov     esi, 0x2",
    "mov     rdx, qword [rbp-0xb8 {var_c0_1}]",
    "xor     edi, edi  {0x0}",
    "lea     rcx, [rbp-0x40 {ps}]",
    "mov     r15, qword [rbp-0x40 {ps.__count} {ps.__value}]",
    "sub     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x85a8d",
    "test    r8b, r8b",
    "js      0x8595c",
    "mov     ecx, r8d",
    "lea     rdi, [rel is_basic_table]",
    "mov     dword [rbp-0x88 {bytes}], edx",
    "shr     cl, 0x5",
    "and     ecx, 0x7",
    "mov     edi, dword [rdi+rcx*4]",
    "mov     ecx, r8d",
    "shr     edi, cl",
    "and     edi, 0x1",
    "jne     0x849dc",
    "mov     rax, r9",
    "sub     rax, rbx",
    "sub     rbx, 0xffffffffffffff80",
    "shr     rax, 0x7",
    "and     eax, 0x1",
    "cmp     r9, rbx",
    "jb      0x85858",
    "lea     rax, [rel locale_mb_cur_max]",
    "mov     r10d, 0x5c01",
    "mov     r15d, 0x1",
    "mov     word [r13+r14], r10w  {0x5c01}",
    "mov     r14, r9",
    "cmp     dword [rax], 0x1",
    "mov     byte [r13+r9], 0x0",
    "jle     0x839e1",
    "lea     esi, [r15+0x1]",
    "mov     rdi, r12",
    "call    substring",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x859b8",
    "add     dword [rbp-0xbc {var_c4_1}], 0x1",
    "test    byte [rbp-0x70 {var_78}], 0x3",
    "jne     0x83ae8",
    "movzx   eax, byte [rcx]",
    "cmp     al, 0x7f",
    "jne     0x8421f",
    "jmp     0x83ef1",
    "test    eax, 0x100000",
    "je      0x8408f",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "or      dword [r15+0x8], 0x400",
    "mov     eax, dword [rax+0x8]",
    "add     r15d, 0x1",
    "mov     rdi, rcx",
    "add     rsi, rdx",
    "movsxd  rax, r15d",
    "sub     rdi, rdx",
    "nop     dword [rax]",
    "test    ah, 0x2",
    "je      0x84eeb",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "or      dword [rdi+0x8], 0x4000000",
    "mov     eax, dword [rax+0x8]",
    "test    al, 0x20",
    "je      0x85132",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "or      dword [rbx+0x8], 0x8000",
    "mov     eax, dword [rax+0x8]",
    "test    byte [rbp-0x70 {var_78}], 0x3",
    "je      0x852f5",
    "cmp     byte [r10], 0x7f",
    "mov     eax, dword [rbx+0x8]",
    "je      0x85a12",
    "mov     eax, dword [rbp-0xbc {var_c4_1}]",
    "test    eax, eax",
    "jne     0x85ae7",
    "mov     edi, dword [rbp-0x70 {var_78}]",
    "test    edi, edi",
    "jne     0x842ce",
    "test    rsi, rsi",
    "je      0x84b7e",
    "mov     rax, rbx",
    "sub     rax, r15",
    "cmp     rdx, rax",
    "jae     0x83f35",
    "test    r13, r13",
    "jne     0x83be1",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax  {0x0}",
    "mov     qword [rbp-0xb0 {var_b8}], rdx",
    "mov     qword [rbp-0x88 {bytes_8}], rcx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [rbp-0x88 {bytes}], r8b",
    "call    free",
    "mov     rdi, r15",
    "call    free",
    "movzx   r8d, byte [rbp-0x88 {bytes}]",
    "mov     dword [rbp-0x94 {var_9c_1}], 0x0",
    "jmp     0x83840",
    "mov     rax, rcx",
    "sub     rax, rbx",
    "sub     rbx, 0xffffffffffffff80",
    "shr     rax, 0x7",
    "and     eax, 0x1",
    "cmp     rcx, rbx",
    "jb      0x85711",
    "mov     esi, 0x5c01",
    "mov     r15d, edx",
    "mov     word [r13+r14], si  {0x5c01}",
    "mov     r14, rcx",
    "mov     byte [r13+rcx], 0x0",
    "jmp     0x83768",
    "mov     dword [rbp-0x44 {var_4c}], eax",
    "movzx   edx, byte [r12+rax-0x1]",
    "mov     byte [rdi+rax], dl",
    "add     rax, 0x1",
    "cmp     rsi, rax",
    "jne     0x855a8",
    "jmp     0x83bbd",
    "test    rax, rax",
    "mov     edx, 0x1",
    "cmovne  rdx, rax",
    "mov     r15, rdx",
    "lea     rdx, [rdx+0x2]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x88 {var_90_22}], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x88 {var_90_22}]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x85cfc",
    "mov     edi, 0x3",
    "mov     qword [rbp-0x40 {ps.__count} {ps.__value}], r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85dd5",
    "mov     edi, 0x3",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85dd5",
    "lea     rcx, [rel locale_utf8locale]",
    "mov     edx, dword [rcx]  {locale_utf8locale}",
    "test    edx, edx",
    "je      0x85bdc",
    "mov     qword [rbp-0xc8 {var_d0}], r9",
    "mov     byte [rbp-0xb0 {var_b8}], r8b",
    "mov     dword [rbp-0x88 {bytes}], edx",
    "test    r13, r13",
    "je      0x85b06",
    "test    rax, rax",
    "je      0x8584c",
    "movsxd  r14, edx",
    "lea     rdi, [rel is_basic_table]",
    "lea     rsi, [r12+r14]",
    "movzx   ecx, byte [rsi]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "jne     0x85a4a",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x85e15",
    "cmp     byte [rax], 0x0",
    "je      0x859b0",
    "cmp     byte [r9], 0x0",
    "jne     0x837da",
    "jmp     0x83ae1",
    "cmp     byte [rcx+0x1], 0x0",
    "je      0x85420",
    "test    rcx, rcx",
    "je      0x83dea",
    "test    ah, 0x8",
    "je      0x8409c",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "or      dword [r15+0x8], 0x100000",
    "mov     eax, dword [rax+0x8]",
    "test    byte [rbp-0x70 {var_78}], 0x3",
    "je      0x84ef5",
    "or      dword [rdi+0x8], 0x200",
    "test    eax, 0x4000000",
    "je      0x85147",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "or      dword [rbx+0x8], 0x20",
    "mov     eax, dword [rax+0x8]",
    "cmp     byte [r10+0x1], 0x0",
    "jne     0x84bc8",
    "or      eax, 0x200000",
    "mov     dword [rbx+0x8], eax",
    "mov     rax, qword [rbx]",
    "mov     rdi, r10",
    "xor     eax, eax  {0x0}",
    "call    remove_quoted_ifs",
    "test    r12d, r12d",
    "mov     r10, qword [rbp-0x78 {var_80}]",
    "mov     qword [rbx], rax",
    "je      0x84bd3",
    "test    cl, cl",
    "je      0x842ce",
    "cmp     byte [rsi], 0x0",
    "lea     rax, [rel data_1204ae[4]]",
    "mov     edx, 0x1",
    "cmove   rsi, rax  {data_1204ae[4], \" \"}",
    "jmp     0x84f42",
    "mov     qword [rbp-0xb0 {var_b8}], rcx",
    "mov     dword [rbp-0x88 {bytes}], edx",
    "test    r13, r13",
    "je      0x85a2d",
    "test    rax, rax",
    "je      0x85705",
    "lea     rsi, [r15+0x1]",
    "mov     byte [rax], 0x1",
    "movsxd  rdx, dword [rbp-0x44 {var_4c}]",
    "mov     r8, rsi",
    "jmp     0x85594",
    "mov     byte [rax], 0x1",
    "movsxd  rdx, dword [rbp-0x44 {var_4c}]",
    "mov     r8d, 0x2",
    "mov     esi, 0x2",
    "jmp     0x85594",
    "mov     byte [rax], 0x5c",
    "movsxd  rdx, dword [rbp-0x88 {bytes}]",
    "mov     r8d, 0x2",
    "mov     esi, 0x2",
    "mov     rdx, qword [rbp-0xb8 {var_c0_1}]",
    "xor     edi, edi  {0x0}",
    "lea     rcx, [rbp-0x40 {ps}]",
    "mov     r15, qword [rbp-0x40 {ps.__count} {ps.__value}]",
    "sub     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x85c92",
    "test    r8b, r8b",
    "js      0x85bdc",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0xc8 {var_d0}]",
    "movzx   r8d, byte [rbp-0xb0 {var_b8}]",
    "mov     edx, dword [rbp-0x88 {bytes}]",
    "mov     r13, rax",
    "jmp     0x85898",
    "mov     rdi, r13",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     edx, dword [rbp-0x88 {bytes}]",
    "movzx   r8d, byte [rbp-0xb0 {var_b8}]",
    "mov     r9, qword [rbp-0xc8 {var_d0}]",
    "mov     r13, rax",
    "add     rbx, 0x100",
    "cmp     r9, rbx",
    "jae     0x8584c",
    "sub     rbx, 0xffffffffffffff80",
    "cmp     r9, rbx",
    "jb      0x85858",
    "mov     edi, 0x3",
    "mov     qword [rbp-0xb0 {var_b8}], r9",
    "mov     dword [rbp-0x88 {bytes}], edx",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85dd5",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edi, dword [rax]  {locale_utf8locale}",
    "test    edi, edi",
    "je      0x85b70",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r15], 0x0",
    "mov     rdi, rax",
    "call    free",
    "mov     esi, dword [rbp-0x70 {var_78}]",
    "mov     rdi, rax",
    "and     esi, 0xfffffefe",
    "call    sub_8c420",
    "mov     rdi, r15",
    "mov     qword [rbp-0x88 {var_90_9}], rax",
    "call    free",
    "mov     rax, qword [rbp-0x88 {var_90_9}]",
    "test    rax, rax",
    "je      0x859b8",
    "mov     rdi, rcx",
    "call    free",
    "jmp     0x83dea",
    "nop     ",
    "mov     esi, dword [rbp-0x70 {var_78}]",
    "xor     r8d, r8d  {0x0}",
    "mov     rdi, r15",
    "lea     rcx, [rbp-0x50 {var_58}]",
    "xor     edx, edx  {0x0}",
    "mov     dword [rbp-0x50 {var_58}], 0x0",
    "and     esi, 0x100",
    "or      esi, 0x1",
    "call    sub_83630",
    "mov     edi, dword [rbp-0x50 {var_58}]",
    "add     dword [rbp-0x98 {var_a0_1}], edi",
    "mov     r8, rax",
    "lea     rax, [rel data_1619b0]",
    "cmp     r8, rax",
    "je      0x858e0",
    "or      dword [r15+0x8], 0x800",
    "xor     esi, esi  {0x0}",
    "call    make_word_list",
    "mov     r12, rax",
    "jmp     0x84ab6",
    "or      dword [rdi+0x8], 0x2",
    "test    ah, 0x2",
    "je      0x85153",
    "mov     rax, qword [rbp-0x68 {bytes_10}]",
    "or      dword [rbx+0x8], 0x4000000",
    "mov     eax, dword [rax+0x8]",
    "or      eax, 0x40000",
    "mov     dword [rbx+0x8], eax",
    "mov     rax, qword [rbx]",
    "jmp     0x84bd3",
    "mov     rdi, r10",
    "call    free",
    "jmp     0x850f0",
    "cmp     r10, rax",
    "je      0x850f0",
    "jmp     0x84bbb",
    "test    al, 0x40",
    "je      0x842d7",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rcx, qword [rbp-0xb0 {var_b8}]",
    "mov     edx, dword [rbp-0x88 {bytes}]",
    "mov     r13, rax",
    "jmp     0x85742",
    "mov     rdi, r13",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     edx, dword [rbp-0x88 {bytes}]",
    "mov     rcx, qword [rbp-0xb0 {var_b8}]",
    "mov     r13, rax",
    "add     rbx, 0x100",
    "cmp     rcx, rbx",
    "jae     0x85705",
    "sub     rbx, 0xffffffffffffff80",
    "cmp     rcx, rbx",
    "jb      0x85711",
    "lea     eax, [rdx+0x1]",
    "mov     rdi, rcx",
    "add     rsi, rdx",
    "cdqe    ",
    "sub     rdi, rdx",
    "nop     word [rax+rax]",
    "mov     dword [rbp-0x44 {var_4c}], eax",
    "movzx   edx, byte [r12+rax-0x1]",
    "mov     byte [rdi+rax], dl",
    "add     rax, 0x1",
    "cmp     rsi, rax",
    "jne     0x84a15",
    "jmp     0x83bbd",
    "test    rax, rax",
    "mov     edx, 0x1",
    "cmovne  rdx, rax",
    "mov     r15, rdx",
    "lea     rdx, [rdx+0x2]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x88 {var_90_23}], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x88 {var_90_23}]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x85cfc",
    "mov     edi, 0x3",
    "mov     qword [rbp-0x40 {ps.__count} {ps.__value}], r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85dd5",
    "test    r13, r13",
    "jne     0x851ab",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax  {0x0}",
    "mov     qword [rbp-0xb0 {var_b8}], r9",
    "mov     byte [rbp-0x88 {bytes}], r8b",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [rax], 0x1",
    "mov     edx, dword [rbp-0x88 {bytes}]",
    "mov     esi, 0x2",
    "mov     r8d, 0x2",
    "mov     r9, qword [rbp-0xb0 {var_b8}]",
    "jmp     0x85261",
    "mov     rdx, qword [rbp-0xb8 {var_c0_1}]",
    "xor     edi, edi  {0x0}",
    "lea     rcx, [rbp-0x40 {ps}]",
    "mov     qword [rbp-0x88 {bytes_48}], r9",
    "mov     r15, qword [rbp-0x40 {ps.__count} {ps.__value}]",
    "sub     rdx, r14",
    "call    mbrtowc",
    "mov     r9, qword [rbp-0x88 {bytes_48}]",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x8521b",
    "test    cl, cl",
    "js      0x85b70",
    "mov     qword [rbp-0x88 {var_90_10}], 0x1",
    "mov     esi, 0x3",
    "mov     edx, 0x2",
    "cmp     byte [r15+0x1], 0x0",
    "je      0x85b2b",
    "xor     edx, edx  {0x0}",
    "mov     rdi, rax",
    "lea     rsi, [rel data_159ea0]",
    "call    sh_backslash_quote",
    "mov     rdi, qword [rbp-0x88 {var_90_9}]",
    "mov     r15, rax",
    "call    free",
    "test    r15, r15",
    "jne     0x859d2",
    "mov     r10, r13",
    "mov     r13, r15",
    "mov     r15, r8",
    "mov     rdi, r10",
    "call    free",
    "mov     rdi, r12",
    "mov     r12, r15",
    "call    free",
    "mov     qword [r13], 0x0",
    "mov     rdi, r13",
    "call    dispose_word",
    "jmp     0x8487b",
    "lea     rax, [rel data_1619a0]",
    "cmp     r8, rax",
    "je      0x858e0",
    "xor     esi, esi  {0x0}",
    "mov     rdi, rbx",
    "call    make_word_list",
    "xor     r10d, r10d  {0x0}",
    "mov     r12, rax",
    "jmp     0x84873",
    "or      dword [rbx+0x8], 0x200",
    "mov     qword [rbp-0x78 {var_80}], rsi",
    "mov     qword [rbp-0x70 {var_78}], r13",
    "call    alloc_word_desc",
    "mov     rsi, qword [rbp-0x78 {var_80}]",
    "mov     r12d, dword [rbp-0x4c {var_54}]",
    "mov     r10, qword [rbp-0x70 {var_78}]",
    "mov     rbx, rax",
    "test    byte [rsi], 0xdf",
    "jne     0x85c61",
    "test    r13, r13",
    "jne     0x84f70",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax  {0x0}",
    "mov     qword [rbp-0x88 {bytes_9}], rcx",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rsi, [r15+0x1]",
    "mov     byte [rax], 0x5c",
    "movsxd  rdx, dword [rbp-0x44 {var_4c}]",
    "mov     r8, rsi",
    "jmp     0x84a07",
    "mov     byte [rax], 0x5c",
    "movsxd  rdx, dword [rbp-0x44 {var_4c}]",
    "mov     r8d, 0x2",
    "mov     esi, 0x2",
    "jmp     0x84a07",
    "lea     eax, [rdx+0x1]",
    "mov     rdi, rcx",
    "lea     rdx, [rsi+r14]",
    "cdqe    ",
    "sub     rdi, r14",
    "test    rax, rax",
    "mov     edx, 0x1",
    "mov     qword [rbp-0x88 {var_90_14}], r9",
    "cmovne  rdx, rax",
    "lea     r14, [rdx+0x2]",
    "mov     r15, rdx",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85cff",
    "mov     edi, 0x3",
    "mov     qword [rbp-0x40 {ps.__count} {ps.__value}], r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x85dd5",
    "setne   al",
    "movzx   eax, al",
    "mov     qword [rbp-0xb0 {var_b8}], rax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [rcx], 0x5b",
    "lea     rdi, [rcx+0x1]",
    "mov     rsi, r15",
    "mov     qword [rbp-0xd0 {var_d8_2}], rcx",
    "mov     qword [rbp-0xb0 {var_b8}], rdx",
    "call    __strcpy_chk",
    "mov     rcx, qword [rbp-0xd0 {var_d8_2}]",
    "mov     rax, qword [rbp-0x88 {var_90_10}]",
    "mov     rdi, r15",
    "mov     rdx, qword [rbp-0xb0 {var_b8}]",
    "mov     byte [rcx+rax], 0x5d",
    "mov     byte [rcx+rdx], 0x0",
    "mov     qword [rbp-0x88 {var_90_11}], rcx",
    "call    free",
    "mov     eax, dword [rbp-0xc8 {var_d0}]",
    "mov     rcx, qword [rbp-0x88 {var_90_11}]",
    "add     eax, 0x1",
    "mov     dword [rbp-0x44 {var_4c}], eax",
    "movzx   eax, byte [rcx]",
    "jmp     0x8421f",
    "mov     qword [rbp-0x88 {var_90_10}], 0x2",
    "mov     esi, 0x4",
    "mov     edx, 0x3",
    "jmp     0x8469b",
    "cmp     byte [r15+0x2], 0x0",
    "je      0x85c30",
    "cmp     byte [r15], 0x0",
    "je      0x84686",
    "mov     rdi, r15",
    "mov     qword [rbp-0x88 {bytes}], r8",
    "call    dispose_word",
    "mov     r8, qword [rbp-0x88 {bytes}]",
    "test    r8, r8",
    "je      0x8550d",
    "mov     rdi, r10",
    "mov     edx, 0x1",
    "call    list_string",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "mov     rdi, rax",
    "call    string_list_internal",
    "test    r12d, r12d",
    "mov     r10, qword [rbp-0x70 {var_78}]",
    "mov     qword [rbx], rax",
    "je      0x852e8",
    "mov     qword [rax], r10",
    "test    r12d, r12d",
    "je      0x852f5",
    "lea     eax, [rdx+0x1]",
    "mov     rdi, rcx",
    "add     rsi, rdx",
    "cdqe    ",
    "sub     rdi, rdx",
    "mov     dword [rbp-0x44 {var_4c}], eax",
    "movzx   esi, byte [r12+rax-0x1]",
    "mov     byte [rdi+rax], sil",
    "add     rax, 0x1",
    "cmp     rdx, rax",
    "jne     0x85270",
    "mov     byte [rcx+r8], 0x0",
    "mov     r14, r9",
    "movzx   eax, byte [rcx]",
    "jmp     0x8421f",
    "movsxd  r14, dword [rbp-0x44 {var_4c}]",
    "mov     byte [rax], 0x1",
    "lea     rsi, [r15+0x1]",
    "mov     r9, qword [rbp-0x88 {var_90_14}]",
    "mov     r8, rsi",
    "mov     rdx, r14",
    "movsxd  r14, dword [rbp-0x44 {var_4c}]",
    "mov     byte [rax], 0x1",
    "mov     esi, 0x2",
    "mov     r8d, 0x2",
    "mov     r9, qword [rbp-0x88 {bytes_48}]",
    "mov     rdx, r14",
    "jmp     0x85261",
    "mov     rdi, rsi",
    "mov     qword [rbp-0xd0 {var_d8_1}], rdx",
    "mov     qword [rbp-0xb0 {var_b8}], rsi",
    "call    malloc",
    "mov     rsi, qword [rbp-0xb0 {var_b8}]",
    "mov     rdx, qword [rbp-0xd0 {var_d8_1}]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x85d47",
    "mov     qword [rbp-0x88 {var_90_10}], 0x3",
    "mov     esi, 0x5",
    "mov     edx, 0x4",
    "jmp     0x8469b",
    "mov     rdi, r15",
    "call    strlen",
    "lea     rdx, [rax+0x2]",
    "lea     rsi, [rax+0x3]",
    "add     rax, 0x1",
    "mov     qword [rbp-0x88 {var_90_10}], rax",
    "jmp     0x8469b",
    "mov     r15d, dword [rbp-0x44 {var_4c}]",
    "mov     r11d, dword [rbp-0x50 {var_58}]",
    "mov     eax, r15d",
    "test    r11d, r11d",
    "je      0x84a38",
    "mov     rax, qword [r8+0x8]",
    "test    rax, rax",
    "je      0x8411e",
    "cmp     qword [rbx], r10",
    "je      0x852f5",
    "jmp     0x852de",
    "cmp     byte [r10], 0x7f",
    "je      0x85c4a",
    "cmp     dword [rbp-0xa0 {var_a8_1}], 0x1",
    "mov     r15d, eax",
    "je      0x84dd0",
    "add     dword [rbp-0x48 {var_50}], 0x1",
    "jmp     0x83768",
    "mov     rdi, r8",
    "mov     qword [rbp-0x88 {var_90_5}], r8",
    "call    dequote_list",
    "mov     edi, dword [rbp-0x50 {var_58}]",
    "mov     r8, qword [rbp-0x88 {var_90_5}]",
    "test    edi, edi",
    "je      0x84160",
    "cmp     qword [r8], 0x0",
    "je      0x85673",
    "mov     rdi, r10",
    "call    free",
    "cmp     byte [r10+0x1], 0x0",
    "jne     0x852e8",
    "cmp     qword [r8], 0x0",
    "je      0x855c2",
    "mov     rax, qword [rbp-0x90 {var_98}]",
    "add     dword [rbp-0x48 {var_50}], 0x1",
    "test    rax, rax",
    "je      0x84151",
    "test    byte [rax+0xa], 0x4",
    "je      0x8411e",
    "or      dword [rbx+0x8], 0x40000",
    "jmp     0x852e8",
    "mov     rax, qword [r8+0x8]",
    "mov     qword [rbp-0xb0 {var_b8}], r8",
    "mov     rax, qword [rax]",
    "mov     rdi, rax",
    "mov     qword [rbp-0x88 {var_90_20}], rax",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     r8, qword [rbp-0xb0 {var_b8}]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0x85d6f",
    "mov     esi, dword [rbp-0x48 {var_50}]",
    "test    esi, esi",
    "jne     0x85377",
    "mov     rax, qword [rbp-0x80 {var_88}]",
    "test    rax, rax",
    "je      0x84160",
    "mov     dword [rax], 0x1",
    "mov     r10d, dword [rbp-0x4c {var_54}]",
    "test    r10d, r10d",
    "je      0x85693",
    "mov     qword [rbp-0xb0 {var_b8}], rax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "mov     qword [rbp-0xc8 {var_d0}], r8",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, qword [rbp-0x88 {var_90_20}]",
    "mov     rdx, r15",
    "mov     rdi, rcx",
    "mov     qword [rbp-0xb0 {var_b8}], r8",
    "call    __strcpy_chk",
    "mov     r8, qword [rbp-0xb0 {var_b8}]",
    "mov     r15, rax",
    "mov     rax, qword [r8+0x8]",
    "mov     rdi, r8",
    "mov     eax, dword [rax+0x8]",
    "mov     dword [rbp-0x88 {var_90_20}], eax",
    "call    dispose_words",
    "test    dword [rbp-0x88 {var_90_20}], 0x40000",
    "je      0x83da3",
    "mov     rdi, r8",
    "xor     edx, edx  {0x0}",
    "mov     esi, 0x1",
    "mov     qword [rbp-0x88 {var_90_16}], r8",
    "call    string_list_dollar_at",
    "mov     r8, qword [rbp-0x88 {var_90_16}]",
    "mov     rcx, rax",
    "jmp     0x8419d",
    "mov     rdi, r8",
    "mov     qword [rbp-0x88 {var_90_6}], r8",
    "call    sub_77120",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "mov     rdi, rax",
    "call    string_list_internal",
    "mov     r8, qword [rbp-0x88 {var_90_6}]",
    "mov     rcx, rax",
    "mov     dword [rax], 0x1",
    "mov     dword [rbp-0x4c {var_54}], 0x1",
    "jmp     0x8411e",
    "mov     r9d, dword [rbp-0x50 {var_58}]",
    "test    r9d, r9d",
    "je      0x85693",
    "cmp     byte [r15], 0x7f",
    "jne     0x85657",
    "mov     rdi, r8",
    "mov     qword [rbp-0x88 {bytes}], rcx",
    "call    dispose_words",
    "mov     rcx, qword [rbp-0x88 {bytes}]",
    "jmp     0x83de1",
    "add     dword [rbp-0x48 {var_50}], 0x1",
    "mov     rdi, r15",
    "call    remove_quoted_nulls",
    "jmp     0x83da3",
    "cmp     byte [r15+0x1], 0x0",
    "je      0x84f08"
  ],
  "high level IL": [
    "char* bytes_10 = arg1",
    "char* result = *arg1",
    "void* fsbase",
    "int64_t rax = *(fsbase + 0x28)",
    "mbstate_t ps",
    "ps.__count = 0",
    "ps.__value = 0",
    "int32_t rax_2",
    "if (*result == 0x22)",
    "rax_2 = strcmp(result, \"\"$@\"\")",
    "int32_t var_54",
    "int32_t var_50",
    "char* oldmem_7",
    "if (*result != 0x22 || rax_2 != 0)",
    "char* oldmem_10 = malloc(0x70)",
    "oldmem_7 = oldmem_10",
    "if (oldmem_10 == 0)",
    "sub_a7f00()",
    "noreturn",
    "*oldmem_7 = 0",
    "var_54 = 0",
    "var_50 = 0",
    "label_836c7:",
    "int32_t rax_3",
    "char* bytes_5",
    "rax_3, bytes_5 = __ctype_get_mb_cur_max()",
    "char* oldmem_8 = oldmem_7",
    "uint64_t var_c0_1 = 1",
    "if (rax_3 s> 1)",
    "uint64_t rax_4",
    "rax_4, bytes_5 = strlen(result)",
    "oldmem_8 = oldmem_7",
    "var_c0_1 = rax_4",
    "if (arg4 != 0)",
    "*arg4 = 0",
    "int32_t var_4c = 0",
    "int32_t r15_1 = 0",
    "char* bytes_38 = nullptr",
    "char* oldmem = oldmem_8",
    "int32_t var_b0_1 = 0xffffffff",
    "uint64_t bytes_1 = 0x70",
    "int32_t var_a4_1 = 0",
    "int32_t var_9c_1 = 0",
    "int32_t var_a0_1 = 0",
    "int32_t var_c4_1 = 0",
    "int32_t var_a8_1 = 0",
    "while (true)",
    "int64_t rax_6 = sx.q(r15_1)",
    "void* s_4 = &result[rax_6]",
    "uint32_t r8 = zx.d(*s_4)",
    "uint32_t r10_1 = r8",
    "char var_b8",
    "char* bytes",
    "int32_t var_5c",
    "int64_t r8_1",
    "char r15_3",
    "char* r15_7",
    "if (r8.b s> 0x60)",
    "if (r8.b == 0x7e)",
    "int32_t rax_80 = *(bytes_10 + 8)",
    "if ((var_9c_1.b & 1) == 0 && r15_1 s> 0)",
    "label_848e7:",
    "if (data_16863e == 0)",
    "var_9c_1 = 0",
    "goto label_83840",
    "int32_t rdx_47 = (arg2 & 3) | arg3 | (rax_80 & 0x50)",
    "var_9c_1 = rdx_47",
    "if (rdx_47 == 0)",
    "goto label_83ae1",
    "var_9c_1 = 0",
    "goto label_83840",
    "bytes_5 = (zx.q(rax_80) & 0x1000) | (arg2 & 3)",
    "var_9c_1 = bytes_5.d",
    "if (bytes_5.d != 0)",
    "goto label_848e7",
    "int32_t r15_13 = 2",
    "if ((rax_80:1.b & 8) == 0)",
    "r15_13.b = (rax_80.b & 0x84) != 0",
    "bytes.b = r8.b",
    "char* bytes_4",
    "bytes_4, bytes_5 = bash_tilde_find_word(s_4, r15_13, &var_5c)",
    "r8 = zx.d(bytes.b)",
    "if (bytes_4 == 0)",
    "goto label_83840",
    "if (*bytes_4 == 0 || var_5c s<= 0)",
    "bytes.b = r8.b",
    "bytes_5 = free(bytes_4)",
    "r8 = zx.d(bytes.b)",
    "var_9c_1 = 0",
    "goto label_83840",
    "bytes = bytes_4",
    "char* rax_81 = bash_tilde_expand(bytes_4, r15_13)",
    "char* bytes_6 = bytes",
    "r15_7 = rax_81",
    "if (rax_81 == 0)",
    "bytes_5 = free(bytes_6)",
    "r15_1 = var_4c + var_5c",
    "goto label_84a56",
    "if (*rax_81 == 0x7e)",
    "char r8_6 = *bytes_6",
    "if (r8_6 == 0x7e)",
    "int32_t rax_82 = strcmp(bytes_6, rax_81)",
    "bytes_6 = bytes",
    "if (rax_82 == 0)",
    "bytes.b = r8_6",
    "free(bytes_6)",
    "bytes_5 = free(r15_7)",
    "r8 = zx.d(bytes.b)",
    "var_9c_1 = 0",
    "goto label_83840",
    "free(bytes_6)",
    "var_4c += var_5c",
    "goto label_83da3",
    "label_837d0:",
    "if ((arg2.b & 3) != 0)",
    "label_837e5:",
    "var_4c = r15_1 + 1",
    "r15_3 = 1",
    "if (rax_3 s<= 1)",
    "goto label_837f5",
    "label_83b0f:",
    "int32_t r15_4 = var_4c - 1",
    "int64_t rdx_8 = sx.q(r15_4)",
    "var_4c = r15_4",
    "char* s_1 = &result[rdx_8]",
    "uint32_t rcx_6 = zx.d(*s_1)",
    "uint32_t rax_28",
    "rax_28.b = rcx_6.b u>> 5",
    "int64_t rdx_10",
    "int64_t rsi_4",
    "if (((*(&is_basic_table + ((zx.q(rax_28) & 7) << 2)) u>> rcx_6.b).b & 1) != 0)",
    "char* bytes_18 = malloc(3)",
    "bytes_5 = bytes_18",
    "if (bytes_18 == 0)",
    "sub_a7f00()",
    "noreturn",
    "*bytes_18 = 1",
    "r8_1 = 2",
    "rsi_4 = 2",
    "rdx_10 = rdx_8",
    "char temp2_1",
    "if (locale_utf8locale != 0)",
    "temp2_1 = rcx_6.b",
    "uint64_t rax_33",
    "if (locale_utf8locale == 0 || temp2_1 s< 0)",
    "mbstate_t r15_24",
    "r15_24.__count = ps.__count",
    "r15_24.__value = ps.__value",
    "rax_33 = mbrtowc(nullptr, s_1, var_c0_1 - rdx_8, &ps)",
    "if (rax_33 u<= -3)",
    "goto label_83b58",
    "ps.__count = r15_24.__count",
    "ps.__value = r15_24.__value",
    "char* bytes_21 = malloc(3)",
    "bytes_5 = bytes_21",
    "if (bytes_21 == 0)",
    "sub_a7f00()",
    "noreturn",
    "rdx_10 = sx.q(var_4c)",
    "*bytes_21 = 1",
    "r8_1 = 2",
    "rsi_4 = 2",
    "r15_4 = rdx_10.d",
    "rax_33 = zx.q(temp2_1 != 0)",
    "label_83b58:",
    "uint64_t rdx_9 = 1",
    "if (rax_33 != 0)",
    "rdx_9 = rax_33",
    "uint64_t var_90_1 = rdx_9 + 2",
    "char* bytes_12 = malloc(rdx_9 + 2)",
    "bytes_5 = bytes_12",
    "if (bytes_12 == 0)",
    "sub_a7f00()",
    "noreturn",
    "rdx_10 = sx.q(var_4c)",
    "*bytes_12 = 1",
    "rsi_4 = rdx_9 + 1",
    "r8_1 = rsi_4",
    "r15_4 = rdx_10.d",
    "int64_t i = sx.q(r15_4 + 1)",
    "var_4c = i.d",
    "*(bytes_5 - rdx_10 + i) = result[i - 1]",
    "i += 1",
    "do while (i != rsi_4 + rdx_10)",
    "label_83bbd:",
    "bytes_5[r8_1] = 0",
    "if (*bytes_5 == 0)",
    "goto label_83bcd",
    "label_83f10:",
    "if (bytes_5[1] != 0)",
    "goto label_84231",
    "goto label_83f1a",
    "if (arg3 == 0)",
    "bytes_5 = &ifs_cmap",
    "if (*(&ifs_cmap + zx.q(r10_1.b)) == 0)",
    "goto label_84404",
    "bytes_5 = bytes_10",
    "if ((bytes_5[8] & 0x50) == 0)",
    "label_83ae1:",
    "var_c4_1 += 1",
    "label_83ae8:",
    "if (*s_4 != 0)",
    "goto label_837e5",
    "r15_3 = 1",
    "if (rax_3 s<= 1)",
    "goto label_837f5",
    "goto label_83b0f",
    "label_84404:",
    "if (locale_mb_cur_max s<= 1)",
    "goto label_83840",
    "uint32_t rdx_32",
    "rdx_32.b = r10_1.b u>> 5",
    "uint64_t r15_14",
    "if ((*(&is_basic_table + ((zx.q(rdx_32) & 7) << 2)) u>> r10_1.b & 1) == 0)",
    "char temp3_1",
    "if (locale_utf8locale != 0)",
    "temp3_1 = r10_1.b",
    "uint64_t r8_10",
    "if (locale_utf8locale == 0 || temp3_1 s< 0)",
    "mbstate_t r15_27",
    "r15_27.__count = ps.__count",
    "r15_27.__value = ps.__value",
    "uint64_t rax_170 = mbrtowc(nullptr, s_4, var_c0_1 - rax_6, &ps)",
    "r8_10 = rax_170",
    "if (rax_170 u<= -3)",
    "goto label_85084",
    "ps.__count = r15_27.__count",
    "ps.__value = r15_27.__value",
    "bytes = &(*nullptr->ident.signature)[2]",
    "r15_14 = 1",
    "r8.b = temp3_1 != 0",
    "r8_10 = zx.q(r8.b)",
    "label_85084:",
    "uint64_t rax_152 = 1",
    "if (r8_10 != 0)",
    "rax_152 = r8_10",
    "r15_14 = rax_152",
    "bytes = rax_152 + 1",
    "bytes = &(*nullptr->ident.signature)[2]",
    "r15_14 = 1",
    "char* bytes_15 = malloc(bytes)",
    "bytes_5 = bytes_15",
    "if (bytes_15 == 0)",
    "var_b8.q = bytes_15",
    "sub_a7f00()",
    "noreturn",
    "int64_t rdx_37 = sx.q(var_4c)",
    "int64_t i_1 = sx.q((rdx_37 + 1).d)",
    "var_4c = i_1.d",
    "*(bytes_5 - rdx_37 + i_1 - 1) = result[i_1 - 1]",
    "i_1 += 1",
    "do while (i_1 != r15_14 + rdx_37 + 1)",
    "bytes_5[r15_14] = 0",
    "if (r8.b s< 0 || r8.b u> 0x60)",
    "goto label_837d0",
    "int32_t var_d0",
    "int32_t var_58",
    "char rax_53",
    "char rax_75",
    "void* bytes_43",
    "void* bytes_44",
    "char* bytes_37",
    "int32_t r15_11",
    "switch (r8.b)",
    "case 0",
    "oldmem_7 = oldmem",
    "if (*oldmem != 0)",
    "int16_t rax_78 = (*(bytes_10 + 8)).w",
    "int32_t var_80",
    "if ((rax_78.b & 0x10) != 0)",
    "var_80.q = oldmem",
    "int64_t* rax_140 = alloc_word_desc()",
    "char* r10_6 = var_80.q",
    "int32_t r13_1 = var_54",
    "*rax_140 = r10_6",
    "if (r13_1 != 0 && *r10_6 == 0x7f && r10_6[1] == 0)",
    "rax_140[1].d |= 0x40000",
    "int32_t rax_141 = *(bytes_10 + 8)",
    "if ((rax_141.b & 4) != 0)",
    "rax_140[1].d |= 4",
    "rax_141 = *(bytes_10 + 8)",
    "if ((rax_141:1.b & 0x80) != 0)",
    "rax_140[1].d |= 0x8000",
    "rax_141 = *(bytes_10 + 8)",
    "if ((rax_141.b & 0x20) != 0)",
    "rax_140[1].d |= 0x20",
    "rax_141 = *(bytes_10 + 8)",
    "if ((rax_141 & 0x4000000) != 0)",
    "rax_140[1].d |= 0x4000000",
    "rax_141 = *(bytes_10 + 8)",
    "if ((rax_141:1.b & 2) != 0)",
    "rax_140[1].d |= 0x200",
    "if ((arg2.b & 3) != 0)",
    "rax_140[1].d |= 2",
    "result = make_word_list(rax_140, 0)",
    "oldmem_7 = nullptr",
    "int64_t* rbx_8",
    "if ((rax_78:1.b & 8) != 0)",
    "var_80.q = oldmem",
    "int64_t* rax_154 = list_string(oldmem, &data_122e02, arg2)",
    "char* r10_7 = var_80.q",
    "rbx_8 = rax_154[1]",
    "if (var_54 != 0 && *r10_7 == 0x7f && r10_7[1] == 0)",
    "rbx_8[1].d |= 0x40000",
    "var_80.q = r10_7",
    "free(rax_154)",
    "free(var_80.q)",
    "label_850f0:",
    "if ((arg2.b & 3) == 0 && var_a8_1 != 2)",
    "goto label_85102",
    "label_850fa:",
    "rbx_8[1].d |= 2",
    "label_85102:",
    "int32_t rax_155 = *(bytes_10 + 8)",
    "if ((rax_155.b & 4) != 0)",
    "rbx_8[1].d |= 4",
    "rax_155 = *(bytes_10 + 8)",
    "if ((rax_155:1.b & 0x80) != 0)",
    "rbx_8[1].d |= 0x8000",
    "rax_155 = *(bytes_10 + 8)",
    "if ((rax_155.b & 0x20) != 0)",
    "rbx_8[1].d |= 0x20",
    "rax_155 = *(bytes_10 + 8)",
    "if ((rax_155 & 0x4000000) != 0)",
    "rbx_8[1].d |= 0x4000000",
    "rax_155 = *(bytes_10 + 8)",
    "if ((rax_155:1.b & 2) != 0)",
    "rbx_8[1].d |= 0x200",
    "oldmem_7 = nullptr",
    "result = make_word_list(rbx_8, 0)",
    "int32_t rdx_28 = var_50",
    "char* ifs_value_1",
    "if ((var_a0_1 | rdx_28) == 0)",
    "if (var_a4_1 == 0)",
    "label_84b7e:",
    "var_80.q = oldmem_7",
    "int64_t* rax_116 = alloc_word_desc()",
    "int32_t r12 = var_54",
    "char* r10_5 = var_80.q",
    "rbx_8 = rax_116",
    "char* rax_121",
    "if (arg5 == 0 || *arg5 != 0 || var_c4_1 == 0)",
    "*rbx_8 = r10_5",
    "if (r12 != 0)",
    "label_84bbf:",
    "int32_t rax_119 = rbx_8[1].d",
    "if (*r10_5 == 0x7f && r10_5[1] == 0)",
    "rbx_8[1].d = rax_119 | 0x40000",
    "rax_121 = *rbx_8",
    "rbx_8[1].d = rax_119 | 0x200000",
    "rax_121 = *rbx_8",
    "goto label_84bd3",
    "rax_121 = remove_quoted_ifs(r10_5)",
    "r10_5 = var_80.q",
    "*rbx_8 = rax_121",
    "if (r12 != 0)",
    "goto label_84bbf",
    "label_84bd3:",
    "if (r10_5 != rax_121)",
    "free(r10_5)",
    "goto label_850f0",
    "label_84f2c:",
    "ifs_value_1 = \" \\t\\n\"",
    "if (ifs_is_set != 0)",
    "ifs_value_1 = \" \"",
    "result = list_string(oldmem_7, ifs_value_1, 1)",
    "if (var_a4_1 != 0)",
    "goto label_84f2c",
    "if (var_a0_1 == 0)",
    "goto label_84b7e",
    "ifs_value_1 = ifs_value",
    "if (rdx_28 == 0 && arg2 == 0 && ifs_value_1 != 0 != 0)",
    "if ((rax_78.b & 0x40) == 0)",
    "goto label_842d7",
    "var_80.q = ifs_value_1",
    "uint32_t var_78",
    "var_78.q = oldmem",
    "int64_t* rax_167 = alloc_word_desc()",
    "char* rsi_42 = var_80.q",
    "int32_t r12_2 = var_54",
    "char* r10_8 = var_78.q",
    "rbx_8 = rax_167",
    "if ((*rsi_42 & 0xdf) != 0)",
    "void* rax_204 = string_list_internal(list_string(r10_8, rsi_42, 1), \" \")",
    "r10_8 = var_78.q",
    "*rbx_8 = rax_204",
    "if (r12_2 != 0 && *r10_8 == 0x7f)",
    "label_85c4f:",
    "if (r10_8[1] == 0)",
    "rbx_8[1].d |= 0x40000",
    "label_852e8:",
    "if (*rbx_8 != r10_8)",
    "free(r10_8)",
    "*rax_167 = r10_8",
    "if (r12_2 != 0)",
    "if (*r10_8 == 0x7f)",
    "goto label_85c4f",
    "goto label_852e8",
    "if (var_a8_1 != 2)",
    "goto label_85102",
    "goto label_850fa",
    "if (ifs_value_1 == 0)",
    "goto label_84b7e",
    "label_842d7:",
    "if (*ifs_value_1 == 0)",
    "result = list_string(oldmem_7, \" \", 1)",
    "result = list_string(oldmem_7, ifs_value_1, 1)",
    "if (var_54 == 0 && (var_50 != 0 || var_a8_1 != 1))",
    "result = nullptr",
    "*oldmem_7 = 0x7f",
    "int64_t* rax_112 = alloc_word_desc()",
    "rax_112[1].d |= 0x40000",
    "*rax_112 = oldmem_7",
    "result = make_word_list(rax_112, 0)",
    "if ((arg2.b & 3) != 0)",
    "rax_112[1].d |= 2",
    "oldmem_7 = nullptr",
    "break",
    "break",
    "case 1",
    "r15_11 = r15_1 + 1",
    "var_4c = r15_11",
    "uint32_t rcx_16",
    "int64_t rdx_27",
    "char* s_2",
    "if (rax_3 s> 1)",
    "rdx_27 = sx.q(r15_11)",
    "s_2 = &result[rdx_27]",
    "rcx_16 = zx.d(*s_2)",
    "if (rax_3 s<= 1 || rcx_16.b == 0)",
    "char* bytes_14 = malloc(3)",
    "bytes_5 = bytes_14",
    "if (bytes_14 == 0)",
    "char* bytes_42 = bytes_14",
    "sub_a7f00()",
    "noreturn",
    "*bytes_5 = 1",
    "rax_75 = result[sx.q(r15_11)]",
    "bytes_5[2] = 0",
    "bytes_5[1] = rax_75",
    "goto label_84203",
    "uint32_t rax_131",
    "rax_131.b = rcx_16.b u>> 5",
    "int64_t rdx_56",
    "int64_t rsi_37",
    "if (((*(&is_basic_table + ((zx.q(rax_131) & 7) << 2)) u>> rcx_16.b).b & 1) != 0 || (locale_utf8locale != 0 && rcx_16.b s>= 0))",
    "char* bytes_23 = malloc(3)",
    "bytes_5 = bytes_23",
    "if (bytes_23 == 0)",
    "sub_a7f00()",
    "noreturn",
    "*bytes_23 = 1",
    "rdx_56 = rdx_27",
    "r8_1 = 2",
    "rsi_37 = 2",
    "mbstate_t r15_23",
    "r15_23.__count = ps.__count",
    "r15_23.__value = ps.__value",
    "uint64_t rax_138 = mbrtowc(nullptr, s_2, var_c0_1 - rdx_27, &ps)",
    "if (rax_138 u<= -3)",
    "uint64_t rdx_74 = 1",
    "if (rax_138 != 0)",
    "rdx_74 = rax_138",
    "char* bytes_26 = malloc(rdx_74 + 2)",
    "bytes_5 = bytes_26",
    "if (bytes_26 == 0)",
    "sub_a7f00()",
    "noreturn",
    "rdx_56 = sx.q(var_4c)",
    "rsi_37 = rdx_74 + 1",
    "*bytes_26 = 1",
    "r8_1 = rsi_37",
    "r15_11 = rdx_56.d",
    "ps.__count = r15_23.__count",
    "ps.__value = r15_23.__value",
    "char* bytes_19 = malloc(3)",
    "bytes_5 = bytes_19",
    "if (bytes_19 == 0)",
    "sub_a7f00()",
    "noreturn",
    "rdx_56 = sx.q(var_4c)",
    "*bytes_19 = 1",
    "r8_1 = 2",
    "rsi_37 = 2",
    "r15_11 = rdx_56.d",
    "int64_t i_2 = sx.q(r15_11 + 1)",
    "var_4c = i_2.d",
    "*(bytes_5 - rdx_56 + i_2) = result[i_2 - 1]",
    "i_2 += 1",
    "do while (rsi_37 + rdx_56 != i_2)",
    "goto label_83bbd",
    "case 2, 3, 4, 5, 6, 7, 8, 9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x21, 0x23, 0x25, 0x26, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3b, 0x3f, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5d, 0x5e, 0x5f",
    "goto label_837d0",
    "case 0x20",
    "if ((var_a4_1 | ifs_is_null) == 0)",
    "int32_t rdx_3 = *(bytes_10 + 8)",
    "if ((rdx_3 & 0x850) == 0)",
    "goto label_837d0",
    "rdx_3:1.b &= 0x40",
    "if (rdx_3:1.b != 0)",
    "goto label_837d0",
    "goto label_848ad",
    "label_848ad:",
    "var_4c = r15_1 + 1",
    "r15_3 = 1",
    "label_837f5:",
    "bytes_43 = &bytes_38[2]",
    "if (bytes_43 u< bytes_1)",
    "label_83802:",
    "*(oldmem + bytes_38) = r15_3",
    "r15_1 = var_4c",
    "*(oldmem + bytes_38 + 1) = r8.b",
    "bytes_38 = bytes_43",
    "*(oldmem + bytes_43) = 0",
    "continue",
    "continue",
    "label_839f7:",
    "void* rax_18 = bytes_43 - bytes_1",
    "bytes_1 -= -0x80",
    "if (bytes_43 u>= bytes_1)",
    "if ((zx.q((rax_18 u>> 7).d) & 1) != 0)",
    "bytes_1 -= -0x80",
    "if ((zx.q((rax_18 u>> 7).d) & 1) == 0 || bytes_43 u>= bytes_1)",
    "bytes_1 += 0x100",
    "do while (bytes_43 u>= bytes_1)",
    "var_b8.q = bytes_43",
    "bytes.b = r8.b",
    "if (oldmem == 0)",
    "char* oldmem_4",
    "oldmem_4, bytes_5 = malloc(bytes_1)",
    "bytes_43 = var_b8.q",
    "r8 = zx.d(bytes.b)",
    "oldmem = oldmem_4",
    "char* oldmem_1",
    "oldmem_1, bytes_5 = realloc(oldmem, bytes_1)",
    "r8 = zx.d(bytes.b)",
    "bytes_43 = var_b8.q",
    "oldmem = oldmem_1",
    "if (oldmem != 0)",
    "goto label_83802",
    "var_b8.q = bytes_43",
    "bytes.b = r8.b",
    "sub_a7f00()",
    "noreturn",
    "case 0x22",
    "int16_t rax_58 = arg2.w",
    "if ((rax_58.b & 3) != 0 && (rax_58:1.b & 1) == 0)",
    "goto label_83840",
    "var_4c = r15_1 + 1",
    "int32_t rax_60 = *(bytes_10 + 8)",
    "var_5c = r15_1 + 1",
    "bytes.d = rax_60",
    "char* rax_61",
    "rax_61, bytes_5 = sub_702f0(result, &var_4c, rax_60 s>> 0x11 & 0x400)",
    "int64_t rax_139",
    "if (var_5c == 1)",
    "rax_139 = sx.q(var_4c)",
    "r15_1 = rax_139.d",
    "int32_t rax_62",
    "if (var_5c != 1 || result[rax_139] != 0)",
    "var_a8_1 = 1",
    "rax_62 = var_4c",
    "if (rax_61 != 0)",
    "goto label_84013",
    "label_84dd4:",
    "bytes_5 = zx.q(arg2)",
    "var_54 = 1",
    "r15_1 = rax_62",
    "int32_t rdx_57 = *(bytes_10 + 8)",
    "if (bytes_5.d == 0)",
    "bytes_5 = zx.q(rdx_57) & 0x4810",
    "if (bytes_5.d == 0x4000)",
    "r8 = 0x7f",
    "var_a8_1 = 1",
    "var_4c = rax_62 - 1",
    "goto label_83840",
    "var_a8_1 = 1",
    "if ((rdx_57 & 0x50) == 0)",
    "goto label_84a56",
    "continue",
    "if (rax_61 == 0)",
    "label_84a48:",
    "var_a8_1 = 2",
    "label_84a56:",
    "var_54 = 1",
    "r8 = 0x7f",
    "var_4c = r15_1 - 1",
    "goto label_83840",
    "var_a8_1 = 2",
    "label_84013:",
    "if (*rax_61 == 0)",
    "bytes_5 = free(rax_61)",
    "rax_62 = var_4c",
    "label_84a3f:",
    "r15_1 = rax_62",
    "if (var_a8_1 == 1)",
    "goto label_84dd4",
    "goto label_84a48",
    "char** rax_63 = alloc_word_desc()",
    "*rax_63 = rax_61",
    "int32_t rax_64 = *(bytes_10 + 8)",
    "if ((rax_64 & 0x20000) != 0)",
    "rax_63[1].d |= rax_64 & 0x20800",
    "rax_64 = *(bytes_10 + 8)",
    "if ((rax_64 & 0x8000000) != 0)",
    "rax_63[1].d |= 0x8000000",
    "rax_64 = *(bytes_10 + 8)",
    "if ((rax_64:1.b & 4) != 0)",
    "rax_63[1].d |= 0x400",
    "rax_64 = *(bytes_10 + 8)",
    "if ((rax_64 & 0x100000) != 0)",
    "rax_63[1].d |= 0x100000",
    "rax_64 = *(bytes_10 + 8)",
    "if ((rax_64:1.b & 8) != 0)",
    "rax_63[1].d |= 0x800",
    "var_58 = 0",
    "char* result_1 = sub_83630(rax_63, (zx.q(arg2) & 0x100) | 1, 0, &var_58, 0)",
    "var_a0_1 += var_58",
    "if (result_1 == &data_1619b0 || result_1 == &data_1619a0)",
    "free(oldmem)",
    "char* result_3 = result",
    "result = result_1",
    "free(result_3)",
    "*rax_63 = nullptr",
    "dispose_word(rax_63)",
    "goto label_8487f",
    "bytes_5 = dispose_word(rax_63)",
    "int64_t* result_4 = result_1",
    "if (result_4 == 0)",
    "r15_1 = var_4c",
    "rax_62 = r15_1",
    "if (var_58 == 0)",
    "goto label_84a3f",
    "var_50 += 1",
    "continue",
    "void* rax_69 = result_4[1]",
    "if (rax_69 != 0 && *result_4 == 0 && (*(rax_69 + 0xa) & 4) != 0)",
    "if (var_54 != 0 && var_58 != 0)",
    "var_50 += 1",
    "var_54 = 1",
    "dequote_list(result_4)",
    "if (var_58 != 0)",
    "var_50 += 1",
    "if (arg4 != 0)",
    "*arg4 = 1",
    "if (arg5 != 0)",
    "*arg5 = 1",
    "if (*result_4 == 0)",
    "var_b8.q = result_4",
    "char* rax_176 = *result_4[1]",
    "uint64_t r15_31 = strlen(rax_176) + 1",
    "char* rax_178 = malloc(r15_31)",
    "int64_t r8_12 = var_b8.q",
    "if (rax_178 == 0)",
    "var_b8.q = rax_178",
    "var_d0.q = r8_12",
    "sub_a7f00()",
    "noreturn",
    "var_b8.q = r8_12",
    "int64_t* r8_13 = var_b8.q",
    "r15_7 = __strcpy_chk(rax_178, rax_176, r15_31)",
    "char* var_90_20",
    "var_90_20.d = *(r8_13[1] + 8)",
    "dispose_words(r8_13)",
    "if ((var_90_20.d & 0x40000) == 0)",
    "goto label_83da3",
    "if (*r15_7 == 0x7f && r15_7[1] == 0)",
    "goto label_84f10",
    "remove_quoted_nulls(r15_7)",
    "goto label_83da3",
    "void* bytes_35",
    "int64_t* result_5",
    "if (var_50 != 0)",
    "result_5 = result_4",
    "bytes_35 = string_list_dollar_at(result_4, 1, 0)",
    "result_5 = result_4",
    "bytes_35 = string_list_internal(sub_77120(result_4), \" \")",
    "dispose_words(result_5)",
    "bytes_5 = bytes_35",
    "case 0x24",
    "if (arg5 != 0)",
    "*arg5 = 1",
    "var_58 = 0",
    "int32_t rdx_19 = *(bytes_10 + 8)",
    "int32_t rax_50 = rdx_19 s>> 0xa & 1",
    "if ((rdx_19.b & 0x40) != 0)",
    "rax_50 |= 4",
    "if ((rdx_19:1.b & 8) != 0)",
    "rax_50 |= 8",
    "if ((rdx_19 & 0x8000000) != 0)",
    "rax_50 |= 0x10",
    "int64_t* rax_51 = sub_82010(result, &var_4c, arg2, arg5, &var_58, &var_50, &var_54, rax_50)",
    "var_a0_1 += var_58",
    "int32_t rax_52 = rax_51[1].d",
    "var_a4_1 += rax_52 & 8",
    "char* oldmem_9",
    "int64_t* r13_2",
    "if (rax_51 == &data_168700)",
    "oldmem_9 = oldmem",
    "r13_2 = rax_51",
    "label_856af:",
    "free(result)",
    "free(oldmem_9)",
    "if (r13_2 != &data_168580)",
    "result = &data_1619a0",
    "goto label_8487f",
    "result = &data_1619b0",
    "goto label_8487f",
    "if (rax_51 == &data_168580)",
    "oldmem_9 = oldmem",
    "r13_2 = rax_51",
    "goto label_856af",
    "if (arg4 != 0 && var_a0_1 != 0)",
    "*arg4 = 1",
    "rax_52 = rax_51[1].d",
    "if ((rax_52 & 0x40000) != 0)",
    "var_54 = 1",
    "if ((rax_52 & 0x200000) == 0)",
    "goto label_83edb",
    "goto label_83ed4",
    "if ((rax_52 & 0x200000) != 0)",
    "label_83ed4:",
    "var_54 = 1",
    "label_83edb:",
    "char* bytes_34 = *rax_51",
    "dispose_word_desc(rax_51)",
    "bytes_5 = bytes_34",
    "label_83ef1:",
    "if (bytes_5 == 0)",
    "r15_1 = var_4c",
    "continue",
    "continue",
    "rax_53 = *bytes_5",
    "if (rax_53 != 0x7f)",
    "goto label_8421f",
    "if (bytes_5[1] != 0)",
    "goto label_83f10",
    "bytes_5 = free(bytes_5)",
    "r15_1 = var_4c",
    "continue",
    "continue",
    "char* bytes_36 = *rax_51",
    "int32_t r15_19 = var_54",
    "dispose_word_desc(rax_51)",
    "bytes_5 = bytes_36",
    "if (r15_19 != 0)",
    "goto label_83ef1",
    "case 0x27",
    "if ((arg2.b & 3) != 0)",
    "goto label_83840",
    "var_4c = r15_1 + 1",
    "var_5c = r15_1 + 1",
    "r15_7 = sub_6d0a0(result, &var_4c, 0)",
    "if (var_5c == 1 && result[sx.q(var_4c)] == 0)",
    "if (*r15_7 == 0)",
    "bytes_5 = free(r15_7)",
    "var_a8_1 = 2",
    "label_84b4d:",
    "var_4c -= 1",
    "r8 = 0x7f",
    "goto label_83840",
    "var_a8_1 = 2",
    "if (*r15_7 == 0)",
    "bytes_5 = free(r15_7)",
    "var_54 = 1",
    "int32_t rax_115",
    "if (arg2 != 0)",
    "rax_115 = *(bytes_10 + 8)",
    "rax_115 = *(bytes_10 + 8)",
    "if ((rax_115 & 0x4810) == 0x4000)",
    "var_4c -= 1",
    "r8 = 0x7f",
    "var_a8_1 = 1",
    "goto label_83840",
    "var_a8_1 = 1",
    "r15_1 = var_4c",
    "if ((rax_115.b & 0x50) == 0)",
    "goto label_84b4d",
    "continue",
    "var_a8_1 = 1",
    "char* rax_45 = dequote_escapes(r15_7)",
    "strcpy(r15_7, rax_45)",
    "free(rax_45)",
    "label_83da3:",
    "if (*r15_7 != 0)",
    "label_84f10:",
    "char* bytes_33 = sub_87450(r15_7)",
    "free(r15_7)",
    "bytes_5 = bytes_33",
    "char* bytes_13 = malloc(2)",
    "if (bytes_13 == 0)",
    "char* bytes_40 = bytes_13",
    "sub_a7f00()",
    "noreturn",
    "*bytes_13 = 0x7f",
    "free(r15_7)",
    "bytes_5 = bytes_13",
    "case 0x3a",
    "bytes_5 = zx.q(*(bytes_10 + 8))",
    "int32_t rdx_18 = (bytes_5.d & 0x50) | arg3",
    "if ((bytes_5:1.b & 0x30) == 0 && (bytes_5.d & 0x804) != 0)",
    "if (posixly_correct != 0)",
    "bytes_5 = zx.q(bytes_5.d) & 0x80",
    "if (posixly_correct == 0 || bytes_5.d != 0)",
    "int32_t rax_101 = 1",
    "if (result[rax_6 + 1] != 0x7e)",
    "rax_101 = var_9c_1",
    "var_9c_1 = rax_101",
    "if (rdx_18 != 0)",
    "goto label_83840",
    "if (data_1685fa != 0)",
    "goto label_83c3d",
    "bytes_44 = &bytes_38[1]",
    "if (bytes_44 u< bytes_1)",
    "goto label_8384d",
    "goto label_83c93",
    "case 0x3c, 0x3e",
    "var_4c = r15_1 + 1",
    "if (result[sx.q(r15_1 + 1)] == 0x28 && (arg2.b & 3) == 0 && (bytes_10[0xa] & 0x10) == 0)",
    "var_5c = r15_1 + 2",
    "bytes.b = r8.b",
    "int32_t rcx_22",
    "rcx_22.b = no_longjmp_on_fatal_error != 0",
    "char* rax_87 = xparse_dolparen(result, &result[sx.q(r15_1 + 2)], &var_5c, rcx_22 << 6)",
    "r15_11 = var_5c",
    "var_4c = r15_11",
    "if (rax_87 != 0)",
    "var_b8.q = rax_87",
    "int32_t rsi_26",
    "rsi_26.b = bytes.b == 0x3e",
    "bytes_37 = var_b8.q",
    "bytes = sub_785d0(rax_87, rsi_26)",
    "label_8451d:",
    "free(bytes_37)",
    "int64_t rax_89 = sx.q(var_4c)",
    "bytes_5 = bytes",
    "r15_11 = rax_89.d",
    "rax_75 = result[rax_89]",
    "goto label_84203",
    "bytes_5 = nullptr",
    "rax_75 = result[sx.q(r15_11)]",
    "label_84203:",
    "if (rax_75 != 0)",
    "var_4c = r15_11 + 1",
    "if (bytes_5 == 0)",
    "r15_1 = var_4c",
    "continue",
    "continue",
    "label_8421c:",
    "rax_53 = *bytes_5",
    "label_8421f:",
    "uint64_t rdx_12",
    "char* bytes_47",
    "if (rax_53 == 0)",
    "label_83bcd:",
    "bytes_47 = bytes_38",
    "rdx_12 = 0",
    "label_83bd8:",
    "if (rdx_12 u< bytes_1 - bytes_47)",
    "label_83bf0:",
    "memcpy(oldmem + bytes_47, bytes_5, rdx_12)",
    "*(oldmem + bytes_38) = 0",
    "bytes_5 = free(bytes_5)",
    "r15_1 = var_4c",
    "continue",
    "continue",
    "continue",
    "if (bytes_5[1] != 0)",
    "label_84231:",
    "if (bytes_5[2] == 0)",
    "bytes_47 = bytes_38",
    "rdx_12 = 2",
    "bytes_38 = &bytes_38[2]",
    "goto label_83bd8",
    "bytes_47 = bytes_38",
    "uint64_t rax_76 = strlen(bytes_5)",
    "rdx_12 = rax_76",
    "bytes_38 = &bytes_38[rax_76]",
    "goto label_83bd8",
    "label_83f1a:",
    "bytes_47 = bytes_38",
    "rdx_12 = 1",
    "bytes_38 = &bytes_38[1]",
    "if (1 u< bytes_1 - bytes_47)",
    "goto label_83bf0",
    "var_b8.q = rdx_12",
    "bytes_1 = (bytes_38 & 0xffffffffffffff80) + 0x80",
    "if (oldmem == 0)",
    "rdx_12 = var_b8.q",
    "oldmem = malloc(bytes_1)",
    "rdx_12 = var_b8.q",
    "oldmem = realloc(oldmem, bytes_1)",
    "if (oldmem != 0)",
    "goto label_83bf0",
    "var_b8.q = rdx_12",
    "char* bytes_8 = bytes_5",
    "sub_a7f00()",
    "noreturn",
    "var_4c = r15_1",
    "label_83840:",
    "bytes_44 = &bytes_38[1]",
    "if (bytes_44 u< bytes_1)",
    "label_8384d:",
    "int32_t rax_9 = var_4c",
    "*(oldmem + bytes_38) = r8.b",
    "bytes_38 = bytes_44",
    "*(oldmem + bytes_44) = 0",
    "r15_1 = rax_9 + 1",
    "var_4c = r15_1",
    "continue",
    "continue",
    "label_83c93:",
    "void* rax_40 = bytes_44 - bytes_1",
    "bytes_1 -= -0x80",
    "if (bytes_44 u>= bytes_1)",
    "if ((zx.q((rax_40 u>> 7).d) & 1) != 0)",
    "bytes_1 -= -0x80",
    "if ((zx.q((rax_40 u>> 7).d) & 1) == 0 || bytes_44 u>= bytes_1)",
    "bytes_1 += 0x100",
    "do while (bytes_44 u>= bytes_1)",
    "var_b8.q = bytes_44",
    "bytes.b = r8.b",
    "if (oldmem == 0)",
    "char* oldmem_3",
    "oldmem_3, bytes_5 = malloc(bytes_1)",
    "bytes_44 = var_b8.q",
    "r8 = zx.d(bytes.b)",
    "oldmem = oldmem_3",
    "char* oldmem_2",
    "oldmem_2, bytes_5 = realloc(oldmem, bytes_1)",
    "r8 = zx.d(bytes.b)",
    "bytes_44 = var_b8.q",
    "oldmem = oldmem_2",
    "if (oldmem != 0)",
    "goto label_8384d",
    "var_b8.q = bytes_44",
    "bytes.b = r8.b",
    "sub_a7f00()",
    "noreturn",
    "case 0x3d",
    "int32_t rdx_13 = *(bytes_10 + 8)",
    "if ((rdx_13:1.b & 0x18) != 0)",
    "if (((rdx_13 & 0x50) | arg3) != 0 || data_1685fd == 0)",
    "goto label_83840",
    "label_83c3d:",
    "if ((arg2.b & 3) != 0)",
    "goto label_837e5",
    "goto label_83ae1",
    "if ((rdx_13.b & 4) == 0)",
    "label_8479e:",
    "if (var_b0_1 == r15_1)",
    "label_84d1e:",
    "int32_t rax_130 = 1",
    "if (result[rax_6 + 1] != 0x7e)",
    "rax_130 = var_9c_1",
    "var_b0_1 = r15_1",
    "var_9c_1 = rax_130",
    "bytes_5 = &posixly_correct",
    "if (posixly_correct == 0)",
    "if (var_b0_1 == 0xffffffff)",
    "goto label_84d0f",
    "goto label_8479e",
    "if ((rdx_13.b & 0x80) == 0 || var_b0_1 != 0xffffffff)",
    "goto label_8479e",
    "label_84d0f:",
    "if (r15_1 s> 0 || var_b0_1 == r15_1)",
    "goto label_84d1e",
    "if ((rdx_13 & 0x20000) != 0)",
    "rdx_13:1.b |= 8",
    "*(bytes_10 + 8) = rdx_13",
    "if (arg3 != 0 || (bytes_10[8] & 0x50) != 0 || data_1685fd == 0)",
    "goto label_83840",
    "var_c4_1 += 1",
    "if ((arg2.b & 3) != 0)",
    "goto label_83ae8",
    "goto label_83ae1",
    "case 0x5b",
    "if ((arg2 & 0x100) == 0 || shell_compatibility_level s<= 0x33)",
    "if (arg3 != 0 || data_16861b == 0 || ((*(bytes_10 + 8) & 0x50) | (arg2 & 3)) != 0)",
    "goto label_83840",
    "goto label_83ae1",
    "char rdx_40 = data_159ea0",
    "uint64_t r8_8",
    "if (*result != 0)",
    "r8_8 = 1",
    "if (result[1] != 0)",
    "r8_8 = 2",
    "if (result[2] != 0)",
    "r8_8 = strlen(result)",
    "if (rdx_40 != 1)",
    "goto label_845bf",
    "goto label_84582",
    "r8_8 = 0",
    "void* s_5",
    "if (rdx_40 != 1)",
    "sub_111360(result, r15_1, 0)",
    "s_5 = s_4",
    "label_854de:",
    "char* bytes_24 = malloc(2)",
    "bytes_5 = bytes_24",
    "if (bytes_24 == 0)",
    "var_b8.q = bytes_24",
    "sub_a7f00()",
    "noreturn",
    "rax_53 = *s_5",
    "bytes_5[1] = 0",
    "var_4c = r15_1 + 1",
    "*bytes_5 = rax_53",
    "label_84582:",
    "__builtin_memset(&data_159ea0, 0, 0x100)",
    "data_159efd = 1",
    "data_159f1e = 1",
    "data_159f00 = 1",
    "data_159ec4 = 1",
    "data_159ec7 = 1",
    "data_159efb = 0x101",
    "data_159ec2 = 1",
    "label_845bf:",
    "var_b8.q = r8_8",
    "int32_t rax_90 = sub_111360(result, r15_1, 0)",
    "s_5 = s_4",
    "int64_t rax_91 = sx.q(rax_90)",
    "if (rax_91 u>= var_b8.q || result[rax_91] != 0x5d || rax_90 - r15_1 == 1)",
    "goto label_854de",
    "char* rax_94 = substring(result, r15_1 + 1, rax_90)",
    "if (rax_94 == 0)",
    "goto label_859bd",
    "char* r15_18",
    "if (*rax_94 == 0)",
    "free(rax_94)",
    "label_859bd:",
    "char* rax_196 = malloc(1)",
    "r15_18 = rax_196",
    "if (rax_196 == 0)",
    "sub_a7f00()",
    "noreturn",
    "*r15_18 = 0",
    "if (*r15_18 == 0)",
    "goto label_84686",
    "goto label_859e1",
    "char* rax_95 = sub_8c420(rax_94, arg2 & 0xfffffefe)",
    "free(rax_94)",
    "if (rax_95 == 0)",
    "goto label_859bd",
    "r15_18 = sh_backslash_quote(rax_95, &data_159ea0, 0)",
    "free(rax_95)",
    "int64_t var_90_10",
    "uint64_t destlen",
    "uint64_t bytes_2",
    "if (r15_18 != 0 && *r15_18 != 0)",
    "label_859e1:",
    "if (r15_18[1] == 0)",
    "var_90_10 = 2",
    "bytes_2 = 4",
    "destlen = 3",
    "if (r15_18[2] == 0)",
    "var_90_10 = 3",
    "bytes_2 = 5",
    "destlen = 4",
    "uint64_t rax_197 = strlen(r15_18)",
    "destlen = rax_197 + 2",
    "bytes_2 = rax_197 + 3",
    "var_90_10 = rax_197 + 1",
    "label_84686:",
    "var_90_10 = 1",
    "bytes_2 = 3",
    "destlen = 2",
    "var_b8.q = bytes_2",
    "char* bytes_16 = malloc(bytes_2)",
    "if (bytes_16 == 0)",
    "var_b8.q = bytes_16",
    "sub_a7f00()",
    "noreturn",
    "*bytes_16 = 0x5b",
    "var_b8.q = destlen",
    "__strcpy_chk(&bytes_16[1], r15_18, destlen)",
    "bytes_16[var_90_10] = 0x5d",
    "bytes_16[var_b8.q] = 0",
    "free(r15_18)",
    "bytes_5 = bytes_16",
    "var_4c = rax_90 + 1",
    "rax_53 = *bytes_5",
    "goto label_8421f",
    "case 0x5c",
    "char* s = &result[rax_6 + 1]",
    "if (*s == 0xa)",
    "r15_1 += 2",
    "var_4c = r15_1",
    "continue",
    "continue",
    "int32_t rdx_4 = r15_1 + 1",
    "var_4c = rdx_4",
    "r8 = zx.d(*s)",
    "int32_t rdi_68",
    "if ((not.d(arg2) & 0x82) != 0 || r8.b != 0x22)",
    "int32_t rcx_5",
    "rcx_5.b = (arg2 & 0x80) != 0",
    "int32_t rdi_10",
    "rdi_10.b = r8.b == 0x7d",
    "bytes_5 = zx.q(rcx_5) & rdi_10",
    "int32_t rdi_67",
    "if ((arg2.b & 2) == 0)",
    "if ((arg2 & 1) != 0)",
    "rdi_67 = 0x40",
    "goto label_84945",
    "if (bytes_5.b != 0)",
    "goto label_84f93",
    "label_839c2:",
    "if (r8.b != 0)",
    "goto label_839cb",
    "var_4c = r15_1",
    "r8 = 0x7f",
    "goto label_83840",
    "rdi_67 = 0x80",
    "label_84945:",
    "if (bytes_5.b != 0)",
    "label_84f93:",
    "r15_3 = 1",
    "if (locale_mb_cur_max s<= 1)",
    "goto label_839e4",
    "var_b8.d = rdx_4",
    "char* bytes_20 = malloc(3)",
    "bytes_5 = bytes_20",
    "if (bytes_20 == 0)",
    "char* bytes_41 = bytes_20",
    "sub_a7f00()",
    "noreturn",
    "*bytes_5 = 1",
    "var_4c = var_b8.d + 1",
    "char rax_148 = *s",
    "bytes_5[2] = 0",
    "bytes_5[1] = rax_148",
    "goto label_83f10",
    "if ((arg2.b & 3) == 0)",
    "goto label_839c2",
    "uint64_t r9_3 = zx.q(r8.b)",
    "rdi_68 = rdi_67 & *(&sh_syntaxtab + (r9_3 << 2))",
    "if ((arg3 | rdi_68) == 0)",
    "bytes_5 = &ifs_cmap",
    "if (*(&ifs_cmap + r9_3) != 0)",
    "goto label_8519e",
    "if (r8.b != 0)",
    "goto label_8498c",
    "if (r8.b != 0)",
    "goto label_8536a",
    "bytes_5 = &bytes_38[2]",
    "if (bytes_5 u>= bytes_1)",
    "void* rax_183 = bytes_5 - bytes_1",
    "bytes_1 -= -0x80",
    "if (bytes_5 u>= bytes_1)",
    "if ((zx.q((rax_183 u>> 7).d) & 1) != 0)",
    "bytes_1 -= -0x80",
    "if ((zx.q((rax_183 u>> 7).d) & 1) == 0 || bytes_5 u>= bytes_1)",
    "bytes_1 += 0x100",
    "do while (bytes_5 u>= bytes_1)",
    "var_b8.q = bytes_5",
    "bytes.d = rdx_4",
    "if (oldmem == 0)",
    "bytes_5 = var_b8.q",
    "rdx_4 = bytes.d",
    "oldmem = malloc(bytes_1)",
    "rdx_4 = bytes.d",
    "bytes_5 = var_b8.q",
    "oldmem = realloc(oldmem, bytes_1)",
    "if (oldmem == 0)",
    "char* bytes_9 = bytes_5",
    "sub_a7f00()",
    "noreturn",
    "r15_1 = rdx_4",
    "*(oldmem + bytes_38) = 0x5c01",
    "bytes_38 = bytes_5",
    "*(oldmem + bytes_5) = 0",
    "continue",
    "if ((arg2.b & 3) == 0)",
    "label_839cb:",
    "bytes_5 = &locale_mb_cur_max",
    "r15_3 = 1",
    "if (locale_mb_cur_max s<= 1)",
    "label_839e4:",
    "var_4c = rdx_4 + 1",
    "bytes_43 = &bytes_38[2]",
    "if (bytes_43 u< bytes_1)",
    "goto label_83802",
    "goto label_839f7",
    "bytes.d = rdx_4",
    "uint32_t rcx_38",
    "rcx_38.b = r8.b u>> 5",
    "int64_t rdx_71",
    "int64_t rsi_46",
    "if ((*(&is_basic_table + ((zx.q(rcx_38) & 7) << 2)) u>> r8.b & 1) != 0 || (locale_utf8locale != 0 && r8.b s>= 0))",
    "char* bytes_25 = malloc(3)",
    "bytes_5 = bytes_25",
    "if (bytes_25 == 0)",
    "sub_a7f00()",
    "noreturn",
    "*bytes_25 = 1",
    "rdx_71 = sx.q(bytes.d)",
    "r8_1 = 2",
    "rsi_46 = 2",
    "mbstate_t r15_34",
    "r15_34.__count = ps.__count",
    "r15_34.__value = ps.__value",
    "uint64_t rax_195 = mbrtowc(nullptr, s, var_c0_1 - (rax_6 + 1), &ps)",
    "if (rax_195 u<= -3)",
    "uint64_t rdx_79 = 1",
    "if (rax_195 != 0)",
    "rdx_79 = rax_195",
    "uint64_t var_90_22 = rdx_79 + 2",
    "char* bytes_29 = malloc(rdx_79 + 2)",
    "bytes_5 = bytes_29",
    "if (bytes_29 == 0)",
    "sub_a7f00()",
    "noreturn",
    "rsi_46 = rdx_79 + 1",
    "*bytes_29 = 1",
    "rdx_71 = sx.q(var_4c)",
    "r8_1 = rsi_46",
    "ps.__count = r15_34.__count",
    "ps.__value = r15_34.__value",
    "char* bytes_27 = malloc(3)",
    "bytes_5 = bytes_27",
    "if (bytes_27 == 0)",
    "sub_a7f00()",
    "noreturn",
    "*bytes_27 = 1",
    "rdx_71 = sx.q(var_4c)",
    "r8_1 = 2",
    "rsi_46 = 2",
    "int64_t i_3 = sx.q((rdx_71 + 1).d)",
    "var_4c = i_3.d",
    "*(bytes_5 - rdx_71 + i_3) = result[i_3 - 1]",
    "i_3 += 1",
    "do while (rsi_46 + rdx_71 != i_3)",
    "goto label_83bbd",
    "rdi_68 = data_158108 & 0x40",
    "if ((arg3 | rdi_68) != 0)",
    "label_8536a:",
    "if (rdi_68 != 0)",
    "goto label_839cb",
    "goto label_8498c",
    "bytes_5 = &ifs_cmap",
    "if (data_1685e2 == 0)",
    "label_8498c:",
    "bytes_5 = &locale_mb_cur_max",
    "r15_3 = r10_1.b",
    "if (locale_mb_cur_max s<= 1)",
    "goto label_839e4",
    "bytes.d = rdx_4",
    "uint32_t rcx_28",
    "rcx_28.b = r8.b u>> 5",
    "int64_t rdx_49",
    "int64_t rsi_34",
    "if ((*(&is_basic_table + ((zx.q(rcx_28) & 7) << 2)) u>> r8.b & 1) != 0 || (locale_utf8locale != 0 && r8.b s>= 0))",
    "char* bytes_17 = malloc(3)",
    "bytes_5 = bytes_17",
    "if (bytes_17 == 0)",
    "sub_a7f00()",
    "noreturn",
    "*bytes_17 = 0x5c",
    "rdx_49 = sx.q(bytes.d)",
    "r8_1 = 2",
    "rsi_34 = 2",
    "mbstate_t r15_38",
    "r15_38.__count = ps.__count",
    "r15_38.__value = ps.__value",
    "uint64_t rax_202 = mbrtowc(nullptr, s, var_c0_1 - (rax_6 + 1), &ps)",
    "if (rax_202 u<= -3)",
    "uint64_t rdx_85 = 1",
    "if (rax_202 != 0)",
    "rdx_85 = rax_202",
    "uint64_t var_90_23 = rdx_85 + 2",
    "char* bytes_32 = malloc(rdx_85 + 2)",
    "bytes_5 = bytes_32",
    "if (bytes_32 == 0)",
    "sub_a7f00()",
    "noreturn",
    "rsi_34 = rdx_85 + 1",
    "*bytes_32 = 0x5c",
    "rdx_49 = sx.q(var_4c)",
    "r8_1 = rsi_34",
    "ps.__count = r15_38.__count",
    "ps.__value = r15_38.__value",
    "char* bytes_31 = malloc(3)",
    "bytes_5 = bytes_31",
    "if (bytes_31 == 0)",
    "sub_a7f00()",
    "noreturn",
    "*bytes_31 = 0x5c",
    "rdx_49 = sx.q(var_4c)",
    "r8_1 = 2",
    "rsi_34 = 2",
    "int64_t i_4 = sx.q((rdx_49 + 1).d)",
    "var_4c = i_4.d",
    "*(bytes_5 - rdx_49 + i_4) = result[i_4 - 1]",
    "i_4 += 1",
    "do while (rsi_34 + rdx_49 != i_4)",
    "goto label_83bbd",
    "label_8519e:",
    "void* bytes_45 = &bytes_38[2]",
    "if (bytes_45 u>= bytes_1)",
    "void* rax_191 = bytes_45 - bytes_1",
    "bytes_1 -= -0x80",
    "if (bytes_45 u>= bytes_1)",
    "if ((zx.q((rax_191 u>> 7).d) & 1) != 0)",
    "bytes_1 -= -0x80",
    "if ((zx.q((rax_191 u>> 7).d) & 1) == 0 || bytes_45 u>= bytes_1)",
    "bytes_1 += 0x100",
    "do while (bytes_45 u>= bytes_1)",
    "var_d0.q = bytes_45",
    "var_b8 = r8.b",
    "bytes.d = rdx_4",
    "if (oldmem == 0)",
    "char* oldmem_6",
    "oldmem_6, bytes_5 = malloc(bytes_1)",
    "bytes_45 = var_d0.q",
    "r8 = zx.d(var_b8)",
    "rdx_4 = bytes.d",
    "oldmem = oldmem_6",
    "char* oldmem_5",
    "oldmem_5, bytes_5 = realloc(oldmem, bytes_1)",
    "rdx_4 = bytes.d",
    "r8 = zx.d(var_b8)",
    "bytes_45 = var_d0.q",
    "oldmem = oldmem_5",
    "if (oldmem == 0)",
    "var_b8.q = bytes_45",
    "bytes.b = r8.b",
    "sub_a7f00()",
    "noreturn",
    "r15_3 = 1",
    "*(oldmem + bytes_38) = 0x5c01",
    "bytes_38 = bytes_45",
    "bool cond:33_1 = locale_mb_cur_max s<= 1",
    "*(oldmem + bytes_45) = 0",
    "if (cond:33_1)",
    "goto label_839e4",
    "int64_t r14_1 = sx.q(rdx_4)",
    "void* s_3 = &result[r14_1]",
    "uint32_t rcx_36 = zx.d(*s_3)",
    "uint32_t rax_160",
    "rax_160.b = rcx_36.b u>> 5",
    "int32_t rdx_66",
    "int64_t rsi_40",
    "int64_t r8_11",
    "void* bytes_46",
    "if (((*(&is_basic_table + ((zx.q(rax_160) & 7) << 2)) u>> rcx_36.b).b & 1) != 0)",
    "var_b8.q = bytes_45",
    "bytes.d = rdx_4",
    "char* bytes_28 = malloc(3)",
    "bytes_5 = bytes_28",
    "if (bytes_28 == 0)",
    "sub_a7f00()",
    "noreturn",
    "*bytes_28 = 1",
    "rdx_66 = bytes.d",
    "rsi_40 = 2",
    "r8_11 = 2",
    "bytes_46 = var_b8.q",
    "char temp4_1",
    "if (locale_utf8locale != 0)",
    "temp4_1 = rcx_36.b",
    "uint64_t rax_165",
    "if (locale_utf8locale == 0 || temp4_1 s< 0)",
    "void* bytes_48 = bytes_45",
    "mbstate_t r15_37",
    "r15_37.__count = ps.__count",
    "r15_37.__value = ps.__value",
    "rax_165 = mbrtowc(nullptr, s_3, var_c0_1 - r14_1, &ps)",
    "bytes_45 = bytes_48",
    "if (rax_165 u<= -3)",
    "goto label_8521e",
    "ps.__count = r15_37.__count",
    "ps.__value = r15_37.__value",
    "char* bytes_30 = malloc(3)",
    "bytes_5 = bytes_30",
    "if (bytes_30 == 0)",
    "sub_a7f00()",
    "noreturn",
    "r14_1 = sx.q(var_4c)",
    "*bytes_30 = 1",
    "rsi_40 = 2",
    "r8_11 = 2",
    "bytes_46 = bytes_48",
    "rdx_66 = r14_1.d",
    "rax_165 = zx.q(temp4_1 != 0)",
    "label_8521e:",
    "uint64_t rdx_65 = 1",
    "if (rax_165 != 0)",
    "rdx_65 = rax_165",
    "char* bytes_22 = malloc(rdx_65 + 2)",
    "bytes_5 = bytes_22",
    "if (bytes_22 == 0)",
    "sub_a7f00()",
    "noreturn",
    "r14_1 = sx.q(var_4c)",
    "*bytes_22 = 1",
    "rsi_40 = rdx_65 + 1",
    "bytes_46 = bytes_45",
    "r8_11 = rsi_40",
    "rdx_66 = r14_1.d",
    "int64_t i_5 = sx.q(rdx_66 + 1)",
    "var_4c = i_5.d",
    "*(bytes_5 - r14_1 + i_5) = result[i_5 - 1]",
    "i_5 += 1",
    "do while (rsi_40 + r14_1 != i_5)",
    "bytes_5[r8_11] = 0",
    "bytes_38 = bytes_46",
    "rax_53 = *bytes_5",
    "goto label_8421f",
    "case 0x60",
    "var_5c = r15_1",
    "var_4c = r15_1 + 1",
    "int32_t rax_12 = *(bytes_10 + 8)",
    "bytes.d = rax_12",
    "void* bytes_3",
    "bytes_3, bytes_5 = sub_6d3a0(result, &var_4c, u\"`\u2026\", (sbb.d(bytes_5.d, bytes_5.d, (rax_12 & 0x8000000) u< 1) & 0xfffffc04) + 0x400)",
    "r8 = zx.d(r8.b)",
    "if (bytes_3 == &data_1680a0 || bytes_3 == &data_1686f8)",
    "if (var_4c - 1 == var_5c)",
    "var_4c -= 1",
    "goto label_83840",
    "data_158490 = 1",
    "last_command_exit_value = 1",
    "set_pipestatus_array(&data_158490, 1)",
    "report_error(dcgettext(nullptr, \"bad substitution: no closing \"`\"\u2026\", 5), 0)",
    "free(result)",
    "free(oldmem)",
    "if (bytes_3 != &data_1680a0)",
    "result = &data_1619a0",
    "goto label_8487f",
    "result = &data_1619b0",
    "goto label_8487f",
    "if (arg5 != 0)",
    "*arg5 = 1",
    "char* bytes_7",
    "if ((bytes_10[9] & 4) != 0)",
    "bytes_7 = bytes_3",
    "bytes_5 = substring(result, var_5c, var_4c + 1)",
    "if (bytes_7 != 0)",
    "label_8394b:",
    "bytes = bytes_5",
    "bytes_37 = bytes_7",
    "goto label_8451d",
    "bytes = bytes_3",
    "de_backslash(bytes_3)",
    "char** bytes_11 = command_substitute(bytes, arg2.b, 0x80)",
    "bytes_7 = bytes",
    "bytes_5 = bytes_11",
    "if (bytes_11 != 0)",
    "char* bytes_39 = *bytes_11",
    "dispose_word_desc(bytes_11)",
    "bytes_7 = bytes",
    "bytes_5 = bytes_39",
    "if (bytes_7 != 0)",
    "goto label_8394b",
    "int64_t rax_124 = sx.q(var_4c)",
    "r15_11 = rax_124.d",
    "rax_75 = result[rax_124]",
    "goto label_84203",
    "if (bytes_5 != 0)",
    "goto label_8421c",
    "r15_1 = var_4c",
    "free(oldmem_7)",
    "if (arg1[1].d == 3 && data_161348 != 0)",
    "if (arg4 != 0)",
    "*arg4 = 1",
    "if (arg5 != 0)",
    "*arg5 = 1",
    "int64_t* rdi_79 = data_166ee0",
    "if (rdi_79 == 0)",
    "char* result_2 = sub_77120(list_rest_of_args())",
    "result = result_2",
    "data_166ee0 = copy_word_list(result_2)",
    "result = copy_word_list(rdi_79)",
    "char* oldmem_11 = malloc(0x70)",
    "oldmem_7 = oldmem_11",
    "if (oldmem_11 == 0)",
    "sub_a7f00()",
    "noreturn",
    "*oldmem_7 = 0",
    "var_54 = 0",
    "var_50 = 0",
    "if (result != 0)",
    "goto label_836c7",
    "free(oldmem_7)",
    "label_8487f:",
    "*(fsbase + 0x28)",
    "if (rax == *(fsbase + 0x28))",
    "return result",
    "__stack_chk_fail()",
    "noreturn"
  ]
}
{
  "address": "0xb75c0",
  "rules": [
    "get file attributes",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "lea     r15, [rel data_121442]  {\"cla:\"}",
    "push    r14",
    "mov     r14, rdi",
    "push    r13",
    "xor     r13d, r13d",
    "push    r12",
    "xor     r12d, r12d",
    "push    rbx",
    "xor     ebx, ebx",
    "sub     rsp, 0xb8",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel exec_argv0]",
    "mov     qword [rel data_168d30], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel loptend]",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rax], 0x0",
    "lea     r14, [rel redirection_undo_list]",
    "lea     rax, [rel loptend]",
    "mov     rdi, qword [r14]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0xd8], rax",
    "call    dispose_redirects",
    "mov     rax, qword [rbp-0xd8]",
    "mov     qword [r14], 0x0",
    "test    rax, rax",
    "je      0xb7a58",
    "cmp     eax, 0x63",
    "je      0xb76c0",
    "xor     r12d, r12d",
    "jmp     0xb768b",
    "lea     rdx, [rel restricted]",
    "mov     r15d, dword [rdx]",
    "test    r15d, r15d",
    "jne     0xb7a30",
    "mov     ebx, 0x1",
    "jmp     0xb7636",
    "jg      0xb7670",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xb7c70",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121073]  {\"restricted\"}",
    "xor     edi, edi",
    "mov     r12d, 0x1",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xb768b",
    "mov     esi, 0x1",
    "mov     rdi, rax",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "call    strvec_from_word_list",
    "mov     esi, 0x2f",
    "mov     rdi, qword [rax]",
    "mov     r14, rax",
    "lea     rax, [rel locale_utf8locale]",
    "mov     r8d, dword [rax]",
    "mov     qword [rbp-0xd8], rdi",
    "test    r8d, r8d",
    "jne     0xb7753",
    "mov     rsi, r15",
    "mov     rdi, r14",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xb76d0",
    "cmp     eax, 0x6c",
    "jne     0xb7680",
    "cmp     eax, 0xffffff9d",
    "je      0xb76b8",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xb8",
    "mov     eax, r12d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "call    strchr",
    "test    rax, rax",
    "je      0xb7ac2",
    "mov     rdi, qword [rbp-0xd8]",
    "call    builtin_usage",
    "mov     r13d, 0x1",
    "jmp     0xb7636",
    "call    builtin_help",
    "jmp     0xb7685",
    "cmp     eax, 0x61",
    "jne     0xb7680",
    "mov     rdi, qword [rbp-0xd8]",
    "mov     esi, 0x1",
    "call    search_for_command",
    "mov     qword [rbp-0xe0], rax",
    "test    rax, rax",
    "jne     0xb7c5d",
    "mov     rdi, qword [rbp-0xd8]",
    "call    full_pathname",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xb7790",
    "mov     r12d, 0x102",
    "lea     rax, [rel list_optarg]",
    "mov     r12, qword [rax]",
    "jmp     0xb7636",
    "mov     rax, qword [rbp-0xe0]",
    "mov     qword [rbp-0xd8], rax",
    "jmp     0xb7761",
    "mov     rdi, qword [r14]",
    "lea     rsi, [rbp-0xd0]",
    "call    stat",
    "test    eax, eax",
    "jne     0xb7b0c",
    "test    r12, r12",
    "je      0xb7a60",
    "mov     rax, qword [rbp-0xd8]",
    "cmp     qword [r14], rax",
    "je      0xb7789",
    "mov     rbx, qword [r14]",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "mov     r12d, 0x7f",
    "lea     rsi, [rel data_11feba]  {\"%s: not found\"}",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "lea     r13, [rel subshell_environment]",
    "jmp     0xb795d",
    "mov     eax, dword [rbp-0xb8]",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "je      0xb7c15",
    "test    r13d, r13d",
    "je      0xb782b",
    "mov     rdi, qword [r14]",
    "call    free",
    "mov     rdi, r12",
    "test    r13d, r13d",
    "je      0xb7bc9",
    "mov     qword [rbp-0xd8], r15",
    "mov     rdi, rax",
    "call    free",
    "mov     eax, dword [r13]",
    "test    eax, eax",
    "jne     0xb7cb1",
    "mov     edi, 0x15",
    "xor     r15d, r15d",
    "call    strerror",
    "mov     r12, qword [r14]",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "lea     rsi, [rel data_121447]  {\"%s: cannot execute: %s\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rsi, r12",
    "mov     rdx, rbx",
    "mov     r12d, 0x7e",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "lea     r13, [rel subshell_environment]",
    "jmp     0xb795d",
    "test    ebx, ebx",
    "jne     0xb7b95",
    "mov     r13, qword [r14]",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rsi, [rax+0x2]",
    "mov     r12, rax",
    "mov     rdi, rsi",
    "mov     qword [rbp-0xe0], rsi",
    "call    malloc",
    "mov     rsi, qword [rbp-0xe0]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0xb7c9e",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xb7cc3",
    "call    strlen",
    "lea     rsi, [rax+0x2]",
    "mov     r15, rax",
    "mov     rdi, rsi",
    "mov     qword [rbp-0xe0], rsi",
    "call    malloc",
    "mov     rsi, qword [rbp-0xe0]",
    "test    rax, rax",
    "mov     r13, rax",
    "je      0xb7c8b",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edi, r12d",
    "mov     dword [rax], r12d",
    "call    exit_shell",
    "{ Does not return }",
    "lea     rax, [rel interactive]",
    "lea     rdx, [rel no_exit_on_failed_exec]",
    "mov     eax, dword [rax]",
    "or      eax, dword [rdx]",
    "je      0xb7cb1",
    "mov     edi, 0x8",
    "call    malloc",
    "mov     qword [rbp-0xe0], rax",
    "test    rax, rax",
    "je      0xb7cd9",
    "lea     r13, [rel subshell_environment]",
    "test    byte [r13], 0x2",
    "je      0xb7bfc",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r15], 0x2d",
    "lea     rdx, [r12+0x1]",
    "lea     rdi, [r15+0x1]",
    "mov     rsi, r13",
    "call    __strcpy_chk",
    "mov     rdi, qword [r14]",
    "call    free",
    "mov     qword [r14], r15",
    "jmp     0xb782b",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r13",
    "mov     rsi, r12",
    "mov     rdi, r15",
    "mov     r13, r15",
    "call    __strcpy_chk",
    "jmp     0xb77f0",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r13], 0x2d",
    "lea     rdx, [r15+0x1]",
    "lea     rdi, [r13+0x1]",
    "mov     rsi, r12",
    "call    __strcpy_chk",
    "test    r14, r14",
    "je      0xb79b1",
    "mov     esi, 0x8",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0xe0]",
    "lea     r13, [rel subshell_environment]",
    "mov     qword [rax], 0x0",
    "jmp     0xb7868",
    "mov     edi, 0xffffffff",
    "call    adjust_shell_level",
    "jmp     0xb7845",
    "lea     rax, [rel array_needs_making]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0xb7857",
    "mov     qword [r14], r13",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xb7c75",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, r13",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "lea     rcx, [rel exec_argv0]",
    "mov     qword [rcx], r15",
    "mov     rcx, qword [rbp-0xe0]",
    "test    rcx, rcx",
    "je      0xb79f5",
    "mov     rdi, qword [r14]",
    "lea     rbx, [r14+0x8]",
    "test    rdi, rdi",
    "je      0xb79a9",
    "lea     rax, [rel interactive_shell]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0xb7881",
    "lea     rax, [rel export_env]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0xe0], rax",
    "call    sub_5ea30",
    "call    sub_8b190",
    "call    initialize_job_signals",
    "call    restore_traps",
    "test    r15d, r15d",
    "je      0xb768b",
    "lea     rax, [rel export_env]",
    "cmp     qword [rax], rcx",
    "je      0xb79f5",
    "mov     rdi, r14",
    "call    free",
    "nop     word [rax+rax]",
    "lea     rdi, [rel sub_8a770]",
    "call    sub_8a7b0",
    "lea     r12, [rel job_control]",
    "mov     edx, dword [r13]",
    "mov     r15d, dword [r12]",
    "mov     eax, r15d",
    "test    edx, edx",
    "je      0xb7b87",
    "mov     ecx, dword [r13]",
    "test    ecx, ecx",
    "je      0xb7c0b",
    "lea     rax, [rel shell_tty]",
    "mov     edi, dword [rax]",
    "cmp     edi, 0xffffffff",
    "je      0xb7a20",
    "mov     rdi, qword [rcx]",
    "lea     rbx, [rcx+0x8]",
    "test    rdi, rdi",
    "je      0xb79e9",
    "call    free",
    "mov     rdi, qword [rbx]",
    "add     rbx, 0x8",
    "test    rdi, rdi",
    "jne     0xb7998",
    "call    end_job_control",
    "mov     eax, dword [r12]",
    "jmp     0xb78a7",
    "lea     rdx, [rel interactive]",
    "or      eax, dword [rdx]",
    "je      0xb78b7",
    "call    maybe_save_shell_history",
    "jmp     0xb7881",
    "xor     edi, edi",
    "call    initialize_job_control",
    "jmp     0xb768b",
    "call    close",
    "mov     rdi, qword [rbp-0xe0]",
    "call    free",
    "nop     dword [rax]",
    "lea     rax, [rel default_buffered_input]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "js      0xb78c9",
    "call    default_tty_job_signals",
    "call    free",
    "mov     rdi, qword [rbx]",
    "add     rbx, 0x8",
    "test    rdi, rdi",
    "jne     0xb79d8",
    "mov     rdx, qword [rbp-0xe0]",
    "mov     rdi, qword [rbp-0xd8]",
    "mov     rsi, r14",
    "call    shell_execve",
    "mov     r12d, eax",
    "test    ebx, ebx",
    "je      0xb7b41",
    "call    sync_buffered_stream",
    "mov     edi, 0x1",
    "call    adjust_shell_level",
    "jmp     0xb78ea",
    "cmp     r12d, 0x7f",
    "je      0xb794e",
    "mov     rdi, qword [rbp-0xd8]",
    "xor     r14d, r14d",
    "call    free",
    "mov     rdi, qword [rbp-0xd8]",
    "call    file_status",
    "mov     ebx, eax",
    "test    al, 0x10",
    "jne     0xb7b72",
    "call    __errno_location",
    "mov     edi, 0x15",
    "mov     dword [rax], 0x15",
    "jmp     0xb790d",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "and     ebx, 0x12",
    "cmp     ebx, 0x2",
    "je      0xb7b50",
    "call    strerror",
    "mov     rsi, qword [rbp-0xd8]",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    report_error",
    "jmp     0xb794e",
    "call    strerror",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "lea     rsi, [rel data_121447]  {\"%s: cannot execute: %s\"}",
    "mov     rbx, rax",
    "mov     r12d, 0x7e",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0xd8]",
    "mov     rdx, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error"
  ]
}
{
  "address": "0x49ce0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x18",
    "cmp     qword [rdi], 0x0",
    "mov     qword [rbp-0x38], rsi",
    "je      0x49ec0",
    "mov     rax, qword [rdi+0x8]",
    "mov     r13, qword [rax]",
    "jmp     0x49d11",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "call    string_list_internal",
    "mov     r13, rax",
    "mov     esi, 0x101",
    "mov     rdi, r13",
    "call    expand_arith_string",
    "cmp     qword [r12], 0x0",
    "mov     rbx, rax",
    "je      0x49d30",
    "test    rbx, rbx",
    "lea     r12, [rel data_122e02]",
    "cmovne  r12, rbx",
    "mov     rdi, r12",
    "call    make_bare_word",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "call    make_word_flags",
    "xor     esi, esi",
    "mov     rdi, rax",
    "call    make_word_list",
    "mov     rdi, rbx",
    "mov     r14, rax",
    "call    free",
    "test    r14, r14",
    "je      0x49ed0",
    "mov     rdi, r13",
    "call    free",
    "mov     rax, qword [rbp-0x38]",
    "xor     ebx, ebx",
    "mov     dword [rax], 0x1",
    "jmp     0x49e9c",
    "lea     rax, [rel echo_command_at_execute]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x49eb0",
    "add     rsp, 0x18",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r14",
    "call    xtrace_print_arith_cmd",
    "jmp     0x49d80",
    "lea     rax, [rel command_string_index]",
    "mov     r15, r14",
    "lea     r13, [rel data_11fbd6[2]]  {\"%s%s\"}",
    "lea     r12, [rel data_122e02]",
    "lea     rbx, [rel data_1204ae[4]]  {\" \"}",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel data_11f57c[4]]  {\"((\"}",
    "mov     qword [rbp-0x40], rax",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    sub_473b0",
    "nop     word [rax+rax]",
    "mov     rax, qword [r15+0x8]",
    "cmp     qword [r15], 0x0",
    "mov     rdx, rbx",
    "mov     rdi, r13",
    "cmove   rdx, r12",
    "mov     rsi, qword [rax]",
    "xor     eax, eax",
    "call    sub_473b0",
    "mov     r15, qword [r15]",
    "test    r15, r15",
    "jne     0x49dc0",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f5d4[7]]  {\"))\"}",
    "call    sub_473b0",
    "mov     eax, dword [rel data_1612a4]",
    "lea     rdx, [rel running_trap]",
    "and     eax, 0x10",
    "or      eax, dword [rdx]",
    "jne     0x49e55",
    "mov     eax, dword [rel data_1612a4]",
    "and     eax, 0x51",
    "cmp     eax, 0x1",
    "je      0x49ee0",
    "lea     r15, [rel the_printed_command_except_trap]",
    "mov     rdi, qword [r15]",
    "test    rdi, rdi",
    "je      0x49e1a",
    "call    sub_8f3f0",
    "lea     rdx, [rel shell_compatibility_level]",
    "mov     rbx, qword [rbp-0x40]",
    "mov     ecx, dword [rdx]",
    "lea     rdx, [rel this_command_name]",
    "mov     qword [rdx], rbx",
    "lea     rdx, [rel debugging_mode]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "je      0x49f20",
    "lea     rax, [rel shell_compatibility_level]",
    "xor     esi, esi",
    "mov     rcx, qword [rbp-0x40]",
    "cmp     dword [rax], 0x33",
    "lea     rax, [rel this_command_name]",
    "setle   sil",
    "mov     qword [rax], rcx",
    "lea     rax, [rel the_printed_command]",
    "mov     r12, qword [rax]",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x49f2e",
    "call    free",
    "xor     esi, esi",
    "cmp     ecx, 0x33",
    "setle   sil",
    "jmp     0x49e81",
    "test    eax, eax",
    "je      0x49f20",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "mov     rdi, r13",
    "call    __strcpy_chk",
    "mov     qword [r15], r13",
    "mov     rax, qword [r14+0x8]",
    "mov     rdx, qword [rbp-0x38]",
    "mov     rdi, qword [rax]",
    "call    evalexp",
    "mov     rbx, rax",
    "mov     rax, qword [rbp-0x38]",
    "xor     ebx, ebx",
    "mov     dword [rax], 0x1",
    "jmp     0x49e94",
    "mov     rdi, r14",
    "call    dispose_words"
  ]
}
{
  "address": "0x92e20",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "test    rdi, rdi",
    "je      0x92ee5",
    "xor     eax, eax",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdi",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "mov     edx, dword [rdi+0xc]",
    "test    edx, edx",
    "je      0x92ed4",
    "add     rsp, 0x8",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     eax, dword [rdi+0x8]",
    "movzx   r13d, word [rel data_136aa4]",
    "xor     r14d, r14d",
    "test    eax, eax",
    "jle     0x92ec2",
    "add     rsp, 0x8",
    "mov     rax, r15",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "nop     ",
    "mov     rdi, qword [rbx+0x10]",
    "cmp     byte [rdi], 0x0",
    "je      0x92e70",
    "jmp     0x92eb8",
    "mov     edi, 0x2",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x92ee8",
    "call    sub_87450",
    "mov     r12, rax",
    "jmp     0x92e86",
    "add     r14, 0x1",
    "cmp     dword [r15+0x8], r14d",
    "jg      0x92e60",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     edx, 0x2",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     word [rax], r13w",
    "mov     rdi, qword [rbx+0x10]",
    "test    rdi, rdi",
    "je      0x92e94",
    "mov     rax, qword [r15]",
    "mov     rbx, qword [rax+r14*8]",
    "test    rbx, rbx",
    "jne     0x92ea0",
    "mov     qword [rbx+0x10], r12",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "je      0x92eb8",
    "call    free"
  ]
}
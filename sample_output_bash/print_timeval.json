{
  "address": "0xd5ce0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "endbr64 ",
    "mov     rax, 0x431bde82d7b634db",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "mov     rcx, qword [rsi+0x8]",
    "mov     r8, qword [rsi]",
    "imul    rcx",
    "mov     rax, rcx",
    "sar     rax, 0x3f",
    "sar     rdx, 0x12",
    "sub     rdx, rax",
    "imul    rdx, rdx, 0xf4240",
    "sub     rcx, rdx",
    "movsxd  r13, ecx",
    "mov     eax, ecx",
    "imul    r13, r13, 0x10624dd3",
    "sar     eax, 0x1f",
    "sar     r13, 0x26",
    "sub     r13d, eax",
    "imul    eax, r13d, 0x3e8",
    "sub     ecx, eax",
    "cmp     ecx, 0x1f3",
    "jle     0xd5d59",
    "mov     rax, 0x8888888888888889",
    "mov     r14, r8",
    "imul    r8",
    "mov     rax, r8",
    "sar     rax, 0x3f",
    "lea     rbx, [rdx+r8]",
    "sar     rbx, 0x5",
    "sub     rbx, rax",
    "mov     rax, rbx",
    "shl     rax, 0x4",
    "sub     rax, rbx",
    "shl     rax, 0x2",
    "sub     r14, rax",
    "call    localeconv",
    "test    rax, rax",
    "je      0xd5de0",
    "add     r13d, 0x1",
    "cmp     r13d, 0x3e8",
    "jne     0xd5d59",
    "mov     r9d, 0x2e",
    "jmp     0xd5dae",
    "mov     rax, qword [rax {lconv::decimal_point}]",
    "test    rax, rax",
    "je      0xd5de0",
    "add     r8, 0x1",
    "xor     r13d, r13d",
    "sub     rsp, 0x8",
    "mov     r8d, r14d",
    "mov     rcx, rbx",
    "push    r13",
    "lea     rdx, [rel data_121f5d]  {\"%ldm%d%c%03ds\"}",
    "mov     rdi, r12",
    "xor     eax, eax",
    "mov     esi, 0x2",
    "call    __fprintf_chk",
    "pop     rax",
    "pop     rdx",
    "lea     rsp, [rbp-0x20]",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "movsx   r9d, byte [rax]",
    "mov     eax, 0x2e",
    "test    r9b, r9b",
    "cmove   r9d, eax"
  ]
}
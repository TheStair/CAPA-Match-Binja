{
  "address": "0xa9860",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "contain loop",
    "get file attributes",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13d, edx",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "mov     rbx, rsi",
    "sub     rsp, 0x168",
    "mov     qword [rbp-0x188], rcx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel dot_found_in_search]",
    "mov     dword [rax], 0x0",
    "test    rcx, rcx",
    "je      0xa98ad",
    "mov     esi, 0x2f",
    "mov     rdi, r12",
    "call    strchr",
    "test    rax, rax",
    "jne     0xa9af0",
    "mov     dword [rcx], 0x0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa9b2c",
    "test    rbx, rbx",
    "je      0xa98cd",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x168",
    "mov     esi, r13d",
    "mov     rdi, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sub_a94d0",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xa9b1b",
    "cmp     byte [rbx], 0x0",
    "jne     0xa9920",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa9b2c",
    "lea     rax, [rbp-0x160]",
    "lea     rdi, [rel data_120268[2]]  {\".\"}",
    "mov     qword [rel data_168d88], 0x0",
    "mov     rsi, rax",
    "mov     qword [rbp-0x180], rax",
    "call    stat",
    "test    eax, eax",
    "js      0xa9ad8",
    "add     rsp, 0x168",
    "mov     rcx, rbx",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __memcpy_chk",
    "pxor    xmm0, xmm0",
    "movaps  xmmword [rbp-0x160], xmm0",
    "jmp     0xa9950",
    "xor     eax, eax",
    "lea     rsi, [rbp-0x164]",
    "mov     dword [rbp-0x164], 0x0",
    "cmp     byte [rbx+rax], 0x0",
    "mov     qword [rbp-0x178], rsi",
    "je      0xa9a59",
    "mov     r15, qword [rel data_168d88]",
    "test    r15, r15",
    "je      0xa9a10",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xa9ac0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa9b2c",
    "and     r13d, 0x20",
    "je      0xa9a10",
    "mov     edi, dword [rax]",
    "mov     eax, dword [rel data_161100]",
    "test    eax, eax",
    "jne     0xa9985",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xa9ab0",
    "add     rsp, 0x168",
    "mov     rax, r15",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rsi, [rbp-0xd0]",
    "mov     rdi, r15",
    "call    stat",
    "test    eax, eax",
    "jne     0xa9a10",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0xa9996",
    "mov     rsi, qword [rbp-0x178]",
    "mov     rdi, rbx",
    "call    sub_a9480",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xa9a59",
    "mov     eax, dword [rbp-0xb8]",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "jne     0xa9a10",
    "mov     rcx, qword [rbp-0x180]",
    "mov     rdi, r12",
    "mov     edx, r13d",
    "mov     rsi, rax",
    "lea     r8, [rbp-0x168]",
    "call    sub_11cc80",
    "mov     rdi, r14",
    "mov     r15, rax",
    "call    free",
    "test    r15, r15",
    "je      0xa9a48",
    "mov     rdi, r15",
    "xor     r15d, r15d",
    "call    free",
    "mov     qword [rel data_168d88], 0x0",
    "jmp     0xa9a10",
    "movsxd  rax, dword [rbp-0x164]",
    "cmp     byte [rbx+rax], 0x0",
    "jne     0xa9974",
    "mov     eax, dword [rbp-0x168]",
    "test    al, 0x10",
    "jne     0xa9a40",
    "mov     rdi, r15",
    "call    free",
    "mov     rbx, qword [rbp-0x188]",
    "test    rbx, rbx",
    "je      0xa99f5",
    "mov     rdi, qword [rel data_168d88]",
    "test    rdi, rdi",
    "je      0xa9a10",
    "mov     dword [rbx], eax",
    "call    free",
    "nop     word [rax+rax]"
  ]
}
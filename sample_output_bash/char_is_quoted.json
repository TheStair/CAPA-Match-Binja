{
  "address": "0x711c0",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13d, esi",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x48",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x48], 0x0",
    "call    strlen",
    "mov     qword [rbp-0x58], rax",
    "lea     rax, [rel no_longjmp_on_fatal_error]",
    "mov     r14d, dword [rax]",
    "mov     dword [rax], 0x1",
    "lea     rax, [rel current_command_line_count]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "jle     0x71250",
    "test    r13d, r13d",
    "js      0x715c0",
    "lea     rdx, [rel dstack]",
    "movsxd  rax, dword [rdx+0x8]",
    "test    eax, eax",
    "jle     0x71250",
    "xor     ebx, ebx",
    "jmp     0x7127f",
    "movzx   ecx, byte [r12]",
    "mov     rdx, qword [rdx]",
    "movsx   eax, byte [rdx+rax-0x1]",
    "cmp     eax, 0x27",
    "je      0x715d0",
    "lea     rax, [rel no_longjmp_on_fatal_error]",
    "mov     dword [rax], r14d",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x71715",
    "movsx   eax, cl",
    "cmp     cl, 0x5c",
    "je      0x71400",
    "cmp     r13d, ebx",
    "jg      0x71310",
    "movzx   ecx, byte [r12]",
    "mov     qword [rbp-0x40], 0x0",
    "test    cl, cl",
    "je      0x71707",
    "cmp     eax, 0x22",
    "je      0x716e0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x48",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "add     ebx, 0x1",
    "mov     r15d, 0x1",
    "jmp     0x7136e",
    "cmp     eax, 0x24",
    "je      0x71388",
    "lea     r10, [rel locale_mb_cur_max]",
    "cmp     dword [r10], 0x1",
    "jle     0x71368",
    "mov     ebx, 0x1",
    "test    r13d, r13d",
    "jns     0x7125e",
    "cmp     cl, 0x27",
    "je      0x716fa",
    "mov     rsi, qword [rbp-0x58]",
    "mov     ecx, 0x400",
    "xor     edx, edx",
    "mov     rdi, r12",
    "call    sub_6f5f0",
    "mov     ebx, eax",
    "jmp     0x71646",
    "test    r13d, r13d",
    "jns     0x71259",
    "cmp     r13d, ebx",
    "jl      0x715c0",
    "cmp     byte [r12+rdx+0x1], 0x27",
    "je      0x71550",
    "cmp     eax, 0x27",
    "jne     0x712b0",
    "add     ebx, 0x1",
    "mov     edx, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     dl, 0x5",
    "and     edx, 0x7",
    "mov     edx, dword [rdi+rdx*4]",
    "shr     edx, cl",
    "and     edx, 0x1",
    "je      0x71340",
    "xor     ebx, ebx",
    "xor     eax, eax",
    "jmp     0x7127a",
    "mov     ebx, 0x1",
    "test    cl, cl",
    "jne     0x71646",
    "lea     rax, [rbp-0x40]",
    "lea     r10, [rel locale_mb_cur_max]",
    "mov     rsi, r12",
    "xor     ebx, ebx",
    "mov     qword [rbp-0x68], rax",
    "xor     edx, edx",
    "nop     dword [rax]",
    "cmp     ebx, r13d",
    "jg      0x7127a",
    "jmp     0x7127a",
    "movsxd  rax, ebx",
    "movzx   ecx, byte [r12+rax]",
    "jmp     0x71265",
    "cmp     byte [r12+rdx+0x2], 0x0",
    "je      0x71394",
    "mov     ecx, 0x24",
    "cmp     eax, 0x22",
    "jne     0x71399",
    "jmp     0x712b9",
    "lea     rdx, [rel locale_utf8locale]",
    "mov     r8d, dword [rdx]",
    "test    r8d, r8d",
    "je      0x71500",
    "add     ebx, edx",
    "jmp     0x7136b",
    "add     ebx, 0x1",
    "jmp     0x7162d",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x71660",
    "movsxd  rax, ebx",
    "movzx   ecx, byte [r12+rax]",
    "jmp     0x71262",
    "mov     rdx, rax",
    "lea     rsi, [r12+rax]",
    "test    r15d, r15d",
    "je      0x712eb",
    "mov     rsi, qword [rbp-0x58]",
    "lea     edx, [rbx+0x2]",
    "mov     ecx, 0x400",
    "mov     rdi, r12",
    "call    sub_674e0",
    "mov     ebx, eax",
    "cmp     r13d, eax",
    "jge     0x712df",
    "add     ebx, 0x1",
    "jmp     0x7136e",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "jne     0x714f0",
    "lea     r10, [rel locale_mb_cur_max]",
    "cmp     dword [r10], 0x1",
    "jle     0x713f0",
    "add     ebx, 0x1",
    "cmp     eax, 0x27",
    "je      0x71410",
    "mov     rdx, qword [rbp-0x58]",
    "lea     rcx, [rbp-0x48]",
    "xor     edi, edi",
    "mov     r15, qword [rbp-0x48]",
    "sub     rdx, rax",
    "call    mbrtowc",
    "mov     rdx, rax",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x716d0",
    "test    cl, cl",
    "js      0x71500",
    "xor     r15d, r15d",
    "movsxd  rdx, ebx",
    "lea     rsi, [r12+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x71640",
    "lea     rax, [rel locale_utf8locale]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "je      0x71678",
    "add     ebx, eax",
    "xor     r15d, r15d",
    "movsxd  rdx, ebx",
    "movzx   ecx, byte [r12+rdx]",
    "lea     rsi, [r12+rdx]",
    "jmp     0x7127f",
    "add     ebx, eax",
    "jmp     0x7136e",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x71580",
    "movsxd  rdx, ebx",
    "lea     rax, [rbp-0x40]",
    "mov     qword [rbp-0x40], 0x0",
    "lea     rsi, [r12+rdx]",
    "mov     qword [rbp-0x68], rax",
    "movzx   ecx, byte [rsi]",
    "cmp     cl, 0x27",
    "je      0x71478",
    "mov     rsi, qword [rbp-0x58]",
    "mov     edx, ebx",
    "mov     ecx, 0x400",
    "mov     rdi, r12",
    "call    sub_6f5f0",
    "mov     ebx, eax",
    "test    rax, rax",
    "je      0x71368",
    "mov     qword [rbp-0x48], r15",
    "add     ebx, 0x1",
    "jmp     0x7136b",
    "mov     edx, 0x1",
    "jne     0x71336",
    "cmp     cl, 0x1",
    "sbb     ebx, 0xffffffff",
    "cmp     cl, 0x27",
    "jne     0x71608",
    "mov     rax, qword [rbp-0x58]",
    "mov     rcx, qword [rbp-0x68]",
    "xor     edi, edi",
    "mov     qword [rbp-0x60], r10",
    "mov     r15, qword [rbp-0x40]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "mov     r10, qword [rbp-0x60]",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x716b0",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x7162b",
    "mov     rax, qword [rbp-0x48]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x48]",
    "mov     qword [rbp-0x60], rax",
    "mov     rax, qword [rbp-0x58]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x714e0",
    "test    cl, cl",
    "js      0x71580",
    "cmp     cl, 0x1",
    "sbb     ebx, 0xffffffff",
    "jmp     0x712da",
    "test    cl, cl",
    "je      0x71478",
    "add     ebx, edx",
    "jmp     0x7136b",
    "nop     word [rax+rax]",
    "cmp     dword [r10], 0x1",
    "jle     0x716c0",
    "test    rax, rax",
    "jne     0x7162b",
    "mov     qword [rbp-0x40], r15",
    "add     ebx, 0x1",
    "jmp     0x7162d",
    "test    rax, rax",
    "je      0x713f0",
    "mov     rax, qword [rbp-0x60]",
    "add     ebx, 0x1",
    "mov     qword [rbp-0x48], rax",
    "jmp     0x7136e",
    "mov     eax, 0x1",
    "jne     0x714f0",
    "cmp     ebx, r13d",
    "jg      0x7127a",
    "lea     r10, [rel locale_mb_cur_max]",
    "nop     word [rax+rax]",
    "nop     dword [rax]",
    "nop     dword [rax]",
    "nop     word [rax+rax]",
    "add     ebx, 0x1",
    "jmp     0x71465",
    "mov     eax, ecx",
    "lea     rdi, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x71488",
    "movsxd  rdx, ebx",
    "lea     rsi, [r12+rdx]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x71478",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x7149e",
    "add     ebx, eax",
    "cmp     cl, 0x27",
    "jne     0x71440",
    "mov     rax, qword [rbp-0x40]",
    "mov     rcx, qword [rbp-0x68]",
    "xor     edi, edi",
    "mov     qword [rbp-0x60], r10",
    "mov     qword [rbp-0x70], rax",
    "mov     rax, qword [rbp-0x58]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "mov     r10, qword [rbp-0x60]",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x71530",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x71463",
    "cmp     dword [r10], 0x1",
    "jle     0x71540",
    "test    rax, rax",
    "jne     0x71463",
    "mov     rax, qword [rbp-0x70]",
    "add     ebx, 0x1",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x71465",
    "nop     dword [rax]"
  ]
}
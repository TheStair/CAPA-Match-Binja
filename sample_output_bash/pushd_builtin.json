{
  "address": "0xbe620",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x48",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    rdi, rdi",
    "je      0xbe8c0",
    "mov     edx, dword [rel data_168f98]",
    "test    edx, edx",
    "je      0xbe9b0",
    "mov     rax, qword [rdi+0x8]",
    "mov     r14, rdi",
    "mov     rbx, qword [rax]",
    "movzx   r15d, byte [rbx]",
    "cmp     r15b, 0x2d",
    "je      0xbe930",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1217b6]  {\"no other directory\"}",
    "jmp     0xbe7cb",
    "lea     rdi, [rel data_11f60a]  {\"pushd\"}",
    "call    get_working_directory",
    "test    rax, rax",
    "je      0xbe7dc",
    "lea     rsi, [rel 0x1210f5]  {\"--help\"}",
    "mov     rdi, rbx",
    "call    strcmp",
    "test    eax, eax",
    "je      0xbeb00",
    "xor     r12d, r12d",
    "lea     r13, [rbp-0x40]",
    "nop     dword [rax]",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     ebx, 0x1",
    "nop     dword [rax]",
    "mov     ecx, dword [rel data_168f98]",
    "mov     ebx, 0x1",
    "lea     edx, [rcx-0x1]",
    "mov     rcx, qword [rel data_168f90]",
    "movsxd  rdx, edx",
    "lea     rdx, [rcx+rdx*8]",
    "mov     r12, qword [rdx]",
    "mov     qword [rdx], rax",
    "test    r12, r12",
    "je      0xbe91c",
    "call    builtin_help",
    "jmp     0xbe9d9",
    "cmp     byte [rbx+0x1], 0x2d",
    "jne     0xbe665",
    "movzx   eax, byte [rbx+0x1]",
    "cmp     al, 0x6e",
    "je      0xbe810",
    "cmp     r15b, 0x2b",
    "je      0xbe780",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x48",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r12",
    "call    free",
    "jmp     0xbe7e8",
    "mov     rdi, r12",
    "call    sub_be530",
    "mov     ebx, eax",
    "test    eax, eax",
    "je      0xbeaa1",
    "mov     ebx, 0x102",
    "jmp     0xbe7e8",
    "cmp     byte [rbx+0x2], 0x0",
    "jne     0xbe665",
    "cmp     byte [rbx+0x2], 0x0",
    "jne     0xbe72c",
    "cmp     al, 0x2d",
    "je      0xbe898",
    "lea     rdi, [rbx+0x1]",
    "mov     rsi, r13",
    "call    legal_number",
    "test    eax, eax",
    "je      0xbe9c8",
    "test    r12b, 0x2",
    "jne     0xbe83a",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xbeb5d",
    "xor     edi, edi",
    "call    dirs_builtin",
    "jmp     0xbe91c",
    "cmp     qword [r14], 0x0",
    "je      0xbe8c0",
    "lea     rdi, [rbx+0x1]",
    "mov     rsi, r13",
    "call    legal_number",
    "test    eax, eax",
    "je      0xbe9c8",
    "mov     r14, qword [r14]",
    "or      r12d, 0x1",
    "test    r14, r14",
    "jne     0xbe76f",
    "cmp     byte [rbx+0x2], 0x0",
    "jne     0xbe72c",
    "test    al, al",
    "je      0xbe684",
    "mov     rax, qword [r14+0x8]",
    "mov     rdi, qword [rax]",
    "call    sh_invalidnum",
    "call    builtin_usage",
    "movsxd  rdx, dword [rel data_168f98]",
    "mov     rax, qword [rbp-0x40]",
    "mov     rcx, rdx",
    "test    rax, rax",
    "jns     0xbe75a",
    "lea     rdi, [rel data_11f60a]  {\"pushd\"}",
    "call    get_working_directory",
    "mov     r14, qword [rbp-0x40]",
    "mov     r15, rax",
    "mov     eax, r12d",
    "and     eax, 0x1",
    "mov     dword [rbp-0x54], eax",
    "test    r14, r14",
    "jne     0xbe9e3",
    "lea     rdi, [rel data_11f60a]  {\"pushd\"}",
    "call    get_working_directory",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xbe7dc",
    "lea     rdi, [rel data_11f60a]  {\"pushd\"}",
    "call    get_working_directory",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0xbe6af",
    "movsxd  rdx, dword [rel data_168f98]",
    "mov     rax, rdx",
    "sub     rax, qword [rbp-0x40]",
    "mov     rcx, rdx",
    "mov     qword [rbp-0x40], rax",
    "test    rax, rax",
    "js      0xbe7b0",
    "mov     rax, qword [r14+0x8]",
    "mov     rbx, qword [rax]",
    "movzx   r15d, byte [rbx]",
    "jmp     0xbe670",
    "nop     word [rax+rax]",
    "mov     r14, qword [r14]",
    "test    r12b, 0x2",
    "jne     0xbe83a",
    "cmp     rdx, rax",
    "jl      0xbe7b0",
    "nop     word [rax+rax]",
    "mov     rcx, qword [rel data_168f90]",
    "movsxd  rax, dword [rel data_168f98]",
    "mov     r12, rax",
    "lea     rax, [rcx+rax*8-0x8]",
    "mov     qword [rbp-0x68], rcx",
    "mov     qword [rbp-0x48], rax",
    "lea     edx, [r12-0x1]",
    "lea     eax, [r12-0x2]",
    "lea     rsi, [rax*8+0x8]",
    "movsxd  rdx, edx",
    "neg     rax",
    "shl     rax, 0x3",
    "mov     qword [rbp-0x50], rsi",
    "lea     rsi, [rdx*8]",
    "lea     rdi, [rsi+rax]",
    "lea     rbx, [rsi+rax-0x8]",
    "mov     qword [rbp-0x60], rsi",
    "add     rdi, rcx",
    "add     rbx, rcx",
    "jmp     0xbea5b",
    "xor     ebx, ebx",
    "test    eax, eax",
    "jne     0xbe888",
    "test    r12d, r12d",
    "jne     0xbeaad",
    "mov     rdi, r14",
    "mov     r14, rbx",
    "call    cd_builtin",
    "mov     r13d, eax",
    "test    eax, eax",
    "jne     0xbeaf3",
    "jmp     0xbe7dc",
    "mov     rax, qword [r14+0x8]",
    "mov     edx, 0x5",
    "mov     rbx, qword [rax]",
    "test    ecx, ecx",
    "jne     0xbe988",
    "cmp     r15b, 0x2d",
    "je      0xbe710",
    "xor     ebx, ebx",
    "jmp     0xbe7e8",
    "test    r14, r14",
    "jne     0xbe68e",
    "mov     r14, qword [r14]",
    "or      r12d, 0x2",
    "test    r14, r14",
    "je      0xbe830",
    "xor     edi, edi",
    "lea     rsi, [rel 0x121780]  {\"directory stack index\"}",
    "call    dcgettext",
    "mov     rdi, rbx",
    "mov     rsi, rax",
    "call    sh_erange",
    "jmp     0xbe7dc",
    "lea     rsi, [rel data_12176a]  {\"directory stack empty\"}",
    "mov     rax, qword [rbp-0x48]",
    "mov     r13, r15",
    "mov     r15, qword [rax]",
    "cmp     r12d, 0x1",
    "jg      0xbea40",
    "mov     rdi, r15",
    "call    free",
    "jmp     0xbe7e8",
    "mov     ebx, 0x1",
    "test    r15, r15",
    "je      0xbe888",
    "mov     rax, qword [r14+0x8]",
    "mov     r14, qword [rax]",
    "mov     rdi, r14",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xbeb79",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0xbe7dc",
    "movsxd  r12, dword [rel data_168f98]",
    "cmp     r12d, dword [rel data_168f88]",
    "mov     r15, qword [rel data_168f90]",
    "je      0xbeb0a",
    "xor     ebx, ebx",
    "jmp     0xbe7e8",
    "test    r12b, 0x2",
    "je      0xbe6ff",
    "mov     rdx, qword [rbp-0x50]",
    "mov     rsi, rbx",
    "call    memmove",
    "mov     rdi, rax",
    "mov     rax, rbx",
    "mov     rax, qword [rbp-0x68]",
    "mov     rcx, qword [rbp-0x60]",
    "add     rax, rcx",
    "jmp     0xbea52",
    "mov     rdi, r15",
    "call    sub_be530",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0xbe888",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r14",
    "mov     rdi, r13",
    "mov     rdx, r12",
    "mov     r14, rbx",
    "call    __strcpy_chk",
    "mov     rbx, r13",
    "mov     r13d, 0x1",
    "jmp     0xbe6c5",
    "lea     eax, [r12+0xa]",
    "mov     dword [rel data_168f88], eax",
    "cdqe    ",
    "lea     rsi, [rax*8]",
    "test    r15, r15",
    "je      0xbeb48",
    "mov     qword [r15+r12*8], rbx",
    "lea     eax, [r12+0x1]",
    "xor     edi, edi",
    "mov     dword [rel data_168f98], eax",
    "call    dirs_builtin",
    "test    r13d, r13d",
    "jne     0xbea92",
    "mov     eax, dword [rbp-0x54]",
    "mov     qword [rbp-0x40], 0x0",
    "xor     ebx, ebx",
    "test    eax, eax",
    "jne     0xbe888",
    "mov     qword [rax], r13",
    "sub     r14, 0x1",
    "je      0xbea78",
    "xor     edi, edi",
    "call    dirs_builtin",
    "nop     dword [rax]",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x48], rsi",
    "call    malloc",
    "mov     rsi, qword [rbp-0x48]",
    "mov     r15, rax",
    "jmp     0xbeb37",
    "mov     rdi, r15",
    "mov     qword [rbp-0x48], rsi",
    "call    realloc",
    "mov     rsi, qword [rbp-0x48]",
    "mov     r15, rax",
    "mov     rdi, r14",
    "xor     ebx, ebx",
    "call    free",
    "jmp     0xbe7e8",
    "jmp     0xbe865",
    "test    r15, r15",
    "je      0xbeb62",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_168f90], r15",
    "jmp     0xbe6e0"
  ]
}
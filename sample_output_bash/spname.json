{
  "address": "0xd6ed0",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "enumerate files on Linux"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x1000",
    "or      qword [rsp], 0x0",
    "sub     rsp, 0x1000",
    "or      qword [rsp], 0x0",
    "sub     rsp, 0x78",
    "mov     qword [rbp-0x2080], rsi",
    "mov     r12, rsi",
    "mov     rbx, rdi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rbp-0x1040]",
    "mov     qword [rbp-0x2098], rdi",
    "mov     qword [rbp-0x2088], rax",
    "lea     rax, [rbp-0x40]",
    "mov     qword [rbp-0x2090], rax",
    "mov     byte [r12], 0x2f",
    "add     rbx, 0x1",
    "add     r12, 0x1",
    "jmp     0xd6f39",
    "mov     byte [r12], 0x0",
    "movzx   eax, byte [rbx]",
    "test    al, al",
    "je      0xd72b7",
    "cmp     byte [rbx], 0x2f",
    "je      0xd715c",
    "mov     r14, qword [rbp-0x2098]",
    "cmp     byte [r14+0x1], 0x0",
    "jne     0xd72e1",
    "mov     rdx, qword [rbp-0x2088]",
    "mov     rcx, qword [rbp-0x2090]",
    "mov     r14, rdx",
    "cmp     al, 0x2f",
    "je      0xd7254",
    "mov     rsi, qword [rbp-0x2080]",
    "mov     rdi, r14",
    "call    strcmp",
    "test    eax, eax",
    "setne   al",
    "movzx   eax, al",
    "jmp     0xd7046",
    "mov     rax, qword [rbp-0x2080]",
    "cmp     byte [rax+0x1], 0x0",
    "jne     0xd72e1",
    "lea     r14, [rbp-0x1040]",
    "mov     rdx, r14",
    "jmp     0xd6f8b",
    "nop     dword [rax+rax]",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xd72fd",
    "cmp     byte [r14], 0x2e",
    "je      0xd72e1",
    "mov     rax, qword [rbp-0x2080]",
    "mov     byte [rdx], 0x0",
    "lea     rdi, [rel data_120268[2]]  {\".\"}",
    "cmp     byte [rax], 0x0",
    "cmovne  rdi, rax",
    "call    opendir",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xd7041",
    "movzx   eax, byte [rbx+0x1]",
    "add     rbx, 0x1",
    "cmp     al, 0x2f",
    "je      0xd6f8b",
    "mov     byte [rdx], al",
    "add     rdx, 0x1",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x2078",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     byte [rax], 0x2e",
    "je      0xd7041",
    "mov     eax, 0xffffffff",
    "mov     dword [rbp-0x205c], 0x3",
    "nop     ",
    "test    al, al",
    "jne     0xd6f70",
    "mov     rdi, r13",
    "call    closedir",
    "movzx   eax, byte [rbp-0x2050]",
    "cmp     al, 0x2e",
    "je      0xd7230",
    "lea     r8, [rax+0x13] {dirent64::d_name}",
    "movzx   ecx, byte [rbp-0x1040]",
    "movzx   eax, byte [rax+0x13 {dirent64::d_name[0]}]",
    "mov     rdx, r14",
    "mov     r15, r8",
    "cmp     al, cl",
    "je      0xd7005",
    "cmp     rdx, rcx",
    "jae     0xd6f7b",
    "cmp     byte [rbp-0x204f], 0x0",
    "je      0xd7041",
    "cmp     dword [rbp-0x205c], 0x3",
    "je      0xd7041",
    "test    al, al",
    "jne     0xd6ff0",
    "jmp     0xd7070",
    "cmp     dword [rbp-0x205c], 0x3",
    "je      0xd7041",
    "mov     byte [r12], al",
    "test    al, al",
    "je      0xd6f39",
    "movzx   eax, byte [r15+0x1]",
    "movzx   ecx, byte [rdx+0x1]",
    "add     r15, 0x1 {dirent64::d_ino+1}",
    "add     rdx, 0x1",
    "cmp     al, cl",
    "jne     0xd7070",
    "lea     rdi, [rbp-0x2050]",
    "mov     edx, 0x1001",
    "mov     rsi, r8",
    "call    __strcpy_chk",
    "mov     rdi, r13",
    "call    closedir",
    "movzx   eax, byte [rbp-0x2050]",
    "cmp     al, 0x2e",
    "jne     0xd712b",
    "test    al, al",
    "je      0xd70c0",
    "mov     byte [r12], 0x2e",
    "jmp     0xd7137",
    "lea     rax, [rbp-0x204f]",
    "nop     ",
    "cmp     byte [rbp-0x204f], 0x0",
    "jne     0xd724a",
    "test    cl, cl",
    "je      0xd6fc0",
    "test    cl, cl",
    "jne     0xd7170",
    "movzx   edx, byte [rax]",
    "add     r12, 0x1",
    "add     rax, 0x1",
    "mov     byte [r12], dl",
    "test    dl, dl",
    "jne     0xd7140",
    "cmp     byte [rbx], 0x2f",
    "jne     0xd6f42",
    "mov     rdi, r13",
    "call    readdir",
    "test    rax, rax",
    "je      0xd7107",
    "lea     rcx, [rdx+0x1]",
    "movzx   esi, byte [r15+0x1]",
    "test    sil, sil",
    "je      0xd7199",
    "lea     rdi, [r15+0x1] {dirent64::d_ino+1}",
    "mov     rsi, rdx",
    "mov     qword [rbp-0x2058], r8",
    "call    strcmp",
    "mov     r8, qword [rbp-0x2058]",
    "test    eax, eax",
    "jne     0xd6fc0",
    "cmp     dword [rbp-0x205c], 0x1",
    "jg      0xd70b0",
    "lea     rcx, [rdx+0x1]",
    "lea     rdi, [r15+0x1] {dirent64::d_ino+1}",
    "mov     qword [rbp-0x2078], r8",
    "mov     rsi, rcx",
    "mov     qword [rbp-0x2070], rdx",
    "mov     qword [rbp-0x2068], rcx",
    "mov     qword [rbp-0x2058], rdi",
    "call    strcmp",
    "mov     rdi, qword [rbp-0x2058]",
    "mov     rcx, qword [rbp-0x2068]",
    "test    eax, eax",
    "mov     rdx, qword [rbp-0x2070]",
    "mov     r8, qword [rbp-0x2078]",
    "je      0xd709e",
    "movzx   edi, byte [rdx+0x1]",
    "test    dil, dil",
    "setne   r9b",
    "cmp     dil, al",
    "sete    al",
    "test    r9b, al",
    "je      0xd7199",
    "cmp     dword [rbp-0x205c], 0x1",
    "setg    al",
    "test    al, al",
    "je      0xd6fc0",
    "mov     dword [rbp-0x205c], 0x2",
    "jmp     0xd729e",
    "mov     rdi, r13",
    "call    readdir",
    "test    rax, rax",
    "jne     0xd6fd1",
    "mov     rsi, rdx",
    "mov     qword [rbp-0x2068], r8",
    "mov     qword [rbp-0x2058], rcx",
    "call    strcmp",
    "mov     rcx, qword [rbp-0x2058]",
    "mov     r8, qword [rbp-0x2068]",
    "test    eax, eax",
    "jne     0xd70cc",
    "cmp     sil, cl",
    "je      0xd7263",
    "lea     rdi, [rbp-0x2050]",
    "mov     edx, 0x1001",
    "mov     rsi, r8",
    "call    __strcpy_chk",
    "jmp     0xd6fc0",
    "mov     rsi, rcx",
    "mov     rdi, r15",
    "mov     qword [rbp-0x2058], r8",
    "call    strcmp",
    "mov     r8, qword [rbp-0x2058]",
    "test    eax, eax",
    "jne     0xd6fc0",
    "cmp     dword [rbp-0x205c], 0x1",
    "setg    al",
    "test    al, al",
    "je      0xd6fc0",
    "lea     rsi, [rdx+0x2]",
    "lea     rdi, [r15+0x2] {dirent64::d_ino+2}",
    "mov     qword [rbp-0x2068], r8",
    "mov     qword [rbp-0x2058], rdx",
    "call    strcmp",
    "mov     rdx, qword [rbp-0x2058]",
    "mov     r8, qword [rbp-0x2068]",
    "test    eax, eax",
    "jne     0xd7199",
    "jmp     0xd70b0",
    "mov     dword [rbp-0x205c], 0x1"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
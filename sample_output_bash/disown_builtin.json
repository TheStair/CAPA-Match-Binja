{
  "address": "0xbb850",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "xor     r15d, r15d",
    "push    r14",
    "lea     r14, [rel data_12163c]",
    "push    r13",
    "xor     r13d, r13d",
    "push    r12",
    "xor     r12d, r12d",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x138",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel loptend]",
    "mov     qword [rel data_168d30], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel loptend]",
    "mov     rbx, qword [rax]",
    "test    rbx, rbx",
    "je      0xbbb80",
    "cmp     eax, 0x68",
    "je      0xbb940",
    "or      r12d, r13d",
    "je      0xbb963",
    "lea     rax, [rbp-0x148]",
    "xor     r14d, r14d",
    "lea     r13, [rbp-0xc0]",
    "mov     qword [rbp-0x158], rax",
    "lea     r12, [rbp-0x140]",
    "nop     word [rax+rax]",
    "mov     r15d, 0x1",
    "jmp     0xbb8b9",
    "jg      0xbb8f0",
    "mov     edi, r13d",
    "test    r15d, r15d",
    "je      0xbbb9e",
    "xor     edi, edi",
    "call    get_job_spec",
    "mov     edi, eax",
    "cmp     eax, 0xffffffff",
    "je      0xbbac8",
    "mov     rax, qword [rbx+0x8]",
    "mov     rsi, qword [rbp-0x158]",
    "mov     rdi, qword [rax]",
    "call    legal_number",
    "test    eax, eax",
    "je      0xbb9e7",
    "mov     rsi, r14",
    "mov     rdi, rbx",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xbb950",
    "cmp     eax, 0x72",
    "jne     0xbb900",
    "cmp     eax, 0xffffff9d",
    "je      0xbb938",
    "call    delete_all_jobs",
    "jmp     0xbbb96",
    "call    nohup_all_jobs",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_12151e]  {\"current\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     r14, rax",
    "jmp     0xbba14",
    "lea     rax, [rel jobs]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xbbac8",
    "mov     rdi, rbx",
    "call    get_job_spec",
    "mov     edi, eax",
    "cmp     eax, 0xffffffff",
    "je      0xbba0d",
    "mov     rax, qword [rbp-0x148]",
    "movsxd  rdx, eax",
    "mov     ecx, eax",
    "cmp     rax, rdx",
    "je      0xbbb10",
    "call    builtin_usage",
    "mov     r13d, 0x1",
    "jmp     0xbb8b9",
    "call    builtin_help",
    "jmp     0xbb905",
    "cmp     eax, 0x61",
    "jne     0xbb900",
    "xor     r14d, r14d",
    "jmp     0xbb90b",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xbbba5",
    "mov     edx, 0x5",
    "lea     rsi, [rel 0x12111a]  {\"%s: no such job\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, r14",
    "mov     r14d, 0x1",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "test    edi, edi",
    "js      0xbbac8",
    "mov     rax, qword [rbx+0x8]",
    "mov     r14, qword [rax]",
    "lea     rax, [rel jobs]",
    "mov     rax, qword [rax]",
    "lea     rax, [rel js]",
    "mov     edx, dword [rax+0x1c]",
    "test    edx, edx",
    "jle     0xbba0d",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x138",
    "mov     eax, r14d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r14d, 0x102",
    "mov     r12d, 0x1",
    "jmp     0xbb8b9",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0xbb988",
    "lea     rdx, [rel js]",
    "cmp     edi, dword [rdx+0x1c]",
    "jge     0xbbac8",
    "test    rax, rax",
    "jne     0xbbae8",
    "lea     rax, [rel jobs]",
    "movsxd  rsi, edx",
    "xor     edi, edi",
    "mov     rax, qword [rax]",
    "mov     rdi, r13",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, r13",
    "call    sigaddset",
    "mov     rdi, r12",
    "call    sigemptyset",
    "xor     edi, edi",
    "mov     rdx, r12",
    "mov     rsi, r13",
    "call    sigprocmask",
    "test    rbx, rbx",
    "je      0xbba68",
    "jmp     0xbb90b",
    "movsxd  rdx, edi",
    "mov     rax, qword [rax+rdx*8]",
    "test    rax, rax",
    "je      0xbbac8",
    "lea     rdx, [rel js]",
    "cmp     edi, dword [rdx+0x1c]",
    "jge     0xbba0d",
    "mov     r8, qword [rdx+0x8]",
    "mov     rdx, r8",
    "add     rdi, 0x1",
    "cmp     rdi, rsi",
    "jne     0xbbb31",
    "test    r15d, r15d",
    "jne     0xbbb50",
    "movsxd  rdx, edi",
    "mov     rax, qword [rax+rdx*8]",
    "test    rax, rax",
    "jne     0xbbaa1",
    "test    edi, edi",
    "js      0xbba0d",
    "mov     rdx, qword [rdx]",
    "cmp     r8, rdx",
    "jne     0xbbb67",
    "mov     rdx, qword [rax+rdi*8]",
    "test    rdx, rdx",
    "jne     0xbbb60",
    "jmp     0xbba0d",
    "or      dword [rax+0x18], 0x8",
    "jmp     0xbba3a",
    "mov     eax, dword [rel data_160908]",
    "test    eax, eax",
    "jne     0xbba3a",
    "jmp     0xbba0d",
    "cmp     ecx, dword [rdx+0x8]",
    "je      0xbba00",
    "jmp     0xbbb3a",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "test    rbx, rbx",
    "je      0xbb90b",
    "mov     esi, 0x1",
    "call    sub_68b70",
    "jmp     0xbba3a"
  ]
}
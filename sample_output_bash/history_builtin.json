{
  "address": "0xba920",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "write file on Linux",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "encrypt data using Curve25519/a423aa5d0923438c8eac88d5abe4fcd5",
    "contain loop",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "hide graphical window from taskbar/3804d9f76e4f47c8b3a7ed608bc3a556",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "lea     r14, [rel data_1215ce]  {\"acd:npsrw\"}",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "lea     r12, [rel jump_table_137354]",
    "push    rbx",
    "xor     ebx, ebx",
    "sub     rsp, 0x38",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel loptend]",
    "mov     qword [rel data_168d30], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel loptend]",
    "mov     ecx, ebx",
    "and     ecx, 0xf",
    "mov     r12, qword [rax]",
    "mov     eax, 0x117",
    "shr     rax, cl",
    "and     eax, 0x1",
    "mov     r13, rax",
    "je      0xbaec7",
    "cmp     eax, 0xffffff9d",
    "je      0xbaba0",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1341d0]  {\"cannot use more than one of -anr\u2026\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "test    bl, 0x40",
    "jne     0xbabe0",
    "call    builtin_help",
    "jmp     0xba9bd",
    "sub     eax, 0x61",
    "cmp     eax, 0x16",
    "ja      0xba9b8",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xbb143",
    "call    clear_history",
    "lea     rax, [rel history_lines_this_session]",
    "mov     dword [rax], 0x0",
    "test    r12, r12",
    "je      0xbad6d",
    "test    bl, 0x10",
    "jne     0xbad68",
    "mov     ebx, 0x102",
    "{Case 0x1, 0x4-0xc, 0xe, 0x10, 0x13-0x15}",
    "call    builtin_usage",
    "movsxd  rax, dword [r12+rax*4]",
    "add     rax, r12",
    "jmp     rax",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "xor     ebx, ebx",
    "jmp     0xba9c2",
    "test    bl, 0x10",
    "jne     0xbad78",
    "test    r12, r12",
    "jne     0xbad78",
    "test    bl, 0x20",
    "jne     0xbabaa",
    "{Case 0x16}",
    "mov     rsi, r14",
    "mov     rdi, r13",
    "or      ebx, 0x4",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "jne     0xba996",
    "{Case 0x12}",
    "or      ebx, 0x10",
    "jmp     0xba986",
    "{Case 0x11}",
    "or      ebx, 0x2",
    "jmp     0xba986",
    "{Case 0xf}",
    "or      ebx, 0x20",
    "jmp     0xba986",
    "{Case 0xd}",
    "or      ebx, 0x8",
    "jmp     0xba986",
    "{Case 0x3}",
    "lea     rax, [rel list_optarg]",
    "or      bl, 0x80",
    "mov     r15, qword [rax]",
    "jmp     0xba986",
    "{Case 0x2}",
    "or      ebx, 0x40",
    "jmp     0xba986",
    "{Case 0x0}",
    "or      ebx, 0x1",
    "jmp     0xba986",
    "lea     rax, [rel remember_on_history]",
    "lea     r13, [rel hist_last_line_pushed]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xbadd7",
    "test    bl, 0x20",
    "jne     0xbae0d",
    "test    r12, r12",
    "jne     0xbae0d",
    "test    bl, 0x80",
    "jne     0xbaeee",
    "nop     dword [rax+rax]",
    "mov     rsi, r14",
    "mov     rdi, r13",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xbaa08",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "mov     rdi, r12",
    "call    string_list_internal",
    "mov     esi, 0x1",
    "mov     rbx, rax",
    "mov     rdi, rax",
    "call    check_add_history",
    "mov     rdi, rbx",
    "mov     dword [r13], 0x1",
    "xor     ebx, ebx",
    "call    free",
    "jmp     0xba9c2",
    "mov     eax, dword [r13]",
    "test    eax, eax",
    "jne     0xbadd7",
    "lea     rax, [rel hist_last_line_pushed]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "jne     0xbae2f",
    "test    bl, 0x80",
    "jne     0xbaeee",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xbb143",
    "xor     edi, edi",
    "cmp     byte [r15], 0x2d",
    "mov     esi, 0x2d",
    "sete    dil",
    "add     rdi, r15",
    "call    strchr",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xbaffe",
    "test    bl, 0x4f",
    "je      0xbb167",
    "lea     rax, [rel hist_last_line_added]",
    "mov     r15d, dword [rax]",
    "test    r15d, r15d",
    "jne     0xbadce",
    "mov     r13, qword [rel stdout]",
    "xor     ebx, ebx",
    "lea     r14, [rbp-0x40]",
    "lea     r15, [rel data_1215d8]  {\"%s: history expansion failed\"}",
    "jmp     0xbae7a",
    "lea     rax, [rel hist_last_line_added]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "jne     0xbb06e",
    "test    bl, 0x4f",
    "jne     0xbaa61",
    "xor     edi, edi",
    "lea     rsi, [rbp-0x40]",
    "mov     rdi, r15",
    "call    legal_number",
    "test    eax, eax",
    "je      0xbafd1",
    "mov     byte [rax], 0x0",
    "lea     rsi, [rbp-0x40]",
    "mov     rdi, r15",
    "call    legal_number",
    "test    eax, eax",
    "je      0xbafce",
    "test    r12, r12",
    "jne     0xbac1f",
    "test    r12, r12",
    "je      0xbb17d",
    "call    bash_delete_last_history",
    "test    eax, eax",
    "je      0xbad6d",
    "lea     rax, [rel current_command_line_count]",
    "mov     r14d, dword [rax]",
    "test    r14d, r14d",
    "jle     0xbadd7",
    "mov     rax, qword [r12+0x8]",
    "mov     rsi, r14",
    "mov     rdi, qword [rax]",
    "call    history_expand",
    "test    eax, eax",
    "jns     0xbae48",
    "call    bash_delete_last_history",
    "test    eax, eax",
    "je      0xbaee4",
    "mov     rax, qword [r12+0x8]",
    "mov     rdi, qword [rax]",
    "xor     esi, esi",
    "lea     rdx, [rbp-0x48]",
    "mov     rdi, r12",
    "call    get_numeric_arg",
    "test    eax, eax",
    "je      0xbb291",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1215f5]  {\"history position\"}",
    "call    dcgettext",
    "mov     rdi, r15",
    "mov     rsi, rax",
    "call    sh_erange",
    "jmp     0xbaee4",
    "cmp     byte [r15], 0x2d",
    "mov     rax, qword [rbp-0x40]",
    "je      0xbb1ea",
    "mov     byte [rbx], 0x2d",
    "lea     r12, [rbx+0x1]",
    "lea     rsi, [rbp-0x48]",
    "mov     rdi, r12",
    "call    legal_number",
    "test    eax, eax",
    "je      0xbafce",
    "mov     qword [rbp-0x48], 0xffffffffffffffff",
    "jmp     0xbac45",
    "lea     rdi, [rel data_11f075]  {\"HISTFILE\"}",
    "call    find_variable",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xbaa69",
    "lea     rax, [rel current_command_first_line_saved]",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "je      0xbadd7",
    "mov     rsi, qword [r13]",
    "mov     rdi, qword [rbp-0x40]",
    "call    fputs",
    "mov     rsi, qword [r13]",
    "mov     edi, 0xa",
    "call    putc",
    "mov     rax, qword [r12+0x8]",
    "mov     edx, 0x5",
    "mov     rsi, r15",
    "xor     edi, edi",
    "mov     rbx, qword [rax]",
    "call    dcgettext",
    "mov     rdi, rax",
    "mov     rsi, rbx",
    "xor     eax, eax",
    "mov     ebx, 0x1",
    "call    builtin_error",
    "jmp     0xbae63",
    "mov     ebx, 0x1",
    "jmp     0xba9c2",
    "jmp     0xbae2f",
    "test    bl, 0x1",
    "jne     0xbb080",
    "mov     esi, 0x2f",
    "mov     qword [rbp-0x58], rdi",
    "call    strchr",
    "mov     rdi, qword [rbp-0x58]",
    "test    rax, rax",
    "jne     0xbb1a2",
    "mov     edi, 0x1",
    "jmp     0xbb130",
    "mov     rax, qword [rbp-0x48]",
    "test    rax, rax",
    "jns     0xbac45",
    "test    rax, rax",
    "jns     0xbb01c",
    "lea     rdx, [rel history_base]",
    "movsxd  rcx, dword [rdx]",
    "mov     rdx, rcx",
    "cmp     rcx, rax",
    "jg      0xbafd1",
    "cmp     byte [r15], 0x2d",
    "mov     rax, qword [rbp-0x40]",
    "je      0xbb1ac",
    "mov     r14, qword [rel data_1688b8]",
    "test    r14, r14",
    "je      0xbb12e",
    "lea     rax, [rel restricted]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0xbaa91",
    "call    get_variable_value",
    "mov     rdi, rax",
    "jmp     0xbaa69",
    "lea     rax, [rel command_oriented_history]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0xbadd7",
    "mov     r12, qword [r12]",
    "test    r12, r12",
    "je      0xbaeb9",
    "call    free",
    "mov     rdi, qword [rbp-0x40]",
    "test    rdi, rdi",
    "je      0xbae71",
    "call    maybe_append_history",
    "xor     ebx, ebx",
    "test    eax, eax",
    "setne   bl",
    "jmp     0xba9c2",
    "test    bl, 0x4",
    "jne     0xbb148",
    "call    sh_restricted",
    "jmp     0xbaee4",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "je      0xbabc8",
    "neg     rax",
    "mov     qword [rbp-0x48], rax",
    "lea     r13, [rel history_length]",
    "add     eax, dword [r13]",
    "js      0xbafd1",
    "lea     r13, [rel history_length]",
    "mov     ecx, dword [r13]",
    "add     ecx, edx",
    "movsxd  rcx, ecx",
    "cmp     rcx, rax",
    "jle     0xbafd1",
    "test    rax, rax",
    "js      0xbb2a5",
    "test    rax, rax",
    "jle     0xbaf64",
    "xor     edi, edi",
    "cmp     qword [r14], 0x0",
    "je      0xbb2ce",
    "mov     rdi, qword [r13]",
    "call    fflush",
    "jmp     0xba9c2",
    "lea     rax, [rel history_length]",
    "mov     edx, 0x1",
    "xor     ebx, ebx",
    "mov     esi, dword [rax]",
    "call    sub_10b0d0",
    "test    eax, eax",
    "setne   bl",
    "jmp     0xba9c2",
    "test    bl, 0x2",
    "jne     0xbb1c0",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sh_chkwrite",
    "lea     rdx, [rel history_base]",
    "mov     edx, dword [rdx]",
    "add     eax, edx",
    "jmp     0xbb043",
    "sub     eax, edx",
    "mov     edi, eax",
    "call    bash_delete_histent",
    "lea     r13, [rel history_length]",
    "movsxd  rcx, dword [r13]",
    "add     rax, rcx",
    "mov     qword [rbp-0x40], rax",
    "jns     0xbaf79",
    "jne     0xbaf53",
    "test    rax, rax",
    "js      0xbafd1",
    "lea     rdx, [rel history_base]",
    "movsxd  rdx, dword [rdx]",
    "sub     rax, rdx",
    "mov     qword [rbp-0x40], rax",
    "xor     r12d, r12d",
    "jmp     0xbac86",
    "mov     rax, r13",
    "add     r13, 0x1",
    "cmp     qword [r14+r13*8-0x8], 0x0",
    "jne     0xbac5f",
    "mov     edx, 0xffffffff",
    "xor     esi, esi",
    "xor     ebx, ebx",
    "call    read_history_range",
    "lea     rdx, [rel history_lines_read_from_file]",
    "test    eax, eax",
    "mov     ecx, dword [rdx]",
    "lea     rdx, [rel history_lines_in_file]",
    "setne   bl",
    "mov     dword [rdx], ecx",
    "jmp     0xba9c2",
    "and     ebx, 0x8",
    "je      0xba9c2",
    "call    history_set_pos",
    "jmp     0xbb061",
    "test    ebx, ebx",
    "sete    bl",
    "movzx   ebx, bl",
    "jmp     0xba9c2",
    "cmp     byte [rbx+0x1], 0x2d",
    "mov     rdx, qword [rbp-0x48]",
    "je      0xbb278",
    "jmp     0xbafd1",
    "jmp     0xbaf69",
    "lea     r13, [rel history_length]",
    "movsxd  rcx, dword [r13]",
    "cmp     rcx, rax",
    "jle     0xbafd1",
    "lea     rdi, [rel data_12005b]  {\"HISTTIMEFORMAT\"}",
    "call    find_variable",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xbaca5",
    "mov     rdx, qword [rbp-0x48]",
    "xor     r12d, r12d",
    "test    rdx, rdx",
    "js      0xbac86",
    "lea     r12, [rel history_lines_in_file]",
    "lea     rax, [rel history_base]",
    "mov     edx, 0xffffffff",
    "lea     rbx, [rel history_length]",
    "lea     r13, [rel history_offset]",
    "mov     r15d, dword [r12]",
    "mov     r14d, dword [rax]",
    "mov     eax, dword [rbx]",
    "mov     esi, r15d",
    "mov     dword [r13], eax",
    "call    read_history_range",
    "lea     rcx, [rel force_append_history]",
    "mov     edx, eax",
    "mov     eax, dword [rbx]",
    "mov     ecx, dword [rcx]",
    "mov     dword [r13], eax",
    "lea     rax, [rel history_lines_read_from_file]",
    "mov     eax, dword [rax]",
    "mov     dword [r12], eax",
    "test    ecx, ecx",
    "jne     0xbab25",
    "test    rdx, rdx",
    "js      0xbb2c2",
    "test    rdx, rdx",
    "jle     0xbaf9d",
    "movsxd  rax, r12d",
    "shl     rax, 0x3",
    "lea     rbx, [r14+rax]",
    "cmp     qword [rbx], 0x0",
    "je      0xbb12e",
    "mov     rdi, rax",
    "call    get_variable_value",
    "mov     r15, rax",
    "movsxd  rcx, eax",
    "sub     eax, edx",
    "cmp     rdx, rcx",
    "cmovl   r12d, eax",
    "xor     ebx, ebx",
    "test    edx, edx",
    "setne   bl",
    "jmp     0xba9c2",
    "lea     rsi, [rel history_base]",
    "lea     rcx, [rel history_lines_this_session]",
    "sub     eax, r15d",
    "add     eax, dword [rsi]",
    "sub     eax, r14d",
    "add     dword [rcx], eax",
    "add     rdx, rcx",
    "mov     qword [rbp-0x48], rdx",
    "jmp     0xbaf9d",
    "jne     0xbaf8c",
    "test    rdx, rdx",
    "js      0xbafab",
    "lea     rsi, [rel history_base]",
    "movsxd  rsi, dword [rsi]",
    "sub     rdx, rsi",
    "mov     qword [rbp-0x48], rdx",
    "lea     r13, [r14+rax+0x8]",
    "lea     r14, [rel data_122e02]",
    "jmp     0xbad36",
    "mov     esi, edx",
    "mov     edi, eax",
    "call    bash_delete_history_range",
    "jmp     0xbb04c",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1215f5]  {\"history position\"}",
    "call    dcgettext",
    "mov     rdi, r12",
    "mov     rsi, rax",
    "call    sh_erange",
    "jmp     0xbaee4",
    "cmp     rcx, rdx",
    "jg      0xbb283",
    "lea     rax, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xbacc8",
    "mov     ebx, eax",
    "lea     rax, [rel history_offset]",
    "mov     edi, dword [r13]",
    "cmp     edi, dword [rax]",
    "jl      0xbb29b",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xbaff4",
    "lea     rax, [rel terminating_signal]",
    "mov     r8d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r8d, r8d",
    "jne     0xbacc8",
    "call    throw_to_top_level",
    "jmp     0xbacd9",
    "mov     rdx, qword [rbx]",
    "test    r15, r15",
    "je      0xbaceb",
    "call    sub_8e2b0",
    "{ Does not return }",
    "mov     r9, qword [rdx]",
    "mov     r8, r14",
    "cmp     byte [r15 {Elf64_Header::ident.signature[0]}], 0x0",
    "jne     0xbb091",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x58], rdx",
    "call    history_get_time",
    "mov     rdx, qword [rbp-0x58]",
    "test    rax, rax",
    "mov     qword [rbp-0x40], rax",
    "jne     0xbb233",
    "lea     rdi, [rbp-0x40]",
    "call    localtime",
    "cmp     qword [rbp-0x40], 0x0",
    "mov     rdx, qword [rbp-0x58]",
    "mov     rcx, rax",
    "je      0xbb0ae",
    "mov     r9, qword [rdx+0x8]",
    "test    r9, r9",
    "je      0xbb214",
    "test    rax, rax",
    "je      0xbb0ae",
    "mov     edi, 0x3f3f",
    "mov     byte [rel data_168e22], 0x0",
    "mov     word [rel data_168e20], di",
    "lea     rdi, [rel data_168e20]",
    "jmp     0xbb115",
    "movzx   eax, byte [r9]",
    "test    al, al",
    "je      0xbb214",
    "lea     rdi, [rel data_168e20]",
    "mov     rdx, r15",
    "mov     esi, 0x80",
    "mov     qword [rbp-0x58], rdi",
    "call    strftime",
    "mov     rdi, qword [rbp-0x58]",
    "jmp     0xbb115",
    "mov     rdx, qword [rbx]",
    "cmp     byte [rdi], 0x0",
    "lea     r8, [rel data_168e20]",
    "cmove   r8, r14",
    "mov     r9, qword [rdx]",
    "jmp     0xbacf1",
    "cmp     al, 0x23",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121606]  {\"%s: invalid timestamp\"}",
    "sete    al",
    "xor     edi, edi",
    "movzx   eax, al",
    "add     r9, rax",
    "mov     qword [rbp-0x58], r9",
    "call    dcgettext",
    "mov     r9, qword [rbp-0x58]",
    "mov     ecx, 0x80",
    "lea     rdi, [rel data_168e20]",
    "mov     r8, rax",
    "mov     edx, 0x2",
    "mov     esi, 0x80",
    "xor     eax, eax",
    "mov     qword [rbp-0x58], rdi",
    "call    __snprintf_chk",
    "mov     rdi, qword [rbp-0x58]",
    "lea     rax, [rel history_base]",
    "cmp     qword [rdx+0x10], 0x1",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_12161c]  {\"%5d%c %s%s\\n\"}",
    "sbb     ecx, ecx",
    "add     rbx, 0x8",
    "add     r13, 0x8",
    "mov     edx, dword [rax]",
    "and     ecx, 0xfffffff6",
    "xor     eax, eax",
    "add     ecx, 0x2a",
    "add     edx, r12d",
    "add     r12d, 0x1",
    "call    __printf_chk",
    "mov     rax, qword [r13-0x8]",
    "test    rax, rax",
    "je      0xbb12e"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
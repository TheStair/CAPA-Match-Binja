{
  "address": "0x6c270",
  "rules": [
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "movsxd  r14, edi",
    "push    r13",
    "mov     r13d, esi",
    "push    r12",
    "lea     r12, [rbp-0x140]",
    "push    rbx",
    "lea     rbx, [rbp-0xc0]",
    "mov     rdi, rbx",
    "sub     rsp, 0x148",
    "mov     qword [rbp-0x168], rdx",
    "mov     dword [rbp-0x148], r14d",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r12",
    "call    sigemptyset",
    "xor     edi, edi",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "call    sigprocmask",
    "lea     r15, [rel jobs]",
    "lea     rax, [r14*8]",
    "mov     qword [rbp-0x158], rax",
    "mov     rax, qword [r15]",
    "mov     rax, qword [rax+r14*8]",
    "cmp     dword [rax+0x14], 0x2",
    "je      0x6c5b0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133270]  {\"wait_for_job: job %d is stopped\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdi, rax",
    "mov     eax, dword [rbp-0x148]",
    "lea     esi, [rax+0x1]",
    "xor     eax, eax",
    "call    internal_warning",
    "mov     rax, qword [r15]",
    "mov     rax, qword [rax+r14*8]",
    "jmp     0x6c30a",
    "mov     rcx, qword [rax+0x8]",
    "mov     rax, rcx",
    "jmp     0x6c31b",
    "test    rax, rax",
    "je      0x3210c",
    "mov     eax, dword [0x8]",
    "ud2     ",
    "{ Does not return }",
    "mov     rdx, qword [rax]",
    "cmp     rcx, rdx",
    "jne     0x6c318",
    "mov     rax, rdx",
    "mov     eax, dword [rax+0x8]",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "mov     dword [rbp-0x144], eax",
    "call    sigprocmask",
    "mov     eax, r13d",
    "mov     qword [rbp-0x160], r14",
    "and     eax, 0x2",
    "mov     r14d, eax",
    "nop     dword [rax]",
    "call    __errno_location",
    "cmp     dword [rax], 0xa",
    "jne     0x6c371",
    "lea     rax, [rel wait_intr_flag]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x6c3b0",
    "lea     rax, [rel js]",
    "mov     ecx, dword [rax+0x1c]",
    "test    ecx, ecx",
    "je      0x6c371",
    "test    r14d, r14d",
    "je      0x6c568",
    "lea     rax, [rel wait_signal_received]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6c3b0",
    "call    sub_66150",
    "jmp     0x6c371",
    "mov     rdi, rbx",
    "mov     r14, qword [rbp-0x160]",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r12",
    "call    sigemptyset",
    "xor     edi, edi",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "call    sigprocmask",
    "cmp     dword [rbp-0x148], 0xffffffff",
    "jne     0x6c540",
    "mov     rdi, rbx",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r12",
    "call    sigemptyset",
    "xor     edi, edi",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "call    sigprocmask",
    "cmp     dword [rbp-0x148], 0xffffffff",
    "je      0x6c468",
    "lea     rax, [rel this_shell_builtin]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x6c3b0",
    "mov     rax, qword [r15]",
    "mov     rax, qword [rax+r14*8]",
    "test    rax, rax",
    "je      0x6c4a1",
    "jmp     0x6c4a1",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "mov     rdi, rbx",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "xor     edi, edi",
    "call    sigprocmask",
    "mov     rax, qword [r15]",
    "mov     rcx, qword [rbp-0x158]",
    "mov     rax, qword [rax+rcx]",
    "test    rax, rax",
    "je      0x6c500",
    "cmp     rax, qword [rel data_157ec8]",
    "je      0x6c5e2",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "mov     rcx, qword [rbp-0x168]",
    "test    rcx, rcx",
    "je      0x6c4d4",
    "cmp     dword [rax+0x14], 0x4",
    "jne     0x6c4a1",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x6c5f3",
    "mov     eax, dword [rbp-0x144]",
    "test    r13d, r13d",
    "mov     dword [rcx], eax",
    "mov     eax, 0x7f",
    "cmovns  eax, r13d",
    "mov     word [rcx+0x4], ax",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "mov     r14, qword [rbp-0x160]",
    "call    sigprocmask",
    "mov     eax, dword [rax+0x14]",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "mov     dword [rbp-0x14c], eax",
    "call    sigprocmask",
    "cmp     dword [rbp-0x14c], 0x4",
    "jne     0x6c358",
    "lea     rdi, [rel wait_intr_buf]",
    "mov     esi, 0x1",
    "call    __longjmp_chk",
    "{ Does not return }",
    "nop     word [rax+rax]",
    "or      dword [rax+0x18], 0x2",
    "jmp     0x6c4a1",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x148",
    "mov     eax, r13d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     edi, dword [rbp-0x144]",
    "xor     esi, esi",
    "call    wait_for",
    "mov     r13d, eax",
    "cmp     eax, 0xffffffff",
    "je      0x6c438",
    "mov     r14, qword [rbp-0x160]",
    "jmp     0x6c516",
    "mov     rdi, rbx",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "xor     edi, edi",
    "call    sigprocmask"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
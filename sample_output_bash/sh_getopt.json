{
  "address": "0xc80c0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14d, edi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     rax, [rel sh_optarg]",
    "lea     r12, [rel sh_optind]",
    "mov     qword [rbp-0x40], rsi",
    "mov     qword [rbp-0x38], rdx",
    "mov     qword [rax], 0x0",
    "mov     eax, dword [r12]",
    "test    eax, eax",
    "js      0xc8388",
    "mov     dword [r12], r14d",
    "jmp     0xc81ed",
    "cmp     eax, edi",
    "jge     0xc8388",
    "mov     r15d, 0xffffffff",
    "jmp     0xc81a6",
    "test    eax, eax",
    "je      0xc81c0",
    "add     rsp, 0x18",
    "mov     eax, r15d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     dword [r12], 0x1",
    "mov     qword [rel data_162ba8], 0x0",
    "cmp     edi, 0x1",
    "jle     0xc81ed",
    "mov     rbx, qword [rel data_162ba8]",
    "test    rbx, rbx",
    "je      0xc81dd",
    "mov     eax, 0x1",
    "mov     rcx, qword [rbp-0x40]",
    "movsxd  rsi, eax",
    "mov     rbx, qword [rcx+rsi*8]",
    "cmp     byte [rbx], 0x2d",
    "je      0xc8230",
    "cmp     byte [rbx], 0x0",
    "je      0xc81dd",
    "movzx   esi, byte [rbx+0x1]",
    "cmp     sil, 0x2d",
    "je      0xc82a8",
    "mov     eax, dword [rel data_162ba0]",
    "add     eax, 0x1",
    "cmp     byte [rbx+0x2], 0x0",
    "jne     0xc823f",
    "test    sil, sil",
    "je      0xc81ed",
    "test    rsi, rsi",
    "sete    al",
    "cmp     r13b, 0x3a",
    "sete    dil",
    "or      eax, edi",
    "lea     rdi, [rel sh_badopt]",
    "movzx   r8d, al",
    "mov     dword [rdi], r8d",
    "test    al, al",
    "jne     0xc8260",
    "add     dword [r12], 0x1",
    "mov     qword [rel data_162ba8], 0x0",
    "mov     dword [rel data_162bb0], eax",
    "add     rbx, 0x1",
    "mov     eax, 0x2",
    "mov     dword [rel data_162ba0], 0x1",
    "jmp     0xc8133",
    "add     eax, 0x1",
    "mov     dword [r12], eax",
    "jmp     0xc81ed",
    "lea     rax, [rel sh_opterr]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xc82c0",
    "cmp     byte [rsi+0x1], 0x3a",
    "je      0xc81f8",
    "lea     rsi, [rbx+0x1]",
    "mov     rdi, qword [rbp-0x38]",
    "mov     qword [rel data_162ba8], rsi",
    "movsx   r15d, byte [rbx]",
    "mov     dword [rel data_162ba0], eax",
    "mov     esi, r15d",
    "mov     r13d, r15d",
    "call    strchr",
    "lea     r9, [rel sh_optopt]",
    "mov     rsi, rax",
    "mov     dword [r9], r15d",
    "cmp     byte [rbx+0x1], 0x0",
    "jne     0xc817a",
    "mov     rax, qword [rbp-0x40]",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121b0e]  {\"%s: illegal option -- %c\\n\"}",
    "mov     rbx, qword [rax]",
    "call    dcgettext",
    "mov     r8d, r15d",
    "mov     esi, 0x2",
    "mov     rdx, rax",
    "mov     rax, qword [rel stderr]",
    "mov     rcx, rbx",
    "mov     rdi, qword [rax]",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "jmp     0xc826d",
    "mov     r15d, 0x3f",
    "jmp     0xc81a6",
    "mov     rsi, qword [rel data_162ba8]",
    "movsxd  rax, dword [r12]",
    "test    rsi, rsi",
    "je      0xc8280",
    "cmp     r14d, eax",
    "je      0xc8300",
    "cmp     byte [rsi], 0x0",
    "je      0xc8280",
    "lea     rax, [rel sh_opterr]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xc8340",
    "lea     ecx, [rax+0x1]",
    "mov     dword [r12], ecx",
    "mov     rcx, qword [rbp-0x40]",
    "mov     rax, qword [rcx+rax*8]",
    "lea     rcx, [rel sh_optarg]",
    "mov     qword [rcx], rax",
    "jmp     0xc821e",
    "lea     rcx, [rel sh_optarg]",
    "add     eax, 0x1",
    "mov     dword [r12], eax",
    "mov     qword [rcx], rsi",
    "mov     rax, qword [rbp-0x40]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1343d0]  {\"%s: option requires an argument \u2026\"}",
    "xor     edi, edi",
    "mov     rbx, qword [rax]",
    "call    dcgettext",
    "mov     r8d, r15d",
    "mov     esi, 0x2",
    "mov     rdx, rax",
    "mov     rax, qword [rel stderr]",
    "mov     rcx, rbx",
    "mov     rdi, qword [rax]",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "lea     r9, [rel sh_optopt]",
    "jmp     0xc830d",
    "lea     rax, [rel sh_optarg]",
    "lea     rcx, [rel data_122e02]",
    "mov     dword [r9], r15d",
    "xor     r15d, r15d",
    "mov     qword [rax], rcx",
    "mov     rax, qword [rbp-0x38]",
    "cmp     byte [rax], 0x3a",
    "setne   r15b",
    "lea     r15d, [r15+r15*4+0x3a]",
    "jmp     0xc821e",
    "mov     qword [rel data_162ba8], 0x0",
    "jmp     0xc81a6"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
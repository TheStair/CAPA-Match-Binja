{
  "address": "0x63bc0",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     ebx, dword [rel data_167f80]",
    "cmp     ebx, 0x21",
    "je      0x63c70",
    "call    sub_62f60",
    "xor     r12d, r12d",
    "call    sub_63bc0",
    "mov     dword [rel data_167f84], 0x6",
    "test    rax, rax",
    "sete    r12b",
    "cmp     ebx, 0x7e",
    "je      0x63cc0",
    "call    sub_62f60",
    "call    sub_63bc0",
    "mov     dword [rel data_167f84], 0x6",
    "not     rax",
    "mov     r12, rax",
    "jmp     0x63c8e",
    "cmp     ebx, 0x2d",
    "je      0x63ce0",
    "add     rsp, 0x38",
    "mov     rax, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "call    sub_62f60",
    "call    sub_63bc0",
    "mov     dword [rel data_167f84], 0x6",
    "neg     rax",
    "mov     r12, rax",
    "jmp     0x63c8e",
    "cmp     ebx, 0x2b",
    "je      0x63ca0",
    "call    sub_62f60",
    "call    sub_63bc0",
    "mov     dword [rel data_167f84], 0x6",
    "mov     r12, rax",
    "jmp     0x63c8e",
    "lea     eax, [rbx-0xe]",
    "cmp     eax, 0x1",
    "jbe     0x63d00",
    "mov     dword [rel data_167f84], ebx",
    "call    sub_62f60",
    "cmp     dword [rel data_167f80], 0x5",
    "jne     0x63f7f",
    "cmp     ebx, 0x28",
    "je      0x63c30",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_132fe0]  {\"identifier expected after pre-in\u2026\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "call    sub_61af0",
    "{ Does not return }",
    "mov     rax, qword [rel data_167f78]",
    "xor     edx, edx",
    "cmp     ebx, 0xe",
    "sete    dl",
    "lea     r12, [rax+rdx*2-0x1]",
    "mov     rdi, r12",
    "call    itos",
    "mov     edx, dword [rel data_16806c]",
    "mov     rbx, rax",
    "test    edx, edx",
    "jne     0x63d61",
    "call    sub_62f60",
    "call    sub_64930",
    "mov     r12, rax",
    "mov     eax, dword [rel data_167f80]",
    "cmp     eax, 0x2c",
    "je      0x63c30",
    "lea     eax, [rbx-0x5]",
    "cmp     eax, 0x1",
    "ja      0x63f64",
    "mov     rdi, rbx",
    "call    free",
    "mov     dword [rel data_167f80], 0x6",
    "call    sub_62f60",
    "jmp     0x63c8e",
    "mov     rsi, qword [rel data_1598f8]",
    "cmp     rsi, 0xffffffffffffffff",
    "je      0x63e70",
    "cmp     eax, 0x29",
    "je      0x63c28",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_132fc0]  {\"syntax error: operand expected\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "call    sub_61af0",
    "{ Does not return }",
    "mov     r12, qword [rel data_167f78]",
    "cmp     ebx, 0x5",
    "je      0x63d80",
    "mov     rdi, qword [rel data_167f98]",
    "test    rdi, rdi",
    "je      0x63d61",
    "mov     rdi, qword [rel data_1598e0]",
    "mov     rdx, rax",
    "call    sub_61fb0",
    "call    sub_62f60",
    "jmp     0x63c8e",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120320]  {\"missing `)'\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "call    sub_61af0",
    "{ Does not return }",
    "mov     eax, dword [rel data_167f84]",
    "mov     rsi, qword [rel data_1598f8]",
    "mov     r15, qword [rel data_167f98]",
    "mov     r14d, dword [rel data_16806c]",
    "mov     qword [rel data_167f98], 0x0",
    "mov     dword [rbp-0x44], eax",
    "mov     rax, qword [rel data_167f88]",
    "mov     qword [rbp-0x40], rsi",
    "mov     r13, qword [rel data_1598e0]",
    "mov     qword [rbp-0x50], rax",
    "mov     rax, qword [rel data_167f68]",
    "mov     dword [rel data_16806c], 0x1",
    "mov     rbx, qword [rel data_1598f0]",
    "mov     qword [rbp-0x58], rax",
    "mov     rax, qword [rel data_1598e8]",
    "mov     qword [rbp-0x38], rax",
    "call    sub_62f60",
    "mov     eax, dword [rel data_167f80]",
    "lea     edx, [rax-0x10]",
    "cmp     edx, 0x1",
    "jbe     0x63ea0",
    "cmp     byte [rdi], 0x0",
    "je      0x63d61",
    "cmp     eax, 0x10",
    "mov     rcx, qword [rbp-0x38]",
    "mov     rsi, qword [rbp-0x40]",
    "mov     qword [rel data_1598f0], rbx",
    "sete    al",
    "mov     qword [rel data_167f98], r15",
    "movzx   eax, al",
    "mov     dword [rel data_16806c], r14d",
    "lea     rdi, [r12+rax*2-0x1]",
    "mov     qword [rel data_1598e0], r13",
    "mov     qword [rel data_1598e8], rcx",
    "mov     qword [rel data_1598f8], rsi",
    "mov     dword [rel data_167f84], 0x5",
    "call    itos",
    "mov     rbx, rax",
    "mov     eax, dword [rel data_16806c]",
    "test    eax, eax",
    "jne     0x63f18",
    "cmp     eax, 0x5",
    "je      0x63f2f",
    "mov     rsi, rax",
    "call    sub_61f40",
    "jmp     0x63d61",
    "mov     rdi, rbx",
    "call    free",
    "mov     dword [rel data_167f80], 0x6",
    "jmp     0x63c28",
    "mov     rsi, qword [rel data_1598f8]",
    "cmp     rsi, 0xffffffffffffffff",
    "je      0x63f49",
    "mov     rdi, qword [rel data_167f98]",
    "test    rdi, rdi",
    "je      0x63e06",
    "mov     eax, dword [rbp-0x44]",
    "mov     qword [rel data_167f78], r12",
    "mov     dword [rel data_167f80], 0x5",
    "mov     dword [rel data_167f84], eax",
    "mov     rax, qword [rbp-0x50]",
    "mov     qword [rel data_167f98], r15",
    "mov     qword [rel data_167f88], rax",
    "mov     rax, qword [rbp-0x58]",
    "mov     dword [rel data_16806c], r14d",
    "mov     qword [rel data_167f68], rax",
    "mov     rax, qword [rbp-0x38]",
    "mov     qword [rel data_1598e0], r13",
    "mov     qword [rel data_1598e8], rax",
    "mov     rax, qword [rbp-0x40]",
    "mov     qword [rel data_1598f0], rbx",
    "mov     qword [rel data_1598f8], rax",
    "jmp     0x63c28",
    "mov     rdi, qword [rel data_167f98]",
    "test    rdi, rdi",
    "je      0x63f18",
    "mov     rdi, qword [rel data_1598e0]",
    "mov     rdx, rbx",
    "call    sub_61fb0",
    "call    free",
    "jmp     0x63e06",
    "cmp     byte [rdi], 0x0",
    "je      0x63f18",
    "mov     rsi, rbx",
    "call    sub_61f40",
    "jmp     0x63f18"
  ]
}
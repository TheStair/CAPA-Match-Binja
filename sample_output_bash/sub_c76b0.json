{
  "address": "0xc76b0",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using RC4 KSA/89b7ba675fcb4f4eac2317f83c0a9436",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "get file attributes",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rsi",
    "push    r14",
    "mov     r14d, edx",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0xe8",
    "mov     qword [rbp-0xe0], rdi",
    "mov     dword [rbp-0x104], edx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    strlen",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0xc7798",
    "mov     rcx, qword [rbp-0xe0]",
    "mov     r13, rax",
    "lea     eax, [rax-0x1]",
    "mov     r12, qword [r15]",
    "movzx   eax, byte [rcx+rax]",
    "cmp     al, 0x2f",
    "mov     byte [rbp-0xe9], al",
    "setne   sil",
    "test    r12, r12",
    "je      0xc79c6",
    "and     r14d, 0x1",
    "je      0xc7950",
    "mov     edi, 0x8",
    "call    malloc",
    "mov     qword [rbp-0xd8], rax",
    "test    rax, rax",
    "jne     0xc79ec",
    "xor     eax, eax",
    "nop     dword [rax+rax]",
    "mov     qword [rbp-0xd8], r15",
    "mov     rdi, qword [r15]",
    "test    rdi, rdi",
    "je      0xc7950",
    "mov     qword [rax], 0x0",
    "jmp     0xc79bc",
    "mov     qword [rbp-0xd8], 0x0",
    "jmp     0xc7957",
    "lea     edx, [rax+0x1]",
    "mov     ecx, eax",
    "cmp     qword [r15+rdx*8], 0x0",
    "mov     rax, rdx",
    "jne     0xc77c8",
    "lea     edi, [rcx+0x2]",
    "mov     byte [rbp-0xe8], sil",
    "shl     rdi, 0x3",
    "call    malloc",
    "mov     qword [rbp-0xd8], rax",
    "test    rax, rax",
    "je      0xc79dc",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "mov     rax, qword [rbp-0xd8]",
    "add     rsp, 0xe8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r12, r15",
    "lea     r13, [rbp-0xd0]",
    "jmp     0xc7737",
    "mov     rdi, r15",
    "call    free",
    "jmp     0xc7957",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xc7a2a",
    "mov     r8d, r13d",
    "movzx   edx, byte [rbp-0xe8]",
    "xor     r14d, r14d",
    "xor     r13d, r13d",
    "lea     rax, [r8+0x3]",
    "mov     qword [rbp-0x100], r8",
    "mov     qword [rbp-0xf8], rax",
    "lea     eax, [rdx+rbx]",
    "mov     dword [rbp-0xf0], eax",
    "movzx   eax, dl",
    "add     rax, r8",
    "mov     qword [rbp-0xe8], r15",
    "mov     qword [rbp-0x110], rax",
    "jmp     0xc786e",
    "mov     rsi, r13",
    "call    stat",
    "test    eax, eax",
    "jne     0xc7720",
    "mov     rdi, r12",
    "call    strlen",
    "mov     rcx, qword [rbp-0xf8]",
    "lea     rbx, [rax+rcx]",
    "mov     rax, qword [rbp-0xd8]",
    "mov     rdi, rbx",
    "add     r13, rax",
    "call    malloc",
    "mov     qword [r13], rax",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xc79f5",
    "lea     eax, [rbx+0x1]",
    "lea     r12, [r15+rax*8]",
    "mov     rbx, rax",
    "mov     rdi, qword [r12]",
    "test    rdi, rdi",
    "je      0xc7950",
    "mov     eax, dword [rbp-0xb8]",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "jne     0xc7720",
    "test    r14d, r14d",
    "je      0xc7a1c",
    "mov     rsi, qword [rbp-0xe0]",
    "mov     rdx, rbx",
    "mov     rdi, rax",
    "call    __strcpy_chk",
    "cmp     byte [rbp-0xe9], 0x2f",
    "je      0xc78ca",
    "mov     rdi, qword [r12]",
    "mov     qword [rbp-0xd8], rdi",
    "call    strlen",
    "mov     rdi, qword [rbp-0xd8]",
    "lea     esi, [rax+0x2]",
    "mov     r14, rax",
    "call    realloc",
    "test    rax, rax",
    "je      0xc79dc",
    "mov     rdi, qword [rbp-0xd8]",
    "call    free",
    "jmp     0xc79dc",
    "mov     rax, qword [rbp-0xd8]",
    "mov     edi, r14d",
    "mov     rbx, rax",
    "lea     r12, [rax+rdi*8]",
    "cmp     byte [r12], 0x0",
    "je      0xc7840",
    "mov     rax, qword [rbp-0x100]",
    "mov     byte [r15+rax], 0x2f",
    "mov     edx, r14d",
    "mov     byte [rax+rdx], 0x2f",
    "lea     edx, [r14+0x1]",
    "mov     byte [rax+rdx], 0x0",
    "mov     qword [r12], rax",
    "jmp     0xc7720",
    "mov     rdi, qword [rbx]",
    "add     rbx, 0x8",
    "call    free",
    "cmp     rbx, r12",
    "jne     0xc7a0b",
    "mov     eax, dword [rbp-0xf0]",
    "mov     byte [r15+rax], 0x0",
    "mov     rax, qword [rbp-0x110]",
    "mov     rsi, r12",
    "cmp     rbx, rax",
    "lea     rdi, [r15+rax]",
    "cmovb   rbx, rax",
    "mov     rdx, rbx",
    "sub     rdx, rax",
    "call    __strcpy_chk",
    "test    byte [rbp-0x104], 0x1",
    "je      0xc784b",
    "mov     rdi, qword [rax]",
    "mov     r15, rax",
    "mov     rax, qword [rbp-0xd8]",
    "xor     ebx, ebx",
    "mov     qword [rax+rdx*8], 0x0",
    "test    rdi, rdi",
    "je      0xc79bc",
    "mov     rax, qword [rbp-0xe8]",
    "lea     edx, [r14+0x1]",
    "mov     r14, rdx",
    "lea     r13, [rdx*8]",
    "mov     r12, qword [rax+rdx*8]",
    "test    r12, r12",
    "je      0xc7988",
    "lea     rsi, [rbp-0xd0]",
    "mov     rdi, r15",
    "call    stat",
    "test    eax, eax",
    "jne     0xc784b",
    "nop     dword [rax]",
    "mov     eax, dword [rbp-0xb8]",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "jne     0xc784b",
    "call    free",
    "lea     eax, [rbx+0x1]",
    "mov     rdi, qword [r15+rax*8]",
    "mov     rbx, rax",
    "test    rdi, rdi",
    "jne     0xc79a8",
    "mov     rbx, qword [r13]",
    "mov     rdi, rbx",
    "call    strlen",
    "mov     edx, 0x2f",
    "mov     word [rbx+rax], dx",
    "jmp     0xc784b"
  ]
}
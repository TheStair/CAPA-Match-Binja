{
  "address": "0x75f80",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "encrypt data using Curve25519/f2994133291147a090851ed21e9c381b",
    "check if file exists/9e9f210df85141fd87185852507ad125/0fcfdde5a12c4c95b0c37ee23bca2635",
    "contain loop",
    "decompress data using aPLib/ff5291873cd74f0a8431aa4f49359663",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rax, qword [rdi]",
    "test    rax, rax",
    "je      0x760f0",
    "xor     ebx, ebx",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "cmp     byte [rax], 0x0",
    "je      0x760f0",
    "or      dword [rdi+0x8], 0x40",
    "mov     r13d, esi",
    "xor     esi, esi",
    "mov     rbx, rdi",
    "mov     dword [rel data_1619c4], 0x1",
    "cmp     r13d, 0x3",
    "sete    sil",
    "xor     r8d, r8d",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "shl     esi, 0x8",
    "call    sub_83630",
    "mov     r12, rax",
    "lea     rax, [rel data_1619a0]",
    "cmp     r12, rax",
    "lea     rax, [rel data_1619b0]",
    "je      0x76131",
    "xor     edx, edx",
    "xor     edi, edi",
    "cmp     r12, rax",
    "mov     qword [rbx], rdx",
    "sete    dil",
    "lea     rdx, [rel last_command_exit_value]",
    "add     edi, 0x1",
    "mov     dword [rdx], 0x1",
    "call    sub_85e80",
    "{ Does not return }",
    "cmp     r12, rax",
    "je      0x76131",
    "mov     dword [rel data_1619c4], 0x0",
    "test    r12, r12",
    "je      0x760f0",
    "mov     rax, qword [r12+0x8]",
    "test    r13d, r13d",
    "je      0x760a0",
    "test    rax, rax",
    "je      0x760cf",
    "cmp     r13d, 0x3",
    "je      0x76100",
    "mov     rdi, r12",
    "call    dequote_list",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "mov     rdi, r12",
    "call    string_list_internal",
    "mov     rbx, rax",
    "jmp     0x76087",
    "mov     rbx, r12",
    "jmp     0x760b4",
    "test    rax, rax",
    "je      0x760cf",
    "cmp     r13d, 0x2",
    "mov     rbx, r12",
    "sete    r13b",
    "movzx   r13d, r13b",
    "lea     r13d, [r13*4+0x9]",
    "nop     word [rax+rax]",
    "mov     rdi, r12",
    "call    dispose_words",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     rdi, qword [rax]",
    "call    remove_quoted_nulls",
    "mov     rax, qword [rbx+0x8]",
    "mov     rbx, qword [rbx]",
    "and     dword [rax+0x8], 0xfffbffff",
    "test    rbx, rbx",
    "jne     0x760b0",
    "mov     rbx, r12",
    "jmp     0x76114",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "call    remove_quoted_nulls",
    "mov     rax, qword [rbx+0x8]",
    "mov     rbx, qword [rbx]",
    "and     dword [rax+0x8], 0xfffbffff",
    "test    rbx, rbx",
    "jne     0x76040",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "mov     rdi, r12",
    "call    string_list_internal",
    "mov     esi, r13d",
    "mov     r14, rax",
    "mov     rdi, rax",
    "call    quote_string_for_globbing",
    "mov     rdi, r14",
    "mov     rbx, rax",
    "call    free",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "call    remove_quoted_nulls",
    "mov     rax, qword [rbx+0x8]",
    "mov     rbx, qword [rbx]",
    "and     dword [rax+0x8], 0xfffbffff",
    "test    rbx, rbx",
    "jne     0x76110",
    "mov     rax, qword [rbx+0x8]",
    "jmp     0x760cf"
  ]
}
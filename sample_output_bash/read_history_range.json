{
  "address": "0x10a4b0",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "create or open file",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "read file on Linux",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "log keystrokes via raw input data/4762f396f48d4e318a08125296476d20",
    "encrypt data using RC4 KSA/89b7ba675fcb4f4eac2317f83c0a9436",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "check OS version/c5098bae8b7e44529b35d3b557d2b976",
    "contain loop",
    "get file attributes",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13d, edx",
    "push    r12",
    "mov     r12d, esi",
    "push    rbx",
    "sub     rsp, 0xd8",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel history_lines_read_from_file]",
    "mov     dword [rax], 0x0",
    "call    sub_10a390",
    "test    rax, rax",
    "je      0x10a738",
    "call    __errno_location",
    "mov     r12d, dword [rax]",
    "test    r12d, r12d",
    "jne     0x10a6c9",
    "mov     rdi, rax",
    "mov     rbx, rax",
    "mov     edx, 0x1b6",
    "xor     esi, esi",
    "xor     eax, eax",
    "call    open",
    "mov     r15d, eax",
    "test    eax, eax",
    "js      0x10a688",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x10aad2",
    "jmp     0x10a69d",
    "call    __errno_location",
    "mov     rdi, rbx",
    "mov     r12d, dword [rax]",
    "test    r12d, r12d",
    "jne     0x10a714",
    "lea     rsi, [rbp-0xd0]",
    "mov     edi, eax",
    "call    fstat",
    "cmp     eax, 0xffffffff",
    "je      0x10a6f8",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xd8",
    "mov     eax, r12d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r12d, 0x5",
    "jmp     0x10a6c9",
    "call    free",
    "jmp     0x10a6c9",
    "call    free",
    "call    __errno_location",
    "mov     edi, r15d",
    "mov     r12d, dword [rax]",
    "test    r12d, r12d",
    "je      0x10a988",
    "mov     eax, dword [rbp-0xb8]",
    "and     eax, 0xf000",
    "cmp     eax, 0x8000",
    "jne     0x10a6a8",
    "call    close",
    "mov     rdi, rbx",
    "mov     r12d, 0x5",
    "call    free",
    "jmp     0x10a6c9",
    "call    close",
    "mov     rdi, rbx",
    "call    __errno_location",
    "mov     edi, r15d",
    "mov     r12d, 0x16",
    "mov     dword [rax], 0x16",
    "call    close",
    "mov     rdi, rbx",
    "call    free",
    "mov     rdx, qword [rbp-0xa0]",
    "cmp     rdx, 0xffffffffffffffff",
    "je      0x10aa28",
    "call    __errno_location",
    "mov     edi, r15d",
    "mov     r12d, 0x1b",
    "mov     dword [rax], 0x1b",
    "call    close",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0x10a6c9",
    "test    rdx, rdx",
    "je      0x10a720",
    "mov     rdi, rbx",
    "call    free",
    "mov     edi, r15d",
    "call    close",
    "lea     rdi, [rdx+0x1]",
    "mov     qword [rbp-0xd8], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0xd8]",
    "test    rax, rax",
    "mov     r14, rax",
    "je      0x10aa28",
    "mov     rsi, rax",
    "mov     edi, r15d",
    "call    read",
    "test    eax, eax",
    "js      0x10a7e0",
    "call    __errno_location",
    "mov     edi, r15d",
    "mov     r12d, dword [rax]",
    "mov     eax, 0x5",
    "test    r12d, r12d",
    "cmove   r12d, eax",
    "call    close",
    "mov     rdi, rbx",
    "call    free",
    "mov     rdi, r14",
    "call    free",
    "jmp     0x10a6c9",
    "mov     edi, r15d",
    "mov     qword [rbp-0xd8], rax",
    "call    close",
    "mov     rcx, qword [rbp-0xd8]",
    "lea     rax, [rel history_comment_char]",
    "test    r13d, r13d",
    "cmovs   r13d, ecx",
    "movzx   r9d, byte [rax]",
    "movsxd  rcx, ecx",
    "lea     r15, [r14+rcx]",
    "mov     byte [r15], 0x0",
    "movzx   eax, byte [r14]",
    "test    r9b, r9b",
    "jne     0x10a5d6",
    "cmp     r9b, al",
    "je      0x10aa50",
    "cmp     al, 0x23",
    "je      0x10a9a0",
    "mov     byte [rbp-0xd8], r9b",
    "call    __ctype_b_loc",
    "movzx   edx, byte [r14+0x1]",
    "mov     dword [rbp-0xdc], 0x0",
    "mov     rax, qword [rax]",
    "movzx   r9d, byte [rbp-0xd8]",
    "test    byte [rax+rdx*2+0x1], 0x8",
    "jne     0x10a9e1",
    "mov     dword [rbp-0xdc], 0x0",
    "xor     r10d, r10d",
    "mov     qword [rbp-0xd8], 0x0",
    "mov     byte [rbp-0xd8], r9b",
    "call    __ctype_b_loc",
    "movzx   edx, byte [r14+0x1]",
    "movzx   r9d, byte [rbp-0xd8]",
    "mov     rax, qword [rax]",
    "test    byte [rax+rdx*2+0x1], 0x8",
    "je      0x10a5df",
    "lea     rax, [rel history_multiline_entries]",
    "lea     rdx, [rel history_write_timestamps]",
    "mov     qword [rbp-0xd8], r14",
    "mov     r10d, 0x1",
    "cmp     dword [rdx], 0x1",
    "sbb     dword [rax], 0xffffffff",
    "jmp     0x10a5f7",
    "mov     qword [rbp-0xd8], 0x0",
    "xor     r10d, r10d",
    "jmp     0x10a5f7",
    "mov     rdi, r14",
    "xor     r8d, r8d",
    "jmp     0x10a821",
    "test    r12d, r12d",
    "jle     0x10aab8",
    "lea     rax, [rel history_comment_char]",
    "mov     r9d, 0x23",
    "mov     dword [rbp-0xdc], 0x1",
    "mov     byte [rax], 0x23",
    "cmp     r14, r15",
    "jae     0x10aab8",
    "cmp     rdi, r15",
    "jae     0x10a8e1",
    "mov     rdx, r14",
    "xor     r8d, r8d",
    "mov     qword [rbp-0xf8], rbx",
    "mov     rdi, r14",
    "mov     qword [rbp-0x100], r14",
    "and     r10d, 0x1",
    "mov     r14d, r12d",
    "mov     ebx, r9d",
    "mov     dword [rbp-0xe0], r13d",
    "mov     r12, rdx",
    "mov     r13, r15",
    "mov     r15d, r8d",
    "jmp     0x10a652",
    "lea     rax, [rel history_lines_read_from_file]",
    "mov     dword [rax], r8d",
    "mov     eax, dword [rbp-0xdc]",
    "test    eax, eax",
    "je      0x10a8ff",
    "mov     qword [rbp-0xe8], rbx",
    "lea     r12, [rdi+0x1]",
    "mov     ebx, r8d",
    "mov     qword [rbp-0xf0], r14",
    "mov     r14, r15",
    "jmp     0x10a851",
    "movzx   eax, byte [r12]",
    "add     r12, 0x1",
    "cmp     al, 0xa",
    "jne     0x10a640",
    "mov     rdi, rbx",
    "call    free",
    "mov     rdi, r14",
    "call    free",
    "jmp     0x10a730",
    "lea     rax, [rel history_comment_char]",
    "mov     byte [rax], 0x0",
    "cmp     byte [r12-0x1], 0xa",
    "mov     r15, r12",
    "jne     0x10a848",
    "cmp     r12, r13",
    "jae     0x10aa98",
    "movzx   esi, byte [r12]",
    "cmp     sil, bl",
    "je      0x10a750",
    "xor     r12d, r12d",
    "jmp     0x10a6c9",
    "add     r12, 0x1",
    "cmp     r15, r14",
    "jae     0x10a8d0",
    "lea     rax, [r12-0x1]",
    "cmp     rdi, rax",
    "jae     0x10a872",
    "mov     r8d, r15d",
    "mov     rbx, qword [rbp-0xf8]",
    "mov     r15, r13",
    "mov     r14, qword [rbp-0x100]",
    "mov     r13d, dword [rbp-0xe0]",
    "jmp     0x10a821",
    "cmp     r15d, r14d",
    "jge     0x10aa98",
    "mov     byte [rbp-0xf0], sil",
    "mov     byte [rbp-0xe8], r10b",
    "call    __ctype_b_loc",
    "movzx   edi, byte [r12+0x1]",
    "movzx   r10d, byte [rbp-0xe8]",
    "mov     rax, qword [rax]",
    "movzx   esi, byte [rbp-0xf0]",
    "test    byte [rax+rdi*2+0x1], 0x8",
    "je      0x10a66d",
    "add     r15d, 0x1",
    "mov     r8d, ebx",
    "mov     r14, qword [rbp-0xf0]",
    "mov     rbx, qword [rbp-0xe8]",
    "mov     byte [r12-0x1], 0x0",
    "cmp     byte [r12-0x2], 0xd",
    "je      0x10a978",
    "mov     qword [rbp-0xd8], r12",
    "jmp     0x10a671",
    "mov     rdi, r12",
    "jmp     0x10a640",
    "test    r10b, r10b",
    "jne     0x10a798",
    "lea     rcx, [rel history_comment_char]",
    "cmp     al, byte [rcx]",
    "je      0x10a940",
    "add     ebx, 0x1",
    "mov     byte [r12-0x2], 0x0",
    "jmp     0x10a878",
    "cmp     r15d, r14d",
    "jl      0x10a67f",
    "mov     r8d, r15d",
    "mov     r15, r13",
    "mov     rbx, qword [rbp-0xf8]",
    "mov     rdx, r12",
    "mov     r14, qword [rbp-0x100]",
    "mov     r13d, dword [rbp-0xe0]",
    "cmp     r12, r15",
    "jb      0x10a7cc",
    "mov     qword [rbp-0xf8], rdi",
    "call    __ctype_b_loc",
    "mov     rdi, qword [rbp-0xf8]",
    "mov     rax, qword [rax]",
    "movzx   esi, byte [rdi+0x1]",
    "test    byte [rax+rsi*2+0x1], 0x8",
    "je      0x10a89f",
    "cmp     qword [rbp-0xd8], 0x0",
    "je      0x10a918",
    "mov     rdi, r12",
    "jmp     0x10a848",
    "movzx   eax, byte [rdi]",
    "test    al, al",
    "jne     0x10a890",
    "cmp     sil, 0xa",
    "jne     0x10a7c0",
    "jmp     0x10aac3",
    "mov     qword [rbp-0xd8], rdi",
    "jmp     0x10a882",
    "lea     rax, [rel history_length]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jle     0x10a936",
    "call    add_history",
    "mov     rdi, qword [rbp-0xd8]",
    "call    add_history_time",
    "add     rdx, 0x1",
    "movzx   esi, byte [rdx]",
    "cmp     r15, rdx",
    "je      0x10a818",
    "lea     rdi, [rdx+0x1]",
    "jmp     0x10a821",
    "cmp     sil, 0xa",
    "jne     0x10a8e1",
    "cmp     r13d, ebx",
    "jle     0x10a8d0",
    "call    add_history",
    "jmp     0x10a8ba",
    "lea     rsi, [rel history_multiline_entries]",
    "mov     edx, dword [rsi]",
    "test    edx, edx",
    "jne     0x10aa10",
    "cmp     sil, 0xa",
    "je      0x10a7d2",
    "jmp     0x10a7d2",
    "mov     qword [rbp-0xd8], 0x0",
    "add     ebx, 0x1",
    "jmp     0x10a882",
    "sub     eax, 0x1",
    "mov     rsi, rdi",
    "mov     edi, eax",
    "call    _hs_append_history_line",
    "jmp     0x10a8ba",
    "mov     rdi, r15"
  ]
}
{
  "address": "0x114110",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     ebx, edi",
    "mov     edi, 0x1",
    "sub     rsp, 0x138",
    "mov     qword [rbp-0x148], rsi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    sub_37110",
    "mov     rdx, qword [rel data_160958]",
    "test    rdx, rdx",
    "je      0x114166",
    "mov     dword [rel data_160940], eax",
    "cmp     eax, 0x28",
    "je      0x114328",
    "mov     rcx, qword [rel data_160d88]",
    "test    rcx, rcx",
    "jne     0x114310",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x1145b2",
    "lea     r15, [rbp-0x140]",
    "mov     rdi, r15",
    "call    save_parser_state",
    "lea     r12, [rel parser_state]",
    "lea     rbx, [rel global_command]",
    "mov     dword [rel data_1608ec], 0x0",
    "lea     r13, [rel need_here_doc]",
    "mov     dword [rel data_1608e8], 0x0",
    "mov     eax, dword [r12]",
    "mov     dword [r13], 0x0",
    "mov     edx, eax",
    "and     eax, 0xfff6ccdc",
    "or      eax, 0x408040",
    "and     edx, 0x1000",
    "mov     dword [r12], eax",
    "lea     rax, [rel shell_eof_token]",
    "mov     dword [rax], 0x29",
    "mov     rax, qword [rbx]",
    "mov     qword [rbx], 0x0",
    "mov     qword [rbp-0x158], rax",
    "lea     rax, [rel expand_aliases]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "jne     0x1142f0",
    "lea     rsi, [rcx-0x1]",
    "mov     qword [rel data_160d88], rsi",
    "mov     byte [rdx+rcx-0x1], al",
    "cmp     eax, 0x28",
    "jne     0x114175",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "mov     rcx, qword [rbp-0x148]",
    "add     rsp, 0x138",
    "mov     edi, ebx",
    "mov     r8d, 0x80",
    "pop     rbx",
    "mov     edx, 0x29",
    "pop     r12",
    "mov     esi, 0x28",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sub_37e50",
    "lea     rax, [rel posixly_correct]",
    "lea     rcx, [rel expand_aliases]",
    "mov     edi, dword [rax]",
    "xor     eax, eax",
    "test    edi, edi",
    "setne   al",
    "mov     dword [rcx], eax",
    "jmp     0x114200",
    "lea     rax, [rel shell_compatibility_level]",
    "test    edx, edx",
    "sete    r14b",
    "cmp     dword [rax], 0x33",
    "jg      0x11421b",
    "lea     rax, [rel current_token]",
    "mov     dword [rel data_161060], 0x130",
    "mov     dword [rax], 0xa",
    "call    yyparse",
    "mov     esi, dword [r13]",
    "mov     ecx, eax",
    "test    esi, esi",
    "jle     0x114275",
    "test    r14b, r14b",
    "jne     0x114430",
    "lea     rax, [rel shell_compatibility_level]",
    "cmp     dword [rax], 0x33",
    "jg      0x11428a",
    "cmp     esi, 0x1",
    "mov     dword [rbp-0x150], eax",
    "lea     rdx, [rel data_1217ad[7]]  {\"s\"}",
    "lea     rax, [rel data_122e02]",
    "cmove   rdx, rax",
    "lea     rdi, [rel data_134aa0]  {\"command substitution: %d untermi\u2026\"}",
    "xor     eax, eax",
    "call    internal_warning",
    "call    gather_here_documents",
    "mov     ecx, dword [rbp-0x150]",
    "lea     rax, [rel extended_glob]",
    "mov     ecx, dword [rax]",
    "mov     dword [rax], 0x1",
    "mov     dword [rbp-0x160], ecx",
    "jmp     0x11421b",
    "lea     rax, [rel EOF_Reached]",
    "mov     r13, qword [rbx]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "jne     0x1143fb",
    "test    r14b, r14b",
    "jne     0x1143d8",
    "mov     eax, dword [rbp-0x120]",
    "lea     rbx, [rel shell_eof_token]",
    "lea     r14, [rel data_1608e4]",
    "or      dword [r12], 0x800000",
    "mov     dword [rbx], eax",
    "mov     eax, dword [rbp-0xe0]",
    "lea     rbx, [rel expand_aliases]",
    "mov     dword [rbx], eax",
    "jmp     0x1143ac",
    "test    ecx, ecx",
    "je      0x114370",
    "lea     rax, [rel extended_glob]",
    "mov     esi, dword [rbp-0x160]",
    "mov     r13, qword [rbx]",
    "mov     dword [rax], esi",
    "lea     rax, [rel EOF_Reached]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x11429e",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x1145b2",
    "lea     rax, [rel current_token]",
    "lea     rcx, [rel shell_eof_token]",
    "mov     eax, dword [rax]",
    "cmp     eax, dword [rcx]",
    "je      0x114480",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x1142b9",
    "add     rsp, 0x138",
    "mov     rax, r14",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     r12, [rel pushed_string_list]",
    "mov     rdi, r15",
    "mov     r14, qword [r12]",
    "call    restore_parser_state",
    "lea     rax, [rel command_string_index]",
    "mov     rdi, r13",
    "add     dword [rel data_161a58], 0x1",
    "mov     qword [r12], r14",
    "mov     dword [rax], 0x0",
    "mov     dword [rel data_16105c], 0x0",
    "mov     qword [rel data_161050], 0x0",
    "call    sub_48540",
    "lea     rax, [rel the_printed_command]",
    "sub     dword [rel data_161a58], 0x1",
    "mov     r14, qword [rax]",
    "mov     rdi, r14",
    "mov     qword [rbp-0x150], r14",
    "call    strlen",
    "cmp     byte [r14], 0x28",
    "mov     r15, rax",
    "mov     r12d, eax",
    "je      0x114560",
    "mov     dword [rel data_161060], eax",
    "mov     eax, dword [rbp-0x120]",
    "lea     r14, [rel data_1608e4]",
    "lea     rbx, [rel expand_aliases]",
    "mov     dword [rcx], eax",
    "mov     eax, dword [rbp-0xe0]",
    "mov     dword [rbx], eax",
    "mov     edx, dword [rax]",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_158490]",
    "mov     dword [rax], edx",
    "mov     dword [rel data_158490], edx",
    "call    set_pipestatus_array",
    "lea     rax, [rel interactive_shell]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x114450",
    "mov     dword [rax], 0x1",
    "add     r15d, 0x3",
    "lea     r12d, [rax+0x1]",
    "movsxd  rdx, r15d",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x160], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x160]",
    "test    rax, rax",
    "mov     r14, rax",
    "je      0x1145ba",
    "lea     edx, [rax+0x2]",
    "movsxd  rdx, edx",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x160], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x160]",
    "test    rax, rax",
    "mov     r14, rax",
    "je      0x1145b7",
    "mov     eax, dword [rbp-0x120]",
    "lea     rcx, [rel shell_eof_token]",
    "mov     edi, 0x2",
    "lea     rbx, [rel expand_aliases]",
    "mov     dword [rcx], eax",
    "mov     eax, dword [rbp-0xe0]",
    "mov     dword [rbx], eax",
    "call    jump_to_top_level",
    "{ Does not return }",
    "mov     edi, 0x1",
    "call    jump_to_top_level",
    "{ Does not return }",
    "xor     eax, eax",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     r14d, r14d",
    "mov     qword [rbp-0x160], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "test    rdx, rdx",
    "mov     eax, 0x1",
    "mov     byte [r14], 0x20",
    "lea     rdi, [r14+0x1]",
    "cmovne  rax, rdx",
    "mov     rsi, qword [rbp-0x150]",
    "lea     rdx, [rax-0x1]",
    "call    __strcpy_chk",
    "jmp     0x11452b",
    "mov     r12d, r15d",
    "mov     rsi, qword [rbp-0x150]",
    "mov     rdi, r14",
    "call    __strcpy_chk",
    "movsxd  rax, r12d",
    "mov     edx, 0x29",
    "mov     rdi, r13",
    "add     r12d, 0x1",
    "mov     word [r14+rax], dx",
    "call    dispose_command",
    "mov     rax, qword [rbp-0x158]",
    "mov     qword [rbx], rax",
    "mov     rax, qword [rbp-0x148]",
    "mov     dword [rax], r12d",
    "jmp     0x1143ac"
  ]
}
{
  "address": "0x5bf70",
  "rules": [
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "contain loop",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     eax, dword [rel data_168080]",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r14 {__saved_r14}",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "mov     rbx, rdi",
    "test    eax, eax",
    "je      0x5c010",
    "lea     rcx, [rel sub_5ad00]",
    "mov     edx, 0x10",
    "mov     esi, 0x25",
    "lea     rdi, [rel data_1599e0]",
    "call    qsort",
    "mov     dword [rel data_168080], 0x1",
    "jmp     0x5bf90",
    "mov     rdi, qword [rel data_1599e0]",
    "test    rdi, rdi",
    "je      0x5bfd9",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "movsx   r14d, byte [rbx]",
    "lea     r12, [rel data_1599f0]",
    "xor     r13d, r13d  {0x0}",
    "jmp     0x5bfc1",
    "movsx   eax, byte [rdi]",
    "sub     eax, r14d",
    "jne     0x5bfd5",
    "test    eax, eax",
    "jle     0x5bfb0",
    "mov     rsi, rbx",
    "call    strcmp",
    "test    eax, eax",
    "je      0x5bfe8",
    "mov     rdi, qword [r12]",
    "add     r12, 0x10",
    "add     r13d, 0x1",
    "test    rdi, rdi",
    "je      0x5bfd9",
    "movsxd  r13, r13d",
    "lea     rax, [rel data_1599e0]",
    "mov     rdi, rbx",
    "pop     rbx {__saved_rbx}",
    "shl     r13, 0x4",
    "pop     r12 {__saved_r12}",
    "mov     rax, qword [rax+r13+0x8]",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     rbp {__saved_rbp}",
    "\u2753jmp     rax"
  ],
  "high level IL": [
    "int32_t result = data_168080",
    "if (result == 0)",
    "result = qsort(&data_1599e0, 0x25, 0x10, sub_5ad00)",
    "data_168080 = 1",
    "char const (* i)[0xc] = data_1599e0",
    "if (i != 0)",
    "int32_t r14_1 = sx.d(*arg1)",
    "char const (** r12_1)[0xe] = &data_1599f0",
    "int32_t r13_1 = 0",
    "int32_t rax = sx.d(*i)",
    "result = rax - r14_1",
    "if (rax == r14_1)",
    "result = strcmp(i, arg1)",
    "if (result == 0)",
    "jump((&data_1599e8)[sx.q(r13_1) * 2])",
    "if (result s> 0)",
    "break",
    "i = *r12_1",
    "r12_1 = &r12_1[2]",
    "r13_1 += 1",
    "do while (i != 0)",
    "return result"
  ]
}
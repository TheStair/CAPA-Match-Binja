{
  "address": "0xa9c10",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "check for kernel debugger via shared user data structure/47a8170337e74f7ca5a6c64253eb43bf"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13d, esi",
    "mov     esi, 0x1",
    "push    r12",
    "mov     r12, rdi",
    "lea     rdi, [rel data_121266]  {\"PATH\"}",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    sub_502c0",
    "test    rax, rax",
    "je      0xa9d2c",
    "xor     ebx, ebx",
    "mov     rbx, rax",
    "mov     eax, dword [rax+0x28 {Elf64_Header::section_header_offset.d}]",
    "test    ah, 0x8",
    "jne     0xa9d18",
    "test    rax, rax",
    "je      0xa9db0",
    "mov     dword [rbp-0x44], 0x0",
    "jmp     0xa9c75",
    "mov     rdi, rbx",
    "call    find_variable_nameref",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0xa9da8",
    "test    eax, 0x100000",
    "je      0xa9d2e",
    "mov     rdi, r12",
    "call    phash_search",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xa9d41",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xa9ee6",
    "mov     esi, 0x2f",
    "mov     rdi, r12",
    "call    strchr",
    "mov     r14, rax",
    "test    rax, rax",
    "jne     0xa9d55",
    "mov     eax, dword [rax+0x28]",
    "jmp     0xa9c63",
    "mov     esi, 0x2f",
    "mov     rdi, r12",
    "call    strchr",
    "test    r13b, 0x2",
    "je      0xa9d50",
    "mov     dword [rbp-0x44], 0x1",
    "lea     rax, [rel posixly_correct]",
    "lea     rdx, [rel check_hashed_filenames]",
    "mov     eax, dword [rax]",
    "or      eax, dword [rdx]",
    "je      0xa9cf0",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa9ee1",
    "mov     eax, r13d",
    "and     eax, 0x2",
    "mov     dword [rbp-0x48], eax",
    "jne     0xa9e20",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa9ee1",
    "mov     rdi, r15",
    "call    file_status",
    "mov     dword [rbp-0x3c], eax",
    "not     eax",
    "test    al, 0x3",
    "je      0xa9cf0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "mov     rcx, rbx",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __memcpy_chk",
    "call    conf_standard_path",
    "lea     rcx, [rbp-0x3c]",
    "mov     edx, 0x24",
    "mov     rdi, r12",
    "mov     rsi, rax",
    "mov     r14, rax",
    "call    sub_a9860",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xa9e58",
    "test    rbx, rbx",
    "jne     0xa9e10",
    "add     rsp, 0x28",
    "mov     rax, r15",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r12",
    "call    phash_remove",
    "mov     rdi, r15",
    "call    free",
    "jmp     0xa9d41",
    "mov     rdi, r14",
    "call    free",
    "jmp     0xa9cf0",
    "lea     rax, [rel hashing_enabled]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0xa9e58",
    "mov     r14, qword [rbx+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "jmp     0xa9cb3",
    "mov     r8d, dword [rbp-0x44]",
    "test    r8d, r8d",
    "jne     0xa9e10",
    "mov     ecx, dword [rbp-0x44]",
    "test    ecx, ecx",
    "je      0xa9ea8",
    "lea     rcx, [rbp-0x3c]",
    "mov     edx, 0x24",
    "mov     rsi, r14",
    "mov     rdi, r12",
    "call    sub_a9860",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xa9cf0",
    "and     r13d, 0x1",
    "je      0xa9e58",
    "lea     rax, [rel hashing_enabled]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0xa9cf0",
    "jmp     0xa9e72",
    "mov     eax, dword [rbp-0x44]",
    "test    eax, eax",
    "je      0xa9e68",
    "movzx   eax, byte [r12]",
    "cmp     byte [r15], al",
    "je      0xa9ed0",
    "and     r13d, 0x1",
    "je      0xa9cf0",
    "nop     word [rax+rax]",
    "mov     rsi, r12",
    "mov     rdi, r15",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xa9e7c",
    "lea     rax, [rel posixly_correct]",
    "lea     rdx, [rel check_hashed_filenames]",
    "mov     eax, dword [rax]",
    "or      eax, dword [rdx]",
    "je      0xa9eb0",
    "jmp     0xa9e90",
    "lea     rax, [rel dot_found_in_search]",
    "mov     ecx, 0x1",
    "mov     rsi, r15",
    "mov     rdi, r12",
    "mov     edx, dword [rax]",
    "call    sub_88040",
    "jmp     0xa9e96",
    "test    byte [rbp-0x3c], 0x2",
    "jne     0xa9eb0",
    "mov     edi, dword [rbp-0x48]",
    "test    edi, edi",
    "jne     0xa9e58",
    "jmp     0xa9cf0"
  ]
}
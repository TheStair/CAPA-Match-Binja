{
  "address": "0x10c670",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     r10, rdx",
    "mov     rax, rdi",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x48",
    "test    rdx, rdx",
    "setne   cl",
    "cmp     esi, 0xffffffff",
    "setne   dl",
    "and     cl, dl",
    "mov     byte [rbp-0x51], cl",
    "je      0x10c6a5",
    "movzx   edx, byte [rax]",
    "xor     r13d, r13d",
    "test    dl, dl",
    "je      0x10c70c",
    "mov     dword [r10], 0xffffffff",
    "add     rsp, 0x48",
    "mov     rax, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     dword [rbp-0x40], 0x0",
    "xor     r14d, r14d",
    "mov     r11, rax",
    "xor     ebx, ebx",
    "mov     dword [rbp-0x44], 0x0",
    "xor     r13d, r13d",
    "xor     ecx, ecx",
    "mov     r15d, r14d",
    "mov     dword [rbp-0x48], 0x0",
    "mov     qword [rbp-0x38], rax",
    "mov     dword [rbp-0x58], esi",
    "mov     qword [rbp-0x60], r10",
    "nop     ",
    "movzx   edx, byte [rax]",
    "add     r14, 0x1",
    "add     rax, 0x1",
    "test    dl, dl",
    "jne     0x10c6f0",
    "cmp     dl, 0x20",
    "jne     0x10c720",
    "lea     ecx, [rdx-0x9]",
    "cmp     cl, 0x1",
    "jbe     0x10c6fd",
    "lea     rax, [rel history_comment_char]",
    "cmp     byte [rax], dl",
    "je      0x10c70c",
    "mov     edx, r15d",
    "mov     rdi, qword [rbp-0x38]",
    "sub     edx, r11d",
    "add     edx, r14d",
    "mov     esi, edx",
    "mov     dword [rbp-0x50], edx",
    "call    sub_104b60",
    "mov     edx, dword [rbp-0x50]",
    "mov     r15d, eax",
    "cmp     eax, edx",
    "je      0x10c810",
    "lea     rax, [rel history_word_delimiters]",
    "mov     rdi, qword [rax]",
    "test    rdi, rdi",
    "je      0x10c750",
    "cmp     byte [rbp-0x51], 0x0",
    "je      0x10c76b",
    "mov     rax, qword [rbp-0x38]",
    "add     r15d, 0x1",
    "movsxd  rcx, r15d",
    "add     rcx, rax",
    "movzx   eax, byte [rcx]",
    "test    al, al",
    "je      0x10c750",
    "mov     r12d, dword [rbp-0x40]",
    "add     r12d, 0x2",
    "cmp     dword [rbp-0x44], r12d",
    "jle     0x10c880",
    "mov     eax, dword [rbp-0x58]",
    "cmp     eax, edx",
    "jl      0x10c76b",
    "mov     qword [rbp-0x50], rbx",
    "mov     r12, rdi",
    "mov     rbx, rcx",
    "mov     dword [rbp-0x64], edx",
    "jmp     0x10c860",
    "add     dword [rbp-0x44], 0xa",
    "movsxd  r12, dword [rbp-0x44]",
    "mov     dword [rbp-0x40], edx",
    "shl     r12, 0x3",
    "test    r13, r13",
    "je      0x10c8d8",
    "mov     esi, r15d",
    "lea     r12, [rbx*8]",
    "sub     esi, edx",
    "lea     rax, [r13+r12]",
    "lea     ecx, [rsi+0x1]",
    "mov     dword [rbp-0x48], esi",
    "movsxd  rcx, ecx",
    "mov     qword [rbp-0x40], rax",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x50], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x50]",
    "mov     esi, dword [rbp-0x48]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0x10c8e8",
    "cmp     r15d, eax",
    "jle     0x10c76b",
    "movsx   esi, al",
    "mov     rdi, r12",
    "call    strchr",
    "test    rax, rax",
    "jne     0x10c850",
    "mov     rdi, r12",
    "call    malloc",
    "mov     edx, dword [rbp-0x40]",
    "mov     r13, rax",
    "jmp     0x10c8a5",
    "mov     rdi, r13",
    "mov     rsi, r12",
    "call    realloc",
    "mov     edx, dword [rbp-0x40]",
    "mov     r13, rax",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "mov     qword [rbp-0x38], rcx",
    "call    dcgettext",
    "mov     rdx, qword [rbp-0x38]",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "movsxd  rdx, esi",
    "mov     rsi, r14",
    "add     rbx, 0x1",
    "mov     qword [rbp-0x50], rdx",
    "call    __strncpy_chk",
    "mov     rdx, qword [rbp-0x50]",
    "movsxd  rcx, r15d",
    "mov     rdi, rax",
    "mov     byte [rax+rdx], 0x0",
    "mov     rax, qword [rbp-0x40]",
    "mov     qword [rax], rdi",
    "mov     rax, qword [rbp-0x38]",
    "mov     qword [r13+r12+0x8], 0x0",
    "lea     r11, [rax+rcx]",
    "movzx   edx, byte [r11]",
    "test    dl, dl",
    "je      0x10c70c",
    "mov     rax, qword [rbp-0x60]",
    "mov     edi, dword [rbp-0x48]",
    "mov     dword [rax], edi",
    "movzx   eax, byte [rbx+0x1]",
    "add     rbx, 0x1",
    "add     r15d, 0x1",
    "test    al, al",
    "je      0x10c870",
    "mov     rbx, qword [rbp-0x50]",
    "mov     edx, dword [rbp-0x64]",
    "jmp     0x10c750",
    "test    r13, r13",
    "jne     0x10c77d",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, r12",
    "lea     rsi, [rel data_11f045]  {\"xrealloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     dword [rbp-0x40], ebx",
    "mov     dword [rbp-0x48], ebx",
    "jmp     0x10c6e0",
    "mov     rax, qword [rbp-0x38]",
    "mov     r14, r11",
    "lea     rax, [rax+rcx+0x1]",
    "nop     dword [rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
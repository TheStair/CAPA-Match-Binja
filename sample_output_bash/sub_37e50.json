{
  "address": "0x37e50",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "encrypt data using HC-128/c637da9aba51401b89e3f17cfe62d12c",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "contain loop",
    "allocate or change RWX memory/86c3cb3db3894fa491c471a42be563f5",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "hide graphical window from taskbar/3804d9f76e4f47c8b3a7ed608bc3a556",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check if file exists/e724fb9dd0e04bc2af009f8be857642c/229a7b83bcc7454aa2d6f8d97a1a725e",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rcx",
    "mov     ecx, r8d",
    "sub     rsp, 0x78",
    "mov     dword [rbp-0x44], edi",
    "mov     dword [rbp-0x48], esi",
    "mov     dword [rbp-0x4c], edx",
    "mov     dword [rbp-0x5c], r8d",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "mov     eax, r8d",
    "sar     eax, 0x6",
    "and     eax, 0x1",
    "mov     dword [rbp-0x6c], eax",
    "and     ecx, 0x8",
    "je      0x38c68",
    "cmp     dword [rbp-0x44], 0x22",
    "jne     0x37ec8",
    "cmp     edi, 0x60",
    "je      0x37ec8",
    "mov     eax, dword [rbp-0x5c]",
    "xor     r12d, r12d",
    "and     eax, 0x4",
    "mov     dword [rbp-0x74], eax",
    "mov     dword [rbp-0x74], 0x4",
    "mov     r12d, ecx",
    "jmp     0x37ed4",
    "cmp     edi, 0x27",
    "je      0x37ec8",
    "mov     esi, 0x40",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel line_number]",
    "mov     dword [rbp-0x50], 0x1",
    "mov     r15d, 0x40",
    "xor     r13d, r13d",
    "mov     qword [rbp-0x68], 0x40",
    "mov     eax, dword [rax]",
    "mov     qword [rbp-0x80], rbx",
    "mov     rbx, r14",
    "mov     r14d, r13d",
    "mov     r13d, r15d",
    "mov     r15d, r12d",
    "mov     dword [rbp-0x78], eax",
    "mov     eax, dword [rbp-0x5c]",
    "mov     esi, eax",
    "not     eax",
    "and     esi, 0x40",
    "and     eax, 0x1",
    "mov     dword [rbp-0x60], esi",
    "mov     byte [rbp-0x6d], al",
    "nop     dword [rax]",
    "mov     edi, 0x40",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x39574",
    "cmp     dword [rbp-0x44], 0x22",
    "je      0x39034",
    "call    sub_37110",
    "mov     r12d, eax",
    "cmp     eax, 0xffffffff",
    "je      0x38c88",
    "xor     edi, edi",
    "test    r15b, 0x8",
    "sete    dil",
    "mov     dword [rbp-0x74], 0x4",
    "xor     r12d, r12d",
    "jmp     0x37ed4",
    "mov     eax, dword [rbp-0x5c]",
    "and     eax, 0x4",
    "sete    r12b",
    "mov     dword [rbp-0x74], eax",
    "movzx   r12d, r12b",
    "add     r12d, r12d",
    "jmp     0x37ed4",
    "mov     rdi, rbx",
    "call    free",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_123380]  {\"unexpected EOF while looking for\u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     edx, dword [rbp-0x4c]",
    "mov     edi, dword [rbp-0x78]",
    "mov     rsi, rax",
    "xor     eax, eax",
    "call    parser_error",
    "lea     rax, [rel EOF_Reached]",
    "mov     dword [rax], 0x1",
    "lea     rax, [rel parser_state]",
    "or      dword [rax], 0x800000",
    "mov     eax, r15d",
    "and     eax, 0x4",
    "cmp     r12d, 0xa",
    "je      0x383f0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x3954e",
    "lea     rdx, [rel interactive]",
    "mov     esi, dword [rdx]",
    "test    esi, esi",
    "je      0x38412",
    "movsxd  r8, r14d",
    "mov     rcx, r8",
    "test    eax, eax",
    "jne     0x38478",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x78",
    "mov     rax, r14",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    eax, eax",
    "jne     0x38590",
    "lea     rdx, [rel bash_input]",
    "mov     edx, dword [rdx]",
    "sub     edx, 0x1",
    "cmp     edx, 0x1",
    "jbe     0x38540",
    "lea     edx, [r14+0x1]",
    "cmp     edx, r13d",
    "jge     0x385d0",
    "mov     eax, r15d",
    "and     eax, 0x6",
    "cmp     eax, 0x2",
    "jne     0x37f8e",
    "lea     edx, [r14+0x1]",
    "movsxd  r8, r14d",
    "cmp     edx, r13d",
    "jge     0x385d0",
    "test    r15b, 0x8",
    "je      0x39529",
    "mov     rdx, qword [rel data_160d88]",
    "cmp     rdx, 0x1",
    "jbe     0x3855f",
    "mov     eax, edx",
    "xor     ecx, ecx",
    "mov     qword [rbp-0x88], r8",
    "sub     eax, r13d",
    "mov     dword [rbp-0x58], edx",
    "and     eax, 0xffffffc0",
    "cmp     edx, r13d",
    "cmovl   eax, ecx",
    "lea     r13d, [r13+rax+0x40]",
    "movsxd  rsi, r13d",
    "mov     qword [rbp-0x68], rsi",
    "test    rbx, rbx",
    "je      0x38ce0",
    "mov     byte [rbx+r8], r12b",
    "mov     r14d, edx",
    "jmp     0x37f38",
    "test    r15b, 0x8",
    "jne     0x384f0",
    "cmp     r12d, 0x23",
    "je      0x386a8",
    "movsxd  r14, r14d",
    "mov     byte [rbx+r14], 0xa",
    "mov     r14d, edx",
    "lea     rsi, [rel parser_state]",
    "cmp     dword [rbp-0x48], 0x27",
    "movsxd  rcx, r14d",
    "sete    al",
    "mov     esi, dword [rsi]",
    "mov     edx, esi",
    "mov     dword [rbp-0x58], esi",
    "shr     edx, 0x12",
    "and     dl, al",
    "cmove   edx, eax",
    "jmp     0x382c8",
    "and     r15d, 0xfffffff7",
    "cmp     dword [rbp-0x44], 0x27",
    "je      0x395b7",
    "lea     rdx, [rel pushed_string_list]",
    "mov     rdx, qword [rdx]",
    "test    rdx, rdx",
    "je      0x38579",
    "mov     rdi, qword [rel data_160910]",
    "cmp     byte [rdi+rdx-0x1], 0x0",
    "je      0x38412",
    "mov     rdi, qword [rbp-0x68]",
    "call    malloc",
    "mov     r8, qword [rbp-0x88]",
    "mov     edx, dword [rbp-0x58]",
    "mov     rbx, rax",
    "jmp     0x38614",
    "mov     rdi, rbx",
    "call    realloc",
    "mov     edx, dword [rbp-0x58]",
    "mov     r8, qword [rbp-0x88]",
    "mov     rbx, rax",
    "xor     edi, edi",
    "cmp     dword [rbp-0x44], 0x27",
    "je      0x37f4a",
    "and     r15d, 0xfffffff7",
    "lea     rax, [rel parser_state]",
    "cmp     dword [rbp-0x48], 0x27",
    "sete    dl",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x58], eax",
    "shr     eax, 0x12",
    "cmp     r12d, 0x1",
    "sete    sil",
    "cmp     r12d, 0x7f",
    "sete    dil",
    "or      esi, edi",
    "and     al, dl",
    "jne     0x382b8",
    "test    r14d, r14d",
    "je      0x386d0",
    "and     r15d, 0xfffffffb",
    "jmp     0x37f38",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "je      0x37f38",
    "mov     eax, dword [rbp-0x4c]",
    "cmp     r12d, eax",
    "jne     0x38000",
    "movsxd  rcx, r14d",
    "jmp     0x384f4",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x384e0",
    "mov     dword [rbp-0x58], eax",
    "call    sub_44ac0",
    "mov     eax, dword [rbp-0x58]",
    "test    eax, eax",
    "je      0x3841a",
    "cmp     qword [rdx+0x18], 0x0",
    "jne     0x38412",
    "test    rbx, rbx",
    "je      0x3958c",
    "mov     rsi, qword [rbp-0x68]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x58], edx",
    "mov     qword [rbp-0x88], r8",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [rbx+r8], r12b",
    "mov     r14d, edx",
    "cmp     r12d, 0xa",
    "jne     0x37f38",
    "sub     eax, r13d",
    "and     eax, 0xffffffc0",
    "lea     r13d, [r13+rax+0x40]",
    "movsxd  rax, r13d",
    "mov     qword [rbp-0x68], rax",
    "test    rbx, rbx",
    "je      0x38e78",
    "cmp     r12d, 0x1",
    "jne     0x38465",
    "mov     edx, eax",
    "test    sil, sil",
    "jne     0x38950",
    "test    sil, sil",
    "je      0x382c8",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x386ef",
    "movzx   eax, byte [rbx+r8-0x1]",
    "cmp     al, 0xa",
    "je      0x386d0",
    "mov     esi, dword [rbp-0x4c]",
    "cmp     dword [rbp-0x48], esi",
    "je      0x38070",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x38498",
    "lea     eax, [r14+0x2]",
    "cmp     eax, r13d",
    "jge     0x387f0",
    "xor     eax, eax",
    "test    r14d, r14d",
    "setg    al",
    "sub     r14d, eax",
    "jmp     0x37f40",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "jne     0x384e0",
    "nop     dword [rax]",
    "jmp     0x385a7",
    "movsxd  rdi, r13d",
    "mov     qword [rbp-0x58], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x58]",
    "mov     rbx, rax",
    "jmp     0x38821",
    "mov     rdi, rbx",
    "movsxd  rsi, r13d",
    "mov     qword [rbp-0x58], rcx",
    "call    realloc",
    "mov     rcx, qword [rbp-0x58]",
    "mov     rbx, rax",
    "mov     byte [rbx+rcx], r12b",
    "add     r14d, 0x1",
    "jmp     0x37f38",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x3852a",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x38971",
    "nop     dword [rax+rax]",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x38638",
    "or      r15d, 0x4",
    "jmp     0x37f8e",
    "mov     rdi, qword [rel data_160910]",
    "cmp     byte [rdi+rax-0x1], 0x0",
    "je      0x37f8e",
    "lea     rdx, [rel sh_syntaxtab]",
    "test    byte [rdx+rax*4+0x1], 0x20",
    "je      0x37f8e",
    "lea     r9d, [r14+0x1]",
    "cmp     r9d, r13d",
    "jge     0x38358",
    "mov     esi, dword [rbp-0x48]",
    "cmp     r12d, esi",
    "sete    al",
    "mov     r8d, eax",
    "test    r15b, 0x1",
    "je      0x38320",
    "lea     r9d, [r14+0x1]",
    "sub     dword [rbp-0x50], 0x1",
    "cmp     r9d, r13d",
    "jge     0x38358",
    "mov     rdi, qword [rel data_160910]",
    "cmp     byte [rdi+rax-0x1], 0x0",
    "jne     0x38498",
    "lea     eax, [r14+0x2]",
    "movsxd  rcx, r14d",
    "cmp     eax, r13d",
    "jge     0x387f0",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x385c6",
    "test    rbx, rbx",
    "jne     0x38501",
    "movsxd  rsi, r13d",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x58], rcx",
    "call    sub_a7f00",
    "{ Does not return }",
    "add     r14d, 0x1",
    "mov     byte [rbx+rcx], 0x1",
    "movsxd  rcx, r14d",
    "jmp     0x38465",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "je      0x38465",
    "add     r14d, 0x1",
    "cmp     r14d, r13d",
    "jge     0x3922d",
    "mov     rdi, qword [rel data_160910]",
    "mov     edx, esi",
    "cmp     byte [rdi+rax-0x1], 0x0",
    "je      0x37ff4",
    "lea     edx, [r14+0x2]",
    "cmp     edx, r13d",
    "jge     0x38da8",
    "mov     rdi, qword [rel data_160910]",
    "cmp     byte [rdi+rax-0x1], 0x0",
    "jne     0x38638",
    "nop     dword [rax]",
    "mov     eax, r9d",
    "xor     esi, esi",
    "mov     byte [rbp-0x58], dl",
    "sub     eax, r13d",
    "mov     dword [rbp-0x90], r9d",
    "and     eax, 0xffffffc0",
    "cmp     r9d, r13d",
    "mov     qword [rbp-0x88], rcx",
    "cmovl   eax, esi",
    "lea     r13d, [r13+rax+0x40]",
    "movsxd  rsi, r13d",
    "mov     qword [rbp-0x68], rsi",
    "test    rbx, rbx",
    "je      0x38e50",
    "mov     byte [rbx+rcx], r12b",
    "mov     r8d, r12d",
    "test    dl, dl",
    "jne     0x384c3",
    "cmp     byte [rbp-0x6d], 0x0",
    "je      0x38070",
    "cmp     esi, 0x7b",
    "sete    sil",
    "and     sil, al",
    "je      0x38320",
    "mov     byte [rbx+rcx], r12b",
    "mov     ecx, dword [rbp-0x50]",
    "mov     r8d, r12d",
    "test    ecx, ecx",
    "je      0x38275",
    "nop     word [rax+rax]",
    "mov     eax, r14d",
    "mov     qword [rbp-0x58], r8",
    "sub     eax, r13d",
    "and     eax, 0xffffffc0",
    "lea     r13d, [r13+rax+0x40]",
    "movsxd  rsi, r13d",
    "mov     qword [rbp-0x68], rsi",
    "test    rbx, rbx",
    "je      0x3947b",
    "mov     byte [rbx+r8], r12b",
    "jmp     0x37f38",
    "mov     esi, dword [rbp-0x4c]",
    "cmp     r12d, esi",
    "je      0x38300",
    "mov     eax, edx",
    "mov     qword [rbp-0x88], r8",
    "sub     eax, r13d",
    "mov     dword [rbp-0x58], edx",
    "and     eax, 0xffffffc0",
    "lea     r13d, [r13+rax+0x40]",
    "movsxd  rsi, r13d",
    "mov     qword [rbp-0x68], rsi",
    "test    rbx, rbx",
    "je      0x39043",
    "add     r14d, 0x1",
    "mov     byte [rbx+r8], 0x1",
    "movsxd  r14, r14d",
    "mov     byte [rbx+r14], r12b",
    "mov     r14d, edx",
    "jmp     0x37f38",
    "mov     rdi, qword [rbp-0x68]",
    "call    malloc",
    "mov     r9d, dword [rbp-0x90]",
    "mov     rcx, qword [rbp-0x88]",
    "movzx   edx, byte [rbp-0x58]",
    "mov     rbx, rax",
    "jmp     0x383ac",
    "mov     rdi, rbx",
    "call    realloc",
    "movzx   edx, byte [rbp-0x58]",
    "mov     rcx, qword [rbp-0x88]",
    "mov     r9d, dword [rbp-0x90]",
    "mov     rbx, rax",
    "test    byte [rbp-0x5c], 0x2",
    "je      0x384d3",
    "mov     r11d, dword [rbp-0x60]",
    "cmp     r12d, 0x5c",
    "je      0x38700",
    "test    r8b, r8b",
    "je      0x38070",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x38344",
    "mov     r14, rbx",
    "mov     rbx, qword [rbp-0x80]",
    "movsxd  rax, r9d",
    "mov     byte [r14+rax], 0x0",
    "test    rbx, rbx",
    "je      0x3828c",
    "test    dl, dl",
    "je      0x3808c",
    "test    byte [rbp-0x5c], 0x1",
    "jne     0x38070",
    "nop     dword [rax+rax]",
    "mov     rdi, qword [rbp-0x68]",
    "call    malloc",
    "mov     r8, qword [rbp-0x58]",
    "mov     rbx, rax",
    "jmp     0x3925e",
    "mov     rdi, rbx",
    "call    realloc",
    "mov     r8, qword [rbp-0x58]",
    "mov     rbx, rax",
    "mov     r11d, dword [rbp-0x48]",
    "mov     r10d, dword [rbp-0x4c]",
    "cmp     r12d, r11d",
    "sete    sil",
    "mov     r8d, esi",
    "cmp     r11d, r10d",
    "je      0x38051",
    "mov     rdi, qword [rbp-0x68]",
    "call    malloc",
    "mov     r8, qword [rbp-0x88]",
    "mov     edx, dword [rbp-0x58]",
    "mov     rbx, rax",
    "jmp     0x38de4",
    "mov     rdi, rbx",
    "call    realloc",
    "mov     edx, dword [rbp-0x58]",
    "mov     r8, qword [rbp-0x88]",
    "mov     rbx, rax",
    "test    rbx, rbx",
    "jne     0x384a9",
    "mov     rsi, qword [rbp-0x68]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     byte [rbp-0x58], dl",
    "mov     dword [rbp-0x90], r9d",
    "mov     qword [rbp-0x88], rcx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r14d, r9d",
    "jmp     0x37f38",
    "cmp     r12d, 0x5c",
    "je      0x39196",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x38990",
    "mov     eax, dword [rbp-0x60]",
    "test    eax, eax",
    "je      0x380f2",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "ja      0x38eea",
    "lea     r9d, [r14+0x1]",
    "add     dword [rbp-0x50], 0x1",
    "cmp     r9d, r13d",
    "jl      0x384a9",
    "mov     rdi, qword [rel data_160910]",
    "cmp     byte [rdi+rax-0x1], 0x0",
    "jne     0x38344",
    "mov     dword [rbx], r9d",
    "test    sil, sil",
    "je      0x38070",
    "test    rbx, rbx",
    "jne     0x3897e",
    "mov     rsi, qword [rbp-0x68]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x58], r8",
    "call    sub_a7f00",
    "{ Does not return }",
    "test    rbx, rbx",
    "jne     0x38645",
    "mov     rsi, qword [rbp-0x68]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x58], edx",
    "mov     qword [rbp-0x88], r8",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x391b8",
    "mov     edx, dword [rbp-0x60]",
    "or      r15d, 0x8",
    "test    edx, edx",
    "je      0x380f2",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "jne     0x38990",
    "lea     rax, [rel posixly_correct]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x38120",
    "cmp     dword [rbp-0x6c], 0x1",
    "sete    al",
    "mov     edx, eax",
    "cmp     r12d, 0x25",
    "jne     0x38cfb",
    "mov     rdi, qword [rel data_160910]",
    "jmp     0x3805c",
    "nop     dword [rax]",
    "cmp     byte [rdi+rax-0x1], 0x0",
    "jne     0x38344",
    "or      r15d, 0x8",
    "mov     r14d, r9d",
    "jmp     0x37f38",
    "mov     rdx, qword [rel data_160910]",
    "mov     r14d, r9d",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "je      0x37f38",
    "cmp     dword [rbp-0x6c], 0x1",
    "sete    dl",
    "mov     eax, dword [rbp-0x60]",
    "test    eax, eax",
    "je      0x380f2",
    "mov     esi, dword [rbp-0x4c]",
    "cmp     dword [rbp-0x48], esi",
    "je      0x38738",
    "lea     rax, [rel shell_compatibility_level]",
    "cmp     dword [rax], 0x29",
    "jle     0x38120",
    "cmp     r12d, 0x23",
    "jne     0x38d09",
    "test    al, al",
    "je      0x38cfb",
    "nop     word [rax+rax]",
    "cmp     dword [rbp-0x6c], 0x1",
    "je      0x38e90",
    "test    dl, dl",
    "je      0x38d44",
    "jmp     0x3899f",
    "cmp     dword [rbp-0x48], 0x22",
    "jne     0x38a50",
    "lea     rdx, [rel sh_syntaxtab]",
    "movzx   eax, r12b",
    "test    byte [rdx+rax*4], 0x8",
    "je      0x38660",
    "mov     eax, dword [rbp-0x6c]",
    "sub     eax, 0x40",
    "and     eax, 0xffffffbf",
    "jne     0x389f0",
    "cmp     r12d, 0x2f",
    "jne     0x39553",
    "test    al, al",
    "jne     0x380bc",
    "cmp     r9d, 0x1",
    "jle     0x38e90",
    "mov     esi, r12d",
    "lea     rdi, [rel data_11f111]  {\"#%^,~:-=?+/\"}",
    "mov     dword [rbp-0x6c], r9d",
    "mov     byte [rbp-0x58], r8b",
    "call    strchr",
    "movzx   r8d, byte [rbp-0x58]",
    "mov     r9d, dword [rbp-0x6c]",
    "test    rax, rax",
    "je      0x38ed8",
    "cmp     dword [rbp-0x6c], 0x2",
    "mov     r11d, 0x40",
    "jne     0x380f2",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x380e5",
    "cmp     dword [rbp-0x48], 0x60",
    "je      0x38220",
    "cmp     r12d, 0x60",
    "jne     0x38a50",
    "test    byte [rbp-0x5c], 0x60",
    "je      0x38850",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x38160",
    "mov     eax, dword [rbp-0x5c]",
    "not     eax",
    "test    al, 0x44",
    "jne     0x38120",
    "nop     word [rax+rax]",
    "cmp     r12d, 0x5e",
    "jne     0x389a6",
    "test    al, al",
    "je      0x39553",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x380e5",
    "mov     dword [rbp-0x6c], 0x1",
    "mov     r11d, 0x40",
    "jmp     0x380f2",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x38d93",
    "mov     esi, r12d",
    "lea     rdi, [rel data_11f111]  {\"#%^,~:-=?+/\"}",
    "mov     dword [rbp-0x88], r9d",
    "mov     byte [rbp-0x58], r8b",
    "call    strchr",
    "movzx   r8d, byte [rbp-0x58]",
    "mov     r9d, dword [rbp-0x88]",
    "mov     r11d, 0x40",
    "test    rax, rax",
    "je      0x39370",
    "mov     dword [rbp-0x6c], 0x40",
    "mov     r11d, 0x40",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "jne     0x380e5",
    "mov     eax, r12d",
    "and     eax, 0xfffffffd",
    "cmp     eax, 0x3c",
    "jne     0x38900",
    "test    r15b, 0x1",
    "je      0x38220",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x3876b",
    "test    byte [rbp-0x5c], 0x80",
    "je      0x38220",
    "test    r15b, 0x1",
    "je      0x38e20",
    "lea     r10, [rel dstack]",
    "movsxd  rax, dword [r10+0x8]",
    "mov     ecx, dword [r10+0xc]",
    "mov     rdx, qword [r10]",
    "lea     esi, [rax+0x1]",
    "cmp     esi, ecx",
    "jge     0x39108",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "je      0x38660",
    "cmp     r12d, 0x27",
    "jne     0x38120",
    "cmp     r12d, 0x2c",
    "sete    cl",
    "cmp     r9d, 0x1",
    "setg    al",
    "test    cl, al",
    "je      0x38d44",
    "test    al, al",
    "je      0x389a6",
    "cmp     r9d, 0x1",
    "jle     0x38d44",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "je      0x38e90",
    "mov     dword [rbp-0x6c], 0x2",
    "mov     r11d, 0x40",
    "jmp     0x380f2",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "jne     0x38d93",
    "mov     rax, qword [rel data_160d88]",
    "mov     dword [rbp-0x6c], 0x4",
    "cmp     rax, 0x1",
    "jbe     0x380f2",
    "jmp     0x38d44",
    "mov     eax, r15d",
    "and     ah, 0xef",
    "cmp     r12d, 0x24",
    "jne     0x38b0d",
    "test    r15d, 0x1000",
    "jne     0x3825b",
    "cmp     r12d, 0x28",
    "sete    al",
    "cmp     r12d, 0x7b",
    "sete    dl",
    "or      al, dl",
    "je      0x393f3",
    "mov     r8d, dword [rbp-0x74]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x3c]",
    "mov     edx, 0x60",
    "mov     esi, 0x60",
    "mov     dword [rbp-0x58], r9d",
    "call    sub_37e50",
    "mov     r9d, dword [rbp-0x58]",
    "mov     r12, rax",
    "lea     rax, [rel data_1608e4]",
    "cmp     r12, rax",
    "je      0x39290",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "je      0x38b07",
    "cmp     r12d, 0x28",
    "jne     0x38220",
    "test    byte [rbp-0x5c], 0x80",
    "jne     0x38220",
    "cmp     r12d, 0x28",
    "je      0x390c0",
    "add     ecx, 0xa",
    "mov     dword [rbp-0x90], r9d",
    "movsxd  rsi, ecx",
    "mov     dword [r10+0xc], ecx",
    "mov     qword [rbp-0x98], rsi",
    "mov     dword [rbp-0x88], r11d",
    "mov     byte [rbp-0x58], r8b",
    "test    rdx, rdx",
    "je      0x391ff",
    "mov     byte [rdx+rax], r8b",
    "mov     eax, r15d",
    "and     eax, 0x1",
    "add     dword [r10+0x8], 0x1",
    "mov     byte [rbp-0x88], al",
    "cmp     r12d, 0x27",
    "jne     0x381a0",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x384d3",
    "cmp     r9d, 0x1",
    "jg      0x389c4",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x39170",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "je      0x38d93",
    "mov     r14d, r9d",
    "jmp     0x38264",
    "and     r15d, 0x1",
    "jne     0x38b0d",
    "mov     eax, r15d",
    "mov     r14d, r9d",
    "and     ah, 0xef",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x38af0",
    "cmp     r12d, 0x5b",
    "jne     0x38220",
    "mov     rdx, qword [rel data_160d88]",
    "cmp     rdx, 0x1",
    "jbe     0x390c0",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0x38ccd",
    "mov     r14d, dword [rbp-0x3c]",
    "test    r14d, r14d",
    "je      0x38afe",
    "mov     eax, r15d",
    "and     ah, 0xef",
    "test    r15b, 0x1",
    "je      0x38220",
    "test    r15d, 0x1000",
    "je      0x38220",
    "mov     eax, dword [rbp-0x48]",
    "cmp     r12d, eax",
    "jne     0x390cc",
    "cmp     r12d, 0x7b",
    "je      0x390c0",
    "mov     rdi, qword [rbp-0x98]",
    "call    malloc",
    "mov     r9d, dword [rbp-0x90]",
    "movzx   r8d, byte [rbp-0x58]",
    "lea     r10, [rel dstack]",
    "mov     r11d, dword [rbp-0x88]",
    "mov     rdx, rax",
    "jmp     0x39159",
    "mov     rdi, rdx",
    "call    realloc",
    "movzx   r8d, byte [rbp-0x58]",
    "mov     r11d, dword [rbp-0x88]",
    "lea     r10, [rel dstack]",
    "mov     r9d, dword [rbp-0x90]",
    "mov     rdx, rax",
    "mov     r8d, dword [rbp-0x74]",
    "lea     rcx, [rbp-0x3c]",
    "mov     edx, r12d",
    "mov     esi, r12d",
    "mov     edi, r12d",
    "mov     dword [rbp-0x98], r9d",
    "mov     dword [rbp-0x90], r11d",
    "call    sub_37e50",
    "lea     r10, [rel dstack]",
    "mov     qword [rbp-0x58], rax",
    "mov     rcx, rax",
    "lea     rax, [rel data_1608e4]",
    "sub     dword [r10+0x8], 0x1",
    "cmp     rcx, rax",
    "je      0x39290",
    "test    al, al",
    "jne     0x38ef6",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "jne     0x384d3",
    "jmp     0x38d44",
    "mov     dword [rbp-0x6c], 0x80",
    "mov     r11d, 0x40",
    "jmp     0x380f2",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "jne     0x39170",
    "jmp     0x380f2",
    "and     eax, 0xfffffffe",
    "mov     r15d, eax",
    "mov     rdx, qword [rel data_160d88]",
    "cmp     rdx, 0x1",
    "jbe     0x38939",
    "mov     eax, r15d",
    "mov     r14d, r9d",
    "or      ah, 0x10",
    "jmp     0x38264",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "jne     0x38af0",
    "mov     rdx, qword [rel data_160d88]",
    "cmp     rdx, 0x1",
    "ja      0x38a8b",
    "mov     rcx, qword [rel data_160910]",
    "cmp     byte [rcx+rdx-0x1], 0x0",
    "je      0x38b07",
    "lea     r14, [rel data_1608e4]",
    "jmp     0x3828c",
    "test    r12, r12",
    "jne     0x391df",
    "add     r14d, r9d",
    "cmp     r14d, r13d",
    "jge     0x39310",
    "xor     eax, eax",
    "cmp     dword [rbp-0x48], 0x28",
    "sete    al",
    "sub     dword [rbp-0x50], eax",
    "cmp     r12d, 0x28",
    "jne     0x38220",
    "cmp     r12d, 0x28",
    "je      0x3887a",
    "sub     dword [rbp-0x50], 0x1",
    "cmp     r12d, 0x5b",
    "jne     0x38220",
    "test    rdx, rdx",
    "je      0x394d5",
    "mov     rsi, qword [rbp-0x98]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x9c], r9d",
    "mov     qword [rbp-0x90], rdx",
    "mov     dword [rbp-0x88], r11d",
    "mov     byte [rbp-0x58], r8b",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [r10], rdx",
    "movsxd  rax, dword [r10+0x8]",
    "jmp     0x3817d",
    "cmp     byte [rbp-0x88], 0x0",
    "mov     edx, dword [rbp-0x3c]",
    "mov     r11d, dword [rbp-0x90]",
    "mov     r9d, dword [rbp-0x98]",
    "jne     0x38b18",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x38f15",
    "mov     ecx, dword [rbp-0x4c]",
    "cmp     dword [rbp-0x48], ecx",
    "jne     0x38660",
    "or      eax, 0x1",
    "mov     r14d, r9d",
    "mov     r15d, eax",
    "jmp     0x3826a",
    "mov     rcx, qword [rel data_160910]",
    "cmp     byte [rcx+rdx-0x1], 0x0",
    "je      0x38b0d",
    "jmp     0x38692",
    "mov     ecx, dword [rbp-0x48]",
    "xor     edx, edx",
    "cmp     r12d, ecx",
    "sete    dl",
    "sub     dword [rbp-0x50], edx",
    "cmp     r12d, 0x28",
    "je      0x3887a",
    "mov     r14d, r9d",
    "jmp     0x387d8",
    "mov     eax, r14d",
    "mov     dword [rbp-0x58], r9d",
    "sub     eax, r13d",
    "and     eax, 0xffffffc0",
    "lea     r13d, [r13+rax+0x40]",
    "movsxd  rsi, r13d",
    "mov     qword [rbp-0x68], rsi",
    "test    rbx, rbx",
    "je      0x394ab",
    "mov     rcx, qword [rbp-0x68]",
    "movsxd  rax, r9d",
    "mov     rsi, r12",
    "lea     rdi, [rbx+rax]",
    "cmp     rax, rcx",
    "mov     rdx, rcx",
    "cmovae  rdx, rax",
    "sub     rdx, rax",
    "call    __strcpy_chk",
    "mov     ecx, dword [rbp-0x3c]",
    "test    ecx, ecx",
    "je      0x39188",
    "jmp     0x3886e",
    "lea     rsi, [rbp-0x3c]",
    "xor     edi, edi",
    "mov     dword [rbp-0x58], r9d",
    "call    sub_114110",
    "mov     r9d, dword [rbp-0x58]",
    "mov     r14, rax",
    "mov     r8d, dword [rbp-0x74]",
    "lea     rcx, [rbp-0x3c]",
    "mov     edx, 0x7d",
    "xor     edi, edi",
    "mov     esi, 0x7b",
    "mov     dword [rbp-0x58], r9d",
    "or      r8d, 0x41",
    "call    sub_37e50",
    "mov     r9d, dword [rbp-0x58]",
    "mov     r14, rax",
    "jmp     0x38890",
    "xor     eax, eax",
    "cmp     dword [rbp-0x48], 0x5b",
    "sete    al",
    "sub     dword [rbp-0x50], eax",
    "jmp     0x38ab9",
    "cmp     r12d, 0x22",
    "jne     0x38205",
    "test    edx, edx",
    "jne     0x38c08",
    "mov     r8d, dword [rbp-0x74]",
    "mov     dword [rbp-0x90], r9d",
    "lea     rcx, [rbp-0x3c]",
    "mov     dword [rbp-0x88], r11d",
    "or      r8d, 0x2",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "je      0x391c4",
    "cmp     dword [rbp-0x48], 0x60",
    "jne     0x38900",
    "mov     eax, dword [rbp-0x50]",
    "test    eax, eax",
    "jne     0x37f38",
    "test    al, al",
    "jne     0x390d6",
    "mov     rdi, r12",
    "and     r15d, 0xffffeffe",
    "call    free",
    "jmp     0x37f38",
    "mov     rdi, qword [rbp-0x68]",
    "call    malloc",
    "mov     r9d, dword [rbp-0x58]",
    "mov     rbx, rax",
    "jmp     0x39341",
    "mov     rdi, rbx",
    "call    realloc",
    "mov     r9d, dword [rbp-0x58]",
    "mov     rbx, rax",
    "test    r14, r14",
    "je      0x38220",
    "add     ecx, r9d",
    "cmp     ecx, r13d",
    "jge     0x3929d",
    "lea     rax, [rel data_1608e4]",
    "cmp     r14, rax",
    "je      0x39290",
    "mov     r8d, dword [rbp-0x74]",
    "lea     rcx, [rbp-0x3c]",
    "mov     edx, 0x5d",
    "xor     edi, edi",
    "mov     esi, 0x5b",
    "mov     dword [rbp-0x58], r9d",
    "or      r8b, 0x80",
    "call    sub_37e50",
    "mov     r9d, dword [rbp-0x58]",
    "mov     r14, rax",
    "jmp     0x38890",
    "lea     rax, [rel extended_quote]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "jne     0x38b3c",
    "add     edx, r9d",
    "cmp     edx, r13d",
    "jge     0x3905e",
    "cmp     qword [rbp-0x58], 0x0",
    "jne     0x38c46",
    "lea     rax, [rel extended_quote]",
    "mov     edx, dword [rbp-0x3c]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x38f9a",
    "mov     dword [rbp-0x90], r9d",
    "mov     r8d, dword [rbp-0x74]",
    "lea     rcx, [rbp-0x3c]",
    "mov     dword [rbp-0x88], r11d",
    "jmp     0x38f2f",
    "and     r15d, 0xffffeffe",
    "jmp     0x384d3",
    "test    rbx, rbx",
    "jne     0x387b8",
    "mov     rsi, qword [rbp-0x68]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x58], r9d",
    "call    sub_a7f00",
    "{ Does not return }",
    "jmp     0x388de",
    "mov     eax, ecx",
    "mov     dword [rbp-0x88], r9d",
    "sub     eax, r13d",
    "mov     dword [rbp-0x58], ecx",
    "and     eax, 0xffffffc0",
    "lea     r13d, [r13+rax+0x40]",
    "movsxd  rsi, r13d",
    "mov     qword [rbp-0x68], rsi",
    "test    rbx, rbx",
    "je      0x39490",
    "mov     dword [rbp-0x58], ecx",
    "mov     rcx, qword [rbp-0x68]",
    "movsxd  rax, r9d",
    "mov     rsi, r14",
    "lea     rdi, [rbx+rax]",
    "cmp     rax, rcx",
    "mov     rdx, rcx",
    "cmovae  rdx, rax",
    "sub     rdx, rax",
    "call    __strcpy_chk",
    "mov     r9d, dword [rbp-0x58]",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x38b5b",
    "mov     edi, dword [rbp-0x74]",
    "test    edi, edi",
    "jne     0x38205",
    "sub     edx, r13d",
    "mov     dword [rbp-0x88], r9d",
    "and     edx, 0xffffffc0",
    "lea     r13d, [r13+rdx+0x40]",
    "movsxd  rsi, r13d",
    "mov     qword [rbp-0x68], rsi",
    "test    rbx, rbx",
    "je      0x391e7",
    "mov     rax, qword [rbp-0x68]",
    "movsxd  rdi, r9d",
    "mov     rsi, qword [rbp-0x58]",
    "mov     dword [rbp-0x88], r9d",
    "cmp     rdi, rax",
    "mov     rdx, rax",
    "cmovae  rdx, rdi",
    "sub     rdx, rdi",
    "add     rdi, rbx",
    "call    __strcpy_chk",
    "mov     r9d, dword [rbp-0x88]",
    "add     r9d, dword [rbp-0x3c]",
    "mov     rdi, qword [rbp-0x58]",
    "mov     dword [rbp-0x88], r9d",
    "call    free",
    "mov     r9d, dword [rbp-0x88]",
    "jmp     0x38220",
    "nop     dword [rax+rax]",
    "mov     rax, qword [rel data_160d88]",
    "cmp     rax, 0x1",
    "jbe     0x38fb9",
    "mov     eax, dword [rbp-0x74]",
    "test    eax, eax",
    "je      0x38f9a",
    "mov     edx, 0x27",
    "mov     esi, 0x27",
    "mov     edi, 0x27",
    "call    sub_37e50",
    "lea     r10, [rel dstack]",
    "mov     r11d, dword [rbp-0x88]",
    "mov     rcx, rax",
    "mov     qword [rbp-0x58], rax",
    "lea     rax, [rel data_1608e4]",
    "mov     r9d, dword [rbp-0x90]",
    "sub     dword [r10+0x8], 0x1",
    "cmp     rcx, rax",
    "je      0x39290",
    "mov     rdi, r14",
    "mov     dword [rbp-0x58], r9d",
    "call    free",
    "mov     eax, r12d",
    "mov     r9d, dword [rbp-0x58]",
    "and     eax, 0xfffffffd",
    "cmp     eax, 0x3c",
    "je      0x3822f",
    "mov     rdi, qword [rbp-0x68]",
    "call    malloc",
    "mov     r9d, dword [rbp-0x88]",
    "mov     ecx, dword [rbp-0x58]",
    "mov     rbx, rax",
    "jmp     0x392d9",
    "mov     rdi, rbx",
    "call    realloc",
    "mov     ecx, dword [rbp-0x58]",
    "mov     r9d, dword [rbp-0x88]",
    "mov     rbx, rax",
    "nop     dword [rax]",
    "mov     ecx, dword [rbp-0x78]",
    "mov     rdi, qword [rbp-0x58]",
    "xor     esi, esi",
    "sub     edx, 0x1",
    "lea     r8, [rbp-0x40]",
    "mov     dword [rbp-0x90], r11d",
    "call    locale_expand",
    "mov     rdi, qword [rbp-0x58]",
    "mov     qword [rbp-0x88], rax",
    "call    free",
    "lea     rax, [rel singlequote_translations]",
    "mov     ecx, dword [rbp-0x40]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x39462",
    "mov     rcx, qword [rel data_160910]",
    "cmp     byte [rcx+rax-0x1], 0x0",
    "je      0x38205",
    "mov     rdi, qword [rbp-0x68]",
    "call    malloc",
    "mov     r9d, dword [rbp-0x88]",
    "mov     rbx, rax",
    "jmp     0x39092",
    "mov     rdi, rbx",
    "call    realloc",
    "mov     r9d, dword [rbp-0x88]",
    "mov     rbx, rax",
    "mov     rdi, qword [rbp-0x58]",
    "sub     edx, 0x1",
    "xor     esi, esi",
    "lea     rcx, [rbp-0x40]",
    "mov     dword [rbp-0x90], r11d",
    "call    ansiexpand",
    "mov     rdi, qword [rbp-0x58]",
    "mov     qword [rbp-0x88], rax",
    "call    free",
    "lea     rax, [rel shell_compatibility_level]",
    "lea     r9d, [r14-0x1]",
    "cmp     dword [rax], 0x2a",
    "jle     0x3939f",
    "mov     rcx, qword [rel data_160910]",
    "cmp     byte [rcx+rax-0x1], 0x0",
    "je      0x38205",
    "mov     eax, dword [rbp-0x6c]",
    "sub     eax, 0x40",
    "and     eax, 0xffffffbf",
    "jne     0x38205",
    "test    rbx, rbx",
    "jne     0x388b7",
    "mov     rsi, qword [rbp-0x68]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x58], r9d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, qword [rbp-0x88]",
    "xor     edx, edx",
    "mov     esi, ecx",
    "call    sh_mkdoublequoted",
    "mov     qword [rbp-0x58], rax",
    "jmp     0x38bdf",
    "mov     eax, dword [rbp-0x3c]",
    "mov     r11d, dword [rbp-0x90]",
    "sub     eax, 0x1",
    "cmp     eax, ecx",
    "je      0x39413",
    "test    rbx, rbx",
    "jne     0x38c14",
    "mov     rsi, qword [rbp-0x68]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x88], r9d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r10d, dword [rbp-0x74]",
    "test    r10d, r10d",
    "jne     0x3901e",
    "mov     r11d, dword [rbp-0x74]",
    "test    r11d, r11d",
    "je      0x393ac",
    "mov     rdi, qword [rbp-0x88]",
    "call    free",
    "mov     rdi, qword [rbp-0x58]",
    "call    strlen",
    "lea     r9d, [r14-0x1]",
    "mov     dword [rbp-0x3c], eax",
    "mov     edx, eax",
    "test    eax, eax",
    "je      0x38c46",
    "test    ecx, ecx",
    "je      0x39462",
    "mov     edx, dword [rbp-0x74]",
    "test    edx, edx",
    "je      0x394c0",
    "mov     edx, dword [rbp-0x40]",
    "mov     rax, qword [rbp-0x88]",
    "mov     dword [rbp-0x3c], edx",
    "mov     qword [rbp-0x58], rax",
    "jmp     0x38205",
    "mov     rdi, qword [rbp-0x88]",
    "mov     dword [rbp-0x90], r9d",
    "call    sh_single_quote",
    "mov     rdi, qword [rbp-0x88]",
    "mov     r14, rax",
    "mov     qword [rbp-0x58], rax",
    "call    free",
    "mov     rdi, r14",
    "call    strlen",
    "mov     r9d, dword [rbp-0x90]",
    "test    eax, eax",
    "mov     dword [rbp-0x3c], eax",
    "mov     edx, eax",
    "jne     0x38c08",
    "mov     eax, dword [rbp-0x6c]",
    "sub     eax, 0x40",
    "and     eax, 0xffffffbf",
    "jne     0x3901e",
    "nop     dword [rax]",
    "mov     rsi, qword [rbp-0x88]",
    "mov     rax, qword [rbp-0x58]",
    "movzx   esi, byte [rsi]",
    "cmp     byte [rax], sil",
    "jne     0x38bb0",
    "mov     rdi, qword [rbp-0x88]",
    "call    sh_single_quote",
    "mov     qword [rbp-0x58], rax",
    "jmp     0x38bdf",
    "cmp     dword [rbp-0x6c], 0x80",
    "jne     0x38bcd",
    "jmp     0x38c46",
    "mov     r11d, dword [rbp-0x90]",
    "test    r11d, r11d",
    "jne     0x393ac",
    "mov     rsi, qword [rbp-0x88]",
    "movsxd  rdx, ecx",
    "mov     rdi, rax",
    "mov     dword [rbp-0x98], r11d",
    "mov     dword [rbp-0x90], ecx",
    "call    strncmp",
    "mov     ecx, dword [rbp-0x90]",
    "mov     r11d, dword [rbp-0x98]",
    "test    eax, eax",
    "jne     0x38bb0",
    "mov     rdi, qword [rbp-0x88]",
    "xor     esi, esi",
    "call    sh_backslash_quote_for_double_quotes",
    "mov     qword [rbp-0x58], rax",
    "test    r11d, r11d",
    "jne     0x394c0"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
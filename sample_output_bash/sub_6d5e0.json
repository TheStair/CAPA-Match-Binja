{
  "address": "0x6d5e0",
  "rules": [
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "encrypt data using HC-128/9eb76807ea4d4876a9f0b139536472e4",
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "hash data using jshash/233fdcfb5e35456582357b77945ff9aa",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "decompress data using LZO/26f3c5fbc30d47478934b5c8a528f3cf",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     r11d, r8d",
    "mov     r9, rdi",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x68",
    "mov     qword [rbp-0x78], rdx",
    "mov     rdx, rcx",
    "mov     ecx, r8d",
    "mov     qword [rbp-0x58], rsi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], 0x0",
    "movzx   eax, byte [rdx]",
    "and     r11d, 0x10",
    "je      0x6d631",
    "test    al, al",
    "je      0x6d8f0",
    "cmp     al, 0x27",
    "je      0x6d988",
    "mov     rax, qword [rbp-0x78]",
    "movsxd  r15, dword [rax]",
    "mov     r12, r15",
    "add     r15, r9",
    "mov     rdi, r15",
    "call    strlen",
    "mov     ebx, dword [rbp-0x58]",
    "test    r12d, r12d",
    "je      0x6d928",
    "mov     rax, qword [rbp-0x78]",
    "movsxd  r12, dword [rax]",
    "lea     r14, [r9+r12]",
    "mov     rbx, r12",
    "movsx   r13d, byte [r14]",
    "mov     r15d, r13d",
    "test    r13d, r13d",
    "je      0x6da19",
    "cmp     byte [rdx+0x1], 0x0",
    "jne     0x6d639",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x6da50",
    "xor     ebx, ebx",
    "cmp     byte [r15], 0x0",
    "je      0x6d928",
    "mov     esi, r12d",
    "jmp     0x6d884",
    "mov     eax, ecx",
    "xor     r8d, r8d",
    "mov     dword [rbp-0x6c], r11d",
    "shr     eax, 0x5",
    "mov     qword [rbp-0x80], r8",
    "xor     eax, 0x1",
    "mov     qword [rbp-0x68], r9",
    "and     eax, 0x1",
    "mov     qword [rbp-0x60], rdx",
    "mov     byte [rbp-0x6d], al",
    "nop     dword [rax+rax]",
    "mov     rbx, qword [rbp-0x78]",
    "xor     edx, edx",
    "mov     rsi, rbx",
    "call    sub_6d0a0",
    "mov     ecx, dword [rbx]",
    "mov     dword [rbp-0x58], ecx",
    "lea     ebx, [rcx-0x1]",
    "jmp     0x6d88e",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, r13",
    "mov     rdx, r12",
    "mov     rsi, r15",
    "call    __strcpy_chk",
    "mov     rdi, qword [rbp-0x78]",
    "add     ebx, dword [rdi]",
    "jmp     0x6d88e",
    "cmp     byte [r15+0x1], 0x0",
    "mov     ebx, 0x1",
    "jne     0x6d9ad",
    "mov     edx, ebx",
    "mov     rdi, r9",
    "call    substring",
    "cmp     byte [rbp-0x6d], 0x0",
    "je      0x6d695",
    "cmp     r13d, 0x1",
    "je      0x6d848",
    "mov     rdi, qword [rbp-0x78]",
    "mov     dword [rdi], ebx",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x6da3a",
    "cmp     byte [r15+0x2], 0x0",
    "mov     ebx, 0x2",
    "cmovne  ebx, eax",
    "jmp     0x6d928",
    "nop     dword [rax]",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x68",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rsi, qword [rbp-0x58]",
    "mov     eax, r15d",
    "not     eax",
    "shr     al, 0x7",
    "cmp     r12, rsi",
    "setb    dl",
    "test    al, dl",
    "je      0x6d6b8",
    "cmp     r13d, 0x1",
    "jne     0x6d695",
    "add     ebx, 0x2",
    "mov     rax, qword [rbp-0x58]",
    "movsxd  r12, ebx",
    "cmp     r12, rax",
    "jb      0x6d71d",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "ja      0x6d7d0",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x6d6c7",
    "mov     rax, qword [rbp-0x68]",
    "cmp     byte [rax+r12+0x1], 0x7f",
    "je      0x6d848",
    "mov     rax, qword [rbp-0x68]",
    "lea     r14, [rax+r12]",
    "movsx   r13d, byte [r14]",
    "mov     r15d, r13d",
    "test    r13d, r13d",
    "jne     0x6d680",
    "mov     r8, qword [rbp-0x80]",
    "mov     r9, qword [rbp-0x68]",
    "mov     ebx, eax",
    "mov     rax, qword [rbp-0x58]",
    "mov     rdi, r14",
    "sub     rax, r12",
    "mov     rsi, rax",
    "mov     qword [rbp-0x88], rax",
    "call    mblen",
    "cdqe    ",
    "cmp     rax, 0x1",
    "jbe     0x6d6c7",
    "mov     rax, qword [rbp-0x60]",
    "cmp     byte [rax], r15b",
    "jne     0x6d6da",
    "lea     rax, [rel locale_utf8locale]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0x6d6b8",
    "mov     esi, dword [rbp-0x6c]",
    "test    esi, esi",
    "jne     0x6d778",
    "mov     r8, qword [rbp-0x80]",
    "mov     r9, rax",
    "jmp     0x6d865",
    "mov     rax, qword [rbp-0x78]",
    "mov     esi, dword [rax]",
    "jmp     0x6d884",
    "mov     rdi, r8",
    "mov     qword [rbp-0x58], r9",
    "call    free",
    "mov     rax, qword [rbp-0x78]",
    "mov     r9, qword [rbp-0x58]",
    "mov     esi, dword [rax]",
    "mov     rdx, qword [rbp-0x88]",
    "lea     rdi, [rbp-0x44]",
    "mov     rsi, r14",
    "call    mbtowc",
    "cdqe    ",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0x6d6c7",
    "mov     rdi, qword [rbp-0x60]",
    "mov     esi, r13d",
    "call    mbschr",
    "test    rax, rax",
    "jne     0x6d838",
    "cmp     byte [rax+0x1], 0x0",
    "je      0x6d838",
    "mov     rax, qword [rbp-0x58]",
    "cmp     r12, rax",
    "jb      0x6d6c7",
    "test    r8, r8",
    "je      0x6d960",
    "cmp     qword [rbp-0x80], 0x0",
    "je      0x6d9bf",
    "mov     r8, qword [rbp-0x80]",
    "mov     r9, qword [rbp-0x68]",
    "jmp     0x6d865",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jle     0x6d770",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x6d6c7",
    "mov     rsi, qword [rbp-0x60]",
    "xor     edx, edx",
    "xor     edi, edi",
    "call    mbstowcs",
    "cmp     rax, 0xffffffffffffffff",
    "je      0x6da21",
    "mov     esi, dword [rbp-0x44]",
    "mov     rdi, qword [rbp-0x80]",
    "call    wcschr",
    "test    rax, rax",
    "je      0x6d6ef",
    "add     ebx, 0x1",
    "jmp     0x6d71a",
    "movzx   ecx, byte [r14]",
    "lea     rdx, [rel is_basic_table]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x6d748",
    "nop     dword [rax]",
    "mov     r15d, 0x4",
    "mov     r13d, 0x1",
    "mov     qword [rbp-0x88], 0x1",
    "jmp     0x6d9ec",
    "lea     r13, [rax+0x1]",
    "lea     r15, [r13*4]",
    "mov     rax, r15",
    "shr     rax, 0x2",
    "mov     qword [rbp-0x88], rax",
    "nop     dword [rax]",
    "movsxd  r12, ebx",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6d8c0",
    "add     ebx, eax",
    "mov     rdi, r15",
    "call    malloc",
    "mov     qword [rbp-0x80], rax",
    "test    rax, rax",
    "je      0x6da3f",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rcx, qword [rbp-0x88]",
    "mov     rsi, qword [rbp-0x60]",
    "mov     rdx, r13",
    "mov     rdi, qword [rbp-0x80]",
    "call    __mbstowcs_chk",
    "jmp     0x6d81f",
    "mov     rdx, qword [rbp-0x58]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     rsi, r14",
    "mov     r13, qword [rbp-0x40]",
    "sub     rdx, r12",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x6d970",
    "test    cl, cl",
    "js      0x6d8c0",
    "test    rax, rax",
    "jne     0x6d718",
    "mov     qword [rbp-0x40], r13",
    "add     ebx, 0x1",
    "jmp     0x6d71a",
    "mov     eax, 0x1",
    "jne     0x6d718",
    "add     ebx, 0x1",
    "jmp     0x6d71a",
    "nop     dword [rax+rax]"
  ]
}
{
  "address": "0xbdfb0",
  "rules": [
    "write file on Linux",
    "contain loop",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    rdi, rdi",
    "je      0xbe150",
    "lea     rdi, [rel data_121f0b]  {\"dirs\"}",
    "mov     dword [rbp-0x44], 0x0",
    "xor     r13d, r13d",
    "xor     r15d, r15d",
    "call    get_working_directory",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0xbe4e1",
    "mov     rax, qword [rdi+0x8]",
    "mov     rbx, rdi",
    "mov     rcx, qword [rax]",
    "movzx   edx, byte [rcx]",
    "cmp     dl, 0x2d",
    "je      0xbe350",
    "mov     rdi, rbx",
    "xor     r14d, r14d",
    "call    polite_directory_format",
    "mov     r12, rax",
    "jmp     0xbe3b2",
    "xor     r14d, r14d",
    "xor     r15d, r15d",
    "mov     rdi, rcx",
    "lea     rsi, [rel 0x1210f5]  {\"--help\"}",
    "mov     byte [rbp-0x59], dl",
    "mov     qword [rbp-0x58], rcx",
    "call    strcmp",
    "mov     rcx, qword [rbp-0x58]",
    "movzx   edx, byte [rbp-0x59]",
    "test    eax, eax",
    "jne     0xbdff3",
    "xor     r15d, r15d",
    "mov     esi, 0xffffffff",
    "lea     r13, [rbp-0x40]",
    "xor     r14d, r14d",
    "mov     dword [rbp-0x44], 0x0",
    "lea     r12, [rel data_122e02]",
    "jmp     0xbe06d",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "mov     rdx, r12",
    "lea     rsi, [rel data_1217ad[6]]  {\"%s\"}",
    "call    __printf_chk",
    "mov     rdi, rbx",
    "call    free",
    "test    r13d, r13d",
    "je      0xbe20f",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdx, rbx",
    "mov     rdi, r12",
    "call    __strcpy_chk",
    "call    builtin_help",
    "jmp     0xbe30a",
    "cmp     dl, 0x2d",
    "jne     0xbe018",
    "mov     eax, dword [rel data_168f98]",
    "lea     edx, [rax-0x1]",
    "movsxd  rax, edx",
    "mov     qword [rbp-0x40], rax",
    "test    edx, edx",
    "js      0xbe2c0",
    "jmp     0xbe2c0",
    "mov     rbx, r12",
    "test    r14d, r14d",
    "je      0xbe4e1",
    "mov     rcx, r12",
    "test    r14d, r14d",
    "je      0xbe4d1",
    "mov     eax, 0x102",
    "cmp     dl, 0x2b",
    "jne     0xbe2e0",
    "movzx   eax, byte [rcx+0x1]",
    "cmp     al, 0x6c",
    "je      0xbe100",
    "mov     rax, qword [rel stdout]",
    "mov     edi, 0xa",
    "mov     rsi, qword [rax]",
    "call    putc",
    "xor     edi, edi",
    "call    sh_chkwrite",
    "jmp     0xbe30f",
    "test    r15b, 0x1",
    "lea     rbx, [rel data_120c5d[9]]  {\"\\n\"}",
    "lea     rdx, [rel data_1204ae[4]]  {\" \"}",
    "cmove   rbx, rdx",
    "lea     r13, [rel data_11fbd6[2]]  {\"%s%s\"}",
    "lea     r12, [rel data_1217ad]  {\"\\n%2d  %s\"}",
    "jmp     0xbe27f",
    "mov     r14d, 0x4",
    "mov     rdi, r12",
    "call    polite_directory_format",
    "mov     rcx, rax",
    "jmp     0xbe1e9",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_1217ad[1]]  {\"%2d  %s\"}",
    "xor     eax, eax",
    "call    __printf_chk",
    "mov     rdi, r12",
    "call    free",
    "test    r13d, r13d",
    "jne     0xbe2c0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f222]  {\"%s: invalid option\"}",
    "xor     edi, edi",
    "mov     qword [rbp-0x58], rcx",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "call    builtin_usage",
    "lea     r12, [rcx+0x1]",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "call    legal_number",
    "test    eax, eax",
    "mov     rax, qword [rbx+0x8]",
    "je      0xbe338",
    "cmp     byte [rcx+0x2], 0x0",
    "jne     0xbe021",
    "cmp     al, 0x63",
    "je      0xbe118",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xbe527",
    "mov     rdx, qword [rel data_168f90]",
    "mov     rcx, qword [rdx+rax*8]",
    "cmp     r15d, 0x1",
    "jg      0xbe250",
    "mov     rdi, qword [rax]",
    "call    sh_invalidnum",
    "call    builtin_usage",
    "jmp     0xbe30a",
    "mov     rax, qword [rax]",
    "xor     esi, esi",
    "mov     rdi, qword [rbp-0x40]",
    "lea     rdx, [rbp-0x44]",
    "cmp     byte [rax], 0x2b",
    "sete    sil",
    "lea     esi, [rsi+rsi-0x1]",
    "call    sub_bc190",
    "mov     esi, eax",
    "or      r14d, 0x4",
    "jmp     0xbe05b",
    "cmp     byte [rcx+0x2], 0x0",
    "jne     0xbe021",
    "cmp     al, 0x76",
    "jne     0xbe0e8  {\"<puD\"}",
    "test    r14d, r14d",
    "je      0xbe380",
    "test    r14d, r14d",
    "je      0xbe390",
    "test    r14b, 0x8",
    "je      0xbe3de",
    "mov     rax, qword [rbx+0x8]",
    "mov     rcx, qword [rax]",
    "movzx   edx, byte [rcx]",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "je      0xbe0a0",
    "or      r14d, 0x8",
    "jmp     0xbe05b",
    "cmp     al, 0x70",
    "jne     0xbe130",
    "cmp     byte [rcx+0x2], 0x0",
    "jne     0xbe021",
    "mov     rdi, rcx",
    "call    polite_directory_format",
    "mov     rcx, rax",
    "jmp     0xbe259",
    "mov     edx, dword [rel data_168f98]",
    "xor     eax, eax",
    "sub     edx, dword [rbp-0x40]",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "mov     rax, qword [rbp-0x40]",
    "sub     rax, 0x1",
    "mov     qword [rbp-0x40], rax",
    "js      0xbe2c0",
    "mov     rdi, rcx",
    "call    polite_directory_format",
    "mov     rcx, rax",
    "jmp     0xbe299",
    "xor     eax, eax",
    "mov     rdx, rbx",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "mov     rax, qword [rbp-0x40]",
    "sub     rax, 0x1",
    "mov     qword [rbp-0x40], rax",
    "jns     0xbe27f",
    "mov     r13d, dword [rbp-0x44]",
    "test    r13d, r13d",
    "je      0xbe50a",
    "movsxd  rax, dword [rel data_168f98]",
    "test    eax, eax",
    "jle     0xbe0d1",
    "cmp     al, 0x2d",
    "jne     0xbe021",
    "cmp     byte [rcx+0x2], 0x0",
    "jne     0xbe021",
    "mov     rbx, qword [rbx]",
    "or      r15d, 0x2",
    "test    rbx, rbx",
    "jne     0xbe063",
    "nop     dword [rax]",
    "lea     rdi, [rel data_121f0b]  {\"dirs\"}",
    "call    get_working_directory",
    "mov     r12, rax",
    "test    rax, rax",
    "jne     0xbe1d3",
    "mov     edx, dword [rel data_168f98]",
    "test    esi, esi",
    "js      0xbe442",
    "mov     dword [rel data_168f98], 0x0",
    "xor     eax, eax",
    "jmp     0xbe30f",
    "mov     rbx, qword [rel data_168f90]",
    "lea     r12, [rbx+rax*8]",
    "cmp     byte [rcx+0x2], 0x0",
    "jne     0xbe021",
    "or      r15d, 0x1",
    "jmp     0xbe05b",
    "nop     dword [rax]",
    "test    r15b, 0x2",
    "je      0xbe3a0",
    "jmp     0xbe17b",
    "test    edx, edx",
    "mov     edx, 0x5",
    "jne     0xbe48d",
    "cmp     esi, edx",
    "jg      0xbe442",
    "mov     rdi, qword [rbx]",
    "add     rbx, 0x8",
    "call    free",
    "cmp     rbx, r12",
    "jne     0xbe0c0",
    "jmp     0xbe0a0",
    "lea     rbx, [rel data_121796]  {\"<no current directory>\"}",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "mov     rsi, rbx",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "mov     qword [rbp-0x58], rax",
    "call    dcgettext",
    "mov     rdi, rax",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xbe4f4",
    "xor     edi, edi",
    "lea     rsi, [rel 0x121780]  {\"directory stack index\"}",
    "call    dcgettext",
    "mov     rdi, r12",
    "mov     rsi, rax",
    "call    sh_erange",
    "jmp     0xbe463",
    "xor     edi, edi",
    "lea     rsi, [rel data_12176a]  {\"directory stack empty\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "test    esi, esi",
    "jne     0xbe407",
    "mov     eax, 0x1",
    "jmp     0xbe30f",
    "mov     rcx, qword [rel data_168f90]",
    "and     r14d, 0x4",
    "movsxd  rax, esi",
    "and     r15d, 0x2",
    "mov     rcx, qword [rcx+rax*8]",
    "je      0xbe46d",
    "cmp     r13d, 0x1",
    "je      0xbe50a",
    "test    r14d, r14d",
    "je      0xbe4c4",
    "test    r14d, r14d",
    "je      0xbe4a8",
    "mov     rdi, rcx",
    "call    polite_directory_format",
    "mov     rcx, rax",
    "jmp     0xbe472",
    "mov     rdx, rcx",
    "lea     rsi, [rel data_1217ad[6]]  {\"%s\"}",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "jmp     0xbe2c0",
    "mov     rdi, rcx",
    "mov     dword [rbp-0x58], esi",
    "call    polite_directory_format",
    "mov     edx, dword [rel data_168f98]",
    "mov     esi, dword [rbp-0x58]",
    "mov     rcx, rax",
    "jmp     0xbe428",
    "sub     edx, esi",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_1217ad[1]]  {\"%2d  %s\"}",
    "xor     eax, eax",
    "call    __printf_chk",
    "jmp     0xbe2c0"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
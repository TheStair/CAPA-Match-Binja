{
  "address": "0x61890",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "create or open file",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "call    find_variable",
    "test    rax, rax",
    "je      0x618d0",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x61998",
    "mov     r12, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     rbx, rax",
    "test    r12, r12",
    "je      0x618d0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "jmp     xtrace_reset",
    "cmp     byte [r12], 0x0",
    "jne     0x618f8",
    "mov     edx, 0xa",
    "lea     rsi, [rbp-0x30]",
    "mov     rdi, r12",
    "call    __isoc23_strtol",
    "mov     rdx, qword [rbp-0x30]",
    "cmp     rdx, r12",
    "je      0x61917",
    "mov     rbx, qword [rbx+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_132ea0]  {\"%s: %s: invalid value for trace \u2026\"}",
    "cmp     byte [rdx], 0x0",
    "je      0x61960",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "mov     r12d, eax",
    "xor     edx, edx",
    "mov     edi, eax",
    "mov     esi, 0x1",
    "xor     eax, eax",
    "call    fcntl",
    "test    eax, eax",
    "js      0x61917",
    "lea     rsi, [rel data_121f79[5]]  {\"w\"}",
    "mov     edi, r12d",
    "call    fdopen",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x6199d",
    "mov     rbx, qword [rbx+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1201f7]  {\"%s: %s: cannot open as FILE\"}",
    "jmp     0x61927",
    "mov     edi, r12d",
    "call    xtrace_set",
    "jmp     0x6193e",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, rbx",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x61998"
  ]
}
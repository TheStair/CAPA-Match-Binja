{
  "address": "0x9e150",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdi",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "lea     rax, [rel command_oriented_history]",
    "mov     r12d, dword [rax]",
    "test    r12d, r12d",
    "je      0x9e185",
    "mov     esi, dword [rel data_166ef4]",
    "lea     rbx, [rel history_length]",
    "lea     r12, [rel history_offset]",
    "test    esi, esi",
    "je      0x9e1b0",
    "lea     r13, [rel current_command_line_count]",
    "cmp     dword [r13], 0x1",
    "jg      0x9e1f8",
    "lea     rax, [rel hist_last_line_added]",
    "mov     rdi, r15",
    "mov     dword [rax], 0x1",
    "lea     rax, [rel hist_last_line_pushed]",
    "mov     dword [rax], 0x0",
    "call    add_history",
    "lea     rax, [rel history_lines_this_session]",
    "add     dword [rax], 0x1",
    "mov     ecx, dword [rbx]",
    "test    ecx, ecx",
    "jne     0x9e1b0",
    "call    sub_9baf0",
    "mov     ecx, eax",
    "lea     rax, [rel parser_state]",
    "mov     eax, dword [rax]",
    "test    eax, 0x20000",
    "je      0x9e240",
    "lea     rax, [rel history_max_entries]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x9e1dc",
    "lea     rsi, [rel current_command_line_comment]",
    "lea     rdx, [rel data_120c5d[9]]  {\"\\n\"}",
    "mov     qword [rbp-0x38], rdx",
    "mov     eax, dword [rsi]",
    "add     eax, 0x1",
    "cmp     eax, dword [r13]",
    "je      0x9e290",
    "lea     rax, [rel here_doc_first_line]",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "jne     0x9e240",
    "mov     r13d, dword [rbx]",
    "lea     rbx, [rel history_length]",
    "lea     r12, [rel history_offset]",
    "mov     eax, dword [rbx]",
    "mov     dword [r12], eax",
    "test    eax, eax",
    "je      0x9e3f0",
    "lea     rax, [rel literal_history]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "jne     0x9e290",
    "mov     rdi, r15",
    "mov     dword [rbp-0x38], ecx",
    "call    strlen",
    "mov     ecx, dword [rbp-0x38]",
    "cmp     byte [r15+rax-0x1], 0xa",
    "je      0x9e450",
    "mov     eax, 0xfffffffe",
    "test    ecx, ecx",
    "je      0x9e3fd",
    "sub     eax, 0x1",
    "mov     rdi, qword [rel data_1688b8]",
    "mov     dword [r12], eax",
    "cdqe    ",
    "mov     r14, qword [rdi+rax*8]",
    "mov     eax, 0xfffffffe",
    "test    ecx, ecx",
    "je      0x9e2cd",
    "mov     rdi, r15",
    "mov     qword [rbp-0x48], rsi",
    "mov     dword [rbp-0x40], ecx",
    "call    history_delimiting_chars",
    "mov     ecx, dword [rbp-0x40]",
    "mov     rsi, qword [rbp-0x48]",
    "mov     qword [rbp-0x38], rax",
    "nop     word [rax+rax]",
    "lea     rax, [rel data_122e02]",
    "lea     rsi, [rel current_command_line_comment]",
    "mov     qword [rbp-0x38], rax",
    "jmp     0x9e290",
    "nop     word [rax+rax]",
    "mov     dword [rsi], eax",
    "mov     eax, dword [rel data_166ef4]",
    "test    eax, eax",
    "jne     0x9e1a3",
    "mov     eax, dword [r13]",
    "mov     dword [rsi], eax",
    "test    r14, r14",
    "je      0x9e1b0",
    "mov     eax, dword [r13]",
    "jmp     0x9e1b0",
    "mov     r13, qword [r14]",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rcx, [rel dstack]",
    "mov     r10d, dword [rcx+0x8]",
    "test    r10d, r10d",
    "jne     0x9e418",
    "add     eax, 0x1",
    "movsxd  rcx, eax",
    "jmp     0x9e31c",
    "movsxd  rcx, eax",
    "lea     rdi, [r13+rcx-0x1]",
    "movzx   esi, byte [rdi]",
    "cmp     sil, 0x5c",
    "je      0x9e470",
    "mov     rdi, r15",
    "mov     qword [rbp-0x40], rcx",
    "call    strlen",
    "mov     rdi, qword [rbp-0x38]",
    "mov     r13, rax",
    "call    strlen",
    "mov     rcx, qword [rbp-0x40]",
    "add     r13, rcx",
    "add     r13, rax",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r10, rax",
    "test    rax, rax",
    "je      0x9e4a0",
    "cmp     byte [r13+rcx-0x2], 0x5c",
    "je      0x9e418",
    "add     eax, 0x1",
    "movsxd  rcx, eax",
    "cmp     sil, 0xa",
    "je      0x9e438",
    "mov     qword [rbp-0x40], rax",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "sub     rsp, 0x8",
    "mov     r8, qword [r14]",
    "mov     r9, qword [rbp-0x38]",
    "mov     rdi, r10",
    "push    r15",
    "mov     rdx, r13",
    "xor     eax, eax",
    "lea     rcx, [rel data_120bd0]  {\"%s%s%s\"}",
    "mov     esi, 0x2",
    "mov     qword [rbp-0x38], r10",
    "call    __sprintf_chk",
    "mov     edi, dword [r12]",
    "pop     r8",
    "mov     rdx, qword [r14+0x10]",
    "mov     r10, qword [rbp-0x38]",
    "test    edi, edi",
    "pop     r9",
    "js      0x9e490",
    "lea     rax, [rel data_122e02]",
    "mov     byte [rdi], 0x0",
    "mov     qword [rbp-0x38], rax",
    "jmp     0x9e31c",
    "mov     rdx, qword [rbp-0x38]",
    "xor     eax, eax",
    "cmp     byte [rdx], 0x3b",
    "sete    al",
    "add     rdx, rax",
    "mov     qword [rbp-0x38], rdx",
    "jmp     0x9e31c",
    "mov     rdi, r10",
    "call    free",
    "mov     r13d, dword [rbx]",
    "jmp     0x9e1df",
    "mov     r13d, dword [rbx]",
    "cmp     r13d, edi",
    "jle     0x9e428",
    "mov     dword [r12], r13d",
    "lea     rsp, [rbp-0x28]",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r10",
    "call    free",
    "jmp     0x9e1df",
    "mov     rsi, r10",
    "mov     qword [rbp-0x38], r10",
    "call    sub_1064e0",
    "mov     rdi, qword [rbp-0x38]",
    "mov     r13, rax",
    "call    free",
    "test    r13, r13",
    "je      0x9e1dc",
    "mov     rdi, qword [r13]",
    "test    rdi, rdi",
    "je      0x9e3cf",
    "mov     rdi, qword [r13+0x8]",
    "test    rdi, rdi",
    "je      0x9e3dd",
    "call    free",
    "mov     rdi, r13",
    "call    free",
    "mov     r13d, dword [rbx]",
    "jmp     0x9e1df",
    "call    free"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
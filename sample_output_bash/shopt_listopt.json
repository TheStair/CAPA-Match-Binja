{
  "address": "0xcc480",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "push    r14 {__saved_r14}",
    "mov     r14d, esi",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0x8",
    "test    rdi, rdi",
    "je      0xcc578",
    "lea     r12, [rel data_156088]",
    "lea     rdx, [rel data_11f1dc]  {\"autocd\"}",
    "lea     r15, [rel data_11f1e9]",
    "lea     r13, [rel data_122c8a[0x12]]",
    "lea     rbx, [rel data_11f1e6]",
    "jmp     0xcc5d8",
    "movzx   r15d, byte [rdi]",
    "mov     r13, rdi",
    "mov     eax, 0x61",
    "xor     r12d, r12d  {0x0}",
    "lea     rbx, [rel data_156098]",
    "lea     rsi, [rel data_11f1dc]  {\"autocd\"}",
    "jmp     0xcc4d7",
    "mov     rax, qword [r12]",
    "mov     eax, dword [rax]",
    "test    r14d, r14d",
    "jne     0xcc5a0",
    "cmp     r15b, al",
    "jne     0xcc4c0",
    "test    eax, eax",
    "lea     rax, [rel data_11f1e3]",
    "mov     rcx, rdx",
    "mov     edi, 0x2",
    "cmove   rax, rbx  {data_11f1e6}",
    "lea     rsi, [rel data_11f235]  {\"shopt %s %s\\n\"}",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "test    eax, eax",
    "mov     rcx, r13  {data_122c8a[0x12], \"on\"}",
    "mov     edi, 0x2",
    "cmove   rcx, r15  {data_11f1e9}",
    "lea     rsi, [rel data_11f242]  {\"%-15s\\t%s\\n\"}",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "jmp     0xcc5c6",
    "mov     rsi, qword [rbx]",
    "add     rbx, 0x18",
    "add     r12d, 0x1",
    "test    rsi, rsi",
    "je      0xcc608",
    "mov     rdi, r13",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xcc4c0",
    "add     rsp, 0x8",
    "xor     edi, edi  {0x0}",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "jmp     sh_chkwrite",
    "mov     rdx, qword [r12+0x10]",
    "add     r12, 0x18",
    "test    rdx, rdx",
    "je      0xcc52c",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121b34]  {\"%s: invalid shell option name\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    builtin_error",
    "add     rsp, 0x8",
    "mov     eax, 0x1",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "movzx   eax, byte [rsi]",
    "movsxd  r12, r12d",
    "lea     rax, [rel data_156080]",
    "lea     rdx, [r12+r12*2]",
    "mov     rax, qword [rax+rdx*8+0x8]",
    "mov     eax, dword [rax]",
    "test    r14d, r14d",
    "jne     0xcc548",
    "test    eax, eax",
    "mov     rcx, r13",
    "lea     rax, [rel data_11f1e3]",
    "mov     edi, 0x2",
    "lea     rdx, [rel data_11f1e6]",
    "lea     rsi, [rel data_11f235]  {\"shopt %s %s\\n\"}",
    "cmovne  rdx, rax  {data_11f1e3}",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "jmp     0xcc52c",
    "test    eax, eax",
    "mov     rdx, r13",
    "lea     rax, [rel data_122c8a[0x12]]",
    "mov     edi, 0x2",
    "lea     rcx, [rel data_11f1e9]",
    "lea     rsi, [rel data_11f242]  {\"%-15s\\t%s\\n\"}",
    "cmovne  rcx, rax  {data_122c8a[0x12], \"on\"}",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk"
  ]
}
{
  "address": "0x108f70",
  "rules": [
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     r13, [rel rl_point]",
    "mov     dword [rbp-0x34], esi",
    "mov     eax, dword [r13]",
    "mov     dword [rbp-0x38], eax",
    "test    eax, eax",
    "je      0x109050",
    "call    rl_ding",
    "add     rsp, 0x18",
    "mov     eax, 0x1",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r12d, edi",
    "test    edi, edi",
    "jle     0x109080",
    "call    rl_begin_undo_group",
    "xor     ebx, ebx",
    "jmp     0x108fee",
    "lea     r15, [rel rl_line_buffer]",
    "xor     ebx, ebx",
    "xor     r14d, r14d",
    "nop     dword [rax]",
    "lea     rax, [rel rl_explicit_arg]",
    "mov     esi, dword [r13]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x109070",
    "mov     esi, dword [rbp-0x34]",
    "mov     edi, 0x1",
    "add     r14d, 0x1",
    "call    rl_backward_char",
    "movsxd  rax, dword [r13]",
    "mov     rcx, qword [r15]",
    "movsx   edi, byte [rcx+rax]",
    "mov     rsi, rax",
    "call    rl_character_len",
    "add     ebx, eax",
    "cmp     r12d, r14d",
    "jne     0x108fb8",
    "call    rl_begin_undo_group",
    "cmp     r12d, 0x1",
    "jne     0x108fff",
    "mov     edi, dword [rbp-0x38]",
    "call    rl_delete_text",
    "jmp     0x10900b",
    "mov     esi, dword [r13]",
    "mov     edi, dword [rbp-0x38]",
    "call    rl_kill_text",
    "lea     rax, [rel rl_end]",
    "mov     r12d, dword [r13]",
    "cmp     r12d, dword [rax]",
    "jl      0x109038",
    "mov     esi, 0x20",
    "mov     edi, ebx",
    "call    _rl_insert_char",
    "mov     dword [r13], r12d",
    "jmp     0x10901b",
    "call    rl_end_undo_group",
    "add     rsp, 0x18",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    "
  ]
}
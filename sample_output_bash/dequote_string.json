{
  "address": "0x730b0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "contain loop",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x28",
    "movzx   r12d, byte [rdi]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], 0x0",
    "test    r12b, r12b",
    "jne     0x73150",
    "cmp     byte [rdi+0x1], 0x0",
    "jne     0x73256",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x73271",
    "cmp     byte [rdi+0x2], 0x0",
    "je      0x73333",
    "mov     r15d, 0x2",
    "mov     r14d, 0x1",
    "xor     r14d, r14d",
    "mov     r15d, 0x1",
    "mov     esi, 0x1",
    "mov     rdi, rbx",
    "mov     r15d, 0x1",
    "mov     r13, r14",
    "call    strchr",
    "test    rax, rax",
    "jne     0x7322d",
    "mov     r15d, 0x3",
    "mov     r14d, 0x2",
    "jmp     0x73166",
    "call    strlen",
    "mov     r14, rax",
    "lea     r15, [rax+0x1]",
    "jmp     0x73166",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "xor     r13d, r13d",
    "call    sub_a7f00",
    "{ Does not return }",
    "cmp     r12b, 0x7f",
    "jne     0x73310",
    "mov     byte [r14], 0x0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x7334e",
    "mov     rdi, r15",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x7327a",
    "cmp     r12b, 0x1",
    "jne     0x7318e",
    "cmp     byte [rbx+0x1], 0x0",
    "je      0x73344",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "mov     rax, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "add     rsp, 0x28",
    "mov     rdx, r15",
    "mov     rsi, rbx",
    "mov     rdi, r14",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "mov     esi, 0x1",
    "mov     rdi, rbx",
    "call    strchr",
    "test    rax, rax",
    "je      0x73353",
    "cmp     byte [rbx+0x1], 0x0",
    "jne     0x7318e",
    "mov     byte [r13], 0x0",
    "jmp     0x73231",
    "mov     r14, r13",
    "jmp     0x7311d",
    "lea     r15, [rbx+r14]",
    "mov     r14, r13",
    "test    r12b, r12b",
    "je      0x7322d",
    "mov     edx, 0x1",
    "mov     word [r13], dx",
    "jmp     0x73231",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x7334e",
    "lea     rax, [rbp-0x40]",
    "mov     qword [rbp-0x48], rax",
    "jmp     0x731d5",
    "cmp     r12b, 0x1",
    "je      0x732a0",
    "movzx   ecx, byte [rbx+0x1]",
    "test    cl, cl",
    "je      0x7322d",
    "movzx   ecx, byte [rbx]",
    "add     rbx, 0x1",
    "jmp     0x731e2",
    "movzx   r12d, byte [rbx+0x1]",
    "mov     byte [r14], cl",
    "add     rbx, 0x1",
    "add     r14, 0x1",
    "test    r12b, r12b",
    "je      0x7322d",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "je      0x732b8",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jle     0x731c0",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x732e8",
    "mov     r12d, 0x1",
    "mov     rdx, r15",
    "mov     rcx, qword [rbp-0x48]",
    "xor     edi, edi",
    "mov     rsi, rbx",
    "sub     rdx, rbx",
    "mov     r12, qword [rbp-0x40]",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x732cf",
    "test    cl, cl",
    "js      0x732e8",
    "test    rax, rax",
    "mov     edx, 0x1",
    "cmovne  rdx, rax",
    "mov     r12, rdx",
    "jmp     0x73210",
    "mov     qword [rbp-0x40], r12",
    "jmp     0x7320a",
    "setne   al",
    "movzx   eax, al",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r14",
    "add     rbx, r12",
    "call    memcpy",
    "add     r14, r12",
    "movzx   r12d, byte [rbx]",
    "test    r12b, r12b",
    "jne     0x731d5"
  ]
}
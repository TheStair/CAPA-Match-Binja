{
  "address": "0xa0a10",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "allocate or change RW memory/b4e5a298cb404535abd304755b86823e",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, qword [rel data_168b30]",
    "test    esi, esi",
    "jne     0xa0b15",
    "test    rbx, rbx",
    "je      0xa0b7d",
    "mov     r12, rdi",
    "mov     rdi, qword [rel data_168b40]",
    "mov     ebx, esi",
    "test    rdi, rdi",
    "je      0xa0a44",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "movsxd  rax, dword [rel data_168b28]",
    "lea     r14, [rbx+rax*8]",
    "mov     r13, rax",
    "mov     rbx, qword [r14]",
    "test    rbx, rbx",
    "je      0xa0b7d",
    "movsx   edx, byte [r12]",
    "mov     r13, r12",
    "mov     dword [rel data_168b3c], 0x0",
    "mov     dword [rel data_168b38], edx",
    "mov     eax, edx",
    "cmp     edx, 0x24",
    "jne     0xa0a7d",
    "call    free",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x4]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xa0bbd",
    "cmp     al, 0x7b",
    "jne     0xa0a91",
    "movzx   eax, byte [r12+0x1]",
    "lea     r13, [r12+0x1]",
    "mov     ebx, 0x1",
    "mov     dword [rel data_168b3c], 0x1",
    "xor     eax, eax",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  rdi, dword [rel data_168b3c]",
    "cmp     r12, rdi",
    "mov     rdx, rdi",
    "mov     rax, rdi",
    "cmovae  rdx, r12",
    "sub     rdx, rdi",
    "add     rdi, rbx",
    "test    eax, eax",
    "jne     0xa0b90",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xa0be8",
    "add     ebx, 0x1",
    "mov     dword [rel data_168b3c], ebx",
    "movsxd  rbx, ebx",
    "lea     r13, [r12+rbx]",
    "mov     ecx, dword [rel data_168b38]",
    "mov     byte [rbx], cl",
    "cmp     eax, 0x2",
    "jne     0xa0b6a",
    "mov     rsi, qword [r14]",
    "call    __strcpy_chk",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r13",
    "mov     rdx, rbx",
    "mov     rdi, r12",
    "call    __strcpy_chk",
    "mov     r13, qword [rel data_168b30]",
    "mov     qword [rel data_168b40], r12",
    "test    r13, r13",
    "je      0xa0af9",
    "mov     byte [rbx+0x1], 0x7b",
    "mov     rsi, qword [r14]",
    "call    __strcpy_chk",
    "mov     rdx, r12",
    "lea     rsi, [rel data_11f5b6]  {\"}\"}",
    "mov     rdi, rbx",
    "call    __strcat_chk",
    "jmp     0xa0b72",
    "mov     rdi, r12",
    "call    all_variables_matching_prefix",
    "mov     dword [rel data_168b28], 0x0",
    "mov     qword [rel data_168b30], rax",
    "mov     rbx, rax",
    "mov     rdi, qword [r13]",
    "lea     rbx, [r13+0x8]",
    "test    rdi, rdi",
    "je      0xa0af1",
    "add     r13d, 0x1",
    "mov     dword [rel data_168b28], r13d",
    "mov     rdi, r13",
    "call    free",
    "nop     ",
    "call    free",
    "mov     rdi, qword [rbx]",
    "add     rbx, 0x8",
    "test    rdi, rdi",
    "jne     0xa0ae0"
  ]
}
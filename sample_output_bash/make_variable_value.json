{
  "address": "0x553d0",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rdi",
    "push    r13",
    "push    r12",
    "mov     r12d, edx",
    "push    rbx",
    "mov     rbx, rsi",
    "sub     rsp, 0x28",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "and     edx, 0x100",
    "jne     0x55469",
    "test    rbx, rbx",
    "je      0x55650",
    "mov     eax, dword [rdi+0x28]",
    "test    al, 0x10",
    "je      0x55460",
    "xor     r12d, r12d",
    "jmp     0x554eb",
    "and     r12d, 0x1",
    "jne     0x5551d",
    "test    ah, 0x7",
    "jne     0x55568",
    "test    r12b, 0x1",
    "je      0x555f0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x55907",
    "mov     rdi, r14",
    "call    get_variable_value",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x55660",
    "cmp     byte [rbx], 0x0",
    "je      0x554d0",
    "and     r12d, 0x1",
    "jne     0x55750",
    "mov     rdi, rbx",
    "lea     rdx, [rbp-0x3c]",
    "xor     esi, esi",
    "call    evalexp",
    "mov     rdi, rax",
    "mov     eax, dword [rbp-0x3c]",
    "test    eax, eax",
    "jne     0x55453",
    "mov     rdi, qword [rdi+0x8]",
    "lea     r15, [rbp-0x3c]",
    "xor     esi, esi",
    "mov     rdx, r15",
    "call    evalexp",
    "mov     ecx, dword [rbp-0x3c]",
    "mov     r13, rax",
    "test    ecx, ecx",
    "je      0x55510",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "mov     rax, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r13d, 0x1",
    "xor     r14d, r14d",
    "lea     r15, [rel data_122e02]",
    "cmp     byte [rax], 0x0",
    "je      0x55858",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x5590c",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x55924",
    "call    get_variable_value",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x55840",
    "cmp     byte [rsi], 0x0",
    "je      0x556e0",
    "call    itos",
    "mov     r12, rax",
    "jmp     0x554eb",
    "and     r12d, 0x200",
    "jne     0x5547c",
    "and     r12d, 0x200",
    "je      0x55619",
    "mov     rdx, r15",
    "mov     rdi, rbx",
    "xor     esi, esi",
    "call    evalexp",
    "mov     edx, dword [rbp-0x3c]",
    "lea     rdi, [r13+rax]",
    "test    edx, edx",
    "je      0x55510",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x55628",
    "cmp     byte [rbx], 0x0",
    "je      0x556a0",
    "mov     r13d, 0x1",
    "xor     r14d, r14d",
    "jmp     0x55670",
    "cmp     byte [rax+0x1], 0x0",
    "je      0x55800",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r12], 0x0",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x55907",
    "mov     r12d, 0x1",
    "xor     ecx, ecx",
    "lea     r15, [rel data_122e02]",
    "jmp     0x55790",
    "cmp     byte [rax], 0x0",
    "je      0x558c0",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x559d9",
    "mov     rdi, rsi",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x5593a",
    "call    top_level_cleanup",
    "mov     edi, 0x2",
    "call    jump_to_top_level",
    "{ Does not return }",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r13",
    "mov     rsi, r15",
    "mov     rdi, r12",
    "call    __strcpy_chk",
    "jmp     0x554eb",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x559b6",
    "cmp     byte [rbx+0x1], 0x0",
    "je      0x55818",
    "test    rbx, rbx",
    "je      0x55720",
    "mov     r13d, 0x2",
    "mov     r14d, 0x1",
    "jmp     0x55670",
    "cmp     byte [rax+0x2], 0x0",
    "je      0x55828",
    "add     rsp, 0x28",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "test    rbx, rbx",
    "je      0x55870",
    "mov     r12d, 0x1",
    "xor     ecx, ecx",
    "jmp     0x55790",
    "cmp     byte [rax+0x1], 0x0",
    "je      0x558b0",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r13], 0x0",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r13",
    "call    __strcpy_chk",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r13",
    "mov     rsi, r15",
    "mov     rdi, r12",
    "call    __strcpy_chk",
    "cmp     r13, r14",
    "mov     rdx, r13",
    "lea     rdi, [r12+r14]",
    "mov     rsi, rbx",
    "cmovb   rdx, r14",
    "sub     rdx, r14",
    "call    __strcpy_chk",
    "jmp     0x554eb",
    "add     r13, 0x1",
    "jmp     0x556a0",
    "cmp     byte [rbx+0x2], 0x0",
    "jne     0x558a0",
    "mov     r13d, 0x3",
    "mov     r14d, 0x2",
    "jmp     0x55670",
    "mov     rdi, rax",
    "call    strlen",
    "movsxd  r14, eax",
    "lea     r13, [r14+0x1]",
    "jmp     0x55670",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x55950",
    "cmp     byte [rbx], 0x0",
    "je      0x557ac",
    "mov     r12d, 0x2",
    "mov     ecx, 0x1",
    "jmp     0x55790",
    "cmp     byte [rax+0x2], 0x0",
    "je      0x558df",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r12], 0x0",
    "jmp     0x555de",
    "test    cl, cl",
    "je      0x556fb",
    "xor     edx, edx",
    "test    ah, 0x1",
    "setne   dl",
    "add     edx, 0x1",
    "mov     rdi, rbx",
    "call    strlen",
    "add     r13, rax",
    "jmp     0x556a0",
    "add     r13, 0x2",
    "nop     word [rax+rax]",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, r15",
    "mov     rdi, r13",
    "call    __strcpy_chk",
    "jmp     0x555a9",
    "mov     rdi, r12",
    "mov     qword [rbp-0x48], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x48]",
    "test    rax, rax",
    "mov     r13, rax",
    "je      0x55973",
    "cmp     byte [rbx+0x1], 0x0",
    "jne     0x558d0",
    "mov     r12d, 0x3",
    "mov     ecx, 0x2",
    "jmp     0x55790",
    "mov     rdi, rax",
    "call    strlen",
    "movsxd  rcx, eax",
    "lea     r12, [rcx+0x1]",
    "nop     dword [rax]",
    "mov     rdi, r13",
    "call    free",
    "jmp     0x554eb",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x5599e",
    "xor     esi, esi",
    "mov     rdi, r13",
    "xor     eax, eax",
    "call    sub_dd4b0",
    "mov     r12, rax",
    "mov     eax, dword [r14+0x28]",
    "movzx   ecx, byte [r13]",
    "mov     edx, 0x4",
    "test    ah, 0x4",
    "jne     0x555c7",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x48], rcx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, r15",
    "mov     rdi, r13",
    "mov     qword [rbp-0x48], rcx",
    "call    __strcpy_chk",
    "mov     rcx, qword [rbp-0x48]",
    "cmp     r12, rcx",
    "mov     rdx, r12",
    "lea     rdi, [r13+rcx]",
    "mov     rsi, rbx",
    "cmovb   rdx, rcx",
    "sub     rdx, rcx",
    "call    __strcpy_chk",
    "jmp     0x555a9",
    "cmp     byte [rbx+0x2], 0x0",
    "jne     0x558ef",
    "add     r12, 0x1",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x48], rcx",
    "call    strlen",
    "mov     rcx, qword [rbp-0x48]",
    "add     r12, rax",
    "jmp     0x557ac",
    "add     r12, 0x2",
    "jmp     0x557ac"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x5a8a0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rsi",
    "push    r12",
    "mov     r12d, edx",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "mov     edx, dword [rdi+0x28]",
    "mov     eax, edx",
    "and     ah, 0xef",
    "mov     dword [rdi+0x28], eax",
    "mov     rax, qword [rdi+0x20]",
    "test    rax, rax",
    "je      0x5a978",
    "and     edx, 0x1000",
    "mov     r14d, edx",
    "mov     edx, r12d",
    "call    make_variable_value",
    "mov     r13, rax",
    "mov     eax, r12d",
    "and     eax, 0x30",
    "cmp     eax, 0x10",
    "je      0x5aa00",
    "test    r12b, 0x1",
    "jne     0x5a940",
    "mov     rdi, qword [rbx]",
    "xor     edx, edx",
    "mov     rsi, r13",
    "call    check_selfref",
    "test    eax, eax",
    "je      0x5a997",
    "and     r12d, 0x10",
    "jne     0x5a9b8",
    "mov     edx, r12d",
    "call    make_variable_value",
    "xor     ecx, ecx",
    "mov     rdx, 0xffffffffffffffff",
    "mov     rdi, rbx",
    "mov     r12, rax",
    "mov     rsi, rax",
    "call    qword [rbx+0x20]",
    "cmp     r13, r12",
    "je      0x5a8e7",
    "xor     ecx, ecx",
    "mov     rdx, 0xffffffffffffffff",
    "call    rax",
    "lea     rax, [rel variable_context]",
    "mov     r15, qword [rbx]",
    "mov     edx, 0x5",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0x5aa4a",
    "test    r13, r13",
    "je      0x5a9e0",
    "mov     rdi, qword [rbx+0x8]",
    "test    rdi, rdi",
    "je      0x5a9ab",
    "mov     rdi, qword [rbx+0x10]",
    "test    rdi, rdi",
    "je      0x5a8fd",
    "test    r12, r12",
    "je      0x5a8e7",
    "lea     rdx, [rel mark_modified_vars]",
    "mov     eax, dword [rbx+0x28]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "jne     0x5a928",
    "call    free",
    "mov     qword [rbx+0x10], 0x0",
    "xor     edi, edi",
    "lea     rsi, [rel data_132d70]  {\"%s: nameref variable self refere\u2026\"}",
    "call    dcgettext",
    "mov     rsi, r15",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "mov     rdi, r13",
    "call    free",
    "test    r14d, r14d",
    "je      0x5a9f8",
    "xor     edi, edi",
    "lea     rsi, [rel data_11fe5f]  {\"%s: circular name reference\"}",
    "call    dcgettext",
    "mov     rsi, r15",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_warning",
    "jmp     0x5a997",
    "mov     rdi, r13",
    "call    free",
    "test    r14d, r14d",
    "je      0x5a9f8",
    "cmp     byte [r13], 0x0",
    "je      0x5a9e0",
    "mov     qword [rbx+0x8], r13",
    "jmp     0x5a8e7",
    "call    free",
    "mov     rdi, r12",
    "call    free",
    "jmp     0x5a8e7",
    "or      eax, 0x1",
    "mov     dword [rbx+0x28], eax",
    "test    al, 0x1",
    "jne     0x5a92e",
    "xor     eax, eax",
    "jmp     0x5a914",
    "jmp     0x5a9ed",
    "or      dword [rbx+0x28], 0x1000",
    "nop     dword [rax]",
    "mov     rdi, r13",
    "call    legal_identifier",
    "test    eax, eax",
    "jne     0x5a99d",
    "mov     rax, rbx",
    "lea     rax, [rel array_needs_making]",
    "mov     dword [rax], 0x1",
    "jmp     0x5a911",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rdi, r13",
    "call    tokenize_array_reference",
    "test    eax, eax",
    "jne     0x5a99d"
  ]
}
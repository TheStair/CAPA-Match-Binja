{
  "address": "0x100d70",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "lea     r14, [rel rl_line_buffer]",
    "push    r13",
    "mov     r13d, edi",
    "push    r12",
    "lea     r12, [rel rl_line_buffer_len]",
    "push    rbx",
    "mov     rdi, qword [r14]",
    "mov     ebx, dword [r12]",
    "cmp     ebx, r13d",
    "jg      0x100e10",
    "pop     rbx",
    "pop     r12",
    "mov     qword [rel data_169168], rdi",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "add     ebx, 0x100",
    "mov     dword [r12], ebx",
    "movsxd  rbx, ebx",
    "test    rdi, rdi",
    "jne     0x100dd7",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     rdi, rax",
    "test    rdi, rdi",
    "jne     0x100dbe",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rdi, rax",
    "test    rdi, rdi",
    "je      0x100de7",
    "mov     ebx, dword [r12]",
    "mov     qword [r14], rdi",
    "cmp     r13d, ebx",
    "jl      0x100e10",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "call    dcgettext",
    "mov     rdx, rbx",
    "lea     rsi, [rel data_11f045]  {\"xrealloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "add     ebx, 0x100",
    "mov     dword [r12], ebx",
    "movsxd  rbx, ebx"
  ]
}
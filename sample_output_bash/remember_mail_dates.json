{
  "address": "0x8cee0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "lea     rdi, [rel data_120467]  {\"MAILPATH\"}",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "mov     dword [rbp-0x2c], 0x0",
    "call    find_variable",
    "test    rax, rax",
    "je      0x8cfb6",
    "lea     rdi, [rel data_120462]  {\"MAIL\"}",
    "call    find_variable",
    "test    rax, rax",
    "je      0x8cfe0",
    "mov     rdi, rax",
    "lea     r13, [rbp-0x2c]",
    "call    get_variable_value",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x8cfb6",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x8cffa",
    "mov     rdi, rax",
    "call    get_variable_value",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x8cfe0",
    "nop     dword [rax]",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "xor     esi, esi",
    "call    sub_11cf50",
    "nop     ",
    "movzx   edx, byte [rax]",
    "mov     rsi, rax",
    "test    dl, dl",
    "je      0x8cf7b",
    "xor     esi, esi",
    "nop     dword [rax]",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "call    extract_colon_unit",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x8cfe0",
    "cmp     byte [rsi+0x1], 0x0",
    "je      0x8cf7b",
    "cmp     dl, 0x3f",
    "je      0x8cfa8",
    "movzx   edx, byte [rsi+0x2]",
    "add     rsi, 0x2",
    "test    dl, dl",
    "jne     0x8cf60",
    "cmp     byte [rsi], 0x0",
    "je      0x8cf7d",
    "cmp     dl, 0x25",
    "je      0x8cfa8",
    "cmp     dl, 0x5c",
    "je      0x8cf90",
    "jmp     0x8cf7b",
    "mov     rdi, rbx",
    "call    sub_11cf50",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0x8cf38",
    "mov     byte [rsi], 0x0",
    "add     rsi, 0x1",
    "jmp     0x8cf7d",
    "movzx   edx, byte [rsi+0x1]",
    "add     rsi, 0x1",
    "test    dl, dl",
    "jne     0x8cf60"
  ]
}
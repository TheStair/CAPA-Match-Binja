{
  "address": "0x42c40",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rsi",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "mov     rdi, rsi",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], 0x0",
    "call    strlen",
    "test    rax, rax",
    "je      0x42d1b",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x42daa",
    "mov     r14, rax",
    "lea     rax, [rbp-0x40]",
    "lea     r13, [rel locale_mb_cur_max]",
    "xor     ebx, ebx",
    "mov     qword [rbp-0x48], rax",
    "xor     edx, edx",
    "nop     dword [rax]",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "mov     rax, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "or      dword [r12+0x8], 0x1",
    "jmp     0x42cc8",
    "jle     0x42d50",
    "cmp     dword [r13], 0x1",
    "jle     0x42d10",
    "cmp     al, 0x22",
    "jne     0x42cc8",
    "cmp     al, 0x27",
    "je      0x42d58",
    "add     ebx, 0x1",
    "movzx   ecx, byte [rsi]",
    "lea     rdi, [rel is_basic_table]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "jne     0x42d48",
    "or      dword [r12+0x8], 0x2",
    "jmp     0x42cc8",
    "cmp     al, 0x60",
    "je      0x42d58",
    "lea     rsi, [r15+rdx]",
    "movzx   eax, byte [rsi]",
    "cmp     al, 0x24",
    "je      0x42d68",
    "add     ebx, eax",
    "jmp     0x42d13",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x42d78",
    "nop     dword [rax]",
    "movsxd  rdx, ebx",
    "cmp     rdx, r14",
    "jb      0x42ca0",
    "mov     rax, qword [rbp-0x40]",
    "mov     rcx, qword [rbp-0x48]",
    "xor     edi, edi",
    "mov     qword [rbp-0x50], rax",
    "mov     rax, r14",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x42d40",
    "test    cl, cl",
    "js      0x42d78",
    "test    rax, rax",
    "je      0x42d10",
    "mov     rax, qword [rbp-0x50]",
    "add     ebx, 0x1",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x42d13",
    "mov     eax, 0x1",
    "jne     0x42d48",
    "nop     dword [rax]",
    "nop     word [rax+rax]"
  ]
}
{
  "address": "0x79260",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "terminate process",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "terminate process via kill",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "hide graphical window from taskbar/b4bfaf95e3d84a8f881eeaebe3fd856e",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "get current PID on Linux",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "duplicate stdin and stdout",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rcx, rdi",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12d, esi",
    "push    rbx",
    "mov     ebx, edx",
    "sub     rsp, 0x158",
    "mov     qword [rbp-0x160], rdi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    rdi, rdi",
    "jne     0x792ba",
    "movzx   edx, byte [rcx]",
    "test    dl, dl",
    "jne     0x792a0",
    "jmp     0x792c1",
    "lea     rsi, [rel sh_syntaxtab]",
    "movzx   eax, dl",
    "test    byte [rsi+rax*4+0x1], 0x20",
    "jne     0x792b6",
    "xor     eax, eax",
    "add     rcx, 0x1",
    "cmp     dl, 0xa",
    "jne     0x792f0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x158",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     dl, 0x3c",
    "je      0x796f0",
    "movzx   eax, byte [rcx+0x1]",
    "mov     edx, eax",
    "and     edx, 0xfffffffd",
    "cmp     dl, 0x3c",
    "je      0x792f9",
    "lea     rax, [rel wordexp_only]",
    "mov     r15d, dword [rax]",
    "test    r15d, r15d",
    "jne     0x795a0",
    "cmp     al, 0x26",
    "je      0x792f9",
    "lea     rax, [rel read_but_dont_execute]",
    "mov     r14d, dword [rax]",
    "test    r14d, r14d",
    "je      0x7930c",
    "lea     rax, [rel subst_assign_varlist]",
    "cmp     qword [rax], 0x0",
    "je      0x796d0",
    "mov     rdi, qword [rbp-0x160]",
    "xor     esi, esi",
    "call    parse_string_to_command",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x79730",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edi, 0x3",
    "mov     dword [rax], 0x7d",
    "call    jump_to_top_level",
    "{ Does not return }",
    "lea     rax, [rel array_needs_making]",
    "mov     r13d, dword [rax]",
    "test    r13d, r13d",
    "je      0x7932b",
    "cmp     qword [rel data_168598], 0x0",
    "je      0x796d0",
    "mov     rdi, r13",
    "call    dispose_command",
    "jmp     0x792f9",
    "mov     rdi, rax",
    "call    can_optimize_cat_file",
    "test    eax, eax",
    "jne     0x79870",
    "lea     rax, [rel interactive]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x158], eax",
    "test    eax, eax",
    "jne     0x79580",
    "call    sub_5ea30",
    "jmp     0x7932b",
    "mov     dword [rbp-0x14c], 0x0",
    "mov     rax, qword [r13+0x18]",
    "xor     esi, esi",
    "mov     rdi, qword [rax+0x10]",
    "call    open_redir_file",
    "mov     r14d, eax",
    "test    eax, eax",
    "js      0x798f7",
    "lea     rax, [rel sourcelevel]",
    "mov     r11d, dword [rax]",
    "xor     eax, eax",
    "test    r11d, r11d",
    "sete    al",
    "shl     eax, 0x4",
    "mov     dword [rbp-0x158], eax",
    "jmp     0x79342",
    "lea     rax, [rel last_made_pid]",
    "lea     rdi, [rbp-0x148]",
    "mov     r14d, dword [rax]",
    "call    pipe",
    "test    eax, eax",
    "js      0x79790",
    "lea     rax, [rel last_command_exit_value]",
    "xor     ebx, ebx",
    "mov     dword [rax], 0x1",
    "jmp     0x798c7",
    "mov     edx, ebx",
    "lea     rcx, [rbp-0x14c]",
    "mov     esi, r12d",
    "mov     edi, eax",
    "call    sub_78d00",
    "mov     edi, r14d",
    "mov     rbx, rax",
    "call    close",
    "lea     rax, [rel data_1685a0]",
    "cmp     rbx, rax",
    "je      0x798f7",
    "lea     rsi, [rel data_1333c8]  {\"cannot make pipe for command sub\u2026\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "lea     rdi, [rel data_1217ad[6]]  {\"%s\"}",
    "mov     rsi, rax",
    "xor     eax, eax",
    "call    sys_error",
    "lea     rax, [rel pipeline_pgrp]",
    "lea     rdx, [rel subshell_environment]",
    "mov     ecx, dword [rax]",
    "mov     dword [rbp-0x164], ecx",
    "test    byte [rdx], 0x18",
    "jne     0x79386",
    "lea     rax, [rel dollar_dollar_pid]",
    "mov     rdi, r13",
    "mov     edx, dword [rax]",
    "lea     rax, [rel last_command_subst_pid]",
    "mov     dword [rax], edx",
    "call    dispose_command",
    "call    alloc_word_desc",
    "mov     edx, dword [rbp-0x14c]",
    "mov     qword [rax], rbx",
    "mov     dword [rax+0x8], edx",
    "jmp     0x792c3",
    "lea     rax, [rel last_command_exit_value]",
    "mov     dword [rax], 0x0",
    "call    cleanup_the_pipeline",
    "lea     rax, [rel last_asynchronous_pid]",
    "xor     edi, edi",
    "mov     r15d, dword [rax]",
    "lea     rax, [rel subshell_environment]",
    "mov     esi, dword [rax]",
    "and     esi, 0x1",
    "or      esi, 0x4",
    "call    make_child",
    "mov     r13d, eax",
    "lea     rax, [rel last_asynchronous_pid]",
    "mov     dword [rax], r15d",
    "test    r13d, r13d",
    "je      0x795d0",
    "lea     rdx, [rel shell_pgrp]",
    "mov     edx, dword [rdx]",
    "mov     dword [rax], edx",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x79b5f",
    "lea     rdi, [rel sub_8a770]",
    "call    sub_8a7b0",
    "lea     r12, [rel interrupt_state]",
    "mov     eax, dword [r12]",
    "test    eax, eax",
    "jne     0x7973d",
    "mov     edi, 0x11",
    "lea     rsi, [rel sub_66230]",
    "call    set_signal_handler",
    "lea     rax, [rel already_making_children]",
    "mov     edi, dword [rbp-0x164]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel pipeline_pgrp]",
    "mov     dword [rax], edi",
    "test    r13d, r13d",
    "js      0x797d9",
    "call    getpid",
    "mov     esi, 0x2",
    "mov     edi, eax",
    "call    kill",
    "mov     dword [r12], 0x0",
    "jmp     0x795ef",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x79765",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1333f8]  {\"cannot make child for command su\u2026\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    sys_error",
    "jmp     0x797b4",
    "lea     rax, [rel pgrp_pipe]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "jns     0x79780",
    "mov     r10d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r10d, r10d",
    "jne     0x79600",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x7975b",
    "mov     edi, dword [rbp-0x148]",
    "lea     rax, [rel last_made_pid]",
    "mov     dword [rax], r14d",
    "call    close",
    "mov     edi, dword [rbp-0x144]",
    "call    close",
    "jmp     0x792c1",
    "call    close",
    "jmp     0x79408",
    "lea     rax, [rel pgrp_pipe]",
    "mov     edi, dword [rax+0x4]",
    "test    edi, edi",
    "js      0x7941b",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0x79611",
    "lea     rdx, [rel subshell_environment]",
    "lea     rsi, [rel sub_66230]",
    "mov     edi, 0x11",
    "mov     eax, dword [rdx]",
    "and     ah, 0xfe",
    "or      al, 0x80",
    "mov     dword [rdx], eax",
    "call    set_signal_handler",
    "lea     rax, [rel already_making_children]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel interactive]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel pipeline_pgrp]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jle     0x79666",
    "lea     rax, [rel pgrp_pipe]",
    "mov     edi, dword [rbp-0x144]",
    "mov     qword [rax], 0xffffffffffffffff",
    "call    close",
    "lea     rdi, [rel data_1208e4]  {\"read-comsub\"}",
    "call    begin_unwind_frame",
    "lea     rdx, [rel uwcache]",
    "movsxd  rcx, dword [rbp-0x148]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0x7981e",
    "call    close",
    "call    set_sigint_handler",
    "call    sub_350d0",
    "mov     r12, qword [rel stdout]",
    "mov     rdi, qword [r12]",
    "call    __fpurge",
    "mov     edi, dword [rbp-0x144]",
    "mov     esi, 0x1",
    "call    dup2",
    "test    eax, eax",
    "jns     0x79908",
    "lea     rdx, [rel shell_pgrp]",
    "cmp     eax, dword [rdx]",
    "je      0x79666",
    "mov     edi, 0x20",
    "mov     qword [rbp-0x178], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x178]",
    "test    rax, rax",
    "mov     r15, rax",
    "jne     0x79468",
    "sub     eax, 0x1",
    "mov     rsi, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     r15, qword [rsi+rax*8]",
    "mov     rax, qword [rel stdin]",
    "mov     r13d, dword [rbp-0x144]",
    "mov     rdi, qword [rax]",
    "call    fileno",
    "cmp     r13d, eax",
    "je      0x7995e",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133428]  {\"command_substitute: cannot dupli\u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "lea     rdi, [rel data_1217ad[6]]  {\"%s\"}",
    "mov     rsi, rax",
    "xor     eax, eax",
    "call    sys_error",
    "mov     edi, 0x1",
    "call    exit",
    "{ Does not return }",
    "mov     dword [rdx], eax",
    "mov     rax, qword [rel data_161a50]",
    "mov     qword [r15+0x10], rcx",
    "mov     qword [r15], rax",
    "mov     rax, qword [rel close]",
    "mov     qword [rel data_161a50], r15",
    "mov     qword [r15+0x8], rax",
    "lea     r15, [rbp-0xc0]",
    "mov     rdi, r15",
    "call    sigemptyset",
    "mov     esi, 0x2",
    "mov     rdi, r15",
    "call    sigaddset",
    "lea     rdx, [rbp-0x140]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x170], rdx",
    "call    sigemptyset",
    "mov     rdx, qword [rbp-0x170]",
    "xor     edi, edi",
    "mov     rsi, r15",
    "call    sigprocmask",
    "mov     edi, dword [rbp-0x148]",
    "mov     edx, ebx",
    "mov     esi, r12d",
    "lea     rcx, [rbp-0x14c]",
    "mov     dword [rbp-0x14c], 0x0",
    "call    sub_78d00",
    "mov     edi, dword [rbp-0x148]",
    "mov     rbx, rax",
    "call    close",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0x79510",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x180], rcx",
    "call    sub_a7f00",
    "{ Does not return }",
    "xor     edx, edx",
    "lea     rsi, [rbp-0x140]",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "lea     rax, [rel current_command_subst_pid]",
    "mov     esi, 0x100",
    "mov     edi, r13d",
    "mov     dword [rax], r13d",
    "call    wait_for",
    "lea     rdx, [rel last_command_exit_value]",
    "mov     dword [rdx], eax",
    "lea     rax, [rel last_command_subst_pid]",
    "mov     dword [rax], r13d",
    "lea     rax, [rel last_made_pid]",
    "mov     dword [rax], r14d",
    "mov     eax, dword [rdx]",
    "cmp     eax, 0x82",
    "je      0x797f8",
    "lea     rdi, [rel data_1208e4]  {\"read-comsub\"}",
    "call    sub_113da0",
    "mov     rax, qword [rel stdin]",
    "mov     r12d, dword [rbp-0x148]",
    "mov     rdi, qword [rax]",
    "call    fileno",
    "cmp     r12d, eax",
    "je      0x799ba",
    "mov     rdi, qword [r12]",
    "mov     r13d, dword [rbp-0x144]",
    "call    fileno",
    "cmp     r13d, eax",
    "je      0x7995e",
    "lea     rax, [rel last_command_exit_signal]",
    "cmp     dword [rax], 0x2",
    "jne     0x79564",
    "call    alloc_word_desc",
    "mov     edx, dword [rbp-0x14c]",
    "mov     qword [rax], rbx",
    "mov     dword [rax+0x8], edx",
    "jmp     0x792c3",
    "lea     rax, [rel subshell_environment]",
    "mov     esi, 0x2b",
    "mov     edi, 0x76",
    "or      dword [rax], 0x4",
    "call    change_flag",
    "lea     rax, [rel inherit_errexit]",
    "cmp     dword [rax], 0x0",
    "jne     0x799fb",
    "mov     rax, qword [rel stdout]",
    "mov     r12d, dword [rbp-0x148]",
    "mov     rdi, qword [rax]",
    "call    fileno",
    "cmp     r12d, eax",
    "je      0x799ba",
    "mov     rax, qword [rel stderr]",
    "mov     r12d, dword [rbp-0x144]",
    "mov     rdi, qword [rax]",
    "call    fileno",
    "cmp     r12d, eax",
    "je      0x7995e",
    "call    getpid",
    "mov     esi, 0x2",
    "mov     edi, eax",
    "call    kill",
    "jmp     0x79564",
    "call    set_shellopts",
    "lea     r12, [rel expanding_redir]",
    "cmp     dword [r12], 0x0",
    "jne     0x79b4e",
    "lea     rax, [rel builtin_ignoring_errexit]",
    "xor     r9d, r9d",
    "mov     esi, 0x2b",
    "mov     edi, 0x65",
    "mov     dword [rax], r9d",
    "call    change_flag",
    "mov     rax, qword [rel stderr]",
    "mov     r12d, dword [rbp-0x148]",
    "mov     rdi, qword [rax]",
    "call    fileno",
    "cmp     r12d, eax",
    "je      0x799ba",
    "mov     edi, dword [rbp-0x144]",
    "call    close",
    "call    flush_temporary_env",
    "xor     r8d, r8d",
    "mov     dword [r12], r8d",
    "jmp     0x79a12",
    "mov     rdi, qword [rbp-0x160]",
    "call    sub_8c3f0",
    "lea     rax, [rel expand_aliases]",
    "cmp     dword [rax], 0x0",
    "je      0x79a41",
    "mov     edi, dword [rbp-0x148]",
    "call    close",
    "lea     rax, [rel startup_state]",
    "xor     edi, edi",
    "xor     esi, esi",
    "mov     dword [rax], 0x2",
    "lea     rax, [rel parse_and_execute_level]",
    "mov     dword [rax], edi",
    "lea     rdi, [rel top_level]",
    "call    __sigsetjmp",
    "endbr64 ",
    "test    eax, eax",
    "jne     0x79ad6",
    "and     bl, 0x80",
    "jne     0x79a41",
    "mov     dword [rbp-0x154], eax",
    "xor     eax, eax",
    "lea     rax, [rel return_catch_flag]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "jne     0x79b30",
    "lea     rdx, [rel posixly_correct]",
    "cmp     dword [rdx], 0x0",
    "sete    dl",
    "movzx   edx, dl",
    "mov     dword [rax], edx",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edx, dword [rax]",
    "jmp     0x79ab0",
    "mov     ebx, dword [rbp-0x154]",
    "cmp     ebx, 0x6",
    "sete    dl",
    "cmp     ebx, 0x3",
    "sete    cl",
    "or      dl, cl",
    "jne     0x79b20",
    "lea     rdi, [rel return_catch]",
    "xor     esi, esi",
    "mov     dword [rbp-0x154], 0x0",
    "call    __sigsetjmp",
    "endbr64 ",
    "jmp     0x79ade",
    "mov     edx, dword [rbp-0x158]",
    "lea     rax, [rel subshell_level]",
    "lea     rsi, [rel data_11f317]  {\"command substitution\"}",
    "mov     rdi, qword [rbp-0x160]",
    "or      edx, 0x4",
    "add     dword [rax], 0x1",
    "call    parse_and_execute",
    "mov     edx, eax",
    "nop     dword [rax+rax]",
    "lea     rax, [rel last_command_exit_value]",
    "mov     dword [rax], edx",
    "call    run_exit_trap",
    "mov     ebx, eax",
    "mov     eax, dword [rel data_161064]",
    "test    eax, eax",
    "je      0x79acf",
    "mov     ecx, dword [rbp-0x154]",
    "mov     edx, 0x1",
    "test    ecx, ecx",
    "jne     0x79ab0",
    "cmp     dword [rbp-0x154], 0x4",
    "je      0x79b20",
    "mov     edi, ebx",
    "call    exit",
    "{ Does not return }",
    "call    sub_875b0",
    "test    eax, eax",
    "je      0x79a80",
    "lea     rax, [rel return_catch_value]",
    "mov     edx, dword [rax]",
    "jmp     0x79ab0"
  ]
}
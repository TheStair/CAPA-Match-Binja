{
  "address": "0xa8950",
  "rules": [
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "mov     r12, rsi",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "call    __errno_location",
    "mov     dword [rax], 0x0",
    "cmp     byte [rbx], 0x54",
    "je      0xa89f0",
    "cmp     byte [rbx+0xa], 0x0",
    "je      0xa8c50",
    "mov     r13, rax",
    "movzx   eax, byte [rbx+0x3]",
    "cmp     al, 0x41",
    "je      0xa8b58",
    "mov     rdi, qword [rel data_168de0]",
    "test    rdi, rdi",
    "je      0xa8c61",
    "mov     rdi, qword [rel data_168dd8]",
    "test    rdi, rdi",
    "je      0xa8a0b",
    "mov     rdi, qword [rel data_168de8]",
    "test    rdi, rdi",
    "je      0xa8b69",
    "cmp     al, 0x43",
    "je      0xa8a68",
    "test    r12, r12",
    "je      0xa8c97",
    "call    free",
    "test    r12, r12",
    "je      0xa8a41",
    "call    free",
    "test    r12, r12",
    "je      0xa8cc8",
    "call    free",
    "movzx   eax, byte [rbx+0x4]",
    "cmp     al, 0x54",
    "je      0xa8d00",
    "cmp     al, 0x4d",
    "je      0xa8ad0",
    "mov     rsi, qword [rel data_168dd8]",
    "mov     qword [rel data_168de0], r12",
    "test    rsi, rsi",
    "je      0xa8a80",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xa8ec5",
    "mov     rdi, qword [rel data_168de0]",
    "mov     qword [rel data_168dd8], r12",
    "test    rdi, rdi",
    "je      0xa8a80",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xa8ec5",
    "mov     edi, 0x1",
    "call    malloc",
    "test    rax, rax",
    "je      0xa8ed6",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0xa8ec5",
    "mov     rax, qword [rel data_168de8]",
    "test    rax, rax",
    "je      0xa8d15",
    "cmp     al, 0x4f",
    "je      0xa8db0",
    "cmp     byte [rbx+0x4], 0x45",
    "jne     0xa8a80",
    "cmp     al, 0x4e",
    "je      0xa8a98",
    "mov     ebx, 0x1",
    "cmp     byte [rsi], 0x0",
    "je      0xa8a80",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rcx, rbx",
    "mov     rdx, rbx",
    "call    __memcpy_chk",
    "mov     r12, rax",
    "cmp     byte [rdi], 0x0",
    "je      0xa8a80",
    "mov     rsi, r12",
    "mov     rcx, rbx",
    "mov     rdx, rbx",
    "call    __memcpy_chk",
    "mov     r12, rax",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rel data_168de8], rax",
    "mov     byte [rax], 0x0",
    "mov     rcx, rbx",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "call    __memcpy_chk",
    "cmp     byte [rax], 0x0",
    "mov     qword [rel data_168de8], rax",
    "mov     r12, rax",
    "mov     rbx, rax",
    "je      0xa8ce5",
    "lea     rdi, [rel data_12043a]  {\"LC_CTYPE\"}",
    "call    get_locale_var",
    "xor     edi, edi",
    "mov     rsi, rax",
    "call    setlocale",
    "mov     r12, rax",
    "call    sub_a7090",
    "call    __ctype_get_mb_cur_max",
    "lea     rdx, [rel locale_mb_cur_max]",
    "mov     dword [rdx], eax",
    "test    r12, r12",
    "je      0xa8d54",
    "cmp     byte [rax], 0x0",
    "jne     0xa8a80",
    "mov     rax, qword [rel data_168de8]",
    "test    rax, rax",
    "je      0xa8dc5",
    "nop     dword [rax]",
    "mov     rax, qword [rel data_168de8]",
    "test    rax, rax",
    "je      0xa8ae7",
    "cmp     byte [rbx+0x4], 0x55",
    "jne     0xa8a80",
    "cmp     al, 0x54",
    "jne     0xa8a80",
    "mov     rdi, r12",
    "call    bindtextdomain",
    "jmp     0xa8a80",
    "mov     rsi, r12",
    "call    bindtextdomain",
    "jmp     0xa8a80",
    "call    sub_a7090",
    "call    __ctype_get_mb_cur_max",
    "lea     rdx, [rel locale_mb_cur_max]",
    "mov     dword [rdx], eax",
    "cmp     byte [r12], 0x0",
    "jne     0xa8df0",
    "call    sub_a7c00",
    "mov     r12, qword [rel data_168de8]",
    "mov     ebx, eax",
    "jmp     0xa8bd1",
    "mov     rsi, rax",
    "mov     edi, 0x6",
    "call    setlocale",
    "test    rax, rax",
    "je      0xa8e50",
    "xor     esi, esi",
    "xor     edi, edi",
    "call    mblen",
    "lea     rdx, [rel locale_shiftstates]",
    "mov     dword [rdx], eax",
    "mov     eax, dword [rel data_168da0]",
    "test    eax, eax",
    "je      0xa8d8d",
    "call    sub_1123b0",
    "lea     rdx, [rel locale_utf8locale]",
    "mov     dword [rdx], eax",
    "lea     rdi, [rel data_12042f]  {\"LC_COLLATE\"}",
    "call    get_locale_var",
    "mov     edi, 0x3",
    "mov     rsi, rax",
    "call    setlocale",
    "mov     r12, rax",
    "jmp     0xa8b08",
    "cmp     byte [rax], 0x0",
    "jne     0xa8a80",
    "lea     rdi, [rel data_120443]  {\"LC_MESSAGES\"}",
    "call    get_locale_var",
    "mov     edi, 0x5",
    "mov     rsi, rax",
    "call    setlocale",
    "mov     r12, rax",
    "nop     dword [rax+rax]",
    "cmp     byte [rax], 0x0",
    "jne     0xa8a80",
    "mov     rax, qword [rel data_168de8]",
    "test    rax, rax",
    "je      0xa8aaf",
    "cmp     byte [rbx+0x4], 0x49",
    "jne     0xa8a80",
    "call    sub_1123b0",
    "lea     rdx, [rel locale_utf8locale]",
    "mov     dword [rdx], eax",
    "jmp     0xa8bef",
    "xor     esi, esi",
    "xor     edi, edi",
    "call    mblen",
    "lea     rdx, [rel locale_shiftstates]",
    "mov     dword [rdx], eax",
    "mov     edx, dword [rel data_168da0]",
    "test    edx, edx",
    "je      0xa8c28",
    "mov     edi, dword [r13]",
    "test    edi, edi",
    "jne     0xa8e98",
    "mov     ebx, 0x1",
    "mov     dword [rel data_168da0], 0x0",
    "mov     dword [rel data_168d94], 0x0",
    "jmp     0xa8b08",
    "mov     rdi, qword [rel data_168d98]",
    "cmp     rdi, 0xffffffffffffffff",
    "je      0xa8d8d",
    "test    r12, r12",
    "jne     0xa8a80",
    "mov     edi, dword [r13]",
    "test    edi, edi",
    "jne     0xa8e08",
    "lea     rdi, [rel data_12044f]  {\"LC_NUMERIC\"}",
    "call    get_locale_var",
    "mov     edi, 0x1",
    "mov     rsi, rax",
    "call    setlocale",
    "mov     r12, rax",
    "jmp     0xa8b08",
    "cmp     byte [rax], 0x0",
    "jne     0xa8a80",
    "mov     rax, qword [rel data_168de8]",
    "test    rax, rax",
    "je      0xa89c5",
    "mov     dword [rel data_168da0], 0x0",
    "mov     eax, ebx",
    "mov     dword [rel data_168d94], 0x0",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "mov     rdi, qword [rel data_168d98]",
    "cmp     rdi, 0xffffffffffffffff",
    "je      0xa8c28",
    "call    strerror",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133a10]  {\"setlocale: LC_ALL: cannot change\u2026\"}",
    "mov     r12, rax",
    "call    dcgettext",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_warning",
    "jmp     0xa8e78",
    "lea     rsi, [rel data_1339e0]  {\"setlocale: LC_ALL: cannot change\u2026\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_warning",
    "call    iconv_close",
    "mov     qword [rel data_168d98], 0xffffffffffffffff",
    "call    strerror",
    "mov     rdi, rbx",
    "mov     r13, rax",
    "call    get_locale_var",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133a78]  {\"setlocale: %s: cannot change loc\u2026\"}",
    "xor     edi, edi",
    "mov     r12, rax",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rcx, r13",
    "mov     rdx, r12",
    "mov     rdi, rax",
    "xor     eax, eax",
    "xor     ebx, ebx",
    "call    internal_warning",
    "jmp     0xa8a85",
    "mov     rdi, rbx",
    "call    get_locale_var",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133a48]  {\"setlocale: %s: cannot change loc\u2026\"}",
    "xor     edi, edi",
    "mov     r12, rax",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdx, r12",
    "xor     ebx, ebx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_warning",
    "jmp     0xa8a85",
    "lea     rdi, [rel data_12045a]  {\"LC_TIME\"}",
    "call    get_locale_var",
    "mov     edi, 0x2",
    "mov     rsi, rax",
    "call    setlocale",
    "mov     r12, rax",
    "jmp     0xa8b08",
    "cmp     byte [rax], 0x0",
    "jne     0xa8a80",
    "call    iconv_close",
    "mov     qword [rel data_168d98], 0xffffffffffffffff",
    "call    sub_a7090",
    "xor     ebx, ebx",
    "call    __ctype_get_mb_cur_max",
    "lea     rdx, [rel locale_mb_cur_max]",
    "mov     dword [rdx], eax",
    "jmp     0xa8bef",
    "add     rsp, 0x8",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    "
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
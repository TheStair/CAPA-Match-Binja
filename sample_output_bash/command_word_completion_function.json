{
  "address": "0xa4960",
  "rules": [
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "get file attributes",
    "PEB access/684066f105bd43c0a5be1ea6f2b60301",
    "contain loop",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "encrypt data using AES MixColumns step/51f5821f8bb24d35a0bb7f6d3fb45f3a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check if file exists/e724fb9dd0e04bc2af009f8be857642c/229a7b83bcc7454aa2d6f8d97a1a725e",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "push    r14 {__saved_r14}",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "mov     rbx, rdi",
    "sub     rsp, 0xd8",
    "mov     dword [rbp-0xf8 {var_100}], esi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38 {var_40}], rax",
    "xor     eax, eax  {0x0}",
    "test    esi, esi",
    "jne     0xa4d70",
    "mov     r13d, dword [rel data_168bdc]",
    "cmp     r13d, 0x2",
    "je      0xa4f09",
    "lea     rax, [rel rl_filename_stat_hook]",
    "lea     rcx, [rel sub_a2e60]",
    "mov     rdi, qword [rel data_168be8]",
    "mov     qword [rax], rcx  {sub_a2e60}  {rl_filename_stat_hook}",
    "mov     rax, qword [rel data_168bf0]",
    "test    rax, rax",
    "je      0xa49d0",
    "mov     r14, qword [rel data_168b78]",
    "test    r14, r14",
    "je      0xa55b0",
    "jg      0xa5490",
    "test    rdi, rdi",
    "je      0xa49da",
    "cmp     rax, rdi",
    "je      0xa49d5",
    "add     dword [rel data_168bdc], 0x1",
    "xor     r15d, r15d  {0x0}",
    "mov     dword [rel data_168b80], 0x0",
    "jmp     0xa54a1",
    "movsxd  rax, dword [rel data_168ba8]",
    "mov     esi, dword [rel data_168bcc]",
    "mov     r13, qword [rel data_168be8]",
    "mov     qword [rbp-0xe8 {var_f0_2}], rax",
    "mov     r9, rax",
    "mov     eax, dword [rel data_168b80]",
    "add     eax, 0x1",
    "movsxd  r15, eax",
    "mov     rdx, qword [r14+r15*8-0x8]",
    "test    rdx, rdx",
    "je      0xa55b0",
    "mov     r15d, dword [rel data_168b80]",
    "cmp     r13d, 0x3",
    "jne     0xa5121",
    "test    r13d, r13d",
    "je      0xa5000",
    "mov     dword [rel data_168be0], 0x0",
    "mov     rdi, rbx",
    "mov     dword [rel data_168bdc], 0x0",
    "call    absolute_pathname",
    "test    eax, eax",
    "je      0xa4e90",
    "call    free",
    "mov     rdi, rax",
    "call    free",
    "mov     rdi, qword [rel data_168be8]",
    "lea     rax, [rel num_shell_builtins]",
    "mov     r14d, dword [rax]  {num_shell_builtins}",
    "cmp     r15d, r14d",
    "jge     0xa5110",
    "mov     dword [rel data_168b80], eax",
    "mov     r12, qword [rdx]",
    "test    esi, esi",
    "jne     0xa4f84",
    "mov     r12d, dword [rel data_168bb8]",
    "test    r12d, r12d",
    "je      0xa51f0",
    "mov     r15, qword [rel data_168b70]",
    "test    r15, r15",
    "je      0xa5730",
    "cmp     r13d, 0x1",
    "jne     0xa5121",
    "mov     esi, 0x2f",
    "mov     rdi, rbx",
    "call    strchr",
    "test    rax, rax",
    "jne     0xa49fe",
    "xor     eax, eax  {0x0}",
    "add     dword [rel data_168bdc], 0x1",
    "mov     dword [rel data_168b80], 0x0",
    "movsxd  rax, r15d",
    "movsxd  r12, dword [rel data_168ba8]",
    "mov     rsi, qword [rel data_168be8]",
    "lea     r13, [rax+rax*2]",
    "lea     rax, [rel shell_builtins]",
    "shl     r13, 0x4",
    "mov     r8, r12",
    "add     r13, qword [rax]  {shell_builtins}",
    "jmp     0xa54f8",
    "mov     rdx, qword [rbp-0xe8 {var_f0_2}]",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "call    strncasecmp",
    "test    eax, eax",
    "jne     0xa4f68",
    "jmp     0xa4fe4",
    "mov     r8d, dword [rel data_168bd8]",
    "test    r8d, r8d",
    "jne     0xa5910",
    "mov     r11d, dword [rbp-0xf8 {var_100}]",
    "test    r11d, r11d",
    "je      0xa59f2",
    "mov     dword [rel data_168bdc], 0x1",
    "jmp     0xa4da1",
    "movsxd  rax, dword [rel data_168ba8]",
    "mov     esi, dword [rel data_168bcc]",
    "mov     qword [rbp-0xf0 {var_f8}], rax",
    "mov     r9, rax",
    "mov     rax, qword [rel data_168be8]",
    "mov     qword [rbp-0xe8 {var_f0_3}], rax",
    "mov     eax, dword [rel data_168b80]",
    "add     eax, 0x1",
    "movsxd  r14, eax",
    "mov     rdx, qword [r15+r14*8-0x8]",
    "test    rdx, rdx",
    "je      0xa5730",
    "mov     r13d, dword [rel data_168b80]",
    "cmp     byte [rbx], 0x7e",
    "je      0xa49fe",
    "cmp     byte [rax+0x1], 0x6e",
    "jne     0xa4a28",
    "lea     r13, [rel glob_ignore_case]",
    "mov     rdi, qword [rel data_168bc0]",
    "mov     dword [rel data_168bcc], edx",
    "mov     eax, dword [r13]  {glob_ignore_case}",
    "mov     dword [rel data_168bc8], eax",
    "test    rdi, rdi",
    "je      0xa4a5b",
    "cmp     qword [r13+0x8], 0x0",
    "je      0xa54e0",
    "add     r15, 0x1",
    "mov     rax, qword [r14+r15*8-0x8]",
    "test    rax, rax",
    "je      0xa55b0",
    "jmp     0xa4e38",
    "test    r9d, r9d",
    "je      0xa4e38",
    "mov     dword [rel data_168bd8], 0x0",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xa5b64",
    "xor     eax, eax  {0x0}",
    "cmp     qword [rel data_168bd0], 0x0",
    "setne   al",
    "mov     dword [rel data_168b90], eax",
    "je      0xa5604",
    "lea     r13, [rel glob_ignore_case]",
    "jmp     0xa4b88",
    "movsxd  rcx, dword [rel data_168b80]",
    "mov     rax, qword [rel data_168bc0]",
    "mov     rdx, rcx",
    "lea     rax, [rax+rcx*8]",
    "add     edx, 0x1",
    "lea     r15, [rel word_token_alist]",
    "movsxd  rax, r13d",
    "shl     rax, 0x4",
    "mov     r12, qword [r15+rax]",
    "test    r12, r12",
    "je      0xa4ef8",
    "mov     dword [rel data_168b80], eax",
    "mov     r12, qword [rdx]",
    "test    esi, esi",
    "jne     0xa5084",
    "add     dword [rel data_168bdc], 0x1",
    "mov     dword [rel data_168b80], 0x0",
    "movsxd  rcx, dword [rel data_168ba8]",
    "add     r13d, 0x1",
    "mov     rsi, qword [rel data_168be8]",
    "mov     dword [rel data_168b80], r13d",
    "movsxd  r14, r13d",
    "mov     qword [rbp-0xf0 {var_f8}], rcx",
    "test    ecx, ecx",
    "jne     0xa4e08",
    "xor     esi, esi  {0x0}",
    "mov     rdi, rbx",
    "call    bash_tilde_expand",
    "lea     rsi, [rbp-0xd0 {var_d8}]",
    "mov     rdi, rax",
    "mov     r13, rax",
    "call    stat",
    "mov     rdi, r13",
    "test    eax, eax",
    "jne     0xa4ee8",
    "xor     edx, edx  {0x0}",
    "cmp     byte [rax+0x2], 0x0",
    "sete    dl",
    "jmp     0xa4a28",
    "mov     rdi, rbx",
    "call    glob_pattern_p",
    "cmp     eax, 0x1",
    "sete    al",
    "movzx   eax, al",
    "mov     dword [rel data_168bb8], eax",
    "jne     0xa4c00",
    "call    free",
    "mov     qword [rel data_168bc0], 0x0",
    "add     r15d, 0x1",
    "add     r13, 0x30",
    "mov     dword [rel data_168b80], r15d",
    "cmp     r15d, r14d",
    "je      0xa5110",
    "test    byte [r13+0x10], 0x1",
    "je      0xa54e0",
    "mov     dword [rel data_168b80], r15d",
    "mov     r12, qword [rax]",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xa5b38",
    "movzx   eax, byte [r13]",
    "cmp     byte [r12], al",
    "jne     0xa4fc8",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38 {var_40}]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa5a89",
    "mov     rdi, qword [rel data_168b88]",
    "test    rdi, rdi",
    "je      0xa55df",
    "mov     r12, qword [rel data_168b98]",
    "mov     r14d, 0x1",
    "lea     rax, [rel rl_filename_completion_desired]",
    "mov     rdi, qword [rel data_168be8]",
    "xor     esi, esi  {0x0}",
    "mov     dword [rax], 0x1  {rl_filename_completion_desired}",
    "mov     eax, dword [rel data_168bcc]",
    "mov     dword [r13], eax  {glob_ignore_case}",
    "call    shell_glob_filename",
    "mov     edx, dword [rel data_168bc8]",
    "cmp     rax, qword [rel data_157f70]",
    "mov     qword [rel data_168bc0], rax",
    "mov     dword [r13], edx  {glob_ignore_case}",
    "je      0xa59fe",
    "call    file_status",
    "test    al, 0x12",
    "je      0xa5178",
    "jmp     0xa55d0",
    "mov     rdx, qword [rbp-0xf0 {var_f8}]",
    "mov     rsi, qword [rbp-0xe8 {var_f0_3}]",
    "mov     rdi, r12",
    "call    strncasecmp",
    "test    eax, eax",
    "jne     0xa5068",
    "jmp     0xa50f0",
    "movzx   eax, byte [rsi]",
    "cmp     byte [r12], al",
    "jne     0xa4de8",
    "jmp     0xa4e38",
    "call    free",
    "jmp     0xa49fe",
    "mov     eax, dword [rbp-0xb8 {var_c0}]",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "je      0xa5a6b",
    "mov     esi, 0x2f",
    "mov     rdi, rbx",
    "call    strchr",
    "mov     r14, rax",
    "test    rax, rax",
    "jne     0xa4a78",
    "cmp     byte [rbx], 0x7e",
    "je      0xa5830",
    "mov     r9, qword [r13]",
    "test    r8d, r8d",
    "je      0xa5550",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38 {var_40}]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa5a89",
    "add     r15, 0x1",
    "mov     rax, qword [r14+r15*8-0x8]",
    "test    rax, rax",
    "je      0xa55b0",
    "jmp     0xa4fa0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "jmp     0xa4e71",
    "xor     r13d, r13d  {0x0}",
    "jmp     0xa51c8",
    "movsxd  rax, dword [rel data_168b84]",
    "cmp     byte [rdi+rax], 0x0",
    "je      0xa55df",
    "lea     rax, [rel dircomplete_expand]",
    "mov     esi, dword [rax]  {dircomplete_expand}",
    "test    esi, esi",
    "je      0xa5256",
    "mov     r14, qword [rel data_168be8]",
    "mov     esi, 0x2f",
    "mov     dword [rel data_168b90], 0x1",
    "mov     rdi, r14",
    "test    r12, r12",
    "je      0xa55f0",
    "mov     qword [rel data_168bc0], 0x0",
    "jmp     0xa55df",
    "test    rax, rax",
    "je      0xa59fe",
    "mov     rdi, qword [rel data_168bd0]",
    "call    free",
    "movsxd  rax, dword [rel data_168b80]",
    "lea     edx, [rax+0x1]",
    "mov     dword [rel data_168b80], edx",
    "mov     rdx, qword [rel data_168bc0]",
    "mov     rdi, qword [rdx+rax*8]",
    "mov     qword [rel data_168bd0], rdi",
    "test    rdi, rdi",
    "je      0xa55d0",
    "cmp     byte [rbx], 0x7e",
    "mov     r13, qword [rel data_168bd0]",
    "je      0xa5958",
    "lea     rax, [rel glob_ignore_case]",
    "mov     edx, dword [rel data_168bc8]",
    "mov     dword [rax], edx  {glob_ignore_case}",
    "add     r14, 0x1",
    "mov     rax, qword [r15+r14*8-0x8]",
    "test    rax, rax",
    "je      0xa5730",
    "jmp     0xa4e38",
    "test    r9d, r9d",
    "je      0xa4e38",
    "add     r14, 0x1",
    "mov     rax, r14",
    "shl     rax, 0x4",
    "mov     r12, qword [rax+r15-0x10]",
    "test    r12, r12",
    "je      0xa4ef8",
    "mov     rdx, qword [rbp-0xf0 {var_f8}]",
    "mov     rdi, r12",
    "mov     qword [rbp-0xe8 {var_f0_1}], rsi",
    "call    strncmp",
    "mov     rsi, qword [rbp-0xe8 {var_f0_1}]",
    "test    eax, eax",
    "jne     0xa4de8",
    "call    free",
    "mov     eax, 0x1",
    "jmp     0xa4a00",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xa5b4e",
    "xor     esi, esi  {0x0}",
    "mov     rdi, rbx",
    "call    bash_tilde_expand",
    "mov     rdi, rbx",
    "mov     qword [rel data_168be8], rax",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xa5a8e",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "lea     rax, [rel dircomplete_expand]",
    "mov     rdi, r12",
    "mov     eax, dword [rax]  {dircomplete_expand}",
    "test    eax, eax",
    "je      0xa5800",
    "mov     rdi, r9",
    "add     r15d, 0x1",
    "mov     qword [rbp-0xe8 {var_f0_6}], r9",
    "mov     dword [rel data_168b80], r15d",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r9, qword [rbp-0xe8 {var_f0_6}]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0xa5afe",
    "movzx   eax, byte [rsi]",
    "cmp     byte [r9], al",
    "jne     0xa54e0",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "mov     dword [rel data_168b80], r15d",
    "mov     r12, qword [rax]",
    "mov     rdx, qword [rbp-0xe8 {var_f0_2}]",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "mov     dword [rbp-0xf0 {var_f8}], r9d",
    "call    strncmp",
    "mov     r9d, dword [rbp-0xf0 {var_f8}]",
    "test    eax, eax",
    "je      0xa4e38",
    "mov     rdi, r13",
    "mov     rax, qword [rbp-0x38 {var_40}]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa5a89",
    "lea     rsi, [rel data_168b84]",
    "call    extract_colon_unit",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xa55df",
    "lea     rax, [rel rl_directory_completion_hook]",
    "lea     rcx, [rel sub_a2fc0]",
    "mov     qword [rax], rcx  {sub_a2fc0}  {rl_directory_completion_hook}",
    "lea     rax, [rel rl_directory_rewrite_hook]",
    "mov     qword [rax], 0x0  {rl_directory_rewrite_hook}",
    "jmp     0xa5256",
    "call    strchr",
    "test    rax, rax",
    "jne     0xa55df",
    "call    strchr",
    "test    rax, rax",
    "je      0xa5380",
    "mov     dword [rel data_168b80], 0x0",
    "cmp     qword [rax+0x8], 0x0",
    "je      0xa4bf5",
    "mov     rsi, qword [rel data_168bb0]",
    "test    rsi, rsi",
    "je      0xa51c8",
    "mov     dword [rel data_168b80], r14d",
    "mov     r12, qword [rax]",
    "mov     rax, qword [rbp-0xe8 {var_f0_3}]",
    "movzx   eax, byte [rax]",
    "cmp     byte [r12], al",
    "jne     0xa50d4",
    "mov     dword [rel data_168b80], r14d",
    "nop     word [rax+rax]",
    "lea     rdi, [rel data_120c79]  {\"completion-ignore-case\"}",
    "mov     dword [rel data_168bd8], eax",
    "mov     qword [rel data_168bd0], 0x0",
    "call    rl_variable_value",
    "xor     edx, edx  {0x0}",
    "cmp     byte [rax], 0x6f",
    "je      0xa57e8",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r13",
    "mov     rsi, rbx",
    "mov     rdi, r15",
    "mov     r13, r15",
    "call    __strcpy_chk",
    "mov     rdi, r15",
    "mov     qword [rel data_168be8], r15",
    "mov     qword [rel data_168bf0], r15",
    "call    strlen",
    "mov     dword [rel data_168ba8], eax",
    "lea     rax, [rel rl_completion_found_quote]",
    "mov     eax, dword [rax]  {rl_completion_found_quote}",
    "test    eax, eax",
    "je      0xa4c86",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, rbx",
    "mov     rdi, r14",
    "mov     rdx, r12",
    "call    __strcpy_chk",
    "mov     esi, 0x2f",
    "mov     rdi, r14",
    "mov     qword [rel data_168bb0], r14",
    "call    strchr",
    "test    rax, rax",
    "je      0xa59d3",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xa5ae8",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xa5aba",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x38 {var_40}]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa5a89",
    "mov     rdi, r9",
    "mov     rdx, r12",
    "mov     dword [rbp-0xf4 {var_fc_2}], r8d",
    "mov     qword [rbp-0xf0 {var_f8_1}], rsi",
    "mov     qword [rbp-0xe8 {var_f0_5}], r9",
    "call    strncmp",
    "mov     r9, qword [rbp-0xe8 {var_f0_5}]",
    "mov     rsi, qword [rbp-0xf0 {var_f8_1}]",
    "test    eax, eax",
    "mov     r8d, dword [rbp-0xf4 {var_fc_2}]",
    "jne     0xa54e0",
    "add     rsp, 0xd8",
    "mov     rax, r13",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "mov     dword [rel data_168be0], 0x1",
    "movzx   edx, byte [rax]",
    "test    dl, dl",
    "je      0xa5769",
    "mov     dword [rel data_168b90], 0x0",
    "mov     esi, 0x2f",
    "mov     rdi, r12",
    "call    strrchr",
    "test    rax, rax",
    "je      0xa53b6",
    "cmp     byte [rbx], 0x7e",
    "je      0xa5460",
    "mov     edx, 0x1",
    "jmp     0xa5159",
    "lea     rdx, [rel rl_completion_type]",
    "cmp     dword [rdx], 0x9",
    "je      0xa55df  {rl_completion_type}",
    "lea     rbx, [rel dircomplete_expand]",
    "mov     r10d, dword [rbx]  {dircomplete_expand}",
    "test    r10d, r10d",
    "je      0xa5a0e",
    "add     r14, 0x1",
    "mov     rax, qword [r15+r14*8-0x8]",
    "test    rax, rax",
    "je      0xa5730",
    "jmp     0xa50a8",
    "lea     rdi, [rel data_121266]  {\"PATH\"}",
    "call    find_variable",
    "test    rax, rax",
    "je      0xa4c9f",
    "lea     rax, [rel rl_completion_quote_character]",
    "mov     r15d, dword [rax]  {rl_completion_quote_character}",
    "test    r15d, r15d",
    "je      0xa5a4c",
    "mov     rdi, r14",
    "call    free",
    "mov     r15, qword [rel data_168be8]",
    "mov     qword [rel data_168bb0], 0x0",
    "jmp     0xa4ada",
    "mov     byte [rax], 0x0",
    "mov     r15, qword [rel data_168be8]",
    "jmp     0xa4ada",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r14",
    "mov     r15, r14",
    "call    __strcpy_chk",
    "mov     qword [rel data_168be8], r14",
    "jmp     0xa4ada",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r14",
    "call    __strcpy_chk",
    "lea     rdi, [rel data_168be8]",
    "mov     qword [rel data_168be8], r14",
    "call    sub_a2fc0",
    "mov     r15, qword [rel data_168be8]",
    "mov     rdx, rbx",
    "mov     rsi, r9",
    "mov     rdi, r12",
    "jmp     0xa4e74",
    "mov     rdi, rax",
    "call    free",
    "mov     edi, 0x2",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xa5ad0",
    "cmp     dl, 0x7e",
    "je      0xa579b",
    "mov     r14d, 0x1",
    "jmp     0xa5366",
    "lea     r13, [rax+0x1]",
    "mov     eax, dword [rel data_168bcc]",
    "movsxd  rdx, dword [rel data_168ba8]",
    "mov     rsi, r14",
    "mov     rdi, r13",
    "test    eax, eax",
    "jne     0xa5410",
    "lea     rax, [rel dircomplete_expand]",
    "mov     rsi, qword [rel data_168bb0]",
    "mov     ecx, dword [rax]  {dircomplete_expand}",
    "test    ecx, ecx",
    "je      0xa56e0",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xa5b7a",
    "mov     rdi, qword [rax]",
    "mov     dword [rel data_168b80], edx",
    "mov     qword [rel data_168bd0], rdi",
    "test    rdi, rdi",
    "jne     0xa51af",
    "lea     r12, [rel rl_directory_rewrite_hook]",
    "mov     rdi, r13",
    "mov     r14, qword [r12]  {rl_directory_rewrite_hook}",
    "mov     qword [r12], 0x0  {rl_directory_rewrite_hook}",
    "call    sub_a1050",
    "mov     r13, rax",
    "test    r14, r14",
    "je      0xa5986",
    "mov     rdi, r13",
    "call    sub_a1050",
    "mov     r13, rax",
    "mov     dword [rel data_168b80], r14d",
    "mov     r12, qword [rax]",
    "mov     rdx, qword [rbp-0xf0 {var_f8}]",
    "mov     rsi, qword [rbp-0xe8 {var_f0_3}]",
    "mov     rdi, r12",
    "mov     dword [rbp-0xf4 {var_fc_1}], r9d",
    "call    strncmp",
    "mov     r9d, dword [rbp-0xf4 {var_fc_1}]",
    "test    eax, eax",
    "je      0xa4e38",
    "mov     rdi, qword [rel data_168b78]",
    "mov     qword [rel data_168b88], rax",
    "mov     dword [rel data_168bf8], 0x0",
    "mov     dword [rel data_168b84], 0x0",
    "mov     dword [rel data_168b80], 0x0",
    "test    rdi, rdi",
    "je      0xa4cd5",
    "mov     rdi, rax",
    "call    get_variable_value",
    "xor     esi, esi  {0x0}",
    "mov     rdi, r13",
    "call    sub_9ca20",
    "mov     qword [rel data_168bf0], rax",
    "jmp     0xa4c86",
    "lea     rax, [rel rl_completion_found_quote]",
    "mov     qword [rel data_168bf0], r15",
    "mov     eax, dword [rax]  {rl_completion_found_quote}",
    "test    eax, eax",
    "je      0xa4aff",
    "mov     rdi, r15",
    "call    strlen",
    "mov     rdi, qword [rel data_168ba0]",
    "mov     dword [rel data_168ba8], eax",
    "test    rdi, rdi",
    "je      0xa4b25",
    "lea     rax, [rel rl_completion_quote_character]",
    "mov     eax, dword [rax]  {rl_completion_quote_character}",
    "test    eax, eax",
    "je      0xa58a0",
    "add     rsp, 0xd8",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "jmp     __strcpy_chk",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     edi, 0x2e",
    "mov     edx, 0x2e",
    "mov     word [r13], di  {0x2e}",
    "jmp     0xa5646",
    "mov     rdi, r13",
    "xor     esi, esi  {0x0}",
    "call    bash_tilde_expand",
    "mov     rdi, r13",
    "mov     r12, rax",
    "call    free",
    "mov     r13, r12",
    "movzx   edx, byte [r12]",
    "jmp     0xa564f",
    "cmp     dl, 0x2e",
    "je      0xa574f",
    "mov     rdi, r12",
    "call    free",
    "mov     r12, qword [rel data_168b98]",
    "jmp     0xa5234",
    "call    strncasecmp",
    "mov     r14d, 0x1",
    "test    eax, eax",
    "jne     0xa5366",
    "call    strncmp",
    "test    eax, eax",
    "je      0xa5423",
    "lea     rax, [rel rl_directory_rewrite_hook]",
    "mov     rdi, r12",
    "mov     r15, qword [rax]  {rl_directory_rewrite_hook}",
    "mov     qword [rax], 0x0  {rl_directory_rewrite_hook}",
    "call    sub_a1050",
    "mov     r13, rax",
    "test    r15, r15",
    "je      0xa5483",
    "mov     rdi, r12",
    "call    sub_a1050",
    "mov     r13, rax",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r14, r12",
    "mov     rdx, r13",
    "mov     rsi, r12",
    "mov     rdi, r15",
    "mov     r13, r15",
    "call    __strcpy_chk",
    "mov     rdi, qword [rel data_168bd0]",
    "call    free",
    "mov     qword [rel data_168bd0], r13",
    "jmp     0xa51c8",
    "mov     r9d, dword [rbx]  {dircomplete_expand}",
    "test    r9d, r9d",
    "je      0xa5a62",
    "lea     rdi, [rel sub_5aa80]",
    "call    map_over_funcs",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xa4d23",
    "call    free",
    "mov     rdi, r15",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xa5aa4",
    "call    free",
    "mov     r15, qword [rel data_168be8]",
    "mov     rdi, r15",
    "xor     esi, esi  {0x0}",
    "call    sub_9ca20",
    "mov     rdi, qword [rel data_168be8]",
    "mov     r15, rax",
    "mov     qword [rel data_168bf0], rax",
    "call    free",
    "mov     qword [rel data_168be8], r15",
    "jmp     0xa4aff",
    "cmp     byte [r13+0x1], 0x0",
    "jne     0xa5658",
    "mov     rdi, qword [rel data_168b98]",
    "mov     r12, qword [rel data_168ba0]",
    "test    rdi, rdi",
    "je      0xa5679",
    "mov     rdi, r12",
    "mov     esi, r14d",
    "call    rl_filename_completion_function",
    "cmp     dword [rel data_168bdc], 0x4",
    "mov     qword [rel data_168bd0], rax",
    "mov     r12, rax",
    "je      0xa53c0",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xa5b1b",
    "mov     r14, qword [rel data_168bd0]",
    "jmp     0xa52c3",
    "lea     rax, [rel dircomplete_expand]",
    "mov     r14, qword [rel data_168bd0]",
    "mov     edx, dword [rax]  {dircomplete_expand}",
    "test    edx, edx",
    "je      0xa5740",
    "mov     rdx, qword [rbp-0xe8 {var_f0_4}]",
    "mov     r12d, dword [rel data_168be0]",
    "mov     esi, 0x1",
    "mov     rdi, r14",
    "mov     byte [rbp-0xd9 {var_e1}], 0x0",
    "call    sub_a4470",
    "lea     rdi, [rbp-0xd8 {var_e0}]",
    "mov     qword [rbp-0xd8 {var_e0}], rax",
    "call    sub_a2fc0",
    "test    r12d, r12d",
    "mov     r12, qword [rbp-0xd8 {var_e0}]",
    "mov     rdi, r12",
    "je      0xa53f8",
    "call    file_status",
    "xor     r15d, r15d  {0x0}",
    "test    al, 0x12",
    "setne   r15b",
    "jmp     0xa5332",
    "call    file_status",
    "mov     r15d, eax",
    "test    al, 0x10",
    "je      0xa5322",
    "mov     qword [r12], r14  {rl_directory_rewrite_hook}",
    "jmp     0xa5986",
    "lea     rax, [rel rl_directory_completion_hook]",
    "mov     qword [rax], r14  {rl_directory_completion_hook}",
    "jmp     0xa5986",
    "mov     rdi, qword [rel data_168b70]",
    "mov     qword [rel data_168b78], r13",
    "test    rdi, rdi",
    "je      0xa4d3b",
    "cmp     qword [rax], 0x0",
    "je      0xa5a82",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rdi, r14",
    "mov     rsi, r15",
    "mov     r12, r14",
    "call    __strcpy_chk",
    "mov     qword [rel data_168ba0], r14",
    "mov     qword [rel data_168b98], r14",
    "mov     r14d, dword [rel data_168bb8]",
    "mov     dword [rel data_168b90], 0x0",
    "test    r14d, r14d",
    "je      0xa57c0",
    "mov     dword [rel data_168bf8], 0x1",
    "jmp     0xa5658",
    "test    r12, r12",
    "jne     0xa599e",
    "cmp     rdi, r12",
    "je      0xa599e",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r14",
    "mov     rsi, r13",
    "mov     rdi, r15",
    "mov     r13, r15",
    "call    __strcpy_chk",
    "mov     r14, r12",
    "jmp     0xa52c3",
    "lea     rax, [rel rl_directory_rewrite_hook]",
    "mov     qword [rax], r15  {rl_directory_rewrite_hook}",
    "jmp     0xa52c3",
    "lea     rax, [rel rl_directory_completion_hook]",
    "mov     qword [rax], r15  {rl_directory_completion_hook}",
    "jmp     0xa52c3",
    "mov     rdi, r12",
    "call    free",
    "mov     r12, qword [rel data_168bd0]",
    "test    r15d, r15d",
    "jne     0xa59ab",
    "and     r15d, 0x12",
    "cmp     r15d, 0x2",
    "sete    r15b",
    "movzx   r15d, r15b",
    "call    __errno_location",
    "mov     dword [rax], 0x15",
    "lea     rax, [rel aliases]",
    "mov     rax, qword [rax]  {aliases}",
    "test    rax, rax",
    "je      0xa5a7a",
    "call    free",
    "xor     esi, esi  {0x0}",
    "jmp     0xa4d0f",
    "mov     edx, 0x1",
    "nop     dword [rax+rax]",
    "lea     r13, [rel dircomplete_expand]",
    "mov     eax, dword [r13]  {dircomplete_expand}",
    "test    eax, eax",
    "jne     0xa58d0",
    "mov     dword [rel data_168bdc], 0x5",
    "mov     rdi, r12",
    "call    free",
    "jmp     0xa5682",
    "mov     rsi, qword [rel data_168be8]",
    "xor     edx, edx  {0x0}",
    "mov     rdi, r13",
    "call    sh_makepath",
    "lea     rsi, [rel data_120c90]",
    "mov     rdi, rax",
    "mov     qword [rel data_168ba0], rax",
    "mov     r12, rax",
    "call    strpbrk",
    "test    rax, rax",
    "je      0xa56c5",
    "call    free",
    "cmp     r12, r14",
    "je      0xa59b8",
    "mov     rdi, r13",
    "call    free",
    "cmp     r12, r14",
    "je      0xa535f",
    "xor     r14d, r14d  {0x0}",
    "jmp     0xa4d5f",
    "mov     r13d, dword [rax+0xc]",
    "test    r13d, r13d",
    "je      0xa4d5f",
    "lea     rcx, [rel sub_5acd0]",
    "mov     edx, 0x8",
    "mov     rdi, r13",
    "call    qsort",
    "mov     rsi, rdx",
    "add     rdx, 0x1",
    "cmp     qword [r13+rdx*8-0x8], 0x0",
    "jne     0xa4d00",
    "mov     rdi, r12",
    "call    path_dot_or_dotdot",
    "test    eax, eax",
    "je      0xa57d3",
    "mov     dword [rel data_168bdc], 0x4",
    "jmp     0xa5226",
    "mov     rdi, r13",
    "mov     qword [rel data_168b98], r12",
    "call    free",
    "mov     r14d, dword [rel data_168b90]",
    "jmp     0xa5226",
    "mov     rdi, r12",
    "xor     edx, edx  {0x0}",
    "lea     rsi, [rel data_168c20]",
    "call    sh_backslash_quote",
    "mov     r12, rax",
    "mov     rdi, r12",
    "call    free",
    "lea     rax, [rel data_122e02]",
    "mov     qword [rel data_168bd0], rax  {data_122e02}",
    "jmp     0xa51c8",
    "mov     rdi, r14",
    "call    free",
    "mov     r14d, dword [rel data_168b90]",
    "mov     rdi, r14",
    "call    free",
    "mov     qword [rel data_168b70], r14",
    "nop     word [rax+rax]",
    "call    sub_91440",
    "mov     r14, rax",
    "lea     rax, [rel rl_directory_rewrite_hook]",
    "lea     rcx, [rel sub_a2fc0]",
    "mov     dword [r13], 0x1  {dircomplete_expand}",
    "mov     qword [rax], rcx  {sub_a2fc0}  {rl_directory_rewrite_hook}",
    "lea     rax, [rel rl_directory_completion_hook]",
    "mov     qword [rax], 0x0  {rl_directory_completion_hook}",
    "jmp     0xa57d3",
    "lea     rax, [rbp-0xd9 {var_e1}]",
    "mov     qword [rbp-0xe8 {var_f0_4}], rax {var_e1}"
  ],
  "high level IL": [
    "void* fsbase",
    "int64_t rax = *(fsbase + 0x28)",
    "char* r12_3",
    "int32_t r14_3",
    "if (arg2 == 0)",
    "int64_t rdi = data_168be8",
    "rl_filename_stat_hook = sub_a2e60",
    "int64_t rax_2 = data_168bf0",
    "if (rax_2 == 0)",
    "goto label_a49d0",
    "if (rax_2 == rdi)",
    "free(rdi)",
    "free(rax_2)",
    "rdi = data_168be8",
    "label_a49d0:",
    "if (rdi != 0)",
    "free(rdi)",
    "data_168be0 = 0",
    "data_168bdc = 0",
    "int32_t rax_4",
    "if (absolute_pathname(arg1) == 0)",
    "if (strchr(arg1, 0x2f) != 0 || *arg1 == 0x7e)",
    "rax_4 = 0",
    "char* rax_38 = bash_tilde_expand(arg1, 0)",
    "void var_d8",
    "int32_t var_c0",
    "if (stat(rax_38, &var_d8) != 0 || (var_c0 & 0xf000) != 0x4000)",
    "free(rax_38)",
    "rax_4 = 0",
    "free(rax_38)",
    "rax_4 = 1",
    "rax_4 = 0",
    "data_168bd8 = rax_4",
    "data_168bd0 = 0",
    "char* rax_5 = rl_variable_value(\"completion-ignore-case\")",
    "int32_t rdx_1 = 0",
    "if (*rax_5 == 0x6f && rax_5[1] == 0x6e)",
    "rdx_1.b = rax_5[2] == 0",
    "int64_t rdi_3 = data_168bc0",
    "data_168bcc = rdx_1",
    "data_168bc8 = glob_ignore_case",
    "if (rdi_3 != 0)",
    "free(rdi_3)",
    "data_168bc0 = 0",
    "int32_t rax_7 = glob_pattern_p(arg1)",
    "bool cond:2_1 = rax_7 != 1",
    "rax_7.b = rax_7 == 1",
    "data_168bb8 = zx.d(rax_7.b)",
    "char* rax_19",
    "char* r14_4",
    "if (cond:2_1)",
    "rax_19 = strchr(arg1, 0x2f)",
    "r14_4 = rax_19",
    "if (not(cond:2_1) || rax_19 != 0)",
    "char* r15_1",
    "if (*arg1 == 0x7e)",
    "data_168be8 = bash_tilde_expand(arg1, 0)",
    "uint64_t r12_13 = strlen(arg1) + 1",
    "char* rax_100 = malloc(r12_13)",
    "if (rax_100 == 0)",
    "sub_a7f00()",
    "noreturn",
    "__strcpy_chk(rax_100, arg1, r12_13)",
    "data_168bb0 = rax_100",
    "char* rax_101 = strchr(rax_100, 0x2f)",
    "if (rax_101 == 0)",
    "free(rax_100)",
    "r15_1 = data_168be8",
    "data_168bb0 = 0",
    "*rax_101 = 0",
    "r15_1 = data_168be8",
    "uint64_t r12_1 = strlen(arg1) + 1",
    "if (dircomplete_expand == 0)",
    "char* rax_97 = malloc(r12_1)",
    "if (rax_97 == 0)",
    "sub_a7f00()",
    "noreturn",
    "r15_1 = rax_97",
    "__strcpy_chk(rax_97, arg1, r12_1)",
    "data_168be8 = rax_97",
    "char* rax_11 = malloc(r12_1)",
    "if (rax_11 == 0)",
    "sub_a7f00()",
    "noreturn",
    "__strcpy_chk(rax_11, arg1, r12_1)",
    "data_168be8 = rax_11",
    "sub_a2fc0(&data_168be8)",
    "r15_1 = data_168be8",
    "data_168bf0 = r15_1",
    "if (rl_completion_found_quote != 0 && rl_completion_quote_character == 0)",
    "char* rax_102 = sub_9ca20(r15_1, 0)",
    "int64_t rdi_76 = data_168be8",
    "r15_1 = rax_102",
    "data_168bf0 = rax_102",
    "free(rdi_76)",
    "data_168be8 = r15_1",
    "int32_t rax_14 = strlen(r15_1)",
    "int64_t rdi_9 = data_168ba0",
    "data_168ba8 = rax_14",
    "if (rdi_9 != 0)",
    "free(rdi_9)",
    "r15_1 = data_168be8",
    "uint64_t r12_2 = strlen(r15_1) + 1",
    "char* rax_16 = malloc(r12_2)",
    "if (rax_16 == 0)",
    "sub_a7f00()",
    "noreturn",
    "r12_3 = rax_16",
    "__strcpy_chk(rax_16, r15_1, r12_2)",
    "data_168ba0 = rax_16",
    "data_168b98 = rax_16",
    "r14_3 = data_168bb8",
    "data_168b90 = 0",
    "if (r14_3 != 0)",
    "data_168bdc = 5",
    "goto label_a4b8f",
    "if (dircomplete_expand != 0 && path_dot_or_dotdot(r12_3) != 0)",
    "dircomplete_expand = 1",
    "rl_directory_rewrite_hook = sub_a2fc0",
    "rl_directory_completion_hook = 0",
    "data_168bdc = 4",
    "goto label_a523a",
    "uint64_t r13_1 = strlen(arg1) + 1",
    "char* rax_21 = malloc(r13_1)",
    "if (rax_21 == 0)",
    "sub_a7f00()",
    "noreturn",
    "__strcpy_chk(rax_21, arg1, r13_1)",
    "data_168be8 = rax_21",
    "data_168bf0 = rax_21",
    "data_168ba8 = strlen(rax_21)",
    "if (rl_completion_found_quote != 0 && rl_completion_quote_character == 0)",
    "data_168bf0 = sub_9ca20(rax_21, 0)",
    "struct Elf64_Header* rax_24 = find_variable(\"PATH\")",
    "if (rax_24 != 0)",
    "rax_24 = get_variable_value(rax_24)",
    "int64_t rdi_20 = data_168b78",
    "data_168b88 = rax_24",
    "data_168bf8 = 0",
    "data_168b84 = 0",
    "data_168b80 = 0",
    "if (rdi_20 != 0)",
    "free(rdi_20)",
    "uint64_t b = map_over_funcs(sub_5aa80)",
    "if (b != 0)",
    "uint64_t n",
    "if (*b == 0)",
    "n = 0",
    "uint64_t n_1 = 1",
    "n = n_1",
    "n_1 += 1",
    "do while (*(b + (n_1 << 3) - 8) != 0)",
    "qsort(b, n, 8, sub_5acd0)",
    "int64_t rdi_22 = data_168b70",
    "data_168b78 = b",
    "if (rdi_22 != 0)",
    "free(rdi_22)",
    "uint64_t aliases_1 = aliases",
    "if (aliases_1 == 0)",
    "r14_4 = nullptr",
    "if (*(aliases_1 + 0xc) != 0)",
    "r14_4 = sub_91440()",
    "data_168b70 = r14_4",
    "goto label_a4d70",
    "label_a4d70:",
    "int32_t r13_5 = data_168bdc",
    "if (r13_5 == 2)",
    "goto label_a4f09",
    "int32_t r15_11",
    "if (r13_5 s> 2)",
    "r15_11 = data_168b80",
    "if (r13_5 == 3)",
    "goto label_a54a8",
    "char* r12_4",
    "if (r13_5 == 0)",
    "int64_t r15_5 = data_168b70",
    "uint64_t rax_50",
    "char* rax_51",
    "int32_t rax_53",
    "char** rdx_13",
    "int32_t rsi_10",
    "int32_t i",
    "int64_t r14_7",
    "if (r15_5 != 0)",
    "rax_50 = sx.q(data_168ba8)",
    "rsi_10 = data_168bcc",
    "i = rax_50.d",
    "rax_51 = data_168be8",
    "rax_53 = data_168b80 + 1",
    "r14_7 = sx.q(rax_53)",
    "rdx_13 = *(r15_5 + (r14_7 << 3) - 8)",
    "if (r15_5 == 0 || rdx_13 == 0)",
    "label_a5730:",
    "data_168bdc = 1",
    "goto label_a4daf",
    "data_168b80 = rax_53",
    "r12_4 = *rdx_13",
    "if (rsi_10 != 0)",
    "while (strncasecmp(r12_4, rax_51, rax_50) != 0)",
    "r14_7 += 1",
    "char** rax_54 = *(r15_5 + (r14_7 << 3) - 8)",
    "if (rax_54 == 0)",
    "goto label_a5730",
    "data_168b80 = r14_7.d",
    "r12_4 = *rax_54",
    "while (i != 0)",
    "if (*r12_4 == *rax_51 && strncmp(r12_4, rax_51, rax_50) == 0)",
    "break",
    "r14_7 += 1",
    "char** rax_57 = *(r15_5 + (r14_7 << 3) - 8)",
    "if (rax_57 == 0)",
    "goto label_a5730",
    "data_168b80 = r14_7.d",
    "r12_4 = *rax_57",
    "goto label_a4e40",
    "if (r13_5 == 1)",
    "r13_5 = data_168b80",
    "label_a4daf:",
    "r12_4 = (&word_token_alist)[sx.q(r13_5) * 2]",
    "if (r12_4 != 0)",
    "uint64_t rcx_1 = sx.q(data_168ba8)",
    "char* rsi_3 = data_168be8",
    "data_168b80 = r13_5 + 1",
    "int64_t r14_5 = sx.q(r13_5 + 1)",
    "if (rcx_1.d != 0)",
    "while (*r12_4 != *rsi_3 || strncmp(r12_4, rsi_3, rcx_1) != 0)",
    "r14_5 += 1",
    "r12_4 = *((r14_5 << 4) + 0x159550)",
    "if (r12_4 == 0)",
    "goto label_a4ef8",
    "data_168b80 = r14_5.d",
    "goto label_a4e40",
    "label_a4ef8:",
    "data_168bdc += 1",
    "data_168b80 = 0",
    "label_a4f09:",
    "int64_t r14_6 = data_168b78",
    "uint64_t rax_42",
    "int32_t rax_44",
    "char** rdx_10",
    "int32_t rsi_7",
    "int32_t i_1",
    "char* r13_9",
    "int64_t r15_4",
    "if (r14_6 != 0)",
    "rax_42 = sx.q(data_168ba8)",
    "rsi_7 = data_168bcc",
    "r13_9 = data_168be8",
    "i_1 = rax_42.d",
    "rax_44 = data_168b80 + 1",
    "r15_4 = sx.q(rax_44)",
    "rdx_10 = *(r14_6 + (r15_4 << 3) - 8)",
    "if (r14_6 != 0 && rdx_10 != 0)",
    "data_168b80 = rax_44",
    "r12_4 = *rdx_10",
    "if (rsi_7 != 0)",
    "while (strncasecmp(r12_4, r13_9, rax_42) != 0)",
    "r15_4 += 1",
    "char** rax_45 = *(r14_6 + (r15_4 << 3) - 8)",
    "if (rax_45 == 0)",
    "goto label_a55b0",
    "data_168b80 = r15_4.d",
    "r12_4 = *rax_45",
    "while (i_1 != 0)",
    "if (*r12_4 == *r13_9)",
    "uint64_t var_f8",
    "var_f8.d = i_1",
    "i_1 = var_f8.d",
    "if (strncmp(r12_4, r13_9, rax_42) == 0)",
    "break",
    "r15_4 += 1",
    "char** rax_48 = *(r14_6 + (r15_4 << 3) - 8)",
    "if (rax_48 == 0)",
    "goto label_a55b0",
    "data_168b80 = r15_4.d",
    "r12_4 = *rax_48",
    "label_a4e40:",
    "uint64_t bytes = strlen(r12_4) + 1",
    "char* rax_33 = malloc(bytes)",
    "if (rax_33 == 0)",
    "sub_a7f00()",
    "noreturn",
    "*(fsbase + 0x28)",
    "if (rax != *(fsbase + 0x28))",
    "__stack_chk_fail()",
    "noreturn",
    "return __strcpy_chk(rax_33, r12_4, bytes) __tailcall",
    "label_a55b0:",
    "data_168bdc += 1",
    "r15_11 = 0",
    "data_168b80 = 0",
    "label_a54a8:",
    "uint32_t num_shell_builtins_1 = num_shell_builtins",
    "if (r15_11 s< num_shell_builtins_1)",
    "uint64_t r12_9 = sx.q(data_168ba8)",
    "char* rsi_19 = data_168be8",
    "char** r13_14 = sx.q(r15_11) * 0x30 + shell_builtins",
    "char* r9_2",
    "while (true)",
    "if (r13_14[1] != 0 && (r13_14[2].b & 1) != 0)",
    "r9_2 = *r13_14",
    "if (r12_9.d == 0)",
    "break",
    "if (*r9_2 == *rsi_19 && strncmp(r9_2, rsi_19, r12_9) == 0)",
    "break",
    "r15_11 += 1",
    "r13_14 = &r13_14[6]",
    "data_168b80 = r15_11",
    "if (r15_11 == num_shell_builtins_1)",
    "goto label_a5110",
    "data_168b80 = r15_11 + 1",
    "uint64_t bytes_1 = strlen(r9_2) + 1",
    "char* rax_84 = malloc(bytes_1)",
    "if (rax_84 == 0)",
    "sub_a7f00()",
    "noreturn",
    "*(fsbase + 0x28)",
    "if (rax != *(fsbase + 0x28))",
    "__stack_chk_fail()",
    "noreturn",
    "return __strcpy_chk(rax_84, r9_2, bytes_1) __tailcall",
    "label_a5110:",
    "data_168bdc += 1",
    "data_168b80 = 0",
    "char* result",
    "if (data_168bb8 == 0)",
    "if (data_168bd8 != 0)",
    "data_168bd8 = 0",
    "uint64_t bytes_2 = strlen(arg1) + 1",
    "char* rax_105 = malloc(bytes_2)",
    "if (rax_105 == 0)",
    "sub_a7f00()",
    "noreturn",
    "*(fsbase + 0x28)",
    "if (rax != *(fsbase + 0x28))",
    "__stack_chk_fail()",
    "noreturn",
    "return __strcpy_chk(rax_105, arg1, bytes_2) __tailcall",
    "int64_t temp0_1 = data_168bd0",
    "int32_t rax_66",
    "rax_66.b = temp0_1 != 0",
    "data_168b90 = rax_66",
    "if (temp0_1 != 0)",
    "r12_3 = data_168b98",
    "r14_3 = 1",
    "goto label_a523a",
    "while (true)",
    "char* rdi_59 = data_168b88",
    "if (rdi_59 == 0)",
    "goto label_a55df_2",
    "if (rdi_59[sx.q(data_168b84)] == 0)",
    "goto label_a55df_2",
    "char* rax_89 = extract_colon_unit(rdi_59, &data_168b84)",
    "char* r13_15 = rax_89",
    "if (rax_89 == 0)",
    "goto label_a55df_2",
    "data_168be0 = 1",
    "char rdx_25 = *rax_89",
    "if (rdx_25 == 0)",
    "free(rax_89)",
    "char* rax_94 = malloc(2)",
    "r13_15 = rax_94",
    "if (rax_94 == 0)",
    "sub_a7f00()",
    "noreturn",
    "rdx_25 = 0x2e",
    "*r13_15 = 0x2e",
    "if (rdx_25 == 0x7e)",
    "char* rax_95 = bash_tilde_expand(r13_15, 0)",
    "free(r13_15)",
    "r13_15 = rax_95",
    "rdx_25 = *rax_95",
    "if (rdx_25 == 0x2e && r13_15[1] == 0)",
    "data_168bf8 = 1",
    "int64_t rdi_60 = data_168b98",
    "int64_t r12_11 = data_168ba0",
    "if (rdi_60 == 0)",
    "goto label_a5679",
    "if (rdi_60 == r12_11)",
    "free(r12_11)",
    "free(rdi_60)",
    "label_a5679:",
    "if (r12_11 != 0)",
    "free(r12_11)",
    "char* rax_90 = sh_makepath(r13_15, data_168be8, 0)",
    "data_168ba0 = rax_90",
    "r12_3 = rax_90",
    "if (strpbrk(rax_90, \"\"'\\\") != 0)",
    "r12_3 = sh_backslash_quote(r12_3, &data_168c20, 0)",
    "data_168b98 = r12_3",
    "free(r13_15)",
    "r14_3 = data_168b90",
    "label_a523a:",
    "char* rax_67 = rl_filename_completion_function(r12_3, r14_3)",
    "bool cond:7_1 = data_168bdc == 4",
    "data_168bd0 = rax_67",
    "char* r12_6 = rax_67",
    "if (cond:7_1 && dircomplete_expand != 0)",
    "rl_directory_completion_hook = sub_a2fc0",
    "rl_directory_rewrite_hook = 0",
    "char* r14_8 = data_168be8",
    "data_168b90 = 1",
    "if (r12_6 != 0)",
    "char* r14_9",
    "if (strchr(r14_8, 0x2f) != 0)",
    "if (*arg1 == 0x7e)",
    "char* rsi_18 = data_168bb0",
    "if (dircomplete_expand == 0)",
    "uint64_t rl_directory_rewrite_hook_2 = rl_directory_rewrite_hook",
    "rl_directory_rewrite_hook = 0",
    "result = sub_a1050(r12_6, rsi_18)",
    "if (rl_directory_rewrite_hook_2 == 0)",
    "r14_9 = data_168bd0",
    "r14_9 = data_168bd0",
    "if (dircomplete_expand == 0)",
    "rl_directory_rewrite_hook = rl_directory_rewrite_hook_2",
    "rl_directory_completion_hook = rl_directory_rewrite_hook_2",
    "result = sub_a1050(r12_6, rsi_18)",
    "r14_9 = data_168bd0",
    "uint64_t r13_10 = strlen(r12_6) + 1",
    "char* result_1 = malloc(r13_10)",
    "if (result_1 == 0)",
    "sub_a7f00()",
    "noreturn",
    "r14_9 = r12_6",
    "result = result_1",
    "__strcpy_chk(result_1, r12_6, r13_10)",
    "goto label_a52ca",
    "char* rax_73 = strrchr(r12_6, 0x2f)",
    "if (rax_73 == 0)",
    "r14_3 = 1",
    "uint64_t rdx_21 = sx.q(data_168ba8)",
    "if (data_168bcc != 0)",
    "r14_3 = 1",
    "if (strncasecmp(&rax_73[1], r14_8, rdx_21) == 0)",
    "label_a542b:",
    "uint64_t r14_10 = strlen(&rax_73[1]) + 1",
    "char* result_2 = malloc(r14_10)",
    "if (result_2 == 0)",
    "sub_a7f00()",
    "noreturn",
    "result = result_2",
    "__strcpy_chk(result_2, &rax_73[1], r14_10)",
    "r14_9 = r12_6",
    "label_a52ca:",
    "int32_t r12_7 = data_168be0",
    "char var_e1 = 0",
    "char* var_e0 = sub_a4470(r14_9, 1, &var_e1)",
    "sub_a2fc0(&var_e0)",
    "char* r12_8 = var_e0",
    "uint32_t r15_9",
    "if (r12_7 == 0)",
    "r15_9.b = (file_status(r12_8) & 0x12) != 0",
    "int32_t rax_71 = file_status(r12_8)",
    "if ((rax_71.b & 0x10) != 0)",
    "*__errno_location() = 0x15",
    "int32_t r15_8",
    "r15_8.b = (rax_71 & 0x12) == 2",
    "r15_9 = zx.d(r15_8.b)",
    "free(r12_8)",
    "r12_6 = data_168bd0",
    "if (r15_9 != 0)",
    "if (r12_6 != r14_9)",
    "free(r14_9)",
    "free(r12_6)",
    "data_168bd0 = &data_122e02",
    "break",
    "free(result)",
    "if (r12_6 != r14_9)",
    "free(r14_9)",
    "r14_3 = data_168b90",
    "if (strncmp(&rax_73[1], r14_8, rdx_21) == 0)",
    "goto label_a542b",
    "r14_3 = 1",
    "free(r12_6)",
    "r12_3 = data_168b98",
    "goto label_a523a",
    "if (strchr(r14_8, 0x2f) != 0)",
    "goto label_a55df_2",
    "data_168b90 = 0",
    "int64_t* rax_18",
    "int32_t rdx_5",
    "if (arg2 == 0)",
    "label_a4b8f:",
    "char* rdi_13 = data_168be8",
    "rl_filename_completion_desired = 1",
    "glob_ignore_case = data_168bcc",
    "rax_18 = shell_glob_filename(rdi_13, 0)",
    "uint32_t rdx_4 = data_168bc8",
    "data_168bc0 = rax_18",
    "glob_ignore_case = rdx_4",
    "if (rax_18 == &glob_error_return || rax_18 == 0)",
    "data_168bc0 = 0",
    "label_a55df:",
    "result = nullptr",
    "data_168b80 = 0",
    "if (rax_18[1] == 0 || rl_completion_type != 9)",
    "rdx_5 = 1",
    "goto label_a5159",
    "label_a55df_1:",
    "result = nullptr",
    "int64_t rcx_3 = sx.q(data_168b80)",
    "rax_18 = data_168bc0 + (rcx_3 << 3)",
    "rdx_5 = rcx_3.d + 1",
    "label_a5159:",
    "char* rdi_36 = *rax_18",
    "data_168b80 = rdx_5",
    "data_168bd0 = rdi_36",
    "if (rdi_36 != 0)",
    "while (true)",
    "if ((file_status(rdi_36) & 0x12) != 0)",
    "result = data_168bd0",
    "if (*arg1 == 0x7e)",
    "char* rsi_23 = data_168bb0",
    "if (rsi_23 != 0)",
    "if (dircomplete_expand == 0)",
    "uint64_t rl_directory_rewrite_hook_1 = rl_directory_rewrite_hook",
    "rl_directory_rewrite_hook = 0",
    "result = sub_a1050(result, rsi_23)",
    "if (rl_directory_rewrite_hook_1 != 0)",
    "if (dircomplete_expand == 0)",
    "rl_directory_rewrite_hook = rl_directory_rewrite_hook_1",
    "rl_directory_completion_hook = rl_directory_rewrite_hook_1",
    "result = sub_a1050(result, rsi_23)",
    "free(data_168bd0)",
    "data_168bd0 = result",
    "break",
    "free(data_168bd0)",
    "int64_t rax_61 = sx.q(data_168b80)",
    "data_168b80 = (rax_61 + 1).d",
    "rdi_36 = *(data_168bc0 + (rax_61 << 3))",
    "data_168bd0 = rdi_36",
    "if (rdi_36 == 0)",
    "goto label_a55dd",
    "label_a55dd:",
    "glob_ignore_case = data_168bc8",
    "label_a55df_2:",
    "result = nullptr",
    "*(fsbase + 0x28)",
    "if (rax == *(fsbase + 0x28))",
    "return result",
    "__stack_chk_fail()",
    "noreturn"
  ]
}
{
  "address": "0x6adc0",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "write file on Linux",
    "contain loop",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "get current PID on Linux",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "encrypt data using Curve25519/7d070d905d0942e295bbb2c9df72fc86",
    "terminate process via kill"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "lea     r12, [rbp-0x1f0]",
    "push    rbx",
    "mov     ebx, edi",
    "mov     rdi, r12",
    "sub     rsp, 0x268",
    "mov     dword [rbp-0x290], esi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, r12",
    "call    sigaddset",
    "lea     rax, [rbp-0x270]",
    "mov     r15, rax",
    "mov     rdi, rax",
    "mov     qword [rbp-0x288], rax",
    "call    sigemptyset",
    "xor     edi, edi",
    "mov     rdx, r15",
    "mov     rsi, r12",
    "call    sigprocmask",
    "lea     rax, [rel job_control]",
    "mov     dword [rel data_1680b8], 0x0",
    "mov     dword [rel data_1680bc], 0x0",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x6b060",
    "lea     r15, [rbp-0x168]",
    "lea     rax, [rbp-0x170]",
    "mov     dword [rbp-0xe8], 0x0",
    "mov     rdi, r15",
    "lea     r12, [rel sub_68750]",
    "lea     r14, [rbp-0xc8]",
    "mov     qword [rbp-0x278], rax",
    "mov     qword [rbp-0x170], r12",
    "lea     r13, [rbp-0xd0]",
    "call    sigemptyset",
    "mov     rdi, r14",
    "call    sigemptyset",
    "mov     rsi, qword [rbp-0x278]",
    "mov     rdx, r13",
    "mov     edi, 0x2",
    "call    sigaction",
    "test    eax, eax",
    "jne     0x6b5c0",
    "lea     rax, [rel subshell_environment]",
    "test    byte [rax], 0x4",
    "jne     0x6b060",
    "lea     rax, [rel waiting_for_child]",
    "mov     qword [rel data_159c50], 0x0",
    "mov     dword [rax], 0x0",
    "jmp     0x6b0f5",
    "mov     rax, qword [rbp-0xd0]",
    "cmp     rax, r12",
    "je      0x6b74f",
    "lea     rax, [rel last_command_exit_value]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x280], eax",
    "lea     rax, [rel last_command_exit_value]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x280], eax",
    "lea     rax, [rel interactive]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x6ae75",
    "mov     rax, qword [rel data_159c50]",
    "jmp     0x6b0de",
    "mov     qword [rel data_159c50], rax",
    "mov     eax, dword [rel data_161100]",
    "mov     edi, dword [r14]",
    "test    eax, eax",
    "jne     0x6ae87",
    "lea     r15, [rel wait_intr_flag]",
    "mov     eax, dword [r15]",
    "test    eax, eax",
    "je      0x6aec0",
    "lea     r14, [rel terminating_signal]",
    "lea     rax, [rel job_control]",
    "lea     r14, [rel terminating_signal]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x6ae7c",
    "lea     rdx, [rel waiting_for_child]",
    "mov     dword [rdx], 0x0",
    "cmp     rax, 0x1",
    "je      0x6b75b",
    "mov     qword [rbp-0x170], 0x1",
    "mov     rdi, r15",
    "mov     dword [rbp-0xe8], 0x0",
    "call    sigemptyset",
    "mov     rdi, r14",
    "call    sigemptyset",
    "mov     rsi, qword [rbp-0x278]",
    "mov     rdx, r13",
    "mov     edi, 0x2",
    "call    sigaction",
    "jmp     0x6b0f5",
    "jmp     0x6b16b",
    "mov     r13d, 0xffffffff",
    "xor     r12d, r12d",
    "cmp     ebx, 0xffffffff",
    "jne     0x6b00e",
    "lea     rax, [rel wait_signal_received]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6aec0",
    "mov     eax, dword [r14]",
    "test    eax, eax",
    "jne     0x6b490",
    "mov     eax, dword [r14]",
    "test    eax, eax",
    "jne     0x6b5f1",
    "call    sub_8e2b0",
    "{ Does not return }",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     edi, ebx",
    "call    sub_67850",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x6b62c",
    "nop     word [rax+rax]",
    "lea     rax, [rel this_shell_builtin]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x6aec0",
    "mov     edx, dword [rel data_161100]",
    "mov     edi, dword [r14]",
    "test    edx, edx",
    "jne     0x6b138",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6ae7c",
    "lea     rax, [rel shell_pgrp]",
    "xor     esi, esi",
    "mov     edi, dword [rax]",
    "call    give_terminal_to",
    "mov     rsi, qword [rbp-0x288]",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1331e0]  {\"wait_for: No record of process %\u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "movsxd  rsi, ebx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "mov     rsi, qword [rel data_159c50]",
    "lea     rbx, [rel wait_for_background_pids]",
    "cmp     rsi, rbx",
    "je      0x6b6a0",
    "mov     edi, dword [rax+0x10]",
    "cmp     r13d, 0xffffffff",
    "je      0x6b3b0",
    "mov     edi, 0x1",
    "mov     dword [rbp-0x278], ecx",
    "call    sub_11d600",
    "lea     rdx, [rel waiting_for_child]",
    "mov     ecx, dword [rbp-0x278]",
    "mov     dword [rel data_1680c4], 0x0",
    "mov     dword [rdx], ecx",
    "cmp     eax, 0xffffffff",
    "je      0x6b170",
    "lea     rax, [rel wait_signal_received]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6af28",
    "cmp     rax, qword [rel data_157ec8]",
    "je      0x6bb80",
    "jmp     0x6b16b",
    "call    throw_to_top_level",
    "jmp     0x6ae7c",
    "mov     dword [rbp-0x280], 0x7f",
    "jmp     0x6b37f",
    "mov     edi, 0x2",
    "call    set_signal_handler",
    "lea     rax, [rel waiting_for_child]",
    "mov     qword [rel data_159c50], rbx",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel js]",
    "movsxd  r8, dword [rax+0x1c]",
    "test    r8d, r8d",
    "jle     0x6b3de",
    "cmp     edi, 0x1",
    "je      0x6aed8",
    "call    __errno_location",
    "cmp     dword [rax], 0xa",
    "jne     0x6af5a",
    "lea     rax, [rel interactive]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0x6af98",
    "lea     rax, [rel this_shell_builtin]",
    "mov     rax, qword [rax]",
    "cmp     rax, qword [rel data_157ec8]",
    "jne     0x6af28",
    "lea     rdi, [rel wait_intr_buf]",
    "mov     esi, 0x1",
    "call    __longjmp_chk",
    "{ Does not return }",
    "nop     ",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x6bb91",
    "cmp     edi, 0x1",
    "jne     0x6af5a",
    "lea     rcx, [rel jobs]",
    "mov     rsi, qword [rcx]",
    "xor     ecx, ecx",
    "lea     rax, [rel waiting_for_child]",
    "mov     dword [rel data_1680c4], 0x1",
    "mov     ecx, dword [rax]",
    "mov     dword [rax], 0x1",
    "mov     eax, dword [r15]",
    "test    eax, eax",
    "je      0x6af28",
    "lea     rcx, [rel jobs]",
    "mov     rsi, qword [rcx]",
    "lea     rax, [rel this_shell_builtin]",
    "lea     rdx, [rel wait_builtin]",
    "cmp     qword [rax], rdx",
    "je      0x6ba6a",
    "mov     eax, dword [r14]",
    "test    eax, eax",
    "jne     0x6b158",
    "lea     rax, [rel job_control]",
    "mov     r10d, dword [rax]",
    "test    r10d, r10d",
    "jne     0x6af98",
    "test    rax, rax",
    "jne     0x6bb80",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "mov     eax, dword [rbp-0x280]",
    "add     rsp, 0x268",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "jmp     0x6aed8",
    "mov     rdx, qword [rax+0x8]",
    "mov     rax, rdx",
    "cmp     ebx, dword [rax+0x8]",
    "je      0x6b409",
    "add     rcx, 0x1",
    "cmp     rcx, r8",
    "jne     0x6b3cc",
    "jmp     0x6aed8",
    "mov     rsi, qword [rel data_159c50]",
    "lea     rbx, [rel wait_for_background_pids]",
    "cmp     rsi, rbx",
    "je      0x6ba9b",
    "test    r12, r12",
    "je      0x6b1a3",
    "mov     r8d, dword [rel data_161100]",
    "mov     edi, dword [r14]",
    "test    r8d, r8d",
    "jne     0x6afa3",
    "mov     esi, dword [r15]",
    "test    esi, esi",
    "je      0x6afd8",
    "mov     eax, dword [r14]",
    "test    eax, eax",
    "jne     0x6b430",
    "nop     dword [rax]",
    "mov     r13d, ecx",
    "cmp     edi, 0x1",
    "je      0x6aed8",
    "mov     rax, qword [rax]",
    "cmp     rdx, rax",
    "je      0x6b3d5",
    "mov     rax, qword [rsi+rcx*8]",
    "test    rax, rax",
    "jne     0x6b3f0",
    "mov     dword [rbp-0x280], 0xffffffff",
    "jmp     0x6b36c",
    "mov     edi, 0x2",
    "call    set_signal_handler",
    "lea     rax, [rel waiting_for_child]",
    "mov     qword [rel data_159c50], rbx",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel js]",
    "mov     dword [rax+0x8], 0x0",
    "cmp     r13d, 0xffffffff",
    "je      0x6b1d7",
    "mov     qword [r12+0xc], 0x0",
    "cmp     ebx, 0xffffffff",
    "je      0x6b450",
    "lea     rax, [rel wait_signal_received]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0x6afd8",
    "mov     r9d, dword [rel data_161100]",
    "mov     edi, dword [r14]",
    "test    r9d, r9d",
    "jne     0x6af83",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x6b420",
    "jmp     0x6b045",
    "cmp     ebx, dword [rax+0x8]",
    "jne     0x6b3fc",
    "mov     rsi, qword [rbp-0x288]",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "cmp     ebx, 0xffffffff",
    "jne     0x6af5a",
    "lea     rcx, [rel jobs]",
    "movsxd  r8, r13d",
    "mov     rcx, qword [rcx]",
    "mov     rcx, qword [rcx+r8*8]",
    "add     dword [rax+0xc], 0x1",
    "mov     dword [rcx+0x14], 0x4",
    "add     dword [rax+0x2c], 0x1",
    "mov     rsi, qword [rel data_159c50]",
    "lea     rbx, [rel wait_for_background_pids]",
    "cmp     rsi, rbx",
    "je      0x6b36c",
    "cmp     dword [r12+0x10], 0x1",
    "je      0x6b00e",
    "lea     rax, [rel this_shell_builtin]",
    "mov     rax, qword [rax]",
    "cmp     rax, qword [rel data_157ec8]",
    "jne     0x6afd8",
    "jmp     0x6b16b",
    "call    throw_to_top_level",
    "jmp     0x6af98",
    "nop     dword [rax]",
    "movsxd  r8, r13d",
    "mov     rax, qword [rsi+r8*8]",
    "cmp     dword [rax+0x14], 0x1",
    "jne     0x6af5a",
    "mov     rsi, qword [rel data_159c50]",
    "lea     rbx, [rel wait_for_background_pids]",
    "cmp     rsi, rbx",
    "je      0x6b211",
    "mov     edi, 0x2",
    "call    set_signal_handler",
    "lea     rax, [rel waiting_for_child]",
    "mov     qword [rel data_159c50], rbx",
    "mov     dword [rax], 0x0",
    "jmp     0x6b36c",
    "cmp     r13d, 0xffffffff",
    "je      0x6b4b0",
    "test    rax, rax",
    "jne     0x6bb80",
    "cmp     r13d, 0xffffffff",
    "je      0x6b4e1",
    "mov     edi, 0x2",
    "call    set_signal_handler",
    "lea     rax, [rel waiting_for_child]",
    "mov     qword [rel data_159c50], rbx",
    "mov     dword [rax], 0x0",
    "mov     rsi, qword [rel data_159c50]",
    "lea     rbx, [rel wait_for_background_pids]",
    "cmp     rsi, rbx",
    "je      0x6b4e1",
    "lea     rcx, [rel jobs]",
    "movsxd  r8, r13d",
    "mov     rax, qword [rcx]",
    "mov     rax, qword [rax+r8*8]",
    "cmp     dword [rax+0x14], 0x1",
    "jne     0x6b560",
    "nop     dword [rax+rax]",
    "test    r12, r12",
    "je      0x6b610",
    "lea     rcx, [rel jobs]",
    "movsxd  r8, r13d",
    "nop     dword [rax]",
    "mov     edi, 0x2",
    "call    set_signal_handler",
    "lea     rax, [rel waiting_for_child]",
    "mov     qword [rel data_159c50], rbx",
    "mov     dword [rax], 0x0",
    "mov     rsi, qword [rel data_159c50]",
    "lea     rbx, [rel wait_for_background_pids]",
    "cmp     rsi, rbx",
    "je      0x6b228",
    "lea     rax, [rel last_command_exit_signal]",
    "mov     dword [rbp-0x280], 0x0",
    "mov     dword [rax], 0x0",
    "jmp     0x6b522",
    "mov     eax, dword [r12+0xc]",
    "mov     edx, eax",
    "movzx   ecx, al",
    "and     edx, 0x7f",
    "add     edx, 0x1",
    "cmp     dl, 0x1",
    "jg      0x6b7b0",
    "and     eax, 0x7f",
    "lea     esi, [rax+0x80]",
    "mov     dword [rbp-0x280], esi",
    "jmp     0x6b263",
    "cmp     al, 0x7f",
    "je      0x6ba48",
    "mov     edi, r13d",
    "mov     qword [rbp-0x278], rcx",
    "call    sub_66750",
    "mov     rcx, qword [rbp-0x278]",
    "mov     esi, eax",
    "and     esi, 0x7f",
    "add     esi, 0x1",
    "cmp     sil, 0x1",
    "jg      0x6b5dd",
    "mov     edi, 0x2",
    "mov     qword [rbp-0x280], r8",
    "mov     qword [rbp-0x278], rcx",
    "call    set_signal_handler",
    "lea     rax, [rel waiting_for_child]",
    "mov     qword [rel data_159c50], rbx",
    "mov     rcx, qword [rbp-0x278]",
    "mov     r8, qword [rbp-0x280]",
    "mov     dword [rax], 0x0",
    "jmp     0x6b228",
    "lea     rax, [rel subshell_environment]",
    "lea     rdx, [rel running_in_background]",
    "mov     eax, dword [rax]",
    "and     eax, 0x11",
    "or      eax, dword [rdx]",
    "mov     edx, dword [rbp-0x290]",
    "and     edx, 0x100",
    "or      eax, edx",
    "jne     0x6b36c",
    "lea     rsi, [rel last_command_exit_signal]",
    "mov     edx, eax",
    "and     edx, 0x7f",
    "mov     dword [rsi], edx",
    "cmp     ecx, 0x7f",
    "jne     0x6ba59",
    "cmp     ecx, 0x7f",
    "je      0x6baf7",
    "lea     rsi, [rel last_command_exit_signal]",
    "mov     dword [rsi], eax",
    "mov     rax, qword [rcx]",
    "mov     rax, qword [rax+r8*8]",
    "cmp     dword [rax+0x14], 0x2",
    "je      0x6b799",
    "mov     dword [rbp-0x280], 0x0",
    "xor     eax, eax",
    "jmp     0x6b263",
    "movzx   eax, ah",
    "mov     dword [rbp-0x280], eax",
    "xor     eax, eax",
    "lea     rax, [rel shell_pgrp]",
    "xor     esi, esi",
    "mov     edi, dword [rax]",
    "call    give_terminal_to",
    "jmp     0x6b36c",
    "lea     eax, [rdx+0x80]",
    "mov     dword [rbp-0x280], eax",
    "jmp     0x6b522",
    "movzx   eax, ah",
    "sub     eax, 0xffffff80",
    "mov     dword [rbp-0x280], eax",
    "jmp     0x6b522",
    "lea     rdx, [rel last_command_exit_signal]",
    "mov     dword [rdx], 0x0",
    "jmp     0x6b7c7",
    "movzx   eax, ah",
    "mov     dword [rbp-0x280], eax",
    "lea     rax, [rel last_command_exit_signal]",
    "mov     dword [rax], 0x0",
    "movzx   edx, byte [r12+0xd]",
    "lea     esi, [rdx+0x80]",
    "mov     dword [rbp-0x280], esi",
    "jmp     0x6b2a2",
    "test    r12, r12",
    "je      0x6b2a2",
    "mov     edx, dword [rax+0x18]",
    "lea     r12, [rel subshell_environment]",
    "mov     eax, dword [r12]",
    "test    dl, 0x4",
    "je      0x6b308",
    "mov     esi, dword [r12+0xc]",
    "mov     edi, dword [rbp-0x280]",
    "mov     edx, esi",
    "movzx   edx, dh",
    "sub     edx, 0xffffff80",
    "cmp     sil, 0x7f",
    "cmove   edi, edx",
    "mov     dword [rbp-0x280], edi",
    "mov     eax, dword [r12]",
    "lea     r12, [rel interactive_shell]",
    "mov     edx, dword [r12]",
    "test    edx, edx",
    "je      0x6b6af",
    "mov     esi, dword [rbp-0x290]",
    "lea     rdi, [rel running_in_background]",
    "and     esi, 0x100",
    "or      esi, dword [rdi]",
    "jne     0x6b308",
    "test    al, 0x14",
    "jne     0x6b32b",
    "test    eax, eax",
    "je      0x6b7e7",
    "and     edx, 0x21",
    "cmp     edx, 0x20",
    "je      0x6b308",
    "mov     r10d, dword [rel data_1680bc]",
    "test    r10d, r10d",
    "je      0x6b34c",
    "mov     rdx, qword [rcx]",
    "mov     rdx, qword [rdx+r8*8]",
    "test    eax, eax",
    "jne     0x6b353",
    "mov     rax, qword [rcx]",
    "mov     rdx, qword [rax+r8*8]",
    "mov     rsi, qword [rdx+0x8]",
    "mov     rax, rsi",
    "jmp     0x6b812",
    "test    al, 0x14",
    "je      0x6b34c",
    "test    al, 0x11",
    "jne     0x6b327",
    "mov     rax, qword [rcx]",
    "mov     rdx, qword [rax+r8*8]",
    "mov     eax, dword [rel data_1611a4+4]",
    "and     eax, 0x1",
    "or      eax, dword [rel data_1680b8]",
    "je      0x6b960",
    "cmp     dword [rdx+0x14], 0x4",
    "je      0x6b7d8",
    "mov     r10d, dword [rdx+0x18]",
    "test    r10b, 0x1",
    "je      0x6b35d",
    "mov     r14d, dword [rax+0xc]",
    "mov     ebx, r14d",
    "and     ebx, 0x7f",
    "add     ebx, 0x1",
    "sar     bl, 0x1",
    "test    bl, bl",
    "jle     0x6b800",
    "lea     rax, [rel shell_pgrp]",
    "xor     esi, esi",
    "mov     qword [rbp-0x290], r8",
    "mov     qword [rbp-0x278], rcx",
    "mov     edi, dword [rax]",
    "call    give_terminal_to",
    "mov     rcx, qword [rbp-0x278]",
    "mov     r8, qword [rbp-0x290]",
    "nop     dword [rax]",
    "test    byte [rdx+0x18], 0x1",
    "je      0x6b35d",
    "mov     eax, dword [rel data_160908]",
    "test    eax, eax",
    "jne     0x6b36c",
    "mov     rsi, qword [rbp-0x288]",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "mov     qword [rbp-0x290], r8",
    "mov     qword [rbp-0x278], rcx",
    "lea     r14, [rbp-0x170]",
    "lea     r12, [rbp-0xd0]",
    "call    sigprocmask",
    "lea     rdi, [rbp-0x168]",
    "mov     qword [rbp-0x170], 0x0",
    "mov     dword [rbp-0xe8], 0x0",
    "call    sigemptyset",
    "lea     rdi, [rbp-0xc8]",
    "call    sigemptyset",
    "mov     rdx, r12",
    "mov     rsi, r14",
    "mov     edi, 0x2",
    "call    sigaction",
    "mov     rcx, qword [rbp-0x278]",
    "mov     r8, qword [rbp-0x290]",
    "test    eax, eax",
    "jne     0x6bb3c",
    "mov     r9, qword [rdx+0x8]",
    "mov     rax, r9",
    "jmp     0x6b6eb",
    "cmp     r14b, 0x7f",
    "je      0x6b825",
    "mov     qword [rbp-0x290], rcx",
    "mov     qword [rbp-0x278], r8",
    "call    set_tty_state",
    "lea     rax, [rel check_window_size]",
    "mov     r8, qword [rbp-0x278]",
    "mov     rcx, qword [rbp-0x290]",
    "mov     r15d, dword [rax]",
    "test    r15d, r15d",
    "je      0x6baeb",
    "jmp     0x6b742",
    "call    sub_6ad40",
    "mov     qword [rel data_159c50], 0x0",
    "mov     rax, qword [rbp-0xd0]",
    "mov     qword [rel data_159c50], rax",
    "cmp     rax, 0x1",
    "jne     0x6bb47",
    "mov     edi, dword [rax+0xc]",
    "mov     esi, edi",
    "and     esi, 0x7f",
    "add     esi, 0x1",
    "cmp     sil, 0x1",
    "jle     0x6b6dd",
    "mov     rax, qword [rax]",
    "cmp     rsi, rax",
    "je      0x6baaa",
    "mov     rax, qword [rcx]",
    "mov     rdx, qword [rax+r8*8]",
    "jmp     0x6b8a1",
    "lea     rax, [rel js]",
    "cmp     r13d, dword [rax+0x30]",
    "je      0x6b873",
    "mov     edi, r13d",
    "call    sub_688e0",
    "jmp     0x6b35d",
    "mov     qword [rbp-0x290], r8",
    "mov     qword [rbp-0x278], rcx",
    "call    getpid",
    "mov     esi, 0x2",
    "mov     edi, eax",
    "call    kill",
    "mov     rcx, qword [rbp-0x278]",
    "mov     r8, qword [rbp-0x290]",
    "mov     rax, qword [rcx]",
    "mov     rdx, qword [rax+r8*8]",
    "jmp     0x6b353",
    "mov     esi, 0x1",
    "mov     edi, 0x2",
    "mov     qword [rbp-0x290], r8",
    "mov     qword [rbp-0x278], rcx",
    "call    set_signal_handler",
    "lea     rax, [rel waiting_for_child]",
    "mov     rcx, qword [rbp-0x278]",
    "mov     qword [rel data_159c50], rbx",
    "mov     r8, qword [rbp-0x290]",
    "mov     dword [rax], 0x0",
    "mov     rax, qword [rcx]",
    "mov     rdx, qword [rax+r8*8]",
    "jmp     0x6b353",
    "cmp     dil, 0x7f",
    "je      0x6b727",
    "lea     rax, [rel job_control]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "je      0x6b727",
    "lea     rax, [rel rl_readline_state]",
    "test    qword [rax], 0x4024",
    "jne     0x6b353",
    "lea     rax, [rel job_control]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0x6b353",
    "xor     edx, edx",
    "xor     esi, esi",
    "xor     edi, edi",
    "mov     qword [rbp-0x290], r8",
    "mov     qword [rbp-0x278], rcx",
    "call    get_new_window_size",
    "mov     rcx, qword [rbp-0x278]",
    "mov     r8, qword [rbp-0x290]",
    "mov     rax, qword [rcx]",
    "mov     rdx, qword [rax+r8*8]",
    "mov     rax, qword [rcx]",
    "mov     rdx, qword [rax+r8*8]",
    "test    byte [rdx+0x18], 0x1",
    "je      0x6b8a1",
    "lea     rax, [rel check_window_size]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "jne     0x6bb09",
    "mov     rax, qword [rax]",
    "cmp     r9, rax",
    "je      0x6b727",
    "and     r10d, 0x4",
    "je      0x6b727",
    "mov     qword [rbp-0x290], r8",
    "mov     qword [rbp-0x278], rcx",
    "call    get_tty_state",
    "mov     rcx, qword [rbp-0x278]",
    "mov     r8, qword [rbp-0x290]",
    "mov     rax, qword [rcx]",
    "mov     rdx, qword [rax+r8*8]",
    "jmp     0x6b353",
    "mov     eax, dword [rdx+0x18]",
    "not     eax",
    "test    al, 0x5",
    "jne     0x6b353",
    "xor     edx, edx",
    "xor     esi, esi",
    "xor     edi, edi",
    "mov     qword [rbp-0x290], r8",
    "mov     qword [rbp-0x278], rcx",
    "call    get_new_window_size",
    "mov     rcx, qword [rbp-0x278]",
    "mov     r8, qword [rbp-0x290]",
    "mov     rax, qword [rcx]",
    "mov     rdx, qword [rax+r8*8]",
    "jmp     0x6b353",
    "cmp     dword [rdx+0x14], 0x4",
    "jne     0x6b35d",
    "and     edi, 0x7f",
    "cmp     edi, 0x2",
    "jne     0x6b727",
    "test    bl, bl",
    "jle     0x6b353",
    "lea     rsi, [rel interrupt_state]",
    "mov     eax, dword [rsi]",
    "add     eax, 0x1",
    "mov     dword [rsi], eax",
    "and     r14d, 0x7f",
    "cmp     r14d, 0x2",
    "jne     0x6b353",
    "lea     rax, [rel loop_level]",
    "mov     eax, dword [rax]",
    "test    byte [rel data_1611a4+4], 0x1",
    "jne     0x6bbb9",
    "test    eax, eax",
    "je      0x6b91c",
    "test    eax, eax",
    "jne     0x6bba6",
    "mov     rbx, qword [rel stdout]",
    "mov     edi, 0xa",
    "mov     qword [rbp-0x290], r8",
    "mov     qword [rbp-0x278], rcx",
    "mov     rsi, qword [rbx]",
    "call    putc",
    "mov     rdi, qword [rbx]",
    "call    fflush",
    "mov     rcx, qword [rbp-0x278]",
    "mov     r8, qword [rbp-0x290]",
    "mov     rax, qword [rcx]",
    "mov     rdx, qword [rax+r8*8]",
    "jmp     0x6b353",
    "jmp     0x6bba6",
    "lea     rcx, [rel interrupt_state]",
    "mov     eax, dword [rcx]",
    "add     eax, 0x1",
    "mov     dword [rcx], eax",
    "jmp     0x6b353",
    "lea     rax, [rel shell_compatibility_level]",
    "cmp     dword [rax], 0x20",
    "jle     0x6b911",
    "cmp     dword [r12], 0x0",
    "jne     0x6bb96",
    "lea     rax, [rel executing_list]",
    "cmp     dword [rax], 0x0",
    "jne     0x6bba6",
    "lea     rax, [rel sourcelevel]",
    "cmp     dword [rax], 0x0",
    "je      0x6b91c"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
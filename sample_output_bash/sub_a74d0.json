{
  "address": "0xa74d0",
  "rules": [
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "contain loop",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r14 {__saved_r14}",
    "mov     r14, rdi",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "lea     r12, [rel word_token_alist]",
    "push    rbx {__saved_rbx}",
    "cmp     qword [r12], 0x0",
    "je      0xa7578  {word_token_alist}",
    "xor     edi, edi  {0x0}",
    "xor     ebx, ebx  {0x0}",
    "call    strlist_create",
    "mov     rsi, rax",
    "mov     rax, qword [rax]",
    "jmp     0xa7556",
    "lea     rax, [r12+0x10]  {data_159570}",
    "xor     ebx, ebx  {0x0}",
    "nop     dword [rax+rax]",
    "mov     dword [rsi+0xc], ebx",
    "mov     qword [rax], 0x0",
    "xor     eax, eax  {0x0}",
    "or      dword [r14], 0x20",
    "mov     qword [r14+0x10], rsi",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "add     rax, 0x10",
    "movsxd  r13, ebx",
    "add     ebx, 0x1",
    "cmp     qword [rax-0x10], 0x0",
    "jne     0xa7500",
    "mov     edi, ebx",
    "shl     r13, 0x4",
    "call    strlist_create",
    "mov     rcx, r12  {word_token_alist}",
    "mov     rdi, qword [rax]",
    "mov     rsi, rax",
    "lea     rax, [r12+0x10]  {data_159570}",
    "add     r13, rax",
    "mov     rdx, rdi",
    "jmp     0xa753c",
    "mov     rcx, qword [rcx]",
    "add     rdx, 0x8",
    "mov     qword [rdx-0x8], rcx",
    "mov     rcx, rax",
    "cmp     rax, r13",
    "jne     0xa7538",
    "add     rax, 0x10",
    "movsxd  rax, ebx",
    "lea     rax, [rdi+rax*8]"
  ]
}
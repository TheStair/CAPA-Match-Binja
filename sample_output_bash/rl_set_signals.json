{
  "address": "0xfa4c0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x148",
    "lea     rbx, [rel rl_catch_signals]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     r8d, dword [rbx]",
    "test    r8d, r8d",
    "je      0xfa7c0",
    "lea     rbx, [rel _rl_orig_sigset]",
    "mov     rdi, rbx",
    "call    sigemptyset",
    "mov     rdx, rbx",
    "xor     esi, esi",
    "xor     edi, edi",
    "call    sigprocmask",
    "mov     edi, dword [rel data_16b4c0]",
    "test    edi, edi",
    "je      0xfa730",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xfa94d",
    "mov     eax, dword [rel data_16af24]",
    "test    eax, eax",
    "jne     0xfa700",
    "lea     r12, [rel data_16b440]",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     esi, 0x2",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     esi, 0xf",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     esi, 0x1",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     esi, 0x3",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     esi, 0xe",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     esi, 0x14",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     esi, 0x15",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     esi, 0x16",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     ecx, dword [rbx]",
    "mov     dword [rel data_16b4c0], 0x1",
    "test    ecx, ecx",
    "jne     0xfa508",
    "mov     esi, dword [rel data_16b438]",
    "test    esi, esi",
    "jne     0xfa7db",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x148",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rdi, [rbp-0xc8]",
    "lea     rbx, [rel data_16b4e0]",
    "call    sigemptyset",
    "mov     rdx, rbx",
    "lea     rsi, [rel sub_f8950]",
    "mov     edi, 0x1c",
    "mov     dword [rbp-0x48], 0x0",
    "lea     r12, [rbp-0xd0]",
    "call    sub_f8be0",
    "cmp     rax, 0x1",
    "je      0xfa8f0",
    "nop     dword [rax+rax]",
    "lea     rax, [rel rl_catch_sigwinch]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0xfa700",
    "lea     r13, [rel _rl_orig_sigset]",
    "lea     r12, [rbp-0xc8]",
    "lea     r14, [rel data_16b3a0]",
    "lea     rbx, [rel sub_f8940]",
    "lea     r15, [rbp-0xd0]",
    "mov     rdi, r13",
    "call    sigemptyset",
    "mov     rdx, r13",
    "lea     rsi, [rel data_16b440]",
    "xor     edi, edi",
    "call    sigprocmask",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     rdx, r14",
    "mov     rsi, rbx",
    "mov     edi, 0x2",
    "mov     dword [rbp-0x48], 0x0",
    "call    sub_f8be0",
    "cmp     rax, 0x1",
    "je      0xfa8d8",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     edi, 0x1c",
    "call    sigaction",
    "jmp     0xfa839",
    "mov     dword [rel data_16af24], 0x1",
    "jmp     0xfa700",
    "mov     rdx, r15",
    "mov     rsi, r14",
    "mov     edi, 0x2",
    "call    sigaction",
    "jmp     0xfa57b",
    "mov     rdi, r12",
    "lea     r14, [rel data_16b300]",
    "call    sigemptyset",
    "mov     rdx, r14",
    "mov     rsi, rbx",
    "mov     edi, 0xf",
    "mov     dword [rbp-0x48], 0x0",
    "call    sub_f8be0",
    "cmp     rax, 0x1",
    "je      0xfa8c0",
    "mov     rdx, r15",
    "mov     rsi, r14",
    "mov     edi, 0xf",
    "call    sigaction",
    "jmp     0xfa5ab",
    "mov     rdi, r12",
    "lea     r14, [rel data_16b260]",
    "call    sigemptyset",
    "mov     rdx, r14",
    "mov     rsi, rbx",
    "mov     edi, 0x1",
    "mov     dword [rbp-0x48], 0x0",
    "call    sub_f8be0",
    "cmp     rax, 0x1",
    "je      0xfa8a8",
    "mov     rdx, r15",
    "mov     rsi, r14",
    "mov     edi, 0x1",
    "call    sigaction",
    "jmp     0xfa5db",
    "mov     rdi, r12",
    "lea     r14, [rel data_16b1c0]",
    "call    sigemptyset",
    "mov     rdx, r14",
    "mov     rsi, rbx",
    "mov     edi, 0x3",
    "mov     dword [rbp-0x48], 0x0",
    "call    sub_f8be0",
    "cmp     rax, 0x1",
    "je      0xfa890",
    "mov     rdx, r15",
    "mov     rsi, r14",
    "mov     edi, 0x3",
    "call    sigaction",
    "jmp     0xfa60b",
    "lea     r14, [rel data_16b120]",
    "mov     rsi, rbx",
    "mov     edi, 0xe",
    "mov     rdx, r14",
    "call    sub_f8be0",
    "cmp     rax, 0x1",
    "je      0xfa870",
    "lea     rdx, [rbp-0x170]",
    "mov     rsi, r14",
    "mov     edi, 0xe",
    "call    sigaction",
    "jmp     0xfa631",
    "test    rax, rax",
    "je      0xfa63e",
    "test    byte [rel data_16b1ab], 0x10",
    "jne     0xfa850",
    "mov     rdi, r12",
    "lea     r14, [rel data_16b080]",
    "call    sigemptyset",
    "mov     rdx, r14",
    "mov     rsi, rbx",
    "mov     edi, 0x14",
    "mov     dword [rbp-0x48], 0x0",
    "call    sub_f8be0",
    "cmp     rax, 0x1",
    "je      0xfa938",
    "lea     rdx, [rbp-0x170]",
    "mov     rsi, r14",
    "mov     edi, 0xe",
    "call    sigaction",
    "jmp     0xfa63e",
    "mov     rdx, r15",
    "mov     rsi, r14",
    "mov     edi, 0x14",
    "call    sigaction",
    "jmp     0xfa66e",
    "mov     rdi, r12",
    "lea     r14, [rel data_16afe0]",
    "call    sigemptyset",
    "mov     rdx, r14",
    "mov     rsi, rbx",
    "mov     edi, 0x16",
    "mov     dword [rbp-0x48], 0x0",
    "call    sub_f8be0",
    "cmp     rax, 0x1",
    "je      0xfa920",
    "mov     rdx, r15",
    "mov     rsi, r14",
    "mov     edi, 0x16",
    "call    sigaction",
    "jmp     0xfa69e",
    "mov     rdi, r12",
    "lea     r12, [rel data_16af40]",
    "call    sigemptyset",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     edi, 0x15",
    "mov     dword [rbp-0x48], 0x0",
    "call    sub_f8be0",
    "cmp     rax, 0x1",
    "je      0xfa908",
    "mov     rdx, r15",
    "mov     rsi, r12",
    "mov     edi, 0x15",
    "call    sigaction",
    "jmp     0xfa6ce",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "mov     dword [rel data_16b438], 0x1",
    "call    sigprocmask",
    "lea     rax, [rel rl_catch_sigwinch]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xfa7ec",
    "nop     dword [rax+rax]"
  ]
}
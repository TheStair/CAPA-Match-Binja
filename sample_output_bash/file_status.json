{
  "address": "0xa7d90",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "encrypt data using Curve25519/f2994133291147a090851ed21e9c381b",
    "log keystrokes via raw input data/4762f396f48d4e318a08125296476d20",
    "contain loop",
    "get file attributes",
    "PEB access/fd0dc33357ac4dfab7ffc937f75726c6",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "lea     rsi, [rbp-0xb0]",
    "xor     ebx, ebx",
    "sub     rsp, 0xa0",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x18], rax",
    "xor     eax, eax",
    "call    stat",
    "test    eax, eax",
    "js      0xa7e39",
    "mov     rax, qword [rbp-0x18]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa7e78",
    "mov     eax, dword [rbp-0x98]",
    "mov     ebx, 0x11",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "je      0xa7e39",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xa0",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "mov     rbx, qword [rel data_159928]",
    "test    rbx, rbx",
    "jne     0xa7df4",
    "mov     rdi, qword [rbx]",
    "test    rdi, rdi",
    "je      0xa7e60",
    "jmp     0xa7e60",
    "mov     esi, 0x1",
    "mov     rdi, r12",
    "mov     ebx, 0x3",
    "call    eaccess",
    "test    eax, eax",
    "je      0xa7e20",
    "lea     rax, [rel extended_glob]",
    "mov     rsi, r12",
    "cmp     dword [rax], 0x1",
    "sbb     edx, edx",
    "and     edx, 0xffffffe0",
    "add     edx, 0x30",
    "call    xstrmatch",
    "cmp     eax, 0x1",
    "je      0xa7df0",
    "mov     esi, 0x4",
    "mov     rdi, r12",
    "call    eaccess",
    "mov     edx, eax",
    "mov     eax, ebx",
    "or      eax, 0x40",
    "test    edx, edx",
    "cmove   ebx, eax",
    "jmp     0xa7e1b",
    "add     rbx, 0x10",
    "mov     ebx, 0x1"
  ]
}
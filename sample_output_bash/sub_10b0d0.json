{
  "address": "0x10b0d0",
  "rules": [
    "create or open file",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "write file on Linux",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "get file attributes",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae",
    "change file permission on Linux",
    "delete file on Linux"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14d, edx",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     ebx, esi",
    "sub     rsp, 0xd8",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "cmp     edx, 0x1",
    "sbb     r13d, r13d",
    "call    sub_10a390",
    "and     r13d, 0x1c0",
    "mov     qword [rbp-0xe0], rax",
    "add     r13d, 0x241",
    "test    rax, rax",
    "je      0x10b540",
    "call    __errno_location",
    "mov     ebx, dword [rax]",
    "jmp     0x10b464",
    "mov     rdi, rax",
    "lea     rsi, [rbp-0xd0]",
    "call    stat",
    "test    eax, eax",
    "je      0x10b300",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x10b584",
    "test    r14d, r14d",
    "je      0x10b31b",
    "mov     byte [rbp-0xf1], 0x0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xd8",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     byte [rbp-0xf1], 0x1",
    "jmp     0x10b143",
    "mov     eax, dword [rbp-0xb8]",
    "and     eax, 0xf000",
    "cmp     eax, 0x8000",
    "je      0x10b4f4",
    "call    __errno_location",
    "mov     ebx, dword [rax]",
    "mov     qword [rbp-0xe8], 0x0",
    "mov     rdi, qword [rbp-0xe0]",
    "mov     edx, 0x180",
    "mov     esi, r13d",
    "xor     eax, eax",
    "call    open",
    "mov     dword [rbp-0xf0], eax",
    "cmp     eax, 0xffffffff",
    "je      0x10b56c",
    "mov     rdi, qword [rbp-0xe0]",
    "call    sub_105010",
    "mov     qword [rbp-0xe8], rax",
    "test    rax, rax",
    "je      0x10b31b",
    "xor     r12d, r12d",
    "jmp     0x10b209",
    "lea     rdx, [rel history_write_timestamps]",
    "cdqe    ",
    "lea     rbx, [r15+rax*8]",
    "add     rax, rcx",
    "xor     ecx, ecx",
    "mov     r14d, dword [rdx]",
    "lea     r13, [r15+rax*8]",
    "nop     dword [rax]",
    "mov     rdi, qword [rbp-0xe8]",
    "mov     edx, 0x180",
    "mov     esi, r13d",
    "xor     eax, eax",
    "call    open",
    "mov     dword [rbp-0xf0], eax",
    "cmp     eax, 0xffffffff",
    "jne     0x10b589",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x10b595",
    "mov     rdi, qword [rsi]",
    "add     rbx, 0x8",
    "call    strlen",
    "lea     ecx, [r12+rax+0x1]",
    "cmp     r13, rbx",
    "jne     0x10b1b8",
    "mov     rdi, qword [rsi+0x8]",
    "test    rdi, rdi",
    "je      0x10b1f0",
    "mov     byte [rbp-0xf1], 0x1",
    "jmp     0x10b173",
    "call    __errno_location",
    "mov     ebx, dword [rax]",
    "jmp     0x10b3b0",
    "call    __errno_location",
    "mov     edi, dword [rbp-0xf0]",
    "mov     ebx, dword [rax]",
    "call    close",
    "mov     r15, qword [rbp-0xe8]",
    "test    r15, r15",
    "je      0x10b573",
    "lea     rax, [rel history_length]",
    "mov     ecx, dword [rbp-0xec]",
    "mov     edx, dword [rax]",
    "mov     eax, edx",
    "sub     eax, ecx",
    "cmp     edx, eax",
    "jle     0x10b330",
    "mov     rsi, qword [rbx]",
    "mov     r12d, ecx",
    "test    r14d, r14d",
    "je      0x10b1f0",
    "movsxd  r12, ecx",
    "cmp     byte [rdi], 0x0",
    "je      0x10b1f0",
    "lea     rax, [rel history_length]",
    "mov     r15, qword [rel data_1688b8]",
    "mov     edx, dword [rax]",
    "cmp     edx, ebx",
    "mov     eax, edx",
    "cmovle  ebx, edx",
    "mov     ecx, ebx",
    "sub     eax, ecx",
    "mov     dword [rbp-0xec], ecx",
    "cmp     edx, eax",
    "jle     0x10b550",
    "mov     rdi, qword [rbp-0xe0]",
    "call    free",
    "jmp     0x10b458",
    "mov     rdi, qword [rbp-0xe0]",
    "call    free",
    "jmp     0x10b464",
    "mov     rdi, r15",
    "call    unlink",
    "mov     rdi, qword [rbp-0xe0]",
    "call    free",
    "mov     rdi, r15",
    "call    free",
    "jmp     0x10b464",
    "mov     edi, dword [rbp-0xf0]",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "call    write",
    "test    rax, rax",
    "js      0x10b3c8",
    "lea     rdx, [rel history_write_timestamps]",
    "cdqe    ",
    "lea     r14, [r15+rax*8]",
    "mov     r13d, dword [rdx]",
    "mov     edx, dword [rbp-0xec]",
    "add     rax, rdx",
    "lea     rax, [r15+rax*8]",
    "xor     r15d, r15d",
    "mov     qword [rbp-0xd8], rax",
    "jmp     0x10b2ad",
    "mov     qword [rbp-0xd8], rsi",
    "call    strlen",
    "mov     rsi, qword [rbp-0xd8]",
    "lea     r12d, [r12+rax+0x1]",
    "nop     dword [rax]",
    "mov     rdi, qword [rbp-0xe8]",
    "call    free",
    "call    __errno_location",
    "mov     rdi, rbx",
    "mov     r15d, dword [rax]",
    "mov     r14, rax",
    "call    free",
    "lea     r13, [rel history_lines_written_to_file]",
    "mov     eax, dword [rbp-0xec]",
    "mov     edi, dword [rbp-0xf0]",
    "mov     dword [r13], eax",
    "call    close",
    "test    eax, eax",
    "js      0x10b4e0",
    "mov     rdi, rbx",
    "call    free",
    "lea     r13, [rel history_lines_written_to_file]",
    "mov     eax, dword [rbp-0xec]",
    "mov     edi, dword [rbp-0xf0]",
    "mov     dword [r13], eax",
    "call    close",
    "test    eax, eax",
    "js      0x10b490",
    "mov     rax, qword [r14]",
    "test    r13d, r13d",
    "je      0x10b268",
    "mov     eax, dword [r14]",
    "test    r15d, r15d",
    "jne     0x10b410",
    "test    r15d, r15d",
    "je      0x10b376",
    "call    __errno_location",
    "mov     r15d, dword [rax]",
    "jmp     0x10b3ff",
    "cmp     qword [rbp-0xe8], 0x0",
    "je      0x10b4a0",
    "movsxd  rdi, r15d",
    "mov     rdx, r12",
    "mov     rsi, qword [rax]",
    "cmp     rdi, r12",
    "cmovae  rdx, rdi",
    "add     r14, 0x8",
    "sub     rdx, rdi",
    "add     rdi, rbx",
    "call    __strcpy_chk",
    "mov     rax, qword [r14-0x8]",
    "mov     rdi, qword [rax]",
    "call    strlen",
    "add     eax, r15d",
    "lea     r15d, [rax+0x1]",
    "cdqe    ",
    "mov     byte [rbx+rax], 0xa",
    "cmp     qword [rbp-0xd8], r14",
    "je      0x10b330",
    "mov     rsi, qword [rax+0x8]",
    "test    rsi, rsi",
    "je      0x10b268",
    "cmp     qword [rbp-0xe8], 0x0",
    "mov     ebx, dword [r14]",
    "je      0x10b429",
    "mov     r15d, eax",
    "jmp     0x10b3ff",
    "call    __errno_location",
    "mov     r14, rax",
    "cmp     byte [rbp-0xf1], 0x0",
    "jne     0x10b4c0",
    "mov     rsi, qword [rbp-0xe0]",
    "mov     rdi, qword [rbp-0xe8]",
    "call    sub_1051f0",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x10b560",
    "cmp     byte [rsi], 0x0",
    "je      0x10b268",
    "mov     dword [r13], 0x0",
    "test    ebx, ebx",
    "jne     0x10b442",
    "mov     rdi, qword [rbp-0xe8]",
    "call    unlink",
    "mov     edx, dword [rbp-0xb0]",
    "mov     esi, dword [rbp-0xb4]",
    "xor     ebx, ebx",
    "mov     rdi, qword [rbp-0xe0]",
    "call    chown",
    "jmp     0x10b442",
    "mov     rdi, qword [rbp-0xe0]",
    "xor     ebx, ebx",
    "call    free",
    "jmp     0x10b464",
    "call    __errno_location",
    "mov     ebx, dword [rax]",
    "jmp     0x10b41d",
    "cmp     byte [rbp-0xf1], 0x0",
    "jne     0x10b4c0",
    "movsxd  rdi, r15d",
    "cmp     r12, rdi",
    "mov     rdx, rdi",
    "cmovae  rdx, r12",
    "sub     rdx, rdi",
    "add     rdi, rbx",
    "call    __strcpy_chk",
    "mov     rax, qword [r14]",
    "mov     rdi, qword [rax+0x8]",
    "call    strlen",
    "add     eax, r15d",
    "lea     r15d, [rax+0x1]",
    "cdqe    ",
    "mov     byte [rbx+rax], 0xa",
    "mov     rax, qword [r14]",
    "jmp     0x10b268",
    "mov     rdi, qword [rbp-0xe0]",
    "call    free",
    "cmp     qword [rbp-0xe8], 0x0",
    "je      0x10b464",
    "cmp     byte [rbp-0xf1], 0x0",
    "jne     0x10b4c0",
    "nop     "
  ]
}
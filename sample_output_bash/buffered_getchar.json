{
  "address": "0x8fd10",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     rdx, [rel terminating_signal]",
    "mov     eax, dword [rdx]",
    "test    eax, eax",
    "jne     0x8fe50",
    "mov     ecx, dword [rel data_161100]",
    "mov     edi, dword [rdx]",
    "test    ecx, ecx",
    "jne     0x8fd32",
    "lea     rax, [rel bash_input]",
    "movsxd  rax, dword [rax+0x10]",
    "test    eax, eax",
    "js      0x8feaa",
    "call    sub_8e2b0",
    "{ Does not return }",
    "mov     eax, 0xffffffff",
    "jmp     0x8fd7b",
    "mov     rcx, qword [rel data_160968]",
    "mov     rbx, qword [rcx+rax*8]",
    "test    rbx, rbx",
    "je      0x8feaa",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [rbx+0x28]",
    "mov     rcx, qword [rbx+0x18]",
    "cmp     rax, rcx",
    "je      0x8fd90",
    "mov     eax, dword [rdx]",
    "test    eax, eax",
    "jne     0x8fe68",
    "test    rcx, rcx",
    "je      0x8fd90",
    "mov     eax, dword [rel data_161100]",
    "mov     edi, dword [rdx]",
    "test    eax, eax",
    "je      0x8fe60",
    "mov     eax, dword [rbx+0x20]",
    "mov     edi, dword [rbx]",
    "and     eax, 0x14",
    "cmp     eax, 0x10",
    "je      0x8fde0",
    "mov     rdx, qword [rbx+0x8]",
    "lea     rcx, [rax+0x1]",
    "mov     qword [rbx+0x28], rcx",
    "movzx   eax, byte [rdx+rax]",
    "mov     eax, dword [rbx+0x20]",
    "mov     edi, dword [rbx]",
    "and     eax, 0x14",
    "cmp     eax, 0x10",
    "jne     0x8fda7",
    "mov     edx, 0x1",
    "xor     esi, esi",
    "call    lseek",
    "mov     rdx, qword [rbx+0x10]",
    "mov     rsi, qword [rbx+0x8]",
    "mov     edi, dword [rbx]",
    "mov     r13, rax",
    "call    zread",
    "mov     r12, rax",
    "test    rax, rax",
    "jle     0x8fe8a",
    "mov     rdx, qword [rbx+0x10]",
    "mov     rsi, qword [rbx+0x8]",
    "call    zread",
    "mov     r12, rax",
    "jmp     0x8fde0",
    "mov     rax, qword [rbx+0x8]",
    "mov     qword [rbx+0x28], 0x0",
    "mov     qword [rbx+0x18], 0x0",
    "mov     byte [rax], 0x0",
    "test    r12, r12",
    "jne     0x8feb4",
    "mov     edi, dword [rbx]",
    "mov     edx, 0x1",
    "xor     esi, esi",
    "call    lseek",
    "sub     rax, r13",
    "cmp     r12, rax",
    "jge     0x8fdc0",
    "mov     rax, qword [rbx+0x8]",
    "mov     qword [rbx+0x18], r12",
    "mov     qword [rbx+0x28], 0x1",
    "movzx   eax, byte [rax]",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "call    strerror",
    "lea     rdi, [rel data_120aa1]  {\"error reading input file: %s\"}",
    "mov     rsi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "or      dword [rbx+0x20], 0x1",
    "mov     edi, dword [rbx]",
    "xor     edx, edx",
    "mov     rsi, r13",
    "call    lseek",
    "or      dword [rbx+0x20], 0x4",
    "mov     edi, dword [rbx]",
    "mov     edx, 0x1",
    "mov     qword [rbx+0x10], 0x1",
    "mov     rsi, qword [rbx+0x8]",
    "call    zread",
    "mov     r12, rax",
    "jmp     0x8fdb7",
    "test    r12, r12",
    "jle     0x8fe8a"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
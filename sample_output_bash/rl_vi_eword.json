{
  "address": "0xe4530",
  "rules": [
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "test    edi, edi",
    "je      0xe4848",
    "xor     eax, eax",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     r14, [rel rl_point]",
    "mov     dword [rbp-0x34], edi",
    "mov     edx, dword [r14]",
    "nop     word [rax+rax]",
    "add     rsp, 0x18",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rbx, [rel rl_line_buffer]",
    "movsxd  rax, edx",
    "mov     rsi, qword [rbx]",
    "movzx   eax, byte [rsi+rax]",
    "cmp     al, 0x20",
    "je      0xe45c2",
    "cmp     edx, ecx",
    "jge     0xe4628",
    "cmp     al, 0x9",
    "je      0xe45c2",
    "sub     dword [rbp-0x34], 0x1",
    "mov     dword [r14], edx",
    "jne     0xe4560",
    "mov     rsi, qword [rbx]",
    "movsxd  rax, edx",
    "movzx   r13d, byte [rsi+rax]",
    "cmp     r13b, 0x20",
    "je      0xe45dd",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xe45b0",
    "lea     rax, [rel rl_end]",
    "mov     ecx, dword [rax]",
    "lea     eax, [rcx-0x1]",
    "cmp     eax, edx",
    "jle     0xe4635",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xe45b0",
    "cmp     r13b, 0x9",
    "jne     0xe4650",
    "mov     eax, dword [r14]",
    "lea     edx, [rax+0x1]",
    "lea     rax, [rel rl_end]",
    "mov     dword [r14], edx",
    "mov     ecx, dword [rax]",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0xe481d",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0xe45b0",
    "cmp     ecx, edx",
    "jle     0xe4628",
    "mov     r13d, dword [r14]",
    "mov     edi, 0x1",
    "call    _rl_forward_char_internal",
    "mov     dword [r14], eax",
    "cmp     eax, r13d",
    "je      0xe47c8",
    "nop     dword [rax]",
    "mov     r13d, dword [r14]",
    "mov     edi, 0x1",
    "call    _rl_forward_char_internal",
    "mov     dword [r14], eax",
    "cmp     eax, r13d",
    "je      0xe47c8",
    "call    __ctype_b_loc",
    "mov     r15d, dword [r14]",
    "mov     r12, rax",
    "lea     rax, [rel rl_end]",
    "mov     rdx, qword [r12]",
    "mov     ecx, dword [rax]",
    "movzx   eax, r13b",
    "test    byte [rdx+rax*2], 0x8",
    "jne     0xe46fd",
    "lea     rax, [rel rl_end]",
    "sub     dword [rbp-0x34], 0x1",
    "mov     edx, dword [rax]",
    "mov     dword [r14], edx",
    "jne     0xe4560",
    "lea     rsi, [rel rl_end]",
    "mov     edx, dword [rsi]",
    "cmp     eax, edx",
    "jle     0xe461b",
    "lea     rdi, [rel rl_end]",
    "mov     edx, dword [rdi]",
    "cmp     eax, edx",
    "jg      0xe4628",
    "cmp     r15d, ecx",
    "jge     0xe4689",
    "cmp     r13b, 0x5f",
    "je      0xe46fd",
    "jmp     0xe4635",
    "mov     ecx, edx",
    "mov     edx, eax",
    "cmp     edx, ecx",
    "jl      0xe45c6",
    "jmp     0xe4628",
    "sub     dword [rbp-0x34], 0x1",
    "mov     edx, r15d",
    "mov     dword [r14], edx",
    "jne     0xe4560",
    "jmp     0xe46a0",
    "cmp     r15d, ecx",
    "jl      0xe4708",
    "nop     dword [rax+rax]",
    "jmp     0xe4635",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xe46bc",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xe4724",
    "mov     eax, dword [r14]",
    "lea     rsi, [rel rl_end]",
    "mov     edx, r15d",
    "add     eax, 0x1",
    "mov     ecx, dword [rsi]",
    "mov     dword [r14], eax",
    "mov     r15d, eax",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0xe4790",
    "mov     eax, dword [r14]",
    "lea     rsi, [rel rl_end]",
    "mov     edx, r15d",
    "add     eax, 0x1",
    "mov     ecx, dword [rsi]",
    "mov     dword [r14], eax",
    "mov     r15d, eax",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xe47e8",
    "mov     rdi, qword [rbx]",
    "movsxd  rax, r15d",
    "movzx   r9d, byte [rdi+rax]",
    "mov     rdi, qword [r12]",
    "test    byte [rdi+r9*2], 0x8",
    "jne     0xe46fd",
    "mov     r15d, dword [r14]",
    "mov     edi, 0x1",
    "call    _rl_forward_char_internal",
    "mov     dword [r14], eax",
    "cmp     eax, r15d",
    "je      0xe4689",
    "mov     rdi, qword [rbx]",
    "movsxd  rax, r15d",
    "movzx   r9d, byte [rdi+rax]",
    "mov     rdi, qword [r12]",
    "test    byte [rdi+r9*2], 0x8",
    "jne     0xe4628",
    "mov     r15d, dword [r14]",
    "mov     edi, 0x1",
    "call    _rl_forward_char_internal",
    "mov     dword [r14], eax",
    "cmp     eax, r15d",
    "je      0xe4689",
    "cmp     r9b, 0x5f",
    "jne     0xe4628",
    "lea     rsi, [rel rl_end]",
    "mov     ecx, dword [rsi]",
    "cmp     eax, ecx",
    "jg      0xe4689",
    "cmp     r9b, 0x5f",
    "je      0xe4628",
    "lea     rsi, [rel rl_end]",
    "mov     ecx, dword [rsi]",
    "cmp     eax, ecx",
    "jg      0xe4689",
    "mov     edx, r15d",
    "mov     r15d, eax",
    "jmp     0xe46d4",
    "cmp     r9b, 0x20",
    "je      0xe4628",
    "mov     edx, r15d",
    "mov     r15d, eax",
    "jmp     0xe473c",
    "cmp     r15d, ecx",
    "jge     0xe4628",
    "cmp     r9b, 0x9",
    "jne     0xe4680",
    "cmp     r15d, ecx",
    "jge     0xe4628",
    "sub     dword [rbp-0x34], 0x1",
    "mov     dword [r14], edx",
    "jne     0xe4560",
    "jmp     0xe4635"
  ]
}
{
  "address": "0xb8000",
  "rules": [
    "create or open file",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "write file on Linux",
    "log keystrokes via raw input data/4762f396f48d4e318a08125296476d20",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae",
    "delete file on Linux"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "xor     r15d, r15d",
    "push    r14",
    "lea     r14, [rel data_1214ba]  {\":e:lnrs\"}",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "lea     rbx, [rel jump_table_1372d4]",
    "sub     rsp, 0x38",
    "lea     r12, [rel loptend]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rel lcurrent]",
    "mov     dword [rbp-0x54], 0x0",
    "mov     qword [rel data_168d30], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rbp-0x48], 0x0",
    "mov     dword [rbp-0x58], 0x0",
    "mov     dword [rbp-0x50], 0x1",
    "mov     qword [rax], rdi",
    "mov     rax, rdi",
    "mov     rsi, r14",
    "mov     rdi, r13",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xb8180",
    "mov     rax, qword [rax+0x8]",
    "mov     rdi, qword [rax]",
    "xor     eax, eax",
    "cmp     byte [rdi], 0x2d",
    "sete    al",
    "xor     esi, esi",
    "add     rdi, rax",
    "call    legal_number",
    "test    eax, eax",
    "jne     0xb8180",
    "mov     rax, qword [rbp-0x48]",
    "mov     r13, qword [r12]",
    "test    rax, rax",
    "je      0xb8196",
    "cmp     eax, 0xffffff9d",
    "je      0xb8160",
    "test    r15d, r15d",
    "je      0xb8290",
    "cmp     byte [rax], 0x2d",
    "je      0xb8660",
    "call    builtin_help",
    "jmp     0xb80e5",
    "sub     eax, 0x65",
    "cmp     eax, 0xe",
    "ja      0xb80e0",
    "mov     r12, qword [rel data_1688b8]",
    "test    r12, r12",
    "je      0xb80eb",
    "xor     r12d, r12d",
    "test    r13, r13",
    "jne     0xb825f",
    "cmp     byte [rax+0x1], 0x0",
    "je      0xb819f",
    "mov     r15d, 0x102",
    "{Case 0x1-0x6, 0x8, 0xa-0xc}",
    "call    builtin_usage",
    "movsxd  rax, dword [rbx+rax*4]",
    "add     rax, rbx",
    "jmp     rax",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xb8df7",
    "lea     rbx, [rel hist_last_line_added]",
    "lea     rax, [rel remember_on_history]",
    "cmp     qword [r12], 0x0",
    "mov     edi, dword [rbx]",
    "mov     esi, dword [rax]",
    "je      0xb8691",
    "mov     rax, qword [r13+0x8]",
    "mov     esi, 0x3d",
    "mov     rdi, qword [rax]",
    "call    strchr",
    "test    rax, rax",
    "jne     0xb81b0",
    "jmp     0xb8b53",
    "jmp     0xb8196",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "mov     eax, r15d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "{Case 0xe}",
    "mov     r15d, 0x1",
    "{Case 0x9}",
    "mov     dword [rbp-0x50], 0x0",
    "jmp     0xb8116",
    "{Case 0x0}",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x48], rax",
    "jmp     0xb8116",
    "{Case 0x7}",
    "mov     dword [rbp-0x54], 0x1",
    "jmp     0xb8116",
    "{Case 0xd}",
    "mov     dword [rbp-0x58], 0x1",
    "jmp     0xb8116",
    "xor     edx, edx",
    "test    esi, esi",
    "je      0xb82e0",
    "lea     rax, [r12+0x8]",
    "xor     edx, edx",
    "nop     dword [rax]",
    "mov     byte [rax], 0x0",
    "mov     edi, 0x18",
    "lea     r14, [rax+0x1]",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xb8e3c",
    "test    r12, r12",
    "jne     0xb85ae",
    "mov     r14, qword [rel data_1688b8]",
    "test    r14, r14",
    "je      0xb8b31",
    "mov     qword [r12], rax",
    "test    rax, rax",
    "je      0xb80a8",
    "lea     rax, [rel lcurrent]",
    "mov     rax, qword [rax]",
    "jmp     0xb807e",
    "lea     rax, [rel subshell_environment]",
    "mov     ecx, edx",
    "test    byte [rax], 0x4",
    "je      0xb82fb",
    "mov     esi, edi",
    "xor     edx, edx",
    "not     esi",
    "add     rax, 0x8",
    "mov     ecx, edx",
    "add     edx, 0x1",
    "cmp     qword [rax-0x8], 0x0",
    "jne     0xb82c8",
    "test    esi, esi",
    "jne     0xb8688",
    "mov     esi, 0x18",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [r13+0x8]",
    "mov     qword [rbx], 0x0",
    "mov     r8, qword [rax]",
    "mov     rdi, r8",
    "mov     qword [rbp-0x48], r8",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     r8, qword [rbp-0x48]",
    "test    rax, rax",
    "mov     rcx, rax",
    "je      0xb8e1a",
    "mov     rdi, qword [r12]",
    "mov     rbx, r12",
    "test    rdi, rdi",
    "jne     0xb83fc",
    "mov     r14, qword [rel data_1688b8]",
    "jmp     0xb8426",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1214c2]  {\"no command found\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xb83e5",
    "xor     edi, edi",
    "jmp     0xb8436",
    "sub     ecx, edi",
    "mov     esi, ecx",
    "test    edx, edx",
    "je      0xb8c00",
    "lea     rax, [rel enable_history_list]",
    "cmp     dword [rax], 0x1",
    "adc     ecx, 0xffffffff",
    "cmp     esi, edx",
    "je      0xb8c0b",
    "sub     ecx, edi",
    "mov     esi, ecx",
    "jmp     0xb8307",
    "mov     qword [rbp-0x50], rax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, rcx",
    "mov     rdx, r15",
    "mov     rsi, r8",
    "call    __strcpy_chk",
    "mov     rdi, r14",
    "mov     qword [rbx+0x8], rax",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0xb8dfc",
    "mov     qword [rbx], 0x0",
    "nop     dword [rax+rax]",
    "jmp     0xb8282",
    "mov     rax, qword [r13+0x8]",
    "mov     rdi, qword [rax]",
    "mov     r15d, 0x1",
    "jmp     0xb80eb",
    "xor     edx, edx",
    "mov     rsi, r14",
    "call    sub_b1370",
    "test    eax, eax",
    "js      0xb85d8",
    "xor     r14d, r14d",
    "test    ecx, ecx",
    "jne     0xb833f",
    "lea     edi, [rdx-0x1]",
    "movsxd  rcx, edx",
    "movsxd  rax, edi",
    "sub     rcx, 0x2",
    "mov     edi, edi",
    "sub     rcx, rdi",
    "jmp     0xb832d",
    "movsxd  rdx, edx",
    "jmp     0xb8c19",
    "xor     eax, eax",
    "test    esi, esi",
    "cmovns  eax, esi",
    "mov     dword [rbp-0x5c], eax",
    "mov     qword [rbp-0x48], rax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r15",
    "mov     rsi, r14",
    "mov     rdi, rcx",
    "call    __strcpy_chk",
    "mov     qword [rbx+0x10], rax",
    "test    r12, r12",
    "je      0xb824f",
    "mov     r12, rdi",
    "mov     rdi, qword [rdi]",
    "mov     qword [r12], rbx",
    "mov     rbx, r12",
    "test    rdi, rdi",
    "jne     0xb8408",
    "mov     r14, qword [rel data_1688b8]",
    "test    r13, r13",
    "je      0xb842d",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1214c2]  {\"no command found\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "test    r12, r12",
    "je      0xb83e5",
    "cdqe    ",
    "mov     rax, qword [r14+rax*8]",
    "mov     r14, qword [rax]",
    "mov     rdi, r14",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xb8ec9",
    "cmp     qword [r12+rax*8], 0x0",
    "je      0xb8320",
    "cmp     qword [r12+rdx*8], 0x0",
    "je      0xb8c10",
    "mov     r13d, dword [rbp-0x54]",
    "mov     eax, dword [rbp-0x5c]",
    "test    r13d, r13d",
    "je      0xb8b17",
    "mov     rax, qword [r13+0x8]",
    "mov     edx, dword [rbp-0x54]",
    "mov     rsi, r12",
    "mov     rdi, qword [rax]",
    "or      edx, 0x2",
    "call    sub_b1370",
    "mov     r15d, eax",
    "mov     rax, qword [r13]",
    "test    rax, rax",
    "je      0xb8af1",
    "mov     r13, qword [r13]",
    "test    r13, r13",
    "je      0xb83f0",
    "mov     qword [rbx], r12",
    "test    r14, r14",
    "je      0xb85d8",
    "mov     rbx, r12",
    "mov     r12, qword [r12]",
    "mov     rdi, qword [rbx+0x8]",
    "test    rdi, rdi",
    "je      0xb8613",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r14",
    "mov     rdi, r13",
    "mov     r15, r13",
    "call    __strcpy_chk",
    "test    r12, r12",
    "je      0xb8638",
    "sub     rax, 0x1",
    "cmp     rcx, rax",
    "je      0xb86a1",
    "mov     r14d, eax",
    "sub     rdx, 0x1",
    "cmp     edx, 0xffffffff",
    "je      0xb8c92",
    "xor     eax, eax",
    "test    edx, edx",
    "cmovns  eax, edx",
    "mov     dword [rbp-0x5c], eax",
    "jmp     0xb8349",
    "mov     dword [rbp-0x60], eax",
    "mov     r13d, eax",
    "jmp     0xb8a6f",
    "lea     r14d, [rax-0xf]",
    "xor     eax, eax",
    "test    r14d, r14d",
    "cmovs   r14d, eax",
    "cmp     r15d, r14d",
    "je      0xb8a19",
    "mov     rax, qword [rax+0x8]",
    "mov     edx, dword [rbp-0x54]",
    "mov     rsi, r12",
    "mov     rdi, qword [rax]",
    "call    sub_b1370",
    "cmp     r15d, 0x80000000",
    "sete    dl",
    "cmp     eax, 0x80000000",
    "sete    sil",
    "or      edx, esi",
    "mov     rdi, qword [rbx]",
    "test    rdi, rdi",
    "je      0xb85c3",
    "mov     r12, rbx",
    "mov     rdi, qword [rbx+0x10]",
    "test    rdi, rdi",
    "je      0xb8621",
    "call    free",
    "mov     rax, qword [rel stderr]",
    "mov     rcx, r13",
    "mov     esi, 0x2",
    "lea     rdx, [rel data_1212aa[4]]  {\"%s\\n\"}",
    "mov     rdi, qword [rax]",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "jmp     0xb854d",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xb8eb3",
    "xor     r14d, r14d",
    "jmp     0xb8337",
    "mov     dword [rbp-0x5c], 0x0",
    "jmp     0xb8349",
    "test    r13, r13",
    "je      0xb86a9",
    "mov     r10d, dword [rbx]",
    "test    r10d, r10d",
    "jne     0xb8c2f",
    "mov     dword [rbp-0x60], eax",
    "jmp     0xb8ad7",
    "nop     dword [rax]",
    "mov     eax, r14d",
    "mov     r14d, dword [rbp-0x54]",
    "cmp     r15d, 0x80000000",
    "mov     eax, dword [rbp-0x5c]",
    "sete    dl",
    "test    r14d, r14d",
    "cmove   eax, r15d",
    "jmp     0xb839e",
    "cmp     r15d, 0x80000001",
    "je      0xb83a6",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1214d3]  {\"history specification\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xb8c6f",
    "mov     r14, qword [rel data_1688b8]",
    "mov     r12, rbx",
    "jmp     0xb842d",
    "mov     rdi, rbx",
    "call    free",
    "test    r12, r12",
    "jne     0xb85fe",
    "call    free",
    "cmp     byte [r13], 0x0",
    "je      0xb8579",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r15",
    "mov     rdi, r13",
    "mov     rbx, r12",
    "call    __strcpy_chk",
    "nop     dword [rax]",
    "call    bash_delete_last_history",
    "movsxd  rax, dword [rbp-0x5c]",
    "mov     rdx, rax",
    "lea     rax, [r12+rax*8]",
    "cmp     dword [rbp-0x60], r13d",
    "jne     0xb8c9e",
    "xor     eax, eax",
    "test    r13d, r13d",
    "cmovns  eax, r13d",
    "mov     r14d, eax",
    "cmp     dword [rbp-0x60], eax",
    "jle     0xb8dc9",
    "mov     r9d, dword [rbp-0x58]",
    "mov     dword [rbp-0x5c], r14d",
    "test    r9d, r9d",
    "je      0xb8994",
    "mov     r8d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r8d, r8d",
    "jne     0xb86f9",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xb89b0",
    "cmp     eax, 0x80000001",
    "je      0xb83a6",
    "test    dl, dl",
    "je      0xb8a1c",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1217c9[0xc]]  {\"argument\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rbx, rax",
    "jmp     0xb83c5",
    "lea     rsi, [rel data_121106[4]]  {\"%s out of range\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xb83e5",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xb8df7",
    "mov     rdi, r13",
    "call    strlen",
    "cdqe    ",
    "lea     rax, [r13+rax-0x1]",
    "cmp     byte [rax], 0xa",
    "je      0xb866f",
    "mov     rdx, qword [rbx+0x10]",
    "mov     rsi, qword [rbx+0x8]",
    "mov     rdi, r13",
    "mov     r14, r13",
    "mov     ecx, 0x1",
    "call    strsub",
    "mov     rdi, r14",
    "mov     r13, rax",
    "call    free",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0xb84c0",
    "mov     rdi, r15",
    "call    free",
    "nop     dword [rax+rax]",
    "cmp     qword [rax], 0x0",
    "mov     eax, dword [rbp-0x5c]",
    "je      0xb8d44",
    "cmp     edx, r13d",
    "jne     0xb8c9e",
    "mov     r14d, dword [rbp-0x60]",
    "mov     dword [rbp-0x60], eax",
    "jmp     0xb8a97",
    "mov     dword [rbp-0x58], 0x1",
    "mov     eax, dword [rbp-0x60]",
    "xor     ebx, ebx",
    "cmp     r14d, eax",
    "jle     0xb86e8",
    "mov     r14d, dword [rbp-0x60]",
    "jmp     0xb878d",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0xb870a",
    "movsxd  rax, r14d",
    "lea     r15, [r12+rax*8]",
    "cmp     qword [r15], 0x0",
    "je      0xb8781",
    "cmp     eax, 0x80000002",
    "je      0xb8b31",
    "add     rsp, 0x38",
    "mov     rdi, r13",
    "mov     edx, 0x4",
    "pop     rbx",
    "lea     rsi, [rel data_1214ee]  {\"fc\"}",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     parse_and_execute",
    "mov     byte [rax], 0x0",
    "cmp     byte [r13], 0x0",
    "je      0xb8579",
    "call    bash_delete_last_history",
    "mov     rdi, r13",
    "call    maybe_add_history",
    "mov     rdi, qword [rbx+0x10]",
    "test    rdi, rdi",
    "je      0xb851b",
    "call    free",
    "sub     eax, 0x1",
    "cmp     eax, r13d",
    "jle     0xb8edf",
    "cmp     eax, r13d",
    "jle     0xb8c54",
    "cmp     qword [rax], 0x0",
    "je      0xb8dd5",
    "lea     rdx, [rbp-0x40]",
    "mov     esi, 0x5",
    "lea     rdi, [rel 0x1214e9]  {\"bash-fc\"}",
    "call    sh_mktmpfd",
    "mov     ebx, eax",
    "test    eax, eax",
    "js      0xb8d7c",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "call    strerror",
    "mov     rbx, qword [rbp-0x40]",
    "mov     r12, rax",
    "test    rbx, rbx",
    "je      0xb8dee",
    "lea     rsi, [rel data_121f79[5]]  {\"w\"}",
    "mov     edi, eax",
    "call    fdopen",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xb8d75",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xb89c0",
    "jmp     0xb879e",
    "mov     eax, dword [rbp-0x5c]",
    "mov     ebx, 0x1",
    "cmp     r14d, eax",
    "jge     0xb86e8",
    "test    ebx, ebx",
    "je      0xb8990",
    "mov     edi, dword [rbp-0x50]",
    "test    edi, edi",
    "jne     0xb89e0",
    "cmp     r15d, 0x80000002",
    "je      0xb8b31",
    "jmp     0xb856c",
    "mov     rdi, rbx",
    "call    free",
    "test    r12, r12",
    "jne     0xb84f8",
    "call    free",
    "mov     r13d, eax",
    "jmp     0xb8a7b",
    "mov     edx, dword [rbp-0x60]",
    "cmp     eax, edx",
    "cmovg   eax, edx",
    "mov     r13d, dword [rbp-0x5c]",
    "jmp     0xb8a7b",
    "mov     edx, dword [rbp-0x60]",
    "cmp     edx, eax",
    "cmovle  eax, edx",
    "lea     eax, [r13-0x1]",
    "sub     r13d, 0x2",
    "movsxd  rdx, eax",
    "cmp     qword [r12+rdx*8], 0x0",
    "cmovne  r13d, eax",
    "jmp     0xb8d58",
    "lea     rbx, [rel data_122e02]",
    "jmp     0xb8d94",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1214f1]  {\"%s: cannot open temp file: %s\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     rdi, qword [rbp-0x40]",
    "test    rdi, rdi",
    "jne     0xb8baa",
    "mov     edi, ebx",
    "call    close",
    "mov     dword [rbp-0x50], 0x0",
    "mov     edx, dword [rbp-0x54]",
    "test    edx, edx",
    "jne     0xb8b22",
    "add     r14d, 0x1",
    "sub     r14d, 0x1",
    "lea     rax, [rel history_base]",
    "lea     rdx, [rel data_12026c[8]]  {\"%d\"}",
    "mov     esi, 0x2",
    "mov     rdi, r13",
    "mov     ecx, dword [rax]",
    "xor     eax, eax",
    "add     ecx, r14d",
    "call    __fprintf_chk",
    "jmp     0xb8722",
    "mov     esi, dword [rbp-0x54]",
    "test    esi, esi",
    "je      0xb8760",
    "xor     edx, edx",
    "test    r15d, r15d",
    "mov     r11d, dword [rbp-0x54]",
    "cmovns  edx, r15d",
    "mov     dword [rbp-0x60], edx",
    "xor     edx, edx",
    "test    eax, eax",
    "cmovns  edx, eax",
    "mov     r13d, edx",
    "test    r11d, r11d",
    "jne     0xb8ea7",
    "mov     rbx, r12",
    "mov     r12, qword [r12]",
    "mov     rdi, qword [rbx+0x8]",
    "test    rdi, rdi",
    "je      0xb850d",
    "mov     rax, qword [rel stderr]",
    "mov     rcx, r13",
    "mov     esi, 0x2",
    "lea     rdx, [rel data_1212aa[4]]  {\"%s\\n\"}",
    "mov     rdi, qword [rax]",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "test    r13, r13",
    "je      0xb8579",
    "mov     dword [rbp-0x60], eax",
    "jmp     0xb8a7b",
    "xor     r14d, r14d",
    "jmp     0xb8a97",
    "xor     edx, edx",
    "test    r13d, r13d",
    "cmovns  edx, r13d",
    "mov     dword [rbp-0x60], edx",
    "cmp     eax, 0xffffffff",
    "jne     0xb8cb8",
    "call    free",
    "jmp     0xb83e5",
    "jmp     0xb83e5",
    "xor     edi, edi",
    "call    sh_chkwrite",
    "mov     r15d, eax",
    "jmp     0xb80eb",
    "mov     rdi, r13",
    "call    fflush",
    "mov     rdi, r13",
    "call    ferror",
    "test    eax, eax",
    "jne     0xb8b66",
    "mov     rax, qword [r15]",
    "mov     rcx, qword [rax]",
    "test    rcx, rcx",
    "je      0xb8781",
    "lea     rax, [rel posixly_correct]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0xb8a07",
    "mov     dword [rbp-0x5c], edx",
    "mov     r14d, dword [rbp-0x60]",
    "jmp     0xb86c6",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "call    strerror",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_12113d]  {\"write error: %s\"}",
    "xor     edi, edi",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     rdi, r13",
    "call    fclose",
    "mov     rdi, qword [rbp-0x40]",
    "test    rdi, rdi",
    "je      0xb83e5",
    "mov     rdi, r13",
    "call    fclose",
    "mov     rdi, qword [rbp-0x48]",
    "test    rdi, rdi",
    "je      0xb8bb4",
    "lea     rdx, [rel data_1212aa[4]]  {\"%s\\n\"}",
    "mov     esi, 0x2",
    "mov     rdi, r13",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "mov     rsi, r13",
    "mov     edi, 0x9",
    "call    fputc",
    "jmp     0xb8760",
    "mov     rax, qword [r15]",
    "lea     rdx, [rel data_12150f]",
    "mov     esi, 0x2",
    "mov     rdi, r13",
    "cmp     qword [rax+0x10], 0x1",
    "sbb     ecx, ecx",
    "xor     eax, eax",
    "and     ecx, 0xfffffff6",
    "add     ecx, 0x2a",
    "call    __fprintf_chk",
    "mov     rax, qword [rel stdout]",
    "mov     dword [rbp-0x60], r14d",
    "mov     ebx, 0x1",
    "mov     r13, qword [rax]",
    "mov     eax, dword [rbp-0x5c]",
    "cmp     r14d, eax",
    "jle     0xb8c8a",
    "lea     rax, [rel posixly_correct]",
    "mov     r14, qword [rbp-0x40]",
    "lea     r13, [rel data_133f80]  {\"${FCEDIT:-${EDITOR:-$(command -v\u2026\"}",
    "mov     eax, dword [rax]",
    "mov     rdi, r14",
    "test    eax, eax",
    "lea     rax, [rel data_133f48]  {\"${FCEDIT:-${EDITOR:-$(command -v\u2026\"}",
    "cmovne  r13, rax",
    "call    strlen",
    "lea     r12, [rax+0x38]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xb8e73",
    "call    strlen",
    "mov     r13, qword [rbp-0x40]",
    "mov     rbx, rax",
    "mov     rdi, r13",
    "call    strlen",
    "lea     r12, [rbx+rax+0x2]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xb8e8d",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r9, r14",
    "mov     r8, r13",
    "jmp     0xb880a",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r8, qword [rbp-0x48]",
    "mov     r9, r13",
    "mov     rdx, r12",
    "mov     esi, 0x2",
    "mov     rdi, rbx",
    "xor     eax, eax",
    "lea     rcx, [rel data_120927[9]]  {\"%s %s\"}",
    "call    __sprintf_chk",
    "mov     edx, 0x4",
    "lea     rsi, [rel data_1214ee]  {\"fc\"}",
    "mov     rdi, rbx",
    "call    parse_and_execute",
    "test    eax, eax",
    "jne     0xb8c5d",
    "mov     rdi, qword [rbp-0x40]",
    "call    unlink",
    "mov     rdi, qword [rbp-0x40]",
    "jmp     0xb8baa",
    "lea     rax, [rel remember_on_history]",
    "lea     r13, [rel 0x121513]  {\"fc builtin\"}",
    "mov     rdi, r13",
    "mov     dword [rax], 0x1",
    "call    begin_unwind_frame",
    "lea     rdx, [rel uwcache]",
    "mov     r12, qword [rbp-0x40]",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0xb8cc0",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x323ea",
    "mov     rcx, qword [rdx]",
    "lea     esi, [rax-0x1]",
    "movsxd  rdi, esi",
    "mov     dword [rdx+0xc], esi",
    "mov     rbx, qword [rcx+rdi*8]",
    "mov     rdi, qword [rel data_161a50]",
    "mov     qword [rbx], rdi",
    "lea     rdi, [rel xfree]",
    "mov     qword [rbx+0x10], r12",
    "mov     r12, qword [rbp-0x40]",
    "mov     qword [rbx+0x8], rdi",
    "mov     qword [rel data_161a50], rbx",
    "test    esi, esi",
    "je      0xb8cfa",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rel data_161a50]",
    "mov     qword [rel data_161a50], rbx",
    "mov     qword [rbx+0x10], r12",
    "mov     r12, qword [rbp-0x40]",
    "mov     qword [rbx], rax",
    "lea     rax, [rel xfree]",
    "mov     qword [rbx+0x8], rax",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x323ea",
    "lea     esi, [rax-0x2]",
    "movsxd  rdi, esi",
    "mov     dword [rdx+0xc], esi",
    "mov     r14, qword [rcx+rdi*8]",
    "mov     rdi, qword [rel unlink]",
    "mov     qword [r14], rbx",
    "mov     qword [r14+0x8], rdi",
    "mov     qword [r14+0x10], r12",
    "mov     qword [rel data_161a50], r14",
    "test    esi, esi",
    "je      0xb8d29",
    "mov     qword [rax], rbx",
    "mov     rax, qword [rel unlink]",
    "mov     qword [r14+0x10], r12",
    "mov     qword [r14+0x8], rax",
    "mov     qword [rel data_161a50], r14",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "jne     0xb88e7",
    "sub     eax, 0x3",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     r12, qword [rcx+rax*8]",
    "lea     rax, [rel sub_b1280]",
    "mov     qword [r12], r14",
    "mov     edi, 0x20",
    "mov     qword [r12+0x8], rax",
    "mov     qword [r12+0x10], 0x0",
    "mov     qword [rel data_161a50], r12",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xb8e54",
    "jmp     0x323ea",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel sub_872f0]",
    "mov     qword [rbx], r12",
    "mov     rdi, qword [rbp-0x40]",
    "mov     esi, 0xa3",
    "mov     qword [rbx+0x8], rax",
    "lea     rax, [rel suppress_debug_trap_verbose]",
    "mov     dword [rbx+0x18], 0x4",
    "mov     edx, dword [rax]",
    "mov     qword [rbx+0x10], rax",
    "mov     dword [rax], 0x1",
    "xor     eax, eax",
    "mov     dword [rbx+0x1c], edx",
    "lea     rdx, [rel echo_input_at_read]",
    "mov     qword [rel data_161a50], rbx",
    "mov     dword [rdx], 0x1",
    "call    sub_b6240",
    "cmp     qword [rel data_161a50], 0x0",
    "mov     r15d, eax",
    "je      0xb80eb",
    "mov     rdi, r13",
    "call    sub_113ed0",
    "jmp     0xb80eb"
  ]
}
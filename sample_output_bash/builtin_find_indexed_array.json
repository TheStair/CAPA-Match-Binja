{
  "address": "0xb1120",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "check for kernel debugger via shared user data structure/47a8170337e74f7ca5a6c64253eb43bf"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "mov     ebx, esi",
    "sub     rsp, 0x10",
    "and     esi, 0x2",
    "je      0xb114e",
    "mov     esi, 0x1",
    "mov     rdi, r12",
    "call    find_or_make_array_variable",
    "test    rax, rax",
    "je      0xb11c8",
    "call    legal_identifier",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "test    eax, eax",
    "je      0xb11b4",
    "xor     eax, eax",
    "jmp     0xb1172",
    "mov     edx, dword [rax+0x28 {Elf64_Header::section_header_offset.d}]",
    "test    dl, 0x4",
    "je      0xb11a8",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "add     rsp, 0x10",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121291]  {\"%s: not an indexed array\"}",
    "test    dh, 0x10",
    "jne     0xb1180",
    "and     dh, 0xef",
    "and     ebx, 0x1",
    "mov     dword [rax+0x28 {Elf64_Header::section_header_offset.d}], edx",
    "je      0xb1172",
    "and     ebx, 0x1",
    "jne     0xb118b",
    "mov     rdi, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     qword [rbp-0x18], rax",
    "call    array_flush",
    "mov     rax, qword [rbp-0x18]",
    "add     rsp, 0x10",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    "
  ]
}
{
  "address": "0xdd4b0",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/4f0637c1ae9b445ca3ec93a4b4e0bb6d",
    "hash data using aphash/2602c80a9b3846b9ae92e2e83b13e866",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/af1fc90a7adf4a2ea648cfac1c599984",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "contain loop",
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/bee29d5f30484915bb6e92fdf1038d2c",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/9710d9ee76a4466b954966f2a98c40ba",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check if file exists/e724fb9dd0e04bc2af009f8be857642c/229a7b83bcc7454aa2d6f8d97a1a725e",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12d, edx",
    "push    rbx",
    "sub     rsp, 0x98",
    "mov     qword [rbp-0x88], rdi",
    "mov     qword [rbp-0x98], rsi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x60], 0x0",
    "call    strlen",
    "mov     rbx, rax",
    "mov     dword [rbp-0x7c], eax",
    "call    __ctype_get_mb_cur_max",
    "mov     dword [rbp-0x9c], eax",
    "lea     eax, [rbx+rbx+0x1]",
    "cdqe    ",
    "mov     rdi, rax",
    "mov     qword [rbp-0xa8], rax",
    "call    malloc",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0xdddd6",
    "mov     rsi, qword [rbp-0xa8]",
    "mov     qword [rbp-0x78], rax",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     eax, r12d",
    "and     r12d, 0xffffefff",
    "and     eax, 0x1000",
    "mov     dword [rbp-0x78], r12d",
    "mov     dword [rbp-0xa0], eax",
    "test    ebx, ebx",
    "jle     0xdddb0",
    "mov     r14, rdx",
    "jmp     0xdd7a1",
    "mov     eax, dword [rbp-0x7c]",
    "mov     dword [rbp-0x80], 0x0",
    "xor     r14d, r14d",
    "xor     ebx, ebx",
    "mov     qword [rbp-0x90], rdx",
    "sub     eax, 0x1",
    "mov     dword [rbp-0xb4], eax",
    "jmp     0xdd622",
    "mov     byte [r14], 0x0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xdddd1",
    "call    __ctype_get_mb_cur_max",
    "mov     rsi, qword [rbp-0x88]",
    "movsxd  r12, ebx",
    "add     r12, rsi",
    "movzx   ecx, byte [r12]",
    "cmp     rax, 0x1",
    "je      0xdd7d0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x98",
    "mov     rax, rdx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "movsx   r13d, cl",
    "jmp     0xdd6a0",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "jne     0xdd7d0",
    "mov     edi, r13d",
    "mov     dword [rbp-0x68], r13d",
    "call    iswalnum",
    "test    eax, eax",
    "je      0xdd570",
    "cmp     dword [rbp-0xb4], ebx",
    "jle     0xdd7d0",
    "cmp     qword [rbp-0x98], 0x0",
    "mov     dword [rbp-0x80], 0x0",
    "je      0xddaf8",
    "cmp     qword [rbp-0x98], 0x0",
    "jne     0xdd585",
    "mov     edx, dword [rbp-0x7c]",
    "lea     rcx, [rbp-0x58]",
    "lea     rdi, [rbp-0x64]",
    "mov     rsi, r12",
    "mov     qword [rbp-0x58], 0x0",
    "sub     edx, ebx",
    "movsxd  rdx, edx",
    "call    mbrtowc",
    "mov     r13d, dword [rbp-0x64]",
    "sub     rax, 0x1",
    "cmp     rax, 0xfffffffffffffffc",
    "jbe     0xdd6a0",
    "cmp     dword [rbp-0x78], 0x4",
    "je      0xdd8b0",
    "lea     rax, [rel locale_mb_cur_max]",
    "lea     r13d, [rbx+0x1]",
    "cmp     dword [rax], 0x1",
    "jle     0xdd5bd",
    "cmp     dword [rbp-0x78], 0x4",
    "je      0xdd819",
    "movsx   r13d, byte [r12]",
    "nop     ",
    "mov     eax, dword [rbp-0xa0]",
    "test    eax, eax",
    "jne     0xdd8c8",
    "cmp     dword [rbp-0x78], 0x8",
    "je      0xddc80",
    "mov     rdi, qword [rbp-0x88]",
    "mov     edx, r13d",
    "mov     esi, ebx",
    "call    substring",
    "mov     r15, rax",
    "test    rax, rax",
    "jne     0xdd7e0",
    "movzx   ecx, byte [r12]",
    "lea     rdx, [rel is_basic_table]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     r13d, dword [rdx+rax*4]",
    "shr     r13d, cl",
    "and     r13d, 0x1",
    "je      0xdd920",
    "mov     r15d, dword [rbp-0xa0]",
    "test    r15d, r15d",
    "je      0xdd8c0",
    "cmp     dword [rbp-0x78], 0x8",
    "je      0xdd950",
    "cmp     dword [rbp-0x9c], 0x1",
    "jne     0xdd980",
    "nop     word [rax+rax]",
    "mov     r11d, dword [rbp-0xa0]",
    "test    r11d, r11d",
    "jne     0xdd836",
    "cmp     dword [rbp-0x78], 0x40",
    "je      0xddc10",
    "mov     rdi, qword [rbp-0x98]",
    "mov     edx, 0x20",
    "mov     rsi, rax",
    "call    xstrmatch",
    "mov     rdi, r15",
    "mov     dword [rbp-0xb0], eax",
    "call    free",
    "cmp     dword [rbp-0xb0], 0x1",
    "je      0xdd5da",
    "mov     rax, qword [rbp-0xa8]",
    "movsxd  rdi, r14d",
    "mov     r15d, r13d",
    "mov     rsi, r12",
    "sub     r15d, ebx",
    "mov     ebx, r13d",
    "cmp     rax, rdi",
    "mov     rcx, rax",
    "mov     rax, qword [rbp-0x90]",
    "movsxd  rdx, r15d",
    "cmovb   rcx, rdi",
    "add     r14d, r15d",
    "sub     rcx, rdi",
    "add     rdi, rax",
    "call    __memcpy_chk",
    "mov     dword [rbp-0x80], 0x1",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xddba0",
    "add     r13d, ebx",
    "test    ebx, ebx",
    "jg      0xdd836",
    "mov     r13d, dword [rbp-0x80]",
    "test    r13d, r13d",
    "je      0xdd8c8",
    "mov     r10d, dword [rbp-0xa0]",
    "test    r10d, r10d",
    "je      0xddc90",
    "cmp     dword [rbp-0x78], 0x40",
    "je      0xddbd8",
    "mov     dword [rbp-0x80], 0x1",
    "mov     r15d, 0x2",
    "mov     dword [rbp-0x80], 0x1",
    "mov     r13d, dword [rbp-0x68]",
    "cmp     dword [rbp-0x9c], 0x1",
    "jne     0xddb88",
    "test    ebx, ebx",
    "jg      0xdd8c8",
    "mov     r8d, dword [rbp-0xa0]",
    "test    r8d, r8d",
    "jne     0xdd8c8",
    "mov     eax, dword [rbp-0x78]",
    "cmp     eax, 0x80",
    "je      0xddca0",
    "cmp     dword [rbp-0x78], 0x4",
    "jne     0xdd6cc",
    "mov     rdx, qword [rbp-0x90]",
    "movsxd  r14, r14d",
    "add     r14, rdx",
    "mov     edx, dword [rbp-0x7c]",
    "lea     rcx, [rbp-0x60]",
    "mov     rsi, r12",
    "xor     edi, edi",
    "mov     r15, qword [rbp-0x60]",
    "sub     edx, ebx",
    "movsxd  rdx, edx",
    "call    mbrtowc",
    "mov     r13, rax",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0xddd00",
    "test    cl, cl",
    "js      0xddba0",
    "mov     r9d, dword [rbp-0x80]",
    "test    r9d, r9d",
    "je      0xdd836",
    "mov     edi, dword [rbp-0xa0]",
    "test    edi, edi",
    "je      0xddc20",
    "cmp     dword [rbp-0x78], 0x80",
    "je      0xddca0",
    "movzx   r13d, byte [r12]",
    "mov     dword [rbp-0x68], r13d",
    "cmp     r15d, 0x10",
    "jne     0xdd70c",
    "test    rax, rax",
    "je      0xddb48",
    "mov     rsi, qword [rbp-0x90]",
    "movsxd  rax, r14d",
    "add     r14d, 0x1",
    "mov     byte [rsi+rax], r13b",
    "lea     eax, [r13+0x80]",
    "cmp     eax, 0x17f",
    "ja      0xdd720",
    "mov     dword [rbp-0x80], 0x1",
    "mov     r15d, 0x1",
    "jmp     0xdd98d",
    "mov     dword [rbp-0x80], 0x1",
    "mov     r13d, dword [rbp-0x68]",
    "jmp     0xdd836",
    "test    ebx, ebx",
    "jle     0xdd8c8",
    "mov     ecx, dword [rbp-0xa0]",
    "test    ecx, ecx",
    "je      0xddd30",
    "cmp     eax, 0x10",
    "je      0xddd7b",
    "test    rax, rax",
    "je      0xdd945",
    "mov     qword [rbp-0x60], r15",
    "lea     r13d, [rbx+0x1]",
    "jmp     0xdd5bd",
    "mov     r13d, 0x1",
    "jne     0xdd5ba",
    "cmp     dword [rbp-0x9c], 0x1",
    "je      0xdd8d5",
    "mov     esi, dword [rbp-0x80]",
    "test    esi, esi",
    "je      0xdd8c8",
    "cmp     dword [rbp-0x78], 0x10",
    "je      0xddd70",
    "cmp     r15d, 0x10",
    "jle     0xdddb8",
    "mov     edi, r13d",
    "call    iswupper",
    "mov     edi, r13d",
    "test    eax, eax",
    "je      0xddce0",
    "mov     dword [rbp-0x68], 0x0",
    "xor     esi, esi",
    "cmp     r15d, 0x2",
    "jne     0xdd9c8",
    "mov     esi, dword [rbp-0x68]",
    "cmp     r15d, 0x2",
    "je      0xddb5b",
    "add     ebx, 0x1",
    "cmp     dword [rbp-0x7c], ebx",
    "jg      0xdd622",
    "movzx   ecx, byte [r12]",
    "lea     rdx, [rel is_basic_table]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "jne     0xdd8a0",
    "call    __ctype_toupper_loc",
    "movsxd  r13, r13d",
    "mov     rax, qword [rax]",
    "mov     r13d, dword [rax+r13*4]",
    "jmp     0xdd720",
    "mov     edx, dword [rbp-0x7c]",
    "lea     r13, [rbp-0x60]",
    "lea     rdi, [rbp-0x68]",
    "mov     rsi, r12",
    "mov     rcx, r13",
    "sub     edx, ebx",
    "movsxd  rdx, edx",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0xddac0",
    "lea     eax, [r13+0x80]",
    "cmp     eax, 0x17f",
    "ja      0xdd720",
    "cmp     dword [rbp-0x9c], 0x1",
    "je      0xddbfa",
    "xor     r15d, r15d",
    "test    ebx, ebx",
    "setle   r15b",
    "cmp     dword [rbp-0x9c], 0x1",
    "je      0xddcc3",
    "mov     r15d, dword [rbp-0x80]",
    "xor     r15d, 0x1",
    "cmp     dword [rbp-0x9c], 0x1",
    "jne     0xddd46",
    "cmp     dword [rbp-0x9c], 0x1",
    "jne     0xddd98",
    "cmp     dword [rbp-0x9c], 0x1",
    "mov     r15d, dword [rbp-0x78]",
    "je      0xdd70c",
    "lea     r13d, [rbx+0x1]",
    "jmp     0xdd5bd",
    "jmp     0xdd5ba",
    "nop     word [rax+rax]",
    "cmp     dword [rbp-0x9c], 0x1",
    "jne     0xddd10",
    "mov     edx, dword [rbp-0x80]",
    "test    edx, edx",
    "jne     0xddbed",
    "cmp     dword [rbp-0x9c], 0x1",
    "jne     0xddd20",
    "cmp     r15d, 0x1",
    "je      0xdd84e",
    "cmp     r15d, 0x20",
    "je      0xddad3",
    "call    iswlower",
    "test    eax, eax",
    "je      0xdd720",
    "call    towlower",
    "mov     r13d, eax",
    "jmp     0xdd720",
    "jg      0xddc40",
    "mov     edi, esi",
    "add     ebx, eax",
    "jmp     0xdd619",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xdda30",
    "call    __ctype_tolower_loc",
    "movsxd  r13, r13d",
    "mov     rax, qword [rax]",
    "mov     r13d, dword [rax+r13*4]",
    "jmp     0xdd720",
    "mov     dword [rbp-0x80], 0x1",
    "mov     r13d, dword [rbp-0x68]",
    "jmp     0xdd720",
    "jmp     0xddd10",
    "mov     dword [rbp-0x80], 0x1",
    "mov     r13d, dword [rbp-0x68]",
    "cmp     r15d, 0x1",
    "jne     0xdd720",
    "mov     dword [rbp-0x80], 0x1",
    "jmp     0xdd98d",
    "mov     dword [rbp-0x80], 0x1",
    "mov     r15d, 0x10",
    "jmp     0xdd98d",
    "mov     dword [rbp-0x80], 0x1",
    "mov     r13d, dword [rbp-0x68]",
    "jmp     0xddad3",
    "jmp     0xdd98d",
    "mov     dword [rbp-0x80], 0x1",
    "xor     r15d, r15d",
    "jmp     0xdd98d",
    "mov     r15d, dword [rbp-0x78]",
    "jmp     0xdd98d",
    "mov     r13d, dword [rbp-0x68]",
    "mov     r15d, dword [rbp-0x78]",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movzx   eax, r13b",
    "mov     rdx, qword [rdx]",
    "test    byte [rdx+rax*2+0x1], 0x1",
    "je      0xdd720",
    "cmp     r15d, 0x2",
    "jne     0xdd720",
    "mov     edi, r13d",
    "call    towupper",
    "mov     r13d, eax",
    "jmp     0xdd720",
    "sub     r15d, 0x10",
    "and     r15d, 0xffffffef",
    "jne     0xdd9f0",
    "cmp     r15d, 0x1",
    "jne     0xdd9f0",
    "mov     rax, qword [rbp-0x90]",
    "movsxd  r15, r14d",
    "lea     r8, [rax+r15]",
    "cmp     esi, 0xff",
    "jg      0xdda60",
    "mov     edi, esi",
    "call    towupper",
    "mov     esi, eax",
    "jmp     0xdd9f0",
    "cmp     dword [rbp-0x7c], ebx",
    "jle     0xdd794",
    "mov     edx, dword [rbp-0x7c]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x60]",
    "mov     rsi, r12",
    "mov     r13, qword [rbp-0x60]",
    "sub     edx, ebx",
    "movsxd  rdx, edx",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0xdd890",
    "test    cl, cl",
    "js      0xdda30",
    "jmp     0xdd84e",
    "jmp     0xdd8e0",
    "mov     edi, esi",
    "mov     dword [rbp-0xb0], esi",
    "call    iswupper",
    "mov     esi, dword [rbp-0xb0]",
    "test    eax, eax",
    "mov     edi, esi",
    "je      0xddb5d",
    "mov     edi, esi",
    "mov     dword [rbp-0xb0], esi",
    "call    iswupper",
    "mov     esi, dword [rbp-0xb0]",
    "test    eax, eax",
    "jne     0xddd58",
    "lea     rdi, [rbp-0x50]",
    "mov     rdx, r13",
    "mov     qword [rbp-0xc0], r8",
    "mov     qword [rbp-0xb0], rdi",
    "call    wcrtomb",
    "mov     rdi, qword [rbp-0xb0]",
    "mov     r8, qword [rbp-0xc0]",
    "test    eax, eax",
    "mov     r13, rax",
    "movsxd  rdx, eax",
    "jle     0xdda97",
    "mov     eax, esi",
    "lea     rdx, [rel is_basic_table]",
    "mov     ecx, esi",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "je      0xdda60",
    "test    rax, rax",
    "je      0xdd788",
    "mov     qword [rbp-0x60], r13",
    "add     ebx, 0x1",
    "jmp     0xdd619",
    "mov     eax, 0x1",
    "jne     0xdd8a0",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movzx   eax, r13b",
    "mov     rdx, qword [rdx]",
    "test    byte [rdx+rax*2+0x1], 0x2",
    "je      0xdd720",
    "mov     dword [rbp-0xb0], esi",
    "call    iswlower",
    "mov     esi, dword [rbp-0xb0]",
    "test    eax, eax",
    "je      0xdd9f0",
    "call    towlower",
    "mov     esi, eax",
    "jmp     0xdd9f0",
    "mov     edi, esi",
    "call    towlower",
    "mov     esi, eax",
    "jmp     0xdd9f0",
    "nop     ",
    "mov     rax, qword [rbp-0xa8]",
    "mov     rsi, rdi",
    "mov     rdi, r8",
    "cmp     rax, r15",
    "mov     rcx, rax",
    "cmovb   rcx, r15",
    "add     r14d, r13d",
    "sub     rcx, r15",
    "call    __strncpy_chk",
    "jmp     0xdd732",
    "mov     byte [rbp+rdx-0x50], 0x0",
    "mov     byte [r8], sil",
    "add     r14d, 0x1",
    "jmp     0xdd732",
    "nop     dword [rax]",
    "nop     dword [rax]",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jle     0xdd788"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xd92a0",
  "rules": [
    "get socket status",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x128",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     eax, 0xffffffff",
    "test    edi, edi",
    "js      0xd9354",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xd9375",
    "lea     r13, [rbp-0xc0]",
    "mov     ebx, edi",
    "xor     eax, eax",
    "mov     ecx, 0x10",
    "lea     r14, [rbp-0x140]",
    "mov     rdi, r13",
    "movsxd  r15, ebx",
    "mov     r12d, 0x1",
    "rep stosq qword [rdi]",
    "mov     ecx, 0x10",
    "mov     rdi, r14",
    "rep stosq qword [rdi]",
    "mov     rdi, r15",
    "call    __fdelt_chk",
    "mov     ecx, ebx",
    "mov     rdi, r15",
    "shl     r12, cl",
    "or      qword [rbp+rax*8-0xc0], r12",
    "call    __fdelt_chk",
    "pxor    xmm0, xmm0",
    "xor     edx, edx",
    "lea     edi, [rbx+0x1]",
    "lea     r8, [rbp-0x150]",
    "mov     rcx, r14",
    "mov     rsi, r13",
    "or      qword [rbp+rax*8-0x140], r12",
    "movaps  xmmword [rbp-0x150], xmm0",
    "call    select",
    "test    eax, eax",
    "setg    al",
    "movzx   eax, al",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x128",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    "
  ]
}
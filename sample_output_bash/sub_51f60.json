{
  "address": "0x51f60",
  "rules": [
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x18",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "test    rsi, rsi",
    "je      0x51f90",
    "mov     qword [rbp-0x30], 0x0",
    "xor     edi, edi",
    "xor     eax, eax",
    "cmp     byte [rsi], 0x0",
    "mov     rdi, rsi",
    "jne     0x52000",
    "mov     qword [rbx+0x8], r13",
    "test    r12d, r12d",
    "je      0x51fd9",
    "call    free",
    "lea     rsi, [rbp-0x30]",
    "call    legal_number",
    "test    eax, eax",
    "je      0x51f90",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x52018",
    "or      dword [rbx+0x28], 0x10",
    "mov     rdi, qword [rbp-0x30]",
    "mov     eax, edi",
    "movsxd  rdi, edi",
    "jmp     0x51f9c",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x18",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "lea     rdx, [rel line_number_base]",
    "mov     r12d, dword [rbx+0x28]",
    "mov     dword [rdx], eax",
    "lea     rdx, [rel line_number]",
    "and     r12d, 0x10",
    "mov     dword [rdx], eax",
    "call    itos",
    "mov     rdi, qword [rbx+0x8]",
    "mov     r13, rax",
    "test    rdi, rdi",
    "je      0x51fcc"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
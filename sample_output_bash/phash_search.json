{
  "address": "0x8c6b0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     rax, [rel hashing_enabled]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x8c810",
    "xor     r12d, r12d",
    "lea     rax, [rel hashed_filenames]",
    "mov     rsi, qword [rax]",
    "test    rsi, rsi",
    "je      0x8c810",
    "xor     edx, edx",
    "mov     rbx, rdi",
    "call    hash_search",
    "test    rax, rax",
    "je      0x8c810",
    "mov     rax, qword [rax+0x10]",
    "mov     r13, qword [rax]",
    "mov     eax, dword [rax+0x8]",
    "test    al, 0x3",
    "je      0x8c795",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x8c84b",
    "test    al, 0x1",
    "cmovne  rbx, r13",
    "mov     rdi, rbx",
    "call    strlen",
    "cmp     byte [rbx], 0x2e",
    "lea     r15, [rax+0x1]",
    "jne     0x8c72f",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "add     rsp, 0x8",
    "mov     rdx, rbx",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __strcpy_chk",
    "lea     r14, [rax+0x3]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x8c861",
    "cmp     byte [rbx+0x1], 0x2f",
    "je      0x8c828",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     eax, 0x2f2e",
    "lea     rdi, [r12+0x2]",
    "mov     rdx, r15",
    "mov     rsi, rbx",
    "mov     word [r12], ax",
    "call    __strcpy_chk",
    "mov     rdi, r15",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x8c877",
    "and     ebx, 0x12",
    "cmp     ebx, 0x2",
    "je      0x8c813",
    "call    __errno_location",
    "mov     dword [rax], 0x15",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r15",
    "mov     rsi, rbx",
    "mov     rdi, r12",
    "call    __strcpy_chk",
    "jmp     0x8c761",
    "add     rsp, 0x8",
    "mov     rax, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r12",
    "call    free",
    "cmp     byte [r13], 0x2e",
    "je      0x8c7d8",
    "mov     rdi, r12",
    "call    file_status",
    "mov     ebx, eax",
    "test    al, 0x10",
    "je      0x8c77a",
    "mov     esi, 0x2f",
    "mov     rdi, r13",
    "call    strrchr",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x8c795",
    "mov     byte [rax], 0x0",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "mov     rsi, r13",
    "lea     rdi, [rel data_120268[2]]  {\".\"}",
    "call    same_file",
    "mov     byte [rbx], 0x2f",
    "test    eax, eax",
    "je      0x8c795",
    "nop     word [rax+rax]"
  ]
}
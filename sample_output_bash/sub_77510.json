{
  "address": "0x77510",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data using djb2/8952edc10f1448bdba19a64c9f144796",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "hash data using jshash/a755d430eadb46a9b4c9d318a1fcf472",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rsi",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x18",
    "test    rdi, rdi",
    "je      0x77640",
    "xor     ebx, ebx",
    "cmp     edx, 0x3",
    "jne     0x77545",
    "cmp     byte [rdi], 0x0",
    "jne     0x775f0",
    "cmp     edx, 0x4",
    "je      0x77790",
    "test    r15, r15",
    "lea     r14, [rel extended_glob]",
    "mov     r13, r12",
    "sete    dl",
    "jmp     0x77669",
    "cmp     byte [rdi+0x1], 0x0",
    "lea     rbx, [rdi+0x1]",
    "jne     0x776a8",
    "mov     rbx, rdi",
    "cmp     edx, 0x3",
    "je      0x7764b",
    "test    r15, r15",
    "lea     r14, [rel extended_glob]",
    "sete    dl",
    "jmp     0x777ad",
    "cmp     edx, 0x2",
    "je      0x776e0",
    "mov     eax, dword [r14]",
    "test    r13, r13",
    "je      0x77660",
    "cmp     byte [rdi+0x2], 0x0",
    "lea     rbx, [rdi+0x2]",
    "je      0x775fe",
    "cmp     edx, 0x3",
    "je      0x77870",
    "mov     eax, dword [r14]",
    "test    rbx, rbx",
    "je      0x777a0",
    "test    r12, r12",
    "lea     r14, [rel extended_glob]",
    "mov     r13, r12",
    "sete    r8b",
    "test    r15, r15",
    "sete    al",
    "or      r8d, eax",
    "jmp     0x77711",
    "test    r12, r12",
    "lea     r14, [rel extended_glob]",
    "sete    cl",
    "test    r15, r15",
    "sete    al",
    "or      ecx, eax",
    "jmp     0x77580",
    "add     r13, 0x1",
    "cmp     rbx, r13",
    "jb      0x77628",
    "test    dl, dl",
    "jne     0x77660",
    "mov     dword [rbp-0x34], edx",
    "call    strlen",
    "mov     edx, dword [rbp-0x34]",
    "lea     rbx, [r12+rax]",
    "jmp     0x775fe",
    "cmp     rbx, r12",
    "jae     0x7764b",
    "cmp     edx, 0x4",
    "je      0x77780",
    "sub     rbx, 0x1",
    "cmp     rbx, r12",
    "jb      0x77628",
    "test    dl, dl",
    "jne     0x777a0",
    "movzx   ecx, byte [r13]",
    "mov     byte [r13], 0x0",
    "mov     eax, dword [r14]",
    "test    r8b, r8b",
    "jne     0x77700",
    "movzx   r13d, byte [rbx]",
    "mov     byte [rbx], 0x0",
    "mov     eax, dword [r14]",
    "test    cl, cl",
    "jne     0x77570",
    "mov     rax, r12",
    "xor     edx, edx",
    "test    eax, eax",
    "mov     rsi, r13",
    "mov     rdi, r15",
    "setne   dl",
    "shl     edx, 0x5",
    "call    xstrmatch",
    "cmp     eax, 0x1",
    "jne     0x777e8",
    "jmp     0x77628",
    "cmp     rbx, r12",
    "jb      0x77628",
    "cmp     edx, 0x2",
    "je      0x776d0",
    "xor     edx, edx",
    "test    eax, eax",
    "mov     rsi, rbx",
    "mov     rdi, r15",
    "setne   dl",
    "shl     edx, 0x5",
    "call    xstrmatch",
    "cmp     eax, 0x1",
    "jne     0x77830",
    "mov     byte [r13], cl",
    "add     r13, 0x1",
    "cmp     rbx, r13",
    "jb      0x77628",
    "xor     edx, edx",
    "test    eax, eax",
    "mov     rsi, r12",
    "mov     rdi, r15",
    "setne   dl",
    "mov     byte [rbp-0x35], cl",
    "shl     edx, 0x5",
    "mov     byte [rbp-0x34], r8b",
    "call    xstrmatch",
    "movzx   r8d, byte [rbp-0x34]",
    "movzx   ecx, byte [rbp-0x35]",
    "cmp     eax, 0x1",
    "je      0x77700",
    "mov     byte [rbx], r13b",
    "sub     rbx, 0x1",
    "cmp     rbx, r12",
    "jb      0x77628",
    "xor     edx, edx",
    "test    eax, eax",
    "mov     rsi, r12",
    "mov     rdi, r15",
    "setne   dl",
    "mov     byte [rbp-0x34], cl",
    "shl     edx, 0x5",
    "call    xstrmatch",
    "movzx   ecx, byte [rbp-0x34]",
    "cmp     eax, 0x1",
    "je      0x77570",
    "movzx   ebx, byte [r13]",
    "mov     byte [r13], 0x0",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x778bd",
    "add     r13, 0x1",
    "cmp     rbx, r13",
    "jb      0x77628",
    "nop     dword [rax]",
    "cmp     rbx, r12",
    "jb      0x77628",
    "cmp     rbx, r12",
    "jae     0x77557",
    "movzx   r13d, byte [rbx]",
    "mov     byte [rbx], 0x0",
    "mov     rdi, r12",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x778aa",
    "sub     rbx, 0x1",
    "cmp     rbx, r12",
    "jb      0x77628",
    "mov     byte [r13], cl",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x7787e",
    "mov     byte [rbx], r13b",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x77894",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r14",
    "mov     rsi, r12",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "mov     byte [r13], bl",
    "jmp     0x7762b",
    "mov     eax, dword [r14]",
    "jmp     0x77675",
    "nop     dword [rax]",
    "nop     word [rax+rax]",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r14",
    "mov     rsi, r12",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "mov     byte [rbx], r13b",
    "jmp     0x7762b",
    "mov     eax, dword [r14]",
    "jmp     0x777b9",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "jmp     0x775db",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r13",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     __strcpy_chk"
  ]
}
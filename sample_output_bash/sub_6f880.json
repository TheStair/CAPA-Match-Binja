{
  "address": "0x6f880",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "check OS version/c5098bae8b7e44529b35d3b557d2b976",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdx",
    "push    r14",
    "mov     r14, rdi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x88",
    "movsxd  rbx, dword [rsi]",
    "mov     qword [rbp-0x78], rdx",
    "mov     qword [rbp-0x88], rsi",
    "mov     qword [rbp-0x68], r8",
    "lea     r8, [rdi+rbx]",
    "mov     r12, rbx",
    "mov     qword [rbp-0x80], rcx",
    "mov     rdi, r8",
    "mov     dword [rbp-0x6c], r9d",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x58], r8",
    "mov     qword [rbp-0x48], 0x0",
    "call    strlen",
    "mov     r8, qword [rbp-0x58]",
    "add     rax, rbx",
    "setb    sil",
    "xor     edx, edx",
    "cmp     byte [r15], 0x0",
    "mov     r13, rax",
    "movzx   esi, sil",
    "je      0x6f930",
    "mov     rdi, qword [rbp-0x80]",
    "mov     dword [rbp-0x70], 0x0",
    "cmp     byte [rdi], 0x0",
    "je      0x6f980",
    "cmp     byte [r15+0x1], 0x0",
    "mov     edx, 0x1",
    "je      0x6f930",
    "mov     rdi, qword [rbp-0x68]",
    "xor     eax, eax",
    "cmp     byte [rdi], 0x0",
    "je      0x6f9a8",
    "cmp     byte [rdi+0x1], 0x0",
    "mov     dword [rbp-0x70], 0x1",
    "je      0x6f980",
    "cmp     byte [r15+0x2], 0x0",
    "mov     edx, 0x2",
    "mov     rdi, r15",
    "je      0x6f930",
    "mov     edi, dword [rbp-0x6c]",
    "movsx   r15d, byte [r8]",
    "xor     r10d, r10d",
    "xor     r11d, r11d",
    "and     edi, 0x8",
    "mov     ecx, r15d",
    "mov     dword [rbp-0x58], edi",
    "test    rsi, rsi",
    "jne     0x6fb06",
    "cmp     byte [rdi+0x1], 0x0",
    "mov     eax, 0x1",
    "je      0x6f9a8",
    "cmp     byte [rdi+0x2], 0x0",
    "mov     dword [rbp-0x70], 0x2",
    "je      0x6f980",
    "mov     qword [rbp-0x60], rsi",
    "call    strlen",
    "mov     rsi, qword [rbp-0x60]",
    "mov     r8, qword [rbp-0x58]",
    "mov     edx, eax",
    "nop     word [rax+rax]",
    "mov     r12d, r13d",
    "movsxd  r13, r13d",
    "cmp     byte [r14+r13], 0x0",
    "je      0x6fddf",
    "mov     dword [rbp-0x60], edx",
    "mov     r9, rbx",
    "mov     ebx, r11d",
    "mov     dword [rbp-0x90], eax",
    "mov     eax, r10d",
    "mov     r10d, r12d",
    "mov     r12d, r15d",
    "mov     r15d, eax",
    "nop     word [rax+rax]",
    "cmp     byte [rdi+0x2], 0x0",
    "mov     eax, 0x2",
    "jne     0x70090",
    "mov     qword [rbp-0x90], rsi",
    "mov     dword [rbp-0x60], edx",
    "mov     qword [rbp-0x58], r8",
    "call    strlen",
    "mov     rsi, qword [rbp-0x90]",
    "mov     edx, dword [rbp-0x60]",
    "mov     dword [rbp-0x70], eax",
    "mov     r8, qword [rbp-0x58]",
    "nop     ",
    "lea     rax, [rel no_longjmp_on_fatal_error]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x70251",
    "mov     rbx, qword [rbp-0x88]",
    "mov     edx, r12d",
    "sub     edx, dword [rbx]",
    "xor     ebx, ebx",
    "sub     edx, eax",
    "lea     r15d, [rdx+0x1]",
    "mov     dword [rbp-0x4c], r15d",
    "test    byte [rbp-0x6c], 0x1",
    "jne     0x6fdf2",
    "mov     r12d, r10d",
    "jmp     0x6fddf",
    "test    r15d, r15d",
    "jne     0x6fb80",
    "mov     qword [rbp-0x90], rsi",
    "mov     dword [rbp-0x60], edx",
    "mov     qword [rbp-0x58], r8",
    "call    strlen",
    "mov     rsi, qword [rbp-0x90]",
    "mov     edx, dword [rbp-0x60]",
    "mov     r8, qword [rbp-0x58]",
    "jmp     0x6f9a8",
    "nop     dword [rax]",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1332b8]  {\"bad substitution: no closing `%s\u2026\"}",
    "xor     edi, edi",
    "mov     dword [rax], 0x1",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x68]",
    "mov     rdx, r14",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    report_error",
    "mov     edi, 0x2",
    "call    sub_85e80",
    "{ Does not return }",
    "xor     ebx, ebx",
    "mov     rax, qword [rbp-0x88]",
    "mov     dword [rax], r12d",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x70232",
    "add     edx, 0x2",
    "movsxd  r13, edx",
    "mov     rdi, r13",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x70237",
    "xor     r15d, r15d",
    "cmp     r12d, 0xa",
    "lea     r12, [rel locale_mb_cur_max]",
    "setne   r15b",
    "cmp     dword [r12], 0x1",
    "jle     0x6fcd0",
    "test    ebx, ebx",
    "jne     0x6fc20",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x88",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x88]",
    "movsxd  r15, r15d",
    "mov     rcx, r13",
    "mov     rdi, rbx",
    "mov     rdx, r15",
    "movsxd  rax, dword [rax]",
    "lea     rsi, [r14+rax]",
    "call    __strncpy_chk",
    "mov     byte [rbx+r15], 0x0",
    "jmp     0x6fdf2",
    "add     r10d, 0x1",
    "movsxd  r9, r10d",
    "lea     r8, [r14+r9]",
    "movsx   r12d, byte [r8]",
    "mov     ecx, r12d",
    "cmp     r13, r9",
    "jae     0x6f9e8",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x6fc78",
    "lea     r12, [rel locale_mb_cur_max]",
    "cmp     dword [r12], 0x1",
    "jle     0x6fd30",
    "mov     eax, dword [rbp-0x58]",
    "test    eax, eax",
    "je      0x6fbe0",
    "test    r12d, r12d",
    "je      0x70198",
    "jmp     0x6fb00",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6fc92",
    "add     r10d, eax",
    "movsxd  r9, r10d",
    "lea     r8, [r14+r9]",
    "movsx   r12d, byte [r8]",
    "mov     ecx, r12d",
    "cmp     r13, r9",
    "jae     0x6f9e8",
    "add     r10d, 0x1",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "jne     0x6fc69",
    "cmp     r12d, 0x5c",
    "je      0x6fbf0",
    "cmp     r12d, 0x23",
    "je      0x6ffa8",
    "mov     eax, dword [rbp-0x90]",
    "mov     rdx, r13",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x48]",
    "mov     rsi, r8",
    "sub     rdx, r9",
    "mov     dword [rbp-0x98], r10d",
    "mov     r12, qword [rbp-0x48]",
    "call    mbrtowc",
    "mov     r10d, dword [rbp-0x98]",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0x70058",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x6fbba",
    "jmp     0x6fb00",
    "jmp     0x6fb00",
    "add     r10d, eax",
    "jmp     0x6fd34",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6fcf0",
    "add     r10d, 0x1",
    "xor     r15d, r15d",
    "mov     ebx, 0x1",
    "movsxd  r9, r10d",
    "lea     r8, [r14+r9]",
    "movsx   r12d, byte [r8]",
    "mov     ecx, r12d",
    "cmp     r13, r9",
    "jae     0x6f9e8",
    "cmp     r12d, 0x1",
    "jne     0x6fa34",
    "test    r10d, r10d",
    "je      0x6ffc9",
    "cmp     r12d, 0x5c",
    "je      0x6fbf0",
    "add     r10d, 0x1",
    "mov     qword [rbp-0x48], r12",
    "movsxd  r9, r10d",
    "lea     r8, [r14+r9]",
    "movsx   r12d, byte [r8]",
    "mov     ecx, r12d",
    "cmp     r13, r9",
    "jae     0x6f9e8",
    "test    rax, rax",
    "jne     0x6fbba",
    "movsxd  r9, r10d",
    "xor     ebx, ebx",
    "lea     r8, [r14+r9]",
    "movsx   r12d, byte [r8]",
    "mov     ecx, r12d",
    "cmp     r13, r9",
    "jae     0x6f9e8",
    "mov     rdx, r13",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x48]",
    "mov     rsi, r8",
    "sub     rdx, r9",
    "mov     dword [rbp-0x98], r10d",
    "mov     rbx, qword [rbp-0x48]",
    "call    mbrtowc",
    "mov     r10d, dword [rbp-0x98]",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0x70080",
    "mov     eax, 0x1",
    "test    cl, cl",
    "js      0x6fcf0",
    "jmp     0x6fb00",
    "mov     eax, dword [rbp-0x60]",
    "test    eax, eax",
    "je      0x6fda6",
    "add     r10d, 0x1",
    "mov     r15d, 0x1",
    "movsxd  r9, r10d",
    "lea     r8, [r14+r9]",
    "movsx   r12d, byte [r8]",
    "mov     ecx, r12d",
    "cmp     r13, r9",
    "jae     0x6f9e8",
    "movzx   eax, byte [r14+r9-0x1]",
    "cmp     al, 0xa",
    "je      0x6ffc9",
    "cmp     r12d, 0x1",
    "je      0x6fbf0",
    "jmp     0x6fb00",
    "nop     dword [rax+rax]",
    "mov     qword [rbp-0x48], rbx",
    "add     r10d, 0x1",
    "jmp     0x6fd34",
    "test    rax, rax",
    "jne     0x6fc69",
    "mov     eax, dword [rbp-0x60]",
    "mov     r9d, dword [rbp-0x6c]",
    "lea     rsi, [rbp-0x4c]",
    "mov     rdi, r14",
    "mov     r8, qword [rbp-0x68]",
    "mov     rcx, qword [rbp-0x80]",
    "mov     rdx, qword [rbp-0x78]",
    "add     r10d, eax",
    "or      r9d, 0x1",
    "mov     dword [rbp-0x4c], r10d",
    "call    sub_6f880",
    "movsxd  rax, dword [rbp-0x4c]",
    "mov     r10, rax",
    "cmp     rax, r13",
    "jb      0x6fe58",
    "mov     rax, qword [rbp-0x78]",
    "cmp     byte [rax], cl",
    "je      0x6fd58",
    "jmp     0x6fb00",
    "lea     rdx, [rel sh_syntaxtab]",
    "test    byte [rdx+rax*4+0x1], 0x20",
    "je      0x6fa34",
    "cmp     cl, 0x24",
    "je      0x6ff20",
    "nop     dword [rax]",
    "add     r10d, 0x1",
    "mov     r12d, r13d",
    "movsxd  rdx, dword [rbp-0x60]",
    "mov     rdi, r8",
    "mov     rsi, rax",
    "mov     byte [rbp-0xa1], cl",
    "mov     dword [rbp-0xa8], r10d",
    "mov     qword [rbp-0xa0], r9",
    "mov     qword [rbp-0x98], r8",
    "call    strncmp",
    "mov     r8, qword [rbp-0x98]",
    "mov     r9, qword [rbp-0xa0]",
    "test    eax, eax",
    "movzx   ecx, byte [rbp-0xa1]",
    "mov     r10d, dword [rbp-0xa8]",
    "jne     0x6fa4b",
    "mov     r15d, dword [rbp-0x70]",
    "test    r15d, r15d",
    "jne     0x6fe80",
    "cmp     byte [r14+r9+0x1], 0x28",
    "jne     0x6fa34",
    "jmp     0x6fb00",
    "mov     rax, qword [rbp-0x80]",
    "cmp     byte [rax], cl",
    "jne     0x6fa58",
    "mov     r11d, dword [rbp-0x90]",
    "test    r11d, r11d",
    "je      0x70041",
    "mov     edx, dword [rbp-0x6c]",
    "add     r10d, 0x2",
    "lea     rsi, [rbp-0x4c]",
    "mov     rdi, r14",
    "mov     dword [rbp-0x4c], r10d",
    "or      edx, 0x1",
    "call    extract_command_subst",
    "movsxd  rax, dword [rbp-0x4c]",
    "mov     r10, rax",
    "cmp     rax, r13",
    "jae     0x6fddc",
    "movsxd  rdx, dword [rbp-0x70]",
    "mov     rdi, r8",
    "mov     rsi, rax",
    "mov     byte [rbp-0xa1], cl",
    "mov     dword [rbp-0xa8], r10d",
    "mov     qword [rbp-0xa0], r9",
    "mov     qword [rbp-0x98], r8",
    "call    strncmp",
    "mov     r8, qword [rbp-0x98]",
    "mov     r9, qword [rbp-0xa0]",
    "test    eax, eax",
    "movzx   ecx, byte [rbp-0xa1]",
    "mov     r10d, dword [rbp-0xa8]",
    "mov     r15d, eax",
    "jne     0x6fa58",
    "mov     eax, dword [rbp-0x90]",
    "lea     r12d, [r10+rax-0x1]",
    "jmp     0x6fb17",
    "mov     rax, qword [rbp-0x68]",
    "cmp     byte [rax], cl",
    "je      0x6fff0",
    "jmp     0x6fe58",
    "mov     eax, dword [rbp-0x70]",
    "mov     r9d, dword [rbp-0x6c]",
    "lea     rsi, [rbp-0x4c]",
    "mov     rdi, r14",
    "mov     rdx, qword [rbp-0x80]",
    "mov     r8, qword [rbp-0x68]",
    "add     r10d, eax",
    "or      r9d, 0x1",
    "mov     rcx, rdx",
    "mov     dword [rbp-0x4c], r10d",
    "call    sub_6f880",
    "movsxd  rax, dword [rbp-0x4c]",
    "mov     r10, rax",
    "cmp     rax, r13",
    "jae     0x6fddc",
    "movsxd  rdx, dword [rbp-0x90]",
    "mov     rdi, r8",
    "mov     rsi, rax",
    "mov     dword [rbp-0xa8], r10d",
    "mov     byte [rbp-0xa1], cl",
    "mov     qword [rbp-0xa0], r9",
    "mov     qword [rbp-0x98], r8",
    "call    strncmp",
    "mov     r8, qword [rbp-0x98]",
    "mov     r9, qword [rbp-0xa0]",
    "test    eax, eax",
    "movzx   ecx, byte [rbp-0xa1]",
    "mov     r10d, dword [rbp-0xa8]",
    "jne     0x6fa74",
    "cmp     r12d, 0x60",
    "je      0x6fe28",
    "jmp     0x6fd30",
    "mov     ecx, dword [rbp-0x6c]",
    "add     r10d, 0x1",
    "lea     rsi, [rbp-0x4c]",
    "mov     rdi, r14",
    "lea     rdx, [rel data_122e60]",
    "mov     dword [rbp-0x4c], r10d",
    "or      ecx, 0x1",
    "call    sub_6d3a0",
    "movsxd  rax, dword [rbp-0x4c]",
    "mov     r10, rax",
    "cmp     rax, r13",
    "jae     0x6fddc",
    "cmp     r12d, 0x27",
    "je      0x6ff60",
    "nop     dword [rax]",
    "add     r10d, 0x1",
    "mov     dword [rbp-0x4c], r10d",
    "cmp     r12d, 0x27",
    "je      0x700c0",
    "cmp     r12d, 0x22",
    "je      0x6ff60",
    "movsxd  r9, r10d",
    "mov     qword [rbp-0x40], 0x0",
    "lea     r15, [rbp-0x40]",
    "lea     rsi, [r14+r9]",
    "movzx   ecx, byte [rsi]",
    "cmp     cl, 0x27",
    "je      0x7020d",
    "mov     edx, r10d",
    "xor     ecx, ecx",
    "mov     rsi, r13",
    "mov     rdi, r14",
    "call    sub_6f5f0",
    "movsxd  r9, eax",
    "mov     r10, r9",
    "lea     r12, [rel locale_mb_cur_max]",
    "cmp     dword [r12], 0x1",
    "jle     0x6fe58",
    "test    cl, cl",
    "je      0x6ff88",
    "test    cl, cl",
    "je      0x6ff88",
    "jmp     0x6fb00",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "jne     0x6fadb",
    "lea     r8, [r14+r9]",
    "xor     r15d, r15d",
    "movsx   r12d, byte [r8]",
    "mov     ecx, r12d",
    "cmp     r13, r9",
    "jae     0x6f9e8",
    "add     r10d, 0x1",
    "movsxd  r9, r10d",
    "jmp     0x6ff88",
    "lea     r12, [rel locale_mb_cur_max]",
    "mov     dword [rbp-0xa0], ebx",
    "mov     rbx, r13",
    "mov     qword [rbp-0x98], r15",
    "mov     r15, r12",
    "mov     r12d, r10d",
    "jmp     0x70147",
    "add     r10d, eax",
    "xor     r15d, r15d",
    "movsxd  r9, r10d",
    "lea     r8, [r14+r9]",
    "movsx   r12d, byte [r8]",
    "mov     ecx, r12d",
    "cmp     r13, r9",
    "jae     0x6f9e8",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x70158",
    "cmp     dword [r15], 0x1",
    "jg      0x70110",
    "nop     dword [rax+rax]",
    "mov     rdx, r13",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x48]",
    "mov     rsi, r8",
    "sub     rdx, r9",
    "mov     dword [rbp-0x98], r10d",
    "mov     r15, qword [rbp-0x48]",
    "call    mbrtowc",
    "mov     r10d, dword [rbp-0x98]",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x701f3",
    "mov     eax, 0x1",
    "test    cl, cl",
    "js      0x70158",
    "mov     eax, ecx",
    "lea     rdx, [rel is_basic_table]",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdx+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x701a0",
    "add     r12d, 0x1",
    "jmp     0x7012c",
    "test    rax, rax",
    "je      0x6fe58",
    "mov     qword [rbp-0x48], r15",
    "add     r10d, 0x1",
    "jmp     0x6fe5c",
    "lea     rax, [rel locale_utf8locale]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "je      0x701ba",
    "add     r12d, eax",
    "movsxd  r9, r12d",
    "lea     rsi, [r14+r9]",
    "movzx   ecx, byte [rsi]",
    "test    cl, cl",
    "je      0x70221",
    "jmp     0x6fadb",
    "movsxd  r9, r10d",
    "xor     r15d, r15d",
    "lea     r8, [r14+r9]",
    "movsx   r12d, byte [r8]",
    "mov     ecx, r12d",
    "cmp     r13, r9",
    "jae     0x6f9e8",
    "mov     rdx, rbx",
    "mov     rcx, qword [rbp-0x98]",
    "xor     edi, edi",
    "mov     r13, qword [rbp-0x40]",
    "sub     rdx, r9",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x701e5",
    "mov     eax, 0x1",
    "test    cl, cl",
    "jns     0x70129",
    "mov     r13, rbx",
    "mov     r10d, r12d",
    "mov     ebx, dword [rbp-0xa0]",
    "jmp     0x6ff88",
    "cmp     cl, 0x27",
    "je      0x70201",
    "test    rax, rax",
    "je      0x7014d",
    "mov     qword [rbp-0x40], r13",
    "add     r12d, 0x1",
    "jmp     0x7012c",
    "mov     r13, rbx",
    "mov     ebx, dword [rbp-0xa0]",
    "mov     r10d, r12d",
    "jmp     0x70129"
  ]
}
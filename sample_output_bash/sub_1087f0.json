{
  "address": "0x1087f0",
  "rules": [
    "encrypt data using Curve25519/f2994133291147a090851ed21e9c381b",
    "contain loop"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "mov     r13d, edi",
    "push    r12",
    "push    rbx",
    "lea     rbx, [rel rl_readline_state]",
    "or      qword [rbx], 0x40",
    "call    rl_read_key",
    "mov     rdx, qword [rbx]",
    "mov     r12d, eax",
    "mov     rax, rdx",
    "and     rax, 0xffffffffffffffbf",
    "mov     qword [rbx], rax",
    "test    r12d, r12d",
    "js      0x1088d0",
    "pop     rbx",
    "mov     eax, 0x1",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "and     dh, 0x10",
    "jne     0x1088b0",
    "mov     edi, r12d",
    "call    _rl_add_macro_char",
    "mov     rax, qword [rbx]",
    "test    eax, 0x80000",
    "jne     0x108837",
    "test    eax, 0x80000",
    "je      0x108850",
    "pop     rbx",
    "mov     esi, r12d",
    "mov     edi, r13d",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "jmp     _rl_insert_char",
    "jmp     0x108850",
    "mov     eax, dword [rel data_16a45c]",
    "test    eax, eax",
    "je      0x108837",
    "lea     rax, [rel rl_instream]",
    "lea     r14, [rel data_16a420]",
    "mov     rdi, qword [rax]",
    "call    fileno",
    "mov     ebx, eax",
    "jmp     0x108888",
    "mov     rdx, r14",
    "mov     esi, 0x1",
    "mov     edi, ebx",
    "call    tcsetattr",
    "test    eax, eax",
    "js      0x108878",
    "call    __errno_location",
    "cmp     dword [rax], 0x4",
    "jne     0x108837",
    "mov     dword [rel data_16a45c], 0x0",
    "jmp     0x108837",
    "mov     dword [rax], 0x0"
  ]
}
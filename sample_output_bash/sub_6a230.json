{
  "address": "0x6a230",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "write file on Linux",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "contain loop",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "encrypt data using AES MixColumns step/51f5821f8bb24d35a0bb7f6d3fb45f3a",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "encrypt data using Curve25519/7d070d905d0942e295bbb2c9df72fc86",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x138",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "cmp     qword [rel data_168468], 0x0",
    "je      0x6a600",
    "lea     r12, [rel js]",
    "mov     eax, dword [rel data_1680c4]",
    "mov     r8d, dword [r12+0x1c]",
    "lea     edx, [rax+0x1]",
    "mov     dword [rel data_1680c4], edx",
    "test    r8d, r8d",
    "jg      0x6a2bf",
    "lea     r12, [rbp-0xc0]",
    "lea     rbx, [rbp-0x140]",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     rdi, r12",
    "mov     esi, 0x11",
    "call    sigaddset",
    "mov     esi, 0x16",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     rdi, rbx",
    "call    sigemptyset",
    "mov     rsi, r12",
    "mov     rdx, rbx",
    "xor     edi, edi",
    "call    sigprocmask",
    "lea     r12, [rel js]",
    "mov     r9d, dword [r12+0x1c]",
    "test    r9d, r9d",
    "jle     0x6a40d",
    "mov     qword [rbp-0x150], 0x0",
    "lea     r13, [rel jobs]",
    "xor     ebx, ebx",
    "jmp     0x6a2e7",
    "jmp     0x6a589",
    "xor     edx, edx",
    "mov     rsi, rbx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "mov     rax, qword [r13]",
    "lea     r14, [rbx*8]",
    "mov     r15, qword [rax+rbx*8]",
    "test    r15, r15",
    "je      0x6a2d8",
    "mov     dword [rel data_1680c4], eax",
    "jmp     0x6a41c",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x138",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "add     rbx, 0x1",
    "cmp     dword [r12+0x1c], ebx",
    "jle     0x6a3f8",
    "mov     r8d, dword [r15+0x18]",
    "test    r8b, 0x2",
    "jne     0x6a2d8",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x6a9d4",
    "cmp     qword [rel data_168468], 0x0",
    "lea     rbx, [rbp-0x140]",
    "je      0x6a580",
    "mov     edi, ebx",
    "mov     dword [rbp-0x144], ebx",
    "call    sub_66750",
    "mov     r9d, eax",
    "mov     r11d, eax",
    "lea     rax, [rel startup_state]",
    "and     r9d, 0x7f",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "jne     0x6a448",
    "mov     eax, dword [rel data_1680c4]",
    "sub     eax, 0x1",
    "lea     rax, [rel job_control]",
    "mov     ecx, dword [rax]",
    "mov     eax, dword [r15+0x14]",
    "test    ecx, ecx",
    "je      0x6a550",
    "lea     ecx, [r9+0x1]",
    "mov     eax, dword [r15+0x14]",
    "cmp     cl, 0x1",
    "jle     0x6a598",
    "lea     rdi, [rel interactive_shell]",
    "mov     ecx, dword [rdi]",
    "test    ecx, ecx",
    "je      0x6a45d",
    "cmp     esi, 0x2",
    "jne     0x6a4d0",
    "cmp     eax, 0x4",
    "je      0x6a630",
    "lea     rcx, [rel job_control]",
    "mov     ecx, dword [rcx]",
    "test    ecx, ecx",
    "jne     0x6a4d0",
    "cmp     eax, 0x4",
    "jne     0x6a2d8",
    "cmp     eax, 0x4",
    "jne     0x6a370",
    "lea     rsi, [rel subshell_environment]",
    "lea     rdi, [rel posixly_correct]",
    "mov     esi, dword [rsi]",
    "and     esi, 0x4",
    "or      esi, dword [rdi]",
    "je      0x6a4d0",
    "test    r8b, 0x1",
    "je      0x6a2d8",
    "cmp     eax, 0x2",
    "je      0x6a2d8",
    "lea     rdi, [rel interactive_shell]",
    "mov     ecx, dword [rdi]",
    "test    ecx, ecx",
    "jne     0x6a561",
    "nop     word [rax+rax]",
    "jg      0x6a5e8",
    "lea     rdi, [rel interactive_shell]",
    "cmp     eax, 0x4",
    "jne     0x6a2d8",
    "lea     rax, [rel job_control]",
    "lea     rdi, [rel interactive_shell]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x6a65d",
    "lea     rdx, [rel job_control]",
    "mov     esi, dword [rdx]",
    "test    esi, esi",
    "jne     0x6a5c8",
    "cmp     eax, 0x4",
    "je      0x6a667",
    "cmp     eax, 0x8",
    "je      0x6a2d8",
    "cmp     eax, 0x1",
    "je      0x6a2d8",
    "test    r9d, r9d",
    "jne     0x6a670",
    "test    r8b, 0x1",
    "jne     0x6a770",
    "lea     rdi, [rel interactive_shell]",
    "mov     edx, dword [rdi]",
    "test    edx, edx",
    "jne     0x6a570",
    "mov     edi, dword [rdi]",
    "test    edi, edi",
    "jne     0x6a770",
    "mov     ecx, dword [rdi]",
    "test    ecx, ecx",
    "je      0x6a4e0",
    "cmp     eax, 0x4",
    "jg      0x6a5e8",
    "lea     rdi, [rel interactive_shell]",
    "mov     ecx, dword [rdi]",
    "test    ecx, ecx",
    "jne     0x6a2d8",
    "test    r9d, r9d",
    "je      0x6a570",
    "nop     word [rax+rax]",
    "lea     rdi, [rel data_1205e0]  {\"notify_of_job_status\"}",
    "xor     eax, eax",
    "call    programming_error",
    "{ Does not return }",
    "cmp     eax, 0x2",
    "jne     0x6a5d6",
    "mov     eax, r11d",
    "and     eax, 0x7f",
    "add     eax, 0x1",
    "cmp     al, 0x1",
    "jle     0x6a761",
    "test    r8b, 0x1",
    "je      0x6a4f4",
    "test    r9d, r9d",
    "je      0x6a570",
    "test    ecx, ecx",
    "je      0x6a570",
    "or      r8d, 0x2",
    "mov     rsi, qword [r15+0x8]",
    "mov     rax, rsi",
    "jmp     0x6a4a3",
    "mov     eax, dword [rdi]",
    "test    eax, eax",
    "je      0x6a758",
    "jmp     0x6a570",
    "cmp     eax, 0x1",
    "je      0x6a2d8",
    "lea     rdi, [rel data_1205e0]  {\"notify_of_job_status\"}",
    "xor     eax, eax",
    "call    programming_error",
    "{ Does not return }",
    "mov     r15, qword [rel stderr]",
    "mov     edi, 0xa",
    "mov     rsi, qword [r15]",
    "mov     qword [rbp-0x158], r15",
    "call    fputc",
    "cmp     qword [rbp-0x150], 0x0",
    "je      0x6a87a",
    "cmp     r9d, 0x2",
    "setne   al",
    "mov     esi, eax",
    "cmp     r9d, 0xf",
    "je      0x6a8ed",
    "jmp     0x6a570",
    "mov     eax, r11d",
    "and     eax, 0x7f",
    "add     eax, 0x1",
    "cmp     r9d, 0x2",
    "setne   sil",
    "cmp     al, 0x1",
    "jle     0x6a570",
    "cmp     qword [rbp-0x150], 0x0",
    "je      0x6a8aa",
    "test    rax, rax",
    "je      0x320fa",
    "call    sub_5f5c0",
    "mov     edi, dword [rbp-0x144]",
    "xor     esi, esi",
    "mov     r15, rax",
    "mov     qword [rbp-0x150], rax",
    "mov     rax, qword [rbp-0x158]",
    "mov     rdx, qword [rax]",
    "call    sub_68530",
    "test    r15, r15",
    "je      0x6a86d",
    "mov     rdx, qword [r15]",
    "mov     edi, dword [rbp-0x144]",
    "xor     esi, esi",
    "call    sub_68530",
    "test    r8b, 0x1",
    "jne     0x6a792",
    "test    al, al",
    "je      0x6a8ed",
    "cmp     r9d, 0xd",
    "je      0x6a570",
    "call    sub_5f5c0",
    "mov     rdx, qword [rel stderr]",
    "mov     edi, dword [rbp-0x144]",
    "xor     esi, esi",
    "mov     r15, rax",
    "mov     qword [rbp-0x150], rax",
    "mov     qword [rbp-0x158], rdx",
    "mov     rdx, qword [rdx]",
    "call    sub_68530",
    "test    r15, r15",
    "jne     0x6a524",
    "mov     rax, qword [rel stderr]",
    "mov     edi, dword [rbp-0x144]",
    "xor     esi, esi",
    "mov     rdx, qword [rax]",
    "mov     qword [rbp-0x158], rax",
    "call    sub_68530",
    "mov     eax, dword [0x8]",
    "ud2     ",
    "{ Does not return }",
    "mov     rcx, qword [rax]",
    "cmp     rsi, rcx",
    "jne     0x6a4a0",
    "mov     rax, qword [r13]",
    "mov     r15, qword [rax+r14]",
    "jmp     0x6a3e0",
    "jmp     0x6a3c1",
    "mov     rdi, qword [rbp-0x150]",
    "call    polite_directory_format",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1205d2]  {\"(wd now: %s)\\n\"}",
    "xor     edi, edi",
    "mov     r15, rax",
    "call    dcgettext",
    "mov     rcx, r15",
    "mov     esi, 0x2",
    "mov     rdx, rax",
    "mov     rax, qword [rbp-0x158]",
    "mov     rdi, qword [rax]",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "or      dword [r15+0x18], 0x2",
    "add     rbx, 0x1",
    "cmp     dword [r12+0x1c], ebx",
    "jg      0x6a2e7",
    "jmp     0x6a4f4",
    "cmp     r9d, 0xd",
    "je      0x6a761",
    "test    sil, sil",
    "je      0x6a570",
    "mov     rax, qword [r13]",
    "mov     rdi, qword [rbp-0x150]",
    "mov     r15, qword [rax+r14]",
    "mov     rsi, qword [r15]",
    "call    strcmp",
    "test    eax, eax",
    "jne     0x6a8fc",
    "mov     rax, qword [r13]",
    "mov     r15, qword [rax+r14]",
    "jmp     0x6a543",
    "mov     rdi, qword [rbp-0x150]",
    "call    polite_directory_format",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1205d2]  {\"(wd now: %s)\\n\"}",
    "mov     r15, rax",
    "call    dcgettext",
    "mov     rcx, r15",
    "mov     esi, 0x2",
    "mov     rdx, rax",
    "mov     rax, qword [rbp-0x158]",
    "mov     rdi, qword [rax]",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "jmp     0x6a8e0",
    "mov     r8d, dword [r15+0x18]",
    "jmp     0x6a570",
    "mov     rax, rcx",
    "lea     rcx, [rel last_asynchronous_pid]",
    "mov     ecx, dword [rcx]",
    "cmp     dword [rax+0x8], ecx",
    "jne     0x6a570",
    "mov     rax, qword [r13]",
    "mov     rdi, qword [rbp-0x150]",
    "mov     r15, qword [rax+r14]",
    "mov     rsi, qword [r15]",
    "call    strcmp",
    "test    eax, eax",
    "jne     0x6a82f",
    "nop     dword [rax]",
    "movsxd  rax, r9d",
    "lea     rsi, [rel data_1611a0]",
    "test    byte [rsi+rax*4], 0x1",
    "jne     0x6a93c",
    "mov     edi, r9d",
    "mov     dword [rbp-0x158], r11d",
    "mov     dword [rbp-0x144], r9d",
    "call    strsignal",
    "mov     r9d, dword [rbp-0x144]",
    "mov     r11d, dword [rbp-0x158]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0x6a97c",
    "jmp     0x6a2d8",
    "test    r8b, 0x1",
    "jne     0x6a7a5",
    "lea     rax, [rel line_number]",
    "mov     r8d, dword [rax]",
    "mov     eax, 0x1",
    "test    r8d, r8d",
    "cmove   r8d, eax",
    "mov     dword [rbp-0x148], r8d",
    "call    get_name_for_error",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1205b5]  {\"%s: line %d: \"}",
    "xor     edi, edi",
    "mov     qword [rbp-0x158], rax",
    "call    dcgettext",
    "mov     r15, qword [rel stderr]",
    "mov     esi, 0x2",
    "mov     r8d, dword [rbp-0x148]",
    "mov     rcx, qword [rbp-0x158]",
    "mov     rdx, rax",
    "xor     eax, eax",
    "mov     rdi, qword [r15]",
    "call    __fprintf_chk",
    "mov     rax, qword [r13]",
    "mov     rcx, qword [r15]",
    "mov     edx, 0x1",
    "mov     esi, dword [rbp-0x144]",
    "mov     rax, qword [rax+r14]",
    "mov     rdi, qword [rax+0x8]",
    "call    sub_67d90",
    "mov     rax, qword [r13]",
    "mov     r15, qword [rax+r14]",
    "mov     r8d, dword [r15+0x18]",
    "or      r8d, 0x2",
    "mov     dword [r15+0x18], r8d",
    "jmp     0x6a574",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1204ee]  {\"Signal %d\"}",
    "mov     dword [rbp-0x144], r11d",
    "lea     r15, [rel data_168520]",
    "mov     dword [rbp-0x158], r9d",
    "call    dcgettext",
    "mov     r9d, dword [rbp-0x158]",
    "mov     rdi, r15",
    "mov     ecx, 0x40",
    "mov     r8, rax",
    "mov     edx, 0x2",
    "mov     esi, 0x40",
    "xor     eax, eax",
    "call    __snprintf_chk",
    "mov     r11d, dword [rbp-0x144]",
    "mov     rdi, r15",
    "jmp     0x6a7d5",
    "mov     rax, qword [rel stderr]",
    "mov     dword [rbp-0x144], r11d",
    "mov     rsi, qword [rax]",
    "mov     qword [rbp-0x158], rax",
    "call    fputs",
    "mov     r11d, dword [rbp-0x144]",
    "and     r11d, 0x80",
    "jne     0x6a94b",
    "jmp     0x6a4f4",
    "mov     dword [r15+0x18], r8d",
    "jmp     0x6a2d8",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1205c3]  {\" (core dumped)\"}",
    "call    dcgettext",
    "mov     esi, 0x2",
    "mov     rdx, rax",
    "mov     rax, qword [rbp-0x158]",
    "mov     rdi, qword [rax]",
    "xor     eax, eax",
    "call    __fprintf_chk",
    "jmp     0x6a806",
    "mov     rax, qword [rbp-0x158]",
    "mov     edi, 0xa",
    "mov     rsi, qword [rax]",
    "call    fputc",
    "mov     rax, qword [r13]",
    "mov     r15, qword [rax+r14]",
    "mov     r8d, dword [r15+0x18]",
    "or      r8d, 0x2",
    "jmp     0x6a574"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
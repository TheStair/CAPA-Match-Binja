{
  "address": "0x60be0",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13d, edx",
    "xor     edx, edx",
    "push    r12",
    "mov     r12, rsi",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "lea     r14, [rel shell_function_defs]",
    "mov     r15, qword [r14]",
    "mov     rsi, r15",
    "call    hash_search",
    "test    rax, rax",
    "je      0x60c80",
    "mov     r15, qword [r12+0x10]",
    "mov     edi, 0x20",
    "mov     qword [r12+0x10], 0x0",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x60d03",
    "mov     qword [rel data_1619d8], r15",
    "mov     r15, qword [rax+0x10]",
    "test    r15, r15",
    "je      0x60c80",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "call    copy_function_def_contents",
    "mov     qword [r12+0x10], r15",
    "mov     rdi, rbx",
    "mov     r14, qword [r14]",
    "mov     r13, rax",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x60d18",
    "and     r13d, 0x1",
    "jne     0x60c40",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "mov     rdi, r15",
    "mov     rsi, r14",
    "mov     edx, 0x1",
    "call    hash_insert",
    "mov     qword [rax+0x10], r13",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, qword [r15+0x8]",
    "call    dispose_word",
    "mov     rdi, qword [r15+0x10]",
    "call    dispose_command",
    "mov     rdi, qword [r15+0x18]",
    "test    rdi, rdi",
    "je      0x60c60",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "add     rsp, 0x8",
    "mov     rsi, r15",
    "mov     rdi, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     copy_function_def_contents",
    "call    free"
  ]
}
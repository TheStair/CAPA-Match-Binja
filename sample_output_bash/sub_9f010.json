{
  "address": "0x9f010",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     r12, qword [rel data_168b20]",
    "test    esi, esi",
    "jne     0x9f1c1",
    "test    r12, r12",
    "je      0x9f274",
    "mov     r14, rdi",
    "mov     r13d, esi",
    "test    r12, r12",
    "je      0x9f047",
    "xor     r12d, r12d",
    "jmp     0x9f235",
    "movsxd  rax, dword [rel data_168b10]",
    "lea     r14, [r12+rax*8]",
    "mov     r13, rax",
    "mov     rdi, qword [r14]",
    "test    rdi, rdi",
    "je      0x9f274",
    "mov     qword [rel data_168b20], 0x0",
    "movsx   eax, byte [r14]",
    "mov     dword [rel data_168b18], 0x0",
    "mov     dword [rel data_168b14], eax",
    "cmp     eax, 0x40",
    "je      0x9f280",
    "mov     rdi, r12",
    "call    free",
    "add     rsp, 0x28",
    "mov     rax, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "call    strlen",
    "lea     rbx, [rax+0x2]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x9f34f",
    "lea     rbx, [rel hostname_list_initialized]",
    "add     r14, 0x1",
    "mov     dword [rel data_168b18], 0x1",
    "mov     ecx, dword [rbx]",
    "test    ecx, ecx",
    "jne     0x9f080",
    "lea     rbx, [rel hostname_list_initialized]",
    "mov     ecx, dword [rbx]",
    "test    ecx, ecx",
    "je      0x9f250",
    "xor     eax, eax",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  rdi, dword [rel data_168b18]",
    "mov     eax, dword [rel data_168b14]",
    "mov     rdx, rbx",
    "cmp     rbx, rdi",
    "mov     byte [r12], al",
    "mov     rsi, qword [r14]",
    "cmovb   rdx, rdi",
    "add     r13d, 0x1",
    "sub     rdx, rdi",
    "add     rdi, r12",
    "call    __strcpy_chk",
    "mov     dword [rel data_168b10], r13d",
    "cmp     byte [r14], 0x0",
    "mov     ebx, dword [rel data_166efc]",
    "je      0x9f2c0",
    "jmp     0x9f250",
    "call    sub_9ef50",
    "mov     edx, dword [rbx]",
    "test    edx, edx",
    "jne     0x9f080",
    "add     ebx, 0x1",
    "movsxd  rbx, ebx",
    "shl     rbx, 0x3",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x9f37a",
    "mov     rdi, r14",
    "call    strlen",
    "mov     ecx, eax",
    "test    ebx, ebx",
    "jle     0x9f25f",
    "mov     qword [rel data_168b20], 0x0",
    "mov     dword [rel data_168b10], 0x0",
    "xor     eax, eax",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     eax, dword [rel data_166efc]",
    "test    eax, eax",
    "jle     0x9f331",
    "cdqe    ",
    "xor     r15d, r15d",
    "xor     ebx, ebx",
    "xor     r12d, r12d",
    "mov     qword [rbp-0x48], rax",
    "jmp     0x9f0de",
    "mov     qword [r13], 0x0",
    "mov     qword [rel data_168b20], r13",
    "mov     dword [rel data_168b10], 0x0",
    "jmp     0x9f274",
    "movsxd  rdi, eax",
    "mov     rsi, qword [rel data_166f00]",
    "xor     eax, eax",
    "lea     rcx, [rdi*8]",
    "nop     ",
    "lea     r9, [rbx*8]",
    "test    ecx, ecx",
    "je      0x9f11b",
    "mov     rdx, qword [rsi+rax]",
    "mov     qword [r13+rax], rdx",
    "add     rax, 0x8",
    "cmp     rcx, rax",
    "jne     0x9f300",
    "mov     qword [r13+rdi*8], 0x0",
    "mov     qword [rel data_168b20], r13",
    "mov     dword [rel data_168b10], 0x0",
    "jmp     0x9f1ca",
    "lea     eax, [r13-0x1]",
    "cmp     eax, r15d",
    "jg      0x9f0b8",
    "mov     rax, qword [rel data_166f00]",
    "mov     qword [rbp-0x38], r9",
    "mov     rsi, qword [rax+rbx*8]",
    "movzx   eax, byte [rsi]",
    "cmp     byte [r14], al",
    "jne     0x9f0ce",
    "mov     rax, qword [rel data_166f00]",
    "mov     rdx, qword [rax+r9]",
    "movsxd  rax, r15d",
    "add     r15d, 0x1",
    "mov     qword [r12+rax*8], rdx",
    "mov     edx, r13d",
    "lea     esi, [r13+0x10]",
    "mov     dword [rbp-0x3c], ecx",
    "sar     edx, 0x1f",
    "mov     qword [rbp-0x38], r9",
    "shr     edx, 0x1c",
    "lea     eax, [r13+rdx]",
    "and     eax, 0xf",
    "sub     eax, edx",
    "sub     esi, eax",
    "movsxd  rax, esi",
    "lea     rsi, [rax*8]",
    "mov     r13, rax",
    "mov     qword [rbp-0x50], rsi",
    "test    r12, r12",
    "je      0x9f2a8",
    "add     rbx, 0x1",
    "cmp     dword [rel data_166efc], ebx",
    "jle     0x9f1a0",
    "mov     rdx, qword [rbp-0x48]",
    "mov     rdi, r14",
    "mov     dword [rbp-0x3c], ecx",
    "call    strncmp",
    "mov     ecx, dword [rbp-0x3c]",
    "mov     r9, qword [rbp-0x38]",
    "test    eax, eax",
    "jne     0x9f0ce",
    "test    r15d, r15d",
    "je      0x9f1b0",
    "mov     rdi, qword [rbp-0x50]",
    "call    malloc",
    "mov     ecx, dword [rbp-0x3c]",
    "mov     r9, qword [rbp-0x38]",
    "mov     r12, rax",
    "jmp     0x9f171",
    "mov     rdi, r12",
    "call    realloc",
    "mov     r9, qword [rbp-0x38]",
    "mov     ecx, dword [rbp-0x3c]",
    "mov     r12, rax",
    "mov     qword [rel data_168b20], r12",
    "mov     dword [rel data_168b10], 0x0",
    "movsxd  rcx, r15d",
    "mov     qword [r12+rcx*8], 0x0",
    "test    r12, r12",
    "jne     0x9f0b8",
    "mov     rsi, qword [rbp-0x50]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x3c], ecx",
    "mov     qword [rbp-0x38], r9",
    "call    sub_a7f00",
    "{ Does not return }"
  ]
}
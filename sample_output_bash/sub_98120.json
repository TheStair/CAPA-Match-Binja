{
  "address": "0x98120",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "mov     r12d, edx",
    "lea     rdx, [rbp-0x40]",
    "push    rbx",
    "mov     rbx, rcx",
    "lea     rcx, [rbp-0x44]",
    "sub     rsp, 0x48",
    "mov     dword [rbp-0x58], esi",
    "mov     esi, r12d",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    array_variable_name",
    "test    rax, rax",
    "je      0x98290",
    "movsxd  rdx, dword [rbp-0x44]",
    "test    edx, edx",
    "je      0x982e0",
    "mov     r14, rax",
    "mov     rdi, rax",
    "call    find_variable",
    "mov     rdi, r14",
    "mov     r15, rax",
    "call    free",
    "movsxd  rdx, dword [rbp-0x44]",
    "test    edx, edx",
    "je      0x982e0",
    "xor     r13d, r13d",
    "jmp     0x98266",
    "test    rbx, rbx",
    "je      0x98400",
    "test    r15, r15",
    "je      0x98608",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x98854",
    "xor     r15d, r15d",
    "mov     qword [rbx+0x18], 0x0",
    "xor     r15d, r15d",
    "test    rbx, rbx",
    "je      0x98403",
    "mov     eax, dword [r15+0x28 {Elf64_Header::section_header_offset.d}]",
    "and     eax, 0x40",
    "test    rbx, rbx",
    "je      0x982e8",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x48",
    "mov     rax, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     byte [r9+0x1], 0x5d",
    "jne     0x98360",
    "cmp     al, 0x2a",
    "jne     0x98360",
    "cmp     byte [r9+0x1], 0x5d",
    "je      0x98780",
    "cmp     al, 0x2a",
    "je      0x98348",
    "mov     r9, qword [rbp-0x40]",
    "movzx   eax, byte [r9]",
    "cmp     al, 0x40",
    "je      0x98417",
    "mov     r9, qword [rbp-0x40]",
    "mov     qword [rbx+0x18], 0x0",
    "movzx   eax, byte [r9]",
    "cmp     al, 0x40",
    "je      0x985e4",
    "test    eax, eax",
    "je      0x98403",
    "mov     qword [rbx+0x18], 0x0",
    "test    eax, eax",
    "je      0x985d0",
    "test    r15, r15",
    "jne     0x982fa",
    "test    r12b, 0x1",
    "je      0x9880e",
    "test    rbx, rbx",
    "jne     0x985ef",
    "test    rbx, rbx",
    "jne     0x982c4",
    "xor     edi, edi",
    "mov     word [rbx+0x2], di",
    "test    r15, r15",
    "jne     0x981c4",
    "cmp     byte [r9+0x1], 0x5d",
    "jne     0x98353",
    "cmp     al, 0x2a",
    "je      0x985e4",
    "test    r12b, 0x80",
    "je      0x98403",
    "mov     r9, qword [rbp-0x40]",
    "movzx   eax, byte [r9]",
    "cmp     al, 0x40",
    "je      0x985e4",
    "test    r12b, 0x80",
    "je      0x982ac",
    "mov     eax, dword [r15+0x28 {Elf64_Header::section_header_offset.d}]",
    "mov     ecx, eax",
    "and     ecx, 0x44",
    "cmp     ecx, 0x40",
    "je      0x984c0",
    "mov     rsi, r9",
    "xor     edi, edi",
    "mov     ecx, r12d",
    "mov     qword [rbp-0x58], r9",
    "call    array_expand_index",
    "mov     r9, qword [rbp-0x58]",
    "test    rax, rax",
    "jns     0x982e0",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120287]  {\"bad array subscript\"}",
    "call    dcgettext",
    "mov     rsi, r13",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    report_error",
    "jmp     0x982e0",
    "test    r15, r15",
    "je      0x982e0",
    "cmp     al, 0x2a",
    "setne   al",
    "movzx   eax, al",
    "add     eax, 0x1",
    "mov     word [rbx+0x2], ax",
    "jmp     0x98422",
    "jmp     0x98422",
    "nop     dword [rax]",
    "mov     eax, dword [r15+0x28 {Elf64_Header::section_header_offset.d}]",
    "mov     ecx, eax",
    "and     ecx, 0x44",
    "cmp     ecx, 0x40",
    "je      0x984c0",
    "test    r12b, 0x4",
    "je      0x98750",
    "xor     ecx, ecx",
    "mov     word [rbx+0x2], cx",
    "jmp     0x982d3",
    "cmp     al, 0x2a",
    "jne     0x981be",
    "mov     r9, qword [rbp-0x40]",
    "movzx   eax, byte [r9]",
    "cmp     al, 0x40",
    "je      0x98348",
    "xor     eax, eax",
    "mov     word [rbx+0x2], ax",
    "test    al, 0x40",
    "je      0x985a0",
    "mov     rsi, qword [rbp-0x40]",
    "mov     ecx, r12d",
    "mov     rdi, r15",
    "call    array_expand_index",
    "mov     qword [rbp-0x60], rax",
    "test    rax, rax",
    "js      0x98638",
    "mov     byte [r9-0x1], 0x0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120287]  {\"bad array subscript\"}",
    "xor     edi, edi",
    "mov     qword [rbp-0x58], r9",
    "call    dcgettext",
    "mov     rsi, r13",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    report_error",
    "mov     r9, qword [rbp-0x58]",
    "mov     byte [r9-0x1], 0x5b",
    "jmp     0x982e0",
    "mov     r13, qword [r15+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    r13, r13",
    "je      0x982e0",
    "test    r12b, 0x4",
    "je      0x9830c",
    "mov     rsi, r9",
    "xor     edi, edi",
    "mov     ecx, r12d",
    "mov     qword [rbp-0x58], r9",
    "call    array_expand_index",
    "mov     r9, qword [rbp-0x58]",
    "test    rax, rax",
    "js      0x98383",
    "nop     dword [rax]",
    "mov     r13, qword [r15+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    r13, r13",
    "je      0x982e0",
    "mov     r13, qword [rbp-0x40]",
    "lea     rcx, [r13+rdx-0x1]",
    "mov     byte [rcx], 0x0",
    "test    rbx, rbx",
    "je      0x98530",
    "mov     edx, dword [r15+0x28 {Elf64_Header::section_header_offset.d}]",
    "test    dl, 0x4",
    "je      0x98680",
    "test    rbx, rbx",
    "je      0x983e8",
    "mov     eax, dword [r15+0x28 {Elf64_Header::section_header_offset.d}]",
    "test    ah, 0x10",
    "jne     0x982e0",
    "test    rbx, rbx",
    "je      0x9830c",
    "mov     qword [rbx+0x8], rax",
    "jmp     0x982e0",
    "test    ah, 0x10",
    "jne     0x982e0",
    "test    r12b, 0x20",
    "jne     0x986b0",
    "mov     esi, 0x2",
    "mov     word [rbx], si",
    "test    r12b, 0x4",
    "je      0x98530",
    "mov     rbx, qword [r15 {Elf64_Header::ident.signature[0]}] {Elf64_Header::ident.signature[1]} {Elf64_Header::ident.signature[2]} {Elf64_Header::ident.signature[3]} {Elf64_Header::ident.file_class} {Elf64_Header::ident.encoding} {Elf64_Header::ident.version} {Elf64_Header::ident.os}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120287]  {\"bad array subscript\"}",
    "call    dcgettext",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "mov     rsi, rbx",
    "xor     eax, eax",
    "call    report_error",
    "jmp     0x982e0",
    "mov     r13, qword [r15+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     rsi, qword [rbp-0x60]",
    "mov     rax, qword [r13]",
    "lea     rax, [rsi+rax+0x1]",
    "mov     qword [rbp-0x60], rax",
    "test    rax, rax",
    "js      0x98680",
    "mov     r13, qword [r15+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    r13, r13",
    "je      0x982e0",
    "mov     rax, qword [rbp-0x60]",
    "mov     r13, qword [r15+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     qword [rbx+0x8], rax",
    "jmp     0x981f5",
    "test    al, 0x44",
    "je      0x98700",
    "mov     rax, qword [rbx+0x8]",
    "mov     r13, qword [r15+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     qword [rbp-0x60], rax",
    "mov     rsi, qword [rbp-0x60]",
    "mov     rdi, r13",
    "call    array_reference",
    "mov     r13, rax",
    "jmp     0x983d3",
    "mov     rdi, r13",
    "mov     qword [rbp-0x58], rcx",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rcx, qword [rbp-0x58]",
    "test    rax, rax",
    "mov     r9, rax",
    "je      0x9887b",
    "test    r13, r13",
    "je      0x98678",
    "mov     r14, qword [rbx+0x10]",
    "test    r14, r14",
    "je      0x98530",
    "test    rbx, rbx",
    "je      0x9820d",
    "mov     edx, dword [r15+0x28 {Elf64_Header::section_header_offset.d}]",
    "jmp     0x9820d",
    "mov     edx, dword [r15+0x28 {Elf64_Header::section_header_offset.d}]",
    "mov     eax, edx",
    "sar     eax, 0x2",
    "and     eax, 0x1",
    "mov     word [rbx], ax",
    "test    r13, r13",
    "je      0x982e0",
    "test    rbx, rbx",
    "je      0x9870c",
    "test    al, 0x40",
    "je      0x987a0",
    "test    dh, 0x10",
    "jne     0x982e0",
    "test    rbx, rbx",
    "jne     0x98262",
    "mov     qword [rbp-0x68], rax",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbp-0x58], rcx",
    "mov     rdx, r14",
    "mov     rsi, r13",
    "mov     byte [rcx], 0x5d",
    "nop     dword [rax+rax]",
    "cmp     byte [r13], 0x0",
    "je      0x98678",
    "mov     rdi, r14",
    "mov     qword [rbp-0x58], rcx",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     rcx, qword [rbp-0x58]",
    "test    rax, rax",
    "mov     r9, rax",
    "je      0x98859",
    "mov     rax, qword [rbp-0x60]",
    "mov     qword [rbx+0x8], rax",
    "jmp     0x981f5",
    "mov     rdi, r13",
    "mov     qword [rbp-0x60], r9",
    "call    make_bare_word",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "call    make_word_flags",
    "xor     esi, esi",
    "mov     rdi, rax",
    "call    make_word_list",
    "mov     r9, qword [rbp-0x60]",
    "mov     rbx, rax",
    "jmp     0x9848c",
    "xor     r14d, r14d",
    "mov     word [rbx], r14w",
    "test    rbx, rbx",
    "je      0x987af",
    "test    rbx, rbx",
    "je      0x9846e",
    "xor     r14d, r14d",
    "mov     qword [rbx+0x18], r13",
    "jmp     0x98266",
    "cmp     byte [r14], 0x0",
    "je      0x9883a",
    "xor     esi, esi",
    "mov     rdi, r13",
    "mov     qword [rbp-0x58], rcx",
    "call    sub_8c420",
    "mov     rcx, qword [rbp-0x58]",
    "mov     r14, rax",
    "mov     byte [rcx], 0x5d",
    "test    rax, rax",
    "je      0x98680",
    "mov     qword [rbp-0x68], rax",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbp-0x58], rcx",
    "mov     rdx, r13",
    "mov     rsi, r14",
    "jmp     0x986e2",
    "cmp     byte [r9], 0x2a",
    "jne     0x9849c",
    "mov     rdi, r13",
    "mov     qword [rbp-0x60], r9",
    "call    array_to_word_list",
    "mov     r9, qword [rbp-0x60]",
    "test    rax, rax",
    "mov     rbx, rax",
    "jne     0x9848c",
    "mov     r10d, 0x1",
    "mov     word [rbx], r10w",
    "xor     esi, esi",
    "mov     rdi, r13",
    "mov     qword [rbp-0x60], r9",
    "call    sub_94250",
    "mov     r9, qword [rbp-0x60]",
    "test    rax, rax",
    "mov     rbx, rax",
    "je      0x982e0",
    "mov     r11d, 0x2",
    "mov     word [rbx], r11w",
    "xor     eax, eax",
    "cmp     qword [rbp-0x60], 0x0",
    "cmovne  r13, rax",
    "and     edx, 0x40",
    "je      0x985b6",
    "mov     rdi, r14",
    "call    free",
    "jmp     0x98680",
    "mov     r13, qword [r15+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    r13, r13",
    "je      0x9858f",
    "mov     rdi, r9",
    "call    __strcpy_chk",
    "mov     rcx, qword [rbp-0x58]",
    "mov     r14, rax",
    "mov     byte [rcx], 0x5d",
    "jmp     0x9856f",
    "mov     edx, r12d",
    "mov     esi, dword [rbp-0x58]",
    "mov     rdi, rbx",
    "sar     edx, 0x1",
    "and     edx, 0x8",
    "call    string_list_dollar_at",
    "mov     r13, rax",
    "test    byte [rbp-0x58], 0x3",
    "jne     0x987d0",
    "jmp     0x982e0",
    "mov     rsi, r13",
    "xor     edx, edx",
    "mov     rdi, r14",
    "call    hash_search",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x98244",
    "mov     rdi, r14",
    "call    free",
    "jmp     0x982e0",
    "mov     edx, dword [r15+0x28 {Elf64_Header::section_header_offset.d}]",
    "test    dh, 0x10",
    "je      0x98219",
    "mov     rdi, rbx",
    "call    sub_118260",
    "cmp     byte [rax], 0x0",
    "mov     r12, rax",
    "jne     0x98847",
    "test    rbx, rbx",
    "je      0x98790",
    "mov     r13, qword [rax+0x10]",
    "test    dl, 0x44",
    "je      0x983c8",
    "mov     rdi, rax",
    "call    sub_87450",
    "mov     r13, rax",
    "jmp     0x98801",
    "mov     edi, 0x2",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x9889d",
    "mov     rdi, r14",
    "call    free",
    "jmp     0x98266",
    "cmp     qword [rbx+0x10], 0x0",
    "je      0x9825e",
    "mov     rdi, r12",
    "call    free",
    "jmp     0x984b2",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     r8d, 0x7f",
    "mov     word [r13], r8w",
    "mov     qword [rbx+0x10], r14",
    "and     r12d, 0x4",
    "jne     0x98740",
    "mov     rdi, rbx",
    "call    dispose_words",
    "jmp     0x98266",
    "mov     rdi, r14",
    "call    free",
    "jmp     0x98262"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
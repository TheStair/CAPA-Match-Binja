{
  "address": "0xe6ec0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using RC4 KSA/89b7ba675fcb4f4eac2317f83c0a9436",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rsi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "movsxd  rax, dword [rsi+0x18]",
    "lea     rsi, [rel rl_line_buffer]",
    "mov     dword [rbp-0x34], edi",
    "lea     rdx, [rel rl_end]",
    "lea     r12, [rel rl_point]",
    "mov     rcx, qword [rsi]",
    "mov     dword [rdx], eax",
    "mov     byte [rcx+rax], 0x0",
    "mov     ebx, dword [r12]",
    "mov     r15d, dword [rdx]",
    "cmp     ebx, r15d",
    "jle     0xe6fe8",
    "test    ebx, ebx",
    "jns     0xe6f14",
    "mov     dword [r12], r15d",
    "mov     ebx, r15d",
    "lea     rax, [rel rl_mark]",
    "mov     r14d, dword [rax]",
    "call    __ctype_b_loc",
    "mov     r8d, dword [r13+0x1c]",
    "mov     rax, qword [rax]",
    "cmp     r14d, ebx",
    "je      0xe7000",
    "mov     dword [r12], 0x0",
    "xor     ebx, ebx",
    "jmp     0xe6f14",
    "movzx   ebx, r8b",
    "test    byte [rax+rbx*2+0x1], 0x2",
    "jne     0xe7130",
    "movzx   r9d, byte [rbp-0x34]",
    "movzx   edi, word [rax+r9*2]",
    "and     di, 0x200",
    "jne     0xe6fb8",
    "call    __ctype_toupper_loc",
    "mov     rax, qword [rax]",
    "cmp     dword [rax+rbx*4], 0x43",
    "sete    al",
    "jmp     0xe7016",
    "cmp     r8d, 0x43",
    "sete    al",
    "mov     dword [rbp-0x44], r8d",
    "mov     dword [rbp-0x38], edi",
    "mov     qword [rbp-0x40], r9",
    "call    __ctype_toupper_loc",
    "mov     r9, qword [rbp-0x40]",
    "mov     edi, dword [rbp-0x38]",
    "mov     rax, qword [rax]",
    "mov     r8d, dword [rbp-0x44]",
    "cmp     dword [rax+r9*4], 0x57",
    "sete    r11b",
    "jmp     0xe6f4c",
    "cmp     dword [rbp-0x34], 0x57",
    "sete    r11b",
    "mov     ecx, dword [rbp-0x34]",
    "test    ecx, ecx",
    "je      0xe7038",
    "lea     rax, [rel rl_readline_state]",
    "and     qword [rax], 0xffffffffffefffff",
    "add     rsp, 0x28",
    "mov     eax, 0xffffffff",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    al, al",
    "je      0xe7038",
    "cmp     ebx, r15d",
    "setl    r10b",
    "cmp     r14d, ebx",
    "setl    al",
    "test    r10b, al",
    "je      0xe6f67",
    "cmp     r8d, 0x63",
    "je      0xe7060",
    "test    r11b, r11b",
    "jne     0xe7160",
    "mov     esi, ecx",
    "lea     rdi, [rel data_1220ad]  {\" hl^$0ftFT;,%wbeWBE|`\"}",
    "call    strchr",
    "test    rax, rax",
    "jne     0xe6f9d",
    "cmp     r14d, ebx",
    "jg      0xe6f83",
    "cmp     r14d, ebx",
    "jge     0xe6f83",
    "lea     rdx, [rel rl_line_buffer]",
    "movsxd  rax, ebx",
    "mov     r10, qword [rdx]",
    "movzx   eax, byte [r10+rax]",
    "cmp     al, 0x20",
    "je      0xe7190",
    "add     rsp, 0x28",
    "mov     rdi, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sub_e6a80",
    "lea     rax, [rel rl_readline_state]",
    "mov     rax, qword [rax]",
    "test    eax, 0x80000",
    "je      0xe6f9d",
    "mov     qword [rbp-0x40], r9",
    "test    di, di",
    "je      0xe7148",
    "lea     rax, [rel rl_mark]",
    "mov     dword [r12], r14d",
    "mov     dword [rax], ebx",
    "cmp     r8d, 0x63",
    "jne     0xe6f76",
    "cmp     al, 0x9",
    "je      0xe7190",
    "lea     rax, [rel rl_redisplay_function]",
    "call    qword [rax]",
    "cmp     dword [rbp-0x34], 0x57",
    "je      0xe708d",
    "call    __ctype_toupper_loc",
    "mov     r9, qword [rbp-0x40]",
    "mov     rax, qword [rax]",
    "cmp     dword [rax+r9*4], 0x57",
    "jne     0xe7152",
    "jmp     0xe7069",
    "sub     ebx, 0x1",
    "mov     dword [r12], ebx",
    "jmp     0xe6f67",
    "cmp     r14d, ebx",
    "jge     0xe71b0",
    "mov     ebx, dword [r12]",
    "jmp     0xe6f71",
    "cmp     ebx, r15d",
    "jge     0xe7152",
    "lea     rax, [rel rl_line_buffer]",
    "mov     r8, qword [rax]",
    "movsxd  rax, ebx",
    "jmp     0xe70bc",
    "jmp     0xe70f2",
    "movzx   ecx, byte [r8+rax]",
    "mov     edx, eax",
    "cmp     cl, 0x20",
    "je      0xe70a8",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0xe710e",
    "sub     edx, 0x1",
    "sub     rax, 0x1",
    "mov     dword [r12], edx",
    "cmp     r14d, eax",
    "jge     0xe71a0",
    "cmp     cl, 0x9",
    "je      0xe70a8",
    "mov     eax, dword [r12]",
    "lea     ebx, [rax+0x1]",
    "lea     rax, [rel rl_mark]",
    "mov     dword [r12], ebx",
    "mov     r14d, dword [rax]",
    "jmp     0xe6f71",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xe71ba",
    "movsxd  rbx, edx",
    "jmp     0xe70d0",
    "movsxd  rbx, eax",
    "mov     r14d, dword [r12]",
    "mov     edi, 0x1",
    "call    _rl_forward_char_internal",
    "mov     dword [r12], eax",
    "mov     ebx, eax",
    "cmp     eax, r14d",
    "je      0xe71de",
    "cmp     r14d, ebx",
    "je      0xe71b0",
    "test    ebx, ebx",
    "js      0xe7152",
    "lea     rax, [rel rl_end]",
    "mov     ebx, dword [rax]",
    "mov     dword [r12], ebx",
    "lea     rax, [rel rl_end]",
    "cmp     ebx, dword [rax]",
    "jle     0xe71eb",
    "lea     esi, [r15-0x1]",
    "cmp     esi, ebx",
    "jle     0xe7152",
    "lea     rax, [rel rl_mark]",
    "mov     r14d, dword [rax]",
    "jmp     0xe6f71",
    "movzx   eax, byte [r8+rbx]",
    "cmp     al, 0x20",
    "je      0xe7152",
    "cmp     al, 0x9",
    "je      0xe7152"
  ]
}
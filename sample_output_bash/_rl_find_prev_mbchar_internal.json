{
  "address": "0x106bd0",
  "rules": [
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "contain loop",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "mov     ebx, edx",
    "sub     rsp, 0x48",
    "mov     dword [rbp-0x54], esi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel _rl_utf8locale]",
    "mov     r13d, dword [rax]",
    "test    r13d, r13d",
    "jne     0x106da8",
    "test    edx, edx",
    "jne     0x106ed0",
    "mov     r14d, dword [rbp-0x54]",
    "mov     qword [rbp-0x40], 0x0",
    "test    r14d, r14d",
    "js      0x106d20",
    "xor     r15d, r15d",
    "test    rdi, rdi",
    "je      0x106db0",
    "mov     r13d, dword [rbp-0x54]",
    "lea     r14, [rbp-0x40]",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x106f28",
    "call    strlen",
    "mov     dword [rbp-0x58], eax",
    "cmp     r14d, eax",
    "jg      0x106f18",
    "cmp     byte [rdi], 0x0",
    "je      0x106db0",
    "xor     r13d, r13d",
    "jmp     0x106d20",
    "movsxd  rcx, r13d",
    "movzx   eax, byte [r12+rcx]",
    "test    al, al",
    "jns     0x106d20",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x48",
    "mov     eax, r13d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r13d, eax",
    "jmp     0x106d20",
    "test    r14d, r14d",
    "je      0x106d20",
    "cmp     byte [rdi+0x1], 0x0",
    "mov     r15d, 0x1",
    "je      0x106db0",
    "and     eax, 0xffffffc0",
    "cmp     al, 0x80",
    "je      0x106cf0",
    "lea     rcx, [rbp-0x44]",
    "xor     eax, eax",
    "lea     r14, [rbp-0x40]",
    "xor     r15d, r15d",
    "mov     qword [rbp-0x60], rcx",
    "nop     dword [rax]",
    "cmp     byte [rdi+0x2], 0x0",
    "mov     r15d, 0x2",
    "je      0x106db0",
    "lea     edx, [r13-0x1]",
    "lea     rsi, [rcx-0x1]",
    "movsxd  rdx, edx",
    "sub     rsi, rcx",
    "jmp     0x106d1b",
    "test    ebx, ebx",
    "je      0x106d20",
    "mov     edx, dword [rbp-0x58]",
    "mov     rdi, qword [rbp-0x60]",
    "mov     rcx, r14",
    "sub     edx, r15d",
    "movsxd  rdx, edx",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0x106d90",
    "movsx   edi, byte [rsi]",
    "test    dil, dil",
    "jns     0x106d48",
    "call    strlen",
    "mov     r15, rax",
    "jmp     0x106db0",
    "cmp     rdx, rsi",
    "jne     0x106d00",
    "mov     qword [r14], 0x0",
    "mov     edx, r15d",
    "movsxd  rsi, r13d",
    "mov     rcx, r14",
    "sub     edx, r13d",
    "add     rsi, r12",
    "lea     rdi, [rbp-0x44]",
    "movsxd  rdx, edx",
    "call    mbrtowc",
    "sub     rax, 0x1",
    "cmp     rax, 0xfffffffffffffffc",
    "ja      0x106d20",
    "mov     qword [r14], 0x0",
    "test    rax, rax",
    "je      0x106d20",
    "mov     dword [rbp-0x44], edi",
    "mov     qword [r14], 0x0",
    "test    ebx, ebx",
    "je      0x106d97",
    "movzx   eax, byte [r12+rdx]",
    "test    al, al",
    "je      0x106d20",
    "lea     rax, [rel _rl_utf8locale]",
    "mov     edi, dword [rbp-0x44]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x106e30",
    "add     r15d, edx",
    "cmp     dword [rbp-0x54], r15d",
    "jle     0x106d20",
    "mov     edx, eax",
    "test    ebx, ebx",
    "je      0x106cd0",
    "mov     r13d, r15d",
    "mov     edx, 0x1",
    "jmp     0x106cd3",
    "mov     edx, 0x1",
    "cmp     edi, 0x5f",
    "jle     0x106cb1",
    "and     eax, 0xffffffc0",
    "lea     rcx, [rdx-0x1]",
    "cmp     al, 0x80",
    "jne     0x106e60",
    "cmp     edi, 0x5f",
    "jg      0x106e88",
    "lea     eax, [rdi-0x300]",
    "cmp     eax, 0x6f",
    "jbe     0x106db8",
    "lea     rax, [rel _rl_utf8locale]",
    "mov     eax, dword [rax]",
    "jmp     0x106c50",
    "mov     r13d, r15d",
    "lea     rax, [rel _rl_utf8locale]",
    "mov     edi, dword [rbp-0x44]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x106e70",
    "cmp     edi, 0x40",
    "jg      0x106cd0",
    "lea     eax, [rdi-0x61]",
    "cmp     eax, 0x1d",
    "jbe     0x106cd0",
    "cmp     al, 0xc0",
    "jne     0x106d20",
    "mov     rdx, rcx",
    "lea     eax, [rdi-0x61]",
    "cmp     eax, 0x1d",
    "jbe     0x106d20",
    "cmp     edi, 0x40",
    "jg      0x106d20",
    "sub     r13d, 0x1",
    "js      0x106f20",
    "movsxd  rsi, r15d",
    "add     rsi, r12",
    "test    eax, eax",
    "je      0x106c66",
    "lea     eax, [rdi-0x300]",
    "cmp     eax, 0x6f",
    "jbe     0x106cd3",
    "cmp     edi, 0x5f",
    "jg      0x106d64",
    "cmp     edi, 0x23",
    "jle     0x106ec0",
    "mov     dword [rbp-0x64], edx",
    "call    wcwidth",
    "mov     edx, dword [rbp-0x64]",
    "test    eax, eax",
    "cmovne  r13d, r15d",
    "jmp     0x106cd3",
    "mov     r13d, edx",
    "jmp     0x106ddd",
    "call    wcwidth",
    "test    eax, eax",
    "jle     0x106db8",
    "cmp     edi, 0x23",
    "jg      0x106eb0",
    "jmp     0x106ca8",
    "cmp     edi, 0x1f",
    "jg      0x106cd0",
    "lea     eax, [rdi-0x25]",
    "cmp     eax, 0x1a",
    "ja      0x106d70",
    "jmp     0x106d20",
    "lea     eax, [rdi-0x25]",
    "cmp     eax, 0x1a",
    "jbe     0x106d20",
    "cmp     edi, 0x1f",
    "jg      0x106d20",
    "jmp     0x106d70",
    "nop     dword [rax+rax]",
    "jmp     0x106e4c",
    "call    wcwidth",
    "test    eax, eax",
    "jle     0x106db8",
    "jmp     0x106d20"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
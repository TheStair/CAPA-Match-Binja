{
  "address": "0x5cc60",
  "rules": [
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     r13, [rel bgpids]",
    "lea     rax, [rel js]",
    "mov     r14d, dword [r13+0xc]",
    "mov     r15, qword [rax]",
    "mov     r12d, r15d",
    "cmp     r14d, r15d",
    "jl      0x5cc9b",
    "test    r14d, r14d",
    "je      0x5cd25",
    "mov     edi, dword [r13+0x8]",
    "cmp     r14d, edi",
    "jg      0x5cd06",
    "lea     rdi, [rel pidstat_table]",
    "mov     edx, 0x4000",
    "mov     esi, 0xff",
    "call    memset",
    "mov     dword [r13+0x8], 0x0",
    "test    r15d, r15d",
    "js      0x5cd61",
    "test    r15d, r15d",
    "mov     eax, 0x8000",
    "cmovs   r12d, eax",
    "test    r14d, r14d",
    "jle     0x5ce0c",
    "call    sub_5cbe0",
    "mov     eax, dword [r13+0x8]",
    "lea     edx, [rax+0x1]",
    "mov     dword [r13+0x8], edx",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     ebx, 0x200",
    "mov     r12d, 0x8000",
    "jmp     0x5ccc8",
    "mov     ebx, 0x200",
    "cmp     r15d, 0x200",
    "jg      0x5ccc8",
    "mov     ebx, r14d",
    "jmp     0x5ccd3",
    "mov     ebx, r14d",
    "cmp     r14d, r12d",
    "jge     0x5ce0c",
    "add     ebx, ebx",
    "test    ebx, ebx",
    "jle     0x5ccd3",
    "test    r15d, r15d",
    "jne     0x5cd7a",
    "lea     eax, [rbx-0x1]",
    "cmp     eax, 0x7fff",
    "jbe     0x5cd71",
    "nop     dword [rax]",
    "cmp     r12d, ebx",
    "jg      0x5ccc8",
    "movsxd  r14, ebx",
    "shl     r14, 0x4",
    "jmp     0x5ccfc",
    "cmp     r14d, r12d",
    "jge     0x5ccf3",
    "cmp     r14d, r12d",
    "jge     0x5ccf3",
    "mov     rdi, r14",
    "call    malloc",
    "mov     r12, rax",
    "jmp     0x5cd99",
    "mov     rsi, r14",
    "call    realloc",
    "mov     r12, rax",
    "mov     dword [r13+0x8], 0x0",
    "xor     edi, edi",
    "mov     edi, dword [r13+0x8]",
    "cmp     r14d, edi",
    "jg      0x5cd06",
    "cmp     r14d, 0x7fff",
    "jle     0x5ce24",
    "test    r12, r12",
    "je      0x5ce34",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     ecx, dword [r13+0xc]",
    "mov     qword [r13], r12",
    "cmp     ebx, ecx",
    "jle     0x5cdff",
    "mov     r14d, 0x80000",
    "mov     ebx, 0x8000",
    "jmp     0x5cd81",
    "mov     dword [r13+0xc], ebx",
    "mov     edi, dword [r13+0x8]",
    "jmp     0x5cd06",
    "mov     edx, ebx",
    "movsxd  rsi, ecx",
    "sub     edx, ecx",
    "mov     rax, rsi",
    "add     rdx, rsi",
    "shl     rax, 0x4",
    "shl     rdx, 0x4",
    "add     rax, r12",
    "add     rdx, r12",
    "mov     rcx, rdx",
    "sub     rcx, rax",
    "and     ecx, 0x10",
    "je      0x5cde8",
    "mov     rdi, qword [r13]",
    "test    rdi, rdi",
    "je      0x5ce14",
    "mov     dword [rax+0x8], 0xffffffff",
    "add     rax, 0x20",
    "mov     dword [rax-0x8], 0xffffffff",
    "cmp     rdx, rax",
    "jne     0x5cde8",
    "mov     dword [rax+0x8], 0xffffffff",
    "add     rax, 0x10",
    "cmp     rdx, rax",
    "je      0x5cdff",
    "nop     dword [rax]"
  ]
}
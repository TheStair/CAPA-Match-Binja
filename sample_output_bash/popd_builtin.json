{
  "address": "0xbeb90",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    rdi, rdi",
    "je      0xbed10",
    "movsxd  rbx, dword [rel data_168f98]",
    "mov     qword [rbp-0x40], 0x0",
    "test    ebx, ebx",
    "js      0xbed71",
    "mov     rax, qword [rdi+0x8]",
    "mov     r15, rdi",
    "mov     rbx, qword [rax]",
    "cmp     byte [rbx], 0x2d",
    "je      0xbeda0",
    "lea     rcx, [rel data_122e02]",
    "je      0xbec47",
    "lea     rsi, [rel 0x1210f5]  {\"--help\"}",
    "mov     rdi, rbx",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xbebd0",
    "xor     ecx, ecx",
    "mov     edx, 0x2b",
    "lea     r13, [rbp-0x40]",
    "xor     r14d, r14d",
    "mov     qword [rbp-0x40], 0x0",
    "nop     word [rax+rax]",
    "mov     eax, 0x1",
    "nop     dword [rax]",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_12176a]  {\"directory stack empty\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "xor     r14d, r14d",
    "call    builtin_help",
    "jmp     0xbecfd",
    "movzx   eax, byte [rbx+0x1]",
    "cmp     al, 0x6e",
    "je      0xbece0",
    "cmp     r12b, 0x2b",
    "je      0xbecae",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "sub     ebx, 0x1",
    "mov     dword [rel data_168f98], ebx",
    "movsxd  rbx, ebx",
    "mov     rdi, qword [rax+rbx*8]",
    "call    free",
    "jmp     0xbee27",
    "mov     rdi, qword [rax+rbx*8-0x8]",
    "call    sub_be530",
    "test    eax, eax",
    "jne     0xbec70",
    "mov     eax, 0x102",
    "jmp     0xbec70",
    "cmp     byte [rbx+0x2], 0x0",
    "jne     0xbecae",
    "cmp     al, 0x2d",
    "jne     0xbecae",
    "lea     rdi, [rbx+0x1]",
    "mov     rsi, r13",
    "call    legal_number",
    "test    eax, eax",
    "mov     rax, qword [r15+0x8]",
    "je      0xbecf0",
    "xor     edx, edx",
    "test    r12b, r12b",
    "jne     0xbee59",
    "xor     edi, edi",
    "call    dirs_builtin",
    "xor     eax, eax",
    "jmp     0xbec70",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xbeeab",
    "mov     ebx, dword [rel data_168f98]",
    "mov     rax, qword [rel data_168f90]",
    "mov     r14d, 0x1",
    "jmp     0xbecc8",
    "cmp     byte [rbx+0x2], 0x0",
    "je      0xbec13",
    "mov     rdi, qword [rax]",
    "call    sh_invalidnum",
    "call    builtin_usage",
    "mov     rcx, qword [rax]",
    "mov     edx, r12d",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "lea     rsi, [rel data_1217c9]  {\"%s: invalid argument\"}",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "call    builtin_usage",
    "jmp     0xbecfd",
    "movsxd  rdi, dword [rel data_168f98]",
    "mov     rax, qword [rbp-0x40]",
    "mov     rbx, rdi",
    "cmp     rdi, rax",
    "jl      0xbec36",
    "mov     r15, qword [r15]",
    "test    r15, r15",
    "je      0xbec13",
    "mov     rax, qword [r15+0x8]",
    "mov     rbx, qword [rax]",
    "jmp     0xbebf0",
    "test    rcx, rcx",
    "je      0xbee83",
    "mov     esi, edi",
    "neg     esi",
    "movsxd  rsi, esi",
    "cmp     rax, rsi",
    "jge     0xbedc1",
    "movzx   r12d, byte [rbx]",
    "cmp     r12b, 0x2d",
    "je      0xbec98",
    "lea     rcx, [rel data_122e02]",
    "jmp     0xbec3f",
    "test    ebx, ebx",
    "jne     0xbed78",
    "test    edi, edi",
    "jne     0xbee8f",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel 0x121780]  {\"directory stack index\"}",
    "mov     qword [rbp-0x48], rcx",
    "call    dcgettext",
    "mov     rdi, qword [rbp-0x48]",
    "mov     rsi, rax",
    "call    sh_erange",
    "jmp     0xbec64",
    "cmp     dl, 0x2b",
    "je      0xbee48",
    "test    rax, rax",
    "je      0xbec47",
    "test    rax, rax",
    "je      0xbed2c",
    "cmp     dl, 0x2d",
    "jne     0xbedd7",
    "cmp     dl, 0x2b",
    "je      0xbee51",
    "mov     rax, qword [rel data_168f90]",
    "test    r14d, r14d",
    "jne     0xbed57",
    "mov     r12d, ebx",
    "sub     r12d, eax",
    "jmp     0xbedda",
    "mov     r12d, eax",
    "cmp     rdi, rax",
    "je      0xbed2c",
    "cmp     r12d, ebx",
    "jg      0xbee35",
    "test    rcx, rcx",
    "lea     rax, [rel data_122e02]",
    "cmove   rcx, rax",
    "jmp     0xbec3f",
    "test    r12d, r12d",
    "js      0xbee35",
    "jmp     0xbedd7",
    "mov     r15, qword [rel data_168f90]",
    "movsxd  r13, r12d",
    "shl     r13, 0x3",
    "lea     r14, [r15+r13]",
    "mov     rdi, qword [r14]",
    "call    free",
    "lea     eax, [rbx-0x1]",
    "mov     dword [rel data_168f98], eax",
    "cmp     eax, r12d",
    "jle     0xbee27",
    "sub     ebx, 0x2",
    "lea     rsi, [r15+r13+0x8]",
    "mov     rdi, r14",
    "sub     ebx, r12d",
    "lea     rdx, [rbx*8+0x8]",
    "call    memmove"
  ]
}
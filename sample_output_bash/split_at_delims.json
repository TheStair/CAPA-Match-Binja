{
  "address": "0x74ab0",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check if file exists/e9b7e5653fc74459b4a2998e8ac0c76d/291bac4dc2fd4faeafd7747b61108764"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x88",
    "mov     rax, qword [rbp+0x10]",
    "mov     qword [rbp-0x60], rdi",
    "mov     dword [rbp-0xa0], esi",
    "mov     dword [rbp-0x6c], ecx",
    "mov     dword [rbp-0x9c], r8d",
    "mov     qword [rbp-0xa8], r9",
    "mov     qword [rbp-0x88], rax",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    rdi, rdi",
    "je      0x750f2",
    "mov     rax, qword [rbp-0xa8]",
    "test    rax, rax",
    "je      0x75104",
    "movzx   eax, byte [rdi]",
    "test    al, al",
    "je      0x750f2",
    "mov     rax, qword [rbp-0x88]",
    "test    rax, rax",
    "je      0x75116",
    "mov     dword [rax], 0x0",
    "mov     r13, rdx",
    "test    rdx, rdx",
    "je      0x75120",
    "xor     ecx, ecx",
    "jmp     0x74f39",
    "mov     dword [rax], 0x0",
    "lea     rdx, [rel ifs_value]",
    "mov     qword [rbp-0x90], 0x0",
    "mov     r12, qword [rdx]",
    "jmp     0x74c5d",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x40], 0x0",
    "call    strlen",
    "mov     r12, rax",
    "lea     rax, [rax+0x1]",
    "mov     rdi, rax",
    "mov     qword [rbp-0x78], rax",
    "call    malloc",
    "mov     qword [rbp-0x90], rax",
    "test    rax, rax",
    "je      0x7522c",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x75227",
    "mov     r14, qword [rbp-0x60]",
    "xor     ebx, ebx",
    "jmp     0x74c88",
    "mov     rsi, qword [rbp-0x78]",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "cmp     byte [r13], 0x0",
    "je      0x751fa",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x88",
    "mov     rax, rcx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "movsx   esi, al",
    "mov     rdi, r12",
    "call    mbschr",
    "test    rax, rax",
    "movzx   eax, byte [r14]",
    "jne     0x74c68",
    "mov     r14, qword [rbp-0x90]",
    "jmp     0x74c47",
    "xor     edx, edx",
    "lea     rax, [rbp-0x40]",
    "mov     qword [rbp-0x48], r13",
    "mov     r15, r13",
    "mov     qword [rbp-0x68], rax",
    "xor     ebx, ebx",
    "xor     r14d, r14d",
    "mov     r13d, edx",
    "jmp     0x74bb2",
    "lea     edx, [rax-0x9]",
    "cmp     dl, 0x1",
    "jbe     0x74c74",
    "test    al, al",
    "je      0x75206",
    "mov     rax, qword [rbp-0x60]",
    "mov     byte [r14], 0x0",
    "movzx   eax, byte [rax]",
    "test    al, al",
    "je      0x75206",
    "mov     rax, qword [rbp-0x40]",
    "mov     qword [rbp-0x50], rax",
    "call    __ctype_get_mb_cur_max",
    "mov     rdx, qword [rbp-0x90]",
    "lea     r8, [rdx+r14]",
    "cmp     rax, 0x1",
    "jbe     0x74b80",
    "movzx   eax, byte [r14+0x1]",
    "add     r14, 0x1",
    "add     ebx, 0x1",
    "test    al, al",
    "je      0x75206",
    "cmp     al, 0x20",
    "jne     0x74c9c",
    "cmp     qword [rbp-0x90], 0x0",
    "je      0x75116",
    "mov     eax, dword [rbp-0x9c]",
    "mov     r9d, 0xffffffff",
    "mov     qword [rbp-0x68], 0x0",
    "mov     dword [rbp-0x48], 0x0",
    "mov     edx, eax",
    "mov     dword [rbp-0x58], r9d",
    "or      edx, 0x1",
    "cmp     qword [rbp-0x90], 0x0",
    "setne   byte [rbp-0x95]",
    "and     eax, 0x4",
    "mov     dword [rbp-0x70], edx",
    "mov     dword [rbp-0x94], eax",
    "nop     dword [rax+rax]",
    "mov     r12, r13",
    "movzx   eax, byte [r15]",
    "cmp     al, 0x20",
    "je      0x74b96",
    "mov     rcx, qword [rbp-0x68]",
    "mov     rdx, r12",
    "xor     edi, edi",
    "mov     rsi, r15",
    "mov     qword [rbp-0x58], r8",
    "call    mbrtowc",
    "mov     r8, qword [rbp-0x58]",
    "cmp     rax, 0xfffffffffffffffd",
    "mov     rdx, rax",
    "jbe     0x74bfc",
    "mov     rdi, qword [rbp-0x90]",
    "call    free",
    "xor     ecx, ecx",
    "jmp     0x74f39",
    "mov     edx, dword [rbp-0x50]",
    "mov     rdi, qword [rbp-0x60]",
    "mov     esi, ebx",
    "call    substring",
    "mov     rdi, rax",
    "mov     r15, rax",
    "call    make_bare_word",
    "mov     rsi, r15",
    "mov     rdi, rax",
    "call    make_word_flags",
    "mov     rdx, rax",
    "lea     rax, [rel wlcache]",
    "mov     ecx, dword [rax+0xc]",
    "test    ecx, ecx",
    "jle     0x74f68",
    "cmp     byte [rbp-0x95], 0x0",
    "je      0x74d1c",
    "add     ebx, 0x1",
    "sub     r12, 0x1",
    "cmp     al, 0x9",
    "je      0x74b96",
    "cmp     rax, 0x1",
    "jbe     0x74b80",
    "mov     rax, qword [rbp-0x50]",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x74b80",
    "mov     edi, 0x10",
    "mov     qword [rbp-0x78], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x78]",
    "test    rax, rax",
    "mov     rcx, rax",
    "jne     0x74d6c",
    "lea     rdi, [rel wlcache]",
    "sub     ecx, 0x1",
    "mov     rax, qword [rax]",
    "mov     dword [rdi+0xc], ecx",
    "movsxd  rcx, ecx",
    "mov     rcx, qword [rax+rcx*8]",
    "movsxd  rax, ebx",
    "movzx   eax, byte [r15+rax]",
    "test    al, al",
    "jne     0x74ff0",
    "mov     r13, rax",
    "mov     rax, qword [rbp-0x90]",
    "add     r14, rax",
    "mov     byte [r8], al",
    "add     r13d, 0x1",
    "movsxd  r14, r13d",
    "mov     rax, qword [rbp-0x78]",
    "mov     rsi, r15",
    "mov     rdi, r8",
    "mov     qword [rbp-0x50], rdx",
    "cmp     rax, r14",
    "mov     rcx, rax",
    "cmovb   rcx, r14",
    "sub     rcx, r14",
    "call    __memcpy_chk",
    "mov     rdx, qword [rbp-0x50]",
    "add     r13d, edx",
    "add     ebx, edx",
    "sub     r12, rdx",
    "movsxd  r14, r13d",
    "jmp     0x74b9d",
    "mov     rax, qword [rbp-0x68]",
    "mov     qword [rcx+0x8], rdx",
    "mov     rdi, r15",
    "mov     qword [rbp-0x68], rcx",
    "mov     qword [rcx], rax",
    "call    free",
    "mov     eax, dword [rbp-0x48]",
    "mov     rcx, qword [rbp-0x68]",
    "lea     r8d, [rax+0x1]",
    "mov     eax, dword [rbp-0x6c]",
    "cmp     ebx, eax",
    "jg      0x74da2",
    "jmp     0x32173",
    "cmp     qword [rbp-0x88], 0x0",
    "setne   byte [rbp-0x68]",
    "cmp     dword [rbp-0x58], 0xffffffff",
    "movzx   eax, byte [rbp-0x68]",
    "jne     0x74ddc",
    "cmp     dword [rbp-0x50], eax",
    "mov     eax, dword [rbp-0x58]",
    "cmovge  eax, r8d",
    "mov     dword [rbp-0x58], eax",
    "mov     rdi, qword [rbp-0x90]",
    "movsx   esi, al",
    "call    mbschr",
    "test    rax, rax",
    "je      0x74d1c",
    "mov     rax, qword [rbp-0x48]",
    "movsxd  rsi, ebx",
    "lea     r15, [rax+rsi]",
    "cmp     byte [r15], 0x0",
    "je      0x74c3a",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x48], rdx",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x60]",
    "movsxd  rdx, dword [rbp-0x50]",
    "lea     r14, [rax+rdx]",
    "movzx   eax, byte [r14]",
    "test    al, al",
    "je      0x750bb",
    "test    al, al",
    "je      0x74ddc",
    "lea     ecx, [rbx+0x1]",
    "mov     rsi, qword [rbp-0x60]",
    "movsxd  rdx, ecx",
    "mov     dword [rbp-0x50], ecx",
    "lea     r14, [rsi+rdx]",
    "movzx   eax, byte [r14]",
    "test    r13, r13",
    "je      0x7513a",
    "mov     r9d, dword [rbp-0x58]",
    "cmp     r9d, 0xffffffff",
    "je      0x74ea6",
    "mov     qword [rbp-0x48], r12",
    "xor     ebx, ebx",
    "mov     r12, r14",
    "mov     r14d, dword [rbp-0x94]",
    "mov     dword [rbp-0x78], r8d",
    "mov     qword [rbp-0x80], rcx",
    "jmp     0x74e4a",
    "mov     edx, dword [rbp-0x6c]",
    "lea     eax, [rbx-0x1]",
    "cmp     eax, edx",
    "je      0x74f90",
    "test    al, al",
    "je      0x74d1c",
    "test    al, al",
    "je      0x74d1c",
    "cmp     byte [rbp-0x68], 0x0",
    "je      0x750d0",
    "nop     dword [rax]",
    "mov     rdi, qword [rbp-0x48]",
    "movsx   esi, al",
    "lea     r15, [r12+rbx]",
    "call    mbschr",
    "test    rax, rax",
    "jne     0x74e10",
    "cmp     r8d, 0xffffffff",
    "je      0x74fa0",
    "mov     eax, dword [rbp-0x6c]",
    "mov     dword [rbp-0x58], 0xffffffff",
    "cmp     ebx, eax",
    "jg      0x74fa0",
    "mov     rcx, qword [rbp-0x60]",
    "mov     dword [rbp-0x78], ebx",
    "mov     rbx, r14",
    "mov     r14d, dword [rbp-0x50]",
    "lea     r15, [rcx+rdx+0x1]",
    "jmp     0x75182",
    "lea     r15, [rsi+rdx+0x1]",
    "mov     edx, dword [rbp-0x9c]",
    "mov     dword [rbp-0x78], ebx",
    "mov     ebx, ecx",
    "mov     qword [rbp-0x80], r12",
    "mov     r12, r15",
    "and     edx, 0x4",
    "mov     qword [rbp-0xb0], r13",
    "mov     r13, qword [rbp-0x90]",
    "mov     r15d, edx",
    "jmp     0x75084",
    "mov     rax, qword [rbp-0xa8]",
    "test    rax, rax",
    "je      0x750df",
    "mov     edx, dword [rbp-0x50]",
    "mov     eax, dword [rbp-0xa0]",
    "mov     r9d, 0xffffffff",
    "cmp     edx, eax",
    "cmovle  eax, edx",
    "mov     edx, dword [rbp-0x6c]",
    "cmp     eax, edx",
    "jle     0x7519e",
    "cmp     qword [rbp-0x88], 0x0",
    "je      0x74ee8",
    "mov     dword [rax], r8d",
    "test    r13, r13",
    "je      0x74e2b",
    "mov     r8d, dword [rbp-0x78]",
    "mov     r12, qword [rbp-0x48]",
    "mov     rcx, qword [rbp-0x80]",
    "movzx   eax, byte [r15]",
    "lea     rdi, [rel data_122e02]",
    "mov     rbx, qword [rcx]",
    "mov     dword [rbp-0x78], r8d",
    "mov     qword [rbp-0x58], rcx",
    "call    make_bare_word",
    "lea     rsi, [rel data_122e02]",
    "mov     rdi, rax",
    "call    make_word_flags",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "call    make_word_list",
    "mov     rcx, qword [rbp-0x58]",
    "mov     r8d, dword [rbp-0x78]",
    "mov     qword [rcx], rax",
    "mov     eax, dword [rbp-0x48]",
    "mov     dword [rbp-0x58], r8d",
    "lea     r8d, [rax+0x2]",
    "jmp     0x74ddc",
    "mov     dword [rbp-0x58], r8d",
    "jmp     0x74ddc",
    "movsx   esi, al",
    "mov     rdi, r12",
    "call    mbschr",
    "test    rax, rax",
    "jne     0x75160",
    "movsx   esi, al",
    "mov     rdi, r13",
    "call    mbschr",
    "test    rax, rax",
    "jne     0x75060",
    "movsxd  rax, edx",
    "mov     rdx, qword [rbp-0x60]",
    "movzx   eax, byte [rdx+rax-0x1]",
    "cmp     al, 0x20",
    "je      0x751b9",
    "mov     rax, qword [rbp-0xa8]",
    "test    rax, rax",
    "je      0x74ede",
    "mov     rdi, qword [rbp-0x90]",
    "test    rdi, rdi",
    "je      0x74f01",
    "jmp     0x74ede",
    "test    r14d, r14d",
    "je      0x74e3d",
    "movzx   eax, byte [r12+rbx]",
    "lea     esi, [rax-0x9]",
    "cmp     sil, 0x1",
    "jbe     0x74e2b",
    "mov     eax, dword [rbp-0x50]",
    "mov     qword [rbp-0x68], rcx",
    "mov     dword [rbp-0x48], r8d",
    "add     eax, ebx",
    "mov     ebx, eax",
    "jmp     0x74ce8",
    "movzx   eax, byte [rbx]",
    "lea     edx, [rax-0x9]",
    "cmp     dl, 0x1",
    "jbe     0x7516f",
    "mov     dword [rbp-0x50], r14d",
    "mov     ebx, dword [rbp-0x78]",
    "jmp     0x74d1c",
    "test    r15d, r15d",
    "je      0x75071",
    "mov     r12, qword [rbp-0x80]",
    "mov     r13, qword [rbp-0xb0]",
    "mov     dword [rbp-0x50], ebx",
    "mov     ebx, dword [rbp-0x78]",
    "jmp     0x74d1c",
    "lea     rbx, [rel data_122e02]",
    "mov     qword [rbp-0x50], rcx",
    "mov     rdi, rbx",
    "mov     dword [rbp-0x48], r8d",
    "call    make_bare_word",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "call    make_word_flags",
    "mov     rsi, qword [rbp-0x50]",
    "mov     rdi, rax",
    "call    make_word_list",
    "mov     r8d, dword [rbp-0x48]",
    "mov     rcx, rax",
    "add     r8d, 0x1",
    "mov     r9d, r8d",
    "jmp     0x74ecf",
    "mov     r9d, r8d",
    "cmp     al, 0x9",
    "jne     0x74ecf",
    "mov     rax, qword [rbp-0x88]",
    "mov     dword [rax], r9d",
    "mov     dword [rax], r8d",
    "test    rcx, rcx",
    "je      0x75116",
    "mov     qword [rbp-0x48], rcx",
    "call    free",
    "mov     rcx, qword [rbp-0x48]",
    "add     rbx, 0x1",
    "movzx   eax, byte [r12+rbx]",
    "test    al, al",
    "je      0x74e90",
    "movzx   eax, byte [r12]",
    "cmp     al, 0x27",
    "je      0x74e5f",
    "cmp     al, 0x20",
    "jne     0x750aa",
    "mov     r15, qword [rbp-0x60]",
    "mov     ecx, dword [rbp-0x70]",
    "mov     rdx, r12",
    "mov     esi, ebx",
    "mov     rdi, r15",
    "call    skip_to_delim",
    "mov     dword [rbp-0x50], eax",
    "cmp     ebx, eax",
    "jne     0x74d1c",
    "mov     rbx, r15",
    "movzx   eax, byte [r15]",
    "add     r15, 0x1",
    "add     r14d, 0x1",
    "test    al, al",
    "je      0x75192",
    "cmp     al, 0x20",
    "jne     0x75192",
    "mov     r14, r12",
    "movzx   eax, byte [r12]",
    "add     r12, 0x1",
    "add     ebx, 0x1",
    "test    al, al",
    "je      0x75094",
    "movzx   eax, byte [r14]",
    "cmp     al, 0x27",
    "je      0x75094",
    "mov     rax, qword [rcx]",
    "test    rax, rax",
    "je      0x74f39",
    "mov     r9d, dword [rbp-0x58]",
    "mov     r8d, dword [rbp-0x78]",
    "mov     rcx, qword [rbp-0x80]",
    "cmp     r9d, 0xffffffff",
    "jne     0x750d0",
    "cmp     al, 0x22",
    "je      0x74e5f",
    "mov     r8d, dword [rbp-0x78]",
    "mov     r12, qword [rbp-0x48]",
    "mov     rcx, qword [rbp-0x80]",
    "jmp     0x74e6f",
    "cmp     al, 0x22",
    "je      0x75094",
    "mov     qword [rcx], 0x0",
    "mov     rdx, rcx",
    "mov     rcx, rax",
    "jmp     0x74f2b",
    "test    al, al",
    "je      0x750bb",
    "mov     rax, qword [rcx]",
    "mov     qword [rcx], rdx",
    "mov     rdx, rcx",
    "test    rax, rax",
    "jne     0x74f28",
    "mov     rcx, rax"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x73bc0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x20",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "test    rdi, rdi",
    "je      0x73cd0",
    "xor     ebx, ebx",
    "jmp     0x73ca9",
    "cmp     byte [rdi], 0x0",
    "mov     rbx, rdi",
    "je      0x73cd0",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x73cf8",
    "mov     r12d, esi",
    "mov     dword [rbp-0x38], 0x8a0",
    "mov     dword [rel data_1619c4], 0x1",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x73cfd",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x20",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, rbx",
    "mov     rdx, r13",
    "mov     rdi, r14",
    "call    __strcpy_chk",
    "lea     rdi, [rbp-0x40]",
    "xor     r8d, r8d",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "mov     esi, r12d",
    "mov     qword [rbp-0x40], r14",
    "call    sub_83630",
    "mov     rbx, rax",
    "lea     rax, [rel data_1619b0]",
    "cmp     rbx, rax",
    "je      0x73cd4",
    "xor     edx, edx",
    "xor     edi, edi",
    "cmp     rbx, rax",
    "mov     qword [rbp-0x40], rdx",
    "sete    dil",
    "lea     rdx, [rel last_command_exit_value]",
    "add     edi, 0x1",
    "mov     dword [rdx], 0x1",
    "call    sub_85e80",
    "{ Does not return }",
    "lea     rdx, [rel data_1619a0]",
    "cmp     rbx, rdx",
    "je      0x73cd4",
    "mov     rdi, qword [rbp-0x40]",
    "test    rdi, rdi",
    "je      0x73c76",
    "mov     dword [rel data_1619c4], 0x0",
    "test    rbx, rbx",
    "je      0x73ca9",
    "call    free",
    "mov     rax, qword [rbx+0x8]",
    "test    rax, rax",
    "je      0x73ca1",
    "mov     rdi, rbx",
    "call    dequote_list",
    "mov     rdi, qword [rax]",
    "call    remove_quoted_nulls",
    "mov     rax, qword [rbx+0x8]",
    "and     dword [rax+0x8], 0xfffbffff"
  ]
}
{
  "address": "0x3fd70",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     rax, [rel ps1_prompt]",
    "lea     rdx, [rel prompt_string_pointer]",
    "lea     r12, [rel interactive]",
    "mov     qword [rdx], rax",
    "mov     rdx, qword [rax]",
    "lea     rax, [rel current_prompt_string]",
    "mov     ecx, dword [r12]",
    "mov     qword [rax], rdx",
    "lea     rax, [rel global_command]",
    "mov     qword [rax], 0x0",
    "test    ecx, ecx",
    "jne     0x3fe48",
    "lea     rdi, [rel data_11f1ca]  {\"TMOUT\"}",
    "call    find_variable",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x3fdc4",
    "xor     r15d, r15d",
    "xor     r14d, r14d",
    "xor     r13d, r13d",
    "mov     rdi, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    rdi, rdi",
    "je      0x3fec8",
    "mov     edx, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    edx, edx",
    "jne     0x3fdda",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x3fe28",
    "xor     r15d, r15d",
    "xor     r14d, r14d",
    "jmp     0x3fdcd",
    "mov     edx, 0xa",
    "xor     esi, esi",
    "xor     r15d, r15d",
    "call    __isoc23_strtol",
    "mov     r14d, eax",
    "test    eax, eax",
    "jle     0x3fdcd",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0x3fde7",
    "lea     rax, [rel current_command_line_count]",
    "mov     dword [rax], 0x0",
    "call    parse_command",
    "mov     ebx, eax",
    "mov     eax, dword [r12]",
    "test    eax, eax",
    "je      0x3fe11",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x3fe30",
    "lea     rsi, [rel sub_36a60]",
    "mov     edi, 0xe",
    "call    set_signal_handler",
    "mov     edi, r14d",
    "mov     r15, rax",
    "call    alarm",
    "jmp     0x3fdcd",
    "add     rsp, 0x8",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    r13, r13",
    "je      0x3fe11",
    "test    r14d, r14d",
    "jg      0x3fea8",
    "xor     edi, edi",
    "call    alarm",
    "mov     rsi, r15",
    "mov     edi, 0xe",
    "call    set_signal_handler",
    "jmp     0x3fe11"
  ]
}
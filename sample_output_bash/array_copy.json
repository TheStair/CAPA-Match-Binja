{
  "address": "0x917c0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x8",
    "test    rdi, rdi",
    "je      0x918c0",
    "add     rsp, 0x8",
    "xor     r12d, r12d",
    "pop     rbx",
    "mov     rax, r12",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "mov     r13, rdi",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x918d1",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movdqa  xmm0, xmmword [rel data_136770]",
    "mov     edi, 0x20",
    "mov     qword [r12+0x18], 0x0",
    "movups  xmmword [r12], xmm0",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x918e9",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [r13+0x10]",
    "mov     qword [rbx], 0xffffffffffffffff",
    "mov     qword [rbx+0x8], 0x0",
    "movdqu  xmm1, xmmword [r13]",
    "mov     qword [rbx+0x10], rbx",
    "mov     qword [rbx+0x18], rbx",
    "mov     qword [r12+0x10], rbx",
    "mov     rbx, qword [rax+0x10]",
    "movups  xmmword [r12], xmm1",
    "cmp     rax, rbx",
    "jne     0x91866",
    "mov     rsi, qword [rbx+0x8]",
    "mov     rdi, qword [rbx]",
    "call    array_create_element",
    "mov     rdx, qword [r12+0x10]",
    "mov     rcx, qword [rdx+0x18]",
    "mov     qword [rcx+0x10], rax",
    "mov     qword [rax+0x18], rcx",
    "mov     qword [rdx+0x18], rax",
    "mov     qword [rax+0x10], rdx",
    "mov     rdx, qword [r13+0x18]",
    "mov     rcx, qword [r13+0x10]",
    "test    rdx, rdx",
    "jne     0x91858",
    "jmp     0x918af",
    "cmp     rdx, rbx",
    "je      0x918a1",
    "mov     rdx, qword [rcx+0x10]",
    "cmp     rdx, rbx",
    "jne     0x9185d",
    "add     rsp, 0x8",
    "mov     rax, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "mov     rbx, qword [rbx+0x10]",
    "mov     qword [r12+0x18], rax",
    "cmp     rbx, rcx",
    "jne     0x91866",
    "mov     rbx, qword [rbx+0x10]",
    "cmp     rbx, rcx",
    "je      0x918af"
  ]
}
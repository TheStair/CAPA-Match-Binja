{
  "address": "0xa1bd0",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "get file attributes"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14d, r8d",
    "push    r13",
    "mov     r13d, edx",
    "push    r12",
    "mov     r12d, esi",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0xb8",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "movzx   eax, byte [rdi]",
    "cmp     al, 0x24",
    "je      0xa1cf0",
    "cmp     ecx, 0x27",
    "je      0xa1cfb",
    "cmp     al, 0x7e",
    "je      0xa1d70",
    "lea     rsi, [rel sub_a0a10]",
    "mov     rdi, rbx",
    "call    rl_completion_matches",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xa1d64",
    "cmp     byte [rdi+0x1], 0x28",
    "je      0xa1d50",
    "mov     esi, 0x2f",
    "mov     rdi, rbx",
    "call    strchr",
    "test    rax, rax",
    "jne     0xa1c30",
    "lea     rax, [rel perform_hostname_completion]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0xa1c30",
    "movzx   eax, byte [rbx]",
    "cmp     al, 0x7e",
    "jne     0xa1c16",
    "mov     rbx, qword [rax]",
    "test    rbx, rbx",
    "je      0xa1d25",
    "lea     rsi, [rel sub_a0c90]",
    "call    rl_completion_matches",
    "mov     r15, rax",
    "test    rax, rax",
    "jne     0xa1d25",
    "and     r14d, 0x1",
    "je      0xa1dc8",
    "lea     rsi, [rel rl_username_completion_function]",
    "mov     rdi, rbx",
    "call    rl_completion_matches",
    "mov     r15, rax",
    "test    rax, rax",
    "jne     0xa1d25",
    "cmp     byte [rbx], 0x40",
    "je      0xa1de8",
    "nop     ",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xa1f6f",
    "cmp     qword [rax+0x8], 0x0",
    "je      0xa1e10",
    "mov     rdi, rbx",
    "call    glob_pattern_p",
    "cmp     eax, 0x1",
    "je      0xa1e97",
    "lea     rax, [rel no_empty_command_completion]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xa1c50",
    "jmp     0xa1c16",
    "lea     rsi, [rel sub_9f010]",
    "mov     rdi, rbx",
    "call    rl_completion_matches",
    "mov     r15, rax",
    "test    rax, rax",
    "jne     0xa1d25",
    "nop     dword [rax]",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xb8",
    "mov     rax, r15",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xa1f74",
    "lea     rsi, [rel sub_a1450]",
    "mov     rdi, rbx",
    "call    rl_completion_matches",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xa1dd9",
    "xor     r15d, r15d",
    "jmp     0xa1d25",
    "lea     rsi, [rel command_word_completion_function]",
    "mov     rdi, rbx",
    "mov     dword [rel data_168bf8], 0x0",
    "call    rl_completion_matches",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0xa1db0",
    "cmp     r13d, r12d",
    "je      0xa1edd",
    "jmp     0xa1c30",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, rbx",
    "mov     rdx, r12",
    "mov     rdi, r13",
    "call    __strcpy_chk",
    "lea     rdi, [rbp-0xd8]",
    "mov     qword [rbp-0xd8], r13",
    "call    sub_a1a00",
    "mov     rbx, qword [rbp-0xd8]",
    "lea     rsi, [rbp-0xd0]",
    "mov     rdi, rbx",
    "call    stat",
    "test    eax, eax",
    "jne     0xa1e8a",
    "cmp     qword [rax+0x8], 0x0",
    "je      0xa1d25",
    "lea     rax, [rel rl_ignore_some_completions_function]",
    "lea     rdx, [rel sub_9c9f0]",
    "mov     qword [rax], rdx",
    "nop     dword [rax]",
    "mov     rsi, qword [rax+0x8]",
    "mov     rbx, qword [rax]",
    "test    rsi, rsi",
    "je      0xa1efc",
    "cmp     byte [rbx], 0x0",
    "jne     0xa1c50",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0xa1d25",
    "mov     eax, dword [rbp-0xb8]",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "jne     0xa1e8a",
    "lea     rax, [rel rl_completion_type]",
    "mov     eax, dword [rax]",
    "cmp     eax, 0x9",
    "je      0xa1f62",
    "mov     rdi, rbx",
    "call    absolute_pathname",
    "test    eax, eax",
    "jne     0xa1d25",
    "test    rbx, rbx",
    "je      0xa1d25",
    "lea     rax, [rel rl_ignore_some_completions_function]",
    "lea     rdx, [rel sub_9c9d0]",
    "mov     qword [rax], rdx",
    "jmp     0xa1dc8",
    "lea     rax, [rel rl_completion_append_character]",
    "mov     dword [rax], 0x2f",
    "mov     rdi, r15",
    "call    strvec_dispose",
    "jmp     0xa1dd9",
    "cmp     eax, 0x21",
    "jne     0xa1d25",
    "mov     esi, 0x2f",
    "mov     rdi, rbx",
    "call    strchr",
    "test    rax, rax",
    "jne     0xa1d25",
    "movzx   r12d, byte [rbx]",
    "cmp     r12b, byte [rsi]",
    "jne     0xa1d25",
    "jmp     0xa1cd1",
    "cmp     byte [rbx], 0x7e",
    "je      0xa1d25",
    "mov     rdi, rbx",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xa1d25",
    "lea     rax, [rel rl_completion_suppress_append]",
    "mov     dword [rax], 0x1",
    "lea     rax, [rel rl_filename_completion_desired]",
    "mov     dword [rax], 0x0",
    "jmp     0xa1d25",
    "mov     rdi, rbx",
    "call    sub_a0c00",
    "test    eax, eax",
    "je      0xa1f44",
    "mov     rdi, rbx",
    "call    absolute_pathname",
    "test    eax, eax",
    "jne     0xa1d25",
    "mov     rbx, qword [r15]",
    "test    rbx, rbx",
    "je      0xa1d25",
    "cmp     dword [rel data_168bf8], 0x0",
    "je      0xa1cd1",
    "mov     rdi, rbx",
    "call    absolute_program",
    "test    eax, eax",
    "jne     0xa1d25",
    "mov     rsi, qword [r15+0x8]",
    "test    rsi, rsi",
    "je      0xa1d25",
    "cmp     r12b, 0x7e",
    "je      0xa1d25",
    "jmp     0xa1c8e",
    "mov     rdi, rbx",
    "call    sub_a0c00",
    "test    eax, eax",
    "je      0xa1d25"
  ]
}
{
  "address": "0x754b0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "encrypt data using Curve25519/a423aa5d0923438c8eac88d5abe4fcd5"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "test    rdi, rdi",
    "je      0x75790",
    "xor     ebx, ebx",
    "jmp     0x75683",
    "mov     r12, qword [rdi]",
    "mov     rbx, rdi",
    "test    r12, r12",
    "je      0x75790",
    "add     rsp, 0x18",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r12",
    "mov     r13d, esi",
    "xor     esi, esi",
    "call    assignment",
    "mov     rdi, r12",
    "mov     r14d, eax",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rcx, rax",
    "test    rax, rax",
    "je      0x75b2d",
    "mov     qword [rbp-0x38], rax",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, r12",
    "mov     rdi, rcx",
    "mov     rdx, r15",
    "call    __strcpy_chk",
    "movsxd  rcx, r14d",
    "mov     r12, rax",
    "lea     rax, [rax+rcx]",
    "cmp     byte [rax], 0x3d",
    "je      0x75558",
    "lea     rdx, [r12+rcx-0x1]",
    "xor     r15d, r15d",
    "cmp     byte [rdx], 0x2b",
    "jne     0x7556e",
    "xor     r13d, r13d",
    "xor     r15d, r15d",
    "mov     byte [rax], 0x0",
    "lea     r14, [r12+rcx+0x1]",
    "test    r13d, r13d",
    "je      0x7558f",
    "mov     byte [rdx], 0x0",
    "mov     r15d, 0x1",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r14], 0x0",
    "jmp     0x755d3",
    "mov     rdi, r14",
    "mov     qword [rbp-0x38], rcx",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     rcx, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     r8, rax",
    "je      0x75b4b",
    "test    byte [rbx+0x9], 0x80",
    "jne     0x75940",
    "lea     rax, [rel echo_command_at_execute]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x7560f",
    "mov     qword [rbp-0x40], rax",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r13",
    "mov     rsi, r14",
    "mov     rdi, r8",
    "mov     qword [rbp-0x38], rcx",
    "call    __strcpy_chk",
    "mov     rcx, qword [rbp-0x38]",
    "xor     r13d, r13d",
    "mov     r14, rax",
    "mov     rdi, r14",
    "mov     qword [rbp-0x38], rcx",
    "call    strlen",
    "mov     rcx, qword [rbp-0x38]",
    "movsxd  rdx, eax",
    "cmp     byte [r14+rdx-0x1], 0x29",
    "jne     0x75530",
    "cmp     byte [r14], 0x0",
    "jne     0x75998",
    "mov     esi, 0x5b",
    "mov     rdi, r12",
    "call    mbschr",
    "test    rax, rax",
    "je      0x756c8",
    "test    r15d, r15d",
    "je      0x757a0",
    "mov     edi, 0x1",
    "mov     qword [rbp-0x38], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     r14, rax",
    "je      0x75b6d",
    "mov     rdi, r14",
    "lea     edx, [rax-0x1]",
    "mov     esi, 0x1",
    "call    substring",
    "mov     rcx, qword [rbp-0x38]",
    "mov     r14, rax",
    "lea     rdx, [rel expand_string_assignment]",
    "mov     rdi, r14",
    "xor     esi, esi",
    "mov     qword [rbp-0x38], rcx",
    "xor     r13d, r13d",
    "call    sub_75250",
    "mov     rcx, qword [rbp-0x38]",
    "mov     r14, rax",
    "jmp     0x75976",
    "test    r13d, r13d",
    "je      0x75698",
    "test    r13d, r13d",
    "jne     0x75760",
    "mov     ecx, 0x1",
    "mov     edx, r13d",
    "mov     rsi, r14",
    "mov     rdi, r12",
    "call    xtrace_print_assignment",
    "jmp     0x7560f",
    "lea     rax, [r12+rcx-0x1]",
    "mov     edx, r13d",
    "mov     ecx, 0x1",
    "mov     rsi, r14",
    "mov     byte [rax], 0x2b",
    "mov     rdi, r12",
    "mov     qword [rbp-0x38], rax",
    "call    xtrace_print_assignment",
    "mov     rax, qword [rbp-0x38]",
    "mov     byte [rax], 0x0",
    "jmp     0x75530",
    "test    r14, r14",
    "jne     0x755d3",
    "mov     edx, r15d",
    "mov     rsi, r14",
    "mov     rdi, r12",
    "call    bind_variable",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x7564d",
    "mov     eax, dword [rbx+0x8]",
    "mov     edx, r15d",
    "or      edx, 0x40",
    "mov     ecx, eax",
    "not     ecx",
    "and     ecx, 0x10020000",
    "cmove   r15d, edx",
    "mov     edx, eax",
    "and     edx, 0x2020000",
    "cmp     edx, 0x20000",
    "je      0x75988",
    "lea     rsi, [rel data_1332e0]  {\"%s: cannot assign list to array \u2026\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    report_error",
    "mov     edx, r15d",
    "xor     ecx, ecx",
    "mov     rsi, r14",
    "mov     rdi, r12",
    "or      dh, 0x8",
    "call    assign_array_element",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x75780",
    "mov     r8, qword [rbx]",
    "mov     rdi, r12",
    "call    stupidly_hack_special_variables",
    "nop     word [rax+rax]",
    "or      r15d, 0x2",
    "jmp     0x75708",
    "mov     ecx, r15d",
    "or      ecx, 0x8",
    "cmp     edx, 0x2020000",
    "cmove   r15d, ecx",
    "mov     rdi, r14",
    "call    free",
    "mov     rdi, r12",
    "call    free",
    "xor     ebx, ebx",
    "jmp     0x75673",
    "test    ah, 0x40",
    "jne     0x757c0",
    "mov     rdi, r14",
    "call    free",
    "mov     rdi, r12",
    "call    free",
    "xor     r13d, r13d",
    "test    eax, 0x400000",
    "je      0x7571c",
    "test    r15b, 0x2",
    "je      0x75800",
    "or      r15d, 0x4",
    "mov     r13d, 0x4",
    "lea     rax, [rel last_command_exit_value]",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_158490]",
    "mov     dword [rel data_158490], 0x1",
    "mov     dword [rax], 0x1",
    "call    set_pipestatus_array",
    "mov     eax, dword [rbx+0x28]",
    "test    ah, 0x40",
    "jne     0x7566e",
    "and     ah, 0xef",
    "mov     dword [rbx+0x28], eax",
    "test    r15b, 0x8",
    "je      0x75737",
    "lea     rax, [rel variable_context]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x758a0",
    "mov     ebx, 0x1",
    "jmp     0x75668",
    "mov     edx, r15d",
    "mov     rsi, r14",
    "mov     rdi, r12",
    "call    assign_array_from_string",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x756ae",
    "lea     rax, [rel variable_context]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x75737",
    "mov     rdi, r12",
    "call    find_variable",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x75aa8",
    "test    byte [rax+0x28 {Elf64_Header::section_header_offset.b}], 0x2",
    "jne     0x7586f",
    "test    r15b, 0x40",
    "je      0x75850",
    "mov     esi, r15d",
    "mov     rdi, r12",
    "call    nameref_transform_name",
    "xor     edi, edi",
    "mov     edx, r15d",
    "mov     rsi, r14",
    "mov     qword [rbp-0x40], rax",
    "call    expand_compound_array_assignment",
    "test    r13d, r13d",
    "mov     r8, qword [rbp-0x40]",
    "mov     qword [rbp-0x38], rax",
    "je      0x758fe",
    "mov     r8, qword [rax]",
    "mov     eax, dword [rax+0x28]",
    "test    al, 0x2",
    "jne     0x7586f",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fcf9]  {\"%s: readonly variable\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    report_error",
    "mov     r8, qword [rbx]",
    "jmp     0x75650",
    "jmp     0x7564d",
    "mov     rdi, r12",
    "call    find_global_variable",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x75a4c",
    "mov     rdi, r12",
    "call    find_variable",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x75850",
    "xor     esi, esi",
    "mov     rdi, r8",
    "call    make_local_array_variable",
    "mov     rbx, rax",
    "xor     esi, esi",
    "mov     rdi, r8",
    "call    make_local_assoc_variable",
    "mov     rbx, rax",
    "jmp     0x7590b",
    "test    ah, 0x40",
    "jne     0x75650",
    "mov     rdi, r8",
    "call    stupidly_hack_special_variables",
    "mov     eax, dword [rbx+0x28]",
    "test    al, 0x2",
    "jne     0x756c0",
    "mov     esi, r15d",
    "mov     rdi, r12",
    "call    nameref_transform_name",
    "mov     edx, r15d",
    "mov     rsi, r14",
    "xor     edi, edi",
    "mov     rbx, rax",
    "call    expand_compound_array_assignment",
    "mov     qword [rbp-0x38], rax",
    "test    r13d, r13d",
    "je      0x75b19",
    "mov     eax, dword [rax+0x28]",
    "mov     eax, dword [rax+0x28]",
    "test    al, 0x20",
    "je      0x75850",
    "mov     rax, qword [rbp-0x38]",
    "test    rax, rax",
    "je      0x756ae",
    "mov     edx, r15d",
    "mov     r15, qword [rbp-0x38]",
    "mov     rdi, rbx",
    "mov     rsi, r15",
    "call    assign_compound_array_list",
    "test    r15, r15",
    "je      0x7564d",
    "test    rbx, rbx",
    "je      0x75ae7",
    "mov     edx, r15d",
    "mov     rsi, r14",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x40], r8",
    "call    expand_compound_array_assignment",
    "test    r13d, r13d",
    "mov     r8, qword [rbp-0x40]",
    "mov     qword [rbp-0x38], rax",
    "jne     0x75ad5",
    "mov     rdi, rbx",
    "call    make_new_array_variable",
    "mov     rcx, qword [rbp-0x38]",
    "mov     rbx, rax",
    "jmp     0x75a31",
    "lea     rax, [rel global_variables]",
    "mov     rdi, rbx",
    "mov     rax, qword [rax]",
    "mov     rsi, qword [rax+0x20]",
    "call    sub_54b40",
    "mov     edi, 0x400",
    "mov     rbx, rax",
    "call    hash_create",
    "or      dword [rbx+0x28], 0x40",
    "mov     rcx, qword [rbp-0x38]",
    "mov     qword [rbx+0x8], rax",
    "jmp     0x759e9",
    "test    ah, 0x40",
    "jne     0x7564d",
    "lea     rdx, [rel variable_context]",
    "mov     edx, dword [rdx]",
    "cmp     dword [rbx+0x2c], edx",
    "je      0x75867",
    "mov     rdi, rax",
    "call    dispose_words",
    "jmp     0x756ae",
    "mov     rdi, qword [rbp-0x38]",
    "call    dispose_words",
    "mov     r8, qword [rbx]",
    "jmp     0x75650",
    "test    byte [rbx+0x28], 0x44",
    "je      0x758fe",
    "test    rbx, rbx",
    "jne     0x759e9",
    "mov     rsi, rcx",
    "mov     edx, r15d",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x38], rcx",
    "call    assign_compound_array_list",
    "mov     rcx, qword [rbp-0x38]",
    "test    rcx, rcx",
    "je      0x7564d",
    "mov     edx, r15d",
    "mov     rsi, r14",
    "mov     rdi, rbx",
    "call    expand_compound_array_assignment",
    "mov     rcx, rax",
    "test    r13d, r13d",
    "jne     0x75a18",
    "test    al, 0x2",
    "je      0x759c0",
    "nop     word [rax+rax]",
    "lea     rax, [rel variable_context]",
    "mov     eax, dword [rax]",
    "cmp     dword [rbx+0x2c], eax",
    "je      0x75914",
    "test    rcx, rcx",
    "je      0x756ae",
    "mov     rdi, rcx",
    "call    dispose_words",
    "mov     r8, qword [rbx]",
    "jmp     0x75650",
    "test    byte [rbx+0x28], 0x40",
    "jne     0x759e9",
    "test    byte [rbx+0x28], 0x4",
    "je      0x75b01",
    "mov     rdi, rcx",
    "call    dispose_words",
    "jmp     0x756ae",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x38], rcx",
    "call    convert_var_to_assoc",
    "mov     rcx, qword [rbp-0x38]",
    "mov     rbx, rax",
    "mov     rdi, rbx",
    "mov     qword [rbp-0x38], rcx",
    "call    convert_var_to_array",
    "mov     rcx, qword [rbp-0x38]",
    "mov     rbx, rax",
    "jmp     0x75a31"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
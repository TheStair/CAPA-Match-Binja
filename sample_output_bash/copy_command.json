{
  "address": "0x60280",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "test    rdi, rdi",
    "je      0x60348",
    "xor     r13d, r13d",
    "mov     r12, rdi",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x607b2",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movdqu  xmm0, xmmword [r12]",
    "movdqu  xmm1, xmmword [r12+0x10]",
    "mov     rbx, qword [r12+0x10]",
    "movups  xmmword [r13], xmm0",
    "movups  xmmword [r13+0x10], xmm1",
    "test    rbx, rbx",
    "je      0x60325",
    "cmp     dword [r12], 0xe",
    "ja      0x6034b",
    "xor     eax, eax",
    "nop     word [rax+rax]",
    "add     rsp, 0x18",
    "mov     rax, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     eax, dword [r12]",
    "lea     rdx, [rel jump_table_136868]",
    "movsxd  rax, dword [rdx+rax*4]",
    "add     rax, rdx",
    "jmp     rax",
    "mov     rdi, rbx",
    "mov     r14, rax",
    "call    copy_redirect",
    "mov     qword [rax], r14",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0x602e0",
    "test    r14, r14",
    "je      0x60321",
    "{Case 0x0, 0x5}",
    "mov     rdi, qword [r12+0x18]",
    "call    sub_60a50",
    "mov     qword [r13+0x18], rax",
    "jmp     0x6034b",
    "{Case 0x2, 0x8}",
    "mov     edi, 0x18",
    "mov     r12, qword [r12+0x18]",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x607fa",
    "{Case 0x1}",
    "mov     edi, 0x18",
    "mov     rbx, qword [r12+0x18]",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x607e2",
    "{Case 0x3}",
    "mov     edi, 0x20",
    "mov     r12, qword [r12+0x18]",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x60812",
    "{Case 0x4}",
    "mov     edi, 0x18",
    "mov     r14, qword [r12+0x18]",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x607ca",
    "{Case 0x6}",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x608ec",
    "{Case 0xe}",
    "mov     edi, 0x18",
    "mov     r14, qword [r12+0x18]",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x608d4",
    "{Case 0xa}",
    "mov     edi, 0x10",
    "mov     r12, qword [r12+0x18]",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x608a2",
    "{Case 0xb}",
    "mov     rdi, qword [r12+0x18]",
    "call    sub_601d0",
    "mov     qword [r13+0x18], rax",
    "jmp     0x6034b",
    "{Case 0xd}",
    "mov     edi, 0x10",
    "mov     r12, qword [r12+0x18]",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x6088a",
    "{Case 0xc}",
    "mov     edi, 0x28",
    "mov     r12, qword [r12+0x18]",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x60872",
    "{Case 0x7}",
    "mov     edi, 0x20",
    "mov     r12, qword [r12+0x18]",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x6085a",
    "{Case 0x9}",
    "mov     edi, 0x10",
    "mov     r12, qword [r12+0x18]",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x60842",
    "mov     qword [r13+0x10], rax",
    "mov     qword [rax], 0x0",
    "mov     rcx, rax",
    "mov     rax, r14",
    "jmp     0x60313",
    "mov     esi, 0x18",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     eax, dword [r12]",
    "mov     rdi, qword [r12+0x8]",
    "mov     dword [rbx], eax",
    "call    copy_command",
    "mov     rdi, qword [r12+0x10]",
    "mov     qword [rbx+0x8], rax",
    "call    copy_command",
    "mov     qword [rbx+0x10], rax",
    "mov     qword [r13+0x18], rbx",
    "jmp     0x6034b",
    "mov     esi, 0x18",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbx]",
    "mov     r12, qword [rbx+0x8]",
    "mov     qword [r14], rax",
    "mov     rdi, qword [r12]",
    "call    make_bare_word",
    "mov     edx, dword [r12+0x8]",
    "mov     r15, qword [rbx+0x10]",
    "xor     ebx, ebx",
    "mov     dword [rax+0x8], edx",
    "mov     qword [r14+0x8], rax",
    "test    r15, r15",
    "je      0x6046a",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     eax, dword [r12]",
    "mov     rdi, qword [r12+0x8]",
    "mov     dword [rbx], eax",
    "call    copy_command",
    "mov     rdi, qword [r12+0x10]",
    "mov     qword [rbx+0x8], rax",
    "call    copy_command",
    "mov     rdi, qword [r12+0x18]",
    "mov     qword [rbx+0x10], rax",
    "test    rdi, rdi",
    "je      0x604cf",
    "mov     esi, 0x18",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     eax, dword [r14]",
    "mov     rdi, qword [r14+0x8]",
    "mov     dword [r12], eax",
    "call    copy_word_list",
    "mov     rbx, qword [r14+0x10]",
    "mov     qword [r12+0x8], rax",
    "test    rbx, rbx",
    "je      0x60561",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [r12+0x18]",
    "mov     edx, dword [rax+0x18]",
    "mov     rdi, qword [rax+0x8]",
    "mov     dword [rbx+0x18], edx",
    "call    copy_command",
    "mov     qword [rbx+0x8], rax",
    "mov     rax, qword [r12+0x18]",
    "mov     rdi, qword [rax+0x10]",
    "call    copy_command",
    "mov     qword [rbx+0x10], rax",
    "mov     qword [r13+0x18], rbx",
    "jmp     0x6034b",
    "mov     esi, 0x18",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rcx, qword [r14+0x8]",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x38], rcx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rcx, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x608ba",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     eax, dword [r12]",
    "mov     rdi, qword [r12+0x8]",
    "mov     dword [rbx], eax",
    "call    copy_word_list",
    "mov     qword [rbx+0x8], rax",
    "mov     eax, dword [r12+0x4]",
    "mov     dword [rbx+0x4], eax",
    "mov     qword [r13+0x18], rbx",
    "jmp     0x6034b",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, qword [r12+0x8]",
    "call    copy_command",
    "mov     qword [rbx+0x8], rax",
    "mov     rax, qword [r12]",
    "mov     qword [rbx], rax",
    "mov     qword [r13+0x18], rbx",
    "jmp     0x6034b",
    "mov     esi, 0x28",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [r12]",
    "mov     rdi, qword [r12+0x8]",
    "mov     qword [rbx], rax",
    "call    copy_word_list",
    "mov     rdi, qword [r12+0x10]",
    "mov     qword [rbx+0x8], rax",
    "call    copy_word_list",
    "mov     rdi, qword [r12+0x18]",
    "mov     qword [rbx+0x10], rax",
    "call    copy_word_list",
    "mov     rdi, qword [r12+0x20]",
    "mov     qword [rbx+0x18], rax",
    "call    copy_command",
    "mov     qword [rbx+0x20], rax",
    "mov     qword [r13+0x18], rbx",
    "jmp     0x6034b",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, rbx",
    "mov     rdi, r12",
    "call    copy_function_def_contents",
    "mov     qword [r13+0x18], rax",
    "jmp     0x6034b",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, qword [r12+0x8]",
    "call    copy_command",
    "mov     qword [rbx+0x8], rax",
    "mov     qword [r13+0x18], rbx",
    "jmp     0x6034b",
    "mov     rdx, qword [rax]",
    "mov     qword [rax], rcx",
    "mov     rcx, rax",
    "test    rdx, rdx",
    "jne     0x60310",
    "mov     qword [r14+0x10], rbx",
    "mov     qword [r13+0x18], r14",
    "jmp     0x6034b",
    "nop     dword [rax]",
    "mov     qword [rbx+0x18], rdi",
    "mov     qword [r13+0x18], rbx",
    "jmp     0x6034b",
    "call    copy_command",
    "mov     rdi, rax",
    "mov     eax, dword [r14+0x4]",
    "mov     qword [r12+0x10], rbx",
    "mov     qword [r13+0x18], r12",
    "mov     dword [r12+0x4], eax",
    "jmp     0x6034b",
    "xor     eax, eax",
    "nop     dword [rax+rax]",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, rcx",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "mov     qword [rbx+0x8], r15",
    "mov     rdi, qword [r14+0x10]",
    "call    copy_command",
    "mov     qword [rbx+0x10], rax",
    "mov     eax, dword [r14]",
    "mov     dword [rbx], eax",
    "mov     qword [r13+0x18], rbx",
    "jmp     0x6034b",
    "mov     rax, rdx",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, qword [r15+0x8]",
    "call    copy_word_list",
    "mov     rdi, qword [r15+0x10]",
    "mov     qword [rbx+0x8], rax",
    "call    copy_command",
    "mov     qword [rbx+0x10], rax",
    "mov     eax, dword [r15+0x18]",
    "mov     qword [rbx], r12",
    "mov     r15, qword [r15]",
    "mov     dword [rbx+0x18], eax",
    "test    r15, r15",
    "jne     0x60400",
    "mov     rdi, rbx",
    "mov     r15, rax",
    "call    copy_redirect",
    "mov     qword [rax], r15",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0x60520",
    "mov     rbx, rax",
    "test    r15, r15",
    "je      0x60561",
    "mov     edi, 0x20",
    "mov     r12, rbx",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x6082a",
    "test    r12, r12",
    "je      0x6046a",
    "mov     qword [rax], 0x0",
    "mov     rbx, r15",
    "jmp     0x60553",
    "mov     qword [rbx], 0x0",
    "mov     rax, rbx",
    "nop     dword [rax]",
    "mov     rdx, qword [rbx]",
    "mov     qword [rbx], rax",
    "mov     rax, rbx",
    "test    rdx, rdx",
    "jne     0x60550",
    "mov     rbx, r12",
    "mov     r12, qword [r12]",
    "mov     qword [rbx], rax",
    "mov     rax, rbx",
    "test    r12, r12",
    "jne     0x60458",
    "mov     rbx, rdx"
  ]
}
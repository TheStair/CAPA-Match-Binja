{
  "address": "0x963f0",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rdx",
    "push    r13",
    "mov     r13, rcx",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x28",
    "mov     dword [rbp-0x38], esi",
    "mov     esi, 0x5b",
    "call    mbschr",
    "mov     r8d, dword [rbp-0x38]",
    "test    rax, rax",
    "je      0x96540",
    "test    r14, r14",
    "je      0x96507",
    "mov     r15, rax",
    "mov     r12, rax",
    "mov     eax, r8d",
    "sub     r15, rbx",
    "not     eax",
    "mov     esi, r15d",
    "test    al, 0x60",
    "je      0x96528",
    "test    r13, r13",
    "je      0x96514",
    "mov     qword [r14], 0x0",
    "jmp     0x96507",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     ecx, [rax-0x1]",
    "jmp     0x96454",
    "mov     edx, r8d",
    "mov     rdi, rbx",
    "shr     edx, 0x5",
    "and     edx, 0x1",
    "call    sub_111360",
    "mov     ecx, eax",
    "add     rsp, 0x28",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     dword [r13], 0x0",
    "lea     eax, [r15+0x1]",
    "cmp     eax, ecx",
    "jge     0x964d8",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120287]  {\"bad array subscript\"}",
    "call    dcgettext",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    report_error",
    "test    r14, r14",
    "je      0x96507",
    "movsxd  rax, ecx",
    "cmp     byte [rbx+rax], 0x5d",
    "jne     0x964d8",
    "mov     qword [r14], r12",
    "mov     byte [r12], 0x0",
    "mov     rdi, rbx",
    "mov     dword [rbp-0x3c], ecx",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x38], rdx",
    "call    malloc",
    "mov     rdx, qword [rbp-0x38]",
    "mov     ecx, dword [rbp-0x3c]",
    "test    rax, rax",
    "mov     r8, rax",
    "je      0x9654e",
    "mov     qword [rbp-0x48], rax",
    "mov     rsi, rdx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rsi, rbx",
    "mov     rdi, r8",
    "mov     dword [rbp-0x38], ecx",
    "call    __strcpy_chk",
    "test    r14, r14",
    "mov     byte [r12], 0x5b",
    "mov     ecx, dword [rbp-0x38]",
    "je      0x964ba",
    "test    r13, r13",
    "je      0x964c6",
    "add     r12, 0x1",
    "mov     qword [r14], r12",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "sub     ecx, r15d",
    "mov     dword [r13], ecx"
  ]
}
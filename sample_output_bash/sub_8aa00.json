{
  "address": "0x8aa00",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "lea     r14, [rbp-0xc8]",
    "push    r13",
    "mov     rdi, r14",
    "push    r12",
    "push    rbx",
    "lea     rbx, [rel data_159fa0]",
    "lea     r13, [rbx+0x198]",
    "mov     r12, rbx",
    "sub     rsp, 0x168",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel termsig_sighandler]",
    "mov     dword [rbp-0x48], 0x0",
    "mov     qword [rbp-0xd0], rax",
    "call    sigemptyset",
    "lea     rdi, [rbp-0x168]",
    "call    sigemptyset",
    "nop     word [rax+rax]",
    "mov     esi, dword [r12]",
    "mov     rdi, r14",
    "add     r12, 0x18",
    "call    sigaddset",
    "cmp     r12, r13",
    "jne     0x8aa70",
    "lea     rax, [rbp-0x170]",
    "lea     r12, [rel data_1611a0]",
    "mov     qword [rbp-0x178], rax",
    "jmp     0x8aacd",
    "movsxd  r14, dword [rbx]",
    "mov     r15, r14",
    "test    byte [r12+r14*4], 0x1",
    "jne     0x8aac0",
    "add     rbx, 0x18",
    "cmp     rbx, r13",
    "je      0x8ab80",
    "lea     rax, [rbp-0xd0]",
    "mov     rdx, qword [rbp-0x178]",
    "mov     edi, r14d",
    "mov     rsi, rax",
    "mov     qword [rbp-0x180], rax",
    "call    sigaction",
    "mov     edx, dword [rbp-0xe8]",
    "mov     rax, qword [rbp-0x170]",
    "mov     rsi, qword [rbp-0xd0]",
    "mov     dword [rbx+0x10], edx",
    "lea     edx, [r14-0x1]",
    "mov     qword [rbx+0x8], rax",
    "cmp     edx, 0x3f",
    "ja      0x8aaa0",
    "mov     dword [rel data_168770], 0x1",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x8ac2d",
    "lea     rdx, [rel interactive_shell]",
    "mov     ecx, dword [rdx]",
    "test    ecx, ecx",
    "jne     0x8aac0",
    "lea     r8, [rel original_signals]",
    "lea     rcx, [rel initialize_traps]",
    "cmp     qword [r8+r14*8], rcx",
    "je      0x8abd0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x168",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     rax, 0x1",
    "je      0x8abf0",
    "mov     qword [r8+r14*8], rsi",
    "cmp     rsi, 0x1",
    "jne     0x8ab36",
    "lea     rdx, [rel interactive_shell]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "jne     0x8abb0",
    "lea     r8, [rel original_signals]",
    "nop     word [rax+rax]",
    "or      dword [r12+r14*4], 0x2",
    "jmp     0x8ab36",
    "cmp     r15d, 0x1b",
    "jne     0x8aac0",
    "cmp     rax, 0x1",
    "je      0x8abf7",
    "cmp     rax, 0x1",
    "jbe     0x8aac0",
    "mov     rdx, qword [rbp-0x180]",
    "mov     rsi, qword [rbp-0x178]",
    "mov     edi, r15d",
    "mov     qword [rbp-0x188], r8",
    "call    sigaction",
    "mov     r8, qword [rbp-0x188]",
    "or      dword [r12+r14*4], 0x2",
    "mov     qword [r8+r14*8], 0x1",
    "jmp     0x8aac0",
    "cmp     r15d, 0x1b",
    "jne     0x8aac0",
    "jmp     0x8ab60",
    "test    rax, rax",
    "je      0x8aac0",
    "mov     rsi, qword [rbp-0x178]",
    "xor     edx, edx",
    "mov     edi, 0x1b",
    "add     rbx, 0x18",
    "call    sigaction",
    "cmp     rbx, r13",
    "jne     0x8aacd"
  ]
}
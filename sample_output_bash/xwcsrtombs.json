{
  "address": "0xd45c0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rsi",
    "push    r14",
    "mov     r14, rdx",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x98",
    "mov     qword [rbp-0xb8], rdi",
    "mov     qword [rbp-0xb0], rsi",
    "mov     qword [rbp-0x98], rcx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x40",
    "ja      0xd474d",
    "mov     rbx, 0xffffffffffffffff",
    "jmp     0xd4774",
    "mov     r15, qword [r15]",
    "test    rbx, rbx",
    "je      0xd47a0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xd47fa",
    "mov     rax, qword [rbp-0x98]",
    "xor     ebx, ebx",
    "lea     r13, [rbp-0x80]",
    "lea     r12, [rbp-0x88]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x88], rax",
    "jmp     0xd47cc",
    "test    r14, r14",
    "je      0xd47f3",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x98",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r14d, dword [r15]",
    "mov     rdx, r12",
    "mov     rdi, r13",
    "mov     esi, r14d",
    "call    wcrtomb",
    "cmp     rax, 0xffffffffffffffff",
    "jne     0xd47c0",
    "xor     ebx, ebx",
    "jmp     0xd476a",
    "mov     r13, rax",
    "lea     rax, [rbp-0x80]",
    "mov     qword [rbp-0xa0], rax",
    "jmp     0xd4693",
    "test    r14d, r14d",
    "je      0xd4774",
    "call    __errno_location",
    "mov     dword [rax], 0x54",
    "jmp     0xd474d",
    "mov     rax, qword [rbp-0xb0]",
    "mov     qword [rax], r15",
    "mov     r12d, dword [r15]",
    "cmp     r14, r13",
    "jb      0xd4640",
    "add     rbx, rax",
    "add     r15, 0x4",
    "mov     rdx, qword [rbp-0x98]",
    "mov     rdi, qword [rbp-0xa0]",
    "mov     esi, r12d",
    "call    wcrtomb",
    "mov     rdx, rax",
    "cmp     rax, 0xffffffffffffffff",
    "je      0xd46f0",
    "mov     rdx, qword [rbp-0x98]",
    "mov     esi, r12d",
    "mov     rdi, rbx",
    "call    wcrtomb",
    "mov     rdx, rax",
    "cmp     rax, 0xffffffffffffffff",
    "jne     0xd4663",
    "mov     rax, qword [rbp-0x98]",
    "mov     byte [rbp-0x80], r12b",
    "test    rax, rax",
    "je      0xd4707",
    "cmp     r13, rdx",
    "jb      0xd4738",
    "cmp     qword [rbp-0x98], 0x0",
    "mov     byte [rbx], r12b",
    "je      0xd4730",
    "mov     edx, 0x1",
    "mov     qword [rax], 0x0",
    "mov     rax, qword [rbp-0xb0]",
    "mov     qword [rax], r15",
    "call    __errno_location",
    "mov     dword [rax], 0x54",
    "cmp     r14, rdx",
    "jb      0xd4760",
    "test    r13, r13",
    "jne     0xd46d6",
    "mov     rax, qword [rbp-0x98]",
    "mov     qword [rax], 0x0",
    "test    r13, r13",
    "je      0xd4738",
    "test    r12d, r12d",
    "je      0xd46e0",
    "mov     rax, qword [rbp-0xb8]",
    "sub     rbx, rax",
    "cmp     r14, r13",
    "jb      0xd470c",
    "mov     edx, 0x1",
    "test    r12d, r12d",
    "jne     0xd4683",
    "nop     dword [rax]",
    "mov     rax, qword [rbp-0xb8]",
    "xor     r15d, r15d",
    "sub     rbx, rax",
    "jmp     0xd476a",
    "add     rbx, rdx",
    "add     r15, 0x4",
    "sub     r14, rdx",
    "je      0xd4760",
    "mov     rsi, qword [rbp-0xa0]",
    "mov     rdi, rbx",
    "mov     qword [rbp-0xa8], rdx",
    "call    memcpy",
    "mov     rdx, qword [rbp-0xa8]",
    "jmp     0xd467e"
  ]
}
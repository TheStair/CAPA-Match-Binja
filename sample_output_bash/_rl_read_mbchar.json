{
  "address": "0x103370",
  "rules": [
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], 0x0",
    "mov     qword [rbp-0x48], 0x0",
    "test    esi, esi",
    "jle     0x103450",
    "xor     r13d, r13d",
    "jmp     0x1033fa",
    "movsxd  rax, esi",
    "mov     r12, rdi",
    "xor     ebx, ebx",
    "xor     r15d, r15d",
    "mov     qword [rbp-0x58], rax",
    "xor     r13d, r13d",
    "lea     r14, [rbp-0x40]",
    "call    _rl_bracketed_read_key",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x103455",
    "mov     byte [r12+r15], al",
    "add     r15, 0x1",
    "lea     rdi, [rbp-0x4c]",
    "mov     rcx, r14",
    "mov     rdx, r15",
    "mov     rsi, r12",
    "lea     r13d, [rbx+0x1]",
    "call    mbrtowc",
    "cmp     rax, 0xffffffffffffffff",
    "je      0x1033fa",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "mov     eax, r13d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     rax, 0xfffffffffffffffe",
    "je      0x103430",
    "mov     rax, qword [rbp-0x48]",
    "mov     qword [rbp-0x40], rax",
    "cmp     qword [rbp-0x58], r15",
    "je      0x1033fa",
    "test    rax, rax",
    "je      0x103420",
    "mov     ebx, r15d",
    "mov     r13d, r15d",
    "call    rl_read_key",
    "jmp     0x1033c7",
    "mov     byte [r12], 0x0",
    "mov     r13d, 0x1",
    "jmp     0x1033fa",
    "test    eax, eax",
    "js      0x1033fa"
  ]
}
{
  "address": "0xcd7f0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/d1aa048b20f94c0db48b1ae538432626",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "validate payment card number using luhn algorithm with no lookup table/c7424b8f4dd24e28bdb38bbfd0000b7d/5cd90ca8b31f4cdd8124133557051a20"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rsi",
    "push    rbx",
    "sub     rsp, 0x28",
    "movzx   eax, byte [rsi]",
    "cmp     al, 0x2b",
    "mov     byte [rbp-0x42], al",
    "sete    al",
    "movzx   eax, al",
    "add     r12, rax",
    "test    rdi, rdi",
    "je      0xcdcba",
    "lea     rax, [rel list_optarg]",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel list_optflags]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel loptend]",
    "mov     qword [rax], 0x0",
    "jmp     0xcda80",
    "cmp     rdi, qword [rel data_168d30]",
    "mov     rbx, rdi",
    "je      0xcd8b0",
    "mov     r13d, 0xffffffff",
    "jmp     0xcd95c",
    "lea     r14, [rel lcurrent]",
    "mov     r15d, dword [rel data_168d28]",
    "mov     rbx, qword [r14]",
    "cmp     r15d, 0x1",
    "je      0xcdc8d",
    "lea     r14, [rel lcurrent]",
    "lea     rax, [rel loptend]",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rel data_168d30], rdi",
    "mov     qword [r14], rdi",
    "mov     qword [rax], 0x0",
    "add     rsp, 0x28",
    "mov     eax, r13d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    rbx, rbx",
    "jne     0xcd85b",
    "mov     rax, qword [rbx+0x8]",
    "movsxd  r8, r15d",
    "mov     rdx, qword [rax]",
    "movzx   r15d, byte [rdx+0x1]",
    "test    r15b, r15b",
    "je      0xcdca0",
    "cmp     r13b, 0x2b",
    "jne     0xcdca0",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdx, qword [rax]",
    "movzx   r13d, byte [rdx]",
    "cmp     r13b, 0x2d",
    "je      0xcda28",
    "nop     word [rax+rax]",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "lea     rsi, [rel data_11f222]  {\"%s: invalid option\"}",
    "mov     byte [rel data_15f6a5], r9b",
    "call    dcgettext",
    "lea     rsi, [rel data_15f6a4]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     rdx, qword [r14]",
    "mov     rax, qword [rdx+0x8]",
    "mov     rsi, qword [rax]",
    "mov     eax, dword [rel data_168d28]",
    "add     eax, 0x1",
    "mov     dword [rel data_168d28], eax",
    "cdqe    ",
    "cmp     byte [rsi+rax], 0x0",
    "je      0xcdb80",
    "mov     esi, r13d",
    "mov     rdi, r12",
    "mov     byte [rbp-0x41], r13b",
    "call    strchr",
    "movzx   r9d, byte [rbp-0x41]",
    "mov     rdx, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     r8, qword [rbp-0x40]",
    "je      0xcdac0",
    "lea     rax, [rel loptend]",
    "mov     qword [rel data_168d30], 0x0",
    "mov     qword [rax], rbx",
    "jmp     0xcda80",
    "mov     rdi, rdx",
    "lea     rsi, [rel 0x1210f5]  {\"--help\"}",
    "mov     qword [rbp-0x38], rdx",
    "call    strcmp",
    "mov     rdx, qword [rbp-0x38]",
    "test    eax, eax",
    "je      0xcdce8",
    "cmp     byte [rbp-0x42], 0x2b",
    "jne     0xcdca0",
    "lea     rax, [rel list_optarg]",
    "mov     rdx, qword [rdx]",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel list_optflags]",
    "mov     qword [r14], rdx",
    "mov     dword [rax], 0x0",
    "test    rdx, rdx",
    "je      0xcdb34",
    "lea     rax, [rel list_optarg]",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel list_optflags]",
    "mov     dword [rax], 0x0",
    "movzx   eax, byte [rax+0x1]",
    "lea     esi, [rax-0x3a]",
    "cmp     sil, 0x1",
    "ja      0xcd970",
    "lea     rax, [rel loptend]",
    "mov     r13d, 0xffffff9d",
    "mov     qword [rel data_168d30], 0x0",
    "mov     qword [rax], rbx",
    "jmp     0xcd95c",
    "cmp     r15b, 0x2d",
    "jne     0xcd88e",
    "cmp     byte [rdx+0x1], 0x0",
    "je      0xcdca0",
    "mov     r13d, 0x3f",
    "jmp     0xcd95c",
    "jmp     0xcdb27",
    "cmp     al, 0x23",
    "je      0xcdb40",
    "lea     rsi, [rdx+r8+0x1]",
    "mov     rdx, qword [rbx]",
    "cmp     byte [rsi], 0x0",
    "je      0xcd9b0",
    "movsx   esi, r13b",
    "lea     rax, [rel list_opttype]",
    "mov     byte [rel data_15f6a4], r13b",
    "mov     r8d, 0x1",
    "mov     r15d, 0x1",
    "mov     dword [rax], esi",
    "jmp     0xcd8d5",
    "cmp     byte [rdx+0x2], 0x0",
    "jne     0xcd88e",
    "mov     rdx, qword [rdx]",
    "lea     rax, [rel loptend]",
    "mov     qword [rax], rdx",
    "lea     rdx, [rdx+r8+0x1]",
    "movzx   eax, byte [rdx]",
    "test    al, al",
    "je      0xcdbc0",
    "add     r15d, 0x1",
    "mov     dword [rel data_168d28], r15d",
    "movsxd  r15, r15d",
    "cmp     byte [rdx+r15], 0x0",
    "je      0xcda10",
    "test    rdx, rdx",
    "je      0xcda90",
    "lea     rax, [rel list_optarg]",
    "mov     qword [rax], rsi",
    "lea     rax, [rel list_optflags]",
    "mov     dword [rax], 0x0",
    "movsx   r13d, byte [rdx+r8]",
    "lea     rax, [rel list_optopt]",
    "mov     qword [rbp-0x40], r8",
    "mov     qword [rbp-0x38], rdx",
    "mov     dword [rax], r13d",
    "mov     r9d, r13d",
    "cmp     r13d, 0x3a",
    "je      0xcdac0",
    "xor     eax, eax",
    "mov     rdx, qword [rbx]",
    "mov     qword [rel data_168d30], rax",
    "lea     rax, [rel loptend]",
    "mov     qword [rax], rdx",
    "nop     ",
    "mov     rax, qword [rbx]",
    "test    rax, rax",
    "je      0xcdc78",
    "sub     eax, 0x30",
    "cmp     al, 0x9",
    "lea     rax, [rel list_optarg]",
    "ja      0xcd998",
    "mov     dword [rel data_168d28], 0x1",
    "mov     rax, qword [rbx]",
    "mov     qword [r14], rax",
    "jmp     0xcd991",
    "lea     rax, [rel list_optarg]",
    "cmp     al, 0x3b",
    "jne     0xcdc20",
    "mov     rsi, qword [rdx+0x8]",
    "mov     rdi, qword [rsi]",
    "cmp     al, 0x3a",
    "je      0xcd9e8",
    "mov     byte [rel data_15f6a5], r9b",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121092]  {\"%s: numeric argument required\"}",
    "jmp     0xcdc33",
    "mov     rax, qword [rax+0x8]",
    "xor     esi, esi",
    "mov     byte [rbp-0x38], r9b",
    "mov     rdi, qword [rax]",
    "call    legal_number",
    "movzx   r9d, byte [rbp-0x38]",
    "test    eax, eax",
    "je      0xcdc78",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel list_optflags]",
    "mov     dword [rax], 0x0",
    "jmp     0xcd95c",
    "mov     qword [rax], rdx",
    "lea     rax, [rel list_optflags]",
    "mov     dword [rax], 0x0",
    "mov     rax, qword [rbx]",
    "mov     qword [r14], rax",
    "jmp     0xcd95c",
    "mov     byte [rel data_15f6a5], r9b",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_123628]  {\"%s: option requires an argument\"}",
    "lea     rax, [rel list_optarg]",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel list_optflags]",
    "mov     dword [rax], 0x0",
    "jmp     0xcd94f",
    "lea     rax, [rel list_optarg]",
    "mov     esi, dword [rsi+0x8]",
    "mov     rdx, qword [rdx]",
    "mov     qword [rax], rdi",
    "lea     rax, [rel list_optflags]",
    "mov     dword [rax], esi",
    "jmp     0xcd94f",
    "movzx   eax, byte [rdi]",
    "cmp     al, 0x2d",
    "je      0xcd9d8",
    "xor     edi, edi",
    "call    dcgettext",
    "lea     rsi, [rel data_15f6a4]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "lea     rax, [rel list_optarg]",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel list_optflags]",
    "mov     dword [rax], 0x0",
    "jmp     0xcdb34",
    "mov     rax, qword [r14]",
    "lea     rsi, [rel list_optarg]",
    "mov     rax, qword [rax]",
    "mov     rdx, qword [rax+0x8]",
    "mov     rax, qword [rax]",
    "mov     rdi, qword [rdx]",
    "mov     qword [r14], rax",
    "mov     qword [rsi], rdi",
    "mov     esi, dword [rdx+0x8]",
    "lea     rdx, [rel list_optflags]",
    "mov     dword [rdx], esi",
    "jmp     0xcd95c",
    "mov     qword [r14], rdx",
    "mov     dword [rel data_168d28], 0x1",
    "cmp     byte [rdi+0x1], 0x0",
    "jne     0xcda98",
    "cmp     al, 0x2b",
    "jne     0xcd9e8",
    "nop     word [rax+rax]",
    "cmp     byte [rbp-0x42], 0x2b",
    "jne     0xcd9e8",
    "nop     dword [rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
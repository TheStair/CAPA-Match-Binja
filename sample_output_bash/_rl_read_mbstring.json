{
  "address": "0x103460",
  "rules": [
    "encrypt data using Curve25519/f2994133291147a090851ed21e9c381b",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "movsxd  rdx, edx",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rdx",
    "push    r13",
    "mov     r13, rsi",
    "xor     esi, esi",
    "push    r12",
    "push    rbx",
    "mov     ebx, edi",
    "mov     rdi, r13",
    "sub     rsp, 0x28",
    "mov     dword [rbp-0x44], edx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    memset",
    "test    ebx, ebx",
    "js      0x1034fe",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x10351e",
    "test    r14d, r14d",
    "jle     0x1034fe",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r12d, 0x1",
    "lea     r14, [rbp-0x40]",
    "jmp     0x1034e2",
    "mov     byte [r13+r12-0x1], bl",
    "mov     rsi, r14",
    "mov     rdi, r13",
    "mov     qword [r14], 0x0",
    "call    _rl_get_char_len",
    "cmp     eax, 0xfffffffe",
    "je      0x1034b8",
    "lea     r15, [rel rl_readline_state]",
    "or      qword [r15], 0x40",
    "call    rl_read_key",
    "and     qword [r15], 0xffffffffffffffbf",
    "mov     ebx, eax",
    "not     eax",
    "shr     eax, 0x1f",
    "cmp     dword [rbp-0x44], r12d",
    "setg    dl",
    "add     r12, 0x1",
    "test    dl, al",
    "je      0x1034fe"
  ]
}
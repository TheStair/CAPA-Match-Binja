{
  "address": "0x896c0",
  "rules": [
    "hash data using aphash/1c6766435cde44639c26b9e1f0d91a11",
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using HC-128/26adaa3641374fccbeddc33b759c970e",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using RC4 KSA/89b7ba675fcb4f4eac2317f83c0a9436",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "check for kernel debugger via shared user data structure/47a8170337e74f7ca5a6c64253eb43bf",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/9f5ed5341ae94a0d943f2c8a6a459760",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x28",
    "mov     dword [rbp-0x34], esi",
    "call    strlen",
    "lea     r13, [rax+rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x89c95",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movzx   ecx, byte [rbx]",
    "test    byte [rbp-0x34], 0x1",
    "je      0x8970b",
    "mov     rdx, r12",
    "test    cl, cl",
    "je      0x89874",
    "cmp     cl, 0x7f",
    "je      0x89c24",
    "mov     byte [rdx], 0x0",
    "mov     r15d, dword [rbp-0x34]",
    "xor     r14d, r14d",
    "mov     dword [rbp-0x44], 0x0",
    "xor     edx, edx",
    "mov     r8d, r14d",
    "mov     dword [rbp-0x38], 0x0",
    "xor     edi, edi",
    "xor     esi, esi",
    "mov     eax, r15d",
    "mov     r13d, r15d",
    "mov     dword [rbp-0x40], 0x0",
    "shr     eax, 0x3",
    "and     r13d, 0x4",
    "and     eax, 0x1",
    "mov     byte [rbp-0x39], al",
    "mov     eax, r15d",
    "and     r15d, 0xc",
    "and     eax, 0x2",
    "mov     r14d, eax",
    "jmp     0x897b4",
    "cmp     byte [rbx+0x1], 0x0",
    "jne     0x89716",
    "lea     r9, [r12+rsi]",
    "cmp     cl, 0x1",
    "jne     0x89760",
    "mov     byte [r12], 0x0",
    "jmp     0x89877",
    "lea     esi, [r8+0x1]",
    "lea     eax, [rdx+0x1]",
    "movsxd  r11, esi",
    "lea     r10, [rbx+r11]",
    "test    r13d, r13d",
    "je      0x89890",
    "movzx   eax, byte [rbx+rdi+0x1]",
    "test    al, al",
    "je      0x89c61",
    "add     rsp, 0x28",
    "mov     rax, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     cl, 0x5c",
    "jne     0x8978c",
    "test    r8d, r8d",
    "je      0x89783",
    "lea     eax, [rdx+0x1]",
    "mov     byte [r9], 0x1",
    "cdqe    ",
    "lea     rdx, [r12+rax]",
    "jmp     0x89874",
    "test    r15d, r15d",
    "je      0x897df",
    "movsxd  r8, r8d",
    "mov     eax, edx",
    "movzx   ecx, byte [rbx+r8]",
    "movzx   ecx, byte [r10]",
    "mov     byte [r9], 0x5c",
    "test    cl, cl",
    "je      0x89ba0",
    "cmp     cl, 0x5b",
    "je      0x89960",
    "cmp     byte [rbx+rdi-0x1], 0x1",
    "je      0x8978c",
    "movsxd  rax, r8d",
    "movzx   ecx, byte [rbx+rax+0x1]",
    "test    r14d, r14d",
    "je      0x897f5",
    "cmp     al, 0x1",
    "je      0x89940",
    "lea     rdx, [r12+rsi]",
    "movsxd  rdx, eax",
    "cmp     byte [rbp-0x39], 0x0",
    "je      0x898b4",
    "movsx   edi, byte [r10]",
    "mov     byte [r9], 0x5b",
    "mov     r10d, eax",
    "lea     r9d, [r8+0x2]",
    "mov     ecx, edi",
    "cmp     dil, 0x5e",
    "je      0x89bd0",
    "cmp     cl, 0x1",
    "je      0x89920",
    "cmp     cl, 0x2f",
    "je      0x89b90",
    "add     r8d, 0x2",
    "add     edx, 0x1",
    "mov     byte [r9], al",
    "movsxd  rdi, r8d",
    "movsxd  rsi, edx",
    "movzx   ecx, byte [rbx+rdi]",
    "jmp     0x897ac",
    "cmp     al, 0x7f",
    "je      0x89940",
    "add     esi, 0x1",
    "jmp     0x89796",
    "cmp     cl, 0x1",
    "je      0x898c0",
    "movsxd  r9, r9d",
    "lea     r10d, [rdx+0x2]",
    "movsxd  rdx, eax",
    "movsx   edi, byte [rbx+r9]",
    "mov     byte [r12+rdx], 0x5e",
    "lea     r9d, [r8+0x3]",
    "cmp     edi, 0x5d",
    "jne     0x89984",
    "cmp     edi, 0x5d",
    "je      0x89bb0",
    "add     r8d, 0x1",
    "lea     eax, [rdx+0x1]",
    "mov     byte [r12+rsi], 0x5c",
    "movsxd  rdx, r8d",
    "lea     esi, [r8+0x1]",
    "movzx   ecx, byte [rbx+rdx]",
    "jmp     0x89796",
    "lea     rdi, [r12+rsi]",
    "add     r8d, 0x1",
    "test    r13d, r13d",
    "je      0x898f8",
    "add     r8d, 0x1",
    "movsxd  rdi, r8d",
    "movzx   ecx, byte [rbx+rdi]",
    "jmp     0x897ac",
    "test    cl, cl",
    "je      0x89870",
    "movsxd  rdi, esi",
    "lea     edx, [rax+0x1]",
    "cdqe    ",
    "mov     byte [r12+rax], cl",
    "movzx   ecx, byte [rbx+rdi]",
    "mov     r8, rdi",
    "movsxd  rsi, edx",
    "movzx   ecx, byte [rbx+r11+0x1]",
    "cmp     cl, 0x1",
    "je      0x89c38",
    "movsxd  rdx, r10d",
    "test    edi, edi",
    "je      0x89ba3",
    "jmp     0x89bb0",
    "movsxd  rdx, r10d",
    "add     r10d, 0x1",
    "mov     byte [r12+rdx], 0x5d",
    "movsxd  rdx, r9d",
    "add     r9d, 0x1",
    "movsx   edi, byte [rbx+rdx]",
    "jmp     0x89984",
    "mov     byte [rdi], 0x5c",
    "lea     eax, [rdx+0x1]",
    "test    cl, cl",
    "je      0x89ba0",
    "cmp     cl, 0x2e",
    "jg      0x89840",
    "add     r8d, 0x2",
    "jmp     0x89906",
    "cmp     cl, 0x7f",
    "je      0x89c38",
    "add     rdx, r12",
    "jmp     0x89874",
    "mov     dword [rbp-0x4c], esi",
    "mov     r8d, dword [rbp-0x40]",
    "mov     dword [rbp-0x48], eax",
    "mov     esi, dword [rbp-0x44]",
    "mov     byte [rbp-0x3a], cl",
    "jmp     0x899f4",
    "movsxd  rdx, r8d",
    "lea     esi, [r8+0x1]",
    "movzx   ecx, byte [rbx+rdx]",
    "jmp     0x89796",
    "sub     ecx, 0x3f",
    "cmp     cl, 0x3d",
    "ja      0x89860",
    "cmp     cl, 0x23",
    "jle     0x89860",
    "test    byte [rbp-0x34], 0x2",
    "je      0x898e7",
    "movsxd  rax, r9d",
    "cmp     edi, 0x1",
    "jne     0x899a8",
    "movsxd  rdi, r8d",
    "movzx   ecx, byte [rbx+rdi]",
    "test    cl, cl",
    "jne     0x897b4",
    "mov     rax, 0x30000000b0000001",
    "bt      rax, rcx",
    "jb      0x89829",
    "mov     rax, 0x4f1000000000",
    "bt      rax, rcx",
    "jae     0x89860",
    "movsxd  rdi, eax",
    "add     r8d, 0x2",
    "mov     edx, eax",
    "add     rdi, r12",
    "nop     dword [rax+rax]",
    "cmp     cl, 0x2f",
    "je      0x89b80",
    "movzx   eax, byte [rbx+rax]",
    "lea     ecx, [r9+0x1]",
    "cmp     edi, 0x5b",
    "je      0x89a50",
    "movzx   eax, byte [rbx+rax]",
    "add     rdx, r12",
    "test    al, al",
    "je      0x89874",
    "nop     ",
    "lea     eax, [rdx+0x1]",
    "movsxd  rdx, r8d",
    "mov     byte [rdi], 0x5c",
    "lea     esi, [r8+0x1]",
    "movzx   ecx, byte [rbx+rdx]",
    "jmp     0x89796",
    "nop     dword [rax+rax]",
    "mov     r8d, esi",
    "mov     edx, eax",
    "movsxd  rsi, eax",
    "nop     dword [rax+rax]",
    "cmp     al, 0x3a",
    "je      0x89b60",
    "cmp     edi, 0x3a",
    "jne     0x89ac8",
    "lea     ecx, [r9+0x1]",
    "mov     byte [rdx], al",
    "add     r10d, 0x1",
    "movsxd  rax, ecx",
    "lea     r9d, [rcx+0x1]",
    "movzx   eax, byte [rbx+rax]",
    "movsx   edi, al",
    "cmp     al, 0x5d",
    "jne     0x899e9",
    "mov     edi, 0x3a5b",
    "movsxd  rax, ecx",
    "add     r10d, 0x2",
    "mov     r8d, 0x1",
    "mov     word [r12+rdx], di",
    "movzx   eax, byte [rbx+rax]",
    "jmp     0x899de",
    "cmp     al, 0x3d",
    "je      0x89bf8",
    "cmp     edi, 0x3d",
    "jne     0x89b00",
    "test    r8d, r8d",
    "je      0x89ac8",
    "test    edi, edi",
    "je      0x89aa0",
    "lea     edx, [r10+0x1]",
    "movsxd  rdi, r9d",
    "movsxd  r10, r10d",
    "mov     dword [rbp-0x40], r8d",
    "mov     dword [rbp-0x44], esi",
    "mov     r8d, r9d",
    "movsxd  rsi, edx",
    "mov     byte [r12+r10], 0x5d",
    "movzx   ecx, byte [rbx+rdi]",
    "jmp     0x897ac",
    "lea     r9d, [rcx+0x1]",
    "movsx   edi, al",
    "cmp     al, 0x5d",
    "je      0x89a27",
    "movsxd  rcx, ecx",
    "mov     esi, 0x3d5b",
    "lea     eax, [r10+0x2]",
    "movsx   edi, byte [rbx+rcx]",
    "mov     word [r12+rdx], si",
    "cmp     dil, 0x5d",
    "je      0x89c41",
    "cmp     al, 0x2e",
    "jne     0x899d3",
    "cmp     edi, 0x2e",
    "jne     0x899d3",
    "test    esi, esi",
    "je      0x89b00",
    "cmp     al, 0x5d",
    "je      0x89b40",
    "mov     eax, dword [rbp-0x48]",
    "movzx   ecx, byte [rbp-0x3a]",
    "mov     dword [rbp-0x44], esi",
    "mov     rdi, r11",
    "mov     esi, dword [rbp-0x4c]",
    "mov     dword [rbp-0x40], r8d",
    "mov     r8d, esi",
    "movsxd  rsi, eax",
    "mov     rdx, rsi",
    "jmp     0x897ac",
    "movsxd  rdx, r10d",
    "cdqe    ",
    "lea     ecx, [r9+0x2]",
    "add     r10d, 0x3",
    "mov     esi, 0x1",
    "mov     byte [r12+rax], 0x5d",
    "movsxd  rax, ecx",
    "movzx   eax, byte [rbx+rax]",
    "jmp     0x899de",
    "add     r9d, 0x2",
    "mov     r10d, eax",
    "mov     esi, 0x1",
    "jmp     0x899e9",
    "mov     byte [r12+rdx], dil",
    "add     r10d, 0x1",
    "mov     ecx, r9d",
    "mov     edi, 0x2e5b",
    "movsxd  rcx, ecx",
    "lea     eax, [r10+0x2]",
    "mov     word [r12+rdx], di",
    "movsx   edi, byte [rbx+rcx]",
    "cmp     dil, 0x5d",
    "je      0x89c73",
    "cmp     dword [rbp-0x38], 0x0",
    "je      0x899d3",
    "cmp     al, 0x5d",
    "jne     0x899d3",
    "movzx   eax, word [rel data_136aa6[4]]  {\":]]={\"}",
    "add     r10d, 0x2",
    "xor     r8d, r8d",
    "mov     word [r12+rdx], ax",
    "movsxd  rax, ecx",
    "movzx   eax, byte [rbx+rax]",
    "jmp     0x899de",
    "cdqe    ",
    "lea     ecx, [r9+0x2]",
    "mov     dword [rbp-0x38], 0x1",
    "add     r10d, 0x3",
    "mov     byte [r12+rax], 0x5d",
    "movsxd  rax, ecx",
    "movzx   eax, byte [rbx+rax]",
    "jmp     0x899de",
    "mov     dword [rbp-0x38], 0x1",
    "add     r9d, 0x2",
    "mov     r10d, eax",
    "test    edi, edi",
    "jne     0x899f1",
    "cmp     al, 0x5d",
    "jne     0x899d3",
    "mov     r9d, 0x5d3d",
    "movsxd  rax, ecx",
    "add     r10d, 0x2",
    "xor     esi, esi",
    "mov     word [r12+rdx], r9w",
    "movzx   eax, byte [rbx+rax]",
    "jmp     0x899de",
    "nop     dword [rax]",
    "mov     eax, 0x5d2e",
    "mov     dword [rbp-0x38], 0x0",
    "add     r10d, 0x2",
    "mov     word [r12+rdx], ax",
    "movsxd  rax, ecx",
    "movzx   eax, byte [rbx+rax]",
    "jmp     0x899de"
  ]
}
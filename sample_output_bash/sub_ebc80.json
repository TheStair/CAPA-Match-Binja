{
  "address": "0xebc80",
  "rules": [
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     esi, 0x2f",
    "mov     rbp, rsp",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "call    strrchr",
    "test    rax, rax",
    "je      0xebcd5",
    "mov     rax, rbx",
    "mov     rbx, qword [rbp-0x8]",
    "leave   ",
    "retn    ",
    "cmp     byte [rax], 0x0",
    "je      0xebcd5",
    "cmp     byte [rax+0x1], 0x0",
    "jne     0xebce0",
    "lea     rbx, [rax+0x1]",
    "mov     rax, rbx",
    "mov     rbx, qword [rbp-0x8]",
    "leave   ",
    "retn    ",
    "cmp     rbx, rax",
    "je      0xebcd5",
    "lea     rdx, [rax-0x1]",
    "cmp     rbx, rdx",
    "jb      0xebccc",
    "cmp     byte [rdx], 0x2f",
    "jne     0xebcc0",
    "jmp     0xebd00",
    "lea     rax, [rdx-0x1]",
    "cmp     rbx, rax",
    "je      0xebcf0",
    "lea     rbx, [rdx+0x1]",
    "movzx   ecx, byte [rax-0x1]",
    "mov     rax, rdx",
    "jmp     0xebcf4",
    "movzx   ecx, byte [rdx-0x1]",
    "mov     rdx, rax",
    "cmp     cl, 0x2f",
    "jne     0xebcd5",
    "mov     rdx, rax",
    "jmp     0xebcd1"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
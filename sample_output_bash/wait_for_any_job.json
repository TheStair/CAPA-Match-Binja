{
  "address": "0x6c600",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "encrypt data using Curve25519/7d070d905d0942e295bbb2c9df72fc86"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x128",
    "mov     qword [rbp-0x150], rsi",
    "mov     r15d, dword [rel data_160908]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    r15d, r15d",
    "jne     0x6ca9f",
    "mov     r15d, 0xffffffff",
    "jmp     0x6c998",
    "lea     r12, [rbp-0xc0]",
    "mov     ebx, edi",
    "lea     r13, [rbp-0x140]",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     rdi, r13",
    "call    sigemptyset",
    "mov     rdx, r13",
    "mov     rsi, r12",
    "xor     edi, edi",
    "call    sigprocmask",
    "lea     r14, [rel js]",
    "movsxd  rcx, dword [r14+0x1c]",
    "test    ecx, ecx",
    "jle     0x6c6f0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x6cabb",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "and     ebx, 0x8",
    "call    sigprocmask",
    "lea     rax, [rel jobs]",
    "mov     esi, ebx",
    "and     esi, 0x8",
    "mov     r8, qword [rax]",
    "xor     eax, eax",
    "jmp     0x6c6bc",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x128",
    "mov     eax, r15d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "xor     eax, eax",
    "jmp     0x6c773",
    "lea     rax, [rel jobs]",
    "mov     rdx, qword [rax]",
    "xor     eax, eax",
    "jmp     0x6c75f",
    "mov     rdx, qword [r8+rax*8]",
    "mov     edi, eax",
    "test    esi, esi",
    "je      0x6c6a0",
    "cmp     eax, esi",
    "je      0x6ca90",
    "mov     rcx, qword [rdx]",
    "test    rcx, rcx",
    "je      0x6c750",
    "test    rdx, rdx",
    "je      0x6c9e0",
    "test    rdx, rdx",
    "je      0x6c6e5",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x6ca20",
    "add     eax, 0x1",
    "add     rdx, 0x8",
    "cmp     eax, esi",
    "je      0x6ca90",
    "cmp     dword [rcx+0x14], 0x1",
    "jne     0x6c750",
    "add     rax, 0x1",
    "cmp     rcx, rax",
    "je      0x6c6f0",
    "cmp     dword [rdx+0x14], 0x4",
    "je      0x6c8c8",
    "add     rax, 0x1",
    "cmp     rax, rcx",
    "jne     0x6c6da",
    "test    byte [rdx+0x18], 0x80",
    "jne     0x6c6a9",
    "mov     r8d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r8d, r8d",
    "jne     0x6c79b",
    "lea     rdx, [rel interrupt_state]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "jne     0x6ca58",
    "test    byte [rcx+0x18], 0x1",
    "jne     0x6c750",
    "mov     rdx, qword [r8+rax*8]",
    "mov     edi, eax",
    "jmp     0x6c6a0",
    "test    byte [rdx+0x18], 0x2",
    "jne     0x6c6b3",
    "add     rax, 0x1",
    "cmp     rcx, rax",
    "je      0x6c6f0",
    "mov     rdx, qword [r8+rax*8]",
    "mov     edi, eax",
    "test    rdx, rdx",
    "jne     0x6c6cb",
    "nop     ",
    "add     rax, 0x1",
    "cmp     rcx, rax",
    "je      0x6c6f0",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "lea     rax, [rel terminating_signal]",
    "jmp     0x6c7ac",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x6ca40",
    "nop     word [rax+rax]",
    "mov     esi, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    esi, esi",
    "jne     0x6c7b6",
    "lea     rax, [rel wait_intr_flag]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "je      0x6c7f0",
    "and     eax, 0x7f",
    "lea     r15d, [rax+0x80]",
    "jmp     0x6c903",
    "movzx   edx, ah",
    "cmp     al, 0x7f",
    "cmovne  r15d, edx",
    "jmp     0x6ca32",
    "call    __errno_location",
    "xor     esi, esi",
    "mov     edi, 0xffffffff",
    "mov     dword [rax], 0x0",
    "mov     qword [rbp-0x148], rax",
    "call    wait_for",
    "mov     rdx, qword [rbp-0x148]",
    "cmp     eax, 0xffffffff",
    "je      0x6ca00",
    "lea     rax, [rel wait_signal_received]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x6c7f0",
    "movsxd  rax, edi",
    "mov     rax, qword [r8+rax*8]",
    "mov     rcx, qword [rax+0x8]",
    "mov     rax, rcx",
    "jmp     0x6c91b",
    "test    rax, rax",
    "je      0x32115",
    "cmp     dword [rdx], 0xa",
    "jne     0x6c81e",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     rdi, r13",
    "call    sigemptyset",
    "mov     rdx, r13",
    "mov     rsi, r12",
    "xor     edi, edi",
    "call    sigprocmask",
    "movsxd  rcx, dword [r14+0x1c]",
    "test    ecx, ecx",
    "jle     0x6c8b0",
    "lea     rax, [rel this_shell_builtin]",
    "mov     rax, qword [rax]",
    "cmp     rax, qword [rel data_157ec8]",
    "jne     0x6c7f0",
    "mov     eax, dword [0x8]",
    "ud2     ",
    "{ Does not return }",
    "mov     rdx, qword [rax]",
    "cmp     rcx, rdx",
    "jne     0x6c918",
    "mov     eax, dword [r14+0x1c]",
    "test    eax, eax",
    "je      0x6c81e",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "jmp     0x6c702",
    "lea     rax, [rel jobs]",
    "mov     r8, qword [rax]",
    "xor     eax, eax",
    "jmp     0x6c878",
    "test    rax, rax",
    "jne     0x6caaa",
    "mov     rax, rdx",
    "mov     rbx, qword [rbp-0x150]",
    "mov     eax, dword [rax+0x8]",
    "test    rbx, rbx",
    "je      0x6c942",
    "call    sub_66150",
    "jmp     0x6c81e",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     rdi, r13",
    "call    sigemptyset",
    "mov     rsi, r12",
    "mov     rdx, r13",
    "xor     edi, edi",
    "call    sigprocmask",
    "mov     esi, dword [r14+0x1c]",
    "test    esi, esi",
    "jle     0x6ca89",
    "mov     rdx, qword [r8+rax*8]",
    "mov     edi, eax",
    "test    ebx, ebx",
    "je      0x6c860",
    "lea     rdi, [rel wait_intr_buf]",
    "mov     esi, 0x1",
    "call    __longjmp_chk",
    "{ Does not return }",
    "nop     dword [rax]",
    "mov     r11d, dword [r14+0x1c]",
    "mov     dword [rbp-0x148], edi",
    "test    r11d, r11d",
    "je      0x6c978",
    "mov     dword [rbx], eax",
    "mov     word [rbx+0x4], r15w",
    "test    rdx, rdx",
    "je      0x6c9c0",
    "test    rdx, rdx",
    "je      0x6c8a1",
    "lea     rdi, [rel sh_coproc]",
    "test    byte [rdi+0x1c], 0x2",
    "jne     0x6ca7f",
    "call    sub_6a230",
    "mov     r10d, dword [r14+0x1c]",
    "test    r10d, r10d",
    "je      0x6c978",
    "add     rax, 0x1",
    "cmp     rcx, rax",
    "je      0x6c8b0",
    "cmp     dword [rdx+0x14], 0x4",
    "je      0x6c8d8",
    "add     rax, 0x1",
    "cmp     rcx, rax",
    "jne     0x6c896",
    "test    byte [rdx+0x18], 0x80",
    "jne     0x6c869",
    "call    sub_51c40",
    "jmp     0x6c989",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "mov     r9d, dword [rel data_160908]",
    "test    r9d, r9d",
    "jne     0x6c978",
    "mov     rdx, qword [r8+rax*8]",
    "mov     edi, eax",
    "jmp     0x6c860",
    "mov     dword [rbp-0x148], edi",
    "call    sub_66750",
    "mov     edi, dword [rbp-0x148]",
    "mov     edx, eax",
    "and     edx, 0x7f",
    "add     edx, 0x1",
    "cmp     dl, 0x1",
    "jg      0x6ca70",
    "add     rax, 0x1",
    "cmp     rax, rcx",
    "je      0x6c8b0",
    "mov     rdx, qword [r8+rax*8]",
    "mov     edi, eax",
    "test    rdx, rdx",
    "jne     0x6c887",
    "nop     word [rax+rax]",
    "add     rax, 0x1",
    "cmp     rax, rcx",
    "je      0x6c8b0",
    "mov     edi, dword [rbp-0x148]",
    "xor     esi, esi",
    "call    sub_68b70"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
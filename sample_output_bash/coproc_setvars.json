{
  "address": "0x498b0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "mov     rax, qword [rdi]",
    "test    rax, rax",
    "je      0x498fa",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x49af5",
    "mov     rbx, rdi",
    "mov     esi, 0x1",
    "lea     rdi, [rbp-0x50]",
    "mov     qword [rbp-0x50], rax",
    "mov     dword [rbp-0x48], 0x0",
    "call    check_identifier",
    "test    eax, eax",
    "jne     0x49920",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r14, qword [rbx]",
    "mov     rdi, r14",
    "call    strlen",
    "lea     r13, [rax+0x10]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x49afa",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, r14",
    "call    find_variable",
    "test    rax, rax",
    "je      0x49a60",
    "mov     rdi, qword [rbx]",
    "mov     esi, 0x1",
    "call    find_variable_nameref_for_create",
    "cmp     rax, qword [rel data_157f88]",
    "je      0x499f2",
    "mov     edx, dword [rax+0x28 {Elf64_Header::section_header_offset.d}]",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x49af5",
    "test    rax, rax",
    "je      0x49ae5",
    "and     edx, 0x2",
    "je      0x499f2",
    "and     edx, 0x4",
    "je      0x49a20",
    "add     rsp, 0x38",
    "mov     rdi, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     free",
    "mov     rdi, qword [rbx]",
    "call    make_new_array_variable",
    "mov     edx, dword [rax+0x28 {Elf64_Header::section_header_offset.d}]",
    "jmp     0x49963",
    "mov     edx, dword [rax+0x28 {Elf64_Header::section_header_offset.d}]",
    "test    dh, 0x8",
    "je      0x49957",
    "mov     rbx, qword [rbx]",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fcf9]  {\"%s: readonly variable\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "mov     rsi, rbx",
    "xor     eax, eax",
    "call    report_error",
    "jmp     0x499f2",
    "mov     rdi, rax",
    "call    convert_var_to_array",
    "jmp     0x4996c",
    "movsxd  rdi, dword [rbx+0xc]",
    "call    itos",
    "mov     rdi, qword [rbx]",
    "xor     ecx, ecx",
    "xor     esi, esi",
    "mov     rdx, rax",
    "mov     r14, rax",
    "call    bind_array_variable",
    "mov     rdi, r14",
    "call    free",
    "movsxd  rdi, dword [rbx+0x10]",
    "call    itos",
    "mov     rdi, qword [rbx]",
    "xor     ecx, ecx",
    "mov     esi, 0x1",
    "mov     rdx, rax",
    "mov     r14, rax",
    "call    bind_array_variable",
    "mov     rdi, r14",
    "call    free",
    "mov     r8, qword [rbx]",
    "mov     rdx, r13",
    "mov     esi, 0x2",
    "lea     rcx, [rel data_11fd0f]  {\"%s_PID\"}",
    "mov     rdi, r12",
    "xor     eax, eax",
    "call    __sprintf_chk",
    "movsxd  rdi, dword [rbx+0x8]",
    "call    itos",
    "mov     rdi, r12",
    "xor     edx, edx",
    "mov     rbx, rax",
    "mov     rsi, rax",
    "call    bind_variable",
    "mov     rdi, rbx",
    "call    free",
    "test    edx, 0x4002",
    "jne     0x49a30",
    "mov     rdi, qword [rbx]",
    "mov     qword [rbp-0x58], rax",
    "call    free",
    "mov     rax, qword [rbp-0x58]",
    "mov     rcx, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x58], rcx",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rcx, qword [rbp-0x58]",
    "test    rax, rax",
    "mov     r15, rax",
    "je      0x49b13",
    "mov     rsi, r14",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, r15",
    "mov     rdx, r14",
    "mov     rsi, rcx",
    "call    __strcpy_chk",
    "mov     qword [rbx], r15",
    "mov     rdi, r15",
    "call    make_new_array_variable",
    "test    rax, rax",
    "jne     0x49954"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
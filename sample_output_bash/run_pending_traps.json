{
  "address": "0x8ebd0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "parse credit card information/b43756dafa5640c1ad7366148d2f3695",
    "contain loop",
    "get current PID on Linux",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "push    r14 {__saved_r14}",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0x228",
    "mov     edi, dword [rel data_168788]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38 {var_40}], rax",
    "xor     eax, eax  {0x0}",
    "test    edi, edi",
    "je      0x8ecef",
    "mov     rax, qword [rbp-0x38 {var_40}]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x8f2f3",
    "lea     rax, [rel running_trap]",
    "mov     eax, dword [rax]  {running_trap}",
    "test    eax, eax",
    "jle     0x8ec39",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x228",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "lea     rax, [rel trapped_signal_received]",
    "lea     rdx, [rel trap_saved_exit_value]",
    "lea     rdi, [rel data_11f1a4]  {\"PIPESTATUS\"}",
    "mov     dword [rel data_168788], 0x0",
    "mov     dword [rax], 0x0  {trapped_signal_received}",
    "lea     rax, [rel last_command_exit_value]",
    "mov     eax, dword [rax]  {last_command_exit_value}",
    "mov     dword [rbp-0x214 {var_21c_1}], eax",
    "mov     dword [rdx], eax  {trap_saved_exit_value}",
    "call    find_variable",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x8ec9a",
    "cmp     eax, 0x1d",
    "je      0x8f0e0",
    "lea     rax, [rel running_trap]",
    "mov     edx, dword [rax]  {running_trap}",
    "mov     dword [rbp-0x218 {var_220_1}], edx",
    "lea     rdx, [rel pending_traps]",
    "mov     edx, dword [rdx+0x4]  {data_1617a4}",
    "test    edx, edx",
    "jne     0x8ed18",
    "test    byte [rax+0x28 {Elf64_Header::section_header_offset.b}], 0x4",
    "je      0x8ef58",
    "lea     rax, [rel pending_traps]",
    "mov     esi, dword [rax+0x70]  {data_161810}",
    "test    esi, esi",
    "je      0x8ec1b",
    "lea     rax, [rel evalnest_max]",
    "mov     ebx, dword [rax]  {evalnest_max}",
    "test    ebx, ebx",
    "jle     0x8ec39",
    "mov     dword [rax], 0x2  {running_trap}",
    "mov     r13d, 0x2",
    "mov     qword [rbp-0x230 {var_238_1}], rbx",
    "mov     dword [rbp-0x224 {var_22c_2}], 0x1",
    "mov     dword [rbp-0x224 {var_22c_1}], 0x1",
    "mov     r13d, 0x2",
    "xor     ebx, ebx  {0x0}",
    "jmp     0x8ec9a",
    "mov     rbx, qword [rax+0x8 {Elf64_Header::ident.abi_version}] {Elf64_Header::ident.pad[0]} {Elf64_Header::ident.pad[1]} {Elf64_Header::ident.pad[2]} {Elf64_Header::ident.pad[3]} {Elf64_Header::ident.pad[4]} {Elf64_Header::ident.pad[5]} {Elf64_Header::ident.pad[6]}",
    "test    rbx, rbx",
    "je      0x8ec9a",
    "jmp     0x8ecef",
    "lea     r12, [rel evalnest]",
    "cmp     ebx, dword [r12]",
    "jl      0x8f13e  {evalnest}",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1336d0]  {\"run_pending_traps: bad value in \u2026\"}",
    "call    dcgettext",
    "mov     ebx, dword [rbp-0x224 {var_22c_2}]",
    "mov     rdx, r12",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "mov     esi, ebx",
    "call    internal_warning",
    "lea     rdx, [rel trap_list]",
    "movsxd  rax, ebx",
    "cmp     qword [rdx+rax*8], 0x0",
    "je      0x8f240",
    "cmp     r12, 0x1",
    "jbe     0x8ef78",
    "lea     rax, [rel pending_traps]",
    "movsxd  rdx, r13d",
    "mov     dword [rbp-0x224 {var_22c_2}], r13d",
    "lea     r14d, [r13+0x1]",
    "mov     edi, dword [rax+rdx*4]",
    "test    edi, edi",
    "je      0x8ef43",
    "nop     dword [rax]",
    "mov     rdi, rbx",
    "call    array_copy",
    "mov     rbx, rax",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133698]  {\"trap handler: maximum trap handl\u2026\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     esi, ebx",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "call    internal_error",
    "xor     ecx, ecx  {0x0}",
    "mov     edi, 0x2",
    "mov     dword [r12], ecx  {0x0}  {evalnest}",
    "call    jump_to_top_level",
    "{ Does not return }",
    "cmp     dword [rbp-0x224 {var_22c_2}], 0x43",
    "ja      0x8f2d8",
    "mov     rbx, qword [rbp-0x230 {var_238_1}]",
    "jmp     0x8eea2",
    "mov     rdi, r12",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x8f307",
    "mov     dword [rbp-0x224 {var_22c_1}], r13d",
    "mov     r13d, r14d",
    "jmp     0x8ecc7",
    "lea     r12, [rel running_trap]",
    "mov     dword [r12], r14d  {running_trap}",
    "cmp     r13d, 0x2",
    "je      0x8f100",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1204c4]  {\"invalid signal number\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rbx, rax",
    "jmp     0x8f25d",
    "lea     rdx, [rel signal_names]",
    "mov     rbx, qword [rdx+rax*8]",
    "test    rbx, rbx",
    "je      0x8f2d8",
    "movsxd  rax, dword [rbp-0x224 {var_22c_2}]",
    "lea     rdx, [rel pending_traps]",
    "cmp     dword [rbp-0x224 {var_22c_2}], 0x3f",
    "mov     dword [rdx+rax*4], 0x0",
    "mov     edx, dword [rbp-0x218 {var_220_1}]",
    "lea     rax, [rel running_trap]",
    "mov     dword [rax], edx  {running_trap}",
    "jg      0x8ecd8",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r12",
    "mov     rdi, r13",
    "call    __strcpy_chk",
    "lea     rdi, [rbp-0x140 {var_148}]",
    "mov     qword [rbp-0x248 {var_250_1}], r13",
    "call    save_parser_state",
    "lea     rax, [rel subst_assign_varlist]",
    "mov     edi, 0x1",
    "mov     rsi, qword [rax]  {subst_assign_varlist}",
    "mov     qword [rax], 0x0  {subst_assign_varlist}",
    "lea     rax, [rel temporary_env]",
    "mov     qword [rbp-0x238 {var_240_1}], rsi",
    "mov     rsi, qword [rax]  {temporary_env}",
    "mov     qword [rax], 0x0  {temporary_env}",
    "mov     qword [rbp-0x240 {var_248_1}], rsi",
    "call    save_pipeline",
    "movsxd  rax, dword [rbp-0x224 {var_22c_2}]",
    "lea     rdx, [rel pending_traps]",
    "mov     dword [rbp-0x220 {var_228_1}], 0x0",
    "mov     dword [rdx+rax*4], 0x0",
    "lea     rax, [rel evalnest]",
    "add     dword [rax], 0x1  {evalnest}",
    "lea     rax, [rel return_catch_flag]",
    "mov     eax, dword [rax]  {return_catch_flag}",
    "mov     dword [rbp-0x21c {var_224_1}], eax",
    "test    eax, eax",
    "jne     0x8f170",
    "cmp     dword [rbp-0x224 {var_22c_1}], 0x3f",
    "jle     0x8eed3",
    "lea     rsi, [rel data_120a87]  {\"interrupt trap\"}",
    "mov     edi, 0x2",
    "mov     r13d, r14d",
    "mov     dword [rax+rdx*4], 0x0",
    "mov     dword [rel data_168788], 0x0",
    "mov     dword [rax+0x8], 0x0  {data_1617a4+4}",
    "call    sub_8e640",
    "lea     rax, [rel interrupt_state]",
    "mov     dword [rax], 0x0  {interrupt_state}",
    "jmp     0x8eea2",
    "cmp     r13d, 0x11",
    "jne     0x8f2f8",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133708]  {\"run_pending_traps: signal handle\u2026\"}",
    "call    dcgettext",
    "mov     rdx, rbx",
    "mov     ebx, dword [rbp-0x224 {var_22c_2}]",
    "mov     rdi, rax",
    "xor     eax, eax  {0x0}",
    "mov     esi, ebx",
    "call    internal_warning",
    "call    getpid",
    "mov     esi, ebx",
    "mov     edi, eax",
    "call    kill",
    "jmp     0x8efb5",
    "mov     rdi, rbx",
    "call    restore_pipestatus_array",
    "mov     edx, dword [rbp-0x214 {var_21c_1}]",
    "lea     rax, [rel last_command_exit_value]",
    "mov     dword [rax], edx  {last_command_exit_value}",
    "lea     rdi, [rel return_catch]",
    "xor     esi, esi  {0x0}",
    "movdqa  xmm4, xmmword [rdi]  {return_catch}",
    "movdqa  xmm5, xmmword [rdi+0x10]  {data_1618d0}",
    "movdqa  xmm6, xmmword [rdi+0x20]  {data_1618e0}",
    "movdqa  xmm7, xmmword [rdi+0x30]  {data_1618f0}",
    "movaps  xmmword [rbp-0x210 {return_catch_1}], xmm4",
    "movdqa  xmm4, xmmword [rdi+0x40]  {data_161900}",
    "mov     rax, qword [rdi+0xc0]  {data_161980}",
    "movaps  xmmword [rbp-0x200 {var_208}], xmm5",
    "movdqa  xmm5, xmmword [rdi+0x50]  {data_161910}",
    "movaps  xmmword [rbp-0x1f0 {var_1f8}], xmm6",
    "movdqa  xmm6, xmmword [rdi+0x60]  {data_161920}",
    "movaps  xmmword [rbp-0x1e0 {var_1e8}], xmm7",
    "movdqa  xmm7, xmmword [rdi+0x70]  {data_161930}",
    "movaps  xmmword [rbp-0x1d0 {var_1d8}], xmm4",
    "movdqa  xmm4, xmmword [rdi+0x80]  {data_161940}",
    "movaps  xmmword [rbp-0x1c0 {var_1c8}], xmm5",
    "movdqa  xmm5, xmmword [rdi+0x90]  {data_161950}",
    "movaps  xmmword [rbp-0x1b0 {var_1b8}], xmm6",
    "movdqa  xmm6, xmmword [rdi+0xa0]  {data_161960}",
    "movaps  xmmword [rbp-0x1a0 {var_1a8}], xmm7",
    "movdqa  xmm7, xmmword [rdi+0xb0]  {data_161970}",
    "mov     qword [rbp-0x150 {var_158}], rax",
    "movaps  xmmword [rbp-0x190 {var_198}], xmm4",
    "movaps  xmmword [rbp-0x180 {var_188}], xmm5",
    "movaps  xmmword [rbp-0x170 {var_178}], xmm6",
    "movaps  xmmword [rbp-0x160 {var_168}], xmm7",
    "call    __sigsetjmp",
    "endbr64 ",
    "mov     dword [rbp-0x220 {var_228_1}], eax",
    "jmp     0x8ee19",
    "mov     eax, dword [rbp-0x220 {var_228_1}]",
    "test    eax, eax",
    "jne     0x8efc8",
    "mov     qword [rbp-0x230 {var_238_1}], rbx",
    "mov     r13d, r14d",
    "jmp     0x8ed35",
    "mov     ecx, dword [rel data_1611e4]",
    "lea     rsi, [rel trap_list]",
    "lea     r9, [rel initialize_traps]",
    "mov     r8d, ecx",
    "and     r8d, 0x10",
    "cmp     qword [rsi+0x88], r9",
    "je      0x8ef60  {data_162c68}",
    "mov     eax, dword [rbp-0x224 {var_22c_2}]",
    "lea     edi, [rax+0x1]",
    "call    parse_and_execute_cleanup",
    "lea     rax, [rel return_catch_value]",
    "mov     ebx, dword [rax]  {return_catch_value}",
    "jmp     0x8ee41",
    "mov     rdi, qword [rbp-0x248 {var_250_1}]",
    "mov     edx, 0x415",
    "lea     rsi, [rel data_120593]  {\"trap\"}",
    "call    parse_and_execute",
    "mov     ebx, eax",
    "movsxd  rax, dword [rbp-0x224 {var_22c_2}]",
    "lea     rdx, [rel trap_list]",
    "mov     r12, qword [rdx+rax*8]",
    "cmp     r12, qword [rel data_157f80]",
    "je      0x8ef78  {data_157f80}",
    "test    r8d, r8d",
    "jne     0x8ef3b",
    "test    r8d, r8d",
    "je      0x8f2a0",
    "lea     rax, [rel evalnest]",
    "mov     edi, 0x1",
    "sub     dword [rax], 0x1  {evalnest}",
    "call    restore_pipeline",
    "lea     rax, [rel subst_assign_varlist]",
    "mov     rcx, qword [rbp-0x238 {var_240_1}]",
    "lea     rdi, [rbp-0x140 {var_148}]",
    "mov     qword [rax], rcx  {subst_assign_varlist}",
    "call    restore_parser_state",
    "lea     rax, [rel temporary_env]",
    "mov     rcx, qword [rbp-0x240 {var_248_1}]",
    "mov     qword [rax], rcx  {temporary_env}",
    "mov     eax, dword [rbp-0x21c {var_224_1}]",
    "test    eax, eax",
    "jne     0x8efe8",
    "lea     rax, [rel return_catch_flag]",
    "mov     edx, dword [rbp-0x21c {var_224_1}]",
    "lea     rdi, [rel return_catch]",
    "movdqa  xmm0, xmmword [rbp-0x210 {return_catch_1}]",
    "mov     dword [rax], edx  {return_catch_flag}",
    "movdqa  xmm1, xmmword [rbp-0x200 {var_208}]",
    "lea     rax, [rel return_catch_value]",
    "movdqa  xmm2, xmmword [rbp-0x1f0 {var_1f8}]",
    "movaps  xmmword [rdi], xmm0  {return_catch}",
    "movdqa  xmm3, xmmword [rbp-0x1e0 {var_1e8}]",
    "movdqa  xmm4, xmmword [rbp-0x1d0 {var_1d8}]",
    "movaps  xmmword [rdi+0x10], xmm1  {data_1618d0}",
    "mov     dword [rax], ebx  {return_catch_value}",
    "movdqa  xmm5, xmmword [rbp-0x1c0 {var_1c8}]",
    "movdqa  xmm6, xmmword [rbp-0x1b0 {var_1b8}]",
    "movdqa  xmm7, xmmword [rbp-0x1a0 {var_1a8}]",
    "movaps  xmmword [rdi+0x20], xmm2  {data_1618e0}",
    "movdqa  xmm0, xmmword [rbp-0x190 {var_198}]",
    "movdqa  xmm1, xmmword [rbp-0x180 {var_188}]",
    "movaps  xmmword [rdi+0x30], xmm3  {data_1618f0}",
    "movdqa  xmm2, xmmword [rbp-0x170 {var_178}]",
    "movdqa  xmm3, xmmword [rbp-0x160 {var_168}]",
    "movaps  xmmword [rdi+0x40], xmm4  {data_161900}",
    "mov     rax, qword [rbp-0x150 {var_158}]",
    "movaps  xmmword [rdi+0x50], xmm5  {data_161910}",
    "movaps  xmmword [rdi+0x60], xmm6  {data_161920}",
    "mov     qword [rdi+0xc0], rax  {data_161980}",
    "movaps  xmmword [rdi+0x70], xmm7  {data_161930}",
    "movaps  xmmword [rdi+0x80], xmm0  {data_161940}",
    "movaps  xmmword [rdi+0x90], xmm1  {data_161950}",
    "movaps  xmmword [rdi+0xa0], xmm2  {data_161960}",
    "movaps  xmmword [rdi+0xb0], xmm3  {data_161970}",
    "mov     eax, dword [rbp-0x220 {var_228_1}]",
    "test    eax, eax",
    "je      0x8ee91",
    "mov     eax, dword [rbp-0x224 {var_22c_2}]",
    "mov     rbx, qword [rbp-0x230 {var_238_1}]",
    "lea     r13d, [rax+0x1]",
    "mov     dword [r12], 0x0  {running_trap}",
    "mov     qword [rbp-0x230 {var_238_1}], rbx",
    "mov     r12, qword [rsi+rdx*8]",
    "mov     r13d, r14d",
    "nop     dword [rax+rax]",
    "lea     r15, [rel evalnest]",
    "or      ecx, 0x10",
    "mov     dword [rax+rdx*4], 0x0",
    "mov     dword [rel data_1611e4], ecx",
    "add     dword [r15], 0x1  {evalnest}",
    "call    run_sigchld_trap",
    "sub     dword [r15], 0x1  {evalnest}",
    "and     dword [rel data_1611e4], 0xffffffef",
    "mov     dword [r12], 0x0  {running_trap}",
    "jmp     0x8ef43",
    "mov     edx, dword [rbp-0x218 {var_220_1}]",
    "lea     rax, [rel running_trap]",
    "mov     esi, 0x1",
    "mov     dword [rax], edx  {running_trap}",
    "call    __longjmp_chk",
    "{ Does not return }"
  ]
}
{
  "address": "0xb9a30",
  "rules": [
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using djb2/9bc6b91561f04ebca409510ba6653174",
    "log keystrokes via raw input data/5b32ff98460e406e86dc2ef8d82ba1a5",
    "contain loop",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "empty recycle bin quietly/7589c2299aa24b91b43483b27cb1b2e1",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "PEB access/684066f105bd43c0a5be1ea6f2b60301",
    "hash data using jshash/9255647c2a3f4270934d9ee03325f205",
    "parse credit card information/cfcd601589b04c60a953309d86d78406",
    "hash data using jshash/495bfd597bd14a45826758e92f604bf6",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "write file on Linux",
    "decompress data using LZO/a647e432b8ad43c8a517335d581dcd40",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "allocate or change RW memory/877cb0b79bfa432e8e79b8bd20fa354f",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "lea     r12, [rel data_12156c]",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x108",
    "lea     r13, [rel loptend]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rel data_168d30], 0x0",
    "mov     qword [r13], 0x0",
    "mov     qword [rax], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     dword [rbp-0x100], 0x0",
    "mov     dword [rbp-0xf4], 0x0",
    "mov     dword [rbp-0x108], 0x0",
    "mov     r9, qword [r13]",
    "test    r9, r9",
    "je      0xba44a",
    "cmp     eax, 0x6d",
    "je      0xb9b40",
    "xor     edi, edi",
    "call    show_shell_version",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133fe0]  {\"These shell commands are defined\u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     edi, 0x2",
    "mov     rsi, rax",
    "xor     eax, eax",
    "call    __printf_chk",
    "call    default_columns",
    "mov     r9d, 0x80",
    "mov     edx, eax",
    "shr     edx, 0x1f",
    "add     edx, eax",
    "mov     ecx, edx",
    "sar     ecx, 0x1",
    "cmp     edx, 0x101",
    "ja      0xba49f",
    "mov     rax, qword [r9+0x8]",
    "mov     qword [rbp-0xd8], r9",
    "mov     rdi, qword [rax]",
    "call    glob_pattern_p",
    "mov     r9, qword [rbp-0xd8]",
    "cmp     eax, 0x1",
    "je      0xba340",
    "mov     dword [rbp-0x100], 0x1",
    "jmp     0xb9ab1",
    "jg      0xb9ae8",
    "lea     rax, [rel num_shell_builtins]",
    "mov     edx, dword [rax]",
    "lea     ecx, [rdx+0x1]",
    "mov     eax, ecx",
    "shr     eax, 0x1f",
    "add     eax, ecx",
    "sar     eax, 0x1",
    "mov     dword [rbp-0xdc], eax",
    "test    edx, edx",
    "jle     0xba85a",
    "cmp     eax, 0x7",
    "mov     edi, 0x28",
    "cmovg   edi, ecx",
    "mov     r9d, edi",
    "cmp     qword [r9], 0x1",
    "mov     ecx, 0x1",
    "mov     r8d, 0x5",
    "sbb     rcx, 0xffffffffffffffff",
    "lea     rdx, [rel data_134130]  {\"Shell commands matching keywords\u2026\"}",
    "xor     edi, edi",
    "lea     rsi, [rel data_134158]  {\"Shell commands matching keyword \u2026\"}",
    "lea     r15, [rel data_1217ad[6]]  {\"%s\"}",
    "call    dcngettext",
    "mov     rsi, r15",
    "mov     edi, 0x2",
    "lea     r13, [rel data_11fbd6[2]]  {\"%s%s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "lea     r12, [rel data_122e02]",
    "call    __printf_chk",
    "mov     r14, qword [rbp-0xd8]",
    "lea     rbx, [rel data_121164]",
    "nop     dword [rax]",
    "lea     r14, [rel shell_builtins]",
    "mov     rbx, r9",
    "mov     dword [rbp-0x118], 0x0",
    "mov     r15, r14",
    "nop     word [rax+rax]",
    "mov     rsi, r12",
    "mov     rdi, rbx",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xb9b4f",
    "cmp     eax, 0x73",
    "jne     0xb9b00",
    "cmp     eax, 0xffffff9d",
    "je      0xb9b30",
    "xor     eax, eax",
    "jmp     0xb9b0a",
    "lea     eax, [r9+0x2]",
    "mov     dword [rbp-0xf4], r9d",
    "xor     r12d, r12d",
    "mov     qword [rbp-0xd8], 0x0",
    "shl     rax, 0x2",
    "mov     qword [rbp-0x110], rax",
    "sub     rax, 0x4",
    "shr     rax, 0x2",
    "mov     qword [rbp-0x100], rax",
    "lea     rax, [rel terminating_signal]",
    "mov     qword [rbp-0xf0], rax",
    "lea     eax, [r9-0x2]",
    "mov     dword [rbp-0xe0], eax",
    "cdqe    ",
    "mov     qword [rbp-0x118], rax",
    "nop     word [rax+rax]",
    "mov     rax, qword [r14+0x8]",
    "cmp     qword [r14], 0x0",
    "mov     rdx, rbx",
    "mov     rdi, r13",
    "cmove   rdx, r12",
    "mov     rsi, qword [rax]",
    "xor     eax, eax",
    "call    sub_43ce0",
    "mov     r14, qword [r14]",
    "test    r14, r14",
    "jne     0xba3a0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_12157f]",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, r15",
    "mov     edi, 0x2",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    __printf_chk",
    "mov     r9, qword [rbp-0xd8]",
    "jmp     0xb9b7f",
    "cmp     ecx, 0x1",
    "jne     0xba200",
    "lea     rax, [rel terminating_signal]",
    "xor     r14d, r14d",
    "mov     dword [rbp-0xdc], ecx",
    "xor     ebx, ebx",
    "mov     dword [rbp-0xe8], r14d",
    "mov     r14d, r12d",
    "mov     r12, r15",
    "mov     qword [rbp-0xd8], rax",
    "jmp     0xb9ccd",
    "call    builtin_usage",
    "mov     dword [rbp-0x108], 0x1",
    "jmp     0xb9ab1",
    "call    builtin_help",
    "jmp     0xb9b05",
    "cmp     eax, 0x64",
    "jne     0xb9b00",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xba900",
    "mov     rax, qword [rbp-0xf0]",
    "mov     r10d, dword [rel data_161100]",
    "mov     eax, dword [rax]",
    "test    r10d, r10d",
    "jne     0xba531",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xba880",
    "mov     rbx, qword [rbp-0x120]",
    "mov     r15, r13",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0xb9ba0",
    "test    r12d, r12d",
    "jne     0xba200",
    "mov     rax, qword [rbp-0xd8]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xb9c10",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x108",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     eax, 0x102",
    "mov     dword [rbp-0xf4], 0x1",
    "jmp     0xb9ab1",
    "mov     edi, eax",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0xba542",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0xba861",
    "mov     rax, qword [rbx+0x8]",
    "xor     r12d, r12d",
    "mov     r13, r15",
    "mov     rax, qword [rax]",
    "mov     rdi, rax",
    "mov     qword [rbp-0xf0], rax",
    "call    strlen",
    "mov     qword [rbp-0x120], rbx",
    "mov     ecx, 0x1",
    "mov     dword [rbp-0xe0], eax",
    "mov     eax, dword [rbp-0x118]",
    "test    eax, eax",
    "je      0xba3f5",
    "cmp     ecx, 0x1",
    "jne     0xba200",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xb9d00",
    "mov     rax, qword [rbp-0xd8]",
    "mov     r9d, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    r9d, r9d",
    "jne     0xb9c10",
    "mov     ecx, dword [rbp-0xdc]",
    "mov     edx, dword [rbp-0xf4]",
    "mov     edi, r12d",
    "xor     eax, eax",
    "lea     rsi, [rbp-0xc0]",
    "call    sub_1111d0",
    "jmp     0xba841",
    "lea     r15, [rel shell_builtins]",
    "mov     rcx, qword [rbp-0xd8]",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "mov     rax, qword [r15]",
    "mov     rsi, qword [rax+rcx+0x20]",
    "call    dcgettext",
    "xor     edx, edx",
    "xor     edi, edi",
    "mov     rsi, rax",
    "mov     r14, rax",
    "call    mbstowcs",
    "mov     r13, rax",
    "cmp     rax, 0xffffffffffffffff",
    "je      0xba861",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_134180]  {\"no help topics match `%s'.  Try \u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, qword [rbp-0xf0]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "mov     rcx, rdx",
    "mov     rsi, rdx",
    "call    builtin_error",
    "mov     eax, 0x1",
    "jmp     0xb9b0a",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xba900",
    "mov     ecx, 0x2",
    "jmp     0xb9bce",
    "call    throw_to_top_level",
    "cmp     dword [rbp-0xdc], 0x1",
    "jne     0xb9c2e",
    "cmp     dword [rbp-0xdc], 0x1",
    "je      0xb9d12",
    "call    sub_8e2b0",
    "{ Does not return }",
    "add     qword [rbp-0xd8], 0x30",
    "add     r12d, 0x1",
    "cmp     dword [rbp-0xdc], r12d",
    "jg      0xba520",
    "movsxd  rax, dword [rbp-0xf4]",
    "mov     rdi, qword [rbp-0x110]",
    "cmp     r13, rax",
    "mov     qword [rbp-0x108], rax",
    "cmovae  r13, qword [rbp-0x118]",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xba905",
    "add     rsp, 0x108",
    "xor     edi, edi",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sh_chkwrite",
    "mov     rax, qword [r13]",
    "mov     r15, qword [rax]",
    "test    r15, r15",
    "je      0xb9fb9",
    "movsxd  rdx, dword [rbp-0xe0]",
    "mov     rdi, qword [rbp-0xf0]",
    "mov     rsi, r12",
    "call    strncmp",
    "test    eax, eax",
    "jne     0xb9cb1",
    "mov     rdi, qword [rbp-0xf0]",
    "mov     rsi, r12",
    "call    strcmp",
    "test    eax, eax",
    "je      0xb9c48",
    "mov     rax, qword [rbp-0xf0]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0xba88a",
    "mov     rsi, qword [rbp-0x110]",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rbx+0x4]",
    "mov     rcx, qword [rbp-0x100]",
    "lea     rdx, [r13+0x1]",
    "mov     rsi, r14",
    "mov     rdi, rax",
    "mov     r14, rax",
    "mov     qword [rbp-0xe8], rax",
    "call    __mbstowcs_chk",
    "mov     rdx, r14",
    "lea     rcx, [rax+0x1]",
    "mov     dword [rbx+rcx*4], 0x0",
    "lea     rcx, [rbx+rcx*4-0x4]",
    "cmp     rax, 0x1",
    "jbe     0xba619",
    "mov     rax, qword [r13]",
    "add     rbx, 0x30",
    "add     dword [rbp-0xe8], 0x1",
    "mov     r12, qword [rax+rbx]",
    "test    r12, r12",
    "je      0xb9fb0",
    "mov     rax, qword [r13]",
    "mov     r8d, dword [rbp-0xf4]",
    "add     rax, rbx",
    "test    r8d, r8d",
    "jne     0xb9fe0",
    "lea     rax, [rel extended_glob]",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "mov     rdi, qword [rbp-0xf0]",
    "setne   dl",
    "shl     edx, 0x5",
    "call    xstrmatch",
    "cmp     eax, 0x1",
    "jne     0xb9c48",
    "mov     r14, qword [rbp-0xe8]",
    "mov     edx, dword [rbp-0xe0]",
    "mov     rsi, r13",
    "mov     rdi, r14",
    "call    wcsnwidth",
    "mov     rdi, r14",
    "movsxd  r13, eax",
    "mov     rsi, r13",
    "call    wcswidth",
    "mov     rcx, qword [rbp-0xd8]",
    "lea     r14d, [rax+0x1]",
    "mov     rax, qword [r15]",
    "mov     eax, dword [rax+rcx+0x10]",
    "and     eax, 0x1",
    "cmp     eax, 0x1",
    "sbb     eax, eax",
    "and     eax, 0xa",
    "add     eax, 0x20",
    "mov     dword [rbx], eax",
    "mov     eax, dword [rbp-0xe0]",
    "cmp     r14d, eax",
    "jl      0xba677",
    "nop     dword [rax]",
    "mov     ecx, dword [rbp-0xdc]",
    "mov     r12d, r14d",
    "mov     r14, qword [rax+0x18]",
    "test    r14, r14",
    "je      0xba260",
    "mov     esi, dword [rbp-0x100]",
    "test    esi, esi",
    "jne     0xb9d60",
    "jmp     0xb9cb1",
    "mov     rdx, rbx",
    "lea     rsi, [rel data_121570]",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "lea     rax, [rel num_shell_builtins]",
    "mov     edx, dword [rax]",
    "lea     eax, [r12+r12]",
    "cmp     eax, edx",
    "jge     0xba8b0",
    "mov     rax, qword [rel data_136540]",
    "mov     qword [rbx+r13*4], rax",
    "add     rdx, 0x4",
    "cmp     rdx, rcx",
    "jne     0xba600",
    "mov     dword [rdx], 0x20",
    "xor     edi, edi",
    "jmp     0xb9ffe",
    "mov     rdi, qword [r14]",
    "test    rdi, rdi",
    "je      0xb9ffe",
    "mov     r14, qword [rax+0x18]",
    "test    r14, r14",
    "je      0xba250",
    "mov     rsi, qword [rax+0x20]",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, r12",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_1212fe]  {\"%s: %s\\n\"}",
    "mov     rcx, rax",
    "xor     eax, eax",
    "call    __printf_chk",
    "mov     edx, dword [rbp-0x108]",
    "test    edx, edx",
    "je      0xba090",
    "mov     edi, 0xa",
    "call    putchar",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0xba841",
    "mov     eax, dword [rbp-0xdc]",
    "add     eax, r12d",
    "cmp     edx, eax",
    "jle     0xba8b0",
    "mov     eax, dword [rdx]",
    "sub     eax, 0x9",
    "cmp     eax, 0x1",
    "ja      0xba610",
    "mov     qword [rbp-0xc8], rdi",
    "mov     rdx, r12",
    "lea     rsi, [rel data_121583[3]]  {\"%s - \"}",
    "xor     eax, eax",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "mov     rax, qword [rbp-0xc8]",
    "test    rax, rax",
    "je      0xba435",
    "cmp     byte [rdi], 0x2f",
    "je      0xba2c0",
    "xor     eax, eax",
    "jmp     0xb9d8a",
    "mov     rsi, qword [r14]",
    "test    rsi, rsi",
    "je      0xb9d7e",
    "mov     edi, dword [rbp-0xe8]",
    "call    sub_b2d70",
    "jmp     0xb9ca4",
    "add     dword [rbp-0x118], 0x1",
    "mov     r14d, 0x1",
    "mov     ecx, dword [rbp-0xf4]",
    "cmp     ecx, r14d",
    "jle     0xba707",
    "mov     r12, qword [rel stdout]",
    "mov     rdi, qword [r12]",
    "call    fflush",
    "jmp     0xb9ca4",
    "xor     r14d, r14d",
    "cmp     qword [r14+0x8], 0x0",
    "jne     0xb9ffe",
    "mov     qword [rbp-0xc8], rax",
    "mov     dword [rbp-0x110], 0x0",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "call    dcgettext",
    "cmp     byte [rsi], 0x2f",
    "je      0xba270",
    "lea     rax, [rax+rax*2]",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "shl     rax, 0x4",
    "mov     r14, rax",
    "mov     rax, qword [r15]",
    "mov     rsi, qword [rax+r14+0x20]",
    "call    dcgettext",
    "xor     edx, edx",
    "xor     edi, edi",
    "mov     rsi, rax",
    "mov     qword [rbp-0x120], rax",
    "call    mbstowcs",
    "mov     rsi, qword [rbp-0x120]",
    "cmp     rax, 0xffffffffffffffff",
    "mov     r8, rax",
    "je      0xba8c7",
    "mov     r13, qword [rel stdout]",
    "mov     dword [rbp-0x120], r12d",
    "mov     qword [rbp-0x128], rbx",
    "mov     ebx, r14d",
    "mov     r14d, eax",
    "mov     r12, r13",
    "mov     r13d, ecx",
    "nop     ",
    "movsx   edi, byte [rax+r15]",
    "mov     rsi, qword [r12]",
    "test    dil, dil",
    "jne     0xba040",
    "call    sub_b1300",
    "mov     r15d, eax",
    "test    eax, eax",
    "js      0xb9ca4",
    "mov     r12, qword [rel stdout]",
    "jmp     0xb9e12",
    "mov     r12, qword [rel stdout]",
    "xor     r15d, r15d",
    "jmp     0xb9e08",
    "cmp     qword [r14+0x8], 0x0",
    "jne     0xb9d7e",
    "mov     rax, qword [r15]",
    "mov     rcx, rsi",
    "mov     edi, 0x2",
    "lea     rsi, [rel data_121574]  {\"%c%s\\n\"}",
    "mov     eax, dword [rax+r14+0x10]",
    "and     eax, 0x1",
    "cmp     eax, 0x1",
    "sbb     edx, edx",
    "xor     eax, eax",
    "and     edx, 0xa",
    "add     edx, 0x20",
    "call    __printf_chk",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0xba841",
    "mov     rax, qword [rbp-0x108]",
    "cmp     r8, rax",
    "jb      0xba760",
    "mov     rsi, qword [r12]",
    "mov     edi, 0x20",
    "add     ebx, 0x1",
    "call    putc",
    "cmp     r13d, ebx",
    "jne     0xba6e0",
    "mov     r12d, dword [rbp-0x120]",
    "mov     rbx, qword [rbp-0x128]",
    "mov     eax, r14d",
    "call    putc",
    "mov     rax, qword [rbp-0xc8]",
    "cmp     byte [rax+r15], 0xa",
    "je      0xba06a",
    "mov     rdi, qword [r12]",
    "call    fflush",
    "test    r14d, r14d",
    "je      0xb9ca4",
    "mov     rdx, qword [r14]",
    "lea     rsi, [rbp-0xc8]",
    "mov     edi, eax",
    "call    zmapfd",
    "mov     edi, r15d",
    "call    close",
    "mov     rdx, r12",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "lea     rsi, [rel data_121583[3]]  {\"%s - \"}",
    "call    __printf_chk",
    "mov     rax, qword [rbp-0xc8]",
    "mov     r14d, dword [rbp-0xf4]",
    "test    rax, rax",
    "jne     0xba02e",
    "mov     edi, 0xa",
    "call    putchar",
    "lea     rdi, [rel data_12158c]  {\"SYNOPSIS\"}",
    "call    puts",
    "mov     rax, qword [r13]",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "mov     rsi, qword [rax+rbx+0x20]",
    "call    dcgettext",
    "mov     edx, 0x4",
    "mov     edi, 0x2",
    "lea     rcx, [rel data_1204ae[4]]  {\" \"}",
    "mov     r8, rax",
    "lea     rsi, [rel data_121595]  {\"%*s%s\\n\\n\"}",
    "xor     eax, eax",
    "call    __printf_chk",
    "lea     rdi, [rel data_12159d]  {\"DESCRIPTION\"}",
    "call    puts",
    "mov     ecx, dword [rbp-0x110]",
    "test    ecx, ecx",
    "jne     0xba0a0",
    "movsx   edi, byte [rax+r15]",
    "test    dil, dil",
    "jne     0xb9de8",
    "mov     rdi, rsi",
    "call    sub_b1300",
    "mov     r15d, eax",
    "test    eax, eax",
    "js      0xb9ca4",
    "mov     r13, qword [rbp-0xe8]",
    "mov     rcx, qword [rbp-0x100]",
    "lea     rdx, [r8+0x1]",
    "mov     qword [rbp-0x108], r8",
    "mov     rdi, r13",
    "call    __mbstowcs_chk",
    "mov     r8, qword [rbp-0x108]",
    "mov     rdx, r13",
    "lea     rcx, [rax+0x1]",
    "cmp     rax, 0x1",
    "mov     dword [rbx+rcx*4], 0x0",
    "lea     rcx, [rbx+rcx*4-0x4]",
    "jbe     0xba7c1",
    "movsxd  r8, dword [rbp-0xe0]",
    "add     r15, 0x1",
    "test    rax, rax",
    "je      0xba06a",
    "mov     rdi, qword [rbp-0xc8]",
    "call    free",
    "jmp     0xb9ca4",
    "mov     r12, qword [rel stdout]",
    "xor     r15d, r15d",
    "jmp     0xba05c",
    "mov     r12, qword [rel stdout]",
    "mov     rdi, qword [r12]",
    "call    fflush",
    "jmp     0xba07c",
    "mov     rax, qword [rbp-0xc8]",
    "mov     rsi, qword [r12]",
    "xor     r15d, r15d",
    "lea     r14, [rel data_12051d]",
    "test    rax, rax",
    "jne     0xba0c9",
    "mov     rsi, qword [r14]",
    "test    rsi, rsi",
    "je      0xb9ec7",
    "mov     rsi, qword [r12]",
    "call    putc",
    "mov     rax, qword [rbp-0xc8]",
    "cmp     byte [rax+r15], 0xa",
    "je      0xb9e12",
    "mov     rdx, qword [r14]",
    "lea     rsi, [rbp-0xc8]",
    "mov     edi, eax",
    "call    zmapfd",
    "mov     edi, r15d",
    "call    close",
    "mov     eax, dword [rbp-0x100]",
    "mov     dword [rbp-0x110], eax",
    "jmp     0xb9d9b",
    "mov     r13d, dword [rbp-0xe0]",
    "mov     rdi, qword [rbp-0xe8]",
    "mov     rsi, r8",
    "mov     edx, r13d",
    "call    wcsnwidth",
    "mov     rdi, qword [rbp-0xe8]",
    "movsxd  rdx, eax",
    "mov     rsi, rdx",
    "mov     qword [rbp-0x108], rdx",
    "call    wcswidth",
    "lea     ecx, [rax+0x1]",
    "mov     rax, qword [r15]",
    "mov     eax, dword [rax+r14+0x10]",
    "and     eax, 0x1",
    "cmp     eax, 0x1",
    "sbb     eax, eax",
    "and     eax, 0xa",
    "add     eax, 0x20",
    "mov     dword [rbx], eax",
    "cmp     ecx, r13d",
    "jl      0xba823",
    "nop     dword [rax]",
    "movsx   edi, byte [rax+r15]",
    "mov     rsi, qword [r12]",
    "test    dil, dil",
    "je      0xba118",
    "jmp     0xba11c",
    "mov     rsi, qword [r12]",
    "mov     edi, 0xa",
    "lea     r14, [rel data_12051d]",
    "call    putc",
    "lea     rdi, [rel 0x1215a9]  {\"SEE ALSO\"}",
    "call    puts",
    "lea     rcx, [rel data_1204ae[4]]  {\" \"}",
    "mov     edx, 0x4",
    "xor     eax, eax",
    "lea     rsi, [rel data_1215b2]  {\"%*sbash(1)\\n\\n\"}",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "lea     rdi, [rel data_1215bf]  {\"IMPLEMENTATION\"}",
    "call    puts",
    "mov     rsi, r14",
    "mov     edx, 0x4",
    "xor     eax, eax",
    "lea     rcx, [rel data_1204ae[4]]  {\" \"}",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "xor     edi, edi",
    "call    show_shell_version",
    "mov     rsi, r14",
    "mov     edx, 0x4",
    "xor     eax, eax",
    "lea     rcx, [rel data_1204ae[4]]  {\" \"}",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133518]  {\"Copyright (C) 2022 Free Software\u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdi, rax",
    "call    puts",
    "mov     rsi, r14",
    "mov     edx, 0x4",
    "xor     eax, eax",
    "lea     rcx, [rel data_1204ae[4]]  {\" \"}",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133550]  {\"License GPLv3+: GNU GPL version \u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdi, rax",
    "call    puts",
    "mov     rdi, qword [r12]",
    "call    fflush",
    "jmp     0xb9ca4",
    "add     r14, 0x8",
    "lea     r15, [rel data_1212f7]  {\"%*s%s\\n\"}",
    "nop     dword [rax]",
    "add     r15, 0x1",
    "test    rax, rax",
    "je      0xb9e12",
    "lea     rdi, [rel data_11f2f1[4]]  {\"NAME\"}",
    "call    puts",
    "mov     r8, r12",
    "mov     edx, 0x4",
    "xor     eax, eax",
    "lea     rcx, [rel data_1204ae[4]]  {\" \"}",
    "lea     rsi, [rel data_121583]  {\"%*s%s - \"}",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "mov     rax, qword [rbp-0xc8]",
    "test    rax, rax",
    "je      0xba429",
    "mov     edi, 0x2",
    "mov     rdx, rbx",
    "lea     rsi, [rel data_12157a]  {\"%ls\\n\"}",
    "xor     eax, eax",
    "call    __printf_chk",
    "mov     rdi, rbx",
    "call    free",
    "mov     rdx, qword [rbp-0x108]",
    "mov     qword [rbx+rdx*4-0x4], 0x3e",
    "add     rdx, 0x4",
    "cmp     rdx, rcx",
    "jne     0xba7a8",
    "mov     dword [rdx], 0x20",
    "mov     rsi, qword [r12]",
    "call    putc",
    "mov     rax, qword [rbp-0xc8]",
    "cmp     byte [rax+r15], 0xa",
    "jne     0xba0c0",
    "mov     edi, 0xa",
    "call    putc",
    "lea     rdi, [rel 0x1215a9]  {\"SEE ALSO\"}",
    "call    puts",
    "lea     rcx, [rel data_1204ae[4]]  {\" \"}",
    "mov     edx, 0x4",
    "xor     eax, eax",
    "lea     rsi, [rel data_1215b2]  {\"%*sbash(1)\\n\\n\"}",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "lea     rdi, [rel data_1215bf]  {\"IMPLEMENTATION\"}",
    "call    puts",
    "mov     rsi, r14",
    "mov     edx, 0x4",
    "xor     eax, eax",
    "lea     rcx, [rel data_1204ae[4]]  {\" \"}",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "xor     edi, edi",
    "call    show_shell_version",
    "mov     rsi, r14",
    "mov     edx, 0x4",
    "xor     eax, eax",
    "lea     rcx, [rel data_1204ae[4]]  {\" \"}",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133518]  {\"Copyright (C) 2022 Free Software\u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdi, rax",
    "call    puts",
    "mov     rsi, r14",
    "mov     edx, 0x4",
    "xor     eax, eax",
    "lea     rcx, [rel data_1204ae[4]]  {\" \"}",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_133550]  {\"License GPLv3+: GNU GPL version \u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdi, rax",
    "call    puts",
    "mov     rdi, qword [r12]",
    "call    fflush",
    "jmp     0xba07c",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "add     r14, 0x8",
    "call    dcgettext",
    "mov     rsi, r15",
    "mov     edx, 0x4",
    "lea     rcx, [rel data_1204ae[4]]  {\" \"}",
    "mov     r8, rax",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "mov     rsi, qword [r14-0x8]",
    "test    rsi, rsi",
    "jne     0xb9e90",
    "mov     eax, dword [rdx]",
    "sub     eax, 0x9",
    "cmp     eax, 0x1",
    "ja      0xba7b8",
    "add     r15, 0x1",
    "test    rax, rax",
    "je      0xba118",
    "lea     rcx, [rel data_1204ae[4]]  {\" \"}",
    "mov     rsi, r14",
    "xor     eax, eax",
    "add     r15, 0x1",
    "mov     edx, 0x4",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "mov     rax, qword [rbp-0xc8]",
    "test    rax, rax",
    "jne     0xba0c9",
    "nop     dword [rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
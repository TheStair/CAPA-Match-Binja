{
  "address": "0x10c920",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "parse credit card information/e6ee1c611ffe4340b4536fd8741afd82",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "contain loop",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     r10, rsi",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x58",
    "lea     rcx, [rel history_expansion_char]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "mov     eax, dword [rsi]",
    "movzx   esi, byte [rcx]",
    "movsxd  rcx, eax",
    "cmp     byte [rdi+rcx], sil",
    "jne     0x10cce2",
    "xor     eax, eax",
    "jmp     0x10cbc5",
    "lea     r14d, [rax+0x1]",
    "mov     r12, rdi",
    "movsxd  r11, r14d",
    "lea     r15, [rdi+r11]",
    "movzx   r13d, byte [r15]",
    "cmp     sil, r13b",
    "je      0x10cea0",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x10cf83",
    "lea     rsi, [rel history_base]",
    "lea     rcx, [rel history_length]",
    "add     eax, 0x2",
    "mov     edi, dword [rcx]",
    "mov     edx, dword [rsi]",
    "mov     dword [r10], eax",
    "lea     edx, [rdi+rdx-0x1]",
    "mov     eax, edx",
    "sub     eax, dword [rsi]",
    "cmp     eax, dword [rcx]",
    "jge     0x10cce2",
    "mov     esi, 0x1",
    "cmp     r13b, 0x2d",
    "je      0x10cbf0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x58",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    eax, eax",
    "jns     0x10cba3",
    "movzx   esi, byte [rdi+r11+0x1]",
    "sub     esi, 0x30",
    "cmp     sil, 0x9",
    "ja      0x10cd10",
    "lea     eax, [r13-0x30]",
    "cmp     al, 0x9",
    "jbe     0x10cb40",
    "mov     rdx, qword [rel data_1688b8]",
    "test    rdx, rdx",
    "je      0x10cce2",
    "xor     eax, eax",
    "jmp     0x10cbc5",
    "mov     qword [rbp-0x78], r15",
    "xor     ebx, ebx",
    "mov     dword [rbp-0x64], r14d",
    "jmp     0x10c9b1",
    "lea     r14d, [rax+0x2]",
    "mov     esi, 0xffffffff",
    "movsxd  r9, r14d",
    "lea     r15, [rdi+r9]",
    "movzx   r13d, byte [r15]",
    "lea     eax, [r13-0x30]",
    "cmp     al, 0x9",
    "ja      0x10c994",
    "lea     r8d, [r14+0x1]",
    "xor     eax, eax",
    "movsxd  r8, r8d",
    "nop     dword [rax]",
    "xor     ebx, ebx",
    "cmp     r13b, 0x3f",
    "je      0x10ccf0",
    "cdqe    ",
    "mov     rax, qword [rdx+rax*8]",
    "test    rax, rax",
    "je      0x10cce2",
    "lea     rax, [rbp-0x40]",
    "mov     qword [rbp-0x70], r10",
    "mov     qword [rbp-0x58], rax",
    "mov     dword [rbp-0x60], edx",
    "jmp     0x10ca55",
    "jmp     0x10cb40",
    "sub     r13d, 0x30",
    "lea     eax, [rax+rax*4]",
    "mov     r9, r8",
    "movsx   r13d, r13b",
    "lea     eax, [r13+rax*2]",
    "movzx   r13d, byte [r12+r8]",
    "add     r8, 0x1",
    "lea     edx, [r13-0x30]",
    "cmp     dl, 0x9",
    "jbe     0x10cb50",
    "mov     dword [r10], r9d",
    "cmp     esi, 0xffffffff",
    "je      0x10cd20",
    "add     r14d, 0x1",
    "mov     ebx, 0x1",
    "movsxd  r9, r14d",
    "lea     r15, [r12+r9]",
    "movzx   r13d, byte [r15]",
    "jmp     0x10c9a0",
    "test    r13b, r13b",
    "je      0x10cf15",
    "mov     rax, qword [rax]",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x10ca71",
    "lea     rdx, [rel history_length]",
    "mov     ecx, dword [rdx]",
    "lea     rdx, [rel history_base]",
    "mov     edx, dword [rdx]",
    "lea     esi, [rcx+rdx]",
    "sub     esi, eax",
    "mov     eax, esi",
    "jmp     0x10cb93",
    "lea     rdx, [rel history_base]",
    "lea     rcx, [rel history_length]",
    "mov     edx, dword [rdx]",
    "mov     ecx, dword [rcx]",
    "mov     edi, 0x1",
    "mov     qword [rbp-0x58], r10",
    "call    malloc",
    "mov     r10, qword [rbp-0x58]",
    "test    rax, rax",
    "mov     r13, rax",
    "jne     0x10cac6",
    "mov     qword [rbp-0x78], r15",
    "mov     dword [rbp-0x64], r14d",
    "test    ebx, ebx",
    "je      0x10c9c8",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x10cc30",
    "sub     eax, edx",
    "js      0x10cce2",
    "cmp     eax, ecx",
    "jge     0x10cce2",
    "mov     rax, r13",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "cmp     r13b, 0x3a",
    "ja      0x10ca00",
    "movzx   eax, byte [r15]",
    "cmp     al, 0xa",
    "je      0x10ca88",
    "mov     rax, qword [rbp-0x58]",
    "mov     esi, r14d",
    "mov     rdi, r12",
    "mov     rdx, rax",
    "mov     qword [rax], 0x0",
    "call    _rl_adjust_point",
    "mov     rsi, qword [rbp-0x58]",
    "mov     rdi, r15",
    "call    _rl_get_char_len",
    "cmp     eax, 0x1",
    "jle     0x10ca71",
    "mov     dword [r10], r14d",
    "lea     r14, [rel history_search_prefix]",
    "cmp     byte [r15], 0x3f",
    "movzx   eax, byte [r13]",
    "je      0x10cd40",
    "movsx   esi, r13b",
    "lea     rdi, [rel data_122eec]  {\"^$*%-\"}",
    "call    strchr",
    "test    rax, rax",
    "jne     0x10ca88",
    "mov     rax, 0x400000100000200",
    "bt      rax, r13",
    "jb      0x10ca88",
    "mov     eax, dword [rbp-0x64]",
    "mov     edx, r14d",
    "mov     r10, qword [rbp-0x70]",
    "sub     edx, eax",
    "mov     qword [rbp-0x60], r10",
    "lea     r12d, [rdx+0x1]",
    "mov     dword [rbp-0x58], edx",
    "movsxd  r12, r12d",
    "mov     rdi, r12",
    "call    malloc",
    "movsxd  rdx, dword [rbp-0x58]",
    "mov     r10, qword [rbp-0x60]",
    "test    rax, rax",
    "mov     r13, rax",
    "je      0x10cf88",
    "cmp     al, 0x3f",
    "jne     0x10ca42",
    "lea     r14d, [rax+r14-0x1]",
    "jmp     0x10ca42",
    "mov     esi, 0xffffffff",
    "mov     rdi, r13",
    "call    r14",
    "test    eax, eax",
    "jns     0x10cca0",
    "lea     r8d, [r14+0x1]",
    "mov     dword [r10], r8d",
    "test    al, al",
    "je      0x10caea",
    "mov     dword [r10], r14d",
    "test    al, al",
    "jne     0x10cb30",
    "lea     rax, [rel history_search_delimiter_chars]",
    "mov     rdi, qword [rax]",
    "test    rdi, rdi",
    "je      0x10ca32",
    "mov     eax, dword [rbp-0x64]",
    "cmp     r14d, eax",
    "jle     0x10cc70",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "test    edx, edx",
    "jne     0x10cd58",
    "add     r14d, 0x1",
    "movsxd  r15, r14d",
    "add     r15, r12",
    "movzx   r13d, byte [r15]",
    "test    r13b, r13b",
    "je      0x10ca88",
    "nop     dword [rax]",
    "mov     edx, dword [r12]",
    "je      0x10cd88",
    "lea     rax, [rel history_length]",
    "mov     rdi, r13",
    "mov     eax, dword [rax]",
    "mov     dword [r12], eax",
    "call    free",
    "mov     r14, qword [rel data_16b5f0]",
    "test    r14, r14",
    "je      0x10cef4",
    "jmp     0x10cb30",
    "lea     r14, [rel history_search]",
    "jmp     0x10cc8a",
    "movsx   edx, byte [r15]",
    "mov     ecx, dword [rbp-0x60]",
    "cmp     edx, ecx",
    "je      0x10ca88",
    "movsx   esi, r13b",
    "call    strchr",
    "test    rax, rax",
    "jne     0x10ca88",
    "cmp     r13b, 0x2d",
    "je      0x10ca15",
    "cmp     r13b, 0x2d",
    "je      0x10ca88",
    "mov     rsi, qword [rbp-0x78]",
    "mov     rcx, r12",
    "mov     rdi, r13",
    "mov     qword [rbp-0x60], r10",
    "mov     qword [rbp-0x58], rdx",
    "call    __strncpy_chk",
    "mov     rdx, qword [rbp-0x58]",
    "mov     r10, qword [rbp-0x60]",
    "lea     rax, [r13+rdx]",
    "jmp     0x10cac9",
    "mov     esi, eax",
    "movsxd  rax, edx",
    "lea     rdx, [rel history_length]",
    "mov     edx, dword [rdx]",
    "cmp     edx, eax",
    "je      0x10cee1",
    "test    r15b, r15b",
    "jne     0x10cd88",
    "lea     rax, [rel history_length]",
    "mov     rdi, r13",
    "mov     edx, dword [rax]",
    "lea     rax, [rel history_offset]",
    "mov     dword [rax], edx",
    "call    free",
    "xor     eax, eax",
    "jmp     0x10cbc5",
    "mov     rdi, r13",
    "call    free",
    "mov     rdi, r14",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x10cfa6",
    "mov     r15d, ebx",
    "lea     r12, [rel history_offset]",
    "and     r15d, 0x1",
    "jmp     0x10ccbe",
    "cmp     dl, 0xa",
    "je      0x10ca88",
    "jmp     0x10ca00",
    "nop     dword [rax+rax]",
    "mov     byte [rax], 0x0",
    "test    ebx, ebx",
    "je      0x10cc80",
    "mov     rdi, r13",
    "mov     dword [r12], edx",
    "call    free",
    "xor     eax, eax",
    "jmp     0x10cbc5",
    "mov     rcx, qword [rel data_1688b8]",
    "test    rcx, rcx",
    "je      0x10cee1",
    "test    edx, edx",
    "je      0x10cccd",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, r12",
    "mov     rsi, r14",
    "mov     rdi, r13",
    "call    __strcpy_chk",
    "mov     r14, qword [rcx+rax*8]",
    "test    r14, r14",
    "je      0x10cee1",
    "sub     edx, 0x1",
    "mov     dword [r12], edx",
    "mov     dword [r12], edx",
    "test    ebx, ebx",
    "je      0x10ced7",
    "mov     rdi, r13",
    "call    free",
    "jmp     0x10ce90",
    "mov     rdi, qword [rel data_16b5f0]",
    "test    rdi, rdi",
    "je      0x10cdde",
    "mov     rax, qword [r14]",
    "jmp     0x10cbc5",
    "mov     rdi, qword [rel data_16b5e8]",
    "mov     qword [rel data_16b5f0], r13",
    "test    rdi, rdi",
    "je      0x10cdfc",
    "mov     dword [rbp-0x58], esi",
    "call    free",
    "mov     esi, dword [rbp-0x58]",
    "mov     rdi, qword [r14]",
    "lea     rdx, [rbp-0x44]",
    "call    sub_10c670",
    "mov     r13, rax",
    "mov     eax, dword [rbp-0x44]",
    "cmp     eax, 0xffffffff",
    "je      0x10cf50",
    "mov     dword [rbp-0x58], esi",
    "call    free",
    "mov     esi, dword [rbp-0x58]",
    "test    r13, r13",
    "je      0x10cf7b",
    "test    r13, r13",
    "je      0x10cf7b",
    "xor     r12d, r12d",
    "jmp     0x10ce89",
    "mov     rdi, qword [r13]",
    "lea     rbx, [r13+0x8]",
    "test    rdi, rdi",
    "je      0x10cf73",
    "movsxd  rcx, eax",
    "mov     rbx, r13",
    "lea     rdx, [rcx*8]",
    "mov     r12, qword [r13+rcx*8]",
    "lea     r15, [r13+rdx]",
    "test    eax, eax",
    "jle     0x10ce5a",
    "mov     qword [rel data_16b5e8], r12",
    "mov     rdi, r13",
    "call    free",
    "call    free",
    "mov     rdi, qword [rbx]",
    "add     rbx, 0x8",
    "test    rdi, rdi",
    "jne     0x10cf62",
    "mov     rdi, qword [r13+rdx+0x8]",
    "lea     rbx, [r13+rdx+0x10]",
    "test    rdi, rdi",
    "je      0x10ce81",
    "mov     qword [rbp-0x58], rdx",
    "mov     rdi, r13",
    "call    free",
    "nop     dword [rax]",
    "add     rbx, 0x8",
    "cmp     r15, rbx",
    "jne     0x10ce40",
    "call    free",
    "call    free",
    "mov     rdi, qword [rbx]",
    "add     rbx, 0x8",
    "test    rdi, rdi",
    "jne     0x10ce70",
    "mov     rdi, qword [rbx]",
    "test    rdi, rdi",
    "je      0x10ce4d",
    "mov     rdx, qword [rbp-0x58]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
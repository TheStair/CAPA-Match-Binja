{
  "address": "0xab7a0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "push    rbp",
    "xor     eax, eax",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     qword [rbp-0x50], rdi",
    "call    rsi",
    "test    rax, rax",
    "je      0xab8b0",
    "mov     rax, qword [rbp-0x50]",
    "mov     qword [rax+0x10], 0x0",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r13, rax",
    "xor     ebx, ebx",
    "mov     eax, 0x8",
    "cmp     qword [r13], 0x0",
    "je      0xab8d0",
    "mov     edi, 0x1",
    "xor     r12d, r12d",
    "call    strlist_create",
    "mov     qword [rbp-0x40], rax",
    "jmp     0xab87a",
    "nop     word [rax+rax]",
    "mov     rcx, qword [rbp-0x40]",
    "mov     rdi, r13",
    "mov     rax, qword [rcx]",
    "mov     dword [rcx+0xc], ebx",
    "mov     qword [rax+r12], 0x0",
    "mov     rax, qword [rbp-0x50]",
    "mov     qword [rax+0x10], rcx",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     free",
    "mov     r12, rax",
    "mov     r14d, ebx",
    "lea     rax, [rax+0x8]",
    "add     ebx, 0x1",
    "cmp     qword [r13+r12], 0x0",
    "jne     0xab7e0",
    "lea     edi, [r14+0x2]",
    "add     r14d, 0x1",
    "xor     r15d, r15d",
    "call    strlist_create",
    "movsxd  r14, r14d",
    "mov     qword [rbp-0x40], rax",
    "lea     rax, [r14*8]",
    "mov     qword [rbp-0x48], rax",
    "nop     dword [rax+rax]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "call    dcgettext",
    "mov     rdx, r14",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x40]",
    "mov     rcx, r14",
    "mov     rdx, r14",
    "mov     r9, qword [rax]",
    "add     r9, r15",
    "add     r15, 0x8",
    "mov     qword [rbp-0x38], r9",
    "call    __memcpy_chk",
    "mov     r9, qword [rbp-0x38]",
    "mov     qword [r9], rax",
    "cmp     qword [rbp-0x48], r15",
    "jne     0xab820",
    "mov     rax, qword [r13+r15]",
    "mov     rsi, qword [rax]",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x38], rsi",
    "call    strlen",
    "lea     r14, [rax+0x1]",
    "mov     rdi, r14",
    "call    malloc",
    "mov     rsi, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0xab8e3"
  ]
}
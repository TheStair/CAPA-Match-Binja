{
  "address": "0x91440",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "lea     r14, [rel aliases]",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     r13, qword [r14]",
    "test    r13, r13",
    "je      0x9153f",
    "xor     ebx, ebx",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     eax, dword [r13+0xc]",
    "test    eax, eax",
    "je      0x9153f",
    "lea     r12d, [rax+0x1]",
    "movsxd  r12, r12d",
    "shl     r12, 0x3",
    "mov     rdi, r12",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x9151f",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rsi, r12",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     edi, dword [r13+0x8]",
    "test    edi, edi",
    "jle     0x914dd",
    "xor     esi, esi",
    "cmp     qword [rbx], 0x0",
    "mov     eax, 0x1",
    "je      0x914ff",
    "mov     r8, qword [r13]",
    "xor     esi, esi",
    "xor     ecx, ecx",
    "nop     dword [rax]",
    "mov     rdi, rbx",
    "lea     rcx, [rel sub_872c0]",
    "mov     edx, 0x8",
    "call    qsort",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "nop     word [rax+rax]",
    "add     rsi, 0x1",
    "cmp     edi, esi",
    "jg      0x914a0",
    "add     ecx, 0x1",
    "movsxd  rax, ecx",
    "nop     ",
    "mov     rsi, rax",
    "add     rax, 0x1",
    "cmp     qword [rbx+rax*8-0x8], 0x0",
    "jne     0x914f0",
    "mov     rdx, qword [r8+rsi*8]",
    "test    rdx, rdx",
    "je      0x914d0",
    "test    rbx, rbx",
    "je      0x9153f",
    "mov     rcx, qword [rdx+0x10]",
    "mov     rdx, qword [rdx]",
    "mov     qword [rbx+rax*8], 0x0",
    "mov     qword [rbx+rax*8-0x8], rcx",
    "mov     rcx, rax",
    "add     rax, 0x1",
    "test    rdx, rdx",
    "jne     0x914b0"
  ]
}
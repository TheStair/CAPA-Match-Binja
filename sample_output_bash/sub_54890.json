{
  "address": "0x54890",
  "rules": [
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     rbx, qword [rdi+0x8]",
    "mov     qword [rbp-0x38], rdi",
    "test    rbx, rbx",
    "je      0x548cf",
    "lea     rax, [rel aliases]",
    "mov     r12, qword [rax]",
    "test    r12, r12",
    "je      0x548ea",
    "mov     esi, dword [rbx+0xc]",
    "test    esi, esi",
    "je      0x548bf",
    "mov     rax, qword [rbp-0x38]",
    "mov     qword [rax+0x8], r12",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     ecx, dword [r12+0xc]",
    "test    ecx, ecx",
    "jne     0x54908",
    "mov     rdi, qword [rbx]",
    "call    free",
    "mov     rdi, rbx",
    "call    free",
    "xor     esi, esi",
    "mov     rdi, rbx",
    "call    sub_87820",
    "mov     edi, dword [r12+0x8]",
    "call    hash_create",
    "mov     r12, rax",
    "lea     rax, [rel aliases]",
    "mov     rax, qword [rax]",
    "mov     edx, dword [rax+0x8]",
    "test    edx, edx",
    "jle     0x548ea",
    "xor     r12d, r12d",
    "xor     r13d, r13d",
    "nop     dword [rax]",
    "lea     rax, [rel aliases]",
    "add     r13, 0x1",
    "mov     rax, qword [rax]",
    "cmp     dword [rax+0x8], r13d",
    "jg      0x54930",
    "nop     dword [rax]",
    "mov     rax, qword [rax]",
    "mov     r15, qword [rax+r13*8]",
    "test    r15, r15",
    "je      0x54989",
    "jmp     0x548ea",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "call    dcgettext",
    "mov     rdx, rbx",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "mov     rcx, rbx",
    "mov     rdx, rbx",
    "mov     rsi, r14",
    "call    __memcpy_chk",
    "mov     rdi, r12",
    "mov     rsi, rax",
    "mov     rax, qword [r15+0x10]",
    "mov     rdx, qword [rax+0x8]",
    "call    assoc_insert",
    "mov     r15, qword [r15]",
    "test    r15, r15",
    "jne     0x54940",
    "mov     r14, qword [r15+0x8]",
    "mov     rdi, r14",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x549a2"
  ]
}
{
  "address": "0xb0590",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "xor     r13d, r13d",
    "push    r12",
    "lea     r12, [rel data_121245]",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "lea     rax, [rel no_symbolic_links]",
    "mov     qword [rel data_168d30], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     eax, dword [rax]",
    "mov     dword [rel data_168da8], eax",
    "lea     rax, [rel loptend]",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rax], 0x0",
    "lea     r12, [rel the_current_working_directory]",
    "mov     rbx, qword [r12]",
    "test    rbx, rbx",
    "je      0xb0727",
    "cmp     eax, 0x4c",
    "je      0xb0658",
    "lea     rdi, [rel data_11f3a9]",
    "call    get_working_directory",
    "mov     rbx, rax",
    "jmp     0xb06dc",
    "mov     esi, dword [rel data_168da8]",
    "test    esi, esi",
    "jne     0xb06cf",
    "xor     eax, eax",
    "jmp     0xb064b",
    "cmp     eax, 0x50",
    "je      0xb0640",
    "mov     r15, qword [r12]",
    "test    r15, r15",
    "je      0xb07cf",
    "mov     rdi, rbx",
    "xor     esi, esi",
    "call    sh_physpath",
    "mov     rbx, rax",
    "lea     r14, [rel posixly_correct]",
    "mov     edx, dword [r14]",
    "test    edx, edx",
    "jne     0xb0738",
    "mov     dword [rel data_168da8], eax",
    "jmp     0xb05f2",
    "mov     eax, 0x1",
    "mov     r13d, 0x1",
    "cmp     eax, 0xffffff9d",
    "jne     0xb0630",
    "lea     r14, [rel posixly_correct]",
    "mov     r15, rbx",
    "xor     ebx, ebx",
    "cmp     dword [r14], 0x0",
    "je      0xb0752",
    "test    rbx, rbx",
    "jne     0xb0760",
    "mov     r15, rbx",
    "mov     rdi, rbx",
    "call    puts",
    "mov     eax, dword [r14]",
    "test    eax, eax",
    "je      0xb06a8",
    "mov     rsi, r12",
    "mov     rdi, rbx",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xb0660",
    "call    builtin_usage",
    "jmp     0xb0616",
    "call    builtin_help",
    "mov     rbx, r15",
    "jmp     0xb070d",
    "jmp     0xb073b",
    "lea     r14, [rel posixly_correct]",
    "mov     ecx, dword [r14]",
    "test    ecx, ecx",
    "je      0xb0690",
    "mov     rdi, r15",
    "call    free",
    "test    r15, r15",
    "jne     0xb0790",
    "xor     r13d, r13d",
    "test    r13d, r13d",
    "jne     0xb07bf",
    "mov     eax, 0x102",
    "mov     eax, 0x1",
    "test    rbx, rbx",
    "je      0xb061b",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "lea     rdi, [rel data_120268[2]]  {\".\"}",
    "mov     rsi, rbx",
    "call    same_file",
    "test    eax, eax",
    "je      0xb07b8",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "lea     rdi, [rel data_120268[2]]  {\".\"}",
    "mov     rsi, r15",
    "call    same_file",
    "test    eax, eax",
    "jne     0xb0690",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     r14, [rel posixly_correct]",
    "jmp     0xb0690",
    "cmp     qword [r12], r15",
    "je      0xb06ee",
    "jmp     0xb07a2",
    "add     rsp, 0x8",
    "mov     edi, r13d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sh_chkwrite",
    "mov     rdi, rbx",
    "call    free",
    "mov     rdi, rbx",
    "call    sub_ad7e0",
    "mov     r13d, eax",
    "jmp     0xb06ab",
    "mov     r15, rbx",
    "mov     rdi, r15",
    "call    free",
    "mov     r15, qword [r12]",
    "test    r15, r15",
    "je      0xb06f6",
    "cmp     qword [r12], rbx",
    "je      0xb06b9",
    "lea     rdi, [rel data_11f3a9]",
    "mov     qword [r12], 0x0",
    "call    get_working_directory",
    "mov     rbx, rax",
    "jmp     0xb06ee"
  ]
}
{
  "address": "0xb5420",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "lea     r13, [rbp-0xb0]",
    "mov     r12, rsi",
    "mov     esi, edx",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0xd8",
    "mov     qword [rbp-0xe8], rcx",
    "mov     qword [rbp-0xd8], r8",
    "mov     dword [rbp-0xdc], edx",
    "lea     rdx, [rel data_12138d]  {\"parse_string top\"}",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "call    sub_b24c0",
    "mov     rdi, r13",
    "call    sigemptyset",
    "mov     rdx, r13",
    "xor     esi, esi",
    "xor     edi, edi",
    "call    sigprocmask",
    "xor     edi, edi",
    "call    push_stream",
    "lea     r13, [rel pushed_string_list]",
    "mov     rax, qword [r13]",
    "test    rax, rax",
    "je      0xb54ba",
    "lea     rax, [rel global_command]",
    "mov     edx, 0x3",
    "mov     r8, rbx",
    "mov     rcx, r12",
    "lea     rsi, [rel sub_34500]",
    "lea     rdi, [rel sub_344d0]",
    "mov     dword [rbp-0xbc], 0x0",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0xc8], rax",
    "call    init_yy_io",
    "lea     rax, [rel bash_input]",
    "mov     rax, qword [rax+0x10]",
    "mov     qword [rbp-0xd0], rax",
    "mov     rdx, rax",
    "cmp     qword [rax+0x18], 0x0",
    "je      0xb54ba",
    "lea     rdi, [rel top_level]",
    "xor     esi, esi",
    "mov     qword [rbp-0xb8], 0x0",
    "call    __sigsetjmp",
    "endbr64 ",
    "mov     ebx, eax",
    "test    eax, eax",
    "je      0xb5650",
    "xor     ebx, ebx",
    "xor     edx, edx",
    "xor     esi, esi",
    "xor     edi, edi",
    "call    sub_34fb0",
    "mov     rax, qword [r13]",
    "mov     dword [rax+0x3c], 0x4",
    "call    parse_command",
    "mov     r12d, eax",
    "test    eax, eax",
    "jne     0xb56f8",
    "mov     dword [rbp-0xbc], 0x0",
    "cmp     eax, 0x4",
    "jle     0xb5620",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0xb5556",
    "mov     qword [rax], rdx",
    "test    byte [rbp-0xdc], 0x40",
    "jne     0xb5730",
    "lea     rax, [rel global_command]",
    "mov     rdi, qword [rax]",
    "mov     rax, qword [rbp-0xe8]",
    "test    rax, rax",
    "je      0xb5745",
    "test    eax, eax",
    "jg      0xb55e3",
    "cmp     eax, 0x6",
    "jne     0xb5624",
    "mov     eax, dword [rbp-0xbc]",
    "test    eax, eax",
    "je      0xb5618",
    "lea     rdi, [rel data_12138d]  {\"parse_string top\"}",
    "call    sub_113ed0",
    "call    reset_parser",
    "lea     rax, [rel bash_input]",
    "mov     rdx, qword [rax+0x10]",
    "jmp     0xb5513",
    "lea     rax, [rel bash_input]",
    "mov     ebx, 0x2",
    "mov     dword [rbp-0xbc], 0x1",
    "mov     rdx, qword [rax+0x10]",
    "jmp     0xb5513",
    "call    dispose_command",
    "jmp     0xb567d",
    "mov     qword [rax], rdi",
    "mov     rax, qword [rbp-0xb8]",
    "test    rax, rax",
    "je      0xb55fb",
    "lea     rsi, [rbp-0xb0]",
    "xor     edx, edx",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "xor     ecx, ecx",
    "mov     edx, ebx",
    "mov     esi, 0x3",
    "lea     rdi, [rel data_12139e]  {\"parse_string\"}",
    "call    command_error",
    "{ Does not return }",
    "mov     eax, r12d",
    "jmp     0xb5583",
    "lea     rax, [rel parse_and_execute_level]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xb56e8",
    "lea     rax, [rel global_command]",
    "mov     rcx, qword [rbp-0xc8]",
    "mov     r12, rdx",
    "mov     qword [rax], rcx",
    "mov     rax, qword [rbp-0xd0]",
    "sub     r12, rax",
    "mov     rax, qword [rbp-0xd8]",
    "test    rax, rax",
    "je      0xb5540",
    "lea     rax, [rel global_command]",
    "lea     rdx, [rel shell_eof_token]",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel current_token]",
    "mov     ecx, dword [rdx]",
    "lea     rdx, [rel bash_input]",
    "mov     eax, dword [rax]",
    "mov     rdx, qword [rdx+0x10]",
    "cmp     eax, 0x131",
    "je      0xb5720",
    "cmp     ecx, 0x131",
    "je      0xb56b7",
    "cmp     eax, ecx",
    "jne     0xb5508",
    "lea     rax, [rel bash_input]",
    "mov     dword [rbp-0xbc], 0x1",
    "mov     rdx, qword [rax+0x10]",
    "jmp     0xb5513",
    "mov     rdi, qword [rbp-0xb8]",
    "call    dispose_command",
    "mov     rdx, qword [rbp-0x28]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xb574f",
    "call    top_level_cleanup",
    "jmp     0xb5575",
    "cmp     ebx, 0x2",
    "jne     0xb5754",
    "mov     rax, qword [rel data_160d90]",
    "sub     eax, dword [rel data_160d88]",
    "cmp     byte [rdx-0x1], 0xa",
    "jne     0xb56cd",
    "mov     ebx, r12d",
    "jmp     0xb5513",
    "cmp     byte [rdx], 0x0",
    "jne     0xb55a8",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xd8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "mov     edi, ebx",
    "call    jump_to_top_level",
    "{ Does not return }",
    "mov     eax, 0xfffffffe",
    "cdqe    ",
    "mov     ebx, r12d",
    "sub     rdx, rax",
    "lea     rax, [rel bash_input]",
    "mov     qword [rax+0x10], rdx",
    "jmp     0xb5513",
    "add     eax, 0x1"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
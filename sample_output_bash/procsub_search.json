{
  "address": "0x5cfd0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "mov     r12d, edi",
    "lea     r13, [rbp-0x130]",
    "push    rbx",
    "lea     rbx, [rbp-0xb0]",
    "mov     rdi, rbx",
    "sub     rsp, 0x118",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r13",
    "call    sigemptyset",
    "mov     rsi, rbx",
    "mov     rdx, r13",
    "xor     edi, edi",
    "call    sigprocmask",
    "lea     rax, [rel procsubs]",
    "mov     rbx, qword [rax]",
    "test    rbx, rbx",
    "jne     0x5d048",
    "cmp     dword [rbx+0x8], r12d",
    "jne     0x5d040",
    "jmp     0x5d04e",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "je      0x5d04e",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x5d07d",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x118",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    "
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
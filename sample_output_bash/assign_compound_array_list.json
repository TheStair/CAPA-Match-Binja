{
  "address": "0x97570",
  "rules": [
    "parse credit card information/3375d6c43054451cb36d19c4d5da62ae",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "search for credit card data/6acc81a026f04eebb934cf95ebf5d6c3",
    "contain loop",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     ecx, edx",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rdi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rsi",
    "mov     esi, ecx",
    "and     esi, 0x1",
    "sub     rsp, 0x48",
    "mov     eax, dword [rdi+0x28]",
    "mov     edx, eax",
    "and     edx, 0x40",
    "test    al, 0x4",
    "jne     0x975d0",
    "mov     r11, qword [rdi+0x8]",
    "test    edx, edx",
    "jne     0x97740",
    "test    edx, edx",
    "je      0x97760",
    "test    esi, esi",
    "jne     0x97b60",
    "test    esi, esi",
    "jne     0x97be8",
    "test    esi, esi",
    "jne     0x97810",
    "mov     r15, qword [rdi+0x8]",
    "test    esi, esi",
    "je      0x97bb0",
    "test    r11, r11",
    "je      0x97d94",
    "test    r11, r11",
    "je      0x97d94",
    "test    r11, r11",
    "je      0x97768",
    "mov     qword [rbp-0x60], 0x0",
    "test    r11, r11",
    "je      0x97768",
    "mov     qword [rbp-0x60], 0x0",
    "xor     r11d, r11d",
    "xor     r15d, r15d",
    "mov     qword [rbp-0x40], 0x0",
    "test    rbx, rbx",
    "je      0x9779d",
    "test    r15, r15",
    "je      0x97db1",
    "mov     qword [rbp-0x60], r15",
    "mov     edx, 0x40",
    "xor     r11d, r11d",
    "mov     qword [rbp-0x40], 0x0",
    "jmp     0x97620",
    "mov     qword [rbp-0x60], 0x0",
    "xor     r15d, r15d",
    "mov     edx, 0x40",
    "mov     qword [rbp-0x40], 0x0",
    "jmp     0x97620",
    "mov     qword [rbp-0x60], r11",
    "mov     qword [rbp-0x60], r11",
    "jmp     0x975f5",
    "mov     qword [rbp-0x60], 0x0",
    "jmp     0x97b6d",
    "mov     rdi, r11",
    "mov     dword [rbp-0x48], ecx",
    "mov     qword [rbp-0x38], r11",
    "call    array_flush",
    "mov     eax, dword [r14+0x28]",
    "mov     r15, qword [rbp-0x60]",
    "mov     qword [rbp-0x40], 0x0",
    "mov     r11, qword [rbp-0x38]",
    "mov     ecx, dword [rbp-0x48]",
    "mov     edx, eax",
    "and     edx, 0x40",
    "test    al, 0x40",
    "je      0x9779d",
    "mov     rax, qword [rbx+0x8]",
    "mov     r12, qword [rax]",
    "mov     edx, dword [rax+0x8]",
    "add     rsp, 0x48",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     qword [rbp-0x60], 0x0",
    "xor     r11d, r11d",
    "xor     r15d, r15d",
    "mov     qword [rbp-0x40], 0x0",
    "jmp     0x9782b",
    "xor     edx, edx",
    "xor     esi, esi",
    "xor     r11d, r11d",
    "mov     qword [rbp-0x60], rdx",
    "mov     edx, 0x40",
    "mov     qword [rbp-0x40], rsi",
    "jmp     0x97620",
    "mov     edi, dword [r15+0x8]",
    "mov     dword [rbp-0x38], ecx",
    "call    hash_create",
    "mov     qword [rbp-0x40], 0x0",
    "mov     ecx, dword [rbp-0x38]",
    "xor     r11d, r11d",
    "mov     qword [rbp-0x60], rax",
    "mov     eax, dword [r14+0x28]",
    "mov     edx, eax",
    "and     edx, 0x40",
    "jmp     0x97620",
    "test    rbx, rbx",
    "je      0x977b8",
    "mov     rsi, qword [r11]",
    "mov     r15, qword [rbp-0x60]",
    "add     rsi, 0x1",
    "mov     qword [rbp-0x40], rsi",
    "jmp     0x97620",
    "test    edx, edx",
    "je      0x97826",
    "mov     rax, qword [rbp-0x60]",
    "test    rax, rax",
    "je      0x9779d",
    "and     edx, 0x4",
    "je      0x978be",
    "test    rbx, rbx",
    "je      0x977b8",
    "mov     rax, qword [rbx+0x8]",
    "mov     edx, dword [rax+0x8]",
    "mov     r12, qword [rax]",
    "test    dl, 0x4",
    "jne     0x97835",
    "cmp     rax, r15",
    "je      0x9779d",
    "mov     eax, dword [r14+0x28]",
    "test    al, 0x40",
    "jne     0x97920",
    "cmp     byte [r12], 0x5b",
    "je      0x97978",
    "mov     eax, ecx",
    "mov     qword [rbp-0x68], r15",
    "mov     r15, rbx",
    "and     eax, 0xfffffffe",
    "mov     qword [rbp-0x48], 0x0",
    "mov     dword [rbp-0x4c], eax",
    "mov     qword [rbp-0x38], 0x0",
    "mov     qword [rbp-0x70], r11",
    "mov     dword [rbp-0x50], ecx",
    "jmp     0x978ae",
    "cmp     byte [r12], 0x5b",
    "je      0x97835",
    "mov     rbx, qword [r14+0x8]",
    "mov     qword [r14+0x8], rax",
    "test    rbx, rbx",
    "je      0x9779d",
    "lea     rax, [rel last_command_exit_value]",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_158490]",
    "mov     dword [rel data_158490], 0x1",
    "mov     dword [rax], 0x1",
    "call    set_pipestatus_array",
    "mov     rbx, qword [r14]",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1337d8]  {\"%s: %s: must use subscript when \u2026\"}",
    "call    dcgettext",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    report_error",
    "jmp     0x97898",
    "mov     rcx, qword [rbp-0x40]",
    "mov     r8d, dword [rbp-0x4c]",
    "mov     qword [rbp-0x38], rcx",
    "xor     edx, edx",
    "xor     esi, esi",
    "mov     rdi, r12",
    "call    sub_111360",
    "movsxd  rbx, eax",
    "lea     rcx, [r12+rbx]",
    "mov     rdx, rbx",
    "cmp     byte [rcx], 0x5d",
    "je      0x97a60",
    "and     ecx, 0xfffffffe",
    "mov     qword [rbp-0x40], r15",
    "mov     r13, r12",
    "mov     dword [rbp-0x38], ecx",
    "jmp     0x976a3",
    "mov     edi, dword [rbx+0xc]",
    "test    edi, edi",
    "je      0x977e8",
    "mov     r15, qword [r15]",
    "test    r15, r15",
    "je      0x977b0",
    "xor     r10d, r10d",
    "mov     rdx, qword [rbp-0x48]",
    "mov     rsi, qword [rbp-0x38]",
    "mov     rcx, r12",
    "mov     rdi, r14",
    "mov     dword [rbp-0x58], r10d",
    "call    sub_96140",
    "mov     r10d, dword [rbp-0x58]",
    "mov     qword [rbx], r13",
    "test    r10d, r10d",
    "je      0x97893",
    "lea     r13, [r12+rbx+0x1]",
    "movzx   esi, byte [r13]",
    "cmp     sil, 0x3d",
    "je      0x97a90",
    "test    byte [r14+0x28], 0x40",
    "jne     0x97a00",
    "mov     r12, qword [rbx]",
    "test    r12, r12",
    "je      0x97b50",
    "mov     rdi, qword [rbx]",
    "call    free",
    "add     rsp, 0x48",
    "mov     rdi, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     free",
    "xor     esi, esi",
    "mov     rdi, rbx",
    "call    sub_87820",
    "mov     r15, qword [rbp-0x68]",
    "mov     eax, dword [r14+0x28]",
    "mov     rax, qword [r15+0x8]",
    "mov     edx, dword [rax+0x8]",
    "mov     r12, qword [rax]",
    "mov     rdx, qword [rbp-0x48]",
    "mov     rsi, qword [rbp-0x60]",
    "mov     rcx, r12",
    "mov     rdi, r14",
    "xor     eax, eax",
    "mov     dword [rbp-0x58], r10d",
    "call    sub_960d0",
    "mov     r10d, dword [rbp-0x58]",
    "mov     qword [rbx], r13",
    "test    r10d, r10d",
    "jne     0x9790c",
    "add     qword [rbp-0x40], 0x1",
    "mov     rdi, r12",
    "call    free",
    "jmp     0x97893",
    "cmp     edx, 0x1",
    "je      0x97a00",
    "cmp     sil, 0x2b",
    "jne     0x97997",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120287]  {\"bad array subscript\"}",
    "call    dcgettext",
    "mov     rsi, r12",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    report_error",
    "jmp     0x97898",
    "mov     edx, dword [rbp-0x50]",
    "mov     rsi, r12",
    "mov     rdi, r14",
    "call    make_variable_value",
    "mov     rbx, rax",
    "mov     rax, qword [r14+0x20]",
    "test    rax, rax",
    "je      0x97bfe",
    "xor     r15d, r15d",
    "mov     r12, rbx",
    "jmp     0x976b7",
    "mov     rax, qword [r12+0x8]",
    "mov     r15, qword [rax]",
    "mov     eax, dword [r14+0x28]",
    "movzx   edi, byte [r12+0x1]",
    "mov     r10d, eax",
    "and     r10d, 0x4",
    "cmp     dil, 0x40",
    "sete    r8b",
    "cmp     dil, 0x2a",
    "sete    dil",
    "or      dil, r8b",
    "je      0x97ac8",
    "cmp     byte [r12+rbx+0x2], 0x3d",
    "jne     0x97997",
    "mov     rsi, qword [rbp-0x40]",
    "mov     rdi, qword [rbp-0x70]",
    "mov     rdx, rbx",
    "call    array_insert",
    "jmp     0x979ca",
    "mov     rdx, qword [rbp-0x40]",
    "xor     ecx, ecx",
    "mov     rsi, rbx",
    "mov     rdi, r14",
    "call    rax",
    "test    r13, r13",
    "je      0x97a30",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120287]  {\"bad array subscript\"}",
    "call    dcgettext",
    "mov     rsi, r13",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    report_error",
    "jmp     0x9768f",
    "cmp     byte [r13], 0x0",
    "je      0x97a30",
    "test    r10d, r10d",
    "jne     0x97c13",
    "cmp     edx, 0x2",
    "je      0x97ca7",
    "nop     word [rax+rax]",
    "test    rbx, rbx",
    "je      0x97893",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0x97893",
    "mov     rbx, qword [r12]",
    "test    rbx, rbx",
    "je      0x97790",
    "xor     esi, esi",
    "mov     rdi, r13",
    "call    sub_8c420",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x97a30",
    "lea     rsi, [r12+0x1]",
    "xor     ecx, ecx",
    "mov     rdi, r14",
    "call    array_expand_index",
    "mov     qword [rbp-0x38], rax",
    "mov     rsi, rax",
    "test    rax, rax",
    "js      0x979e0",
    "mov     edx, eax",
    "and     edx, 0x40",
    "jne     0x97c5b",
    "test    r10d, r10d",
    "je      0x97ad1",
    "mov     rax, qword [rbp-0x60]",
    "mov     r15, qword [rbp-0x40]",
    "test    rax, rax",
    "jne     0x977c5",
    "mov     rax, qword [rbx+0x8]",
    "mov     r13, qword [rax]",
    "cmp     byte [rax], 0x0",
    "je      0x97660",
    "mov     rax, qword [r14+0x8]",
    "mov     rcx, qword [rbp-0x38]",
    "mov     rax, qword [rax]",
    "lea     rsi, [rcx+rax+0x1]",
    "mov     qword [rbp-0x38], rsi",
    "test    rsi, rsi",
    "jns     0x97c32",
    "mov     eax, dword [r14+0x28]",
    "movzx   ecx, byte [r13]",
    "mov     qword [rbp-0x40], rsi",
    "mov     edx, eax",
    "and     edx, 0x40",
    "mov     byte [rcx], 0x0",
    "cmp     byte [r12+0x1], 0x0",
    "je      0x97d28",
    "lea     rdi, [r12+rbx+0x2]",
    "cmp     sil, 0x2b",
    "jne     0x97dca",
    "lea     rax, [rel last_command_exit_value]",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_158490]",
    "mov     dword [rel data_158490], 0x1",
    "mov     dword [rax], 0x1",
    "call    set_pipestatus_array",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1337b0]  {\"%s: cannot assign to non-numeric\u2026\"}",
    "call    dcgettext",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    report_error",
    "jmp     0x97898",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120287]  {\"bad array subscript\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rsi, r13",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    report_error",
    "mov     rdi, rbx",
    "call    free",
    "test    r15, r15",
    "je      0x97b88",
    "nop     dword [rax]",
    "cmp     byte [rdi], 0x3d",
    "mov     r8d, dword [rbp-0x4c]",
    "jne     0x97afd",
    "mov     r8d, dword [rbp-0x4c]",
    "jmp     0x97afd",
    "mov     byte [rcx], 0x5d",
    "lea     rdi, [r12+0x1]",
    "xor     esi, esi",
    "mov     qword [rbp-0x58], rcx",
    "call    sub_8c420",
    "mov     rcx, qword [rbp-0x58]",
    "mov     qword [rbp-0x48], rax",
    "mov     byte [rcx], 0x5d",
    "test    rax, rax",
    "je      0x97d2b",
    "mov     r8d, dword [rbp-0x4c]",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x97dd6",
    "cmp     byte [r15], 0x0",
    "je      0x97b88",
    "test    edx, edx",
    "je      0x97dce",
    "or      r8d, 0x1",
    "lea     rdi, [r12+rbx+0x3]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120287]  {\"bad array subscript\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, r12",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    report_error",
    "mov     qword [rbp-0x48], 0x0",
    "jmp     0x97898",
    "cmp     byte [rax], 0x0",
    "je      0x97d5f",
    "lea     rbx, [rel this_command_name]",
    "mov     r10d, eax",
    "mov     r13, qword [rbx]",
    "and     r10d, 0x10",
    "jne     0x97860",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r13], 0x0",
    "jmp     0x97713",
    "xor     esi, esi",
    "mov     rdi, r15",
    "call    sub_8c420",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x97b88",
    "mov     r12, rdi",
    "jmp     0x978d2",
    "cmp     byte [rdi], 0x0",
    "je      0x97d00",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_120287]  {\"bad array subscript\"}",
    "call    dcgettext",
    "mov     rsi, r12",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "mov     rdx, rax",
    "xor     eax, eax",
    "call    report_error",
    "mov     rdi, qword [rbp-0x48]",
    "call    free",
    "jmp     0x97898",
    "mov     eax, dword [r14+0x28]",
    "movzx   ecx, byte [r13]",
    "mov     edx, eax",
    "and     edx, 0x40",
    "jmp     0x97c44",
    "mov     r8d, dword [rbp-0x38]",
    "mov     rsi, qword [rbp-0x60]",
    "mov     rdi, r14",
    "mov     rcx, r13",
    "mov     rdx, rbx",
    "xor     eax, eax",
    "call    sub_960d0",
    "mov     rdi, r13",
    "call    free",
    "jmp     0x9768f",
    "mov     edi, 0x1",
    "mov     dword [rbp-0x58], r8d",
    "call    malloc",
    "mov     r8d, dword [rbp-0x58]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0x97dee",
    "xor     esi, esi",
    "mov     dword [rbp-0x58], r8d",
    "call    sub_8c420",
    "mov     r8d, dword [rbp-0x58]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0x97d00",
    "lea     rdi, [r12+rbx+0x2]",
    "cmp     cl, 0x2b",
    "je      0x97aeb",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "mov     dword [rbp-0x58], r8d",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r12], 0x0",
    "jmp     0x97b29",
    "lea     rbx, [rel this_command_name]",
    "mov     eax, dword [r14+0x28]",
    "mov     r10d, 0x1",
    "mov     r13, qword [rbx]",
    "test    al, 0x10",
    "je      0x9786a",
    "test    al, 0x40",
    "je      0x978e9",
    "jmp     0x97863",
    "mov     qword [rbx], 0x0"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
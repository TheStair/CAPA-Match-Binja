{
  "address": "0x106f40",
  "rules": [
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "lea     rax, [rel rl_point]",
    "mov     esi, dword [rax]",
    "test    edi, edi",
    "jle     0x106f98",
    "xor     eax, eax",
    "test    esi, esi",
    "cmovns  eax, esi",
    "retn    ",
    "test    esi, esi",
    "jle     0x106fa0",
    "xor     eax, eax",
    "retn    ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r12",
    "lea     r12, [rel rl_line_buffer]",
    "push    rbx",
    "mov     ebx, edi",
    "nop     dword [rax]",
    "xor     eax, eax",
    "test    ebx, ebx",
    "jne     0x106f90  {\"[A\\]\"}",
    "test    eax, eax",
    "jg      0x106f68",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "xor     eax, eax",
    "test    esi, esi",
    "cmovns  eax, esi",
    "mov     rdi, qword [r12]",
    "mov     edx, 0x1",
    "sub     ebx, 0x1",
    "call    _rl_find_prev_mbchar_internal",
    "mov     esi, eax",
    "test    ebx, ebx",
    "jle     0x106f83"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
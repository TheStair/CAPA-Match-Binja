{
  "address": "0xbd530",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "encrypt data using XXTEA/8b51ac557ada4334b6544ffbf490740a/6611357b470d4f51a55c8b60d2040800",
    "decrypt data using TEA/b2f1d7a7bfa04984a8dca63866a95e23/65029a7be1a74342926ce5af1066d3d1",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "check for kernel debugger via shared user data structure/47a8170337e74f7ca5a6c64253eb43bf",
    "get file attributes",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae",
    "encrypt data using TEA/6daa315fd3424f3e9ddc04a16106b42a/a391c789b13342be8944ab433e4f9dba"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14d, 0x1",
    "push    r13",
    "lea     r13, [rel data_121720]  {\"d:u:n:O:tC:c:s:\"}",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "lea     rbx, [rel jump_table_1373e4]",
    "sub     rsp, 0x118",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "lea     rax, [rel loptend]",
    "mov     dword [rel data_168f9c], 0xa",
    "mov     qword [rel data_168d30], 0x0",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel lcurrent]",
    "mov     dword [rel data_168d28], 0x1",
    "mov     qword [rax], 0x0",
    "mov     qword [rbp-0x100], 0x0",
    "mov     qword [rbp-0x110], 0x1388",
    "mov     qword [rbp-0x118], 0x0",
    "mov     qword [rbp-0x120], 0x0",
    "mov     qword [rbp-0x108], 0x0",
    "mov     dword [rbp-0xf4], 0x0",
    "lea     rax, [rel loptend]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xbdc63",
    "cmp     eax, 0xffffff9d",
    "je      0xbd860",
    "lea     rbx, [rel data_1216cb]  {\"MAPFILE\"}",
    "jmp     0xbd8a5",
    "mov     rax, qword [rax+0x8]",
    "test    rax, rax",
    "je      0xbdb80",
    "call    builtin_help",
    "jmp     0xbd625",
    "sub     eax, 0x43",
    "cmp     eax, 0x32",
    "ja      0xbd620",
    "mov     rdi, rbx",
    "call    legal_identifier",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11fa8b]  {\"`%s': not a valid identifier\"}",
    "test    eax, eax",
    "je      0xbd741",
    "lea     rdi, [rel data_1342f0]  {\"internal error: getting variable\u2026\"}",
    "xor     eax, eax",
    "call    builtin_error",
    "nop     ",
    "mov     rbx, qword [rax]",
    "test    rbx, rbx",
    "je      0xbdb80",
    "mov     eax, 0x102",
    "{Case 0x1-0xb, 0xd-0x1f, 0x22-0x2a, 0x2c-0x2f}",
    "call    builtin_usage",
    "movsxd  rax, dword [rbx+rax*4]",
    "add     rax, rbx",
    "jmp     rax",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xbdb90",
    "mov     esi, r14d",
    "mov     rdi, rbx",
    "mov     qword [rbp-0xe0], 0x0",
    "mov     r12d, dword [rel data_168f9c]",
    "mov     qword [rbp-0xd8], 0x0",
    "and     esi, 0x1",
    "call    builtin_find_indexed_array",
    "mov     qword [rbp-0x138], rax",
    "test    rax, rax",
    "je      0xbdb90",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xbdd39",
    "cmp     byte [rbx], 0x0",
    "je      0xbdccb",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "lea     rsp, [rbp-0x28]",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "{Case 0x32}",
    "lea     r15, [rel list_optarg]",
    "lea     rsi, [rbp-0xe8]",
    "mov     rdi, qword [r15]",
    "call    legal_number",
    "test    eax, eax",
    "je      0xbdc3b",
    "{Case 0x31}",
    "or      r14d, 0x2",
    "jmp     0xbd5ea",
    "{Case 0x30}",
    "lea     r15, [rel list_optarg]",
    "lea     rsi, [rbp-0xe8]",
    "mov     rdi, qword [r15]",
    "call    legal_number",
    "test    eax, eax",
    "je      0xbd732",
    "{Case 0x2b}",
    "lea     r15, [rel list_optarg]",
    "lea     rsi, [rbp-0xe8]",
    "mov     rdi, qword [r15]",
    "call    legal_number",
    "test    eax, eax",
    "je      0xbd732",
    "{Case 0x21}",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]",
    "movsx   eax, byte [rax]",
    "mov     dword [rel data_168f9c], eax",
    "jmp     0xbd5ea",
    "{Case 0x20}",
    "lea     r15, [rel list_optarg]",
    "lea     rsi, [rbp-0xe8]",
    "mov     rdi, qword [r15]",
    "call    legal_number",
    "test    eax, eax",
    "je      0xbd7ea",
    "{Case 0xc}",
    "lea     r15, [rel list_optarg]",
    "lea     rsi, [rbp-0xe8]",
    "mov     rdi, qword [r15]",
    "call    legal_number",
    "test    eax, eax",
    "je      0xbdc4f",
    "{Case 0x0}",
    "lea     rax, [rel list_optarg]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x100], rax",
    "jmp     0xbd5ea",
    "mov     eax, 0x1",
    "jmp     0xbd62a",
    "cmp     r12d, 0xa",
    "je      0xbdc8d",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121730]  {\"empty array variable name\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xbd625",
    "mov     rbx, qword [r15]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1342a0]  {\"%s: invalid file descriptor spec\u2026\"}",
    "jmp     0xbd741",
    "mov     rax, qword [rbp-0xe8]",
    "test    rax, rax",
    "js      0xbdc3b",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xbd870",
    "mov     rbx, qword [r15]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1216d3]  {\"%s: invalid line count\"}",
    "mov     rax, qword [rbp-0xe8]",
    "mov     qword [rbp-0x118], rax",
    "shr     rax, 0x20",
    "je      0xbd5ea",
    "mov     rax, qword [rbp-0xe8]",
    "mov     qword [rbp-0x108], rax",
    "shr     rax, 0x20",
    "je      0xbd5ea",
    "mov     rbx, qword [r15]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121703]  {\"%s: invalid callback quantum\"}",
    "jmp     0xbd741",
    "mov     rax, qword [rbp-0xe8]",
    "mov     edx, 0xfffffffe",
    "mov     qword [rbp-0x110], rax",
    "sub     rax, 0x1",
    "cmp     rdx, rax",
    "jae     0xbd5ea",
    "mov     rbx, qword [r15]",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1216ea]  {\"%s: invalid array origin\"}",
    "jmp     0xbd741",
    "mov     rax, qword [rbp-0xe8]",
    "mov     qword [rbp-0x120], rax",
    "shr     rax, 0x20",
    "jne     0xbdc4f",
    "mov     edi, dword [rbp-0xf4]",
    "mov     edx, 0x1",
    "xor     esi, esi",
    "call    lseek",
    "mov     dword [rbp-0xf8], 0x0",
    "test    rax, rax",
    "jns     0xbd942",
    "mov     edi, dword [rbp-0xf4]",
    "lea     rsi, [rbp-0xd0]",
    "call    fstat",
    "mov     dword [rbp-0xf8], 0x1",
    "test    eax, eax",
    "jne     0xbd942",
    "movsxd  rdx, eax",
    "mov     dword [rbp-0xf4], eax",
    "cmp     rax, rdx",
    "jne     0xbdc3b",
    "jmp     0xbd732",
    "and     r14d, 0xfffffffe",
    "jmp     0xbd5ea",
    "cmp     qword [rbp-0x118], 0x0",
    "mov     qword [rel data_168ee8], 0x0",
    "mov     qword [rel data_168ee0], 0x0",
    "jle     0xbdd18",
    "call    __errno_location",
    "cmp     dword [rax], 0x1d",
    "sete    al",
    "movzx   eax, al",
    "mov     dword [rbp-0xf8], eax",
    "jmp     0xbd942",
    "mov     eax, dword [rbp-0xb8]",
    "and     eax, 0xf000",
    "cmp     eax, 0x8000",
    "setne   al",
    "movzx   eax, al",
    "mov     dword [rbp-0xf8], eax",
    "mov     edi, dword [rbp-0xf4]",
    "xor     edx, edx",
    "xor     eax, eax",
    "mov     esi, 0x1",
    "call    fcntl",
    "test    eax, eax",
    "jns     0xbd5ea",
    "lea     rax, [rbp-0xd8]",
    "mov     qword [rbp-0x130], rax",
    "lea     rax, [rbp-0xe0]",
    "mov     qword [rbp-0x128], rax",
    "jmp     0xbd9d3",
    "xor     ebx, ebx",
    "lea     r15, [rbp-0xd8]",
    "lea     rax, [rbp-0xe0]",
    "mov     dword [rbp-0x140], r14d",
    "mov     r13d, ebx",
    "mov     qword [rbp-0x130], r15",
    "mov     r14d, dword [rbp-0xf8]",
    "mov     qword [rbp-0x128], rax",
    "mov     rbx, qword [rbp-0x118]",
    "jmp     0xbd9ac",
    "call    __errno_location",
    "mov     edi, dword [rax]",
    "call    strerror",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1342d0]  {\"%d: invalid file descriptor: %s\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     esi, dword [rbp-0xf4]",
    "mov     rdx, rbx",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xbdb90",
    "mov     rax, qword [rbp-0x120]",
    "mov     r13d, 0x1",
    "and     r14d, 0x2",
    "mov     qword [rbp-0xe0], 0x0",
    "mov     qword [rbp-0xd8], 0x0",
    "lea     r15d, [rax-0x1]",
    "nop     ",
    "mov     rsi, qword [rbp-0x128]",
    "mov     r8d, r14d",
    "mov     ecx, r12d",
    "mov     rdx, r15",
    "mov     edi, dword [rbp-0xf4]",
    "call    zgetline",
    "test    rax, rax",
    "jns     0xbd9a0",
    "mov     rdi, qword [rbp-0xe0]",
    "call    free",
    "mov     eax, dword [rbp-0xf8]",
    "test    eax, eax",
    "je      0xbdb9a",
    "test    r14d, r14d",
    "jne     0xbdbd0",
    "lea     eax, [r13+0x1]",
    "mov     r13, rax",
    "cmp     rbx, rax",
    "jle     0xbd9cc",
    "mov     r14d, dword [rbp-0x140]",
    "mov     rax, qword [rel data_168ee8]",
    "sub     rax, qword [rel data_168ee0]",
    "test    rax, rax",
    "jg      0xbdced",
    "xor     eax, eax",
    "jmp     0xbd62a",
    "mov     rdx, qword [rbp-0xe0]",
    "mov     rdi, rdx",
    "mov     qword [rbp-0x118], rdx",
    "call    strlen",
    "test    eax, eax",
    "je      0xbda3a",
    "cmp     qword [rbp-0x100], 0x0",
    "je      0xbdb22",
    "neg     rax",
    "mov     edi, dword [rbp-0xf4]",
    "mov     edx, 0x1",
    "mov     rsi, rax",
    "call    lseek",
    "cmp     rax, 0xffffffffffffffff",
    "jne     0xbdbb1",
    "mov     qword [rel data_168ee0], 0x0",
    "xor     eax, eax",
    "mov     qword [rel data_168ee8], 0x0",
    "jmp     0xbd62a",
    "mov     rdx, qword [rbp-0x118]",
    "cdqe    ",
    "lea     rax, [rdx+rax-0x1]",
    "cmp     byte [rax], r12b",
    "jne     0xbda3a",
    "mov     rcx, qword [rbp-0xe0]",
    "mov     esi, ebx",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     rdi, qword [rbp-0x138]",
    "add     r13d, 0x1",
    "call    sub_96140",
    "mov     rcx, qword [rbp-0x108]",
    "test    rcx, rcx",
    "je      0xbda00",
    "test    r13d, r13d",
    "je      0xbdb22",
    "xor     eax, eax",
    "jmp     0xbd62a",
    "mov     byte [rax], 0x0",
    "jmp     0xbda3a",
    "mov     r8d, dword [rbp-0xf8]",
    "mov     rdx, qword [rbp-0x130]",
    "mov     ecx, r12d",
    "lea     ebx, [r15+r13]",
    "mov     rsi, qword [rbp-0x128]",
    "mov     edi, dword [rbp-0xf4]",
    "call    zgetline",
    "cmp     rax, 0xffffffffffffffff",
    "je      0xbdb5c",
    "mov     eax, r13d",
    "cmp     rcx, rax",
    "jge     0xbda00",
    "mov     eax, r13d",
    "cqo     ",
    "idiv    qword [rbp-0x110]",
    "test    rdx, rdx",
    "jne     0xbdb22",
    "mov     esi, dword [rbp-0xf8]",
    "test    esi, esi",
    "je      0xbdc0d",
    "mov     rsi, qword [rel data_168ee8]",
    "sub     rsi, qword [rel data_168ee0]",
    "test    rsi, rsi",
    "jg      0xbdc6f",
    "mov     rdi, qword [rbp-0xe0]",
    "call    sh_single_quote",
    "mov     rdi, qword [rbp-0x100]",
    "mov     qword [rbp-0x118], rax",
    "call    strlen",
    "mov     rdi, qword [rbp-0x118]",
    "mov     qword [rbp-0x120], rax",
    "call    strlen",
    "mov     rdx, qword [rbp-0x120]",
    "lea     esi, [rdx+rax+0xd]",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x120], rsi",
    "call    malloc",
    "mov     rsi, qword [rbp-0x120]",
    "test    rax, rax",
    "mov     r10, rax",
    "je      0xbdd3e",
    "mov     edi, dword [rbp-0xf4]",
    "neg     rsi",
    "mov     edx, 0x1",
    "call    lseek",
    "cmp     rax, 0xffffffffffffffff",
    "jne     0xbdc20",
    "mov     qword [rel data_168ee0], 0x0",
    "mov     qword [rel data_168ee8], 0x0",
    "jmp     0xbda74",
    "mov     qword [rbp-0x140], rax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "push    qword [rbp-0x118]",
    "mov     rcx, rsi",
    "mov     rdi, r10",
    "xor     eax, eax",
    "push    rbx",
    "lea     r8, [rel data_12174a]  {\"%s %d %s\"}",
    "mov     edx, 0x2",
    "mov     r9, qword [rbp-0x100]",
    "mov     qword [rbp-0x120], r10",
    "call    __snprintf_chk",
    "mov     rdi, qword [rbp-0x118]",
    "call    free",
    "mov     rdi, qword [rbp-0x120]",
    "mov     edx, 0x4",
    "xor     esi, esi",
    "call    evalstring",
    "pop     rdx",
    "pop     rcx",
    "jmp     0xbda74"
  ]
}
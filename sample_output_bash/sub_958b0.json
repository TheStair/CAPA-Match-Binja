{
  "address": "0x958b0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x58",
    "mov     qword [rbp-0x70], rdi",
    "mov     edi, 0x80",
    "mov     dword [rbp-0x7c], esi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x95ce4",
    "mov     esi, 0x80",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [rbp-0x70]",
    "mov     byte [r13], 0x28",
    "mov     rax, qword [rax+0x10]",
    "mov     r14, qword [rax+0x10]",
    "cmp     rax, r14",
    "je      0x95cd3",
    "mov     r15d, 0x2",
    "mov     r14d, 0x1",
    "jmp     0x95c2c",
    "lea     rax, [rbp-0x50]",
    "mov     r12d, 0x80",
    "mov     ebx, 0x1",
    "mov     qword [rbp-0x68], 0x80",
    "mov     qword [rbp-0x78], rax",
    "jmp     0x959ba",
    "mov     eax, dword [rbp-0x7c]",
    "mov     byte [r13+r14], 0x29",
    "mov     byte [r13+r15], 0x0",
    "test    eax, eax",
    "jne     0x95ca8",
    "mov     rdi, qword [r14]",
    "mov     rdx, qword [rbp-0x78]",
    "xor     r8d, r8d",
    "mov     ecx, 0x16",
    "mov     esi, 0xa",
    "call    fmtulong",
    "mov     rdi, qword [r14+0x8]",
    "mov     r15, rax",
    "test    rdi, rdi",
    "je      0x95ba0",
    "mov     rdi, r13",
    "call    sh_single_quote",
    "mov     rdi, r13",
    "mov     rbx, rax",
    "call    free",
    "mov     r13, rbx",
    "jmp     0x95c3f",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x95d37",
    "test    r15, r15",
    "je      0x95bc8",
    "call    ansic_shouldquote",
    "mov     rdi, qword [r14+0x8]",
    "test    eax, eax",
    "je      0x95bd8",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x58",
    "mov     rax, r13",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     eax, 0x9",
    "xor     r8d, r8d",
    "jmp     0x95a80",
    "cmp     byte [r15], 0x0",
    "je      0x95bc8",
    "call    sh_double_quote",
    "mov     r8, rax",
    "jmp     0x95a10",
    "test    rdi, rdi",
    "je      0x95ba0",
    "add     eax, ebx",
    "cmp     eax, r12d",
    "jge     0x95b48",
    "cmp     byte [r15+0x1], 0x0",
    "jne     0x95c68",
    "mov     edx, 0x8",
    "test    r15, r15",
    "je      0x95a40",
    "cmp     byte [rdi], 0x0",
    "je      0x95ba0",
    "add     r12d, r12d",
    "cmp     eax, r12d",
    "jge     0x95b48",
    "lea     r9d, [rbx+0x1]",
    "mov     rax, qword [rbp-0x68]",
    "movsxd  rbx, ebx",
    "mov     rsi, r15",
    "movsxd  rdi, r9d",
    "mov     byte [r13+rbx], 0x5b",
    "cmp     rdi, rax",
    "mov     rdx, rax",
    "mov     qword [rbp-0x60], r8",
    "cmovae  rdx, rdi",
    "mov     dword [rbp-0x58], r9d",
    "sub     rdx, rdi",
    "add     rdi, r13",
    "call    __strcpy_chk",
    "xor     eax, eax",
    "cmp     byte [r15], 0x0",
    "mov     r9d, dword [rbp-0x58]",
    "mov     r8, qword [rbp-0x60]",
    "je      0x95b00",
    "cmp     byte [r15+0x2], 0x0",
    "je      0x95d2a",
    "mov     eax, 0xa",
    "xor     r8d, r8d",
    "jmp     0x95a80",
    "test    r8, r8",
    "je      0x95c7e",
    "cmp     byte [r15], 0x0",
    "je      0x95a40",
    "xor     esi, esi",
    "call    sub_d80c0",
    "mov     r8, rax",
    "movsxd  rsi, r12d",
    "mov     qword [rbp-0x58], r8",
    "mov     qword [rbp-0x68], rsi",
    "test    r13, r13",
    "je      0x95c90",
    "add     eax, r9d",
    "movzx   ecx, word [rel data_136aa6[6]]  {\"]={\"}",
    "lea     ebx, [rax+0x2]",
    "movsxd  rdx, eax",
    "mov     word [r13+rdx], cx",
    "movsxd  rdi, ebx",
    "test    r8, r8",
    "jne     0x95930",
    "cmp     byte [r15+0x1], 0x0",
    "mov     eax, 0x1",
    "je      0x95b00",
    "mov     eax, 0xb",
    "xor     r8d, r8d",
    "jmp     0x95a80",
    "mov     rdi, r15",
    "call    strlen",
    "lea     edx, [rax+0x8]",
    "lea     eax, [rdx+0x1]",
    "xor     r8d, r8d",
    "jmp     0x95a80",
    "cmp     byte [r8], 0x0",
    "lea     eax, [rdx+0x1]",
    "je      0x95a80",
    "cmp     byte [r15+0x1], 0x0",
    "mov     edx, 0x9",
    "je      0x95a40",
    "mov     rdi, qword [rbp-0x68]",
    "call    malloc",
    "mov     r8, qword [rbp-0x58]",
    "mov     r13, rax",
    "jmp     0x95b73",
    "mov     rdi, r13",
    "call    realloc",
    "mov     r8, qword [rbp-0x58]",
    "mov     r13, rax",
    "mov     rax, qword [rbp-0x68]",
    "mov     rsi, r8",
    "mov     qword [rbp-0x58], r8",
    "cmp     rax, rdi",
    "mov     rdx, rax",
    "cmovb   rdx, rdi",
    "sub     rdx, rdi",
    "add     rdi, r13",
    "call    __strcpy_chk",
    "mov     r8, qword [rbp-0x58]",
    "xor     eax, eax",
    "cmp     byte [r8], 0x0",
    "je      0x95980",
    "mov     rcx, qword [rbp-0x70]",
    "mov     rdx, qword [rcx+0x10]",
    "cmp     qword [r14+0x10], rdx",
    "je      0x95bf0",
    "cmp     byte [r15+0x2], 0x0",
    "mov     eax, 0x2",
    "je      0x95b00",
    "cmp     byte [r8+0x1], 0x0",
    "lea     eax, [rdx+0x2]",
    "je      0x95a80",
    "cmp     byte [r15+0x2], 0x0",
    "jne     0x95cfc",
    "test    r13, r13",
    "jne     0x95a8b",
    "mov     rsi, qword [rbp-0x68]",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "mov     qword [rbp-0x58], r8",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rcx, qword [rbp-0x70]",
    "add     eax, ebx",
    "mov     rsi, qword [r14+0x10]",
    "mov     ebx, eax",
    "cmp     qword [rcx+0x10], rsi",
    "je      0x9599d",
    "cmp     byte [r8+0x1], 0x0",
    "mov     eax, 0x1",
    "je      0x95980",
    "add     ebx, 0x1",
    "mov     r14, rdi",
    "movsxd  r15, ebx",
    "cmp     ebx, r12d",
    "jl      0x95c2c",
    "mov     byte [r13+rdi], 0x20",
    "lea     ebx, [rax+0x3]",
    "jmp     0x959ad",
    "mov     rdi, r15",
    "mov     dword [rbp-0x60], r9d",
    "mov     qword [rbp-0x58], r8",
    "call    strlen",
    "mov     r9d, dword [rbp-0x60]",
    "mov     r8, qword [rbp-0x58]",
    "nop     ",
    "cmp     byte [r8+0x2], 0x0",
    "lea     eax, [rdx+0x3]",
    "je      0x95a80",
    "mov     rdi, r15",
    "mov     qword [rbp-0x58], r8",
    "call    strlen",
    "mov     r8, qword [rbp-0x58]",
    "lea     edx, [rax+0x8]",
    "jmp     0x95a40",
    "mov     edx, 0xa",
    "nop     dword [rax]",
    "mov     rdi, r8",
    "call    free",
    "mov     rax, qword [rbp-0x70]",
    "mov     rdx, qword [rax+0x10]",
    "lea     ebx, [rax+0x1]",
    "cdqe    ",
    "mov     byte [r13+rax], 0x20",
    "cmp     byte [r8+0x2], 0x0",
    "mov     eax, 0x2",
    "je      0x95980",
    "sub     ebx, r12d",
    "and     ebx, 0xfffffff8",
    "lea     ebx, [r12+rbx+0x8]",
    "movsxd  rbx, ebx",
    "test    r13, r13",
    "je      0x95cc3",
    "mov     r14, qword [r14+0x10]",
    "cmp     r14, rdx",
    "je      0x95be5",
    "mov     rdi, r8",
    "mov     dword [rbp-0x60], edx",
    "mov     qword [rbp-0x58], r8",
    "call    strlen",
    "mov     edx, dword [rbp-0x60]",
    "mov     r8, qword [rbp-0x58]",
    "lea     eax, [rdx+rax+0x1]",
    "movsxd  rdi, ebx",
    "nop     dword [rax+rax]",
    "mov     rdi, r8",
    "call    strlen",
    "mov     r8, qword [rbp-0x58]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r13, rax",
    "jmp     0x95c23",
    "mov     rdi, r13",
    "mov     rsi, rbx",
    "call    realloc",
    "mov     r13, rax",
    "test    r13, r13",
    "je      0x95d14",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f045]  {\"xrealloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }"
  ]
}
{
  "address": "0xad870",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12d, 0x1",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x18",
    "lea     rcx, [rel posparam_count]",
    "test    esi, esi",
    "mov     dword [rbp-0x3c], esi",
    "lea     rax, [rel dollar_vars]",
    "setne   r13b",
    "mov     dword [rcx], 0x0",
    "lea     r14, [rax+0x8]",
    "jmp     0xad8cf",
    "test    rbx, rbx",
    "jne     0xad8d9",
    "mov     rdi, qword [r14]",
    "test    rdi, rdi",
    "je      0xad8ed",
    "test    r13b, r13b",
    "je      0xad8b8",
    "test    rbx, rbx",
    "je      0xad8b8",
    "call    free",
    "mov     qword [r14], 0x0",
    "add     r12d, 0x1",
    "mov     eax, r13d",
    "xor     ebx, ebx",
    "add     r14, 0x8",
    "cmp     r12d, 0xa",
    "je      0xad954",
    "mov     rax, qword [rbx+0x8]",
    "mov     rsi, qword [rax]",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x38], rsi",
    "call    strlen",
    "lea     r15, [rax+0x1]",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rsi, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     rdi, rax",
    "je      0xada13",
    "test    al, al",
    "jne     0xad980",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel posparam_count]",
    "mov     rdx, r15",
    "mov     dword [rax], r12d",
    "call    __strcpy_chk",
    "mov     rbx, qword [rbx]",
    "mov     qword [r14], rax",
    "test    rbx, rbx",
    "setne   al",
    "add     r12d, 0x1",
    "add     r14, 0x8",
    "or      eax, r13d",
    "cmp     r12d, 0xa",
    "jne     0xad8cf",
    "lea     r12, [rel rest_of_args]",
    "mov     rdi, qword [r12]",
    "call    dispose_words",
    "mov     rdi, rbx",
    "call    copy_word_list",
    "mov     qword [r12], rax",
    "test    rbx, rbx",
    "je      0xad9c3",
    "mov     rdi, qword [rel data_166ee0]",
    "call    dispose_words",
    "mov     qword [rel data_166ee0], 0x0",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rdx, [rel variable_context]",
    "mov     eax, dword [rel data_166ee8]",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "je      0xad9e4",
    "xor     eax, eax",
    "nop     dword [rax+rax]",
    "lea     rdx, [rel this_shell_builtin]",
    "lea     rcx, [rel set_builtin]",
    "cmp     qword [rdx], rcx",
    "je      0xada05",
    "or      eax, 0x2",
    "mov     dword [rel data_166ee8], eax",
    "jmp     0xad958",
    "mov     rbx, qword [rbx]",
    "add     eax, 0x1",
    "test    rbx, rbx",
    "jne     0xad9a8",
    "lea     rcx, [rel posparam_count]",
    "add     dword [rcx], eax",
    "mov     ecx, dword [rbp-0x3c]",
    "test    ecx, ecx",
    "je      0xad958",
    "or      eax, 0x4",
    "mov     dword [rel data_166ee8], eax",
    "jmp     0xad958",
    "or      eax, 0x1",
    "mov     dword [rel data_166ee8], eax",
    "jmp     0xad958"
  ]
}
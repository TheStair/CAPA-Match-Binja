{
  "address": "0x9fa60",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "call    rl_read_key",
    "test    eax, eax",
    "jle     0x9faca",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x9fb24",
    "mov     byte [rbp-0x2a], al",
    "lea     rax, [rel aliases]",
    "mov     byte [rbp-0x2b], 0x5f",
    "mov     rsi, qword [rax]",
    "mov     byte [rbp-0x29], 0x0",
    "test    rsi, rsi",
    "je      0x9faca",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x18",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "xor     edx, edx",
    "lea     rdi, [rbp-0x2b]",
    "call    hash_search",
    "test    rax, rax",
    "je      0x9faca",
    "mov     rax, qword [rax+0x10]",
    "test    rax, rax",
    "je      0x9faca",
    "mov     rbx, qword [rax+0x8]",
    "test    rbx, rbx",
    "je      0x9faca",
    "cmp     byte [rbx], 0x0",
    "jne     0x9faf0",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r12, [rax+0x1]",
    "mov     rdi, r12",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x9fb29",
    "mov     rsi, r12",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdi, r13",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "call    __strcpy_chk",
    "mov     rdi, r13",
    "call    _rl_with_macro_input",
    "jmp     0x9faca"
  ]
}
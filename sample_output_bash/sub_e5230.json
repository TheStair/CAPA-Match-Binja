{
  "address": "0xe5230",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/811ca4c4f8d549569ea2aaef177bf1ac",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/e07fefb4fc9348cdbcc471f43936d29f",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/19c5b9e7682744d8b574f82a4f55cf68",
    "encrypt data using Curve25519/71854cb5ec3d414da844548a1a695b22",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/71ff62d8869d418e88d129a8b5fcc11b"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    rbx",
    "mov     ebx, edi",
    "sub     rsp, 0x8",
    "test    edi, edi",
    "js      0xe52a8",
    "lea     rax, [rel rl_prompt]",
    "mov     rdx, qword [rax]",
    "lea     rax, [rel rl_display_prompt]",
    "mov     qword [rax], rdx",
    "mov     eax, dword [rel data_16a4b0]",
    "test    eax, eax",
    "jne     0xe52f0",
    "lea     rdx, [rel _rl_keymap]",
    "movsxd  rax, edi",
    "shl     rax, 0x4",
    "add     rax, qword [rdx]",
    "cmp     byte [rax], 0x0",
    "jne     0xe5262",
    "call    rl_restore_prompt",
    "mov     dword [rel data_16a4b0], 0x0",
    "jmp     0xe52c6",
    "lea     rax, [rel rl_redisplay_function]",
    "call    qword [rax]",
    "mov     edi, ebx",
    "call    rl_stuff_char",
    "mov     rbx, qword [rbp-0x8]",
    "xor     eax, eax",
    "leave   ",
    "retn    ",
    "mov     eax, ebx",
    "and     al, 0x7f",
    "sub     eax, 0x30",
    "cmp     eax, 0x9",
    "ja      0xe52a8",
    "lea     rsi, [rel rl_universal_argument]",
    "cmp     qword [rax+0x8], rsi",
    "je      0xe52e0",
    "lea     rdx, [rel rl_explicit_arg]",
    "lea     rcx, [rel rl_numeric_arg]",
    "mov     esi, dword [rdx]",
    "test    esi, esi",
    "jne     0xe5298",
    "lea     rax, [rel rl_numeric_arg]",
    "shl     dword [rax], 0x2",
    "jmp     0xe528a",
    "mov     esi, dword [rcx]",
    "lea     esi, [rsi+rsi*4]",
    "lea     eax, [rax+rsi*2]",
    "jmp     0xe5282",
    "mov     dword [rcx], eax",
    "mov     dword [rdx], 0x1",
    "mov     rbx, qword [rbp-0x8]",
    "mov     eax, 0x1",
    "leave   ",
    "retn    "
  ]
}
{
  "address": "0xc2f60",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "lea     r15, [rbp-0x50]",
    "push    r13",
    "mov     r13d, edx",
    "mov     rdx, r15",
    "push    r12",
    "mov     r12d, esi",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x38",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    var_attribute_string",
    "mov     r14d, eax",
    "test    byte [rbx+0x28], 0x8",
    "je      0xc2fab",
    "test    r12d, r12d",
    "jne     0xc3060",
    "test    r13d, r13d",
    "je      0xc30a0",
    "lea     rcx, [rel posixly_correct]",
    "test    r14d, r14d",
    "lea     rdx, [rel data_121854]  {\"-\"}",
    "cmovne  rdx, r15",
    "test    r12d, r12d",
    "je      0xc3110",
    "lea     rax, [rel this_command_name]",
    "mov     rdx, qword [rax]",
    "test    r14d, r14d",
    "jne     0xc30f0",
    "test    al, 0x44",
    "jne     0xc3050",
    "test    al, 0x4",
    "jne     0xc30e0",
    "mov     rdi, qword [rbx]",
    "mov     rsi, qword [rbx+0x8]",
    "mov     edx, 0x3",
    "call    named_function_string",
    "mov     rdi, rax",
    "call    puts",
    "cmp     r14d, 0x1",
    "jne     0xc3173",
    "lea     rcx, [rel posixly_correct]",
    "mov     esi, dword [rcx]",
    "test    esi, esi",
    "jne     0xc3071",
    "mov     rcx, r15",
    "lea     rsi, [rel data_121846]  {\"%s -%s \"}",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "jmp     0xc2fd5",
    "lea     rsi, [rel data_121bd4[3]]  {\"%s \"}",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "jmp     0xc2fd5",
    "mov     rdi, qword [rbx]",
    "call    puts",
    "jmp     0xc3000",
    "test    r13d, r13d",
    "jne     0xc3050",
    "xor     esi, esi",
    "mov     rdi, rbx",
    "call    print_array_assignment",
    "jmp     0xc3000",
    "test    al, 0x40",
    "je      0xc317e",
    "mov     r13d, 0x1",
    "jmp     0xc2fb4",
    "cmp     byte [rbp-0x50], 0x66",
    "je      0xc3000",
    "mov     rsi, qword [rbx+0x8]",
    "mov     rdi, qword [rbx]",
    "mov     edx, 0x3",
    "mov     qword [rbp-0x58], rcx",
    "mov     r13d, 0x1",
    "call    named_function_string",
    "mov     rdi, rax",
    "call    puts",
    "mov     rcx, qword [rbp-0x58]",
    "jmp     0xc3067",
    "mov     eax, dword [rbx+0x28]",
    "test    ah, 0x10",
    "jne     0xc3028",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xc316e",
    "test    al, 0x8",
    "je      0xc3050",
    "test    r13d, r13d",
    "jne     0xc3050",
    "xor     esi, esi",
    "mov     rdi, rbx",
    "call    print_assoc_assignment",
    "nop     word [rax+rax]",
    "mov     r13d, 0x1",
    "mov     rdx, r15",
    "jmp     0xc2fc2",
    "mov     edx, dword [rcx]",
    "test    edx, edx",
    "je      0xc2fb4",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    r12d, r12d",
    "je      0xc3150",
    "test    al, 0x8",
    "jne     0xc3035",
    "lea     rsi, [rel data_121839]  {\"declare -%s \"}",
    "mov     edi, 0x2",
    "xor     eax, eax",
    "call    __printf_chk",
    "mov     rdi, qword [rbx]",
    "mov     rsi, qword [rbx+0x8]",
    "mov     edx, 0x3",
    "call    named_function_string",
    "mov     rdi, rax",
    "call    puts",
    "jmp     0xc3000",
    "lea     rax, [rel posixly_correct]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0xc3150",
    "mov     rdi, qword [rbx+0x8]",
    "test    rdi, rdi",
    "je      0xc3050",
    "nop     ",
    "call    ansic_shouldquote",
    "test    eax, eax",
    "je      0xc31f0",
    "mov     rdi, qword [rbx+0x8]",
    "call    sh_double_quote",
    "mov     r12, rax",
    "jmp     0xc31c2",
    "mov     r12, qword [rbx+0x8]",
    "test    r12, r12",
    "je      0xc31c2",
    "mov     rdx, qword [rbx]",
    "mov     rcx, r12",
    "lea     rsi, [rel data_1218fe[6]]  {\"%s=%s\\n\"}",
    "xor     eax, eax",
    "mov     edi, 0x2",
    "call    __printf_chk",
    "mov     rdi, r12",
    "call    free",
    "jmp     0xc3000",
    "cmp     byte [r12], 0x0",
    "je      0xc31fe",
    "xor     r12d, r12d",
    "jmp     0xc31c2",
    "mov     rdi, r12",
    "xor     esi, esi",
    "call    sub_d80c0",
    "mov     r12, rax"
  ]
}
{
  "address": "0xc87c0",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rcx",
    "push    r13",
    "mov     r13, rsi",
    "push    r12",
    "mov     r12d, edi",
    "xor     edi, edi",
    "push    rbx",
    "mov     rbx, r8",
    "sub     rsp, 0x48",
    "cmp     byte [rcx], 0x28",
    "mov     qword [rbp-0x48], rdx",
    "sete    dil",
    "mov     dword [rbp-0x58], r9d",
    "add     rdi, rcx",
    "cmp     rdi, r8",
    "je      0xc89b9",
    "mov     rax, qword [rbp-0x48]",
    "lea     rdi, [r14-0x1]",
    "mov     rdx, rbx",
    "sub     rdx, rdi",
    "sub     rax, r13",
    "cmp     edx, eax",
    "je      0xc89e8",
    "xor     edx, edx",
    "mov     rsi, r8",
    "call    sub_c8610",
    "mov     qword [rbp-0x40], rax",
    "test    rax, rax",
    "je      0xc89b9",
    "mov     rax, qword [rbp-0x48]",
    "movzx   r12d, byte [rbx]",
    "movzx   r14d, byte [rax]",
    "test    r12b, r12b",
    "jne     0xc8c2c",
    "mov     eax, 0x1",
    "cmp     r12d, 0x2b",
    "jg      0xc88cf",
    "mov     byte [rbx], 0x0",
    "test    r14b, r14b",
    "je      0xc8c7a",
    "test    r14b, r14b",
    "je      0xc8c70",
    "lea     eax, [r12-0x3f]",
    "cmp     eax, 0x1",
    "ja      0xc89ce",
    "cmp     r12d, 0x29",
    "jg      0xc8acc",
    "mov     rsi, r13",
    "call    strcoll",
    "mov     byte [rbx], r12b",
    "jmp     0xc8c4d",
    "mov     rax, qword [rbp-0x48]",
    "mov     rsi, r13",
    "mov     byte [rax], 0x0",
    "call    strcoll",
    "mov     byte [rbx], r12b",
    "mov     rsi, r13",
    "call    strcoll",
    "jmp     0xc8c4d",
    "mov     byte [rax], 0x0",
    "mov     rsi, r13",
    "call    strcoll",
    "jmp     0xc8c46",
    "cmp     r12d, 0x3f",
    "je      0xc8c87",
    "cmp     r12d, 0x2a",
    "je      0xc8cb0",
    "cmp     r12d, 0x21",
    "jne     0xc89ce",
    "test    eax, eax",
    "setne   al",
    "movzx   eax, al",
    "jmp     0xc89d3",
    "add     rsp, 0x48",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rsi, qword [rbp-0x48]",
    "mov     byte [rsi], r14b",
    "mov     r9d, dword [rbp-0x58]",
    "mov     rdx, qword [rbp-0x40]",
    "xor     r8d, r8d",
    "mov     rcx, rbx",
    "mov     rsi, qword [rbp-0x48]",
    "mov     rdi, r13",
    "call    sub_c8cf0",
    "test    eax, eax",
    "jne     0xc88e7",
    "lea     rax, [r14+0x1]",
    "mov     r14, qword [rbp-0x48]",
    "mov     r12d, dword [rbp-0x58]",
    "mov     qword [rbp-0x50], rbx",
    "mov     qword [rbp-0x38], rax",
    "mov     rax, qword [rbp-0x40]",
    "cmp     rbx, rax",
    "mov     rax, r14",
    "cmovne  rax, r13",
    "mov     qword [rbp-0x60], rax",
    "mov     r9d, dword [rbp-0x58]",
    "mov     rdx, qword [rbp-0x40]",
    "xor     r8d, r8d",
    "mov     rcx, rbx",
    "mov     rsi, qword [rbp-0x48]",
    "mov     rdi, r13",
    "call    sub_c8cf0",
    "test    eax, eax",
    "jne     0xc8ad6",
    "lea     rdx, [r14-0x1]",
    "mov     r12, qword [rbp-0x48]",
    "mov     qword [rbp-0x48], rbx",
    "lea     rax, [r14+0x1]",
    "mov     qword [rbp-0x60], rdx",
    "mov     r14, rax",
    "cmp     qword [rbp-0x48], r13",
    "jb      0xc89ce",
    "xor     eax, eax",
    "jmp     0xc89aa",
    "mov     rax, qword [rbp-0x60]",
    "xor     ebx, ebx",
    "cmp     r14, rax",
    "jae     0xc893b",
    "mov     edx, 0x7c",
    "mov     rdi, rax",
    "call    sub_c8610",
    "mov     rbx, rax",
    "mov     rax, qword [rbp-0x60]",
    "cmp     r14, rax",
    "jb      0xc8ab9",
    "xor     eax, eax",
    "jmp     0xc89aa",
    "xor     edx, edx",
    "cmp     r12, r13",
    "jae     0xc8b16",
    "mov     edx, 0x7c",
    "mov     rsi, rax",
    "mov     rdi, r14",
    "call    sub_c8610",
    "mov     rdx, rax",
    "cmp     r12, r13",
    "jb      0xc8bd9",
    "lea     rax, [r14+0x1]",
    "mov     qword [rbp-0x38], r13",
    "mov     r12d, dword [rbp-0x58]",
    "mov     r14, r13",
    "mov     qword [rbp-0x50], rax",
    "nop     dword [rax]",
    "add     rsp, 0x48",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rax, [rbx-0x1]",
    "mov     qword [rbp-0x58], rbx",
    "mov     r15, qword [rbp-0x60]",
    "mov     qword [rbp-0x48], rax",
    "jmp     0xc895d",
    "jmp     0xc8ac3",
    "cmp     qword [rbp-0x40], rbx",
    "je      0xc89ce",
    "mov     qword [rbp-0x38], r14",
    "mov     ebx, dword [rbp-0x58]",
    "lea     r15, [rdx-0x1]",
    "mov     r14, r13",
    "mov     qword [rbp-0x68], rdx",
    "jmp     0xc8b89",
    "jmp     0xc8be6",
    "mov     rax, qword [rbp-0x40]",
    "cmp     rdx, rax",
    "je      0xc89ce",
    "cmp     r13, rbx",
    "jne     0xc8860",
    "mov     ebx, r12d",
    "mov     rcx, qword [rbp-0x48]",
    "mov     rdx, qword [rbp-0x38]",
    "mov     r9d, r12d",
    "and     bl, 0x7b",
    "cmp     r13, r15",
    "mov     rsi, r15",
    "mov     rdi, r13",
    "cmovae  ebx, r12d",
    "xor     r8d, r8d",
    "call    sub_c8cf0",
    "test    eax, eax",
    "jne     0xc8950",
    "mov     qword [rbp-0x38], rbx",
    "jmp     0xc890d",
    "mov     rdx, qword [rbp-0x38]",
    "xor     r8d, r8d",
    "mov     r9d, ebx",
    "mov     rcx, r15",
    "mov     rsi, r14",
    "mov     rdi, r13",
    "call    sub_c8cf0",
    "test    eax, eax",
    "jne     0xc8b80",
    "mov     r14, rdx",
    "jmp     0xc8aed",
    "mov     edx, 0x7c",
    "mov     rsi, rbx",
    "mov     rdi, r13",
    "call    sub_c8610",
    "mov     rdi, qword [rbp-0x38]",
    "xor     r8d, r8d",
    "mov     r9d, r12d",
    "lea     rcx, [rax-0x1]",
    "mov     rdx, r13",
    "mov     rsi, r14",
    "mov     r15, rax",
    "call    sub_c8cf0",
    "test    eax, eax",
    "je      0xc8a59",
    "mov     rdi, qword [rbp-0x38]",
    "xor     r8d, r8d",
    "mov     r9d, r12d",
    "mov     rdx, rbx",
    "mov     rcx, 0xffffffffffffffff",
    "mov     rsi, r14",
    "call    sub_c8cf0",
    "test    eax, eax",
    "je      0xc8a59",
    "add     r15, 0x1",
    "cmp     r14, r15",
    "jb      0xc8ab5",
    "mov     rcx, qword [rbp-0x50]",
    "mov     rdx, qword [rbp-0x40]",
    "xor     r8d, r8d",
    "mov     r9d, ebx",
    "mov     rsi, r14",
    "mov     rdi, r15",
    "call    sub_c8cf0",
    "test    eax, eax",
    "jne     0xc8950",
    "mov     rax, qword [rbp-0x38]",
    "mov     rsi, qword [rbp-0x50]",
    "cmp     rax, rsi",
    "je      0xc8c5a",
    "add     r14, 0x1",
    "cmp     r12, r14",
    "jb      0xc8bd5",
    "mov     r9d, ebx",
    "cmp     r13, r14",
    "jb      0xc8b30",
    "mov     rax, qword [rbp-0x48]",
    "cmp     r14, rax",
    "je      0xc8cd9",
    "add     r14, 0x1",
    "cmp     qword [rbp-0x48], r14",
    "jae     0xc8850",
    "cmp     qword [rbp-0x40], r15",
    "je      0xc8a20",
    "xor     r15d, r15d",
    "jmp     0xc889e",
    "mov     rbx, qword [rbp-0x58]",
    "nop     dword [rax]",
    "mov     rdx, qword [rbp-0x68]",
    "mov     rcx, qword [rbp-0x48]",
    "mov     rdx, qword [rbp-0x40]",
    "and     r9b, 0x7b",
    "xor     r8d, r8d",
    "mov     rsi, r12",
    "mov     rdi, r14",
    "mov     dword [rbp-0x50], r9d",
    "call    sub_c8cf0",
    "mov     r9d, dword [rbp-0x50]",
    "test    eax, eax",
    "je      0xc89a8",
    "mov     rcx, qword [rbp-0x48]",
    "mov     rdx, qword [rbp-0x40]",
    "xor     r8d, r8d",
    "mov     rsi, r12",
    "mov     rdi, r14",
    "call    sub_c8cf0",
    "test    eax, eax",
    "je      0xc89a8",
    "mov     r13, qword [rbp-0x50]",
    "jmp     0xc88a1",
    "jmp     0xc89ce",
    "test    r12b, 0x4",
    "je      0xc8a70",
    "mov     r13, r15",
    "xor     eax, eax",
    "mov     rcx, qword [rbp-0x48]",
    "mov     rdx, qword [rbp-0x60]",
    "xor     r8d, r8d",
    "mov     rsi, r12",
    "mov     rdi, r14",
    "call    sub_c8cf0",
    "test    eax, eax",
    "je      0xc89a8",
    "cmp     r13, r14",
    "je      0xc8b80",
    "test    r12b, 0x80",
    "je      0xc8a2f",
    "mov     rax, qword [rbp-0x38]",
    "cmp     byte [rax], 0x2e",
    "je      0xc89ce",
    "nop     dword [rax+rax]",
    "mov     r9d, ebx",
    "jmp     0xc8b5a",
    "cmp     qword [rbp-0x38], r14",
    "jae     0xc8ab0",
    "mov     rax, qword [rbp-0x38]",
    "cmp     byte [rax], 0x2e",
    "jne     0xc8a2f",
    "mov     r9d, r12d",
    "jmp     0xc8a3c",
    "mov     r9d, r12d",
    "and     r9b, 0x7b",
    "movzx   eax, byte [rax+0x1]",
    "test    al, al",
    "je      0xc89ce",
    "mov     rsi, qword [rbp-0x48]",
    "xor     r8d, r8d",
    "mov     rcx, rbx",
    "mov     rdx, r15",
    "mov     rdi, r14",
    "call    sub_c8cf0",
    "test    eax, eax",
    "je      0xc89a8",
    "cmp     al, 0x2e",
    "je      0xc8bee",
    "mov     rdx, qword [rbp-0x38]",
    "movzx   eax, byte [rdx+0x2]",
    "test    al, al",
    "je      0xc89ce",
    "test    r12b, 0x1",
    "je      0xc8a2f",
    "test    r12b, 0x1",
    "je      0xc8a2f",
    "mov     rsi, qword [rbp-0x38]",
    "cmp     byte [rsi-0x1], 0x2f",
    "jne     0xc8a2f",
    "cmp     byte [rdx-0x1], 0x2f",
    "jne     0xc8a2f",
    "cmp     al, 0x2f",
    "jne     0xc8a2f",
    "cmp     al, 0x2f",
    "je      0xc89ce",
    "jmp     0xc89ce",
    "mov     r9d, r12d",
    "cmp     qword [rbp-0x38], r14",
    "jb      0xc8a35",
    "jmp     0xc8a3c"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x94510",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "contain loop",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "test    rdi, rdi",
    "je      0x945f0",
    "xor     ebx, ebx",
    "jmp     0x945d4",
    "mov     eax, dword [rdi+0xc]",
    "test    eax, eax",
    "je      0x945f0",
    "add     rsp, 0x18",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r13, rsi",
    "xor     esi, esi",
    "mov     r14, rdx",
    "mov     r12d, ecx",
    "call    sub_94250",
    "mov     qword [rbp-0x38], rax",
    "test    rax, rax",
    "je      0x945f0",
    "mov     rbx, rax",
    "nop     dword [rax]",
    "mov     rbx, qword [rbx]",
    "mov     qword [rdx], r15",
    "test    rbx, rbx",
    "jne     0x94560",
    "call    free",
    "mov     rdx, qword [rbx+0x8]",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdx, r14",
    "mov     ecx, r12d",
    "mov     rsi, r13",
    "mov     rdi, qword [rax]",
    "call    pat_subst",
    "mov     rdx, qword [rbx+0x8]",
    "mov     r15, rax",
    "mov     rdi, qword [rdx]",
    "test    rdi, rdi",
    "je      0x9458d",
    "mov     eax, r12d",
    "mov     r14, qword [rbp-0x38]",
    "mov     ecx, r12d",
    "mov     edx, r12d",
    "and     eax, 0x80",
    "cmp     eax, 0x1",
    "mov     rsi, r14",
    "sbb     edi, edi",
    "sar     ecx, 0x3",
    "and     edi, 0x16",
    "sar     edx, 0x5",
    "and     ecx, 0x8",
    "add     edi, 0x2a",
    "and     edx, 0x1",
    "call    string_list_pos_params",
    "mov     rdi, r14",
    "mov     rbx, rax",
    "call    dispose_words"
  ]
}
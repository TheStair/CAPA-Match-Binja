{
  "address": "0x91910",
  "rules": [
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     edi, 0x20",
    "mov     rbp, rsp",
    "push    r14",
    "mov     r14, rsi",
    "push    r13",
    "mov     r13, rdx",
    "push    r12",
    "push    rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x919e6",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movdqa  xmm0, xmmword [rel data_136770]",
    "mov     edi, 0x20",
    "mov     qword [r12+0x18], 0x0",
    "movups  xmmword [r12], xmm0",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x919fe",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     qword [rbx], 0xffffffffffffffff",
    "mov     qword [rbx+0x8], 0x0",
    "mov     qword [rbx+0x10], rbx",
    "mov     qword [rbx+0x18], rbx",
    "mov     qword [r12+0x10], rbx",
    "cmp     r14, r13",
    "je      0x919e0",
    "xor     ebx, ebx",
    "xor     eax, eax",
    "jmp     0x919c7",
    "xor     ebx, ebx",
    "nop     word [rax+rax]",
    "mov     qword [r12], rax",
    "mov     rax, r12",
    "mov     qword [r12+0x8], rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     rsi, qword [r14+0x8]",
    "mov     rdi, qword [r14]",
    "add     ebx, 0x1",
    "call    array_create_element",
    "mov     rdx, qword [r12+0x10]",
    "mov     rcx, qword [rdx+0x18]",
    "mov     qword [rcx+0x10], rax",
    "mov     qword [rax+0x18], rcx",
    "mov     qword [rdx+0x18], rax",
    "mov     qword [rax+0x10], rdx",
    "mov     r14, qword [r14+0x10]",
    "mov     rax, qword [rax]",
    "cmp     r13, r14",
    "jne     0x91990",
    "movsxd  rbx, ebx"
  ]
}
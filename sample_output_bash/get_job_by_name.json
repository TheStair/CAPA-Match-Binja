{
  "address": "0xaeca0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "check for kernel debugger via shared user data structure/47a8170337e74f7ca5a6c64253eb43bf"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rdi",
    "push    r13",
    "push    r12",
    "mov     r12d, esi",
    "push    rbx",
    "sub     rsp, 0x38",
    "call    strlen",
    "mov     esi, eax",
    "lea     rax, [rel js]",
    "mov     edx, dword [rax+0x1c]",
    "sub     edx, 0x1",
    "js      0xaeec8",
    "mov     dword [rbp-0x34], 0xffffffff",
    "jmp     0xaed2d",
    "lea     rax, [rel jobs]",
    "mov     dword [rbp-0x44], esi",
    "mov     r9d, r12d",
    "movsxd  rdx, edx",
    "mov     ebx, 0xffffffff",
    "and     r9d, 0x8",
    "mov     r8, qword [rax]",
    "mov     eax, r12d",
    "and     eax, 0x4",
    "mov     dword [rbp-0x38], eax",
    "mov     eax, r12d",
    "and     r12d, 0x10",
    "and     eax, 0x2",
    "mov     dword [rbp-0x40], eax",
    "movsxd  rax, esi",
    "mov     qword [rbp-0x50], rax",
    "mov     eax, dword [rbp-0x34]",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "sub     rdx, 0x1",
    "test    edx, edx",
    "jns     0xaed0e",
    "test    r9d, r9d",
    "je      0xaed40",
    "mov     rax, qword [r8+rdx*8]",
    "test    rax, rax",
    "je      0xaed22",
    "mov     dword [rbp-0x34], ebx",
    "mov     r13, qword [rax+0x8]",
    "mov     dword [rbp-0x34], edx",
    "mov     qword [rbp-0x58], r8",
    "mov     qword [rbp-0x60], rdx",
    "mov     r15, r13",
    "mov     dword [rbp-0x48], r9d",
    "jmp     0xaed9a",
    "cmp     dword [rax+0x14], 0x2",
    "je      0xaed40",
    "mov     ecx, dword [rbp-0x38]",
    "test    ecx, ecx",
    "je      0xaed60",
    "mov     edx, dword [rbp-0x40]",
    "test    edx, edx",
    "je      0xaee00",
    "mov     dword [rbp-0x3c], ebx",
    "mov     rbx, r15",
    "mov     eax, dword [rbp-0x44]",
    "test    eax, eax",
    "je      0xaed80",
    "mov     rdi, qword [r15+0x18]",
    "mov     rsi, r14",
    "call    strcasestr",
    "test    rax, rax",
    "je      0xaee50",
    "mov     r15, rbx",
    "mov     ebx, dword [rbp-0x3c]",
    "jmp     0xaed80",
    "movzx   ecx, byte [r14]",
    "cmp     byte [r15], cl",
    "jne     0xaee30",
    "test    r12d, r12d",
    "jne     0xaed2d",
    "mov     rdi, qword [r15+0x18]",
    "movzx   eax, byte [r14]",
    "cmp     byte [rdi], al",
    "je      0xaede0",
    "mov     r15, qword [r15]",
    "cmp     r15, r13",
    "jne     0xaed60",
    "mov     rbx, qword [rbx]",
    "cmp     r13, rbx",
    "jne     0xaeda7",
    "movsxd  rdx, eax",
    "mov     rsi, r14",
    "mov     rdi, r15",
    "call    strncmp",
    "test    eax, eax",
    "jne     0xaee30",
    "cmp     ebx, 0xffffffff",
    "jne     0xaee60",
    "mov     rdx, qword [rbp-0x50]",
    "mov     rsi, r14",
    "call    strncmp",
    "test    eax, eax",
    "je      0xaed80",
    "mov     r15, qword [r15]",
    "cmp     r13, r15",
    "jne     0xaee00",
    "jmp     0xaee1f",
    "mov     r15, qword [rbx+0x18]",
    "mov     rdi, r15",
    "call    strlen",
    "test    eax, eax",
    "je      0xaedd2",
    "mov     r8, qword [rbp-0x58]",
    "mov     ebx, dword [rbp-0x3c]",
    "mov     rdx, qword [rbp-0x60]",
    "mov     r9d, dword [rbp-0x48]",
    "jmp     0xaed22",
    "lea     rax, [rel this_shell_builtin]",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel 0x12114d]  {\"%s: ambiguous job spec\"}",
    "cmp     qword [rax], 0x0",
    "je      0xaeeb4",
    "cmp     r13, r15",
    "je      0xaeea0",
    "mov     r15, qword [r15]",
    "cmp     r15, r13",
    "je      0xaee1f",
    "mov     r8, qword [rbp-0x58]",
    "mov     rdx, qword [rbp-0x60]",
    "mov     r9d, dword [rbp-0x48]",
    "jmp     0xaed22",
    "call    dcgettext",
    "mov     rsi, r14",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_error",
    "jmp     0xaee8d",
    "call    dcgettext",
    "mov     rsi, r14",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "mov     r8, qword [rbp-0x58]",
    "mov     rdx, qword [rbp-0x60]",
    "mov     r9d, dword [rbp-0x48]",
    "mov     ebx, dword [rbp-0x34]",
    "jmp     0xaed22",
    "mov     ebx, dword [rbp-0x34]",
    "nop     dword [rax+rax]",
    "mov     dword [rbp-0x34], 0xfffffffe",
    "jmp     0xaed2d"
  ]
}
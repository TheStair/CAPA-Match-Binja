{
  "address": "0xae350",
  "rules": [
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "cmp     byte [rdi], 0x30",
    "je      0xae398",
    "call    __ctype_b_loc",
    "movzx   ecx, byte [rbx+0x1]",
    "mov     rdx, rax",
    "mov     rdx, qword [rdx]",
    "test    byte [rdx+rcx*2+0x1], 0x8",
    "jne     0xae3d0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1202be]  {\"invalid number\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, rax",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1210c8]  {\"invalid octal number\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, rax",
    "jmp     0xae37b",
    "cmp     cl, 0x78",
    "jne     0xae365",
    "mov     rsi, rbx",
    "mov     rbx, qword [rbp-0x8]",
    "lea     rdi, [rel data_121afe[9]]  {\"%s: %s\"}",
    "xor     eax, eax",
    "leave   ",
    "jmp     builtin_error",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1210dd]  {\"invalid hex number\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, rax",
    "jmp     0xae37b"
  ]
}
{
  "address": "0x90cc0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rcx, qword [rel data_168798]",
    "xor     r8d, r8d",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "mov     r13d, dword [rel data_1687a4]",
    "push    r12",
    "mov     r12d, dword [rel data_1687a0]",
    "push    rbx",
    "nop     dword [rax+rax]",
    "test    r8b, r8b",
    "je      0x90e46",
    "movsxd  rax, r13d",
    "mov     r14, qword [rcx+rax*8]",
    "movzx   ebx, byte [r14]",
    "cmp     bl, 0x21",
    "jne     0x90d66",
    "call    sub_873f0",
    "{ Does not return }",
    "mov     dword [rel data_1687a4], r13d",
    "jmp     0x90e46",
    "test    r8b, r8b",
    "je      0x90d72",
    "cmp     byte [r14+0x1], 0x0",
    "jne     0x90dc2",
    "cmp     bl, 0x28",
    "je      0x90dd0",
    "mov     dword [rel data_1687a4], r13d",
    "test    r8b, r8b",
    "je      0x90d77",
    "xor     edx, edx",
    "jmp     0x90d33",
    "cmp     byte [r14+0x1], 0x0",
    "jne     0x90d77",
    "lea     edx, [r13+0x2]",
    "cmp     r12d, edx",
    "jle     0x90d92",
    "mov     dword [rel data_1687a4], r13d",
    "jmp     0x90d77",
    "mov     rsi, qword [rcx+rax*8]",
    "mov     edi, eax",
    "cmp     bl, 0x21",
    "je      0x90d10",
    "add     r13d, 0x1",
    "mov     dword [rel data_1687a4], r13d",
    "cmp     r12d, r13d",
    "jle     0x90e46",
    "add     r13d, 0x1",
    "cmp     r12d, r13d",
    "jle     0x90dab",
    "mov     rdi, qword [rcx+rax*8+0x8]",
    "call    test_binop",
    "test    eax, eax",
    "jne     0x90e23",
    "cmp     byte [rsi+0x1], 0x0",
    "jne     0x90d3e",
    "mov     r13d, eax",
    "test    edx, edx",
    "je      0x90ce8",
    "call    sub_90f10",
    "movsxd  rsi, dword [rel data_1687a4]",
    "mov     rcx, qword [rel data_168798]",
    "mov     rbx, qword [rcx+rsi*8]",
    "mov     rdx, rsi",
    "test    rbx, rbx",
    "je      0x90e4b",
    "xor     eax, eax",
    "test    bl, bl",
    "mov     dword [rel data_1687a4], r13d",
    "pop     rbx",
    "setne   al",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r14",
    "call    test_unop",
    "test    eax, eax",
    "jne     0x90e30",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "jmp     sub_904a0",
    "add     rax, 0x1",
    "cmp     r12d, eax",
    "jle     0x90e3d",
    "cmp     r12d, r13d",
    "jle     0x90e70",
    "test    r8b, r8b",
    "je      0x90d50",
    "lea     rsi, [rel data_120adb]  {\"`)' expected\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "xor     esi, esi",
    "mov     rdi, rax",
    "call    sub_873c0",
    "{ Does not return }",
    "cmp     byte [rbx], 0x29",
    "jne     0x90e7e",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "jmp     sub_90b70",
    "add     edi, 0x1",
    "mov     dword [rel data_1687a4], edi",
    "mov     rsi, qword [rcx+rax*8]",
    "xor     edx, 0x1",
    "mov     r8d, 0x1",
    "movzx   ebx, byte [rsi]",
    "call    sub_90cc0",
    "pop     rbx",
    "pop     r12",
    "test    eax, eax",
    "pop     r13",
    "pop     r14",
    "sete    al",
    "pop     rbp",
    "movzx   eax, al",
    "retn    ",
    "mov     dword [rel data_1687a4], eax",
    "lea     rsi, [rel data_120ae8]  {\"`)' expected, found %s\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "call    sub_873c0",
    "{ Does not return }",
    "cmp     byte [rbx+0x1], 0x0",
    "jne     0x90e7e",
    "add     edx, 0x1",
    "pop     rbx",
    "pop     r12",
    "mov     dword [rel data_1687a4], edx",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    "
  ]
}
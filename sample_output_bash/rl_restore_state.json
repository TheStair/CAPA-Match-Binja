{
  "address": "0xe02c0",
  "rules": [
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018"
  ],
  "disassembly": [
    "endbr64 ",
    "test    rdi, rdi",
    "je      0xe0442",
    "mov     eax, 0xffffffff",
    "retn    ",
    "mov     ecx, dword [rdi]",
    "lea     rdx, [rel rl_point]",
    "mov     dword [rdx], ecx",
    "mov     ecx, dword [rdi+0x4]",
    "lea     rdx, [rel rl_end]",
    "mov     dword [rdx], ecx",
    "mov     ecx, dword [rdi+0x8]",
    "lea     rdx, [rel rl_mark]",
    "mov     dword [rdx], ecx",
    "mov     rdx, qword [rdi+0x10]",
    "lea     rcx, [rel rl_line_buffer]",
    "mov     qword [rel data_169168], rdx",
    "mov     qword [rcx], rdx",
    "mov     ecx, dword [rdi+0xc]",
    "lea     rdx, [rel rl_line_buffer_len]",
    "mov     dword [rdx], ecx",
    "mov     rcx, qword [rdi+0x18]",
    "lea     rdx, [rel rl_undo_list]",
    "mov     qword [rdx], rcx",
    "mov     rcx, qword [rdi+0x20]",
    "lea     rdx, [rel rl_prompt]",
    "mov     qword [rdx], rcx",
    "movsxd  rcx, dword [rdi+0x28]",
    "lea     rdx, [rel rl_readline_state]",
    "mov     qword [rdx], rcx",
    "mov     ecx, dword [rdi+0x2c]",
    "lea     rdx, [rel rl_done]",
    "mov     dword [rdx], ecx",
    "mov     rcx, qword [rdi+0x30]",
    "lea     rdx, [rel _rl_keymap]",
    "mov     qword [rdx], rcx",
    "mov     rcx, qword [rdi+0x38]",
    "lea     rdx, [rel rl_last_func]",
    "mov     qword [rdx], rcx",
    "mov     ecx, dword [rdi+0x40]",
    "lea     rdx, [rel rl_insert_mode]",
    "mov     dword [rdx], ecx",
    "mov     ecx, dword [rdi+0x44]",
    "lea     rdx, [rel rl_editing_mode]",
    "mov     dword [rdx], ecx",
    "mov     rcx, qword [rdi+0x48]",
    "lea     rdx, [rel rl_executing_keyseq]",
    "mov     qword [rdx], rcx",
    "mov     ecx, dword [rdi+0x50]",
    "lea     rdx, [rel rl_key_sequence_length]",
    "mov     dword [rdx], ecx",
    "mov     rcx, qword [rdi+0x58]",
    "lea     rdx, [rel rl_instream]",
    "mov     qword [rdx], rcx",
    "mov     rcx, qword [rdi+0x60]",
    "lea     rdx, [rel rl_outstream]",
    "mov     qword [rdx], rcx",
    "mov     ecx, dword [rdi+0x54]",
    "lea     rdx, [rel rl_pending_input]",
    "mov     dword [rdx], ecx",
    "mov     rcx, qword [rdi+0x68]",
    "lea     rdx, [rel rl_executing_macro]",
    "mov     qword [rdx], rcx",
    "mov     ecx, dword [rdi+0x70]",
    "lea     rdx, [rel rl_catch_signals]",
    "mov     dword [rdx], ecx",
    "mov     ecx, dword [rdi+0x74]",
    "lea     rdx, [rel rl_catch_sigwinch]",
    "mov     dword [rdx], ecx",
    "mov     rcx, qword [rdi+0x78]",
    "lea     rdx, [rel rl_completion_entry_function]",
    "lea     rax, [rel rl_completer_word_break_characters]",
    "mov     dword [rel data_169190], 0x0",
    "mov     qword [rdx], rcx",
    "mov     rcx, qword [rdi+0x80]",
    "lea     rdx, [rel rl_menu_completion_entry_function]",
    "mov     qword [rdx], rcx",
    "mov     rcx, qword [rdi+0x88]",
    "lea     rdx, [rel rl_ignore_some_completions_function]",
    "mov     qword [rdx], rcx",
    "lea     rdx, [rel rl_attempted_completion_function]",
    "mov     rcx, qword [rdi+0x90]",
    "mov     qword [rdx], rcx",
    "mov     rdx, qword [rdi+0x98]",
    "mov     qword [rax], rdx",
    "xor     eax, eax",
    "retn    "
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
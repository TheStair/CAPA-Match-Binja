{
  "address": "0x101470",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "lea     rdx, [rel rl_end]",
    "lea     rax, [rel rl_point]",
    "lea     rdi, [rel rl_line_buffer]",
    "mov     eax, dword [rax]",
    "mov     r12d, dword [rdx]",
    "mov     rdx, qword [rdi]",
    "lea     r14d, [rax-0x1]",
    "cmp     r12d, eax",
    "je      0x101550",
    "movsxd  rax, r12d",
    "cmp     byte [rdx+rax], 0x7e",
    "jne     0x1014af",
    "test    r14d, r14d",
    "js      0x101540",
    "lea     rdi, [rel data_11fde9]",
    "call    tilde_expand",
    "mov     edx, r12d",
    "mov     rbx, rax",
    "jmp     0x1015d1",
    "movzx   esi, byte [rdx]",
    "mov     r15, rdx",
    "xor     ebx, ebx",
    "xor     r14d, r14d",
    "xor     eax, eax",
    "jmp     0x1014fb",
    "movsxd  rax, r14d",
    "lea     r15, [rdx+rax]",
    "mov     rbx, rax",
    "movzx   esi, byte [r15]",
    "cmp     sil, 0x7e",
    "je      0x1014fb",
    "mov     esi, r14d",
    "mov     rdi, rbx",
    "call    _rl_replace_text",
    "test    rbx, rbx",
    "je      0x10152a",
    "lea     rdx, [rdx+rax+0x1]",
    "mov     eax, r14d",
    "nop     dword [rax+rax]",
    "nop     dword [rax]",
    "add     rsp, 0x18",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0x10152a",
    "cmp     sil, 0x7e",
    "je      0x101578",
    "cmp     cl, 0x9",
    "je      0x101524",
    "lea     r14d, [rbx+0x1]",
    "movsxd  rbx, r14d",
    "mov     rax, rbx",
    "lea     r15, [rdx+rbx]",
    "jmp     0x1014f7",
    "cmp     al, 0x9",
    "je      0x1015f8",
    "mov     ecx, r13d",
    "sub     ecx, r14d",
    "lea     r12d, [rcx+0x1]",
    "add     ecx, 0x2",
    "movsxd  rcx, ecx",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x38], rcx",
    "call    malloc",
    "mov     rcx, qword [rbp-0x38]",
    "test    rax, rax",
    "mov     r8, rax",
    "je      0x10160b",
    "add     rdx, 0x1",
    "cmp     r12d, eax",
    "jg      0x101508",
    "movzx   esi, byte [r15]",
    "sub     rbx, 0x1",
    "cmp     ebx, 0xffffffff",
    "jne     0x1014d0",
    "mov     qword [rbp-0x40], rax",
    "mov     rsi, rcx",
    "xor     eax, eax",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "movsxd  r12, r12d",
    "mov     rdi, r8",
    "mov     rsi, r15",
    "mov     rdx, r12",
    "call    __strncpy_chk",
    "mov     byte [rax+r12], 0x0",
    "mov     rdi, rax",
    "mov     qword [rbp-0x38], rax",
    "call    tilde_expand",
    "mov     rdi, qword [rbp-0x38]",
    "mov     rbx, rax",
    "call    free",
    "mov     edx, r13d",
    "movzx   ecx, byte [rdx]",
    "mov     r13d, eax",
    "add     eax, 0x1",
    "cmp     cl, 0x20",
    "je      0x101524",
    "movzx   eax, byte [rdx+rbx]",
    "cmp     al, 0x20",
    "je      0x1015f8",
    "mov     r15, rdx",
    "xor     ebx, ebx",
    "xor     r14d, r14d",
    "xor     eax, eax"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xd98b0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "contain loop",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdi",
    "push    r14",
    "push    r13",
    "push    r12",
    "xor     r12d, r12d",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], 0x0",
    "call    __ctype_get_mb_cur_max",
    "movzx   ecx, byte [r15]",
    "test    cl, cl",
    "je      0xd9962",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xd9983",
    "lea     r13, [rel is_basic_table]",
    "xor     r14d, r14d",
    "mov     ebx, eax",
    "xor     r12d, r12d",
    "jmp     0xd990f",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x18",
    "mov     rax, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     eax, ecx",
    "mov     edx, 0x1",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [r13+rax*4]",
    "shr     eax, cl",
    "test    al, 0x1",
    "jne     0xd9900",
    "add     r15, rdx",
    "add     r12, 0x1",
    "movzx   ecx, byte [r15]",
    "test    cl, cl",
    "je      0xd9962",
    "movsxd  rdx, ebx",
    "lea     rcx, [rbp-0x40]",
    "mov     rsi, r15",
    "xor     edi, edi",
    "call    mbrtowc",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0xd9962",
    "cmp     rdx, 0xfffffffffffffffd",
    "jbe     0xd994f",
    "add     r15, rdx",
    "mov     r14, qword [rbp-0x40]",
    "add     r12, 0x1",
    "movzx   ecx, byte [r15]",
    "test    cl, cl",
    "jne     0xd990f",
    "mov     qword [rbp-0x40], r14",
    "mov     edx, 0x1"
  ]
}
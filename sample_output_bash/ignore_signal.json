{
  "address": "0x8a680",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "sub     rsp, 0x18",
    "test    edi, edi",
    "je      0x8a6d0",
    "lea     r13, [rel data_1611a0]",
    "movsxd  r12, edi",
    "test    byte [r13+r12*4], 0x40",
    "je      0x8a6b6",
    "cmp     edi, 0x41",
    "je      0x8a6d0",
    "add     rsp, 0x18",
    "mov     esi, 0x1",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "jmp     sub_88510",
    "test    edi, edi",
    "je      0x8a6ff",
    "lea     eax, [rdi-0x42]",
    "lea     r13, [rel data_1611a0]",
    "movsxd  r12, edi",
    "cmp     eax, 0x1",
    "ja      0x8a6e2",
    "mov     eax, dword [r13+r12*4]",
    "cmp     edi, 0x40",
    "jg      0x8a6ff",
    "mov     eax, dword [r13+r12*4]",
    "test    al, 0x40",
    "jne     0x8a704",
    "test    al, 0x8",
    "jne     0x8a6b6",
    "add     rsp, 0x18",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "lea     r14, [rel original_signals]",
    "lea     rax, [rel initialize_traps]",
    "cmp     qword [r14+r12*8], rax",
    "je      0x8a730",
    "test    al, 0x42",
    "je      0x8a718",
    "mov     esi, 0x1",
    "mov     dword [rbp-0x24], edi",
    "call    set_signal_handler",
    "mov     edi, dword [rbp-0x24]",
    "jmp     0x8a6b6",
    "xor     esi, esi",
    "mov     dword [rbp-0x24], edi",
    "call    set_signal_handler",
    "mov     edi, dword [rbp-0x24]",
    "mov     rsi, rax",
    "mov     qword [r14+r12*8], rax",
    "call    set_signal_handler",
    "cmp     qword [r14+r12*8], 0x1",
    "mov     edi, dword [rbp-0x24]",
    "mov     eax, dword [r13+r12*4]",
    "jne     0x8a704",
    "or      eax, 0x2",
    "mov     dword [r13+r12*4], eax",
    "jmp     0x8a704"
  ]
}
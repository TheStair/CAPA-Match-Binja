{
  "address": "0x94120",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "contain loop",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     qword [rbp-0x38], rsi",
    "test    rdi, rdi",
    "je      0x94228",
    "xor     ebx, ebx",
    "jmp     0x94210",
    "cmp     qword [rdi+0x10], 0x0",
    "je      0x94228",
    "add     rsp, 0x18",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     qword [rdi+0x8], 0x0",
    "je      0x94228",
    "mov     r14d, edx",
    "mov     r12d, ecx",
    "call    array_to_word_list",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x94228",
    "mov     rbx, rax",
    "jmp     0x941a9",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "test    rdi, rdi",
    "je      0x941ba",
    "mov     edi, 0x1",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x9422c",
    "cmp     byte [rdi], 0x0",
    "jne     0x94178",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     byte [r13], 0x0",
    "jmp     0x94189",
    "mov     rsi, qword [rbp-0x38]",
    "mov     edx, r14d",
    "xor     eax, eax",
    "call    sub_dd4b0",
    "mov     r13, rax",
    "mov     rax, qword [rbx+0x8]",
    "mov     rdi, qword [rax]",
    "test    rdi, rdi",
    "je      0x9419e",
    "mov     rbx, qword [rbx]",
    "mov     qword [rax], r13",
    "test    rbx, rbx",
    "je      0x941d8",
    "call    free",
    "mov     rax, qword [rbx+0x8]",
    "mov     eax, r12d",
    "mov     ecx, r12d",
    "mov     edx, r12d",
    "mov     rsi, r15",
    "and     eax, 0x80",
    "cmp     eax, 0x1",
    "sbb     edi, edi",
    "sar     ecx, 0x3",
    "and     edi, 0x16",
    "sar     edx, 0x5",
    "and     ecx, 0x8",
    "add     edi, 0x2a",
    "and     edx, 0x1",
    "call    string_list_pos_params",
    "mov     rdi, r15",
    "mov     rbx, rax",
    "call    dispose_words"
  ]
}
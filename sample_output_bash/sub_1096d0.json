{
  "address": "0x1096d0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using Curve25519/71854cb5ec3d414da844548a1a695b22",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x78",
    "mov     dword [rbp-0x78], esi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel rl_point]",
    "mov     ebx, dword [rax]",
    "test    edi, edi",
    "js      0x109ac8",
    "neg     edi",
    "call    sub_107880",
    "lea     rax, [rel rl_point]",
    "mov     dword [rbp-0x74], ebx",
    "mov     ebx, dword [rax]",
    "jmp     0x109713",
    "call    sub_107a50",
    "lea     rax, [rel rl_point]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x74], eax",
    "mov     r14d, dword [rbp-0x74]",
    "mov     edi, ebx",
    "mov     qword [rbp-0x60], 0x0",
    "mov     esi, r14d",
    "call    rl_modifying",
    "cmp     r14d, ebx",
    "jle     0x109824",
    "lea     rax, [rel rl_point]",
    "mov     ecx, dword [rbp-0x74]",
    "mov     dword [rax], ecx",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x109bde",
    "mov     dword [rbp-0x7c], 0x0",
    "lea     r15, [rel rl_line_buffer]",
    "jmp     0x1097c5",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x78",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, qword [r15]",
    "mov     esi, ebx",
    "call    _rl_char_value",
    "mov     r13d, eax",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x1097f0",
    "lea     r12d, [rbx+0x1]",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "je      0x109890",
    "cmp     dword [rbp-0x78], 0x3",
    "je      0x109858",
    "lea     rax, [rel _rl_allow_pathname_alphabetic_chars]",
    "mov     edi, dword [rax]",
    "test    edi, edi",
    "jne     0x109748",
    "mov     rdi, qword [r15]",
    "mov     ecx, 0x1",
    "mov     edx, 0x1",
    "mov     esi, ebx",
    "call    sub_107460",
    "mov     r12d, eax",
    "jmp     0x1097f4",
    "mov     esi, dword [rbp-0x7c]",
    "test    esi, esi",
    "je      0x1098b0",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0x109789",
    "mov     esi, r13d",
    "lea     rdi, [rel data_122a74]  {\"/-_=~.#$\"}",
    "and     esi, 0x7f",
    "call    strchr",
    "test    rax, rax",
    "je      0x109815",
    "mov     dword [rbp-0x7c], 0x0",
    "mov     ebx, r12d",
    "cmp     dword [rbp-0x74], ebx",
    "jg      0x1097c5",
    "mov     edi, r13d",
    "call    iswalnum",
    "test    eax, eax",
    "jne     0x109763",
    "call    __ctype_get_mb_cur_max",
    "mov     dword [rbp-0x7c], 0x1",
    "cmp     rax, 0x1",
    "je      0x1098d3",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "je      0x109793",
    "cmp     dword [rbp-0x78], 0x1",
    "je      0x1098d3",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x109900",
    "call    __ctype_b_loc",
    "movzx   r14d, r13b",
    "mov     rax, qword [rax]",
    "test    byte [rax+r14*2+0x1], 0x2",
    "je      0x1097b3",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "je      0x109b40",
    "call    __ctype_b_loc",
    "movzx   r14d, r13b",
    "mov     rax, qword [rax]",
    "test    byte [rax+r14*2+0x1], 0x1",
    "je      0x1097b3",
    "lea     rax, [rel rl_byte_oriented]",
    "mov     ecx, dword [rax]",
    "test    ecx, ecx",
    "jne     0x109793",
    "mov     eax, dword [rbp-0x78]",
    "mov     dword [rbp-0x90], eax",
    "mov     rax, qword [r15]",
    "movsxd  rbx, ebx",
    "mov     byte [rax+rbx], r13b",
    "mov     ebx, r12d",
    "call    __ctype_toupper_loc",
    "mov     rax, qword [rax]",
    "mov     r13d, dword [rax+r14*4]",
    "jmp     0x1097b3",
    "mov     dword [rbp-0x90], 0x1",
    "jmp     0x109909",
    "call    __ctype_tolower_loc",
    "mov     rax, qword [rax]",
    "mov     r13d, dword [rax+r14*4]",
    "mov     dword [rbp-0x90], 0x2",
    "jmp     0x109909",
    "mov     rax, qword [r15]",
    "cmp     dword [rbp-0x90], 0x1",
    "movsx   r13d, byte [rax+rbx]",
    "mov     edi, r13d",
    "mov     dword [rbp-0x64], r13d",
    "mov     dword [rbp-0x90], edi",
    "jne     0x109961",
    "test    rax, rax",
    "je      0x109ae0",
    "mov     edx, dword [rbp-0x74]",
    "mov     rsi, qword [r15]",
    "movsxd  rax, ebx",
    "lea     rcx, [rbp-0x60]",
    "lea     rdi, [rbp-0x64]",
    "mov     qword [rbp-0x88], rax",
    "sub     edx, ebx",
    "add     rsi, rax",
    "mov     rbx, rax",
    "movsxd  rdx, edx",
    "call    mbrtowc",
    "mov     r14, rax",
    "cmp     rax, 0xfffffffffffffffd",
    "ja      0x109a80",
    "call    iswupper",
    "mov     ebx, r12d",
    "test    eax, eax",
    "je      0x1097c0",
    "call    iswlower",
    "mov     ebx, r12d",
    "test    eax, eax",
    "je      0x1097c0",
    "mov     dword [rbp-0x64], 0x0",
    "xor     edi, edi",
    "xor     r13d, r13d",
    "jmp     0x10994e",
    "mov     r13d, dword [rbp-0x64]",
    "mov     edi, r13d",
    "cmp     dword [rbp-0x74], ebx",
    "jle     0x109824",
    "mov     edi, dword [rbp-0x90]",
    "call    towlower",
    "mov     esi, eax",
    "mov     edi, dword [rbp-0x90]",
    "call    towupper",
    "mov     esi, eax",
    "jmp     0x10997e",
    "cmp     dword [rbp-0x90], 0x1",
    "mov     dword [rbp-0x90], edi",
    "je      0x109aa2",
    "mov     ebx, r12d",
    "jmp     0x1097c0",
    "lea     rbx, [rbp-0x58]",
    "lea     r13, [rbp-0x50]",
    "mov     qword [rbp-0x58], 0x0",
    "mov     rdx, rbx",
    "mov     rdi, r13",
    "call    wcrtomb",
    "mov     r8d, eax",
    "test    eax, eax",
    "js      0x109b50",
    "cmp     esi, r13d",
    "je      0x109bd6",
    "mov     esi, dword [rbp-0x64]",
    "mov     rdx, rbx",
    "mov     rdi, r13",
    "mov     qword [rbp-0x58], 0x0",
    "call    wcrtomb",
    "mov     r8d, eax",
    "test    eax, eax",
    "jns     0x1099ad",
    "mov     r9, qword [rbp-0x88]",
    "movsxd  r11, eax",
    "add     r9, qword [r15]",
    "movsxd  r11, r14d",
    "mov     ecx, 0x11",
    "mov     rdi, r13",
    "mov     dword [rbp-0x80], r14d",
    "mov     r9, qword [rbp-0x88]",
    "add     r9, qword [r15]",
    "mov     rdx, r11",
    "mov     qword [rbp-0x98], r11",
    "mov     rsi, r9",
    "mov     qword [rbp-0x90], r9",
    "call    __strncpy_chk",
    "mov     r8d, dword [rbp-0x80]",
    "mov     r11, qword [rbp-0x98]",
    "mov     r9, qword [rbp-0x90]",
    "jmp     0x1099ba",
    "lea     rbx, [rel rl_end]",
    "mov     eax, dword [rbx]",
    "cmp     r14, r11",
    "je      0x109bc0",
    "movsxd  rax, r8d",
    "mov     byte [rbp+rax-0x50], 0x0",
    "test    r8d, r8d",
    "jle     0x1099c7",
    "mov     rdx, r14",
    "mov     rsi, r13",
    "mov     rdi, r9",
    "mov     ebx, r12d",
    "call    memcpy",
    "jmp     0x1097c0",
    "mov     rcx, qword [rbp-0x88]",
    "movsxd  r10, eax",
    "sub     r10, rcx",
    "mov     ecx, r8d",
    "sub     ecx, r14d",
    "mov     dword [rbp-0x98], ecx",
    "cmp     r11, r14",
    "jb      0x109af8",
    "mov     rdx, r11",
    "mov     rsi, r13",
    "mov     rdi, r9",
    "mov     qword [rbp-0x88], r11",
    "mov     qword [rbp-0x90], r10",
    "call    memcpy",
    "mov     rdx, qword [rbp-0x90]",
    "mov     r11, qword [rbp-0x88]",
    "lea     rsi, [rax+r14]",
    "sub     rdx, r14",
    "lea     rdi, [rax+r11]",
    "call    memmove",
    "jmp     0x109a5c",
    "lea     edi, [r10+0x2]",
    "add     r8d, eax",
    "mov     qword [rbp-0x90], r11",
    "sub     edi, r14d",
    "lea     edi, [rdi+r8]",
    "call    rl_extend_line_buffer",
    "mov     rax, qword [rbp-0x88]",
    "mov     r8, qword [r15]",
    "movsxd  rdx, dword [rbx]",
    "mov     r11, qword [rbp-0x90]",
    "add     r8, rax",
    "sub     rdx, rax",
    "lea     rsi, [r8+r14]",
    "lea     rdi, [r8+r11]",
    "mov     qword [rbp-0x88], r8",
    "sub     rdx, r14",
    "call    memmove",
    "mov     rdx, qword [rbp-0x90]",
    "mov     rdi, qword [rbp-0x88]",
    "mov     rsi, r13",
    "call    memcpy",
    "mov     ecx, dword [rbp-0x98]",
    "mov     eax, dword [rbx]",
    "mov     rdx, qword [r15]",
    "add     eax, ecx",
    "mov     dword [rbx], eax",
    "cdqe    ",
    "lea     ebx, [r12+rcx]",
    "mov     byte [rdx+rax], 0x0",
    "add     dword [rbp-0x74], ecx",
    "jmp     0x1097c0"
  ]
}
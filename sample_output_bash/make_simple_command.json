{
  "address": "0x43740",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "mov     r13, rsi",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "mov     rbx, rdx",
    "sub     rsp, 0x10",
    "test    rdx, rdx",
    "je      0x43828",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x4388e",
    "test    r12, r12",
    "je      0x437c0",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     edi, 0x18",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x438a3",
    "test    r13, r13",
    "je      0x437ae",
    "mov     r13, qword [rbx+0x18]",
    "lea     rdx, [rel wlcache]",
    "movq    xmm1, r12",
    "movq    xmm0, qword [r13+0x8]",
    "mov     eax, dword [rdx+0xc]",
    "punpcklqdq xmm0, xmm1",
    "test    eax, eax",
    "jle     0x43800",
    "mov     esi, 0x18",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel line_number]",
    "pxor    xmm0, xmm0",
    "mov     qword [rbx+0x18], r14",
    "mov     dword [r14], 0x0",
    "mov     eax, dword [rax]",
    "mov     qword [rbx+0x10], 0x0",
    "mov     qword [rbx], 0x4",
    "mov     dword [r14+0x4], eax",
    "lea     rax, [rel parser_state]",
    "movups  xmmword [r14+0x8], xmm0",
    "or      dword [rax], 0x80000",
    "jmp     0x43765",
    "add     rsp, 0x10",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     rax, r13",
    "nop     dword [rax+rax]",
    "mov     edi, 0x10",
    "movaps  xmmword [rbp-0x30], xmm0",
    "call    malloc",
    "test    rax, rax",
    "je      0x31d5f",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "mov     rdx, rax",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "jne     0x437d0",
    "mov     rax, qword [rbx+0x18]",
    "mov     rcx, qword [rax+0x10]",
    "mov     qword [rdx], rcx",
    "mov     qword [rax+0x10], r13",
    "add     rsp, 0x10",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     esi, 0x10",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movdqa  xmm0, xmmword [rbp-0x30]",
    "jmp     0x4379a",
    "movups  xmmword [rax], xmm0",
    "mov     qword [r13+0x8], rax",
    "lea     rax, [rel parser_state]",
    "and     dword [rax], 0xfff7ffff"
  ]
}
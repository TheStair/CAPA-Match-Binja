{
  "address": "0x56620",
  "rules": [
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/bfdff12b2adb42709a78f0e77631902b",
    "PEB access/684066f105bd43c0a5be1ea6f2b60301",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "hash data using aphash/416ed7212e694999bd9567d4aa818bae",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "encrypt data using HC-128/e8f9b1d76e624bf6b554df630e614cdc"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "mov     r13d, edi",
    "push    r12",
    "lea     r12, [rel data_11fee1]  {\"SHLVL\"}",
    "push    rbx",
    "mov     rdi, r12",
    "sub     rsp, 0x28",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "call    find_variable",
    "test    rax, rax",
    "je      0x5666d",
    "xor     ebx, ebx",
    "mov     qword [rbp-0x38], 0x0",
    "add     ebx, r13d",
    "lea     r13, [rel shell_level]",
    "mov     dword [r13], ebx",
    "js      0x56748",
    "mov     rdi, rax",
    "call    get_variable_value",
    "test    rax, rax",
    "je      0x5666d",
    "xor     eax, eax",
    "mov     ebx, 0x30",
    "cmp     ebx, 0x3e7",
    "jg      0x567b8",
    "cmp     byte [rax], 0x0",
    "jne     0x56718",
    "lea     rsi, [rbp-0x2d]",
    "xor     edx, edx",
    "mov     rdi, r12",
    "call    bind_variable",
    "or      dword [rax+0x28], 0x1",
    "lea     rax, [rel array_needs_making]",
    "mov     dword [rax], 0x1",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x567e6",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_132c38]  {\"shell level (%d) too high, reset\u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     esi, ebx",
    "mov     ebx, 0x31",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    internal_warning",
    "mov     eax, 0x1",
    "jmp     0x5674f",
    "cmp     ebx, 0x9",
    "jle     0x567eb",
    "lea     rsi, [rbp-0x38]",
    "mov     rdi, rax",
    "call    legal_number",
    "test    eax, eax",
    "je      0x5666d",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "mov     dword [r13], eax",
    "add     ebx, 0x30",
    "jmp     0x56753",
    "movsxd  rax, ebx",
    "cmp     ebx, 0x63",
    "jg      0x56760",
    "mov     ebx, dword [rbp-0x38]",
    "add     ebx, r13d",
    "lea     r13, [rel shell_level]",
    "mov     dword [r13], ebx",
    "jns     0x5668b",
    "mov     byte [rbp-0x2d], bl",
    "mov     byte [rbp-0x2c], 0x0",
    "jmp     0x566d5",
    "imul    rax, rax, 0x51eb851f",
    "mov     edx, ebx",
    "mov     byte [rbp-0x2a], 0x0",
    "sar     edx, 0x1f",
    "sar     rax, 0x25",
    "sub     eax, edx",
    "lea     edx, [rax+0x30]",
    "imul    eax, eax, 0x64",
    "mov     byte [rbp-0x2d], dl",
    "sub     ebx, eax",
    "mov     rax, 0xcccccccccccccccd",
    "movsxd  rbx, ebx",
    "mul     rbx",
    "mov     qword [rbp-0x38], rbx",
    "shr     rdx, 0x3",
    "lea     eax, [rdx+0x30]",
    "mov     byte [rbp-0x2c], al",
    "lea     rax, [rdx+rdx*4]",
    "add     rax, rax",
    "sub     rbx, rax",
    "add     ebx, 0x30",
    "mov     byte [rbp-0x2b], bl",
    "jmp     0x566d5",
    "imul    rax, rax, 0x66666667",
    "mov     edx, ebx",
    "mov     byte [rbp-0x2b], 0x0",
    "sar     edx, 0x1f",
    "sar     rax, 0x22",
    "sub     eax, edx",
    "lea     edx, [rax+0x30]",
    "lea     eax, [rax+rax*4]",
    "add     eax, eax",
    "mov     byte [rbp-0x2d], dl",
    "sub     ebx, eax",
    "add     ebx, 0x30",
    "mov     byte [rbp-0x2c], bl",
    "nop     dword [rax+rax]"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x5d790",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "push    r14 {__saved_r14}",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "mov     r12, rdi",
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0x18",
    "mov     eax, dword [rdi+0x28]",
    "not     eax",
    "test    eax, 0x300000",
    "je      0x5d870",
    "add     rsp, 0x18",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "jmp     sub_5d590",
    "mov     rbx, qword [rdi]",
    "mov     rdi, qword [rel data_1599e0]",
    "test    rdi, rdi",
    "je      0x5d7fd",
    "add     rsp, 0x18",
    "mov     rdi, r12",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "jmp     dispose_variable",
    "movsx   r14d, byte [rbx]",
    "lea     r13, [rel data_1599f0]",
    "jmp     0x5d7e5",
    "movsx   eax, byte [rdi]",
    "sub     eax, r14d",
    "jne     0x5d7f9",
    "test    eax, eax",
    "jle     0x5d7d8",
    "mov     rsi, rbx",
    "call    strcmp",
    "test    eax, eax",
    "je      0x5d818",
    "mov     rdi, qword [r13]",
    "add     r13, 0x10",
    "test    rdi, rdi",
    "je      0x5d7fd",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     r13, [rax+0x1]",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x5d883",
    "mov     rsi, r13",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax  {0x0}",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel tempvar_list]",
    "mov     rsi, rbx",
    "mov     rdi, r14",
    "mov     rcx, qword [rax]  {tempvar_list}",
    "lea     rax, [rel tvlist_ind]",
    "movsxd  r15, dword [rax]  {tvlist_ind}",
    "mov     qword [rbp-0x38 {var_40_1}], rcx",
    "lea     edx, [r15+0x1]",
    "mov     dword [rax], edx  {tvlist_ind}",
    "mov     rdx, r13",
    "call    __strcpy_chk",
    "mov     rcx, qword [rbp-0x38 {var_40_1}]",
    "mov     qword [rcx+r15*8], r14",
    "jmp     0x5d7fd"
  ]
}
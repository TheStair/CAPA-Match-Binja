{
  "address": "0x6d3a0",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "hash data with CRC32/9576910bfc754e15b215ae4d3227da01",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "hash data using aphash/ef28217586414e46ab1e9ea5fafa8c30",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "encrypt data using XTEA/10ee0a8316f84c4781969a6e3e0ea247/37fcdffa79f84274a0a7280c1c8f403a",
    "decompress data using aPLib/0343e5a0b17b4d2cad7af66693469884",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "encrypt data using TEA/d92840dc497d469aaa95c1543453a00c/2595307ea71d425c8c0b4e2392af2cf7",
    "decrypt data using TEA/066cb8df2a774080be2d27329c2aadaf/ba22e5cbb4214cdaa9e658605c2a045c",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "encrypt data using XXTEA/41ded627096c472a8da56bad13f19605/03953aa079f14ec384dfb3745989fa21"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rsi",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdx",
    "sub     rsp, 0x38",
    "mov     qword [rbp-0x58], rsi",
    "mov     dword [rbp-0x4c], ecx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], 0x0",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x6d5a0  {\"Mc?H\"}",
    "movsxd  r15, dword [r15]",
    "mov     qword [rbp-0x48], 0x0",
    "mov     r14, r15",
    "lea     r12, [r13+r15]",
    "jmp     0x6d409",
    "mov     rax, qword [rbp-0x58]",
    "movsxd  r15, dword [rax]",
    "lea     r12, [r13+r15]",
    "mov     r14, r15",
    "mov     rdi, r12",
    "call    strlen",
    "add     rax, r15",
    "mov     qword [rbp-0x48], rax",
    "movsx   esi, byte [r12]",
    "mov     eax, esi",
    "test    esi, esi",
    "je      0x6d4b0",
    "lea     rax, [rel data_1680a0]",
    "test    byte [rbp-0x4c], 0x4",
    "jne     0x6d4c9",
    "mov     r12d, dword [rbp-0x4c]",
    "shr     r12d, 0x1",
    "jmp     0x6d462",
    "mov     rbx, qword [rbp-0x58]",
    "mov     dword [rbx], r14d",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x6d5d6",
    "xor     eax, eax",
    "test    byte [rbp-0x4c], 0x1",
    "je      0x6d5c0",
    "cmp     esi, 0x5c",
    "je      0x6d4f8",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [rbp-0x58]",
    "mov     edx, r14d",
    "mov     rdi, r13",
    "mov     esi, dword [rax]",
    "call    substring",
    "jmp     0x6d4c9",
    "cmp     byte [r13+r15+0x1], 0x0",
    "je      0x6d4b0",
    "test    r12b, 0x1",
    "je      0x6d47a",
    "add     r14d, 0x1",
    "jmp     0x6d491",
    "cmp     byte [rbx], al",
    "jne     0x6d484",
    "cmp     esi, 0x5b",
    "je      0x6d580",
    "lea     rax, [rel locale_mb_cur_max]",
    "cmp     dword [rax], 0x1",
    "jg      0x6d428",
    "mov     rdi, rbx",
    "call    mbschr",
    "test    rax, rax",
    "jne     0x6d4bd",
    "cmp     byte [rbx+0x1], 0x0",
    "je      0x6d4bd",
    "xor     edx, edx",
    "mov     esi, r14d",
    "mov     rdi, r13",
    "call    sub_111360",
    "movsxd  rdx, eax",
    "cmp     byte [r13+rdx], 0x5d",
    "cmove   r14d, eax",
    "jmp     0x6d491",
    "movsxd  rdx, r14d",
    "lea     rdi, [rel is_basic_table]",
    "lea     rsi, [r13+rdx]",
    "movzx   ecx, byte [rsi]",
    "mov     eax, ecx",
    "shr     al, 0x5",
    "and     eax, 0x7",
    "mov     eax, dword [rdi+rax*4]",
    "shr     eax, cl",
    "and     eax, 0x1",
    "je      0x6d510",
    "add     r14d, 0x1",
    "lea     rax, [rel locale_utf8locale]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x6d538",
    "add     r14d, eax",
    "mov     rax, qword [rbp-0x48]",
    "xor     edi, edi",
    "lea     rcx, [rbp-0x40]",
    "mov     r15, qword [rbp-0x40]",
    "sub     rax, rdx",
    "mov     rdx, rax",
    "call    mbrtowc",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x6d568",
    "test    cl, cl",
    "js      0x6d538",
    "test    rax, rax",
    "jne     0x6d450",
    "mov     qword [rbp-0x40], r15",
    "add     r14d, 0x1",
    "jmp     0x6d453",
    "mov     eax, 0x1",
    "jne     0x6d450",
    "add     r14d, 0x1",
    "jmp     0x6d4a1",
    "movsxd  r15, r14d",
    "movsx   esi, byte [r13+r15]",
    "mov     eax, esi",
    "test    esi, esi",
    "je      0x6d4b0",
    "add     r14d, 0x1",
    "jmp     0x6d4a1",
    "movsxd  r15, r14d",
    "movsx   esi, byte [r13+r15]",
    "mov     eax, esi",
    "test    esi, esi",
    "jne     0x6d462"
  ]
}
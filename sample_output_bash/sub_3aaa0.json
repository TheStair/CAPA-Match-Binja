{
  "address": "0x3aaa0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "xor     edx, edx",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     ebx, edi",
    "sub     rsp, 0x8",
    "lea     rsi, [rel word_token_alist]",
    "call    find_token_in_alist",
    "test    rax, rax",
    "je      0x3aad8",
    "lea     rsi, [rel other_token_alist]",
    "xor     edx, edx",
    "mov     edi, ebx",
    "call    find_token_in_alist",
    "test    rax, rax",
    "jne     0x3aac6",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    ",
    "lea     rdx, [rel current_token]",
    "mov     edx, dword [rdx]",
    "cmp     edx, 0x11d",
    "je      0x3abd0",
    "lea     rax, [rel yylval]",
    "lea     rsi, [rel data_1204ae[4]]  {\" \"}",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "jne     0x3abb6",
    "jg      0x3ab90",
    "add     rsp, 0x8",
    "mov     rdi, rax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "jmp     string_list_internal",
    "jmp     0x3aac6",
    "cmp     edx, 0x11e",
    "jne     0x3aac6",
    "cmp     edx, 0x11a",
    "jle     0x3ab38",
    "lea     rax, [rel yylval]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x3aac6",
    "cmp     edx, 0x118",
    "jle     0x3aac6",
    "cmp     edx, 0x11c",
    "jne     0x3aac6",
    "lea     rsi, [rel data_11f159]",
    "lea     rax, [rel yylval]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0x3aac6",
    "lea     rax, [rel yylval]",
    "movsxd  rdi, dword [rax]",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "jmp     itos",
    "mov     r13, qword [rax]",
    "mov     rdi, r13",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x3abeb",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "add     rsp, 0x8",
    "mov     rdx, rbx",
    "mov     rsi, r13",
    "mov     rdi, r12",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "jmp     __strcpy_chk"
  ]
}
{
  "address": "0x8e2b0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "check OS version/cc7cda0bb6bc4f05b55778302fc52afe",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "lea     rax, [rel terminating_signal]",
    "mov     rbp, rsp",
    "push    r12",
    "push    rbx",
    "mov     edx, dword [rax]",
    "mov     ebx, edi",
    "mov     dword [rax], 0x0",
    "mov     dword [rel data_161100], edx",
    "cmp     edi, 0x2",
    "je      0x8e40d",
    "test    byte [rel data_1611a4+4], 0x1",
    "jne     0x8e469",
    "lea     rax, [rel interactive_shell]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "jne     0x8e3aa",
    "lea     rax, [rel pending_traps]",
    "xor     edi, edi",
    "lea     rsi, [rel data_120a87]  {\"interrupt trap\"}",
    "mov     dword [rel data_168788], edi",
    "mov     dword [rax+0x8], edi",
    "mov     edi, 0x2",
    "call    sub_8e640",
    "lea     rax, [rel interactive_shell]",
    "cmp     dword [rax], 0x0",
    "lea     rax, [rel this_shell_builtin]",
    "je      0x8e3d3",
    "lea     rdx, [rel interactive_shell]",
    "lea     rax, [rel this_shell_builtin]",
    "cmp     dword [rdx], 0x0",
    "mov     rcx, qword [rax]",
    "jne     0x8e4a3",
    "lea     rax, [rel interactive]",
    "cmp     dword [rax], 0x0",
    "je      0x8e2ec",
    "lea     rax, [rel this_shell_builtin]",
    "lea     rcx, [rel read_builtin]",
    "cmp     qword [rax], rcx",
    "je      0x8e4f4",
    "lea     rsi, [rel read_builtin]",
    "cmp     qword [rax], rsi",
    "je      0x8e435",
    "lea     rdx, [rel interactive]",
    "cmp     dword [rdx], 0x0",
    "jne     0x8e3d3",
    "cmp     rcx, qword [rel data_157f90]",
    "jne     0x8e3df",
    "cmp     edi, 0x1",
    "je      0x8e503",
    "cmp     dword [rel data_161190], 0x0",
    "je      0x8e303",
    "lea     r12, [rel subshell_environment]",
    "mov     eax, dword [r12]",
    "cmp     ebx, 0x1",
    "je      0x8e3eb",
    "cmp     dword [rel data_161190], 0x0",
    "je      0x8e3df",
    "lea     r12, [rel subshell_environment]",
    "jmp     0x8e317",
    "lea     rsi, [rel read_builtin]",
    "cmp     qword [rax], rsi",
    "jne     0x8e3df",
    "lea     rax, [rel remember_on_history]",
    "cmp     dword [rax], 0x0",
    "je      0x8e2ec",
    "cmp     edi, 0xf",
    "je      0x8e503",
    "jmp     0x8e4d0",
    "lea     rdx, [rel interactive]",
    "and     eax, 0x24",
    "or      eax, dword [rdx]",
    "je      0x8e403",
    "test    byte [r12], 0x24",
    "je      0x8e403",
    "mov     edi, dword [rel data_168720]",
    "lea     rdx, [rel data_168724]",
    "mov     esi, 0x1",
    "call    tcsetattr",
    "xor     eax, eax",
    "lea     r12, [rel subshell_environment]",
    "mov     dword [rel data_161190], eax",
    "jmp     0x8e317",
    "cmp     dword [rel data_161190], 0x0",
    "je      0x8e3df",
    "call    maybe_save_shell_history",
    "jmp     0x8e2ec",
    "lea     rax, [rel this_shell_builtin]",
    "mov     edi, dword [rel data_168720]",
    "lea     rdx, [rel data_168724]",
    "mov     esi, 0x1",
    "call    tcsetattr",
    "xor     ecx, ecx",
    "mov     dword [rel data_161190], ecx",
    "jmp     0x8e303",
    "call    end_job_control",
    "jmp     0x8e322",
    "call    hangup_all_jobs",
    "jmp     0x8e317",
    "mov     edx, dword [rel data_161064]",
    "test    edx, edx",
    "je      0x8e331",
    "call    procsub_clear",
    "lea     rax, [rel funcnest]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel breaking]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel continuing]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel loop_level]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel wait_intr_flag]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel return_catch_flag]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel comsub_ignore_return]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel executing_list]",
    "mov     dword [rax], 0x0",
    "call    run_exit_trap",
    "mov     edi, ebx",
    "call    sub_8a8e0",
    "{ Does not return }",
    "call    sub_875b0"
  ]
}
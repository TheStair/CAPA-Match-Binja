{
  "address": "0x3b600",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check Internet connectivity via WinINet/43caef4d101b49198d8cca771ce14a21",
    "check OS version/db23a9b0019e461d9805d8493bc39112",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "log keystrokes via raw input data/4762f396f48d4e318a08125296476d20",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "contain loop",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check OS version/1297d641bc10439a81c4e39d3161d5ae"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "test    rdi, rdi",
    "jne     0x3b788",
    "lea     rax, [rel line_number]",
    "mov     rdx, rbx",
    "lea     rsi, [rel data_1217ad[6]]  {\"%s\"}",
    "mov     edi, dword [rax]",
    "xor     eax, eax",
    "call    parser_error",
    "lea     rax, [rel interactive]",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "je      0x3b730",
    "lea     r14, [rel current_token]",
    "mov     edi, dword [r14]",
    "test    edi, edi",
    "je      0x3b6b8",
    "lea     rdx, [rel executing_builtin]",
    "mov     eax, 0x2",
    "mov     edx, dword [rdx]",
    "test    edx, edx",
    "je      0x3b755",
    "lea     rax, [rel EOF_Reached]",
    "mov     r11d, dword [rax]",
    "test    r11d, r11d",
    "je      0x3b730",
    "mov     r13, qword [rel data_160958]",
    "test    r13, r13",
    "je      0x3b6cf",
    "lea     r12, [rel EOF_Reached]",
    "mov     r10d, dword [r12]",
    "test    r10d, r10d",
    "je      0x3b6a0",
    "lea     rdx, [rel last_command_exit_value]",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_158490]",
    "mov     dword [rdx], eax",
    "mov     eax, dword [rdx]",
    "mov     dword [rel data_158490], eax",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     set_pipestatus_array",
    "lea     rax, [rel parse_and_execute_level]",
    "cmp     dword [rax], 0x1",
    "sbb     eax, eax",
    "and     al, 0x1",
    "add     eax, 0x101",
    "mov     dword [rax], 0x0",
    "jmp     0x3b730",
    "lea     r12, [rel EOF_Reached]",
    "mov     edi, dword [r12]",
    "test    edi, edi",
    "jne     0x3b656",
    "cmp     byte [r13], 0x0",
    "jne     0x3b800",
    "call    sub_3aaa0",
    "mov     r12, rax",
    "test    rax, rax",
    "jne     0x3b970",
    "mov     r13, qword [rel data_160958]",
    "test    r13, r13",
    "je      0x3b656",
    "lea     rax, [rel shell_eof_token]",
    "mov     edx, 0x5",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "je      0x3b7d0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f18b]  {\"syntax error\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, rax",
    "mov     rax, qword [rel data_160d88]",
    "mov     r12d, eax",
    "test    eax, eax",
    "je      0x3b83b",
    "mov     rdi, rax",
    "call    ansic_shouldquote",
    "test    eax, eax",
    "jne     0x3b9d7",
    "nop     dword [rax]",
    "cmp     byte [r13], 0x0",
    "jne     0x3b800",
    "lea     rsi, [rel data_1235d8]  {\"syntax error: unexpected end of \u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, rax",
    "jmp     0x3b6f8",
    "cmp     ebx, dword [r14]",
    "je      0x3b7d0",
    "mov     ecx, dword [r12]",
    "test    ecx, ecx",
    "jne     0x3b7f0",
    "mov     edi, 0x2",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x3b9f8",
    "movsxd  rdx, eax",
    "cmp     byte [r13+rdx], 0x0",
    "je      0x3b9c8",
    "cmp     byte [r12], 0x0",
    "je      0x3b9eb",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1235b0]  {\"syntax error near unexpected tok\u2026\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, r12",
    "mov     rsi, rax",
    "lea     rax, [rel line_number]",
    "mov     edi, dword [rax]",
    "xor     eax, eax",
    "call    parser_error",
    "mov     rdi, r12",
    "call    free",
    "lea     rax, [rel interactive]",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "jne     0x3b730",
    "lea     rax, [rel line_number]",
    "lea     rsi, [rel data_1217ad[6]]  {\"%s\"}",
    "mov     edi, dword [rax]",
    "xor     eax, eax",
    "call    parser_error",
    "xor     edi, edi",
    "lea     rsi, [rel data_123380]  {\"unexpected EOF while looking for\u2026\"}",
    "call    dcgettext",
    "mov     edx, ebx",
    "mov     rsi, rax",
    "lea     rax, [rel line_number]",
    "mov     edi, dword [rax]",
    "xor     eax, eax",
    "call    parser_error",
    "jmp     0x3b70f",
    "mov     dword [r12], 0x0",
    "jmp     0x3b730",
    "nop     dword [rax+rax]",
    "mov     esi, 0x2",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "movzx   eax, byte [r13]",
    "mov     byte [rbx+0x1], 0x0",
    "mov     byte [rbx], al",
    "sub     r12d, 0x1",
    "jne     0x3b81d",
    "movsxd  r12, r12d",
    "mov     rdi, r12",
    "mov     r12, rbx",
    "call    free",
    "jmp     0x3b97c",
    "xor     esi, esi",
    "mov     rdi, r12",
    "call    sub_d80c0",
    "mov     rbx, rax",
    "jmp     0x3b8a0",
    "lea     rax, [rel interactive]",
    "mov     esi, dword [rax]",
    "test    esi, esi",
    "je      0x3b730",
    "call    sub_395c0",
    "jmp     0x3b730",
    "jmp     0x3b83b",
    "sub     r12, 0x1",
    "test    r12d, r12d",
    "jne     0x3b820",
    "cmp     al, 0x20",
    "jne     0x3b8b0",
    "movzx   eax, byte [r13+r12]",
    "lea     edx, [rax-0x9]",
    "cmp     dl, 0x1",
    "jbe     0x3b832",
    "lea     r14d, [r12+0x1]",
    "movsxd  rbx, r12d",
    "lea     r15, [rel 0x11f16d]  {\" \\n\\t;|&\"}",
    "jmp     0x3b8d2",
    "movsx   esi, byte [r13+rbx]",
    "test    sil, sil",
    "je      0x3b8c8",
    "sub     rbx, 0x1",
    "mov     esi, ebx",
    "test    ebx, ebx",
    "je      0x3b918",
    "mov     rdi, r15",
    "call    mbschr",
    "test    rax, rax",
    "je      0x3b8c8",
    "test    r14d, r14d",
    "je      0x3b83b",
    "mov     esi, ebx",
    "cmp     r14d, ebx",
    "jne     0x3b921",
    "movsxd  rdx, esi",
    "sub     r12d, esi",
    "lea     rax, [r13+rdx]",
    "lea     rdx, [r13+rdx+0x1]",
    "add     r12, rdx",
    "nop     dword [rax]",
    "nop     dword [rax]",
    "add     rax, 0x1",
    "add     esi, 0x1",
    "cmp     r12, rax",
    "jne     0x3b938",
    "cmp     dl, 0x20",
    "jne     0x3b954",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f174]  {\"syntax error near `%s'\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     rdx, rbx",
    "mov     rsi, rax",
    "lea     rax, [rel line_number]",
    "mov     edi, dword [rax]",
    "xor     eax, eax",
    "call    parser_error",
    "mov     rdi, rbx",
    "call    free",
    "jmp     0x3b88d",
    "movzx   edx, byte [rax]",
    "lea     ecx, [rdx-0x9]",
    "cmp     cl, 0x1",
    "jbe     0x3b948",
    "test    r14d, r14d",
    "jne     0x3b8f8",
    "lea     rax, [rel interactive]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "jne     0x3b730",
    "mov     edx, r14d",
    "mov     rdi, r13",
    "call    substring",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x3b85c",
    "test    esi, esi",
    "je      0x3b83b",
    "jmp     0x3b88d"
  ]
}
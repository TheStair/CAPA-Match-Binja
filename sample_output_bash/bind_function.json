{
  "address": "0x60910",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "xor     edx, edx",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "mov     r12, rsi",
    "push    rbx",
    "sub     rsp, 0x8",
    "lea     r14, [rel shell_functions]",
    "mov     rbx, qword [r14]",
    "mov     rsi, rbx",
    "call    hash_search",
    "test    rax, rax",
    "je      0x609e8",
    "mov     rdi, r13",
    "mov     r14, qword [r14]",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x60a3c",
    "mov     qword [rel data_1619d8], rbx",
    "mov     rbx, qword [rax+0x10]",
    "test    rbx, rbx",
    "je      0x609e8",
    "mov     rsi, rbx",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rdx, rbx",
    "mov     rsi, r13",
    "mov     rdi, r15",
    "call    __strcpy_chk",
    "mov     rsi, r14",
    "mov     rdi, r15",
    "mov     edx, 0x1",
    "call    hash_insert",
    "mov     rdi, r13",
    "mov     r14, rax",
    "call    sub_4faf0",
    "mov     qword [r14+0x10], rax",
    "mov     rbx, rax",
    "jmp     0x60972",
    "mov     rdi, qword [rbx+0x10]",
    "test    rdi, rdi",
    "je      0x60972",
    "mov     rdi, qword [rbx+0x8]",
    "test    rdi, rdi",
    "je      0x60980",
    "call    free",
    "mov     qword [rbx+0x10], 0x0",
    "test    r12, r12",
    "je      0x60990",
    "call    dispose_command",
    "lea     rcx, [rel mark_modified_vars]",
    "mov     edx, dword [rbx+0x28]",
    "mov     qword [rbx+0x8], r12",
    "mov     ecx, dword [rcx]",
    "mov     eax, edx",
    "or      eax, 0x9",
    "test    ecx, ecx",
    "jne     0x609ae",
    "mov     rdi, r12",
    "call    copy_command",
    "mov     r12, rax",
    "mov     edx, eax",
    "and     dh, 0xef",
    "mov     dword [rbx+0x28], edx",
    "test    al, 0x1",
    "je      0x609c7",
    "mov     eax, edx",
    "or      eax, 0x8",
    "lea     rax, [rel it_functions]",
    "or      dword [rax], 0x2",
    "add     rsp, 0x8",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     rax, [rel array_needs_making]",
    "mov     dword [rax], 0x1"
  ]
}
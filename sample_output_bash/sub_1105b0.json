{
  "address": "0x1105b0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "allocate or change RW memory/b4e5a298cb404535abd304755b86823e",
    "encrypt data using RSA via embedded library/ac8ad10b2f8f4bb3b4fb8af59459bf90"
  ],
  "disassembly": [
    "push    rbp",
    "mov     r8d, 0x80",
    "mov     edx, 0x29",
    "mov     esi, 0x28",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "lea     rcx, [rbp-0x3c]",
    "mov     r14, rdi",
    "xor     edi, edi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    sub_37e50",
    "mov     r12, rax",
    "lea     rax, [rel data_1608e4]",
    "cmp     r12, rax",
    "je      0x110720",
    "mov     r13d, 0xffffffff",
    "jmp     0x1106ad",
    "xor     edi, edi",
    "call    sub_37110",
    "mov     r8d, eax",
    "cmp     eax, 0x29",
    "je      0x1106d8",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x11074d",
    "movsxd  r13, dword [rbp-0x3c]",
    "movsxd  r13, dword [rbp-0x3c]",
    "mov     rax, qword [rel data_160d88]",
    "mov     dword [rbp-0x44], r8d",
    "lea     r15d, [r13+0x4]",
    "movsxd  r15, r15d",
    "cmp     rax, 0x1",
    "jbe     0x110730",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "mov     eax, r13d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     edx, [r13-0x1]",
    "mov     rcx, r15",
    "mov     rsi, r12",
    "mov     rdi, rbx",
    "movsxd  rdx, edx",
    "call    __strncpy_chk",
    "mov     byte [rbx+r13-0x1], 0x0",
    "mov     r13d, 0x1",
    "jmp     0x1106a2",
    "mov     rdi, r15",
    "call    malloc",
    "mov     r8d, dword [rbp-0x44]",
    "test    rax, rax",
    "mov     rbx, rax",
    "jne     0x11065e",
    "mov     rdx, qword [rel data_160910]",
    "cmp     byte [rdx+rax-0x1], 0x0",
    "je      0x1106dc",
    "mov     qword [r14], rbx",
    "mov     rdi, r12",
    "call    free",
    "test    r15, r15",
    "mov     eax, 0x1",
    "mov     byte [rbx], 0x28",
    "lea     edx, [r13-0x1]",
    "cmovne  rax, r15",
    "movsxd  rdx, edx",
    "lea     rdi, [rbx+0x1]",
    "mov     rsi, r12",
    "mov     dword [rbp-0x44], r8d",
    "mov     rcx, rax",
    "sub     rcx, 0x1",
    "call    __strncpy_chk",
    "mov     r8d, dword [rbp-0x44]",
    "mov     byte [rbx+r13], 0x29",
    "mov     byte [rbx+r13+0x2], 0x0",
    "mov     byte [rbx+r13+0x1], r8b",
    "xor     r13d, r13d",
    "jmp     0x32561",
    "lea     r15d, [r13+0x4]",
    "movsxd  r15, r15d",
    "mov     rdi, r15",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x110757",
    "mov     rdi, r15",
    "call    malloc",
    "mov     r8d, dword [rbp-0x44]",
    "test    rax, rax",
    "mov     rbx, rax",
    "je      0x110752",
    "mov     rsi, r15",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "jmp     0x32561"
  ]
}
{
  "address": "0xcd4c0",
  "rules": [
    "decrypt data using TEA/ab7f9f2b007f48f680d6bcb7da99c5f3/228e05560ef647b99ab605fac0daf580",
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "encrypt data using TEA/125a16c5ca784de5b4ec344bb7f45260/b9272fb9d4744824873ec7d3c8013c6c",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/053ec9add6b744e4993f7dc6e62f924f",
    "contain loop",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/214603c8f1d64a2ea9add8dd99e7e802",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rsi",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     dword [rdx], 0x1",
    "movsx   r8d, byte [rdi]",
    "lea     eax, [r8-0x22]",
    "cmp     al, 0x56",
    "ja      0xcd580",
    "{Case 0x1-0x4, 0x6-0xd, 0x16-0x1c, 0x1e-0x22, 0x24-0x32, 0x34-0x39, 0x3b-0x3e, 0x42, 0x45-0x4b, 0x4d-0x4f, 0x51, 0x55}",
    "mov     byte [r14], 0x5c",
    "xor     eax, eax",
    "jmp     0xcd55f",
    "lea     rsi, [rel jump_table_137658]",
    "movzx   eax, al",
    "lea     r15, [rdi+0x1]",
    "mov     rbx, rdi",
    "movsxd  rax, dword [rsi+rax*4]",
    "add     rax, rsi",
    "jmp     rax",
    "add     rsp, 0x18",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "{Case 0xe-0x15}",
    "sub     r8d, 0x30",
    "sete    al",
    "test    rcx, rcx",
    "setne   dl",
    "and     edx, eax",
    "movzx   eax, byte [rdi+0x1]",
    "lea     ecx, [rax-0x30]",
    "cmp     cl, 0x7",
    "ja      0xcd7e1",
    "{Case 0x0, 0x5, 0x1d}",
    "test    rcx, rcx",
    "je      0xcd778",
    "{Case 0x23, 0x43}",
    "mov     byte [r14], 0x1b",
    "nop     dword [rax]",
    "{Case 0x33, 0x53}",
    "cmp     r8d, 0x75",
    "mov     dword [rbp-0x34], r8d",
    "mov     r13, rdx",
    "setne   r12b",
    "call    __ctype_b_loc",
    "movzx   r12d, r12b",
    "mov     r8d, dword [rbp-0x34]",
    "xor     edi, edi",
    "lea     r12d, [r12*4+0x4]",
    "mov     rcx, qword [rax]",
    "lea     edx, [r12+0x1]",
    "mov     r12, r15",
    "movsxd  rdx, edx",
    "add     rdx, rbx",
    "jmp     0xcd5ec",
    "{Case 0x3a}",
    "mov     byte [r14], 0x5c",
    "jmp     0xcd598",
    "{Case 0x3f}",
    "mov     byte [r14], 0x7",
    "jmp     0xcd598",
    "{Case 0x40}",
    "mov     byte [r14], 0x8",
    "jmp     0xcd598",
    "{Case 0x41}",
    "test    rcx, rcx",
    "je      0xcd580",
    "{Case 0x44}",
    "mov     byte [r14], 0xc",
    "jmp     0xcd598",
    "{Case 0x4c}",
    "mov     byte [r14], 0xa",
    "jmp     0xcd598",
    "{Case 0x50}",
    "mov     byte [r14], 0xd",
    "jmp     0xcd598",
    "{Case 0x52}",
    "mov     byte [r14], 0x9",
    "jmp     0xcd598",
    "{Case 0x54}",
    "mov     byte [r14], 0xb",
    "jmp     0xcd598",
    "{Case 0x56}",
    "call    __ctype_b_loc",
    "lea     r8, [rbx+0x3]",
    "xor     ecx, ecx",
    "mov     rdi, qword [rax]",
    "mov     rax, r15",
    "movzx   edx, byte [rax]",
    "movzx   esi, dl",
    "test    byte [rdi+rsi*2+0x1], 0x10",
    "je      0xcd718",
    "mov     eax, 0x1",
    "jmp     0xcd55c",
    "movzx   edx, dl",
    "lea     rcx, [rdi+rdx+0x3]",
    "jmp     0xcd53d",
    "mov     byte [r14], r8b",
    "jmp     0xcd598",
    "nop     dword [rax]",
    "movzx   esi, byte [r12]",
    "movzx   eax, sil",
    "test    byte [rcx+rax*2+0x1], 0x10",
    "je      0xcd740",
    "mov     eax, 0x1",
    "jmp     0xcd55f",
    "mov     dword [rcx], 0x1",
    "jmp     0xcd598",
    "cmp     rax, r15",
    "je      0xcd796",
    "cmp     rax, r8",
    "je      0xcd718",
    "mov     byte [r14], r8b",
    "sub     eax, 0x30",
    "add     r15, 0x1",
    "movsx   eax, al",
    "lea     r8d, [rax+r8*8]",
    "movzx   eax, byte [r15]",
    "lea     edx, [rax-0x30]",
    "cmp     dl, 0x7",
    "jbe     0xcd538",
    "cmp     r12, r15",
    "je      0xcd7b8",
    "cmp     r12, rdx",
    "je      0xcd740",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121b62]  {\"missing hex digit for \\x\"}",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xcd580",
    "mov     byte [r14], cl",
    "sub     eax, ebx",
    "jmp     0xcd55f",
    "shl     ecx, 0x4",
    "lea     r9d, [rdx-0x61]",
    "mov     esi, ecx",
    "movsx   ecx, dl",
    "cmp     r9b, 0x5",
    "ja      0xcd760",
    "cmp     r15, rcx",
    "je      0xcd557",
    "mov     eax, r15d",
    "sub     eax, ebx",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_121b7b]  {\"missing unicode digit for \\%c\"}",
    "mov     dword [rbp-0x34], r8d",
    "call    dcgettext",
    "mov     esi, dword [rbp-0x34]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xcd580",
    "cmp     rdi, 0x7f",
    "ja      0xcd780",
    "lea     r9d, [rsi-0x61]",
    "shl     rdi, 0x4",
    "movsx   eax, sil",
    "cmp     r9b, 0x5",
    "jbe     0xcd5e0",
    "sub     edx, 0x41",
    "lea     r9d, [rcx-0x37]",
    "sub     ecx, 0x30",
    "cmp     dl, 0x5",
    "cmovbe  ecx, r9d",
    "jmp     0xcd700",
    "sub     ecx, 0x57",
    "mov     rsi, r14",
    "call    u32cconv",
    "movsxd  rdx, eax",
    "mov     byte [r14+rdx], 0x0",
    "mov     dword [r13], eax",
    "jmp     0xcd74e",
    "mov     byte [r14], dil",
    "sub     eax, 0x57",
    "cdqe    ",
    "sub     esi, 0x41",
    "cmp     sil, 0x5",
    "ja      0xcd730",
    "movzx   edx, byte [rax+0x1]",
    "add     ecx, esi",
    "add     rax, 0x1",
    "movzx   esi, dl",
    "test    byte [rdi+rsi*2+0x1], 0x10",
    "jne     0xcd6e6",
    "nop     dword [rax]",
    "mov     eax, r12d",
    "sub     eax, ebx",
    "jmp     0xcd55f",
    "sub     eax, 0x30",
    "cdqe    ",
    "jmp     0xcd5e5",
    "sub     eax, 0x37",
    "cdqe    ",
    "jmp     0xcd5e5",
    "add     rdi, rax",
    "add     r12, 0x1"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
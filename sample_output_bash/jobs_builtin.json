{
  "address": "0xbb2e0",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "xor     r15d, r15d",
    "push    r14",
    "xor     r14d, r14d",
    "push    r13",
    "lea     r13, [rel data_121628]  {\"lpnxrs\"}",
    "push    r12",
    "lea     r12, [rel jump_table_1373b0]",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x128",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel loptend]",
    "mov     qword [rel data_168d30], 0x0",
    "mov     dword [rel data_168d28], 0x1",
    "mov     dword [rbp-0x148], 0x0",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel lcurrent]",
    "mov     qword [rax], 0x0",
    "lea     rax, [rel loptend]",
    "mov     rbx, qword [rax]",
    "test    r14d, r14d",
    "jne     0xbb57b",
    "cmp     eax, 0xffffff9d",
    "je      0xbb530",
    "test    rbx, rbx",
    "je      0xbb5eb",
    "lea     r12, [rbp-0xc0]",
    "lea     r13, [rbp-0x140]",
    "test    rbx, rbx",
    "je      0xbb6eb",
    "call    builtin_help",
    "jmp     0xbb38d",
    "sub     eax, 0x6c",
    "cmp     eax, 0xc",
    "ja      0xbb388",
    "lea     r15, [rel data_12162f]  {\"jobs_builtin\"}",
    "mov     rdi, r15",
    "call    begin_unwind_frame",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xbb82f",
    "mov     r12, rbx",
    "jmp     0xbb591",
    "mov     eax, dword [rbp-0x148]",
    "cmp     eax, 0x1",
    "je      0xbb790",
    "nop     word [rax+rax]",
    "mov     r14d, 0x102",
    "{Case 0x1, 0x3, 0x5, 0x8-0xb}",
    "call    builtin_usage",
    "movsxd  rax, dword [r12+rax*4]",
    "add     rax, r12",
    "jmp     rax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     edi, 0x18",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xbb817",
    "mov     rax, qword [r12+0x8]",
    "mov     rax, qword [rax]",
    "cmp     byte [rax], 0x25",
    "jne     0xbb588",
    "lea     rbx, [rel js]",
    "mov     r10d, dword [rbx+0x1c]",
    "test    r10d, r10d",
    "je      0xbb393",
    "cmp     eax, 0x2",
    "je      0xbb7d4",
    "mov     rax, qword [rbx+0x8]",
    "mov     edx, 0x5",
    "xor     edi, edi",
    "add     r14d, 0x1",
    "lea     rsi, [rel 0x12111a]  {\"%s: no such job\"}",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x148], rax",
    "call    dcgettext",
    "mov     rsi, qword [rbp-0x148]",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xbb4a8",
    "lea     rax, [rel jobs]",
    "mov     rax, qword [rax]",
    "test    rax, rax",
    "je      0xbb540",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x128",
    "mov     eax, r14d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "{Case 0xc}",
    "test    r15d, r15d",
    "jne     0xbb74f",
    "{Case 0x7}",
    "mov     dword [rbp-0x148], 0x2",
    "jmp     0xbb357",
    "{Case 0x6}",
    "mov     dword [rbp-0x148], 0x1",
    "jmp     0xbb357",
    "{Case 0x0}",
    "mov     r15d, 0x1",
    "jmp     0xbb357",
    "{Case 0x4}",
    "mov     r15d, 0x2",
    "jmp     0xbb357",
    "{Case 0x2}",
    "mov     r15d, 0x3",
    "jmp     0xbb357",
    "mov     esi, 0x18",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     rax, [rel line_number]",
    "pxor    xmm0, xmm0",
    "mov     rdi, rbx",
    "mov     qword [r12+0x18], r13",
    "mov     dword [r13], 0x0",
    "mov     eax, dword [rax]",
    "mov     qword [r12], 0x4",
    "mov     qword [r12+0x10], 0x0",
    "mov     dword [r13+0x4], eax",
    "movups  xmmword [r13+0x8], xmm0",
    "call    copy_word_list",
    "lea     rdx, [rel uwcache]",
    "mov     qword [r13+0x8], rax",
    "mov     rax, qword [r12+0x18]",
    "mov     qword [rax+0x10], 0x0",
    "or      dword [r12+0x4], 0x20",
    "or      dword [rax], 0x20",
    "mov     eax, dword [rdx+0xc]",
    "test    eax, eax",
    "jle     0xbb777",
    "mov     r12, qword [r12]",
    "test    r12, r12",
    "je      0xbb5eb",
    "mov     rdi, r12",
    "call    get_job_spec",
    "test    eax, eax",
    "js      0xbb588",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xbb812",
    "mov     r9d, dword [rel data_160908]",
    "test    r9d, r9d",
    "jne     0xbb7c2",
    "lea     rbx, [rel js]",
    "mov     edi, dword [rbx+0x1c]",
    "test    edi, edi",
    "je      0xbb393",
    "test    eax, eax",
    "jne     0xbb393",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0xbb410",
    "movsxd  rdx, edi",
    "cmp     qword [rax+rdx*8], 0x0",
    "je      0xbb540",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1341f8]  {\"no other options allowed with `-\u2026\"}",
    "xor     edi, edi",
    "mov     r14d, 0x1",
    "call    dcgettext",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    builtin_error",
    "jmp     0xbb393",
    "mov     rsi, r13",
    "mov     rdi, rbx",
    "add     r14d, 0x1",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "jne     0xbb367",
    "mov     rsi, r13",
    "mov     rdi, rbx",
    "call    internal_getopt",
    "cmp     eax, 0xffffffff",
    "je      0xbb3e0",
    "mov     edi, 0x20",
    "call    malloc",
    "test    rax, rax",
    "jne     0xbb69d",
    "sub     eax, 0x1",
    "mov     rcx, qword [rdx]",
    "mov     dword [rdx+0xc], eax",
    "cdqe    ",
    "mov     rax, qword [rcx+rax*8]",
    "lea     rdx, [rel js]",
    "cmp     eax, dword [rdx+0x1c]",
    "jge     0xbb588",
    "mov     esi, 0x1",
    "mov     edi, r15d",
    "call    sub_111ec0",
    "jmp     0xbb393",
    "call    sub_6aab0",
    "mov     r8d, dword [rbx+0x1c]",
    "test    r8d, r8d",
    "je      0xbb393",
    "mov     esi, dword [rel data_160908]",
    "test    esi, esi",
    "jne     0xbb800",
    "lea     rbx, [rel js]",
    "mov     r13d, dword [rbx+0x1c]",
    "test    r13d, r13d",
    "je      0xbb393",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, r12",
    "call    sigaddset",
    "mov     rdi, r13",
    "call    sigemptyset",
    "mov     rdx, r13",
    "mov     rsi, r12",
    "xor     edi, edi",
    "call    sigprocmask",
    "mov     rdi, rbx",
    "call    get_job_spec",
    "mov     edi, eax",
    "cmp     eax, 0xffffffff",
    "je      0xbb540",
    "test    r14d, r14d",
    "setne   r14b",
    "movzx   r14d, r14b",
    "jmp     0xbb393",
    "cmp     edi, 0xfffffffe",
    "je      0xbb4a8",
    "nop     dword [rax]",
    "mov     rdx, qword [rel data_161a50]",
    "mov     qword [rax+0x10], r12",
    "mov     rdi, r12",
    "mov     qword [rax], rdx",
    "lea     rdx, [rel dispose_command]",
    "mov     qword [rel data_161a50], rax",
    "mov     qword [rax+0x8], rdx",
    "call    execute_command",
    "mov     rdi, r12",
    "mov     r14d, eax",
    "call    dispose_command",
    "cmp     qword [rel data_161a50], 0x0",
    "je      0xbb393",
    "jmp     0x3240e",
    "mov     rdi, r15",
    "call    sub_113da0",
    "jmp     0xbb393",
    "lea     rdx, [rel jobs]",
    "cdqe    ",
    "mov     rdx, qword [rdx]",
    "mov     r13, qword [rdx+rax*8]",
    "test    r13, r13",
    "je      0xbb588",
    "mov     esi, 0x2",
    "mov     edi, r15d",
    "call    sub_111ec0",
    "jmp     0xbb393",
    "call    sub_6aab0",
    "mov     ecx, dword [rbx+0x1c]",
    "test    ecx, ecx",
    "je      0xbb393",
    "mov     r12d, dword [rel data_160908]",
    "test    r12d, r12d",
    "jne     0xbb73d",
    "mov     rax, qword [rel stdout]",
    "mov     esi, r15d",
    "mov     rdx, qword [rax]",
    "call    sub_68530",
    "lea     rax, [rel js]",
    "mov     edx, dword [rax+0x1c]",
    "test    edx, edx",
    "je      0xbb4a8",
    "xor     eax, eax",
    "mov     esi, 0x20",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "call    sub_a7f00",
    "{ Does not return }",
    "mov     rax, qword [r12+0x8]",
    "mov     rdi, qword [rax]",
    "call    free",
    "movsxd  rdi, dword [r13+0x10]",
    "mov     r14, qword [r12+0x8]",
    "call    itos",
    "mov     qword [r14], rax",
    "jmp     0xbb588",
    "mov     esi, 0xffffffff",
    "mov     edi, r15d",
    "call    sub_111ec0",
    "jmp     0xbb393",
    "call    sub_6aab0",
    "mov     r11d, dword [rbx+0x1c]",
    "test    r11d, r11d",
    "je      0xbb393",
    "mov     eax, dword [rel data_160908]",
    "test    eax, eax",
    "jne     0xbb4a8",
    "call    sub_6aab0",
    "nop     word [rax+rax]"
  ]
}
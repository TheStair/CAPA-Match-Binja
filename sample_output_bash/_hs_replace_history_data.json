{
  "address": "0x105f50",
  "rules": [
    "contain loop"
  ],
  "disassembly": [
    "endbr64 ",
    "cmp     edi, 0xfffffffe",
    "jl      0x105fca",
    "retn    ",
    "lea     rax, [rel history_length]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "je      0x105fca",
    "cmp     eax, edi",
    "jle     0x105fca",
    "mov     r8, qword [rel data_1688b8]",
    "test    r8, r8",
    "je      0x105fca",
    "test    edi, edi",
    "jns     0x105fd0",
    "movsxd  rdi, edi",
    "mov     rax, qword [r8+rdi*8]",
    "test    rax, rax",
    "je      0x105fca",
    "sub     eax, 0x1",
    "js      0x105fca",
    "cmp     qword [rax+0x10], rsi",
    "je      0x105fc6",
    "cdqe    ",
    "mov     r9, 0xffffffffffffffff",
    "jmp     0x105f98",
    "mov     qword [rax+0x10], rdx",
    "retn    ",
    "mov     rcx, qword [r8+rax*8]",
    "test    rcx, rcx",
    "je      0x105f90",
    "sub     rax, 0x1",
    "test    eax, eax",
    "js      0x105fb8",
    "cmp     qword [rcx+0x10], rsi",
    "jne     0x105f90",
    "cmp     edi, 0xfffffffe",
    "jne     0x105fca",
    "cmp     edi, 0xffffffff",
    "jne     0x105fb0",
    "test    r9d, r9d",
    "js      0x105fca",
    "movsxd  r9, eax",
    "jmp     0x105f90",
    "mov     qword [rcx+0x10], rdx",
    "mov     rax, qword [r8+r9*8]"
  ]
}
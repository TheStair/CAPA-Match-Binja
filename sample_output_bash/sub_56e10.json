{
  "address": "0x56e10",
  "rules": [
    "hash data using aphash/8f862f7edc7641079bc7234f31736b95",
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "terminate process",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "encrypt data using Curve25519/f2994133291147a090851ed21e9c381b",
    "hash data with CRC32/6874091fc240423886717926d876159d",
    "check for kernel debugger via shared user data structure/300b95c5a43549898dd5e28afc704e20",
    "contain loop",
    "check for time delay via GetTickCount/52f86f6d7253482ca8f0e5163432b494",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745",
    "check if file exists/33e235b3e802457492251bc0c05ce35e/2e923016c5754d05a3af5b3b8024a7e6"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14, rsi",
    "push    r13",
    "mov     r13d, r8d",
    "push    r12",
    "mov     r12d, r9d",
    "push    rbx",
    "sub     rsp, 0x28",
    "cmp     rdx, qword [rel data_157f50]",
    "mov     r15, qword [rbp+0x18]",
    "mov     qword [rbp-0x48], rdi",
    "mov     qword [rbp-0x40], rdx",
    "mov     qword [rbp-0x50], rcx",
    "je      0x56ff6",
    "lea     rax, [rel subshell_environment]",
    "cmp     r9d, 0xffffffff",
    "mov     ebx, dword [rax]",
    "setne   al",
    "xor     edx, edx",
    "xor     ecx, ecx",
    "not     ebx",
    "or      ebx, eax",
    "lea     rax, [rel interactive]",
    "and     ebx, 0x1",
    "mov     dword [rax], edx",
    "lea     rax, [rel login_shell]",
    "mov     dword [rax], ecx",
    "jmp     0x56e8e",
    "lea     rax, [rel interactive]",
    "mov     dword [rax], 0x0",
    "lea     rax, [rel login_shell]",
    "mov     dword [rax], 0x0",
    "mov     rax, qword [rbp-0x40]",
    "cmp     rax, qword [rel data_157e88]",
    "je      0x56fc5",
    "mov     r9d, dword [rbp+0x10]",
    "test    r9d, r9d",
    "je      0x56ea1",
    "lea     rax, [rel evalnest]",
    "xor     r11d, r11d",
    "mov     dword [rax], r11d",
    "jmp     0x56e8c",
    "mov     rax, qword [rbp-0x40]",
    "cmp     rax, qword [rel data_157e58]",
    "jne     0x56e8c",
    "mov     eax, r12d",
    "and     eax, r13d",
    "cmp     eax, 0xffffffff",
    "je      0x56eb6",
    "lea     rax, [rel subshell_environment]",
    "or      dword [rax], 0x1",
    "xor     ebx, ebx",
    "lea     rax, [rel sourcenest]",
    "xor     r10d, r10d",
    "mov     dword [rax], r10d",
    "lea     rax, [rel array_needs_making]",
    "mov     r8d, dword [rax]",
    "test    r8d, r8d",
    "je      0x56eca",
    "lea     rax, [rel subshell_environment]",
    "or      dword [rax], 0x10",
    "test    ebx, ebx",
    "je      0x56fd7",
    "call    sub_5ea30",
    "call    without_job_control",
    "jmp     0x56ee2",
    "lea     rax, [rel already_making_children]",
    "xor     edi, edi",
    "mov     dword [rax], edi",
    "call    start_pipeline",
    "lea     rsi, [rel sub_66230]",
    "mov     edi, 0x11",
    "call    set_signal_handler",
    "call    set_sigint_handler",
    "test    r15, r15",
    "je      0x56f3b",
    "mov     esi, r12d",
    "mov     edi, r13d",
    "call    sub_51420",
    "mov     esi, 0x1",
    "mov     rdi, r14",
    "call    do_redirections",
    "test    eax, eax",
    "jne     0x5711a",
    "cmp     dword [r15], 0x0",
    "jle     0x56f3b",
    "mov     edi, 0x1",
    "call    exit",
    "{ Does not return }",
    "cmp     qword [rbp-0x40], 0x0",
    "je      0x570e7",
    "xor     ebx, ebx",
    "jmp     0x56f19",
    "mov     rdi, qword [rbp-0x50]",
    "mov     edx, dword [rbp+0x20]",
    "mov     r9d, 0x1",
    "mov     rcx, r15",
    "mov     r8d, dword [rbp+0x10]",
    "mov     rsi, qword [rbp-0x48]",
    "call    sub_526d0",
    "mov     ebx, eax",
    "mov     rax, qword [rel stdout]",
    "mov     rdi, qword [rax]",
    "call    fflush",
    "jmp     0x57062",
    "lea     rdi, [rel top_level]",
    "xor     esi, esi",
    "call    __sigsetjmp",
    "endbr64 ",
    "lea     rdx, [rel return_catch_flag]",
    "mov     esi, dword [rdx]",
    "test    esi, esi",
    "je      0x56f96",
    "mov     rax, qword [r15+0x8]",
    "cmp     byte [rax+rbx], 0x0",
    "je      0x56f10",
    "mov     edi, ebx",
    "call    subshell_exit",
    "{ Does not return }",
    "mov     dword [rbp-0x34], eax",
    "xor     eax, eax",
    "mov     rsi, qword [rbp-0x40]",
    "cmp     rsi, qword [rel data_157eb8]",
    "je      0x57073",
    "add     rbx, 0x1",
    "cmp     dword [r15], ebx",
    "jle     0x56f3b",
    "mov     edi, ebx",
    "call    close",
    "mov     rax, qword [r15+0x8]",
    "mov     byte [rax+rbx], 0x0",
    "add     rbx, 0x1",
    "cmp     dword [r15], ebx",
    "jg      0x56f19",
    "lea     rax, [rel last_command_exit_value]",
    "mov     edi, dword [rax]",
    "call    subshell_exit",
    "{ Does not return }",
    "cmp     ecx, 0x6",
    "je      0x56fe8",
    "lea     rdi, [rel return_catch]",
    "xor     esi, esi",
    "mov     dword [rbp-0x34], eax",
    "call    __sigsetjmp",
    "endbr64 ",
    "jmp     0x56f9b",
    "mov     ecx, dword [rbp-0x34]",
    "test    ecx, ecx",
    "jne     0x57069",
    "mov     ecx, dword [rbp-0x34]",
    "cmp     ecx, 0x3",
    "je      0x56fe8",
    "mov     edi, 0x1",
    "call    subshell_exit",
    "{ Does not return }",
    "test    eax, eax",
    "je      0x57028",
    "mov     rdi, qword [rbp-0x40]",
    "mov     edx, dword [rbp+0x20]",
    "mov     ecx, 0x1",
    "mov     rsi, qword [rbp-0x48]",
    "call    sub_507c0",
    "mov     ebx, eax",
    "mov     rax, qword [rel stdout]",
    "mov     rdi, qword [rax]",
    "call    fflush",
    "cmp     ebx, 0x102",
    "je      0x57124",
    "lea     rax, [rel return_catch_value]",
    "mov     edi, dword [rax]",
    "call    subshell_exit",
    "{ Does not return }",
    "mov     ebx, 0x2",
    "jmp     0x57062",
    "cmp     ebx, 0x106",
    "je      0x5708d",
    "lea     rax, [rel the_printed_command_except_trap]",
    "mov     rbx, qword [rax]",
    "test    rbx, rbx",
    "je      0x5712e",
    "mov     edi, 0x1",
    "lea     rbx, [rel data_122e02]",
    "jmp     0x570ac",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     rdi, [rax+0x1]",
    "call    xmalloc",
    "mov     rsi, rbx",
    "mov     rdi, rax",
    "call    strcpy",
    "mov     r9d, dword [rbp+0x10]",
    "mov     rdi, qword [rbp-0x48]",
    "or      ecx, 0xffffffff",
    "mov     rdx, rax",
    "mov     eax, dword [rbp+0x20]",
    "or      r8d, 0xffffffff",
    "xor     esi, esi",
    "or      eax, 0x40",
    "push    rax",
    "push    0x0",
    "call    sub_56800",
    "mov     ebx, eax",
    "pop     rax",
    "pop     rdx",
    "jmp     0x57062"
  ]
}
{
  "address": "0x6bf20",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "connect to WMI namespace via WbemLocator/472165133b624c67bbc5d17c3915a018",
    "contain loop",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13, rdi",
    "push    r12",
    "lea     r12, [rbp-0x140]",
    "push    rbx",
    "lea     rbx, [rbp-0xc0]",
    "sub     rsp, 0x138",
    "lea     r14, [rel js]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     dword [rbp-0x148], 0x0",
    "nop     dword [rax]",
    "xor     r15d, r15d",
    "jmp     0x6c000",
    "lea     r8, [rel jobs]",
    "xor     ecx, ecx",
    "xor     r15d, r15d",
    "jmp     0x6bfc8",
    "cmp     r15d, eax",
    "je      0x6c1a0",
    "mov     rax, qword [r8]",
    "lea     esi, [r15+0x1]",
    "mov     rax, qword [rax+rcx]",
    "test    rax, rax",
    "je      0x6bfb8",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "call    sigprocmask",
    "lea     rax, [rel procsubs]",
    "mov     rbx, qword [rax]",
    "test    rbx, rbx",
    "je      0x6c1db",
    "lea     r8, [rel jobs]",
    "mov     rax, qword [r8]",
    "mov     rax, qword [rax+r15*8]",
    "mov     rcx, qword [rax+0x8]",
    "mov     rax, rcx",
    "jmp     0x6c023",
    "mov     eax, dword [r14+0x1c]",
    "movsxd  r15, esi",
    "add     rcx, 0x8",
    "cmp     eax, r15d",
    "jle     0x6c000",
    "mov     edx, dword [rax+0x14]",
    "cmp     edx, 0x2",
    "je      0x6c0c0",
    "mov     edi, 0x1",
    "call    sub_67080",
    "mov     r9d, dword [r14+0x1c]",
    "test    r9d, r9d",
    "je      0x6c1fd",
    "nop     ",
    "test    rax, rax",
    "je      0x32103",
    "mov     rsi, qword [rax+0x8]",
    "mov     rax, rsi",
    "jmp     0x6c0d3",
    "lea     esi, [r15+0x1]",
    "cmp     edx, 0x1",
    "jne     0x6bfb8",
    "lea     rbx, [rel bgpids]",
    "mov     rdi, qword [rbx]",
    "test    rdi, rdi",
    "je      0x6c213",
    "mov     edi, dword [rel data_160908]",
    "test    edi, edi",
    "jne     0x6c1fd",
    "mov     rbx, qword [rbx]",
    "test    rbx, rbx",
    "jne     0x6c1c0",
    "mov     edi, dword [rbx+0x8]",
    "xor     esi, esi",
    "call    wait_for",
    "mov     eax, dword [0x8]",
    "ud2     ",
    "{ Does not return }",
    "mov     rdx, qword [rax]",
    "cmp     rcx, rdx",
    "jne     0x6c020",
    "test    rax, rax",
    "je      0x32103",
    "test    byte [rax+0x18], 0x1",
    "jne     0x6bfb8",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x6c25f",
    "mov     esi, dword [rbx+0xc]",
    "test    esi, esi",
    "jne     0x6c23a",
    "call    sub_6aab0",
    "mov     r8d, dword [rbx+0x10]",
    "test    r8d, r8d",
    "je      0x6c1d3",
    "mov     rax, rdx",
    "mov     eax, dword [rax+0x8]",
    "xor     edx, edx",
    "mov     rsi, r12",
    "mov     edi, 0x2",
    "mov     dword [rbp-0x144], eax",
    "call    sigprocmask",
    "lea     rax, [rel terminating_signal]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0x6c182",
    "mov     rdx, qword [rax]",
    "cmp     rsi, rdx",
    "jne     0x6c0d0",
    "mov     eax, dword [r14+0x1c]",
    "nop     word [rax+rax]",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "mov     eax, dword [rbp-0x148]",
    "add     rsp, 0x138",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "call    free",
    "mov     qword [rbx], 0x0",
    "mov     qword [rbx+0x8], 0x0",
    "mov     dword [rbx+0x10], 0x0",
    "jmp     0x6c213",
    "mov     ecx, dword [rel data_161100]",
    "mov     edi, dword [rax]",
    "test    ecx, ecx",
    "jne     0x6c05d",
    "lea     rax, [rel interrupt_state]",
    "mov     eax, dword [rax]",
    "test    eax, eax",
    "jne     0x6c178",
    "mov     rax, rdx",
    "mov     edx, dword [rax+0x8]",
    "lea     esi, [r15+0x1]",
    "xor     eax, eax",
    "lea     rdi, [rel data_1205f5]  {\"job %d[%d] stopped\"}",
    "mov     qword [rbp-0x158], r8",
    "mov     qword [rbp-0x150], rcx",
    "mov     dword [rbp-0x144], esi",
    "call    builtin_warning",
    "mov     r8, qword [rbp-0x158]",
    "mov     rcx, qword [rbp-0x150]",
    "mov     esi, dword [rbp-0x144]",
    "mov     rax, qword [r8]",
    "mov     rax, qword [rax+rcx]",
    "test    rax, rax",
    "je      0x6bfb8",
    "call    sub_8e2b0",
    "{ Does not return }",
    "call    throw_to_top_level",
    "jmp     0x6c06e",
    "call    __errno_location",
    "mov     edi, dword [rbp-0x144]",
    "mov     esi, 0x1",
    "mov     dword [rax], 0x0",
    "mov     r15, rax",
    "call    wait_for_single_pid",
    "test    r13, r13",
    "je      0x6c14a",
    "mov     edx, dword [rax+0x14]",
    "jmp     0x6bfe4",
    "cmp     eax, 0xffffffff",
    "jne     0x6c0af",
    "mov     edi, dword [rbp-0x144]",
    "mov     dword [r13], edi",
    "cmp     eax, 0x100",
    "ja      0x6c140",
    "add     dword [rbp-0x148], 0x1",
    "jmp     0x6bf70",
    "cmp     dword [r15], 0xa",
    "jne     0x6c0af",
    "mov     edx, 0x7f",
    "mov     word [r13+0x4], dx",
    "mov     word [r13+0x4], ax",
    "mov     rdi, rbx",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r12",
    "call    sigemptyset",
    "mov     rdx, r12",
    "mov     rsi, rbx",
    "xor     edi, edi",
    "call    sigprocmask",
    "mov     eax, dword [r14+0x1c]",
    "test    eax, eax",
    "jle     0x6c257",
    "mov     eax, dword [r14+0x1c]",
    "test    eax, eax",
    "je      0x6c0af",
    "call    sub_66150",
    "jmp     0x6c0af"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0xc8cf0",
  "rules": [
    "populate SysWhispers2 syscall list/074b321f7b7941958bfc8de4f583b5b2",
    "decompress data using aPLib/c6c954600822435a9c47b62afd183d7b",
    "contain loop",
    "check OS version/a792de506c61438eae0e98a59003db67",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "check OS version/0e7e919fd4d74b758d9097ed7c3be828",
    "encrypt data using XXTEA/55da17cb2d2b4f30ac54eab7c66fa3d3/bfdff12b2adb42709a78f0e77631902b",
    "encrypt data using XTEA/5c1c4c90f3124e8b8e496a40b647bc29/0ca7235c9c5c4809bc0188a71b737109",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "hash data using aphash/e04b32e4de024de7af9a97876e98ac22",
    "hash data using murmur3/e01a16258f3f411ebdc09e09aa03f30a/f469af160f86409e9f2e86ba6765a79e",
    "hash data with CRC32/a62eba34c54041488d4eb8afa76fce3c",
    "hash data using jshash/9255647c2a3f4270934d9ee03325f205",
    "check Internet connectivity via WinINet/4ebebc1fd30e4dc8aec0393f85edc8f3",
    "check OS version/35d8fd86b2bf418898b01c7af02eb9bc",
    "encrypt data using HC-128/6b96453112c8451898bd701d3a138e39",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "decompress data using LZO/a647e432b8ad43c8a517335d581dcd40",
    "hash data with CRC32/b31bffa9a15b460bbcbd04d2822872fb",
    "64-bit execution via heavens gate/60cabeb435b14393adc864c969c82de8",
    "hash data using aphash/416ed7212e694999bd9567d4aa818bae",
    "check for kernel debugger via shared user data structure/6be60e61779449d185f0bab196679834",
    "allocate or change RW memory/877cb0b79bfa432e8e79b8bd20fa354f",
    "check for time delay via GetTickCount/173be9e5d4d440c09f85224fcb793b6a",
    "check for kernel debugger via shared user data structure/8dba58369c324a29b2fa79b10c98c249",
    "encrypt data using HC-128/e8f9b1d76e624bf6b554df630e614cdc"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0xa8",
    "mov     qword [rbp-0x60], rsi",
    "mov     qword [rbp-0x98], rcx",
    "mov     qword [rbp-0xa0], r8",
    "mov     dword [rbp-0x54], r9d",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "test    rdi, rdi",
    "je      0xc8e70",
    "mov     ecx, 0x1",
    "test    rdx, rdx",
    "je      0xc8e70",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xa8",
    "mov     eax, ecx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rbx, qword [rbp-0x98]",
    "cmp     rdx, rbx",
    "jae     0xc90f3",
    "cmp     qword [rbp-0x60], rdi",
    "je      0xc8ed7",
    "mov     eax, dword [rbp-0x54]",
    "mov     qword [rbp-0x80], rdi",
    "mov     r14, rdi",
    "mov     r11, rdx",
    "and     eax, 0x10",
    "mov     dword [rbp-0x58], eax",
    "xor     ecx, ecx",
    "jmp     0xc8e75",
    "test    byte [rbp-0x54], 0x8",
    "je      0xc8e70",
    "mov     rax, qword [rbp-0x60]",
    "xor     r15d, r15d",
    "cmp     r14, rax",
    "jae     0xc8da5",
    "mov     qword [rbp-0x68], r11",
    "call    __ctype_b_loc",
    "mov     r11, qword [rbp-0x68]",
    "mov     rax, qword [rax]",
    "test    byte [rax+r13*2+0x1], 0x1",
    "je      0xc8d95",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xca4f7",
    "xor     ecx, ecx",
    "cmp     byte [rdi], 0x2f",
    "setne   cl",
    "jmp     0xc8e75",
    "lea     rax, [rel interrupt_state]",
    "lea     rdi, [rel terminating_signal]",
    "mov     eax, dword [rax]",
    "or      eax, dword [rdi]",
    "jne     0xc8e70",
    "movzx   r15d, byte [r14]",
    "call    __ctype_tolower_loc",
    "mov     r11, qword [rbp-0x68]",
    "mov     rax, qword [rax]",
    "mov     r13d, dword [rax+r13*4]",
    "mov     r10d, dword [rbp-0x54]",
    "and     r10d, 0x20",
    "je      0xc8dd2",
    "cmp     r13d, 0x5b",
    "je      0xc8ee0",
    "cmp     byte [r11+0x1], 0x28",
    "je      0xc98c0",
    "test    r15d, r15d",
    "je      0xc8e70",
    "jg      0xc8eb0",
    "lea     eax, [r13-0x21]",
    "cmp     eax, 0x1f",
    "ja      0xc8ea0",
    "cmp     qword [rbp-0x60], r14",
    "je      0xc8e70",
    "cmp     r13d, 0x5c",
    "jne     0xc90c8",
    "cmp     r13d, 0x2a",
    "je      0xc9118",
    "cmp     r13d, 0x5b",
    "je      0xc8ee0",
    "mov     edx, 0xc0000601",
    "bt      rdx, rax",
    "jae     0xc8de2",
    "test    byte [rbp-0x54], 0x4",
    "je      0xc8efb",
    "mov     ecx, dword [rbp-0x58]",
    "movzx   r13d, r13b",
    "test    ecx, ecx",
    "jne     0xc9250",
    "cmp     r12, rbx",
    "jne     0xc92d1",
    "cmp     qword [rbp-0xa0], 0x0",
    "jne     0xca413",
    "cmp     r13d, 0x3f",
    "jne     0xc90c8",
    "jle     0xc90c8",
    "mov     esi, dword [rbp-0x54]",
    "mov     rdi, qword [rbp-0x80]",
    "mov     rcx, r12",
    "mov     eax, esi",
    "and     al, 0x7b",
    "cmp     rdi, r14",
    "cmove   eax, esi",
    "mov     dword [rbp-0x54], eax",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xca4f7",
    "test    byte [rbp-0x54], 0x80",
    "je      0xc8f15",
    "cmp     r15d, 0x2e",
    "je      0xc9a80",
    "call    __ctype_b_loc",
    "movsxd  rdx, r15d",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x68], rdx",
    "test    byte [rax+rdx*2+0x1], 0x1",
    "je      0xc90d7",
    "cmp     r13d, r15d",
    "jne     0xc8e70",
    "test    byte [rbp-0x54], 0x2",
    "jne     0xc9330",
    "cmp     r15d, 0x5c",
    "jne     0xc92c8",
    "mov     rax, qword [rbp-0xa0]",
    "xor     ecx, ecx",
    "mov     qword [rax], r11",
    "mov     qword [rax+0x8], r14",
    "jmp     0xc8e75",
    "test    byte [rbp-0x54], 0x4",
    "je      0xc9136",
    "test    r15d, r15d",
    "je      0xc8e70",
    "nop     dword [rax]",
    "mov     r9d, dword [rbp-0x54]",
    "mov     rdx, qword [rbp-0x60]",
    "mov     rsi, r14",
    "mov     edi, r13d",
    "mov     r8, qword [rbp-0x98]",
    "add     rsp, 0xa8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sub_c87c0",
    "mov     eax, dword [rbp-0x58]",
    "mov     byte [rbp-0x68], r15b",
    "test    eax, eax",
    "je      0xc8f3f",
    "cmp     qword [rbp-0x80], r14",
    "je      0xc9fc0",
    "cmp     qword [rbp-0x80], r14",
    "je      0xc8e70",
    "call    __ctype_tolower_loc",
    "mov     rdx, qword [rbp-0x68]",
    "mov     rax, qword [rax]",
    "mov     r15d, dword [rax+rdx*4]",
    "jmp     0xc90d7",
    "add     r14, 0x1",
    "mov     r11, r12",
    "mov     eax, dword [rbp-0x58]",
    "mov     r11, r12",
    "test    eax, eax",
    "je      0xc9368",
    "lea     r12, [r11+0x2]",
    "movzx   r13d, byte [r11+0x1]",
    "cmp     rbx, r12",
    "jb      0xc8e70",
    "cmp     r12, rbx",
    "je      0xc8e70",
    "lea     rax, [r14+0x1]",
    "cmp     qword [rbp-0x60], rax",
    "jne     0xc8e70",
    "test    byte [rbp-0x54], 0x80",
    "je      0xc9180",
    "cmp     r15d, 0x2e",
    "je      0xca088",
    "mov     edi, dword [rbp-0x54]",
    "mov     eax, edi",
    "and     eax, 0x1",
    "je      0xc9280",
    "movzx   edx, byte [r11+0x1]",
    "mov     rsi, r12",
    "cmp     dl, 0x21",
    "sete    cl",
    "cmp     dl, 0x5e",
    "sete    al",
    "or      cl, al",
    "mov     byte [rbp-0xbd], cl",
    "je      0xc8f66",
    "mov     qword [rbp-0x70], r11",
    "movsxd  r13, r15d",
    "call    __ctype_b_loc",
    "mov     r11, qword [rbp-0x70]",
    "mov     rax, qword [rax]",
    "test    byte [rax+r13*2+0x1], 0x1",
    "jne     0xc9b00",
    "mov     rax, qword [rbp-0x80]",
    "cmp     byte [rax], 0x2e",
    "jne     0xc8f0b",
    "test    byte [rbp-0x54], 0x1",
    "jne     0xc9ab0",
    "test    byte [rbp-0x54], 0x1",
    "je      0xc8f15",
    "mov     ecx, dword [rbp-0x58]",
    "movzx   r13d, byte [r11]",
    "lea     r12, [r11+0x1]",
    "test    ecx, ecx",
    "je      0xc8d95",
    "mov     rdi, r14",
    "cmp     r15d, r13d",
    "jne     0xc8e70",
    "mov     qword [rbp-0x68], r12",
    "call    __ctype_b_loc",
    "mov     rdx, qword [rax]",
    "mov     edx, dword [rbp-0x58]",
    "mov     r11, r12",
    "test    edx, edx",
    "je      0xc9368",
    "cmp     r12, rbx",
    "je      0xc8ed7",
    "cmp     qword [rbp-0x80], r14",
    "je      0xc9f18",
    "cmp     qword [rbp-0x80], r14",
    "je      0xc8e70",
    "shr     edi, 0x2",
    "cmp     qword [rbp-0x80], r14",
    "sete    cl",
    "test    cl, dil",
    "je      0xc9299",
    "cmp     r15d, 0x2f",
    "je      0xc8e70",
    "mov     eax, dword [rbp-0x54]",
    "mov     dword [rbp-0xc4], r15d",
    "lea     r11, [rsi+0x1]",
    "mov     qword [rbp-0xb8], r12",
    "and     eax, 0x2",
    "mov     qword [rbp-0xa8], r14",
    "mov     r14, r11",
    "mov     dword [rbp-0x74], eax",
    "setne   al",
    "movzx   eax, al",
    "mov     qword [rbp-0xb0], rbx",
    "mov     ebx, edx",
    "add     eax, eax",
    "mov     dword [rbp-0x90], eax",
    "movzx   eax, byte [rbp-0x68]",
    "mov     dword [rbp-0xbc], eax",
    "movzx   edx, byte [r11+0x2]",
    "lea     rsi, [r11+0x2]",
    "call    __ctype_tolower_loc",
    "mov     r11, qword [rbp-0x70]",
    "mov     rax, qword [rax]",
    "movzx   eax, byte [rax+r13*4]",
    "mov     byte [rbp-0x68], al",
    "jmp     0xc8f3f",
    "movzx   eax, byte [rax+0x1]",
    "test    al, al",
    "je      0xc8e70",
    "cmp     byte [r14-0x1], 0x2f",
    "jne     0xc8f15",
    "cmp     byte [r14-0x1], 0x2f",
    "je      0xc8e70",
    "add     r14, 0x1",
    "jmp     0xc90e7",
    "mov     qword [rbp-0x68], r11",
    "call    __ctype_tolower_loc",
    "mov     r11, qword [rbp-0x68]",
    "mov     rax, qword [rax]",
    "mov     r15d, dword [rax+r12*4]",
    "call    __ctype_b_loc",
    "movzx   ecx, r13b",
    "mov     rdx, qword [rax]",
    "mov     qword [rbp-0x68], rcx",
    "test    byte [rdx+rcx*2+0x1], 0x1",
    "je      0xc9346",
    "movzx   r12d, byte [r11+0x1]",
    "lea     rcx, [r11+0x2]",
    "cmp     r12d, 0x3f",
    "sete    r13b",
    "cmp     r12d, 0x2a",
    "sete    al",
    "or      al, r13b",
    "je      0xc9d70",
    "mov     rax, qword [rbp-0x80]",
    "cmp     byte [rax], 0x2e",
    "jne     0xc9146",
    "test    byte [rbp-0x54], 0x1",
    "je      0xc9180",
    "test    byte [rbp-0x54], 0x1",
    "je      0xc9180",
    "test    byte [rbp-0x54], 0x80",
    "je      0xc90e0",
    "cmp     r15d, 0x2e",
    "je      0xc8e70",
    "test    byte [rbp-0x54], 0x4",
    "je      0xc8e1f",
    "movzx   ebx, byte [r14]",
    "mov     r12, r14",
    "cmp     bl, 0x3d",
    "je      0xc99b8",
    "mov     r9d, dword [rbp-0x74]",
    "test    r9d, r9d",
    "jne     0xc94f8",
    "cmp     al, 0x2e",
    "jne     0xc8f0b",
    "cmp     byte [r14], 0x2e",
    "jne     0xc8f15",
    "test    byte [rbp-0x54], 0x80",
    "je      0xc8f15",
    "cmp     r11, rbx",
    "jb      0xc8d5e",
    "mov     r11, r12",
    "mov     qword [rbp-0x70], rdx",
    "call    __ctype_tolower_loc",
    "mov     rcx, qword [rbp-0x68]",
    "mov     rdx, qword [rbp-0x70]",
    "mov     r11, r12",
    "mov     rax, qword [rax]",
    "movzx   r13d, byte [rax+rcx*4]",
    "jmp     0xc9349",
    "test    r12d, r12d",
    "je      0xca433",
    "movzx   r11d, byte [rbp-0x54]",
    "and     r11d, 0x1",
    "cmp     r15d, 0x2f",
    "je      0xc9208",
    "movzx   eax, byte [rax+0x1]",
    "test    al, al",
    "je      0xc8e70",
    "cmp     byte [r14-0x1], 0x2f",
    "jne     0xc9180",
    "cmp     byte [r14-0x1], 0x2f",
    "jne     0xc9180",
    "cmp     qword [rbp-0x80], r14",
    "jne     0xc90e0",
    "test    byte [rbp-0x54], 0x80",
    "je      0xc90e0",
    "cmp     r15d, 0x2e",
    "je      0xca110",
    "cmp     byte [r14+0x2], 0x3d",
    "jne     0xc94b2",
    "cmp     bl, 0x3a",
    "je      0xc9d88",
    "mov     r8d, dword [rbp-0x58]",
    "test    r8d, r8d",
    "je      0xc9720",
    "cmp     bl, 0x5c",
    "jne     0xc94f8",
    "mov     rax, qword [rbp-0x80]",
    "cmp     byte [rax+0x2], 0x0",
    "jne     0xc8f0b",
    "movzx   eax, byte [r14+0x1]",
    "cmp     al, 0x2f",
    "je      0xc8e70",
    "nop     dword [rax]",
    "movsxd  r12, r15d",
    "test    byte [rdx+r12*2+0x1], 0x1",
    "je      0xc9368",
    "mov     eax, dword [rbp-0x54]",
    "and     eax, 0x1",
    "test    eax, eax",
    "je      0xc8ed7",
    "xor     r13d, r13d",
    "jmp     0xc95a9",
    "test    r11b, r11b",
    "jne     0xc8e70",
    "jmp     0xc9211",
    "cmp     al, 0x2e",
    "jne     0xc9146",
    "cmp     byte [r14], 0x2e",
    "jne     0xc9180",
    "jmp     0xc8e70",
    "cmp     byte [r14], 0x2e",
    "je      0xca390",
    "cmp     qword [rbp-0x80], r14",
    "je      0xc92ad",
    "cmp     qword [rbp-0x80], r14",
    "je      0xc8e70",
    "mov     edx, dword [rbp-0x58]",
    "mov     r13d, dword [rbp-0x74]",
    "mov     ebx, 0x5b",
    "mov     dword [rbp-0x70], 0x0",
    "mov     ecx, 0x5b",
    "test    edx, edx",
    "jne     0xc8ff5",
    "cmp     byte [r14+0x3], 0x5d",
    "jne     0xc94b2",
    "mov     dword [rbp-0x50], 0x0",
    "movzx   eax, byte [r12+0x1]",
    "add     r14, 0x1",
    "test    al, al",
    "je      0xc9ff8",
    "cmp     bl, 0x2e",
    "je      0xc9d40",
    "test    bl, bl",
    "je      0xc9e90",
    "call    __ctype_b_loc",
    "movzx   esi, bl",
    "mov     r15, qword [rax]",
    "test    byte [r15+rsi*2+0x1], 0x1",
    "je      0xc9a60",
    "movzx   ecx, byte [r14]",
    "test    cl, cl",
    "je      0xc8e70",
    "jmp     0xc8e70",
    "test    al, al",
    "je      0xc8e70",
    "test    byte [rbp-0x54], 0x8",
    "jne     0xc8ed7",
    "cmp     qword [rbp-0x60], r14",
    "jne     0xc95b8",
    "test    r10d, r10d",
    "jne     0xc91c0",
    "mov     rax, qword [rbp-0x80]",
    "cmp     byte [rax+0x2], 0x0",
    "jne     0xc9146",
    "movzx   eax, byte [r14+0x1]",
    "cmp     al, 0x2f",
    "je      0xc8e70",
    "movzx   edx, byte [r14+0x1]",
    "test    dl, dl",
    "je      0xc8e70",
    "test    eax, eax",
    "je      0xc90e0",
    "cmp     byte [r14-0x1], 0x2f",
    "jne     0xc90e0",
    "cmp     byte [r14-0x1], 0x2f",
    "jne     0xc90e0",
    "mov     byte [rbp-0x88], cl",
    "call    __ctype_b_loc",
    "movzx   esi, byte [rbp-0x88]",
    "mov     r15, qword [rax]",
    "mov     rcx, rsi",
    "test    byte [r15+rsi*2+0x1], 0x1",
    "je      0xc9037",
    "movzx   ebx, byte [r12]",
    "lea     r14, [r12+0x1]",
    "jmp     0xc906d",
    "mov     r15d, dword [rbp-0x58]",
    "movzx   r13d, byte [r14+0x1]",
    "test    r15d, r15d",
    "je      0xc99f8",
    "mov     eax, dword [rbp-0x58]",
    "test    eax, eax",
    "jne     0xc9eb8",
    "mov     r13, r14",
    "jmp     0xc9dbc",
    "lea     rsi, [rbp-0x50]",
    "mov     rdi, r14",
    "call    sub_c7ab0",
    "mov     ecx, dword [rbp-0x50]",
    "mov     r12, rax",
    "cmp     ecx, 0xffffffff",
    "je      0xca0dc",
    "cmp     byte [rbp-0x68], 0x5b",
    "mov     r12, qword [rbp-0xb8]",
    "mov     r14, qword [rbp-0xa8]",
    "mov     rbx, qword [rbp-0xb0]",
    "jne     0xc8e70",
    "mov     r12, r14",
    "mov     ecx, ebx",
    "mov     dword [rbp-0x70], 0x0",
    "mov     r13d, dword [rbp-0x90]",
    "movzx   ebx, byte [r12]",
    "lea     r14, [r12+0x1]",
    "jmp     0xc906d",
    "test    bl, bl",
    "je      0xc9e90",
    "mov     dword [rbp-0x70], 0x0",
    "mov     r13d, dword [rbp-0x90]",
    "mov     r12, r14",
    "jmp     0xc9015",
    "mov     dword [rbp-0x70], 0x0",
    "lea     r12, [r14+0x1]",
    "xor     r13d, r13d",
    "mov     ebx, 0x5c",
    "cmp     al, 0x2e",
    "jne     0xc8f15",
    "mov     rdx, qword [rbp-0x60]",
    "mov     esi, 0x2f",
    "mov     rdi, r14",
    "sub     rdx, r14",
    "call    memchr",
    "xor     ecx, ecx",
    "test    rax, rax",
    "setne   cl",
    "jmp     0xc8e75",
    "mov     esi, dword [rbp-0x54]",
    "and     esi, 0x1",
    "cmp     r12d, 0x2f",
    "je      0xca040",
    "test    r10d, r10d",
    "jne     0xca33c",
    "movzx   edx, byte [rcx]",
    "cmp     r12d, 0x3f",
    "je      0xc9538",
    "mov     rax, rcx",
    "cmp     r12d, 0x3f",
    "jne     0xc91d9",
    "jmp     0xc8e70",
    "test    al, al",
    "je      0xc8e70",
    "cmp     dl, 0x2e",
    "jne     0xc92b7",
    "jmp     0xc8e33",
    "cmp     byte [r14], 0x2e",
    "jne     0xc90e0",
    "jmp     0xc8e70",
    "movzx   ebx, byte [r12]",
    "lea     r14, [r12+0x1]",
    "movzx   esi, bl",
    "test    byte [r15+rsi*2+0x1], 0x1",
    "mov     qword [rbp-0x88], rsi",
    "je      0xc906d",
    "mov     qword [rbp-0x88], rsi",
    "call    __ctype_tolower_loc",
    "mov     rsi, qword [rbp-0x88]",
    "mov     rax, qword [rax]",
    "movzx   ecx, byte [rax+rsi*4]",
    "test    bl, bl",
    "je      0xc9e90",
    "test    bl, bl",
    "je      0xc9e90",
    "movzx   eax, byte [rbp-0x68]",
    "mov     dword [rbp-0x50], r13d",
    "add     r14, 0x5",
    "movzx   ebx, byte [r12+0x4]",
    "cmp     al, r13b",
    "je      0xca3c0",
    "call    __ctype_b_loc",
    "mov     rax, qword [rax]",
    "test    byte [rax+r13*2+0x1], 0x1",
    "je      0xc99f8",
    "call    __ctype_b_loc",
    "movzx   r12d, bl",
    "mov     rax, qword [rax]",
    "test    byte [rax+r12*2+0x1], 0x1",
    "je      0xc8fac",
    "mov     r10d, dword [rbp-0x74]",
    "test    r10d, r10d",
    "jne     0xc9728",
    "mov     edx, eax",
    "movzx   eax, byte [r13+0x1]",
    "cmp     dl, 0x3a",
    "jne     0xc9db0",
    "movzx   eax, byte [rbp-0x68]",
    "mov     r13d, dword [rbp-0x74]",
    "mov     ebx, 0x5b",
    "mov     dword [rbp-0x70], 0x1",
    "lea     ecx, [rax+0x1]",
    "jmp     0xc8fea",
    "mov     dword [rbp-0x70], 0x1",
    "mov     r13d, dword [rbp-0x74]",
    "mov     ebx, 0x5b",
    "jmp     0xc8fea",
    "jmp     0xc90e0",
    "mov     dword [rbp-0x70], 0x0",
    "mov     r13d, dword [rbp-0x90]",
    "mov     r12, r14",
    "mov     ecx, ebx",
    "jmp     0xc9037",
    "movzx   eax, byte [r14+0x2]",
    "cmp     al, 0x2f",
    "je      0xc8e70",
    "test    esi, esi",
    "jne     0xca49e",
    "mov     r15, qword [rbp-0x60]",
    "mov     rdi, r14",
    "mov     qword [rbp-0x70], rcx",
    "mov     dword [rbp-0x68], r10d",
    "mov     rdx, r15",
    "mov     qword [rbp-0x50], 0x0",
    "sub     rdx, r14",
    "neg     esi",
    "sbb     esi, esi",
    "and     esi, 0x2f",
    "call    memchr",
    "mov     r10d, dword [rbp-0x68]",
    "mov     rcx, qword [rbp-0x70]",
    "test    rax, rax",
    "mov     r13, rax",
    "cmove   r13, r15",
    "test    byte [rbp-0x54], 0x2",
    "jne     0xc9613",
    "cmp     r12d, 0x21",
    "sete    r15b",
    "je      0xca34f",
    "cmp     dl, 0x28",
    "jne     0xc921f",
    "mov     rax, rcx",
    "cmp     dl, 0x28",
    "je      0xc9938",
    "cmp     rbx, rax",
    "je      0xc959d",
    "test    r15d, r15d",
    "je      0xc8e70",
    "cmp     al, 0x2e",
    "je      0xca130",
    "cmp     byte [r14+0x2], 0x0",
    "jne     0xc92b7",
    "movzx   eax, byte [r14+0x1]",
    "cmp     al, 0x2f",
    "je      0xc8e70",
    "mov     byte [rbp-0x78], cl",
    "call    __ctype_tolower_loc",
    "mov     rsi, qword [rbp-0x88]",
    "movzx   ecx, byte [rbp-0x78]",
    "mov     rax, qword [rax]",
    "movzx   ebx, byte [rax+rsi*4]",
    "cmp     bl, 0x2f",
    "jne     0xc9084",
    "mov     r8, r12",
    "mov     r11, r14",
    "mov     r12, qword [rbp-0xb8]",
    "mov     r14, qword [rbp-0xa8]",
    "mov     rbx, qword [rbp-0xb0]",
    "lea     rax, [r8+0x4]",
    "jmp     0xc9844",
    "lea     rsi, [rel data_15f6a0]",
    "lea     rdi, [rel data_15f6a2]",
    "mov     byte [rel data_15f6a2], al",
    "mov     byte [rel data_15f6a0], r13b",
    "call    strcoll",
    "test    eax, eax",
    "je      0xca3c0",
    "call    __ctype_tolower_loc",
    "mov     rax, qword [rax]",
    "mov     r13d, dword [rax+r13*4]",
    "cmp     bl, 0x5b",
    "je      0xc9490",
    "call    __ctype_tolower_loc",
    "mov     rax, qword [rax]",
    "movzx   ebx, byte [rax+r12*4]",
    "jmp     0xc8fac",
    "cmp     bl, 0x5c",
    "je      0xc8fcb",
    "add     r13, 0x1",
    "test    al, al",
    "je      0xc9ff8",
    "cmp     al, 0x5d",
    "jne     0xc9db0",
    "mov     edx, dword [rbp-0x58]",
    "test    edx, edx",
    "je      0xc94d2",
    "test    al, al",
    "jne     0xc8f15",
    "mov     rax, qword [rbp-0x60]",
    "mov     rbx, rcx",
    "cmp     r14, rax",
    "jb      0xca4be",
    "mov     r15, qword [rbp-0x60]",
    "xor     esi, esi",
    "mov     rdi, r14",
    "mov     qword [rbp-0x70], rcx",
    "mov     dword [rbp-0x68], r10d",
    "mov     rdx, r15",
    "mov     qword [rbp-0x50], 0x0",
    "sub     rdx, r14",
    "call    memchr",
    "mov     r10d, dword [rbp-0x68]",
    "mov     rcx, qword [rbp-0x70]",
    "mov     r13, rax",
    "test    rax, rax",
    "cmove   r13, r15",
    "jmp     0xc9613",
    "mov     byte [rbp-0x74], r12b",
    "cmp     r12d, 0x5c",
    "je      0xca105",
    "cmp     byte [rcx], 0x28",
    "jne     0xc95b8",
    "test    r13b, r13b",
    "je      0xc95b8",
    "mov     r9d, dword [rbp-0x54]",
    "mov     rdx, qword [rbp-0x60]",
    "mov     r8, rbx",
    "mov     rsi, r14",
    "mov     edi, 0x3f",
    "mov     byte [rbp-0x74], r11b",
    "mov     dword [rbp-0x70], r10d",
    "mov     qword [rbp-0x68], rcx",
    "call    sub_c87c0",
    "test    eax, eax",
    "je      0xc8ed7",
    "mov     rax, qword [rbp-0x60]",
    "cmp     r14, rax",
    "jae     0xc9f76",
    "mov     rcx, rbx",
    "movzx   r12d, byte [rax]",
    "lea     rcx, [rax+0x1]",
    "cmp     r12d, 0x3f",
    "sete    r13b",
    "cmp     r12d, 0x2a",
    "sete    al",
    "or      al, r13b",
    "je      0xc9d70",
    "mov     rdi, qword [rbp-0x60]",
    "lea     rax, [r14+0x1]",
    "cmp     rax, rdi",
    "jae     0xc9700",
    "movzx   eax, byte [r14+0x2]",
    "cmp     al, 0x2f",
    "je      0xc8e70",
    "nop     word [rax+rax]",
    "jmp     0xc8e70",
    "test    al, al",
    "je      0xc8e70",
    "cmp     bl, 0x2d",
    "je      0xc9380",
    "test    byte [rbp-0x54], 0x1",
    "jne     0xc8e70",
    "movzx   ecx, byte [r11-0x1]",
    "test    cl, cl",
    "je      0xca32d",
    "test    bl, bl",
    "je      0xc9e90",
    "jmp     0xc9728",
    "mov     rbx, r13",
    "sub     rbx, r12",
    "mov     rdi, rbx",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xca4fc",
    "jmp     0xc8e70",
    "cmp     byte [r14], 0x2f",
    "jne     0xca4b0",
    "jmp     0xc8e70",
    "lea     r15, [rcx-0x1]",
    "cmp     r14, r13",
    "jae     0xc9c39",
    "mov     qword [rbp-0x70], rcx",
    "mov     dword [rbp-0x68], r10d",
    "call    __ctype_b_loc",
    "movzx   r15d, byte [rbp-0x74]",
    "mov     r10d, dword [rbp-0x68]",
    "mov     rax, qword [rax]",
    "mov     rcx, qword [rbp-0x70]",
    "test    byte [rax+r15*2+0x1], 0x1",
    "je      0xc965b",
    "movzx   eax, byte [rcx]",
    "mov     byte [rbp-0x74], al",
    "jmp     0xc9617",
    "mov     r9d, dword [rbp-0x54]",
    "mov     rdx, qword [rbp-0x60]",
    "lea     rcx, [rcx-0x1]",
    "mov     rsi, r14",
    "mov     r8, qword [rbp-0x98]",
    "mov     edi, r12d",
    "mov     dword [rbp-0x54], r12d",
    "call    sub_c87c0",
    "mov     r11d, dword [rbp-0x54]",
    "test    eax, eax",
    "jne     0xca505",
    "mov     rcx, qword [rbp-0x68]",
    "add     rcx, 0x1",
    "cmp     rbx, rcx",
    "je      0xc8ed7",
    "add     rcx, 0x1",
    "cmp     rbx, rcx",
    "je      0xca428",
    "mov     dword [rbp-0x68], r15d",
    "mov     r15, rcx",
    "mov     byte [rbp-0x74], r13b",
    "mov     r13, qword [rbp-0x60]",
    "mov     dword [rbp-0x88], r12d",
    "mov     r12, r14",
    "mov     qword [rbp-0x90], r14",
    "mov     r14d, dword [rbp-0x54]",
    "mov     dword [rbp-0x70], r10d",
    "mov     byte [rbp-0xa8], r11b",
    "jmp     0xc998d",
    "cmp     r15d, 0x2f",
    "jne     0xc9211",
    "mov     r14, rax",
    "xor     r15d, r15d",
    "mov     rax, rcx",
    "jmp     0xc91d9",
    "movzx   r15d, byte [r14+0x1]",
    "mov     r14, rax",
    "mov     rax, rcx",
    "jmp     0xc91d9",
    "test    al, al",
    "jne     0xc9180",
    "cmp     al, 0x2e",
    "jne     0xc90e0",
    "movzx   r15d, byte [r12+0x1]",
    "cmp     r15b, 0x5d",
    "je      0xc94e8",
    "cmp     byte [rbp-0x68], cl",
    "je      0xc9828",
    "cmp     byte [rbp-0x68], 0x5b",
    "jne     0xc8e70",
    "mov     r8, 0x2400400000000000",
    "mov     esi, dword [rbp-0x74]",
    "mov     edx, ecx",
    "test    esi, esi",
    "mov     esi, 0x1",
    "sete    r9b",
    "xor     edi, edi",
    "nop     dword [rax]",
    "mov     r11d, dword [rbp-0x58]",
    "test    r11d, r11d",
    "jne     0xc9eb8",
    "lea     r14, [r13+0x3]",
    "jmp     0xca184",
    "lea     rdx, [rbx-0x1]",
    "mov     rcx, rbx",
    "mov     rsi, r14",
    "mov     rdi, r12",
    "call    __memmove_chk",
    "mov     byte [r12+rbx-0x1], 0x0",
    "mov     rdi, r12",
    "mov     ebx, 0x1",
    "lea     r14, [rel data_155140]",
    "call    udequote_pathname",
    "movzx   r15d, byte [r12]",
    "mov     eax, 0x61",
    "jmp     0xc9e35",
    "add     r14, 0x1",
    "cmp     qword [rbp-0x60], r14",
    "je      0xc8e70",
    "mov     rsi, qword [rbp-0x60]",
    "cmp     r14, rsi",
    "jae     0xc8e70",
    "mov     r11, qword [rbp-0x50]",
    "test    r11, r11",
    "je      0xc8e70",
    "mov     qword [rbp-0x70], r15",
    "mov     r15, rcx",
    "mov     qword [rbp-0x68], rbx",
    "mov     rbx, r14",
    "mov     r14d, r12d",
    "mov     r12d, r10d",
    "call    __ctype_tolower_loc",
    "mov     rcx, qword [rbp-0x70]",
    "mov     r10d, dword [rbp-0x68]",
    "mov     rax, qword [rax]",
    "movzx   eax, byte [rax+r15*4]",
    "mov     byte [rbp-0x74], al",
    "mov     eax, dword [rbp-0x58]",
    "test    eax, eax",
    "je      0xc965b",
    "xor     ecx, ecx",
    "cmp     r11d, 0x21",
    "setne   cl",
    "jmp     0xc8e75",
    "movzx   ecx, r15b",
    "jmp     0xc8e75",
    "xor     edx, edx",
    "mov     rsi, rbx",
    "mov     rdi, rcx",
    "call    sub_c8610",
    "mov     r10d, dword [rbp-0x70]",
    "movzx   r11d, byte [rbp-0x74]",
    "test    rax, rax",
    "jne     0xc91d9",
    "mov     r12d, 0x2a",
    "jmp     0xc95a0",
    "xor     edx, edx",
    "mov     rsi, rbx",
    "mov     rdi, rcx",
    "mov     byte [rbp-0x70], r11b",
    "mov     dword [rbp-0x68], r10d",
    "call    sub_c8610",
    "mov     r10d, dword [rbp-0x68]",
    "movzx   r11d, byte [rbp-0x70]",
    "test    rax, rax",
    "jne     0xc91d9",
    "mov     r9d, r14d",
    "mov     r8, rbx",
    "mov     rcx, r15",
    "mov     rdx, r13",
    "mov     rsi, r12",
    "mov     edi, 0x2a",
    "call    sub_c87c0",
    "test    eax, eax",
    "jne     0xc9980",
    "jmp     0xc8e70",
    "movzx   eax, byte [r14+0x2]",
    "cmp     al, 0x2f",
    "je      0xc8e70",
    "cmp     byte [rbp-0x68], cl",
    "je      0xc9828",
    "lea     rax, [r12+0x2]",
    "mov     qword [rbp-0x88], rax",
    "cmp     r15b, 0x5c",
    "jne     0xc93ab",
    "mov     r11, r14",
    "mov     r12, qword [rbp-0xb8]",
    "mov     r14, qword [rbp-0xa8]",
    "mov     rbx, qword [rbp-0xb0]",
    "lea     rax, [r11-0x1]",
    "cmp     bl, 0x5d",
    "jne     0xc8fac",
    "jmp     0xc90e0",
    "movzx   edx, byte [rax+0x1]",
    "cmp     dl, 0x3d",
    "ja      0xca0cf",
    "cmp     dl, 0x5d",
    "jne     0xc9ca0",
    "cmp     bl, 0x5b",
    "jne     0xca003",
    "movzx   ebx, byte [r13+0x2]",
    "test    bl, bl",
    "je      0xc9e90",
    "mov     rsi, qword [r14+rbx*8]",
    "cmp     al, r15b",
    "jne     0xc9e20",
    "mov     r9d, dword [rbp-0x54]",
    "xor     r8d, r8d",
    "lea     rdi, [r14+0x1]",
    "mov     rdx, rbx",
    "mov     rcx, qword [rbp-0x98]",
    "call    sub_c8cf0",
    "xor     ecx, ecx",
    "test    eax, eax",
    "setne   cl",
    "jmp     0xc8e75",
    "mov     r14, qword [rbp-0x48]",
    "jmp     0xc90e7",
    "cmp     byte [r15], 0x28",
    "je      0xc9c00",
    "cmp     r14d, 0x5b",
    "je      0xc9c00",
    "cmp     rbx, rcx",
    "je      0xc8ed7",
    "mov     r12d, 0x2a",
    "mov     rcx, rbx",
    "jmp     0xc95a0",
    "add     r12, 0x1",
    "cmp     r13, r12",
    "je      0xc9f50",
    "xor     ecx, ecx",
    "jmp     0xc8e75",
    "test    al, al",
    "jne     0xc90e0",
    "nop     dword [rax]",
    "test    r15b, r15b",
    "je      0xc8e70",
    "test    r13d, r13d",
    "je      0xca020",
    "nop     ",
    "mov     ecx, 0x5b",
    "mov     rax, r11",
    "jmp     0xc9c90",
    "bt      r8, rdx",
    "jae     0xca0c2",
    "cmp     dl, 0x5c",
    "jne     0xc9cc0",
    "cmp     esi, 0x1",
    "jle     0xc9e70",
    "jmp     0xc9490",
    "cmp     bl, 0x5d",
    "je      0xc90a0",
    "add     rbx, 0x1",
    "cmp     rbx, 0xf",
    "je      0xca3e4",
    "mov     rdi, r12",
    "call    strcmp",
    "test    eax, eax",
    "jne     0xc9e20",
    "mov     r9d, dword [rbp-0x54]",
    "mov     rcx, qword [rbp-0x68]",
    "lea     r8, [rbp-0x50]",
    "mov     rdi, rbx",
    "mov     rdx, qword [rbp-0x70]",
    "mov     rsi, qword [rbp-0x60]",
    "and     r9b, 0x7b",
    "call    sub_c8cf0",
    "test    eax, eax",
    "je      0xc9ee8",
    "movzx   esi, byte [r15-0x1]",
    "lea     rdi, [rel 0x121b28]  {\"?*+@!\"}",
    "call    strchr",
    "cmp     r14d, 0x5b",
    "je      0xc9c00",
    "movzx   esi, byte [rbp-0x74]",
    "mov     rcx, r15",
    "mov     r10d, dword [rbp-0x70]",
    "movzx   r13d, byte [rbp-0x74]",
    "mov     r15d, dword [rbp-0x68]",
    "mov     r12d, dword [rbp-0x88]",
    "mov     r14, qword [rbp-0x90]",
    "movzx   r11d, byte [rbp-0xa8]",
    "nop     ",
    "mov     rax, qword [rbp-0x88]",
    "movzx   ebx, byte [rax]",
    "cmp     r15b, 0x5b",
    "je      0xc9cf0",
    "lea     rax, [r12+0x3]",
    "movzx   r15d, byte [r12+0x2]",
    "mov     qword [rbp-0x88], rax",
    "jmp     0xc93ab",
    "jmp     0xc8e70",
    "movzx   edx, byte [rax]",
    "jmp     0xc9870",
    "mov     rax, r11",
    "mov     ecx, 0x5b",
    "jmp     0xc9c90",
    "movzx   ecx, byte [rax+0x2]",
    "add     esi, 0x1",
    "lea     rdx, [rax+0x2]",
    "test    cl, cl",
    "je      0xca32d",
    "test    dl, dl",
    "je      0xca32d",
    "test    r9b, r9b",
    "je      0xc9cc0",
    "cmp     dl, 0x5d",
    "jne     0xc9ca0",
    "test    rdi, rdi",
    "je      0xc98a7",
    "cmp     byte [rbp-0xbd], 0x0",
    "mov     r11, r14",
    "mov     rbx, qword [rbp-0xb0]",
    "mov     r14, qword [rbp-0xa8]",
    "jne     0xc9371",
    "jmp     0xc9a43",
    "mov     rdi, r12",
    "lea     r14, [r13+0x3]",
    "call    free",
    "jmp     0xca184",
    "mov     rax, qword [r14+rbx*8]",
    "movzx   eax, byte [rax]",
    "cmp     ebx, 0xe",
    "ja      0xca48d",
    "mov     r11, qword [rbp-0x50]",
    "mov     rbx, qword [rbp-0x68]",
    "test    r11, r11",
    "jne     0xc9c46",
    "add     rbx, 0x1",
    "cmp     rbx, r13",
    "jne     0xc967c",
    "test    rax, rax",
    "je      0xc9b70",
    "cmp     edx, r14d",
    "je      0xc9cd0",
    "mov     dword [rbp-0xa8], edx",
    "call    __ctype_b_loc",
    "mov     edx, dword [rbp-0xa8]",
    "mov     rax, qword [rax]",
    "test    byte [rax+rbx*2+0x1], 0x1",
    "je      0xc96df",
    "cmp     bl, 0x2e",
    "jne     0xc93c8",
    "mov     edi, dword [rbp-0x58]",
    "test    edi, edi",
    "je      0xc93fb",
    "lea     r11, [rax+0x1]",
    "cmp     dl, 0x5b",
    "je      0xc9c50",
    "test    esi, esi",
    "je      0xca513",
    "mov     rax, r11",
    "mov     ecx, edx",
    "jmp     0xc9c90",
    "cmp     byte [rax+0x1], 0x0",
    "je      0xc8e70",
    "test    rdi, rdi",
    "je      0xc98a7",
    "cmp     byte [rbp-0xbd], 0x0",
    "je      0xc9371",
    "movzx   eax, byte [rdi]",
    "cmp     cl, al",
    "je      0xca0b0",
    "{Case 0x0-0x1}",
    "xor     ebx, ebx",
    "cmp     dword [rbp-0xc4], 0x7f",
    "setbe   bl",
    "jmp     0xca16d",
    "lea     rdx, [rel jump_table_13761c]",
    "mov     ebx, ebx",
    "movsxd  rax, dword [rdx+rbx*4]",
    "add     rax, rdx",
    "jmp     rax",
    "mov     ecx, eax",
    "jmp     0xc8e75",
    "test    r12d, r12d",
    "jne     0xc9bd8",
    "mov     rbx, qword [rbp-0x68]",
    "movzx   ecx, byte [rbx]",
    "mov     eax, dword [rbp-0x58]",
    "mov     byte [rbp-0x88], cl",
    "test    eax, eax",
    "je      0xc9bbb",
    "nop     ",
    "mov     rbx, r13",
    "mov     r14d, dword [rbp-0x90]",
    "mov     r13, r12",
    "mov     r12d, dword [rbp-0x88]",
    "jmp     0xc9c00",
    "add     r13, 0x1",
    "cmp     r12, r13",
    "jne     0xc96aa",
    "call    __ctype_tolower_loc",
    "mov     rax, qword [rax]",
    "mov     edx, dword [rax+rbx*4]",
    "lea     rsi, [rbp-0x50]",
    "mov     rdi, rax",
    "mov     byte [rbp-0x70], cl",
    "call    sub_c7ab0",
    "mov     r9d, dword [rbp-0x50]",
    "movzx   ecx, byte [rbp-0x70]",
    "mov     qword [rbp-0x88], rax",
    "cmp     r9d, 0xffffffff",
    "je      0xca3f5",
    "mov     rax, qword [rbp-0x88]",
    "movzx   r12d, r15b",
    "movzx   r13d, cl",
    "lea     r14, [rax+0x1]",
    "cmp     r12d, r13d",
    "je      0xc9f00",
    "mov     byte [rbp-0x78], cl",
    "movzx   r13d, r15b",
    "call    __ctype_b_loc",
    "movzx   ecx, byte [rbp-0x78]",
    "mov     rax, qword [rax]",
    "test    byte [rax+r13*2+0x1], 0x1",
    "je      0xc93fb",
    "mov     r11, rdx",
    "jmp     0xc98a7",
    "mov     rdi, r11",
    "mov     rax, rdx",
    "nop     dword [rax+rax]",
    "add     rax, 0x2",
    "mov     ecx, 0x5c",
    "jmp     0xc9c90",
    "movzx   eax, byte [rdi]",
    "jmp     0xc989f",
    "jmp     0xc8e70",
    "sub     esi, 0x1",
    "mov     rax, r11",
    "xor     edi, edi",
    "mov     ecx, 0x5d",
    "jmp     0xc9c90",
    "cmp     al, 0x2e",
    "je      0xca0f8",
    "mov     rdi, r12",
    "mov     dword [rbp-0x50], ebx",
    "lea     r14, [r13+0x3]",
    "call    free",
    "test    ebx, ebx",
    "jne     0xca46c",
    "{Case 0xe}",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movsxd  rax, dword [rbp-0xc4]",
    "mov     rdx, qword [rdx]",
    "movzx   ebx, word [rdx+rax*2]",
    "shr     bx, 0xc",
    "and     ebx, 0x1",
    "{Case 0xd}",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movsxd  rax, dword [rbp-0xc4]",
    "mov     rdx, qword [rdx]",
    "movzx   ebx, word [rdx+rax*2]",
    "shr     bx, 0x3",
    "cmp     eax, 0x5f",
    "sete    al",
    "or      ebx, eax",
    "and     ebx, 0x1",
    "jmp     0xca16d",
    "{Case 0xc}",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movsxd  rax, dword [rbp-0xc4]",
    "mov     rdx, qword [rdx]",
    "movzx   ebx, byte [rdx+rax*2+0x1]",
    "and     ebx, 0x1",
    "jmp     0xca16d",
    "{Case 0xb}",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movsxd  rax, dword [rbp-0xc4]",
    "mov     rdx, qword [rdx]",
    "movzx   ebx, word [rdx+rax*2]",
    "shr     bx, 0xd",
    "and     ebx, 0x1",
    "jmp     0xca16d",
    "{Case 0xa}",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movsxd  rax, dword [rbp-0xc4]",
    "mov     rdx, qword [rdx]",
    "movzx   ebx, word [rdx+rax*2]",
    "shr     bx, 0x2",
    "and     ebx, 0x1",
    "jmp     0xca16d",
    "{Case 0x9}",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movsxd  rax, dword [rbp-0xc4]",
    "mov     rdx, qword [rdx]",
    "movzx   ebx, word [rdx+rax*2]",
    "shr     bx, 0xe",
    "and     ebx, 0x1",
    "jmp     0xca16d",
    "{Case 0x8}",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movsxd  rax, dword [rbp-0xc4]",
    "mov     rdx, qword [rdx]",
    "movzx   ebx, word [rdx+rax*2]",
    "shr     bx, 0x9",
    "and     ebx, 0x1",
    "jmp     0xca16d",
    "{Case 0x7}",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movsxd  rax, dword [rbp-0xc4]",
    "mov     rdx, qword [rdx]",
    "movsx   ebx, word [rdx+rax*2]",
    "shr     ebx, 0x1f",
    "jmp     0xca16d",
    "{Case 0x6}",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movsxd  rax, dword [rbp-0xc4]",
    "mov     rdx, qword [rdx]",
    "movzx   ebx, word [rdx+rax*2]",
    "shr     bx, 0xb",
    "and     ebx, 0x1",
    "jmp     0xca16d",
    "{Case 0x5}",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movsxd  rax, dword [rbp-0xc4]",
    "mov     rdx, qword [rdx]",
    "movzx   ebx, word [rdx+rax*2]",
    "shr     bx, 0x1",
    "and     ebx, 0x1",
    "jmp     0xca16d",
    "{Case 0x4}",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movsxd  rax, dword [rbp-0xc4]",
    "mov     rdx, qword [rdx]",
    "movzx   ebx, word [rdx+rax*2]",
    "and     ebx, 0x1",
    "jmp     0xca16d",
    "{Case 0x3}",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movsxd  rax, dword [rbp-0xc4]",
    "mov     rdx, qword [rdx]",
    "movzx   ebx, word [rdx+rax*2]",
    "shr     bx, 0xa",
    "and     ebx, 0x1",
    "jmp     0xca16d",
    "{Case 0x2}",
    "call    __ctype_b_loc",
    "mov     rdx, rax",
    "movsxd  rax, dword [rbp-0xc4]",
    "mov     rdx, qword [rdx]",
    "movzx   ebx, word [rdx+rax*2]",
    "shr     bx, 0x3",
    "and     ebx, 0x1",
    "jmp     0xca16d",
    "movzx   esi, byte [rbp-0x74]",
    "cmp     ecx, esi",
    "je      0xc9c00",
    "mov     dword [rbp-0x90], ecx",
    "call    __ctype_b_loc",
    "movzx   edx, byte [rbp-0x88]",
    "mov     ecx, dword [rbp-0x90]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x88], rdx",
    "test    byte [rax+rdx*2+0x1], 0x1",
    "je      0xc9bbb",
    "movzx   edx, byte [r13]",
    "mov     eax, dword [rbp-0x58]",
    "mov     rbx, rdx",
    "test    eax, eax",
    "je      0xc96df",
    "jmp     0xc9c35",
    "movzx   eax, byte [rbp-0x68]",
    "mov     dword [rbp-0x70], 0x1",
    "lea     r15d, [rax-0x1]",
    "mov     rax, qword [rbp-0x88]",
    "movzx   ebx, byte [rax]",
    "jmp     0xc93c8",
    "mov     rax, qword [rbp-0x88]",
    "mov     dword [rbp-0x70], 0x1",
    "mov     r15d, r9d",
    "movzx   ebx, byte [rax]",
    "jmp     0xc93c8",
    "movzx   edx, byte [rbp-0x68]",
    "cmp     r12d, edx",
    "jne     0xc975d",
    "mov     esi, dword [rbp-0x70]",
    "test    esi, esi",
    "jne     0xc942f",
    "call    __ctype_tolower_loc",
    "movzx   ecx, byte [rbp-0x78]",
    "mov     rax, qword [rax]",
    "movzx   r15d, byte [rax+r13*4]",
    "mov     rax, r11",
    "mov     ecx, 0x5d",
    "jmp     0xc9c90",
    "mov     r11, r14",
    "mov     r12, qword [rbp-0xb8]",
    "lea     rax, [r13+0x2]",
    "mov     r14, qword [rbp-0xa8]",
    "mov     rbx, qword [rbp-0xb0]",
    "jmp     0xc9844",
    "add     rbx, 0x1",
    "cmp     r13, rbx",
    "je      0xc9c35",
    "call    __ctype_tolower_loc",
    "mov     rdx, qword [rbp-0x88]",
    "mov     rax, qword [rax]",
    "mov     ecx, dword [rax+rdx*4]",
    "mov     r10d, dword [rbp-0x70]",
    "test    r10d, r10d",
    "jne     0xc9779",
    "jmp     0xc9800",
    "lea     rsi, [rel data_15f6a0]",
    "lea     rdi, [rel data_15f6a2]",
    "mov     byte [rel data_15f6a2], cl",
    "mov     byte [rbp-0x78], cl",
    "mov     byte [rel data_15f6a0], r15b",
    "call    strcoll",
    "mov     esi, r13d",
    "movzx   ecx, byte [rbp-0x78]",
    "sub     esi, r12d",
    "test    eax, eax",
    "cmove   eax, esi",
    "test    eax, eax",
    "jle     0xc9750",
    "lea     rax, [rel glob_asciirange]",
    "mov     edx, dword [rax]",
    "test    edx, edx",
    "jne     0xc9b53",
    "test    r12d, r12d",
    "je      0xc9693",
    "movzx   eax, byte [rbp-0x68]",
    "lea     rsi, [rel data_15f6a0]",
    "lea     rdi, [rel data_15f6a2]",
    "mov     dword [rbp-0x78], edx",
    "mov     byte [rel data_15f6a0], cl",
    "mov     byte [rel data_15f6a2], al",
    "call    strcoll",
    "mov     edx, dword [rbp-0x78]",
    "mov     ecx, edx",
    "sub     ecx, r13d",
    "test    eax, eax",
    "cmove   eax, ecx",
    "test    eax, eax",
    "js      0xc9096",
    "lea     rax, [rel glob_asciirange]",
    "mov     r11, r14",
    "mov     rax, qword [rbp-0x88]",
    "mov     r12, qword [rbp-0xb8]",
    "mov     r14, qword [rbp-0xa8]",
    "mov     rbx, qword [rbp-0xb0]",
    "jmp     0xc9844",
    "mov     eax, dword [rbp-0xbc]",
    "mov     edx, eax",
    "cmp     r13d, eax",
    "je      0xc97b4",
    "cmp     bl, 0x5d",
    "je      0xc90a0",
    "cmp     r13d, r12d",
    "jg      0xc9469",
    "mov     dword [rbp-0x88], r12d",
    "mov     r12, r13",
    "mov     r13, rbx",
    "mov     dword [rbp-0x90], r14d",
    "mov     r14d, esi",
    "nop     dword [rax]",
    "cmp     edx, r12d",
    "je      0xc9800",
    "cmp     edx, r13d",
    "jl      0xc9096",
    "mov     r12d, dword [rbp-0x58]",
    "test    r12d, r12d",
    "jne     0xc9eb8",
    "movzx   edx, byte [rbp-0x68]",
    "cmp     edx, r13d",
    "jne     0xc976d",
    "mov     r8d, dword [rbp-0x70]",
    "test    r8d, r8d",
    "je      0xc9b38",
    "cmp     r12d, edx",
    "jne     0xc9b3f",
    "cmp     bl, 0x5b",
    "jne     0xc970e",
    "mov     r9d, dword [rax]",
    "test    r9d, r9d",
    "jne     0xc9b20",
    "jmp     0xc97b4",
    "lea     rax, [rel glob_asciirange]",
    "movzx   eax, byte [rbp-0x68]",
    "lea     rsi, [rel data_15f6a0]",
    "mov     dword [rbp-0x70], edx",
    "lea     rdi, [rel data_15f6a2]",
    "mov     byte [rel data_15f6a0], r15b",
    "mov     byte [rel data_15f6a2], al",
    "call    strcoll",
    "mov     edx, dword [rbp-0x70]",
    "sub     edx, r12d",
    "test    eax, eax",
    "cmove   eax, edx",
    "mov     edi, dword [rax]",
    "mov     eax, edx",
    "sub     eax, r12d",
    "test    edi, edi",
    "je      0xc97c6",
    "jmp     0xc9800",
    "mov     r11d, dword [rbp-0x74]",
    "test    r11d, r11d",
    "jne     0xc9720",
    "nop     dword [rax+rax]",
    "jmp     0xc97f8",
    "cmp     bl, 0x5c",
    "je      0xc8fcb",
    "test    eax, eax",
    "jg      0xc9096"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
{
  "address": "0x10aaf0",
  "rules": [
    "read file on Linux",
    "create or open file",
    "encrypt data using RC4 KSA/c5d66f4fda884d55848eab5cc630b98c",
    "write file on Linux",
    "contain loop",
    "get file attributes",
    "write file on Windows/dbc9cc37967145a499adfa89f5005055",
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a",
    "change file permission on Linux",
    "delete file on Linux"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     ebx, esi",
    "sub     rsp, 0x158",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "lea     rax, [rel history_lines_written_to_file]",
    "mov     dword [rax], 0x0",
    "call    sub_10a390",
    "test    rax, rax",
    "je      0x10acf8",
    "call    __errno_location",
    "neg     ebx",
    "mov     r15d, dword [rax]",
    "lea     rax, [rel history_lines_written_to_file]",
    "mov     dword [rax], ebx",
    "test    r15d, r15d",
    "jne     0x10b07c",
    "mov     rdi, rax",
    "mov     r12, rax",
    "mov     edx, 0x1b6",
    "xor     esi, esi",
    "xor     eax, eax",
    "call    open",
    "mov     r14d, eax",
    "cmp     eax, 0xffffffff",
    "je      0x10ac40",
    "call    __errno_location",
    "xor     edx, edx",
    "mov     r15d, dword [rax]",
    "lea     rax, [rel history_lines_written_to_file]",
    "mov     dword [rax], edx",
    "jmp     0x10ad14",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x10b077",
    "call    __errno_location",
    "lea     rdx, [rel history_lines_written_to_file]",
    "neg     ebx",
    "mov     eax, dword [rax]",
    "mov     dword [rdx], ebx",
    "test    eax, eax",
    "je      0x10ace4",
    "lea     rsi, [rbp-0xd0]",
    "mov     edi, eax",
    "call    fstat",
    "cmp     eax, 0xffffffff",
    "je      0x10acc0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x158",
    "mov     eax, r15d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r12",
    "xor     r15d, r15d",
    "call    free",
    "jmp     0x10ad14",
    "xor     ebx, ebx",
    "call    __errno_location",
    "mov     edi, r14d",
    "neg     ebx",
    "mov     r15d, dword [rax]",
    "call    close",
    "lea     rax, [rel history_lines_written_to_file]",
    "mov     dword [rax], ebx",
    "test    r15d, r15d",
    "jne     0x10ac5a",
    "mov     rax, qword [rbp-0xb4]",
    "mov     qword [rbp-0x144], rax",
    "mov     eax, dword [rbp-0xb8]",
    "and     eax, 0xf000",
    "cmp     eax, 0x8000",
    "jne     0x10ae80",
    "mov     rdi, r12",
    "call    free",
    "test    r14, r14",
    "je      0x10ad14",
    "test    bl, bl",
    "je      0x10aca7",
    "mov     edi, r14d",
    "call    close",
    "call    __errno_location",
    "mov     r15, qword [rbp-0xa0]",
    "cmp     r15, 0xffffffffffffffff",
    "je      0x10aed0",
    "mov     rdi, r14",
    "call    free",
    "jmp     0x10ad14",
    "mov     esi, dword [rbp-0xb4]",
    "mov     edx, dword [rbp-0xb0]",
    "cmp     esi, dword [rbp-0x144]",
    "jne     0x10ac9c",
    "lea     rax, [rel history_lines_written_to_file]",
    "mov     dword [rax], 0x0",
    "test    r15d, r15d",
    "jne     0x10aca7",
    "mov     edi, r14d",
    "call    close",
    "call    __errno_location",
    "mov     dword [rax], 0x1b",
    "jmp     0x10ae8d",
    "lea     rdi, [r15+0x1]",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x10b094",
    "mov     rdi, r12",
    "xor     r15d, r15d",
    "call    chown",
    "xor     r15d, r15d",
    "cmp     dword [rbp-0x140], edx",
    "je      0x10aca7",
    "lea     rdx, [rel history_lines_written_to_file]",
    "neg     ebx",
    "xor     r14d, r14d",
    "mov     dword [rdx], ebx",
    "mov     ebx, 0x1",
    "mov     r15d, dword [rax]",
    "jmp     0x10ac67",
    "call    __errno_location",
    "mov     edi, r14d",
    "neg     ebx",
    "mov     r15d, dword [rax]",
    "call    close",
    "lea     rax, [rel history_lines_written_to_file]",
    "mov     dword [rax], ebx",
    "mov     ebx, 0x1",
    "test    r15d, r15d",
    "jne     0x10ac5c",
    "mov     rdx, r15",
    "mov     edi, r14d",
    "mov     rsi, rax",
    "call    read",
    "mov     edi, r14d",
    "mov     r15, rax",
    "call    close",
    "test    r15d, r15d",
    "jle     0x10af60",
    "call    __errno_location",
    "xor     r14d, r14d",
    "mov     r15d, dword [rax]",
    "jmp     0x10aec1",
    "neg     ebx",
    "test    r15d, r15d",
    "je      0x10aeb0",
    "movsxd  rax, r15d",
    "lea     r14, [r13+rax-0x1]",
    "mov     qword [rbp-0x180], rax",
    "cmp     r13, r14",
    "jae     0x10afc0",
    "xor     r14d, r14d",
    "jmp     0x10ac7d",
    "mov     rdi, r13",
    "call    free",
    "lea     rax, [rel history_lines_written_to_file]",
    "mov     dword [rax], ebx",
    "call    __errno_location",
    "mov     rdi, r13",
    "mov     r14d, dword [rax]",
    "mov     dword [rbp-0x168], r14d",
    "call    free",
    "lea     rax, [rel history_lines_written_to_file]",
    "mov     dword [rax], ebx",
    "test    r14d, r14d",
    "je      0x10aec1",
    "mov     rcx, r14",
    "mov     r15, r14",
    "xor     ebx, ebx",
    "jmp     0x10ad8a",
    "test    ebx, ebx",
    "je      0x10afc0",
    "xor     r14d, r14d",
    "cmp     r13, r15",
    "jae     0x10aeb0",
    "lea     rax, [rel history_comment_char]",
    "mov     rcx, r14",
    "mov     esi, ebx",
    "movzx   edi, byte [rax]",
    "jmp     0x10ac2b",
    "call    __errno_location",
    "mov     r15d, dword [rax]",
    "test    r14, r14",
    "jne     0x10ae65",
    "lea     rax, [rel history_comment_char]",
    "movzx   r14d, byte [rax]",
    "jmp     0x10adb3",
    "cmp     byte [rcx], 0xa",
    "jne     0x10ac10",
    "mov     rdi, r14",
    "mov     ebx, 0x1",
    "call    unlink",
    "jmp     0x10ac67",
    "mov     ebx, 0x1",
    "jmp     0x10ac67",
    "cmp     byte [r15], 0xa",
    "jne     0x10ada0",
    "lea     r15, [rcx-0x1]",
    "mov     r14, rcx",
    "test    esi, esi",
    "je      0x10ad88",
    "cmp     byte [r14], dil",
    "je      0x10ad40",
    "lea     rax, [r15-0x1]",
    "mov     rcx, r15",
    "cmp     r13, rax",
    "je      0x10aeb0",
    "cmp     byte [rcx], r14b",
    "mov     qword [rbp-0x168], rcx",
    "jne     0x10addf",
    "sub     ebx, esi",
    "cmp     r13, r15",
    "jae     0x10ad88",
    "mov     qword [rbp-0x178], rcx",
    "mov     dword [rbp-0x16c], esi",
    "mov     byte [rbp-0x168], dil",
    "call    __ctype_b_loc",
    "movzx   edx, byte [r14+0x1]",
    "movzx   edi, byte [rbp-0x168]",
    "mov     rax, qword [rax]",
    "mov     esi, dword [rbp-0x16c]",
    "mov     rcx, qword [rbp-0x178]",
    "test    byte [rax+rdx*2+0x1], 0x8",
    "jne     0x10ac10",
    "sub     esi, 0x1",
    "jmp     0x10ac10",
    "mov     r15, rax",
    "lea     rcx, [r15+0x1]",
    "cmp     r13, rcx",
    "jae     0x10aeb0",
    "call    __ctype_b_loc",
    "mov     rcx, qword [rbp-0x168]",
    "mov     rax, qword [rax]",
    "movzx   ecx, byte [rcx+0x1]",
    "test    byte [rax+rcx*2+0x1], 0x8",
    "jne     0x10ada0",
    "mov     rcx, r15",
    "jmp     0x10ac39",
    "mov     rdi, r12",
    "mov     qword [rbp-0x168], rcx",
    "call    sub_105010",
    "mov     edx, 0x180",
    "mov     esi, 0x241",
    "mov     rdi, rax",
    "mov     r14, rax",
    "xor     eax, eax",
    "call    open",
    "mov     edi, eax",
    "cmp     eax, 0xffffffff",
    "jne     0x10aee8",
    "mov     rcx, qword [rbp-0x168]",
    "mov     rdx, qword [rbp-0x180]",
    "mov     dword [rbp-0x168], edi",
    "mov     rax, rcx",
    "mov     rsi, rcx",
    "sub     rax, r13",
    "sub     rdx, rax",
    "call    write",
    "mov     edi, dword [rbp-0x168]",
    "test    rax, rax",
    "js      0x10afcd",
    "call    __errno_location",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x168], eax",
    "test    eax, eax",
    "sete    r15b",
    "mov     dword [rbp-0x16c], edi",
    "call    __errno_location",
    "mov     edi, dword [rbp-0x16c]",
    "lea     rsi, [rbp-0x160]",
    "mov     r15, rax",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x168], eax",
    "call    fstat",
    "mov     edi, dword [rbp-0x16c]",
    "test    eax, eax",
    "js      0x10b05c",
    "lea     rsi, [rbp-0x160]",
    "call    fstat",
    "mov     edi, dword [rbp-0x168]",
    "test    eax, eax",
    "js      0x10b019",
    "cmp     dword [rbp-0x168], 0x0",
    "je      0x10ac7d",
    "mov     rsi, r12",
    "mov     rdi, r14",
    "call    sub_1051f0",
    "test    eax, eax",
    "je      0x10ac7d",
    "mov     r8d, dword [rbp-0x168]",
    "test    r8d, r8d",
    "je      0x10b02d",
    "call    close",
    "test    eax, eax",
    "js      0x10b038",
    "mov     dword [rbp-0x168], edi",
    "call    __errno_location",
    "mov     edi, dword [rbp-0x168]",
    "mov     r15, rax",
    "call    close",
    "test    eax, eax",
    "js      0x10ae1d",
    "call    __errno_location",
    "mov     r15d, dword [rax]",
    "mov     eax, dword [r15]",
    "mov     dword [rbp-0x168], eax",
    "jmp     0x10afff",
    "call    close",
    "mov     rdi, r13",
    "call    free",
    "jmp     0x10b04e",
    "mov     ecx, dword [rbp-0x168]",
    "test    ecx, ecx",
    "je      0x10ae1d",
    "mov     esi, dword [rbp-0x168]",
    "test    esi, esi",
    "sete    r15b",
    "jmp     0x10ae30",
    "mov     rdi, r13",
    "call    free",
    "lea     rax, [rel history_lines_written_to_file]",
    "mov     dword [rax], ebx",
    "jmp     0x10ae4a",
    "lea     rax, [rel history_lines_written_to_file]",
    "mov     dword [rax], ebx",
    "jmp     0x10afa4",
    "mov     rdi, r13",
    "call    free",
    "mov     rdi, r13",
    "call    free",
    "lea     rax, [rel history_lines_written_to_file]",
    "mov     dword [rax], ebx",
    "test    r15b, r15b",
    "je      0x10af97"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
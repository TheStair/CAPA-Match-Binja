{
  "address": "0xa0860",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e",
    "populate SysWhispers2 syscall list/c39b22f6e84241eca7804bd75e10f745"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     dword [rbp-0x38], edi",
    "mov     dword [rbp-0x34], esi",
    "test    edi, edi",
    "je      0xa09c8",
    "add     rsp, 0x18",
    "xor     eax, eax",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "lea     r14, [rel rl_point]",
    "jmp     0xa0911",
    "mov     ebx, dword [rbp-0x34]",
    "mov     edi, 0x1",
    "mov     esi, ebx",
    "call    sub_a0090",
    "mov     esi, ebx",
    "mov     edi, 0x1",
    "mov     r13d, dword [r14]",
    "call    sub_9fb40",
    "mov     r12d, dword [r14]",
    "cmp     r13d, r12d",
    "jg      0xa09c8",
    "mov     esi, r12d",
    "mov     edi, r13d",
    "call    rl_copy_text",
    "mov     rdi, rax",
    "mov     qword [rbp-0x40], rax",
    "call    dirspell",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0xa08d7",
    "mov     rdi, qword [rbp-0x40]",
    "call    free",
    "mov     rdi, rbx",
    "call    free",
    "lea     rax, [rel rl_end]",
    "mov     eax, dword [rax]",
    "cmp     dword [r14], eax",
    "jge     0xa09c8",
    "mov     edi, 0x20",
    "call    malloc",
    "test    rax, rax",
    "je      0xa09d9",
    "sub     dword [rbp-0x38], 0x1",
    "je      0xa09c8",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_11f0f3]  {\"%s: cannot allocate %lu bytes\"}",
    "xor     edi, edi",
    "call    dcgettext",
    "mov     edx, 0x20",
    "lea     rsi, [rel data_11f01e]  {\"xmalloc\"}",
    "mov     rdi, rax",
    "xor     eax, eax",
    "call    fatal_error",
    "{ Does not return }",
    "lea     r15, [rel rl_undo_list]",
    "mov     esi, r12d",
    "mov     edi, r13d",
    "mov     dword [rax+0x18], 0x2",
    "mov     qword [rax+0x8], 0x0",
    "mov     rcx, qword [r15]",
    "mov     qword [rax+0x10], 0x0",
    "mov     qword [r15], rax",
    "mov     qword [rax], rcx",
    "lea     rax, [rel _rl_undo_group_level]",
    "add     dword [rax], 0x1",
    "call    rl_delete_text",
    "mov     dword [r14], r13d",
    "cmp     byte [rbx], 0x0",
    "je      0xa0890",
    "mov     esi, dword [rbp-0x34]",
    "mov     edi, 0x1",
    "call    sub_9fb40",
    "lea     rax, [rel rl_mark]",
    "mov     edi, 0x20",
    "mov     dword [rax], r13d",
    "call    malloc",
    "test    rax, rax",
    "je      0xa09d9",
    "mov     rdi, rbx",
    "call    rl_insert_text",
    "jmp     0xa0890",
    "mov     rcx, qword [r15]",
    "mov     dword [rax+0x18], 0x3",
    "mov     qword [rax+0x8], 0x0",
    "mov     qword [rax], rcx",
    "mov     qword [rax+0x10], 0x0",
    "mov     qword [r15], rax",
    "lea     rax, [rel _rl_undo_group_level]",
    "sub     dword [rax], 0x1"
  ]
}
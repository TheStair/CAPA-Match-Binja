{
  "address": "0xe7940",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/2ca16ccf2c974f3f90e3b8d02944442a"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     ebx, esi",
    "sub     rsp, 0x18",
    "lea     rax, [rel _rl_vi_redoing]",
    "lea     r12, [rel _rl_vimvcxt]",
    "mov     eax, dword [rax]",
    "mov     r13, qword [r12]",
    "test    eax, eax",
    "jne     0xe7ab0",
    "mov     edi, 0x24",
    "call    malloc",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0xe7bcc",
    "test    r13, r13",
    "je      0xe7b58",
    "mov     esi, 0x24",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     r15, [rel rl_point]",
    "lea     rdi, [rel rl_end]",
    "mov     qword [rbp-0x40], r13",
    "mov     r13, r14",
    "movdqa  xmm0, xmmword [rel data_1367a0]",
    "mov     dword [r14+0x10], 0xffffffff",
    "mov     ecx, dword [r15]",
    "movd    xmm2, dword [rdi]",
    "mov     dword [r14+0x1c], ebx",
    "movups  xmmword [r14], xmm0",
    "movd    xmm0, ecx",
    "mov     dword [r14+0x20], 0xffffffff",
    "punpckldq xmm0, xmm2",
    "mov     qword [r12], r14",
    "movq    qword [r14+0x14], xmm0",
    "jmp     0xe79c8",
    "mov     edi, 0x24",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0xe7be4",
    "lea     r15, [rel rl_point]",
    "lea     rdi, [rel rl_end]",
    "mov     dword [r13+0x1c], esi",
    "movdqa  xmm0, xmmword [rel data_1367a0]",
    "mov     dword [r13+0x10], 0xffffffff",
    "mov     ecx, dword [r15]",
    "movd    xmm1, dword [rdi]",
    "mov     dword [r13+0x20], 0xffffffff",
    "movups  xmmword [r13], xmm0",
    "mov     qword [rbp-0x40], 0x0",
    "movd    xmm0, ecx",
    "punpckldq xmm0, xmm1",
    "movq    qword [r13+0x14], xmm0",
    "mov     dword [r13+0x14], ecx",
    "lea     r14, [rel rl_mark]",
    "movzx   ebx, bl",
    "mov     qword [rbp-0x38], rdi",
    "mov     dword [r14], ecx",
    "call    __ctype_b_loc",
    "mov     rdi, qword [rbp-0x38]",
    "mov     rax, qword [rax]",
    "test    byte [rax+rbx*2+0x1], 0x1",
    "jne     0xe7a70",
    "mov     esi, 0x24",
    "lea     rdi, [rel data_11f01e]  {\"xmalloc\"}",
    "xor     eax, eax",
    "call    sub_a7f00",
    "{ Does not return }",
    "lea     r15, [rel rl_point]",
    "lea     rdi, [rel rl_end]",
    "mov     dword [r13+0x1c], ebx",
    "movdqa  xmm0, xmmword [rel data_1367a0]",
    "mov     dword [r13+0x10], 0xffffffff",
    "mov     ecx, dword [r15]",
    "movd    xmm3, dword [rdi]",
    "mov     qword [r12], r13",
    "movups  xmmword [r13], xmm0",
    "movd    xmm0, ecx",
    "mov     dword [r13+0x20], 0xffffffff",
    "punpckldq xmm0, xmm3",
    "mov     qword [rbp-0x40], 0x0",
    "movq    qword [r13+0x14], xmm0",
    "jmp     0xe79c8",
    "mov     dword [r13+0x20], 0x24",
    "mov     rdi, r13",
    "call    sub_e7200",
    "mov     ebx, eax",
    "lea     rax, [rel _rl_vi_redoing]",
    "mov     ebx, dword [rax]",
    "test    ebx, ebx",
    "je      0xe7a50",
    "call    rl_ding",
    "mov     ebx, 0xffffffff",
    "jmp     0xe7a86",
    "mov     rdi, qword [r12]",
    "test    rdi, rdi",
    "je      0xe7a94",
    "lea     rcx, [rel rl_readline_state]",
    "mov     rax, qword [rcx]",
    "test    eax, 0x80000",
    "je      0xe7b20",
    "mov     eax, dword [rel data_16a4c4]",
    "cmp     eax, 0x63",
    "jne     0xe7b40",
    "mov     rax, qword [rbp-0x40]",
    "mov     qword [r12], rax",
    "call    free",
    "call    _rl_bracketed_read_key",
    "mov     dword [r13+0x20], eax",
    "test    eax, eax",
    "js      0xe7bbf",
    "or      rax, 0x100000",
    "mov     qword [rcx], rax",
    "jmp     0xe7a9c",
    "mov     dword [r13+0x20], eax",
    "mov     rdi, r13",
    "call    sub_e7200",
    "mov     ebx, eax",
    "jmp     0xe7a82",
    "mov     eax, dword [rdi]",
    "mov     dword [r13+0x20], 0x63",
    "mov     rdi, r13",
    "mov     dword [r15], 0x0",
    "mov     dword [r14], eax",
    "lea     rax, [rel rl_readline_state]",
    "and     qword [rax], 0xffffffffffefffff",
    "call    sub_e6a80",
    "mov     ebx, eax",
    "test    ebx, ebx",
    "jns     0xe7a86",
    "mov     dword [r13+0x20], 0x0",
    "jmp     0xe7a40",
    "mov     rdi, r13",
    "call    sub_e7360",
    "mov     ebx, eax",
    "jmp     0xe7a82",
    "add     rsp, 0x18",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "test    ebx, ebx",
    "js      0xe7a40"
  ],
  "high level IL": [
    "No High Level IL Loaded"
  ]
}
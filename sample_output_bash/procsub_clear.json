{
  "address": "0x5d200",
  "rules": [
    "write file on Windows/3772193b67764012b0d59bdbe7fe5d9a",
    "validate payment card number using luhn algorithm with no lookup table/62880de69d1941c9b68bc888f21444df",
    "contain loop",
    "connect to WMI namespace via WbemLocator/a82a9565904b4f24bb74c2688f836d4e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "lea     r13, [rbp-0x130]",
    "push    r12",
    "push    rbx",
    "lea     rbx, [rbp-0xb0]",
    "mov     rdi, rbx",
    "sub     rsp, 0x110",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "call    sigemptyset",
    "mov     esi, 0x11",
    "mov     rdi, rbx",
    "call    sigaddset",
    "mov     rdi, r13",
    "call    sigemptyset",
    "mov     rsi, rbx",
    "mov     rdx, r13",
    "xor     edi, edi",
    "call    sigprocmask",
    "lea     r14, [rel procsubs]",
    "mov     rbx, qword [r14]",
    "test    rbx, rbx",
    "je      0x5d292",
    "pxor    xmm0, xmm0",
    "xor     edx, edx",
    "mov     rsi, r13",
    "mov     edi, 0x2",
    "mov     dword [r14+0x10], 0x0",
    "movaps  xmmword [r14], xmm0",
    "call    sigprocmask",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x5d2d0",
    "nop     dword [rax]",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x110",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "mov     rdi, r12",
    "call    free",
    "test    rbx, rbx",
    "jne     0x5d270",
    "call    free",
    "mov     r12, rbx",
    "mov     rbx, qword [rbx]",
    "mov     rdi, qword [r12+0x18]",
    "test    rdi, rdi",
    "je      0x5d285"
  ]
}